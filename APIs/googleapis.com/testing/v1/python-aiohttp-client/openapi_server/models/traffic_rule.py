# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrafficRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bandwidth: float=None, burst: float=None, delay: str=None, packet_duplication_ratio: float=None, packet_loss_ratio: float=None):
        """TrafficRule - a model defined in OpenAPI

        :param bandwidth: The bandwidth of this TrafficRule.
        :param burst: The burst of this TrafficRule.
        :param delay: The delay of this TrafficRule.
        :param packet_duplication_ratio: The packet_duplication_ratio of this TrafficRule.
        :param packet_loss_ratio: The packet_loss_ratio of this TrafficRule.
        """
        self.openapi_types = {
            'bandwidth': float,
            'burst': float,
            'delay': str,
            'packet_duplication_ratio': float,
            'packet_loss_ratio': float
        }

        self.attribute_map = {
            'bandwidth': 'bandwidth',
            'burst': 'burst',
            'delay': 'delay',
            'packet_duplication_ratio': 'packetDuplicationRatio',
            'packet_loss_ratio': 'packetLossRatio'
        }

        self._bandwidth = bandwidth
        self._burst = burst
        self._delay = delay
        self._packet_duplication_ratio = packet_duplication_ratio
        self._packet_loss_ratio = packet_loss_ratio

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrafficRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrafficRule of this TrafficRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bandwidth(self):
        """Gets the bandwidth of this TrafficRule.

        Bandwidth in kbits/second.

        :return: The bandwidth of this TrafficRule.
        :rtype: float
        """
        return self._bandwidth

    @bandwidth.setter
    def bandwidth(self, bandwidth):
        """Sets the bandwidth of this TrafficRule.

        Bandwidth in kbits/second.

        :param bandwidth: The bandwidth of this TrafficRule.
        :type bandwidth: float
        """

        self._bandwidth = bandwidth

    @property
    def burst(self):
        """Gets the burst of this TrafficRule.

        Burst size in kbits.

        :return: The burst of this TrafficRule.
        :rtype: float
        """
        return self._burst

    @burst.setter
    def burst(self, burst):
        """Sets the burst of this TrafficRule.

        Burst size in kbits.

        :param burst: The burst of this TrafficRule.
        :type burst: float
        """

        self._burst = burst

    @property
    def delay(self):
        """Gets the delay of this TrafficRule.

        Packet delay, must be >= 0.

        :return: The delay of this TrafficRule.
        :rtype: str
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this TrafficRule.

        Packet delay, must be >= 0.

        :param delay: The delay of this TrafficRule.
        :type delay: str
        """

        self._delay = delay

    @property
    def packet_duplication_ratio(self):
        """Gets the packet_duplication_ratio of this TrafficRule.

        Packet duplication ratio (0.0 - 1.0).

        :return: The packet_duplication_ratio of this TrafficRule.
        :rtype: float
        """
        return self._packet_duplication_ratio

    @packet_duplication_ratio.setter
    def packet_duplication_ratio(self, packet_duplication_ratio):
        """Sets the packet_duplication_ratio of this TrafficRule.

        Packet duplication ratio (0.0 - 1.0).

        :param packet_duplication_ratio: The packet_duplication_ratio of this TrafficRule.
        :type packet_duplication_ratio: float
        """

        self._packet_duplication_ratio = packet_duplication_ratio

    @property
    def packet_loss_ratio(self):
        """Gets the packet_loss_ratio of this TrafficRule.

        Packet loss ratio (0.0 - 1.0).

        :return: The packet_loss_ratio of this TrafficRule.
        :rtype: float
        """
        return self._packet_loss_ratio

    @packet_loss_ratio.setter
    def packet_loss_ratio(self, packet_loss_ratio):
        """Sets the packet_loss_ratio of this TrafficRule.

        Packet loss ratio (0.0 - 1.0).

        :param packet_loss_ratio: The packet_loss_ratio of this TrafficRule.
        :type packet_loss_ratio: float
        """

        self._packet_loss_ratio = packet_loss_ratio
