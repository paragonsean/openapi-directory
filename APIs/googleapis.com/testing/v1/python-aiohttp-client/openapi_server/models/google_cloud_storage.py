# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudStorage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gcs_path: str=None):
        """GoogleCloudStorage - a model defined in OpenAPI

        :param gcs_path: The gcs_path of this GoogleCloudStorage.
        """
        self.openapi_types = {
            'gcs_path': str
        }

        self.attribute_map = {
            'gcs_path': 'gcsPath'
        }

        self._gcs_path = gcs_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudStorage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudStorage of this GoogleCloudStorage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gcs_path(self):
        """Gets the gcs_path of this GoogleCloudStorage.

        Required. The path to a directory in GCS that will eventually contain the results for this test. The requesting user must have write access on the bucket in the supplied path.

        :return: The gcs_path of this GoogleCloudStorage.
        :rtype: str
        """
        return self._gcs_path

    @gcs_path.setter
    def gcs_path(self, gcs_path):
        """Sets the gcs_path of this GoogleCloudStorage.

        Required. The path to a directory in GCS that will eventually contain the results for this test. The requesting user must have write access on the bucket in the supplied path.

        :param gcs_path: The gcs_path of this GoogleCloudStorage.
        :type gcs_path: str
        """

        self._gcs_path = gcs_path
