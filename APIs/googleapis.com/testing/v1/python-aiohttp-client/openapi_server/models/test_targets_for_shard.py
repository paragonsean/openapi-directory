# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestTargetsForShard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, test_targets: List[str]=None):
        """TestTargetsForShard - a model defined in OpenAPI

        :param test_targets: The test_targets of this TestTargetsForShard.
        """
        self.openapi_types = {
            'test_targets': List[str]
        }

        self.attribute_map = {
            'test_targets': 'testTargets'
        }

        self._test_targets = test_targets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestTargetsForShard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestTargetsForShard of this TestTargetsForShard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def test_targets(self):
        """Gets the test_targets of this TestTargetsForShard.

        Group of packages, classes, and/or test methods to be run for each shard. The targets need to be specified in AndroidJUnitRunner argument format. For example, \"package com.my.packages\" \"class com.my.package.MyClass\". The number of test_targets must be greater than 0.

        :return: The test_targets of this TestTargetsForShard.
        :rtype: List[str]
        """
        return self._test_targets

    @test_targets.setter
    def test_targets(self, test_targets):
        """Sets the test_targets of this TestTargetsForShard.

        Group of packages, classes, and/or test methods to be run for each shard. The targets need to be specified in AndroidJUnitRunner argument format. For example, \"package com.my.packages\" \"class com.my.package.MyClass\". The number of test_targets must be greater than 0.

        :param test_targets: The test_targets of this TestTargetsForShard.
        :type test_targets: List[str]
        """

        self._test_targets = test_targets
