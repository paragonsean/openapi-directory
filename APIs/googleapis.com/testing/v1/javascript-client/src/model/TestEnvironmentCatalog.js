/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AndroidDeviceCatalog from './AndroidDeviceCatalog';
import DeviceIpBlockCatalog from './DeviceIpBlockCatalog';
import IosDeviceCatalog from './IosDeviceCatalog';
import NetworkConfigurationCatalog from './NetworkConfigurationCatalog';
import ProvidedSoftwareCatalog from './ProvidedSoftwareCatalog';

/**
 * The TestEnvironmentCatalog model module.
 * @module model/TestEnvironmentCatalog
 * @version v1
 */
class TestEnvironmentCatalog {
    /**
     * Constructs a new <code>TestEnvironmentCatalog</code>.
     * A description of a test environment.
     * @alias module:model/TestEnvironmentCatalog
     */
    constructor() { 
        
        TestEnvironmentCatalog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestEnvironmentCatalog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestEnvironmentCatalog} obj Optional instance to populate.
     * @return {module:model/TestEnvironmentCatalog} The populated <code>TestEnvironmentCatalog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestEnvironmentCatalog();

            if (data.hasOwnProperty('androidDeviceCatalog')) {
                obj['androidDeviceCatalog'] = AndroidDeviceCatalog.constructFromObject(data['androidDeviceCatalog']);
            }
            if (data.hasOwnProperty('deviceIpBlockCatalog')) {
                obj['deviceIpBlockCatalog'] = DeviceIpBlockCatalog.constructFromObject(data['deviceIpBlockCatalog']);
            }
            if (data.hasOwnProperty('iosDeviceCatalog')) {
                obj['iosDeviceCatalog'] = IosDeviceCatalog.constructFromObject(data['iosDeviceCatalog']);
            }
            if (data.hasOwnProperty('networkConfigurationCatalog')) {
                obj['networkConfigurationCatalog'] = NetworkConfigurationCatalog.constructFromObject(data['networkConfigurationCatalog']);
            }
            if (data.hasOwnProperty('softwareCatalog')) {
                obj['softwareCatalog'] = ProvidedSoftwareCatalog.constructFromObject(data['softwareCatalog']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestEnvironmentCatalog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestEnvironmentCatalog</code>.
     */
    static validateJSON(data) {
        // validate the optional field `androidDeviceCatalog`
        if (data['androidDeviceCatalog']) { // data not null
          AndroidDeviceCatalog.validateJSON(data['androidDeviceCatalog']);
        }
        // validate the optional field `deviceIpBlockCatalog`
        if (data['deviceIpBlockCatalog']) { // data not null
          DeviceIpBlockCatalog.validateJSON(data['deviceIpBlockCatalog']);
        }
        // validate the optional field `iosDeviceCatalog`
        if (data['iosDeviceCatalog']) { // data not null
          IosDeviceCatalog.validateJSON(data['iosDeviceCatalog']);
        }
        // validate the optional field `networkConfigurationCatalog`
        if (data['networkConfigurationCatalog']) { // data not null
          NetworkConfigurationCatalog.validateJSON(data['networkConfigurationCatalog']);
        }
        // validate the optional field `softwareCatalog`
        if (data['softwareCatalog']) { // data not null
          ProvidedSoftwareCatalog.validateJSON(data['softwareCatalog']);
        }

        return true;
    }


}



/**
 * @member {module:model/AndroidDeviceCatalog} androidDeviceCatalog
 */
TestEnvironmentCatalog.prototype['androidDeviceCatalog'] = undefined;

/**
 * @member {module:model/DeviceIpBlockCatalog} deviceIpBlockCatalog
 */
TestEnvironmentCatalog.prototype['deviceIpBlockCatalog'] = undefined;

/**
 * @member {module:model/IosDeviceCatalog} iosDeviceCatalog
 */
TestEnvironmentCatalog.prototype['iosDeviceCatalog'] = undefined;

/**
 * @member {module:model/NetworkConfigurationCatalog} networkConfigurationCatalog
 */
TestEnvironmentCatalog.prototype['networkConfigurationCatalog'] = undefined;

/**
 * @member {module:model/ProvidedSoftwareCatalog} softwareCatalog
 */
TestEnvironmentCatalog.prototype['softwareCatalog'] = undefined;






export default TestEnvironmentCatalog;

