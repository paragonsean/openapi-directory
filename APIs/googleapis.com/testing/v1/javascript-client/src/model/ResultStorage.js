/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudStorage from './GoogleCloudStorage';
import ToolResultsExecution from './ToolResultsExecution';
import ToolResultsHistory from './ToolResultsHistory';

/**
 * The ResultStorage model module.
 * @module model/ResultStorage
 * @version v1
 */
class ResultStorage {
    /**
     * Constructs a new <code>ResultStorage</code>.
     * Locations where the results of running the test are stored.
     * @alias module:model/ResultStorage
     */
    constructor() { 
        
        ResultStorage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResultStorage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResultStorage} obj Optional instance to populate.
     * @return {module:model/ResultStorage} The populated <code>ResultStorage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResultStorage();

            if (data.hasOwnProperty('googleCloudStorage')) {
                obj['googleCloudStorage'] = GoogleCloudStorage.constructFromObject(data['googleCloudStorage']);
            }
            if (data.hasOwnProperty('resultsUrl')) {
                obj['resultsUrl'] = ApiClient.convertToType(data['resultsUrl'], 'String');
            }
            if (data.hasOwnProperty('toolResultsExecution')) {
                obj['toolResultsExecution'] = ToolResultsExecution.constructFromObject(data['toolResultsExecution']);
            }
            if (data.hasOwnProperty('toolResultsHistory')) {
                obj['toolResultsHistory'] = ToolResultsHistory.constructFromObject(data['toolResultsHistory']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResultStorage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResultStorage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `googleCloudStorage`
        if (data['googleCloudStorage']) { // data not null
          GoogleCloudStorage.validateJSON(data['googleCloudStorage']);
        }
        // ensure the json data is a string
        if (data['resultsUrl'] && !(typeof data['resultsUrl'] === 'string' || data['resultsUrl'] instanceof String)) {
            throw new Error("Expected the field `resultsUrl` to be a primitive type in the JSON string but got " + data['resultsUrl']);
        }
        // validate the optional field `toolResultsExecution`
        if (data['toolResultsExecution']) { // data not null
          ToolResultsExecution.validateJSON(data['toolResultsExecution']);
        }
        // validate the optional field `toolResultsHistory`
        if (data['toolResultsHistory']) { // data not null
          ToolResultsHistory.validateJSON(data['toolResultsHistory']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudStorage} googleCloudStorage
 */
ResultStorage.prototype['googleCloudStorage'] = undefined;

/**
 * Output only. URL to the results in the Firebase Web Console.
 * @member {String} resultsUrl
 */
ResultStorage.prototype['resultsUrl'] = undefined;

/**
 * @member {module:model/ToolResultsExecution} toolResultsExecution
 */
ResultStorage.prototype['toolResultsExecution'] = undefined;

/**
 * @member {module:model/ToolResultsHistory} toolResultsHistory
 */
ResultStorage.prototype['toolResultsHistory'] = undefined;






export default ResultStorage;

