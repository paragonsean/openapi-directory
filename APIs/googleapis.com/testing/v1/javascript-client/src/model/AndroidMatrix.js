/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AndroidMatrix model module.
 * @module model/AndroidMatrix
 * @version v1
 */
class AndroidMatrix {
    /**
     * Constructs a new <code>AndroidMatrix</code>.
     * A set of Android device configuration permutations is defined by the the cross-product of the given axes. Internally, the given AndroidMatrix will be expanded into a set of AndroidDevices. Only supported permutations will be instantiated. Invalid permutations (e.g., incompatible models/versions) are ignored.
     * @alias module:model/AndroidMatrix
     */
    constructor() { 
        
        AndroidMatrix.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AndroidMatrix</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AndroidMatrix} obj Optional instance to populate.
     * @return {module:model/AndroidMatrix} The populated <code>AndroidMatrix</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AndroidMatrix();

            if (data.hasOwnProperty('androidModelIds')) {
                obj['androidModelIds'] = ApiClient.convertToType(data['androidModelIds'], ['String']);
            }
            if (data.hasOwnProperty('androidVersionIds')) {
                obj['androidVersionIds'] = ApiClient.convertToType(data['androidVersionIds'], ['String']);
            }
            if (data.hasOwnProperty('locales')) {
                obj['locales'] = ApiClient.convertToType(data['locales'], ['String']);
            }
            if (data.hasOwnProperty('orientations')) {
                obj['orientations'] = ApiClient.convertToType(data['orientations'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AndroidMatrix</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AndroidMatrix</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['androidModelIds'])) {
            throw new Error("Expected the field `androidModelIds` to be an array in the JSON data but got " + data['androidModelIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['androidVersionIds'])) {
            throw new Error("Expected the field `androidVersionIds` to be an array in the JSON data but got " + data['androidVersionIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locales'])) {
            throw new Error("Expected the field `locales` to be an array in the JSON data but got " + data['locales']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['orientations'])) {
            throw new Error("Expected the field `orientations` to be an array in the JSON data but got " + data['orientations']);
        }

        return true;
    }


}



/**
 * Required. The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
 * @member {Array.<String>} androidModelIds
 */
AndroidMatrix.prototype['androidModelIds'] = undefined;

/**
 * Required. The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
 * @member {Array.<String>} androidVersionIds
 */
AndroidMatrix.prototype['androidVersionIds'] = undefined;

/**
 * Required. The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.
 * @member {Array.<String>} locales
 */
AndroidMatrix.prototype['locales'] = undefined;

/**
 * Required. The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.
 * @member {Array.<String>} orientations
 */
AndroidMatrix.prototype['orientations'] = undefined;






export default AndroidMatrix;

