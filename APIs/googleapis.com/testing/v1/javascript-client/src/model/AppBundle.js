/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileReference from './FileReference';

/**
 * The AppBundle model module.
 * @module model/AppBundle
 * @version v1
 */
class AppBundle {
    /**
     * Constructs a new <code>AppBundle</code>.
     * An Android App Bundle file format, containing a BundleConfig.pb file, a base module directory, zero or more dynamic feature module directories. See https://developer.android.com/guide/app-bundle/build for guidance on building App Bundles.
     * @alias module:model/AppBundle
     */
    constructor() { 
        
        AppBundle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppBundle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppBundle} obj Optional instance to populate.
     * @return {module:model/AppBundle} The populated <code>AppBundle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppBundle();

            if (data.hasOwnProperty('bundleLocation')) {
                obj['bundleLocation'] = FileReference.constructFromObject(data['bundleLocation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppBundle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppBundle</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bundleLocation`
        if (data['bundleLocation']) { // data not null
          FileReference.validateJSON(data['bundleLocation']);
        }

        return true;
    }


}



/**
 * @member {module:model/FileReference} bundleLocation
 */
AppBundle.prototype['bundleLocation'] = undefined;






export default AppBundle;

