/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileReference from './FileReference';

/**
 * The IosTestLoop model module.
 * @module model/IosTestLoop
 * @version v1
 */
class IosTestLoop {
    /**
     * Constructs a new <code>IosTestLoop</code>.
     * A test of an iOS application that implements one or more game loop scenarios. This test type accepts an archived application (.ipa file) and a list of integer scenarios that will be executed on the app sequentially.
     * @alias module:model/IosTestLoop
     */
    constructor() { 
        
        IosTestLoop.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IosTestLoop</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IosTestLoop} obj Optional instance to populate.
     * @return {module:model/IosTestLoop} The populated <code>IosTestLoop</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IosTestLoop();

            if (data.hasOwnProperty('appBundleId')) {
                obj['appBundleId'] = ApiClient.convertToType(data['appBundleId'], 'String');
            }
            if (data.hasOwnProperty('appIpa')) {
                obj['appIpa'] = FileReference.constructFromObject(data['appIpa']);
            }
            if (data.hasOwnProperty('scenarios')) {
                obj['scenarios'] = ApiClient.convertToType(data['scenarios'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IosTestLoop</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IosTestLoop</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appBundleId'] && !(typeof data['appBundleId'] === 'string' || data['appBundleId'] instanceof String)) {
            throw new Error("Expected the field `appBundleId` to be a primitive type in the JSON string but got " + data['appBundleId']);
        }
        // validate the optional field `appIpa`
        if (data['appIpa']) { // data not null
          FileReference.validateJSON(data['appIpa']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scenarios'])) {
            throw new Error("Expected the field `scenarios` to be an array in the JSON data but got " + data['scenarios']);
        }

        return true;
    }


}



/**
 * Output only. The bundle id for the application under test.
 * @member {String} appBundleId
 */
IosTestLoop.prototype['appBundleId'] = undefined;

/**
 * @member {module:model/FileReference} appIpa
 */
IosTestLoop.prototype['appIpa'] = undefined;

/**
 * The list of scenarios that should be run during the test. Defaults to the single scenario 0 if unspecified.
 * @member {Array.<Number>} scenarios
 */
IosTestLoop.prototype['scenarios'] = undefined;






export default IosTestLoop;

