/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TestTargetsForShard from './TestTargetsForShard';

/**
 * The Shard model module.
 * @module model/Shard
 * @version v1
 */
class Shard {
    /**
     * Constructs a new <code>Shard</code>.
     * Output only. Details about the shard.
     * @alias module:model/Shard
     */
    constructor() { 
        
        Shard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Shard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Shard} obj Optional instance to populate.
     * @return {module:model/Shard} The populated <code>Shard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Shard();

            if (data.hasOwnProperty('estimatedShardDuration')) {
                obj['estimatedShardDuration'] = ApiClient.convertToType(data['estimatedShardDuration'], 'String');
            }
            if (data.hasOwnProperty('numShards')) {
                obj['numShards'] = ApiClient.convertToType(data['numShards'], 'Number');
            }
            if (data.hasOwnProperty('shardIndex')) {
                obj['shardIndex'] = ApiClient.convertToType(data['shardIndex'], 'Number');
            }
            if (data.hasOwnProperty('testTargetsForShard')) {
                obj['testTargetsForShard'] = TestTargetsForShard.constructFromObject(data['testTargetsForShard']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Shard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Shard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['estimatedShardDuration'] && !(typeof data['estimatedShardDuration'] === 'string' || data['estimatedShardDuration'] instanceof String)) {
            throw new Error("Expected the field `estimatedShardDuration` to be a primitive type in the JSON string but got " + data['estimatedShardDuration']);
        }
        // validate the optional field `testTargetsForShard`
        if (data['testTargetsForShard']) { // data not null
          TestTargetsForShard.validateJSON(data['testTargetsForShard']);
        }

        return true;
    }


}



/**
 * Output only. The estimated shard duration based on previous test case timing records, if available.
 * @member {String} estimatedShardDuration
 */
Shard.prototype['estimatedShardDuration'] = undefined;

/**
 * Output only. The total number of shards.
 * @member {Number} numShards
 */
Shard.prototype['numShards'] = undefined;

/**
 * Output only. The index of the shard among all the shards.
 * @member {Number} shardIndex
 */
Shard.prototype['shardIndex'] = undefined;

/**
 * @member {module:model/TestTargetsForShard} testTargetsForShard
 */
Shard.prototype['testTargetsForShard'] = undefined;






export default Shard;

