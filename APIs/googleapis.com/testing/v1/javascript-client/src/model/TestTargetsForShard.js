/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestTargetsForShard model module.
 * @module model/TestTargetsForShard
 * @version v1
 */
class TestTargetsForShard {
    /**
     * Constructs a new <code>TestTargetsForShard</code>.
     * Test targets for a shard.
     * @alias module:model/TestTargetsForShard
     */
    constructor() { 
        
        TestTargetsForShard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestTargetsForShard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestTargetsForShard} obj Optional instance to populate.
     * @return {module:model/TestTargetsForShard} The populated <code>TestTargetsForShard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestTargetsForShard();

            if (data.hasOwnProperty('testTargets')) {
                obj['testTargets'] = ApiClient.convertToType(data['testTargets'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestTargetsForShard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestTargetsForShard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['testTargets'])) {
            throw new Error("Expected the field `testTargets` to be an array in the JSON data but got " + data['testTargets']);
        }

        return true;
    }


}



/**
 * Group of packages, classes, and/or test methods to be run for each shard. The targets need to be specified in AndroidJUnitRunner argument format. For example, \"package com.my.packages\" \"class com.my.package.MyClass\". The number of test_targets must be greater than 0.
 * @member {Array.<String>} testTargets
 */
TestTargetsForShard.prototype['testTargets'] = undefined;






export default TestTargetsForShard;

