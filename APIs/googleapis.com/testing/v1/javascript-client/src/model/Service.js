/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IntentFilter from './IntentFilter';

/**
 * The Service model module.
 * @module model/Service
 * @version v1
 */
class Service {
    /**
     * Constructs a new <code>Service</code>.
     * The section of an tag. https://developer.android.com/guide/topics/manifest/service-element
     * @alias module:model/Service
     */
    constructor() { 
        
        Service.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Service</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Service} obj Optional instance to populate.
     * @return {module:model/Service} The populated <code>Service</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Service();

            if (data.hasOwnProperty('intentFilter')) {
                obj['intentFilter'] = ApiClient.convertToType(data['intentFilter'], [IntentFilter]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Service</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Service</code>.
     */
    static validateJSON(data) {
        if (data['intentFilter']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['intentFilter'])) {
                throw new Error("Expected the field `intentFilter` to be an array in the JSON data but got " + data['intentFilter']);
            }
            // validate the optional field `intentFilter` (array)
            for (const item of data['intentFilter']) {
                IntentFilter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Intent filters in the service
 * @member {Array.<module:model/IntentFilter>} intentFilter
 */
Service.prototype['intentFilter'] = undefined;

/**
 * The android:name value
 * @member {String} name
 */
Service.prototype['name'] = undefined;






export default Service;

