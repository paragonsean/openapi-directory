/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Locale from './Locale';
import Orientation from './Orientation';

/**
 * The IosRuntimeConfiguration model module.
 * @module model/IosRuntimeConfiguration
 * @version v1
 */
class IosRuntimeConfiguration {
    /**
     * Constructs a new <code>IosRuntimeConfiguration</code>.
     * iOS configuration that can be selected at the time a test is run.
     * @alias module:model/IosRuntimeConfiguration
     */
    constructor() { 
        
        IosRuntimeConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IosRuntimeConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IosRuntimeConfiguration} obj Optional instance to populate.
     * @return {module:model/IosRuntimeConfiguration} The populated <code>IosRuntimeConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IosRuntimeConfiguration();

            if (data.hasOwnProperty('locales')) {
                obj['locales'] = ApiClient.convertToType(data['locales'], [Locale]);
            }
            if (data.hasOwnProperty('orientations')) {
                obj['orientations'] = ApiClient.convertToType(data['orientations'], [Orientation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IosRuntimeConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IosRuntimeConfiguration</code>.
     */
    static validateJSON(data) {
        if (data['locales']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['locales'])) {
                throw new Error("Expected the field `locales` to be an array in the JSON data but got " + data['locales']);
            }
            // validate the optional field `locales` (array)
            for (const item of data['locales']) {
                Locale.validateJSON(item);
            };
        }
        if (data['orientations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['orientations'])) {
                throw new Error("Expected the field `orientations` to be an array in the JSON data but got " + data['orientations']);
            }
            // validate the optional field `orientations` (array)
            for (const item of data['orientations']) {
                Orientation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The set of available locales.
 * @member {Array.<module:model/Locale>} locales
 */
IosRuntimeConfiguration.prototype['locales'] = undefined;

/**
 * The set of available orientations.
 * @member {Array.<module:model/Orientation>} orientations
 */
IosRuntimeConfiguration.prototype['orientations'] = undefined;






export default IosRuntimeConfiguration;

