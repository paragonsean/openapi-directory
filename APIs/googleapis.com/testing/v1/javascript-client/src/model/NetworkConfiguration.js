/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrafficRule from './TrafficRule';

/**
 * The NetworkConfiguration model module.
 * @module model/NetworkConfiguration
 * @version v1
 */
class NetworkConfiguration {
    /**
     * Constructs a new <code>NetworkConfiguration</code>.
     * @alias module:model/NetworkConfiguration
     */
    constructor() { 
        
        NetworkConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkConfiguration} obj Optional instance to populate.
     * @return {module:model/NetworkConfiguration} The populated <code>NetworkConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkConfiguration();

            if (data.hasOwnProperty('downRule')) {
                obj['downRule'] = TrafficRule.constructFromObject(data['downRule']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('upRule')) {
                obj['upRule'] = TrafficRule.constructFromObject(data['upRule']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `downRule`
        if (data['downRule']) { // data not null
          TrafficRule.validateJSON(data['downRule']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `upRule`
        if (data['upRule']) { // data not null
          TrafficRule.validateJSON(data['upRule']);
        }

        return true;
    }


}



/**
 * @member {module:model/TrafficRule} downRule
 */
NetworkConfiguration.prototype['downRule'] = undefined;

/**
 * The unique opaque id for this network traffic configuration.
 * @member {String} id
 */
NetworkConfiguration.prototype['id'] = undefined;

/**
 * @member {module:model/TrafficRule} upRule
 */
NetworkConfiguration.prototype['upRule'] = undefined;






export default NetworkConfiguration;

