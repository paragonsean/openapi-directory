/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProvidedSoftwareCatalog model module.
 * @module model/ProvidedSoftwareCatalog
 * @version v1
 */
class ProvidedSoftwareCatalog {
    /**
     * Constructs a new <code>ProvidedSoftwareCatalog</code>.
     * The currently provided software environment on the devices under test.
     * @alias module:model/ProvidedSoftwareCatalog
     */
    constructor() { 
        
        ProvidedSoftwareCatalog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProvidedSoftwareCatalog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvidedSoftwareCatalog} obj Optional instance to populate.
     * @return {module:model/ProvidedSoftwareCatalog} The populated <code>ProvidedSoftwareCatalog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvidedSoftwareCatalog();

            if (data.hasOwnProperty('androidxOrchestratorVersion')) {
                obj['androidxOrchestratorVersion'] = ApiClient.convertToType(data['androidxOrchestratorVersion'], 'String');
            }
            if (data.hasOwnProperty('orchestratorVersion')) {
                obj['orchestratorVersion'] = ApiClient.convertToType(data['orchestratorVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvidedSoftwareCatalog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvidedSoftwareCatalog</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['androidxOrchestratorVersion'] && !(typeof data['androidxOrchestratorVersion'] === 'string' || data['androidxOrchestratorVersion'] instanceof String)) {
            throw new Error("Expected the field `androidxOrchestratorVersion` to be a primitive type in the JSON string but got " + data['androidxOrchestratorVersion']);
        }
        // ensure the json data is a string
        if (data['orchestratorVersion'] && !(typeof data['orchestratorVersion'] === 'string' || data['orchestratorVersion'] instanceof String)) {
            throw new Error("Expected the field `orchestratorVersion` to be a primitive type in the JSON string but got " + data['orchestratorVersion']);
        }

        return true;
    }


}



/**
 * A string representing the current version of AndroidX Test Orchestrator that is used in the environment. The package is available at https://maven.google.com/web/index.html#androidx.test:orchestrator.
 * @member {String} androidxOrchestratorVersion
 */
ProvidedSoftwareCatalog.prototype['androidxOrchestratorVersion'] = undefined;

/**
 * Deprecated: Use AndroidX Test Orchestrator going forward. A string representing the current version of Android Test Orchestrator that is used in the environment. The package is available at https://maven.google.com/web/index.html#com.android.support.test:orchestrator.
 * @member {String} orchestratorVersion
 */
ProvidedSoftwareCatalog.prototype['orchestratorVersion'] = undefined;






export default ProvidedSoftwareCatalog;

