/**
 * Cloud Testing API
 * Allows developers to run automated tests for their mobile applications on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StartActivityIntent from './StartActivityIntent';

/**
 * The RoboStartingIntent model module.
 * @module model/RoboStartingIntent
 * @version v1
 */
class RoboStartingIntent {
    /**
     * Constructs a new <code>RoboStartingIntent</code>.
     * Message for specifying the start activities to crawl.
     * @alias module:model/RoboStartingIntent
     */
    constructor() { 
        
        RoboStartingIntent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RoboStartingIntent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoboStartingIntent} obj Optional instance to populate.
     * @return {module:model/RoboStartingIntent} The populated <code>RoboStartingIntent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoboStartingIntent();

            if (data.hasOwnProperty('launcherActivity')) {
                obj['launcherActivity'] = ApiClient.convertToType(data['launcherActivity'], Object);
            }
            if (data.hasOwnProperty('noActivity')) {
                obj['noActivity'] = ApiClient.convertToType(data['noActivity'], Object);
            }
            if (data.hasOwnProperty('startActivity')) {
                obj['startActivity'] = StartActivityIntent.constructFromObject(data['startActivity']);
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoboStartingIntent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoboStartingIntent</code>.
     */
    static validateJSON(data) {
        // validate the optional field `startActivity`
        if (data['startActivity']) { // data not null
          StartActivityIntent.validateJSON(data['startActivity']);
        }
        // ensure the json data is a string
        if (data['timeout'] && !(typeof data['timeout'] === 'string' || data['timeout'] instanceof String)) {
            throw new Error("Expected the field `timeout` to be a primitive type in the JSON string but got " + data['timeout']);
        }

        return true;
    }


}



/**
 * Specifies an intent that starts the main launcher activity.
 * @member {Object} launcherActivity
 */
RoboStartingIntent.prototype['launcherActivity'] = undefined;

/**
 * Skips the starting activity
 * @member {Object} noActivity
 */
RoboStartingIntent.prototype['noActivity'] = undefined;

/**
 * @member {module:model/StartActivityIntent} startActivity
 */
RoboStartingIntent.prototype['startActivity'] = undefined;

/**
 * Timeout in seconds for each intent.
 * @member {String} timeout
 */
RoboStartingIntent.prototype['timeout'] = undefined;






export default RoboStartingIntent;

