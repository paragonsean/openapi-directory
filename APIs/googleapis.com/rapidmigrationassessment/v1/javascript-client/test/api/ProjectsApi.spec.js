/**
 * Rapid Migration Assessment API
 * The Rapid Migration Assessment service is our first-party migration assessment and planning tool.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RapidMigrationAssessmentApi);
  }
}(this, function(expect, RapidMigrationAssessmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RapidMigrationAssessmentApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('rapidmigrationassessmentProjectsLocationsAnnotationsCreate', function() {
      it('should call rapidmigrationassessmentProjectsLocationsAnnotationsCreate successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsAnnotationsCreate
        //instance.rapidmigrationassessmentProjectsLocationsAnnotationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsCollectorsCreate', function() {
      it('should call rapidmigrationassessmentProjectsLocationsCollectorsCreate successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsCollectorsCreate
        //instance.rapidmigrationassessmentProjectsLocationsCollectorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsCollectorsList', function() {
      it('should call rapidmigrationassessmentProjectsLocationsCollectorsList successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsCollectorsList
        //instance.rapidmigrationassessmentProjectsLocationsCollectorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsCollectorsPatch', function() {
      it('should call rapidmigrationassessmentProjectsLocationsCollectorsPatch successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsCollectorsPatch
        //instance.rapidmigrationassessmentProjectsLocationsCollectorsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsCollectorsPause', function() {
      it('should call rapidmigrationassessmentProjectsLocationsCollectorsPause successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsCollectorsPause
        //instance.rapidmigrationassessmentProjectsLocationsCollectorsPause(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsCollectorsRegister', function() {
      it('should call rapidmigrationassessmentProjectsLocationsCollectorsRegister successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsCollectorsRegister
        //instance.rapidmigrationassessmentProjectsLocationsCollectorsRegister(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsCollectorsResume', function() {
      it('should call rapidmigrationassessmentProjectsLocationsCollectorsResume successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsCollectorsResume
        //instance.rapidmigrationassessmentProjectsLocationsCollectorsResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsList', function() {
      it('should call rapidmigrationassessmentProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsList
        //instance.rapidmigrationassessmentProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsOperationsCancel', function() {
      it('should call rapidmigrationassessmentProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsOperationsCancel
        //instance.rapidmigrationassessmentProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsOperationsDelete', function() {
      it('should call rapidmigrationassessmentProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsOperationsDelete
        //instance.rapidmigrationassessmentProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsOperationsGet', function() {
      it('should call rapidmigrationassessmentProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsOperationsGet
        //instance.rapidmigrationassessmentProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rapidmigrationassessmentProjectsLocationsOperationsList', function() {
      it('should call rapidmigrationassessmentProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test rapidmigrationassessmentProjectsLocationsOperationsList
        //instance.rapidmigrationassessmentProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
