/**
 * Rapid Migration Assessment API
 * The Rapid Migration Assessment service is our first-party migration assessment and planning tool.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RapidMigrationAssessmentApi);
  }
}(this, function(expect, RapidMigrationAssessmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RapidMigrationAssessmentApi.Collector();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Collector', function() {
    it('should create an instance of Collector', function() {
      // uncomment below and update the code to test Collector
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be.a(RapidMigrationAssessmentApi.Collector);
    });

    it('should have the property bucket (base name: "bucket")', function() {
      // uncomment below and update the code to test the property bucket
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property clientVersion (base name: "clientVersion")', function() {
      // uncomment below and update the code to test the property clientVersion
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property collectionDays (base name: "collectionDays")', function() {
      // uncomment below and update the code to test the property collectionDays
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property eulaUri (base name: "eulaUri")', function() {
      // uncomment below and update the code to test the property eulaUri
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property expectedAssetCount (base name: "expectedAssetCount")', function() {
      // uncomment below and update the code to test the property expectedAssetCount
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property guestOsScan (base name: "guestOsScan")', function() {
      // uncomment below and update the code to test the property guestOsScan
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property serviceAccount (base name: "serviceAccount")', function() {
      // uncomment below and update the code to test the property serviceAccount
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

    it('should have the property vsphereScan (base name: "vsphereScan")', function() {
      // uncomment below and update the code to test the property vsphereScan
      //var instance = new RapidMigrationAssessmentApi.Collector();
      //expect(instance).to.be();
    });

  });

}));
