/**
 * Rapid Migration Assessment API
 * The Rapid Migration Assessment service is our first-party migration assessment and planning tool.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GuestOsScan from './GuestOsScan';
import VSphereScan from './VSphereScan';

/**
 * The Collector model module.
 * @module model/Collector
 * @version v1
 */
class Collector {
    /**
     * Constructs a new <code>Collector</code>.
     * Message describing Collector object.
     * @alias module:model/Collector
     */
    constructor() { 
        
        Collector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Collector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Collector} obj Optional instance to populate.
     * @return {module:model/Collector} The populated <code>Collector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Collector();

            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = ApiClient.convertToType(data['bucket'], 'String');
            }
            if (data.hasOwnProperty('clientVersion')) {
                obj['clientVersion'] = ApiClient.convertToType(data['clientVersion'], 'String');
            }
            if (data.hasOwnProperty('collectionDays')) {
                obj['collectionDays'] = ApiClient.convertToType(data['collectionDays'], 'Number');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('eulaUri')) {
                obj['eulaUri'] = ApiClient.convertToType(data['eulaUri'], 'String');
            }
            if (data.hasOwnProperty('expectedAssetCount')) {
                obj['expectedAssetCount'] = ApiClient.convertToType(data['expectedAssetCount'], 'String');
            }
            if (data.hasOwnProperty('guestOsScan')) {
                obj['guestOsScan'] = GuestOsScan.constructFromObject(data['guestOsScan']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('vsphereScan')) {
                obj['vsphereScan'] = VSphereScan.constructFromObject(data['vsphereScan']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Collector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Collector</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bucket'] && !(typeof data['bucket'] === 'string' || data['bucket'] instanceof String)) {
            throw new Error("Expected the field `bucket` to be a primitive type in the JSON string but got " + data['bucket']);
        }
        // ensure the json data is a string
        if (data['clientVersion'] && !(typeof data['clientVersion'] === 'string' || data['clientVersion'] instanceof String)) {
            throw new Error("Expected the field `clientVersion` to be a primitive type in the JSON string but got " + data['clientVersion']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['eulaUri'] && !(typeof data['eulaUri'] === 'string' || data['eulaUri'] instanceof String)) {
            throw new Error("Expected the field `eulaUri` to be a primitive type in the JSON string but got " + data['eulaUri']);
        }
        // ensure the json data is a string
        if (data['expectedAssetCount'] && !(typeof data['expectedAssetCount'] === 'string' || data['expectedAssetCount'] instanceof String)) {
            throw new Error("Expected the field `expectedAssetCount` to be a primitive type in the JSON string but got " + data['expectedAssetCount']);
        }
        // validate the optional field `guestOsScan`
        if (data['guestOsScan']) { // data not null
          GuestOsScan.validateJSON(data['guestOsScan']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `vsphereScan`
        if (data['vsphereScan']) { // data not null
          VSphereScan.validateJSON(data['vsphereScan']);
        }

        return true;
    }


}



/**
 * Output only. Store cloud storage bucket name (which is a guid) created with this Collector.
 * @member {String} bucket
 */
Collector.prototype['bucket'] = undefined;

/**
 * Output only. Client version.
 * @member {String} clientVersion
 */
Collector.prototype['clientVersion'] = undefined;

/**
 * How many days to collect data.
 * @member {Number} collectionDays
 */
Collector.prototype['collectionDays'] = undefined;

/**
 * Output only. Create time stamp.
 * @member {String} createTime
 */
Collector.prototype['createTime'] = undefined;

/**
 * User specified description of the Collector.
 * @member {String} description
 */
Collector.prototype['description'] = undefined;

/**
 * User specified name of the Collector.
 * @member {String} displayName
 */
Collector.prototype['displayName'] = undefined;

/**
 * Uri for EULA (End User License Agreement) from customer.
 * @member {String} eulaUri
 */
Collector.prototype['eulaUri'] = undefined;

/**
 * User specified expected asset count.
 * @member {String} expectedAssetCount
 */
Collector.prototype['expectedAssetCount'] = undefined;

/**
 * @member {module:model/GuestOsScan} guestOsScan
 */
Collector.prototype['guestOsScan'] = undefined;

/**
 * Labels as key value pairs.
 * @member {Object.<String, String>} labels
 */
Collector.prototype['labels'] = undefined;

/**
 * name of resource.
 * @member {String} name
 */
Collector.prototype['name'] = undefined;

/**
 * Service Account email used to ingest data to this Collector.
 * @member {String} serviceAccount
 */
Collector.prototype['serviceAccount'] = undefined;

/**
 * Output only. State of the Collector.
 * @member {module:model/Collector.StateEnum} state
 */
Collector.prototype['state'] = undefined;

/**
 * Output only. Update time stamp.
 * @member {String} updateTime
 */
Collector.prototype['updateTime'] = undefined;

/**
 * @member {module:model/VSphereScan} vsphereScan
 */
Collector.prototype['vsphereScan'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Collector['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "STATE_INITIALIZING"
     * @const
     */
    "INITIALIZING": "STATE_INITIALIZING",

    /**
     * value: "STATE_READY_TO_USE"
     * @const
     */
    "READY_TO_USE": "STATE_READY_TO_USE",

    /**
     * value: "STATE_REGISTERED"
     * @const
     */
    "REGISTERED": "STATE_REGISTERED",

    /**
     * value: "STATE_ACTIVE"
     * @const
     */
    "ACTIVE": "STATE_ACTIVE",

    /**
     * value: "STATE_PAUSED"
     * @const
     */
    "PAUSED": "STATE_PAUSED",

    /**
     * value: "STATE_DELETING"
     * @const
     */
    "DELETING": "STATE_DELETING",

    /**
     * value: "STATE_DECOMMISSIONED"
     * @const
     */
    "DECOMMISSIONED": "STATE_DECOMMISSIONED",

    /**
     * value: "STATE_ERROR"
     * @const
     */
    "ERROR": "STATE_ERROR"
};



export default Collector;

