/**
 * Rapid Migration Assessment API
 * The Rapid Migration Assessment service is our first-party migration assessment and planning tool.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGuestOsScan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGuestOsScan::OAIGuestOsScan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGuestOsScan::OAIGuestOsScan() {
    this->initializeModel();
}

OAIGuestOsScan::~OAIGuestOsScan() {}

void OAIGuestOsScan::initializeModel() {

    m_core_source_isSet = false;
    m_core_source_isValid = false;
}

void OAIGuestOsScan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGuestOsScan::fromJsonObject(QJsonObject json) {

    m_core_source_isValid = ::OpenAPI::fromJsonValue(m_core_source, json[QString("coreSource")]);
    m_core_source_isSet = !json[QString("coreSource")].isNull() && m_core_source_isValid;
}

QString OAIGuestOsScan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGuestOsScan::asJsonObject() const {
    QJsonObject obj;
    if (m_core_source_isSet) {
        obj.insert(QString("coreSource"), ::OpenAPI::toJsonValue(m_core_source));
    }
    return obj;
}

QString OAIGuestOsScan::getCoreSource() const {
    return m_core_source;
}
void OAIGuestOsScan::setCoreSource(const QString &core_source) {
    m_core_source = core_source;
    m_core_source_isSet = true;
}

bool OAIGuestOsScan::is_core_source_Set() const{
    return m_core_source_isSet;
}

bool OAIGuestOsScan::is_core_source_Valid() const{
    return m_core_source_isValid;
}

bool OAIGuestOsScan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_core_source_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGuestOsScan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
