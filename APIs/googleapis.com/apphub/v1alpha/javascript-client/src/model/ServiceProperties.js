/**
 * App Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceProperties model module.
 * @module model/ServiceProperties
 * @version v1alpha
 */
class ServiceProperties {
    /**
     * Constructs a new <code>ServiceProperties</code>.
     * Properties of an underlying cloud resource that can comprise a Service.
     * @alias module:model/ServiceProperties
     */
    constructor() { 
        
        ServiceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceProperties} obj Optional instance to populate.
     * @return {module:model/ServiceProperties} The populated <code>ServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceProperties();

            if (data.hasOwnProperty('gcpProject')) {
                obj['gcpProject'] = ApiClient.convertToType(data['gcpProject'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('zone')) {
                obj['zone'] = ApiClient.convertToType(data['zone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gcpProject'] && !(typeof data['gcpProject'] === 'string' || data['gcpProject'] instanceof String)) {
            throw new Error("Expected the field `gcpProject` to be a primitive type in the JSON string but got " + data['gcpProject']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['zone'] && !(typeof data['zone'] === 'string' || data['zone'] instanceof String)) {
            throw new Error("Expected the field `zone` to be a primitive type in the JSON string but got " + data['zone']);
        }

        return true;
    }


}



/**
 * Output only. The service project identifier that the underlying cloud resource resides in.
 * @member {String} gcpProject
 */
ServiceProperties.prototype['gcpProject'] = undefined;

/**
 * Output only. The location that the underlying resource resides in, for example, us-west1.
 * @member {String} location
 */
ServiceProperties.prototype['location'] = undefined;

/**
 * Output only. The location that the underlying resource resides in if it is zonal, for example, us-west1-a).
 * @member {String} zone
 */
ServiceProperties.prototype['zone'] = undefined;






export default ServiceProperties;

