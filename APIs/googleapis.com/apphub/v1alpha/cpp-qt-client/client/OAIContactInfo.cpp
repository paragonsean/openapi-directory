/**
 * App Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactInfo::OAIContactInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactInfo::OAIContactInfo() {
    this->initializeModel();
}

OAIContactInfo::~OAIContactInfo() {}

void OAIContactInfo::initializeModel() {

    m_channel_isSet = false;
    m_channel_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;
}

void OAIContactInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactInfo::fromJsonObject(QJsonObject json) {

    m_channel_isValid = ::OpenAPI::fromJsonValue(m_channel, json[QString("channel")]);
    m_channel_isSet = !json[QString("channel")].isNull() && m_channel_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;
}

QString OAIContactInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_channel.isSet()) {
        obj.insert(QString("channel"), ::OpenAPI::toJsonValue(m_channel));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    return obj;
}

OAIChannel OAIContactInfo::getChannel() const {
    return m_channel;
}
void OAIContactInfo::setChannel(const OAIChannel &channel) {
    m_channel = channel;
    m_channel_isSet = true;
}

bool OAIContactInfo::is_channel_Set() const{
    return m_channel_isSet;
}

bool OAIContactInfo::is_channel_Valid() const{
    return m_channel_isValid;
}

QString OAIContactInfo::getDisplayName() const {
    return m_display_name;
}
void OAIContactInfo::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIContactInfo::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIContactInfo::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIContactInfo::getEmail() const {
    return m_email;
}
void OAIContactInfo::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContactInfo::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContactInfo::is_email_Valid() const{
    return m_email_isValid;
}

bool OAIContactInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
