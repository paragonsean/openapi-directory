/**
 * Smart Device Management API
 * Allow select enterprise partners to access, control, and manage Google and Nest devices programmatically.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest from '../model/GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest';
import GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse from '../model/GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse';
import GoogleHomeEnterpriseSdmV1ListDevicesResponse from '../model/GoogleHomeEnterpriseSdmV1ListDevicesResponse';
import GoogleHomeEnterpriseSdmV1ListRoomsResponse from '../model/GoogleHomeEnterpriseSdmV1ListRoomsResponse';
import GoogleHomeEnterpriseSdmV1ListStructuresResponse from '../model/GoogleHomeEnterpriseSdmV1ListStructuresResponse';
import GoogleHomeEnterpriseSdmV1Room from '../model/GoogleHomeEnterpriseSdmV1Room';

/**
* Enterprises service.
* @module api/EnterprisesApi
* @version v1
*/
export default class EnterprisesApi {

    /**
    * Constructs a new EnterprisesApi. 
    * @alias module:api/EnterprisesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the smartdevicemanagementEnterprisesDevicesExecuteCommand operation.
     * @callback module:api/EnterprisesApi~smartdevicemanagementEnterprisesDevicesExecuteCommandCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Executes a command to device managed by the enterprise.
     * @param {String} name The name of the device requested. For example: \"enterprises/XYZ/devices/123\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest} [googleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest] 
     * @param {module:api/EnterprisesApi~smartdevicemanagementEnterprisesDevicesExecuteCommandCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse}
     */
    smartdevicemanagementEnterprisesDevicesExecuteCommand(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleHomeEnterpriseSdmV1ExecuteDeviceCommandRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling smartdevicemanagementEnterprisesDevicesExecuteCommand");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleHomeEnterpriseSdmV1ExecuteDeviceCommandResponse;
      return this.apiClient.callApi(
        '/v1/{name}:executeCommand', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the smartdevicemanagementEnterprisesDevicesList operation.
     * @callback module:api/EnterprisesApi~smartdevicemanagementEnterprisesDevicesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleHomeEnterpriseSdmV1ListDevicesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists devices managed by the enterprise.
     * @param {String} parent The parent enterprise to list devices under. E.g. \"enterprises/XYZ\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional filter to list devices. Filters can be done on: Device custom name (substring match): 'customName=wing'
     * @param {module:api/EnterprisesApi~smartdevicemanagementEnterprisesDevicesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleHomeEnterpriseSdmV1ListDevicesResponse}
     */
    smartdevicemanagementEnterprisesDevicesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling smartdevicemanagementEnterprisesDevicesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleHomeEnterpriseSdmV1ListDevicesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/devices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the smartdevicemanagementEnterprisesStructuresList operation.
     * @callback module:api/EnterprisesApi~smartdevicemanagementEnterprisesStructuresListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleHomeEnterpriseSdmV1ListStructuresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists structures managed by the enterprise.
     * @param {String} parent The parent enterprise to list structures under. E.g. \"enterprises/XYZ\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional filter to list structures.
     * @param {module:api/EnterprisesApi~smartdevicemanagementEnterprisesStructuresListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleHomeEnterpriseSdmV1ListStructuresResponse}
     */
    smartdevicemanagementEnterprisesStructuresList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling smartdevicemanagementEnterprisesStructuresList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleHomeEnterpriseSdmV1ListStructuresResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/structures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the smartdevicemanagementEnterprisesStructuresRoomsGet operation.
     * @callback module:api/EnterprisesApi~smartdevicemanagementEnterprisesStructuresRoomsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleHomeEnterpriseSdmV1Room} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a room managed by the enterprise.
     * @param {String} name The name of the room requested. For example: \"enterprises/XYZ/structures/ABC/rooms/123\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/EnterprisesApi~smartdevicemanagementEnterprisesStructuresRoomsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleHomeEnterpriseSdmV1Room}
     */
    smartdevicemanagementEnterprisesStructuresRoomsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling smartdevicemanagementEnterprisesStructuresRoomsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleHomeEnterpriseSdmV1Room;
      return this.apiClient.callApi(
        '/v1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the smartdevicemanagementEnterprisesStructuresRoomsList operation.
     * @callback module:api/EnterprisesApi~smartdevicemanagementEnterprisesStructuresRoomsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleHomeEnterpriseSdmV1ListRoomsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists rooms managed by the enterprise.
     * @param {String} parent The parent resource name of the rooms requested. For example: \"enterprises/XYZ/structures/ABC\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/EnterprisesApi~smartdevicemanagementEnterprisesStructuresRoomsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleHomeEnterpriseSdmV1ListRoomsResponse}
     */
    smartdevicemanagementEnterprisesStructuresRoomsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling smartdevicemanagementEnterprisesStructuresRoomsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleHomeEnterpriseSdmV1ListRoomsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/rooms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
