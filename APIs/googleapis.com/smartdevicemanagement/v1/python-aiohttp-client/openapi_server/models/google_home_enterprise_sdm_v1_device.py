# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_home_enterprise_sdm_v1_parent_relation import GoogleHomeEnterpriseSdmV1ParentRelation
from openapi_server import util


class GoogleHomeEnterpriseSdmV1Device(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, parent_relations: List[GoogleHomeEnterpriseSdmV1ParentRelation]=None, traits: Dict[str, object]=None, type: str=None):
        """GoogleHomeEnterpriseSdmV1Device - a model defined in OpenAPI

        :param name: The name of this GoogleHomeEnterpriseSdmV1Device.
        :param parent_relations: The parent_relations of this GoogleHomeEnterpriseSdmV1Device.
        :param traits: The traits of this GoogleHomeEnterpriseSdmV1Device.
        :param type: The type of this GoogleHomeEnterpriseSdmV1Device.
        """
        self.openapi_types = {
            'name': str,
            'parent_relations': List[GoogleHomeEnterpriseSdmV1ParentRelation],
            'traits': Dict[str, object],
            'type': str
        }

        self.attribute_map = {
            'name': 'name',
            'parent_relations': 'parentRelations',
            'traits': 'traits',
            'type': 'type'
        }

        self._name = name
        self._parent_relations = parent_relations
        self._traits = traits
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleHomeEnterpriseSdmV1Device':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleHomeEnterpriseSdmV1Device of this GoogleHomeEnterpriseSdmV1Device.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GoogleHomeEnterpriseSdmV1Device.

        Required. The resource name of the device. For example: \"enterprises/XYZ/devices/123\".

        :return: The name of this GoogleHomeEnterpriseSdmV1Device.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleHomeEnterpriseSdmV1Device.

        Required. The resource name of the device. For example: \"enterprises/XYZ/devices/123\".

        :param name: The name of this GoogleHomeEnterpriseSdmV1Device.
        :type name: str
        """

        self._name = name

    @property
    def parent_relations(self):
        """Gets the parent_relations of this GoogleHomeEnterpriseSdmV1Device.

        Assignee details of the device.

        :return: The parent_relations of this GoogleHomeEnterpriseSdmV1Device.
        :rtype: List[GoogleHomeEnterpriseSdmV1ParentRelation]
        """
        return self._parent_relations

    @parent_relations.setter
    def parent_relations(self, parent_relations):
        """Sets the parent_relations of this GoogleHomeEnterpriseSdmV1Device.

        Assignee details of the device.

        :param parent_relations: The parent_relations of this GoogleHomeEnterpriseSdmV1Device.
        :type parent_relations: List[GoogleHomeEnterpriseSdmV1ParentRelation]
        """

        self._parent_relations = parent_relations

    @property
    def traits(self):
        """Gets the traits of this GoogleHomeEnterpriseSdmV1Device.

        Output only. Device traits.

        :return: The traits of this GoogleHomeEnterpriseSdmV1Device.
        :rtype: Dict[str, object]
        """
        return self._traits

    @traits.setter
    def traits(self, traits):
        """Sets the traits of this GoogleHomeEnterpriseSdmV1Device.

        Output only. Device traits.

        :param traits: The traits of this GoogleHomeEnterpriseSdmV1Device.
        :type traits: Dict[str, object]
        """

        self._traits = traits

    @property
    def type(self):
        """Gets the type of this GoogleHomeEnterpriseSdmV1Device.

        Output only. Type of the device for general display purposes. For example: \"THERMOSTAT\". The device type should not be used to deduce or infer functionality of the actual device it is assigned to. Instead, use the returned traits for the device.

        :return: The type of this GoogleHomeEnterpriseSdmV1Device.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleHomeEnterpriseSdmV1Device.

        Output only. Type of the device for general display purposes. For example: \"THERMOSTAT\". The device type should not be used to deduce or infer functionality of the actual device it is assigned to. Instead, use the returned traits for the device.

        :param type: The type of this GoogleHomeEnterpriseSdmV1Device.
        :type type: str
        """

        self._type = type
