/**
 * Smart Device Management API
 * Allow select enterprise partners to access, control, and manage Google and Nest devices programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleHomeEnterpriseSdmV1ParentRelation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleHomeEnterpriseSdmV1ParentRelation::OAIGoogleHomeEnterpriseSdmV1ParentRelation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleHomeEnterpriseSdmV1ParentRelation::OAIGoogleHomeEnterpriseSdmV1ParentRelation() {
    this->initializeModel();
}

OAIGoogleHomeEnterpriseSdmV1ParentRelation::~OAIGoogleHomeEnterpriseSdmV1ParentRelation() {}

void OAIGoogleHomeEnterpriseSdmV1ParentRelation::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAIGoogleHomeEnterpriseSdmV1ParentRelation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleHomeEnterpriseSdmV1ParentRelation::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAIGoogleHomeEnterpriseSdmV1ParentRelation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleHomeEnterpriseSdmV1ParentRelation::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

QString OAIGoogleHomeEnterpriseSdmV1ParentRelation::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleHomeEnterpriseSdmV1ParentRelation::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleHomeEnterpriseSdmV1ParentRelation::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleHomeEnterpriseSdmV1ParentRelation::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleHomeEnterpriseSdmV1ParentRelation::getParent() const {
    return m_parent;
}
void OAIGoogleHomeEnterpriseSdmV1ParentRelation::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleHomeEnterpriseSdmV1ParentRelation::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleHomeEnterpriseSdmV1ParentRelation::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAIGoogleHomeEnterpriseSdmV1ParentRelation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleHomeEnterpriseSdmV1ParentRelation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
