/**
 * Smart Device Management API
 * Allow select enterprise partners to access, control, and manage Google and Nest devices programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse() {
    this->initializeModel();
}

OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::~OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse() {}

void OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::initializeModel() {

    m_structures_isSet = false;
    m_structures_isValid = false;
}

void OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::fromJsonObject(QJsonObject json) {

    m_structures_isValid = ::OpenAPI::fromJsonValue(m_structures, json[QString("structures")]);
    m_structures_isSet = !json[QString("structures")].isNull() && m_structures_isValid;
}

QString OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_structures.size() > 0) {
        obj.insert(QString("structures"), ::OpenAPI::toJsonValue(m_structures));
    }
    return obj;
}

QList<OAIGoogleHomeEnterpriseSdmV1Structure> OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::getStructures() const {
    return m_structures;
}
void OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::setStructures(const QList<OAIGoogleHomeEnterpriseSdmV1Structure> &structures) {
    m_structures = structures;
    m_structures_isSet = true;
}

bool OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::is_structures_Set() const{
    return m_structures_isSet;
}

bool OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::is_structures_Valid() const{
    return m_structures_isValid;
}

bool OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_structures.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleHomeEnterpriseSdmV1ListStructuresResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
