/**
 * Smart Device Management API
 * Allow select enterprise partners to access, control, and manage Google and Nest devices programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleHomeEnterpriseSdmV1Device.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleHomeEnterpriseSdmV1Device::OAIGoogleHomeEnterpriseSdmV1Device(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleHomeEnterpriseSdmV1Device::OAIGoogleHomeEnterpriseSdmV1Device() {
    this->initializeModel();
}

OAIGoogleHomeEnterpriseSdmV1Device::~OAIGoogleHomeEnterpriseSdmV1Device() {}

void OAIGoogleHomeEnterpriseSdmV1Device::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_parent_relations_isSet = false;
    m_parent_relations_isValid = false;

    m_traits_isSet = false;
    m_traits_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleHomeEnterpriseSdmV1Device::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleHomeEnterpriseSdmV1Device::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parent_relations_isValid = ::OpenAPI::fromJsonValue(m_parent_relations, json[QString("parentRelations")]);
    m_parent_relations_isSet = !json[QString("parentRelations")].isNull() && m_parent_relations_isValid;

    m_traits_isValid = ::OpenAPI::fromJsonValue(m_traits, json[QString("traits")]);
    m_traits_isSet = !json[QString("traits")].isNull() && m_traits_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleHomeEnterpriseSdmV1Device::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleHomeEnterpriseSdmV1Device::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parent_relations.size() > 0) {
        obj.insert(QString("parentRelations"), ::OpenAPI::toJsonValue(m_parent_relations));
    }
    if (m_traits.size() > 0) {
        obj.insert(QString("traits"), ::OpenAPI::toJsonValue(m_traits));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleHomeEnterpriseSdmV1Device::getName() const {
    return m_name;
}
void OAIGoogleHomeEnterpriseSdmV1Device::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleHomeEnterpriseSdmV1ParentRelation> OAIGoogleHomeEnterpriseSdmV1Device::getParentRelations() const {
    return m_parent_relations;
}
void OAIGoogleHomeEnterpriseSdmV1Device::setParentRelations(const QList<OAIGoogleHomeEnterpriseSdmV1ParentRelation> &parent_relations) {
    m_parent_relations = parent_relations;
    m_parent_relations_isSet = true;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_parent_relations_Set() const{
    return m_parent_relations_isSet;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_parent_relations_Valid() const{
    return m_parent_relations_isValid;
}

QMap<QString, QJsonValue> OAIGoogleHomeEnterpriseSdmV1Device::getTraits() const {
    return m_traits;
}
void OAIGoogleHomeEnterpriseSdmV1Device::setTraits(const QMap<QString, QJsonValue> &traits) {
    m_traits = traits;
    m_traits_isSet = true;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_traits_Set() const{
    return m_traits_isSet;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_traits_Valid() const{
    return m_traits_isValid;
}

QString OAIGoogleHomeEnterpriseSdmV1Device::getType() const {
    return m_type;
}
void OAIGoogleHomeEnterpriseSdmV1Device::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_relations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_traits.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleHomeEnterpriseSdmV1Device::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
