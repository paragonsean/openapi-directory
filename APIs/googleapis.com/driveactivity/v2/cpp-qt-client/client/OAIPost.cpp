/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPost.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPost::OAIPost(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPost::OAIPost() {
    this->initializeModel();
}

OAIPost::~OAIPost() {}

void OAIPost::initializeModel() {

    m_subtype_isSet = false;
    m_subtype_isValid = false;
}

void OAIPost::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPost::fromJsonObject(QJsonObject json) {

    m_subtype_isValid = ::OpenAPI::fromJsonValue(m_subtype, json[QString("subtype")]);
    m_subtype_isSet = !json[QString("subtype")].isNull() && m_subtype_isValid;
}

QString OAIPost::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPost::asJsonObject() const {
    QJsonObject obj;
    if (m_subtype_isSet) {
        obj.insert(QString("subtype"), ::OpenAPI::toJsonValue(m_subtype));
    }
    return obj;
}

QString OAIPost::getSubtype() const {
    return m_subtype;
}
void OAIPost::setSubtype(const QString &subtype) {
    m_subtype = subtype;
    m_subtype_isSet = true;
}

bool OAIPost::is_subtype_Set() const{
    return m_subtype_isSet;
}

bool OAIPost::is_subtype_Valid() const{
    return m_subtype_isValid;
}

bool OAIPost::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subtype_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPost::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
