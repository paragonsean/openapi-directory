/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeamDriveReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeamDriveReference::OAITeamDriveReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeamDriveReference::OAITeamDriveReference() {
    this->initializeModel();
}

OAITeamDriveReference::~OAITeamDriveReference() {}

void OAITeamDriveReference::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAITeamDriveReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeamDriveReference::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAITeamDriveReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeamDriveReference::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAITeamDriveReference::getName() const {
    return m_name;
}
void OAITeamDriveReference::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITeamDriveReference::is_name_Set() const{
    return m_name_isSet;
}

bool OAITeamDriveReference::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITeamDriveReference::getTitle() const {
    return m_title;
}
void OAITeamDriveReference::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAITeamDriveReference::is_title_Set() const{
    return m_title_isSet;
}

bool OAITeamDriveReference::is_title_Valid() const{
    return m_title_isValid;
}

bool OAITeamDriveReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeamDriveReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
