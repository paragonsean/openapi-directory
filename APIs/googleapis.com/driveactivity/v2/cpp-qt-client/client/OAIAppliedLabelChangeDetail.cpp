/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppliedLabelChangeDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppliedLabelChangeDetail::OAIAppliedLabelChangeDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppliedLabelChangeDetail::OAIAppliedLabelChangeDetail() {
    this->initializeModel();
}

OAIAppliedLabelChangeDetail::~OAIAppliedLabelChangeDetail() {}

void OAIAppliedLabelChangeDetail::initializeModel() {

    m_field_changes_isSet = false;
    m_field_changes_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_types_isSet = false;
    m_types_isValid = false;
}

void OAIAppliedLabelChangeDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppliedLabelChangeDetail::fromJsonObject(QJsonObject json) {

    m_field_changes_isValid = ::OpenAPI::fromJsonValue(m_field_changes, json[QString("fieldChanges")]);
    m_field_changes_isSet = !json[QString("fieldChanges")].isNull() && m_field_changes_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_types_isValid = ::OpenAPI::fromJsonValue(m_types, json[QString("types")]);
    m_types_isSet = !json[QString("types")].isNull() && m_types_isValid;
}

QString OAIAppliedLabelChangeDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppliedLabelChangeDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_field_changes.size() > 0) {
        obj.insert(QString("fieldChanges"), ::OpenAPI::toJsonValue(m_field_changes));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_types.size() > 0) {
        obj.insert(QString("types"), ::OpenAPI::toJsonValue(m_types));
    }
    return obj;
}

QList<OAIFieldValueChange> OAIAppliedLabelChangeDetail::getFieldChanges() const {
    return m_field_changes;
}
void OAIAppliedLabelChangeDetail::setFieldChanges(const QList<OAIFieldValueChange> &field_changes) {
    m_field_changes = field_changes;
    m_field_changes_isSet = true;
}

bool OAIAppliedLabelChangeDetail::is_field_changes_Set() const{
    return m_field_changes_isSet;
}

bool OAIAppliedLabelChangeDetail::is_field_changes_Valid() const{
    return m_field_changes_isValid;
}

QString OAIAppliedLabelChangeDetail::getLabel() const {
    return m_label;
}
void OAIAppliedLabelChangeDetail::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIAppliedLabelChangeDetail::is_label_Set() const{
    return m_label_isSet;
}

bool OAIAppliedLabelChangeDetail::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIAppliedLabelChangeDetail::getTitle() const {
    return m_title;
}
void OAIAppliedLabelChangeDetail::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIAppliedLabelChangeDetail::is_title_Set() const{
    return m_title_isSet;
}

bool OAIAppliedLabelChangeDetail::is_title_Valid() const{
    return m_title_isValid;
}

QList<QString> OAIAppliedLabelChangeDetail::getTypes() const {
    return m_types;
}
void OAIAppliedLabelChangeDetail::setTypes(const QList<QString> &types) {
    m_types = types;
    m_types_isSet = true;
}

bool OAIAppliedLabelChangeDetail::is_types_Set() const{
    return m_types_isSet;
}

bool OAIAppliedLabelChangeDetail::is_types_Valid() const{
    return m_types_isValid;
}

bool OAIAppliedLabelChangeDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_changes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppliedLabelChangeDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
