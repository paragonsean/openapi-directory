/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKnownUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKnownUser::OAIKnownUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKnownUser::OAIKnownUser() {
    this->initializeModel();
}

OAIKnownUser::~OAIKnownUser() {}

void OAIKnownUser::initializeModel() {

    m_is_current_user_isSet = false;
    m_is_current_user_isValid = false;

    m_person_name_isSet = false;
    m_person_name_isValid = false;
}

void OAIKnownUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKnownUser::fromJsonObject(QJsonObject json) {

    m_is_current_user_isValid = ::OpenAPI::fromJsonValue(m_is_current_user, json[QString("isCurrentUser")]);
    m_is_current_user_isSet = !json[QString("isCurrentUser")].isNull() && m_is_current_user_isValid;

    m_person_name_isValid = ::OpenAPI::fromJsonValue(m_person_name, json[QString("personName")]);
    m_person_name_isSet = !json[QString("personName")].isNull() && m_person_name_isValid;
}

QString OAIKnownUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKnownUser::asJsonObject() const {
    QJsonObject obj;
    if (m_is_current_user_isSet) {
        obj.insert(QString("isCurrentUser"), ::OpenAPI::toJsonValue(m_is_current_user));
    }
    if (m_person_name_isSet) {
        obj.insert(QString("personName"), ::OpenAPI::toJsonValue(m_person_name));
    }
    return obj;
}

bool OAIKnownUser::isIsCurrentUser() const {
    return m_is_current_user;
}
void OAIKnownUser::setIsCurrentUser(const bool &is_current_user) {
    m_is_current_user = is_current_user;
    m_is_current_user_isSet = true;
}

bool OAIKnownUser::is_is_current_user_Set() const{
    return m_is_current_user_isSet;
}

bool OAIKnownUser::is_is_current_user_Valid() const{
    return m_is_current_user_isValid;
}

QString OAIKnownUser::getPersonName() const {
    return m_person_name;
}
void OAIKnownUser::setPersonName(const QString &person_name) {
    m_person_name = person_name;
    m_person_name_isSet = true;
}

bool OAIKnownUser::is_person_name_Set() const{
    return m_person_name_isSet;
}

bool OAIKnownUser::is_person_name_Valid() const{
    return m_person_name_isValid;
}

bool OAIKnownUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_current_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_person_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKnownUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
