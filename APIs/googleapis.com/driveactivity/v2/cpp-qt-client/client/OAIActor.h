/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActor.h
 *
 * The actor of a Drive activity.
 */

#ifndef OAIActor_H
#define OAIActor_H

#include <QJsonObject>

#include "OAIImpersonation.h"
#include "OAIObject.h"
#include "OAISystemEvent.h"
#include "OAIUser.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImpersonation;
class OAISystemEvent;
class OAIUser;

class OAIActor : public OAIObject {
public:
    OAIActor();
    OAIActor(QString json);
    ~OAIActor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAdministrator() const;
    void setAdministrator(const OAIObject &administrator);
    bool is_administrator_Set() const;
    bool is_administrator_Valid() const;

    OAIObject getAnonymous() const;
    void setAnonymous(const OAIObject &anonymous);
    bool is_anonymous_Set() const;
    bool is_anonymous_Valid() const;

    OAIImpersonation getImpersonation() const;
    void setImpersonation(const OAIImpersonation &impersonation);
    bool is_impersonation_Set() const;
    bool is_impersonation_Valid() const;

    OAISystemEvent getSystem() const;
    void setSystem(const OAISystemEvent &system);
    bool is_system_Set() const;
    bool is_system_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_administrator;
    bool m_administrator_isSet;
    bool m_administrator_isValid;

    OAIObject m_anonymous;
    bool m_anonymous_isSet;
    bool m_anonymous_isValid;

    OAIImpersonation m_impersonation;
    bool m_impersonation_isSet;
    bool m_impersonation_isValid;

    OAISystemEvent m_system;
    bool m_system_isSet;
    bool m_system_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActor)

#endif // OAIActor_H
