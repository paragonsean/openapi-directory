/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRename.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRename::OAIRename(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRename::OAIRename() {
    this->initializeModel();
}

OAIRename::~OAIRename() {}

void OAIRename::initializeModel() {

    m_new_title_isSet = false;
    m_new_title_isValid = false;

    m_old_title_isSet = false;
    m_old_title_isValid = false;
}

void OAIRename::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRename::fromJsonObject(QJsonObject json) {

    m_new_title_isValid = ::OpenAPI::fromJsonValue(m_new_title, json[QString("newTitle")]);
    m_new_title_isSet = !json[QString("newTitle")].isNull() && m_new_title_isValid;

    m_old_title_isValid = ::OpenAPI::fromJsonValue(m_old_title, json[QString("oldTitle")]);
    m_old_title_isSet = !json[QString("oldTitle")].isNull() && m_old_title_isValid;
}

QString OAIRename::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRename::asJsonObject() const {
    QJsonObject obj;
    if (m_new_title_isSet) {
        obj.insert(QString("newTitle"), ::OpenAPI::toJsonValue(m_new_title));
    }
    if (m_old_title_isSet) {
        obj.insert(QString("oldTitle"), ::OpenAPI::toJsonValue(m_old_title));
    }
    return obj;
}

QString OAIRename::getNewTitle() const {
    return m_new_title;
}
void OAIRename::setNewTitle(const QString &new_title) {
    m_new_title = new_title;
    m_new_title_isSet = true;
}

bool OAIRename::is_new_title_Set() const{
    return m_new_title_isSet;
}

bool OAIRename::is_new_title_Valid() const{
    return m_new_title_isValid;
}

QString OAIRename::getOldTitle() const {
    return m_old_title;
}
void OAIRename::setOldTitle(const QString &old_title) {
    m_old_title = old_title;
    m_old_title_isSet = true;
}

bool OAIRename::is_old_title_Set() const{
    return m_old_title_isSet;
}

bool OAIRename::is_old_title_Valid() const{
    return m_old_title_isValid;
}

bool OAIRename::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_new_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRename::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
