/*
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConsolidationStrategy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The request message for querying Drive activity.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:06.299010-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QueryDriveActivityRequest {
  public static final String SERIALIZED_NAME_ANCESTOR_NAME = "ancestorName";
  @SerializedName(SERIALIZED_NAME_ANCESTOR_NAME)
  private String ancestorName;

  public static final String SERIALIZED_NAME_CONSOLIDATION_STRATEGY = "consolidationStrategy";
  @SerializedName(SERIALIZED_NAME_CONSOLIDATION_STRATEGY)
  private ConsolidationStrategy consolidationStrategy;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_ITEM_NAME = "itemName";
  @SerializedName(SERIALIZED_NAME_ITEM_NAME)
  private String itemName;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public QueryDriveActivityRequest() {
  }

  public QueryDriveActivityRequest ancestorName(String ancestorName) {
    this.ancestorName = ancestorName;
    return this;
  }

  /**
   * Return activities for this Drive folder, plus all children and descendants. The format is &#x60;items/ITEM_ID&#x60;.
   * @return ancestorName
   */
  @javax.annotation.Nullable
  public String getAncestorName() {
    return ancestorName;
  }

  public void setAncestorName(String ancestorName) {
    this.ancestorName = ancestorName;
  }


  public QueryDriveActivityRequest consolidationStrategy(ConsolidationStrategy consolidationStrategy) {
    this.consolidationStrategy = consolidationStrategy;
    return this;
  }

  /**
   * Get consolidationStrategy
   * @return consolidationStrategy
   */
  @javax.annotation.Nullable
  public ConsolidationStrategy getConsolidationStrategy() {
    return consolidationStrategy;
  }

  public void setConsolidationStrategy(ConsolidationStrategy consolidationStrategy) {
    this.consolidationStrategy = consolidationStrategy;
  }


  public QueryDriveActivityRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * The filtering for items returned from this query request. The format of the filter string is a sequence of expressions, joined by an optional \&quot;AND\&quot;, where each expression is of the form \&quot;field operator value\&quot;. Supported fields: - &#x60;time&#x60;: Uses numerical operators on date values either in terms of milliseconds since Jan 1, 1970 or in RFC 3339 format. Examples: - &#x60;time &gt; 1452409200000 AND time &lt;&#x3D; 1492812924310&#x60; - &#x60;time &gt;&#x3D; \&quot;2016-01-10T01:02:03-05:00\&quot;&#x60; - &#x60;detail.action_detail_case&#x60;: Uses the \&quot;has\&quot; operator (:) and either a singular value or a list of allowed action types enclosed in parentheses, separated by a space. To exclude a result from the response, prepend a hyphen (&#x60;-&#x60;) to the beginning of the filter string. Examples: - &#x60;detail.action_detail_case:RENAME&#x60; - &#x60;detail.action_detail_case:(CREATE RESTORE)&#x60; - &#x60;-detail.action_detail_case:MOVE&#x60; 
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public QueryDriveActivityRequest itemName(String itemName) {
    this.itemName = itemName;
    return this;
  }

  /**
   * Return activities for this Drive item. The format is &#x60;items/ITEM_ID&#x60;.
   * @return itemName
   */
  @javax.annotation.Nullable
  public String getItemName() {
    return itemName;
  }

  public void setItemName(String itemName) {
    this.itemName = itemName;
  }


  public QueryDriveActivityRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * The minimum number of activities desired in the response; the server attempts to return at least this quantity. The server may also return fewer activities if it has a partial response ready before the request times out. If not set, a default value is used.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public QueryDriveActivityRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * The token identifies which page of results to return. Set this to the next_page_token value returned from a previous query to obtain the following page of results. If not set, the first page of results is returned.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryDriveActivityRequest queryDriveActivityRequest = (QueryDriveActivityRequest) o;
    return Objects.equals(this.ancestorName, queryDriveActivityRequest.ancestorName) &&
        Objects.equals(this.consolidationStrategy, queryDriveActivityRequest.consolidationStrategy) &&
        Objects.equals(this.filter, queryDriveActivityRequest.filter) &&
        Objects.equals(this.itemName, queryDriveActivityRequest.itemName) &&
        Objects.equals(this.pageSize, queryDriveActivityRequest.pageSize) &&
        Objects.equals(this.pageToken, queryDriveActivityRequest.pageToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ancestorName, consolidationStrategy, filter, itemName, pageSize, pageToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryDriveActivityRequest {\n");
    sb.append("    ancestorName: ").append(toIndentedString(ancestorName)).append("\n");
    sb.append("    consolidationStrategy: ").append(toIndentedString(consolidationStrategy)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ancestorName");
    openapiFields.add("consolidationStrategy");
    openapiFields.add("filter");
    openapiFields.add("itemName");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QueryDriveActivityRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QueryDriveActivityRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QueryDriveActivityRequest is not found in the empty JSON string", QueryDriveActivityRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QueryDriveActivityRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QueryDriveActivityRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ancestorName") != null && !jsonObj.get("ancestorName").isJsonNull()) && !jsonObj.get("ancestorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ancestorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ancestorName").toString()));
      }
      // validate the optional field `consolidationStrategy`
      if (jsonObj.get("consolidationStrategy") != null && !jsonObj.get("consolidationStrategy").isJsonNull()) {
        ConsolidationStrategy.validateJsonElement(jsonObj.get("consolidationStrategy"));
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("itemName") != null && !jsonObj.get("itemName").isJsonNull()) && !jsonObj.get("itemName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemName").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QueryDriveActivityRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QueryDriveActivityRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QueryDriveActivityRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QueryDriveActivityRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<QueryDriveActivityRequest>() {
           @Override
           public void write(JsonWriter out, QueryDriveActivityRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QueryDriveActivityRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QueryDriveActivityRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QueryDriveActivityRequest
   * @throws IOException if the JSON string is invalid with respect to QueryDriveActivityRequest
   */
  public static QueryDriveActivityRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QueryDriveActivityRequest.class);
  }

  /**
   * Convert an instance of QueryDriveActivityRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

