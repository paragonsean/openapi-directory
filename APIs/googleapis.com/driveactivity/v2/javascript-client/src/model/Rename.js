/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Rename model module.
 * @module model/Rename
 * @version v2
 */
class Rename {
    /**
     * Constructs a new <code>Rename</code>.
     * An object was renamed.
     * @alias module:model/Rename
     */
    constructor() { 
        
        Rename.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Rename</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Rename} obj Optional instance to populate.
     * @return {module:model/Rename} The populated <code>Rename</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Rename();

            if (data.hasOwnProperty('newTitle')) {
                obj['newTitle'] = ApiClient.convertToType(data['newTitle'], 'String');
            }
            if (data.hasOwnProperty('oldTitle')) {
                obj['oldTitle'] = ApiClient.convertToType(data['oldTitle'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Rename</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Rename</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['newTitle'] && !(typeof data['newTitle'] === 'string' || data['newTitle'] instanceof String)) {
            throw new Error("Expected the field `newTitle` to be a primitive type in the JSON string but got " + data['newTitle']);
        }
        // ensure the json data is a string
        if (data['oldTitle'] && !(typeof data['oldTitle'] === 'string' || data['oldTitle'] instanceof String)) {
            throw new Error("Expected the field `oldTitle` to be a primitive type in the JSON string but got " + data['oldTitle']);
        }

        return true;
    }


}



/**
 * The new title of the drive object.
 * @member {String} newTitle
 */
Rename.prototype['newTitle'] = undefined;

/**
 * The previous title of the drive object.
 * @member {String} oldTitle
 */
Rename.prototype['oldTitle'] = undefined;






export default Rename;

