/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Domain from './Domain';
import Group from './Group';
import User from './User';

/**
 * The Permission model module.
 * @module model/Permission
 * @version v2
 */
class Permission {
    /**
     * Constructs a new <code>Permission</code>.
     * The permission setting of an object.
     * @alias module:model/Permission
     */
    constructor() { 
        
        Permission.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Permission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Permission} obj Optional instance to populate.
     * @return {module:model/Permission} The populated <code>Permission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Permission();

            if (data.hasOwnProperty('allowDiscovery')) {
                obj['allowDiscovery'] = ApiClient.convertToType(data['allowDiscovery'], 'Boolean');
            }
            if (data.hasOwnProperty('anyone')) {
                obj['anyone'] = ApiClient.convertToType(data['anyone'], Object);
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = Domain.constructFromObject(data['domain']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = Group.constructFromObject(data['group']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = User.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Permission</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Permission</code>.
     */
    static validateJSON(data) {
        // validate the optional field `domain`
        if (data['domain']) { // data not null
          Domain.validateJSON(data['domain']);
        }
        // validate the optional field `group`
        if (data['group']) { // data not null
          Group.validateJSON(data['group']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          User.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * If true, the item can be discovered (e.g. in the user's \"Shared with me\" collection) without needing a link to the item.
 * @member {Boolean} allowDiscovery
 */
Permission.prototype['allowDiscovery'] = undefined;

/**
 * Represents any user (including a logged out user).
 * @member {Object} anyone
 */
Permission.prototype['anyone'] = undefined;

/**
 * @member {module:model/Domain} domain
 */
Permission.prototype['domain'] = undefined;

/**
 * @member {module:model/Group} group
 */
Permission.prototype['group'] = undefined;

/**
 * Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items.
 * @member {module:model/Permission.RoleEnum} role
 */
Permission.prototype['role'] = undefined;

/**
 * @member {module:model/User} user
 */
Permission.prototype['user'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
Permission['RoleEnum'] = {

    /**
     * value: "ROLE_UNSPECIFIED"
     * @const
     */
    "ROLE_UNSPECIFIED": "ROLE_UNSPECIFIED",

    /**
     * value: "OWNER"
     * @const
     */
    "OWNER": "OWNER",

    /**
     * value: "ORGANIZER"
     * @const
     */
    "ORGANIZER": "ORGANIZER",

    /**
     * value: "FILE_ORGANIZER"
     * @const
     */
    "FILE_ORGANIZER": "FILE_ORGANIZER",

    /**
     * value: "EDITOR"
     * @const
     */
    "EDITOR": "EDITOR",

    /**
     * value: "COMMENTER"
     * @const
     */
    "COMMENTER": "COMMENTER",

    /**
     * value: "VIEWER"
     * @const
     */
    "VIEWER": "VIEWER",

    /**
     * value: "PUBLISHED_VIEWER"
     * @const
     */
    "PUBLISHED_VIEWER": "PUBLISHED_VIEWER"
};



export default Permission;

