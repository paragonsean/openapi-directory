/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Permission from './Permission';

/**
 * The PermissionChange model module.
 * @module model/PermissionChange
 * @version v2
 */
class PermissionChange {
    /**
     * Constructs a new <code>PermissionChange</code>.
     * A change of the permission setting on an item.
     * @alias module:model/PermissionChange
     */
    constructor() { 
        
        PermissionChange.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PermissionChange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PermissionChange} obj Optional instance to populate.
     * @return {module:model/PermissionChange} The populated <code>PermissionChange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PermissionChange();

            if (data.hasOwnProperty('addedPermissions')) {
                obj['addedPermissions'] = ApiClient.convertToType(data['addedPermissions'], [Permission]);
            }
            if (data.hasOwnProperty('removedPermissions')) {
                obj['removedPermissions'] = ApiClient.convertToType(data['removedPermissions'], [Permission]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PermissionChange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PermissionChange</code>.
     */
    static validateJSON(data) {
        if (data['addedPermissions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addedPermissions'])) {
                throw new Error("Expected the field `addedPermissions` to be an array in the JSON data but got " + data['addedPermissions']);
            }
            // validate the optional field `addedPermissions` (array)
            for (const item of data['addedPermissions']) {
                Permission.validateJSON(item);
            };
        }
        if (data['removedPermissions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['removedPermissions'])) {
                throw new Error("Expected the field `removedPermissions` to be an array in the JSON data but got " + data['removedPermissions']);
            }
            // validate the optional field `removedPermissions` (array)
            for (const item of data['removedPermissions']) {
                Permission.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The set of permissions added by this change.
 * @member {Array.<module:model/Permission>} addedPermissions
 */
PermissionChange.prototype['addedPermissions'] = undefined;

/**
 * The set of permissions removed by this change.
 * @member {Array.<module:model/Permission>} removedPermissions
 */
PermissionChange.prototype['removedPermissions'] = undefined;






export default PermissionChange;

