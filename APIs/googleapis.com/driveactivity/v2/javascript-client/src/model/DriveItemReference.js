/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DriveFolder from './DriveFolder';
import Folder from './Folder';

/**
 * The DriveItemReference model module.
 * @module model/DriveItemReference
 * @version v2
 */
class DriveItemReference {
    /**
     * Constructs a new <code>DriveItemReference</code>.
     * A lightweight reference to a Drive item, such as a file or folder.
     * @alias module:model/DriveItemReference
     */
    constructor() { 
        
        DriveItemReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DriveItemReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DriveItemReference} obj Optional instance to populate.
     * @return {module:model/DriveItemReference} The populated <code>DriveItemReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DriveItemReference();

            if (data.hasOwnProperty('driveFile')) {
                obj['driveFile'] = ApiClient.convertToType(data['driveFile'], Object);
            }
            if (data.hasOwnProperty('driveFolder')) {
                obj['driveFolder'] = DriveFolder.constructFromObject(data['driveFolder']);
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], Object);
            }
            if (data.hasOwnProperty('folder')) {
                obj['folder'] = Folder.constructFromObject(data['folder']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DriveItemReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DriveItemReference</code>.
     */
    static validateJSON(data) {
        // validate the optional field `driveFolder`
        if (data['driveFolder']) { // data not null
          DriveFolder.validateJSON(data['driveFolder']);
        }
        // validate the optional field `folder`
        if (data['folder']) { // data not null
          Folder.validateJSON(data['folder']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * A Drive item which is a file.
 * @member {Object} driveFile
 */
DriveItemReference.prototype['driveFile'] = undefined;

/**
 * @member {module:model/DriveFolder} driveFolder
 */
DriveItemReference.prototype['driveFolder'] = undefined;

/**
 * This item is deprecated; please see `DriveFile` instead.
 * @member {Object} file
 */
DriveItemReference.prototype['file'] = undefined;

/**
 * @member {module:model/Folder} folder
 */
DriveItemReference.prototype['folder'] = undefined;

/**
 * The target Drive item. The format is `items/ITEM_ID`.
 * @member {String} name
 */
DriveItemReference.prototype['name'] = undefined;

/**
 * The title of the Drive item.
 * @member {String} title
 */
DriveItemReference.prototype['title'] = undefined;






export default DriveItemReference;

