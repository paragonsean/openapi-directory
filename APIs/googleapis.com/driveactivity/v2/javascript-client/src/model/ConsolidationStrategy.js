/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConsolidationStrategy model module.
 * @module model/ConsolidationStrategy
 * @version v2
 */
class ConsolidationStrategy {
    /**
     * Constructs a new <code>ConsolidationStrategy</code>.
     * How the individual activities are consolidated. If a set of activities is related they can be consolidated into one combined activity, such as one actor performing the same action on multiple targets, or multiple actors performing the same action on a single target. The strategy defines the rules for which activities are related.
     * @alias module:model/ConsolidationStrategy
     */
    constructor() { 
        
        ConsolidationStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsolidationStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsolidationStrategy} obj Optional instance to populate.
     * @return {module:model/ConsolidationStrategy} The populated <code>ConsolidationStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsolidationStrategy();

            if (data.hasOwnProperty('legacy')) {
                obj['legacy'] = ApiClient.convertToType(data['legacy'], Object);
            }
            if (data.hasOwnProperty('none')) {
                obj['none'] = ApiClient.convertToType(data['none'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsolidationStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsolidationStrategy</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A strategy that consolidates activities using the grouping rules from the legacy V1 Activity API. Similar actions occurring within a window of time can be grouped across multiple targets (such as moving a set of files at once) or multiple actors (such as several users editing the same item). Grouping rules for this strategy are specific to each type of action.
 * @member {Object} legacy
 */
ConsolidationStrategy.prototype['legacy'] = undefined;

/**
 * A strategy that does no consolidation of individual activities.
 * @member {Object} none
 */
ConsolidationStrategy.prototype['none'] = undefined;






export default ConsolidationStrategy;

