/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Drive from './Drive';
import DriveItem from './DriveItem';
import FileComment from './FileComment';
import TeamDrive from './TeamDrive';

/**
 * The Target model module.
 * @module model/Target
 * @version v2
 */
class Target {
    /**
     * Constructs a new <code>Target</code>.
     * Information about the target of activity. For more information on how activity history is shared with users, see [Activity history visibility](https://developers.google.com/drive/activity/v2#activityhistory).
     * @alias module:model/Target
     */
    constructor() { 
        
        Target.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Target</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Target} obj Optional instance to populate.
     * @return {module:model/Target} The populated <code>Target</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Target();

            if (data.hasOwnProperty('drive')) {
                obj['drive'] = Drive.constructFromObject(data['drive']);
            }
            if (data.hasOwnProperty('driveItem')) {
                obj['driveItem'] = DriveItem.constructFromObject(data['driveItem']);
            }
            if (data.hasOwnProperty('fileComment')) {
                obj['fileComment'] = FileComment.constructFromObject(data['fileComment']);
            }
            if (data.hasOwnProperty('teamDrive')) {
                obj['teamDrive'] = TeamDrive.constructFromObject(data['teamDrive']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Target</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Target</code>.
     */
    static validateJSON(data) {
        // validate the optional field `drive`
        if (data['drive']) { // data not null
          Drive.validateJSON(data['drive']);
        }
        // validate the optional field `driveItem`
        if (data['driveItem']) { // data not null
          DriveItem.validateJSON(data['driveItem']);
        }
        // validate the optional field `fileComment`
        if (data['fileComment']) { // data not null
          FileComment.validateJSON(data['fileComment']);
        }
        // validate the optional field `teamDrive`
        if (data['teamDrive']) { // data not null
          TeamDrive.validateJSON(data['teamDrive']);
        }

        return true;
    }


}



/**
 * @member {module:model/Drive} drive
 */
Target.prototype['drive'] = undefined;

/**
 * @member {module:model/DriveItem} driveItem
 */
Target.prototype['driveItem'] = undefined;

/**
 * @member {module:model/FileComment} fileComment
 */
Target.prototype['fileComment'] = undefined;

/**
 * @member {module:model/TeamDrive} teamDrive
 */
Target.prototype['teamDrive'] = undefined;






export default Target;

