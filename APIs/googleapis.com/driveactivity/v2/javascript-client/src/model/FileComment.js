/**
 * Drive Activity API
 * Provides a historical view of activity in Google Drive.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DriveItem from './DriveItem';

/**
 * The FileComment model module.
 * @module model/FileComment
 * @version v2
 */
class FileComment {
    /**
     * Constructs a new <code>FileComment</code>.
     * A comment on a file.
     * @alias module:model/FileComment
     */
    constructor() { 
        
        FileComment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileComment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileComment} obj Optional instance to populate.
     * @return {module:model/FileComment} The populated <code>FileComment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileComment();

            if (data.hasOwnProperty('legacyCommentId')) {
                obj['legacyCommentId'] = ApiClient.convertToType(data['legacyCommentId'], 'String');
            }
            if (data.hasOwnProperty('legacyDiscussionId')) {
                obj['legacyDiscussionId'] = ApiClient.convertToType(data['legacyDiscussionId'], 'String');
            }
            if (data.hasOwnProperty('linkToDiscussion')) {
                obj['linkToDiscussion'] = ApiClient.convertToType(data['linkToDiscussion'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = DriveItem.constructFromObject(data['parent']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileComment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileComment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['legacyCommentId'] && !(typeof data['legacyCommentId'] === 'string' || data['legacyCommentId'] instanceof String)) {
            throw new Error("Expected the field `legacyCommentId` to be a primitive type in the JSON string but got " + data['legacyCommentId']);
        }
        // ensure the json data is a string
        if (data['legacyDiscussionId'] && !(typeof data['legacyDiscussionId'] === 'string' || data['legacyDiscussionId'] instanceof String)) {
            throw new Error("Expected the field `legacyDiscussionId` to be a primitive type in the JSON string but got " + data['legacyDiscussionId']);
        }
        // ensure the json data is a string
        if (data['linkToDiscussion'] && !(typeof data['linkToDiscussion'] === 'string' || data['linkToDiscussion'] instanceof String)) {
            throw new Error("Expected the field `linkToDiscussion` to be a primitive type in the JSON string but got " + data['linkToDiscussion']);
        }
        // validate the optional field `parent`
        if (data['parent']) { // data not null
          DriveItem.validateJSON(data['parent']);
        }

        return true;
    }


}



/**
 * The comment in the discussion thread. This identifier is an opaque string compatible with the Drive API; see https://developers.google.com/drive/v3/reference/comments/get
 * @member {String} legacyCommentId
 */
FileComment.prototype['legacyCommentId'] = undefined;

/**
 * The discussion thread to which the comment was added. This identifier is an opaque string compatible with the Drive API and references the first comment in a discussion; see https://developers.google.com/drive/v3/reference/comments/get
 * @member {String} legacyDiscussionId
 */
FileComment.prototype['legacyDiscussionId'] = undefined;

/**
 * The link to the discussion thread containing this comment, for example, `https://docs.google.com/DOCUMENT_ID/edit?disco=THREAD_ID`.
 * @member {String} linkToDiscussion
 */
FileComment.prototype['linkToDiscussion'] = undefined;

/**
 * @member {module:model/DriveItem} parent
 */
FileComment.prototype['parent'] = undefined;






export default FileComment;

