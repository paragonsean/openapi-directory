# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server.models.action_detail import ActionDetail
from openapi_server.models.actor import Actor
from openapi_server.models.target import Target
from openapi_server.models.time_range import TimeRange
from openapi_server import util


class DriveActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actions: List[Action]=None, actors: List[Actor]=None, primary_action_detail: ActionDetail=None, targets: List[Target]=None, time_range: TimeRange=None, timestamp: str=None):
        """DriveActivity - a model defined in OpenAPI

        :param actions: The actions of this DriveActivity.
        :param actors: The actors of this DriveActivity.
        :param primary_action_detail: The primary_action_detail of this DriveActivity.
        :param targets: The targets of this DriveActivity.
        :param time_range: The time_range of this DriveActivity.
        :param timestamp: The timestamp of this DriveActivity.
        """
        self.openapi_types = {
            'actions': List[Action],
            'actors': List[Actor],
            'primary_action_detail': ActionDetail,
            'targets': List[Target],
            'time_range': TimeRange,
            'timestamp': str
        }

        self.attribute_map = {
            'actions': 'actions',
            'actors': 'actors',
            'primary_action_detail': 'primaryActionDetail',
            'targets': 'targets',
            'time_range': 'timeRange',
            'timestamp': 'timestamp'
        }

        self._actions = actions
        self._actors = actors
        self._primary_action_detail = primary_action_detail
        self._targets = targets
        self._time_range = time_range
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriveActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DriveActivity of this DriveActivity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actions(self):
        """Gets the actions of this DriveActivity.

        Details on all actions in this activity.

        :return: The actions of this DriveActivity.
        :rtype: List[Action]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this DriveActivity.

        Details on all actions in this activity.

        :param actions: The actions of this DriveActivity.
        :type actions: List[Action]
        """

        self._actions = actions

    @property
    def actors(self):
        """Gets the actors of this DriveActivity.

        All actor(s) responsible for the activity.

        :return: The actors of this DriveActivity.
        :rtype: List[Actor]
        """
        return self._actors

    @actors.setter
    def actors(self, actors):
        """Sets the actors of this DriveActivity.

        All actor(s) responsible for the activity.

        :param actors: The actors of this DriveActivity.
        :type actors: List[Actor]
        """

        self._actors = actors

    @property
    def primary_action_detail(self):
        """Gets the primary_action_detail of this DriveActivity.


        :return: The primary_action_detail of this DriveActivity.
        :rtype: ActionDetail
        """
        return self._primary_action_detail

    @primary_action_detail.setter
    def primary_action_detail(self, primary_action_detail):
        """Sets the primary_action_detail of this DriveActivity.


        :param primary_action_detail: The primary_action_detail of this DriveActivity.
        :type primary_action_detail: ActionDetail
        """

        self._primary_action_detail = primary_action_detail

    @property
    def targets(self):
        """Gets the targets of this DriveActivity.

        All Google Drive objects this activity is about (e.g. file, folder, drive). This represents the state of the target immediately after the actions occurred.

        :return: The targets of this DriveActivity.
        :rtype: List[Target]
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this DriveActivity.

        All Google Drive objects this activity is about (e.g. file, folder, drive). This represents the state of the target immediately after the actions occurred.

        :param targets: The targets of this DriveActivity.
        :type targets: List[Target]
        """

        self._targets = targets

    @property
    def time_range(self):
        """Gets the time_range of this DriveActivity.


        :return: The time_range of this DriveActivity.
        :rtype: TimeRange
        """
        return self._time_range

    @time_range.setter
    def time_range(self, time_range):
        """Sets the time_range of this DriveActivity.


        :param time_range: The time_range of this DriveActivity.
        :type time_range: TimeRange
        """

        self._time_range = time_range

    @property
    def timestamp(self):
        """Gets the timestamp of this DriveActivity.

        The activity occurred at this specific time.

        :return: The timestamp of this DriveActivity.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this DriveActivity.

        The activity occurred at this specific time.

        :param timestamp: The timestamp of this DriveActivity.
        :type timestamp: str
        """

        self._timestamp = timestamp
