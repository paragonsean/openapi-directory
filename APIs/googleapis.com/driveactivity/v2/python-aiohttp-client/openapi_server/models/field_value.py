# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_date import ModelDate
from openapi_server.models.selection import Selection
from openapi_server.models.selection_list import SelectionList
from openapi_server.models.single_user import SingleUser
from openapi_server.models.text import Text
from openapi_server.models.text_list import TextList
from openapi_server.models.user_list import UserList
from openapi_server import util


class FieldValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: ModelDate=None, integer: Integer=None, selection: Selection=None, selection_list: SelectionList=None, text: Text=None, text_list: TextList=None, user: SingleUser=None, user_list: UserList=None):
        """FieldValue - a model defined in OpenAPI

        :param _date: The _date of this FieldValue.
        :param integer: The integer of this FieldValue.
        :param selection: The selection of this FieldValue.
        :param selection_list: The selection_list of this FieldValue.
        :param text: The text of this FieldValue.
        :param text_list: The text_list of this FieldValue.
        :param user: The user of this FieldValue.
        :param user_list: The user_list of this FieldValue.
        """
        self.openapi_types = {
            '_date': ModelDate,
            'integer': Integer,
            'selection': Selection,
            'selection_list': SelectionList,
            'text': Text,
            'text_list': TextList,
            'user': SingleUser,
            'user_list': UserList
        }

        self.attribute_map = {
            '_date': 'date',
            'integer': 'integer',
            'selection': 'selection',
            'selection_list': 'selectionList',
            'text': 'text',
            'text_list': 'textList',
            'user': 'user',
            'user_list': 'userList'
        }

        self.__date = _date
        self._integer = integer
        self._selection = selection
        self._selection_list = selection_list
        self._text = text
        self._text_list = text_list
        self._user = user
        self._user_list = user_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldValue of this FieldValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this FieldValue.


        :return: The _date of this FieldValue.
        :rtype: ModelDate
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this FieldValue.


        :param _date: The _date of this FieldValue.
        :type _date: ModelDate
        """

        self.__date = _date

    @property
    def integer(self):
        """Gets the integer of this FieldValue.


        :return: The integer of this FieldValue.
        :rtype: Integer
        """
        return self._integer

    @integer.setter
    def integer(self, integer):
        """Sets the integer of this FieldValue.


        :param integer: The integer of this FieldValue.
        :type integer: Integer
        """

        self._integer = integer

    @property
    def selection(self):
        """Gets the selection of this FieldValue.


        :return: The selection of this FieldValue.
        :rtype: Selection
        """
        return self._selection

    @selection.setter
    def selection(self, selection):
        """Sets the selection of this FieldValue.


        :param selection: The selection of this FieldValue.
        :type selection: Selection
        """

        self._selection = selection

    @property
    def selection_list(self):
        """Gets the selection_list of this FieldValue.


        :return: The selection_list of this FieldValue.
        :rtype: SelectionList
        """
        return self._selection_list

    @selection_list.setter
    def selection_list(self, selection_list):
        """Sets the selection_list of this FieldValue.


        :param selection_list: The selection_list of this FieldValue.
        :type selection_list: SelectionList
        """

        self._selection_list = selection_list

    @property
    def text(self):
        """Gets the text of this FieldValue.


        :return: The text of this FieldValue.
        :rtype: Text
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this FieldValue.


        :param text: The text of this FieldValue.
        :type text: Text
        """

        self._text = text

    @property
    def text_list(self):
        """Gets the text_list of this FieldValue.


        :return: The text_list of this FieldValue.
        :rtype: TextList
        """
        return self._text_list

    @text_list.setter
    def text_list(self, text_list):
        """Sets the text_list of this FieldValue.


        :param text_list: The text_list of this FieldValue.
        :type text_list: TextList
        """

        self._text_list = text_list

    @property
    def user(self):
        """Gets the user of this FieldValue.


        :return: The user of this FieldValue.
        :rtype: SingleUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this FieldValue.


        :param user: The user of this FieldValue.
        :type user: SingleUser
        """

        self._user = user

    @property
    def user_list(self):
        """Gets the user_list of this FieldValue.


        :return: The user_list of this FieldValue.
        :rtype: UserList
        """
        return self._user_list

    @user_list.setter
    def user_list(self, user_list):
        """Sets the user_list of this FieldValue.


        :param user_list: The user_list of this FieldValue.
        :type user_list: UserList
        """

        self._user_list = user_list
