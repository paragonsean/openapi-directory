# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user import User
from openapi_server import util


class Impersonation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, impersonated_user: User=None):
        """Impersonation - a model defined in OpenAPI

        :param impersonated_user: The impersonated_user of this Impersonation.
        """
        self.openapi_types = {
            'impersonated_user': User
        }

        self.attribute_map = {
            'impersonated_user': 'impersonatedUser'
        }

        self._impersonated_user = impersonated_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Impersonation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Impersonation of this Impersonation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def impersonated_user(self):
        """Gets the impersonated_user of this Impersonation.


        :return: The impersonated_user of this Impersonation.
        :rtype: User
        """
        return self._impersonated_user

    @impersonated_user.setter
    def impersonated_user(self, impersonated_user):
        """Sets the impersonated_user of this Impersonation.


        :param impersonated_user: The impersonated_user of this Impersonation.
        :type impersonated_user: User
        """

        self._impersonated_user = impersonated_user
