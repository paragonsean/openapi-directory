# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.drive_item import DriveItem
from openapi_server import util


class FileComment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legacy_comment_id: str=None, legacy_discussion_id: str=None, link_to_discussion: str=None, parent: DriveItem=None):
        """FileComment - a model defined in OpenAPI

        :param legacy_comment_id: The legacy_comment_id of this FileComment.
        :param legacy_discussion_id: The legacy_discussion_id of this FileComment.
        :param link_to_discussion: The link_to_discussion of this FileComment.
        :param parent: The parent of this FileComment.
        """
        self.openapi_types = {
            'legacy_comment_id': str,
            'legacy_discussion_id': str,
            'link_to_discussion': str,
            'parent': DriveItem
        }

        self.attribute_map = {
            'legacy_comment_id': 'legacyCommentId',
            'legacy_discussion_id': 'legacyDiscussionId',
            'link_to_discussion': 'linkToDiscussion',
            'parent': 'parent'
        }

        self._legacy_comment_id = legacy_comment_id
        self._legacy_discussion_id = legacy_discussion_id
        self._link_to_discussion = link_to_discussion
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileComment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileComment of this FileComment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legacy_comment_id(self):
        """Gets the legacy_comment_id of this FileComment.

        The comment in the discussion thread. This identifier is an opaque string compatible with the Drive API; see https://developers.google.com/drive/v3/reference/comments/get

        :return: The legacy_comment_id of this FileComment.
        :rtype: str
        """
        return self._legacy_comment_id

    @legacy_comment_id.setter
    def legacy_comment_id(self, legacy_comment_id):
        """Sets the legacy_comment_id of this FileComment.

        The comment in the discussion thread. This identifier is an opaque string compatible with the Drive API; see https://developers.google.com/drive/v3/reference/comments/get

        :param legacy_comment_id: The legacy_comment_id of this FileComment.
        :type legacy_comment_id: str
        """

        self._legacy_comment_id = legacy_comment_id

    @property
    def legacy_discussion_id(self):
        """Gets the legacy_discussion_id of this FileComment.

        The discussion thread to which the comment was added. This identifier is an opaque string compatible with the Drive API and references the first comment in a discussion; see https://developers.google.com/drive/v3/reference/comments/get

        :return: The legacy_discussion_id of this FileComment.
        :rtype: str
        """
        return self._legacy_discussion_id

    @legacy_discussion_id.setter
    def legacy_discussion_id(self, legacy_discussion_id):
        """Sets the legacy_discussion_id of this FileComment.

        The discussion thread to which the comment was added. This identifier is an opaque string compatible with the Drive API and references the first comment in a discussion; see https://developers.google.com/drive/v3/reference/comments/get

        :param legacy_discussion_id: The legacy_discussion_id of this FileComment.
        :type legacy_discussion_id: str
        """

        self._legacy_discussion_id = legacy_discussion_id

    @property
    def link_to_discussion(self):
        """Gets the link_to_discussion of this FileComment.

        The link to the discussion thread containing this comment, for example, `https://docs.google.com/DOCUMENT_ID/edit?disco=THREAD_ID`.

        :return: The link_to_discussion of this FileComment.
        :rtype: str
        """
        return self._link_to_discussion

    @link_to_discussion.setter
    def link_to_discussion(self, link_to_discussion):
        """Sets the link_to_discussion of this FileComment.

        The link to the discussion thread containing this comment, for example, `https://docs.google.com/DOCUMENT_ID/edit?disco=THREAD_ID`.

        :param link_to_discussion: The link_to_discussion of this FileComment.
        :type link_to_discussion: str
        """

        self._link_to_discussion = link_to_discussion

    @property
    def parent(self):
        """Gets the parent of this FileComment.


        :return: The parent of this FileComment.
        :rtype: DriveItem
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this FileComment.


        :param parent: The parent of this FileComment.
        :type parent: DriveItem
        """

        self._parent = parent
