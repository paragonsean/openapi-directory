# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain import Domain
from openapi_server.models.drive_reference import DriveReference
from openapi_server.models.team_drive_reference import TeamDriveReference
from openapi_server.models.user import User
from openapi_server import util


class Owner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: Domain=None, drive: DriveReference=None, team_drive: TeamDriveReference=None, user: User=None):
        """Owner - a model defined in OpenAPI

        :param domain: The domain of this Owner.
        :param drive: The drive of this Owner.
        :param team_drive: The team_drive of this Owner.
        :param user: The user of this Owner.
        """
        self.openapi_types = {
            'domain': Domain,
            'drive': DriveReference,
            'team_drive': TeamDriveReference,
            'user': User
        }

        self.attribute_map = {
            'domain': 'domain',
            'drive': 'drive',
            'team_drive': 'teamDrive',
            'user': 'user'
        }

        self._domain = domain
        self._drive = drive
        self._team_drive = team_drive
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Owner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Owner of this Owner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this Owner.


        :return: The domain of this Owner.
        :rtype: Domain
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this Owner.


        :param domain: The domain of this Owner.
        :type domain: Domain
        """

        self._domain = domain

    @property
    def drive(self):
        """Gets the drive of this Owner.


        :return: The drive of this Owner.
        :rtype: DriveReference
        """
        return self._drive

    @drive.setter
    def drive(self, drive):
        """Sets the drive of this Owner.


        :param drive: The drive of this Owner.
        :type drive: DriveReference
        """

        self._drive = drive

    @property
    def team_drive(self):
        """Gets the team_drive of this Owner.


        :return: The team_drive of this Owner.
        :rtype: TeamDriveReference
        """
        return self._team_drive

    @team_drive.setter
    def team_drive(self, team_drive):
        """Sets the team_drive of this Owner.


        :param team_drive: The team_drive of this Owner.
        :type team_drive: TeamDriveReference
        """

        self._team_drive = team_drive

    @property
    def user(self):
        """Gets the user of this Owner.


        :return: The user of this Owner.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Owner.


        :param user: The user of this Owner.
        :type user: User
        """

        self._user = user
