# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KnownUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_current_user: bool=None, person_name: str=None):
        """KnownUser - a model defined in OpenAPI

        :param is_current_user: The is_current_user of this KnownUser.
        :param person_name: The person_name of this KnownUser.
        """
        self.openapi_types = {
            'is_current_user': bool,
            'person_name': str
        }

        self.attribute_map = {
            'is_current_user': 'isCurrentUser',
            'person_name': 'personName'
        }

        self._is_current_user = is_current_user
        self._person_name = person_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KnownUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KnownUser of this KnownUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_current_user(self):
        """Gets the is_current_user of this KnownUser.

        True if this is the user making the request.

        :return: The is_current_user of this KnownUser.
        :rtype: bool
        """
        return self._is_current_user

    @is_current_user.setter
    def is_current_user(self, is_current_user):
        """Sets the is_current_user of this KnownUser.

        True if this is the user making the request.

        :param is_current_user: The is_current_user of this KnownUser.
        :type is_current_user: bool
        """

        self._is_current_user = is_current_user

    @property
    def person_name(self):
        """Gets the person_name of this KnownUser.

        The identifier for this user that can be used with the People API to get more information. The format is `people/ACCOUNT_ID`. See https://developers.google.com/people/.

        :return: The person_name of this KnownUser.
        :rtype: str
        """
        return self._person_name

    @person_name.setter
    def person_name(self, person_name):
        """Sets the person_name of this KnownUser.

        The identifier for this user that can be used with the People API to get more information. The format is `people/ACCOUNT_ID`. See https://developers.google.com/people/.

        :param person_name: The person_name of this KnownUser.
        :type person_name: str
        """

        self._person_name = person_name
