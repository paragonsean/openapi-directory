# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.known_user import KnownUser
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted_user: object=None, known_user: KnownUser=None, unknown_user: object=None):
        """User - a model defined in OpenAPI

        :param deleted_user: The deleted_user of this User.
        :param known_user: The known_user of this User.
        :param unknown_user: The unknown_user of this User.
        """
        self.openapi_types = {
            'deleted_user': object,
            'known_user': KnownUser,
            'unknown_user': object
        }

        self.attribute_map = {
            'deleted_user': 'deletedUser',
            'known_user': 'knownUser',
            'unknown_user': 'unknownUser'
        }

        self._deleted_user = deleted_user
        self._known_user = known_user
        self._unknown_user = unknown_user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted_user(self):
        """Gets the deleted_user of this User.

        A user whose account has since been deleted.

        :return: The deleted_user of this User.
        :rtype: object
        """
        return self._deleted_user

    @deleted_user.setter
    def deleted_user(self, deleted_user):
        """Sets the deleted_user of this User.

        A user whose account has since been deleted.

        :param deleted_user: The deleted_user of this User.
        :type deleted_user: object
        """

        self._deleted_user = deleted_user

    @property
    def known_user(self):
        """Gets the known_user of this User.


        :return: The known_user of this User.
        :rtype: KnownUser
        """
        return self._known_user

    @known_user.setter
    def known_user(self, known_user):
        """Sets the known_user of this User.


        :param known_user: The known_user of this User.
        :type known_user: KnownUser
        """

        self._known_user = known_user

    @property
    def unknown_user(self):
        """Gets the unknown_user of this User.

        A user about whom nothing is currently known.

        :return: The unknown_user of this User.
        :rtype: object
        """
        return self._unknown_user

    @unknown_user.setter
    def unknown_user(self, unknown_user):
        """Sets the unknown_user of this User.

        A user about whom nothing is currently known.

        :param unknown_user: The unknown_user of this User.
        :type unknown_user: object
        """

        self._unknown_user = unknown_user
