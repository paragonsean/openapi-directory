# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_reference import ApplicationReference
from openapi_server.models.applied_label_change import AppliedLabelChange
from openapi_server.models.comment import Comment
from openapi_server.models.create import Create
from openapi_server.models.data_leak_prevention_change import DataLeakPreventionChange
from openapi_server.models.delete import Delete
from openapi_server.models.move import Move
from openapi_server.models.permission_change import PermissionChange
from openapi_server.models.rename import Rename
from openapi_server.models.restore import Restore
from openapi_server.models.settings_change import SettingsChange
from openapi_server import util


class ActionDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applied_label_change: AppliedLabelChange=None, comment: Comment=None, create: Create=None, delete: Delete=None, dlp_change: DataLeakPreventionChange=None, edit: object=None, move: Move=None, permission_change: PermissionChange=None, reference: ApplicationReference=None, rename: Rename=None, restore: Restore=None, settings_change: SettingsChange=None):
        """ActionDetail - a model defined in OpenAPI

        :param applied_label_change: The applied_label_change of this ActionDetail.
        :param comment: The comment of this ActionDetail.
        :param create: The create of this ActionDetail.
        :param delete: The delete of this ActionDetail.
        :param dlp_change: The dlp_change of this ActionDetail.
        :param edit: The edit of this ActionDetail.
        :param move: The move of this ActionDetail.
        :param permission_change: The permission_change of this ActionDetail.
        :param reference: The reference of this ActionDetail.
        :param rename: The rename of this ActionDetail.
        :param restore: The restore of this ActionDetail.
        :param settings_change: The settings_change of this ActionDetail.
        """
        self.openapi_types = {
            'applied_label_change': AppliedLabelChange,
            'comment': Comment,
            'create': Create,
            'delete': Delete,
            'dlp_change': DataLeakPreventionChange,
            'edit': object,
            'move': Move,
            'permission_change': PermissionChange,
            'reference': ApplicationReference,
            'rename': Rename,
            'restore': Restore,
            'settings_change': SettingsChange
        }

        self.attribute_map = {
            'applied_label_change': 'appliedLabelChange',
            'comment': 'comment',
            'create': 'create',
            'delete': 'delete',
            'dlp_change': 'dlpChange',
            'edit': 'edit',
            'move': 'move',
            'permission_change': 'permissionChange',
            'reference': 'reference',
            'rename': 'rename',
            'restore': 'restore',
            'settings_change': 'settingsChange'
        }

        self._applied_label_change = applied_label_change
        self._comment = comment
        self._create = create
        self._delete = delete
        self._dlp_change = dlp_change
        self._edit = edit
        self._move = move
        self._permission_change = permission_change
        self._reference = reference
        self._rename = rename
        self._restore = restore
        self._settings_change = settings_change

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionDetail of this ActionDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applied_label_change(self):
        """Gets the applied_label_change of this ActionDetail.


        :return: The applied_label_change of this ActionDetail.
        :rtype: AppliedLabelChange
        """
        return self._applied_label_change

    @applied_label_change.setter
    def applied_label_change(self, applied_label_change):
        """Sets the applied_label_change of this ActionDetail.


        :param applied_label_change: The applied_label_change of this ActionDetail.
        :type applied_label_change: AppliedLabelChange
        """

        self._applied_label_change = applied_label_change

    @property
    def comment(self):
        """Gets the comment of this ActionDetail.


        :return: The comment of this ActionDetail.
        :rtype: Comment
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this ActionDetail.


        :param comment: The comment of this ActionDetail.
        :type comment: Comment
        """

        self._comment = comment

    @property
    def create(self):
        """Gets the create of this ActionDetail.


        :return: The create of this ActionDetail.
        :rtype: Create
        """
        return self._create

    @create.setter
    def create(self, create):
        """Sets the create of this ActionDetail.


        :param create: The create of this ActionDetail.
        :type create: Create
        """

        self._create = create

    @property
    def delete(self):
        """Gets the delete of this ActionDetail.


        :return: The delete of this ActionDetail.
        :rtype: Delete
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this ActionDetail.


        :param delete: The delete of this ActionDetail.
        :type delete: Delete
        """

        self._delete = delete

    @property
    def dlp_change(self):
        """Gets the dlp_change of this ActionDetail.


        :return: The dlp_change of this ActionDetail.
        :rtype: DataLeakPreventionChange
        """
        return self._dlp_change

    @dlp_change.setter
    def dlp_change(self, dlp_change):
        """Sets the dlp_change of this ActionDetail.


        :param dlp_change: The dlp_change of this ActionDetail.
        :type dlp_change: DataLeakPreventionChange
        """

        self._dlp_change = dlp_change

    @property
    def edit(self):
        """Gets the edit of this ActionDetail.

        An empty message indicating an object was edited.

        :return: The edit of this ActionDetail.
        :rtype: object
        """
        return self._edit

    @edit.setter
    def edit(self, edit):
        """Sets the edit of this ActionDetail.

        An empty message indicating an object was edited.

        :param edit: The edit of this ActionDetail.
        :type edit: object
        """

        self._edit = edit

    @property
    def move(self):
        """Gets the move of this ActionDetail.


        :return: The move of this ActionDetail.
        :rtype: Move
        """
        return self._move

    @move.setter
    def move(self, move):
        """Sets the move of this ActionDetail.


        :param move: The move of this ActionDetail.
        :type move: Move
        """

        self._move = move

    @property
    def permission_change(self):
        """Gets the permission_change of this ActionDetail.


        :return: The permission_change of this ActionDetail.
        :rtype: PermissionChange
        """
        return self._permission_change

    @permission_change.setter
    def permission_change(self, permission_change):
        """Sets the permission_change of this ActionDetail.


        :param permission_change: The permission_change of this ActionDetail.
        :type permission_change: PermissionChange
        """

        self._permission_change = permission_change

    @property
    def reference(self):
        """Gets the reference of this ActionDetail.


        :return: The reference of this ActionDetail.
        :rtype: ApplicationReference
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this ActionDetail.


        :param reference: The reference of this ActionDetail.
        :type reference: ApplicationReference
        """

        self._reference = reference

    @property
    def rename(self):
        """Gets the rename of this ActionDetail.


        :return: The rename of this ActionDetail.
        :rtype: Rename
        """
        return self._rename

    @rename.setter
    def rename(self, rename):
        """Sets the rename of this ActionDetail.


        :param rename: The rename of this ActionDetail.
        :type rename: Rename
        """

        self._rename = rename

    @property
    def restore(self):
        """Gets the restore of this ActionDetail.


        :return: The restore of this ActionDetail.
        :rtype: Restore
        """
        return self._restore

    @restore.setter
    def restore(self, restore):
        """Sets the restore of this ActionDetail.


        :param restore: The restore of this ActionDetail.
        :type restore: Restore
        """

        self._restore = restore

    @property
    def settings_change(self):
        """Gets the settings_change of this ActionDetail.


        :return: The settings_change of this ActionDetail.
        :rtype: SettingsChange
        """
        return self._settings_change

    @settings_change.setter
    def settings_change(self, settings_change):
        """Sets the settings_change of this ActionDetail.


        :param settings_change: The settings_change of this ActionDetail.
        :type settings_change: SettingsChange
        """

        self._settings_change = settings_change
