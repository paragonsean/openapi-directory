# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Domain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, legacy_id: str=None, name: str=None):
        """Domain - a model defined in OpenAPI

        :param legacy_id: The legacy_id of this Domain.
        :param name: The name of this Domain.
        """
        self.openapi_types = {
            'legacy_id': str,
            'name': str
        }

        self.attribute_map = {
            'legacy_id': 'legacyId',
            'name': 'name'
        }

        self._legacy_id = legacy_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Domain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Domain of this Domain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def legacy_id(self):
        """Gets the legacy_id of this Domain.

        An opaque string used to identify this domain.

        :return: The legacy_id of this Domain.
        :rtype: str
        """
        return self._legacy_id

    @legacy_id.setter
    def legacy_id(self, legacy_id):
        """Sets the legacy_id of this Domain.

        An opaque string used to identify this domain.

        :param legacy_id: The legacy_id of this Domain.
        :type legacy_id: str
        """

        self._legacy_id = legacy_id

    @property
    def name(self):
        """Gets the name of this Domain.

        The name of the domain, e.g. `google.com`.

        :return: The name of this Domain.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Domain.

        The name of the domain, e.g. `google.com`.

        :param name: The name of this Domain.
        :type name: str
        """

        self._name = name
