# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_value import FieldValue
from openapi_server import util


class FieldValueChange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, field_id: str=None, new_value: FieldValue=None, old_value: FieldValue=None):
        """FieldValueChange - a model defined in OpenAPI

        :param display_name: The display_name of this FieldValueChange.
        :param field_id: The field_id of this FieldValueChange.
        :param new_value: The new_value of this FieldValueChange.
        :param old_value: The old_value of this FieldValueChange.
        """
        self.openapi_types = {
            'display_name': str,
            'field_id': str,
            'new_value': FieldValue,
            'old_value': FieldValue
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'field_id': 'fieldId',
            'new_value': 'newValue',
            'old_value': 'oldValue'
        }

        self._display_name = display_name
        self._field_id = field_id
        self._new_value = new_value
        self._old_value = old_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldValueChange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldValueChange of this FieldValueChange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this FieldValueChange.

        The human-readable display name for this field.

        :return: The display_name of this FieldValueChange.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this FieldValueChange.

        The human-readable display name for this field.

        :param display_name: The display_name of this FieldValueChange.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def field_id(self):
        """Gets the field_id of this FieldValueChange.

        The ID of this field. Field IDs are unique within a Label.

        :return: The field_id of this FieldValueChange.
        :rtype: str
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this FieldValueChange.

        The ID of this field. Field IDs are unique within a Label.

        :param field_id: The field_id of this FieldValueChange.
        :type field_id: str
        """

        self._field_id = field_id

    @property
    def new_value(self):
        """Gets the new_value of this FieldValueChange.


        :return: The new_value of this FieldValueChange.
        :rtype: FieldValue
        """
        return self._new_value

    @new_value.setter
    def new_value(self, new_value):
        """Sets the new_value of this FieldValueChange.


        :param new_value: The new_value of this FieldValueChange.
        :type new_value: FieldValue
        """

        self._new_value = new_value

    @property
    def old_value(self):
        """Gets the old_value of this FieldValueChange.


        :return: The old_value of this FieldValueChange.
        :rtype: FieldValue
        """
        return self._old_value

    @old_value.setter
    def old_value(self, old_value):
        """Sets the old_value of this FieldValueChange.


        :param old_value: The old_value of this FieldValueChange.
        :type old_value: FieldValue
        """

        self._old_value = old_value
