# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.copy import Copy
from openapi_server import util


class Create(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copy: Copy=None, new: object=None, upload: object=None):
        """Create - a model defined in OpenAPI

        :param copy: The copy of this Create.
        :param new: The new of this Create.
        :param upload: The upload of this Create.
        """
        self.openapi_types = {
            'copy': Copy,
            'new': object,
            'upload': object
        }

        self.attribute_map = {
            'copy': 'copy',
            'new': 'new',
            'upload': 'upload'
        }

        self._copy = copy
        self._new = new
        self._upload = upload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Create':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Create of this Create.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copy(self):
        """Gets the copy of this Create.


        :return: The copy of this Create.
        :rtype: Copy
        """
        return self._copy

    @copy.setter
    def copy(self, copy):
        """Sets the copy of this Create.


        :param copy: The copy of this Create.
        :type copy: Copy
        """

        self._copy = copy

    @property
    def new(self):
        """Gets the new of this Create.

        An object was created from scratch.

        :return: The new of this Create.
        :rtype: object
        """
        return self._new

    @new.setter
    def new(self, new):
        """Sets the new of this Create.

        An object was created from scratch.

        :param new: The new of this Create.
        :type new: object
        """

        self._new = new

    @property
    def upload(self):
        """Gets the upload of this Create.

        An object was uploaded into Drive.

        :return: The upload of this Create.
        :rtype: object
        """
        return self._upload

    @upload.setter
    def upload(self, upload):
        """Sets the upload of this Create.

        An object was uploaded into Drive.

        :param upload: The upload of this Create.
        :type upload: object
        """

        self._upload = upload
