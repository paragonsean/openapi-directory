# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.target_reference import TargetReference
from openapi_server import util


class Copy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, original_object: TargetReference=None):
        """Copy - a model defined in OpenAPI

        :param original_object: The original_object of this Copy.
        """
        self.openapi_types = {
            'original_object': TargetReference
        }

        self.attribute_map = {
            'original_object': 'originalObject'
        }

        self._original_object = original_object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Copy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Copy of this Copy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original_object(self):
        """Gets the original_object of this Copy.


        :return: The original_object of this Copy.
        :rtype: TargetReference
        """
        return self._original_object

    @original_object.setter
    def original_object(self, original_object):
        """Sets the original_object of this Copy.


        :param original_object: The original_object of this Copy.
        :type original_object: TargetReference
        """

        self._original_object = original_object
