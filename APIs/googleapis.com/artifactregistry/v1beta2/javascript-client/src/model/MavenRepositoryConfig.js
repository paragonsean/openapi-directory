/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MavenRepositoryConfig model module.
 * @module model/MavenRepositoryConfig
 * @version v1beta2
 */
class MavenRepositoryConfig {
    /**
     * Constructs a new <code>MavenRepositoryConfig</code>.
     * MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of the maven format type.
     * @alias module:model/MavenRepositoryConfig
     */
    constructor() { 
        
        MavenRepositoryConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MavenRepositoryConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MavenRepositoryConfig} obj Optional instance to populate.
     * @return {module:model/MavenRepositoryConfig} The populated <code>MavenRepositoryConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MavenRepositoryConfig();

            if (data.hasOwnProperty('allowSnapshotOverwrites')) {
                obj['allowSnapshotOverwrites'] = ApiClient.convertToType(data['allowSnapshotOverwrites'], 'Boolean');
            }
            if (data.hasOwnProperty('versionPolicy')) {
                obj['versionPolicy'] = ApiClient.convertToType(data['versionPolicy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MavenRepositoryConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MavenRepositoryConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['versionPolicy'] && !(typeof data['versionPolicy'] === 'string' || data['versionPolicy'] instanceof String)) {
            throw new Error("Expected the field `versionPolicy` to be a primitive type in the JSON string but got " + data['versionPolicy']);
        }

        return true;
    }


}



/**
 * The repository with this flag will allow publishing the same snapshot versions.
 * @member {Boolean} allowSnapshotOverwrites
 */
MavenRepositoryConfig.prototype['allowSnapshotOverwrites'] = undefined;

/**
 * Version policy defines the versions that the registry will accept.
 * @member {module:model/MavenRepositoryConfig.VersionPolicyEnum} versionPolicy
 */
MavenRepositoryConfig.prototype['versionPolicy'] = undefined;





/**
 * Allowed values for the <code>versionPolicy</code> property.
 * @enum {String}
 * @readonly
 */
MavenRepositoryConfig['VersionPolicyEnum'] = {

    /**
     * value: "VERSION_POLICY_UNSPECIFIED"
     * @const
     */
    "VERSION_POLICY_UNSPECIFIED": "VERSION_POLICY_UNSPECIFIED",

    /**
     * value: "RELEASE"
     * @const
     */
    "RELEASE": "RELEASE",

    /**
     * value: "SNAPSHOT"
     * @const
     */
    "SNAPSHOT": "SNAPSHOT"
};



export default MavenRepositoryConfig;

