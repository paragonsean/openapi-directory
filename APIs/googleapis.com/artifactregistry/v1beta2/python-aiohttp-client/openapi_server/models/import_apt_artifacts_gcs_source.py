# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportAptArtifactsGcsSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uris: List[str]=None, use_wildcards: bool=None):
        """ImportAptArtifactsGcsSource - a model defined in OpenAPI

        :param uris: The uris of this ImportAptArtifactsGcsSource.
        :param use_wildcards: The use_wildcards of this ImportAptArtifactsGcsSource.
        """
        self.openapi_types = {
            'uris': List[str],
            'use_wildcards': bool
        }

        self.attribute_map = {
            'uris': 'uris',
            'use_wildcards': 'useWildcards'
        }

        self._uris = uris
        self._use_wildcards = use_wildcards

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportAptArtifactsGcsSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportAptArtifactsGcsSource of this ImportAptArtifactsGcsSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uris(self):
        """Gets the uris of this ImportAptArtifactsGcsSource.

        Cloud Storage paths URI (e.g., gs://my_bucket//my_object).

        :return: The uris of this ImportAptArtifactsGcsSource.
        :rtype: List[str]
        """
        return self._uris

    @uris.setter
    def uris(self, uris):
        """Sets the uris of this ImportAptArtifactsGcsSource.

        Cloud Storage paths URI (e.g., gs://my_bucket//my_object).

        :param uris: The uris of this ImportAptArtifactsGcsSource.
        :type uris: List[str]
        """

        self._uris = uris

    @property
    def use_wildcards(self):
        """Gets the use_wildcards of this ImportAptArtifactsGcsSource.

        Supports URI wildcards for matching multiple objects from a single URI.

        :return: The use_wildcards of this ImportAptArtifactsGcsSource.
        :rtype: bool
        """
        return self._use_wildcards

    @use_wildcards.setter
    def use_wildcards(self, use_wildcards):
        """Sets the use_wildcards of this ImportAptArtifactsGcsSource.

        Supports URI wildcards for matching multiple objects from a single URI.

        :param use_wildcards: The use_wildcards of this ImportAptArtifactsGcsSource.
        :type use_wildcards: bool
        """

        self._use_wildcards = use_wildcards
