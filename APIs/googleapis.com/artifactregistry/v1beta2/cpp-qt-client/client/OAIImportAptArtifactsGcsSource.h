/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportAptArtifactsGcsSource.h
 *
 * Google Cloud Storage location where the artifacts currently reside.
 */

#ifndef OAIImportAptArtifactsGcsSource_H
#define OAIImportAptArtifactsGcsSource_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportAptArtifactsGcsSource : public OAIObject {
public:
    OAIImportAptArtifactsGcsSource();
    OAIImportAptArtifactsGcsSource(QString json);
    ~OAIImportAptArtifactsGcsSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getUris() const;
    void setUris(const QList<QString> &uris);
    bool is_uris_Set() const;
    bool is_uris_Valid() const;

    bool isUseWildcards() const;
    void setUseWildcards(const bool &use_wildcards);
    bool is_use_wildcards_Set() const;
    bool is_use_wildcards_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_uris;
    bool m_uris_isSet;
    bool m_uris_isValid;

    bool m_use_wildcards;
    bool m_use_wildcards_isSet;
    bool m_use_wildcards_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportAptArtifactsGcsSource)

#endif // OAIImportAptArtifactsGcsSource_H
