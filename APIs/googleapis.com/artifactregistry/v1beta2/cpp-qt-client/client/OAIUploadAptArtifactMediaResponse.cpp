/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUploadAptArtifactMediaResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUploadAptArtifactMediaResponse::OAIUploadAptArtifactMediaResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUploadAptArtifactMediaResponse::OAIUploadAptArtifactMediaResponse() {
    this->initializeModel();
}

OAIUploadAptArtifactMediaResponse::~OAIUploadAptArtifactMediaResponse() {}

void OAIUploadAptArtifactMediaResponse::initializeModel() {

    m_operation_isSet = false;
    m_operation_isValid = false;
}

void OAIUploadAptArtifactMediaResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUploadAptArtifactMediaResponse::fromJsonObject(QJsonObject json) {

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;
}

QString OAIUploadAptArtifactMediaResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUploadAptArtifactMediaResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_operation.isSet()) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    return obj;
}

OAIOperation OAIUploadAptArtifactMediaResponse::getOperation() const {
    return m_operation;
}
void OAIUploadAptArtifactMediaResponse::setOperation(const OAIOperation &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIUploadAptArtifactMediaResponse::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIUploadAptArtifactMediaResponse::is_operation_Valid() const{
    return m_operation_isValid;
}

bool OAIUploadAptArtifactMediaResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUploadAptArtifactMediaResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
