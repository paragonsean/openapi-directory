/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVirtualRepositoryConfig.h
 *
 * Virtual repository configuration.
 */

#ifndef OAIVirtualRepositoryConfig_H
#define OAIVirtualRepositoryConfig_H

#include <QJsonObject>

#include "OAIUpstreamPolicy.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpstreamPolicy;

class OAIVirtualRepositoryConfig : public OAIObject {
public:
    OAIVirtualRepositoryConfig();
    OAIVirtualRepositoryConfig(QString json);
    ~OAIVirtualRepositoryConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUpstreamPolicy> getUpstreamPolicies() const;
    void setUpstreamPolicies(const QList<OAIUpstreamPolicy> &upstream_policies);
    bool is_upstream_policies_Set() const;
    bool is_upstream_policies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUpstreamPolicy> m_upstream_policies;
    bool m_upstream_policies_isSet;
    bool m_upstream_policies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVirtualRepositoryConfig)

#endif // OAIVirtualRepositoryConfig_H
