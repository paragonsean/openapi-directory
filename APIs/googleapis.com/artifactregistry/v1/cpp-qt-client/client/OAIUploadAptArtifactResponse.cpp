/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUploadAptArtifactResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUploadAptArtifactResponse::OAIUploadAptArtifactResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUploadAptArtifactResponse::OAIUploadAptArtifactResponse() {
    this->initializeModel();
}

OAIUploadAptArtifactResponse::~OAIUploadAptArtifactResponse() {}

void OAIUploadAptArtifactResponse::initializeModel() {

    m_apt_artifacts_isSet = false;
    m_apt_artifacts_isValid = false;
}

void OAIUploadAptArtifactResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUploadAptArtifactResponse::fromJsonObject(QJsonObject json) {

    m_apt_artifacts_isValid = ::OpenAPI::fromJsonValue(m_apt_artifacts, json[QString("aptArtifacts")]);
    m_apt_artifacts_isSet = !json[QString("aptArtifacts")].isNull() && m_apt_artifacts_isValid;
}

QString OAIUploadAptArtifactResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUploadAptArtifactResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_apt_artifacts.size() > 0) {
        obj.insert(QString("aptArtifacts"), ::OpenAPI::toJsonValue(m_apt_artifacts));
    }
    return obj;
}

QList<OAIAptArtifact> OAIUploadAptArtifactResponse::getAptArtifacts() const {
    return m_apt_artifacts;
}
void OAIUploadAptArtifactResponse::setAptArtifacts(const QList<OAIAptArtifact> &apt_artifacts) {
    m_apt_artifacts = apt_artifacts;
    m_apt_artifacts_isSet = true;
}

bool OAIUploadAptArtifactResponse::is_apt_artifacts_Set() const{
    return m_apt_artifacts_isSet;
}

bool OAIUploadAptArtifactResponse::is_apt_artifacts_Valid() const{
    return m_apt_artifacts_isValid;
}

bool OAIUploadAptArtifactResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apt_artifacts.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUploadAptArtifactResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
