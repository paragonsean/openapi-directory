/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportAptArtifactsResponse.h
 *
 * The response message from importing APT artifacts.
 */

#ifndef OAIImportAptArtifactsResponse_H
#define OAIImportAptArtifactsResponse_H

#include <QJsonObject>

#include "OAIAptArtifact.h"
#include "OAIImportAptArtifactsErrorInfo.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAptArtifact;
class OAIImportAptArtifactsErrorInfo;

class OAIImportAptArtifactsResponse : public OAIObject {
public:
    OAIImportAptArtifactsResponse();
    OAIImportAptArtifactsResponse(QString json);
    ~OAIImportAptArtifactsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAptArtifact> getAptArtifacts() const;
    void setAptArtifacts(const QList<OAIAptArtifact> &apt_artifacts);
    bool is_apt_artifacts_Set() const;
    bool is_apt_artifacts_Valid() const;

    QList<OAIImportAptArtifactsErrorInfo> getErrors() const;
    void setErrors(const QList<OAIImportAptArtifactsErrorInfo> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAptArtifact> m_apt_artifacts;
    bool m_apt_artifacts_isSet;
    bool m_apt_artifacts_isValid;

    QList<OAIImportAptArtifactsErrorInfo> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportAptArtifactsResponse)

#endif // OAIImportAptArtifactsResponse_H
