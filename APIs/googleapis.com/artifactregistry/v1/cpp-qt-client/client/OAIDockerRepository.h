/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDockerRepository.h
 *
 * Configuration for a Docker remote repository.
 */

#ifndef OAIDockerRepository_H
#define OAIDockerRepository_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDockerRepository : public OAIObject {
public:
    OAIDockerRepository();
    OAIDockerRepository(QString json);
    ~OAIDockerRepository() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPublicRepository() const;
    void setPublicRepository(const QString &public_repository);
    bool is_public_repository_Set() const;
    bool is_public_repository_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_public_repository;
    bool m_public_repository_isSet;
    bool m_public_repository_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDockerRepository)

#endif // OAIDockerRepository_H
