/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository.h
 *
 * Publicly available Yum repositories constructed from a common repository base and a custom repository path.
 */

#ifndef OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_H
#define OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository : public OAIObject {
public:
    OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository();
    OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository(QString json);
    ~OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRepositoryBase() const;
    void setRepositoryBase(const QString &repository_base);
    bool is_repository_base_Set() const;
    bool is_repository_base_Valid() const;

    QString getRepositoryPath() const;
    void setRepositoryPath(const QString &repository_path);
    bool is_repository_path_Set() const;
    bool is_repository_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_repository_base;
    bool m_repository_base_isSet;
    bool m_repository_base_isValid;

    QString m_repository_path;
    bool m_repository_path_isSet;
    bool m_repository_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository)

#endif // OAIGoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository_H
