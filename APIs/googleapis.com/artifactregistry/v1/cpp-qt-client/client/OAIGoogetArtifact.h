/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogetArtifact.h
 *
 * A detailed representation of a GooGet artifact.
 */

#ifndef OAIGoogetArtifact_H
#define OAIGoogetArtifact_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogetArtifact : public OAIObject {
public:
    OAIGoogetArtifact();
    OAIGoogetArtifact(QString json);
    ~OAIGoogetArtifact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArchitecture() const;
    void setArchitecture(const QString &architecture);
    bool is_architecture_Set() const;
    bool is_architecture_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_architecture;
    bool m_architecture_isSet;
    bool m_architecture_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogetArtifact)

#endif // OAIGoogetArtifact_H
