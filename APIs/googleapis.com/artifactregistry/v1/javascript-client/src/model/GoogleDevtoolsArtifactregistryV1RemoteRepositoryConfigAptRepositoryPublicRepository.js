/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository model module.
 * @module model/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository
 * @version v1
 */
class GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository {
    /**
     * Constructs a new <code>GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository</code>.
     * Publicly available Apt repositories constructed from a common repository base and a custom repository path.
     * @alias module:model/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository
     */
    constructor() { 
        
        GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository} obj Optional instance to populate.
     * @return {module:model/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository} The populated <code>GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository();

            if (data.hasOwnProperty('repositoryBase')) {
                obj['repositoryBase'] = ApiClient.convertToType(data['repositoryBase'], 'String');
            }
            if (data.hasOwnProperty('repositoryPath')) {
                obj['repositoryPath'] = ApiClient.convertToType(data['repositoryPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['repositoryBase'] && !(typeof data['repositoryBase'] === 'string' || data['repositoryBase'] instanceof String)) {
            throw new Error("Expected the field `repositoryBase` to be a primitive type in the JSON string but got " + data['repositoryBase']);
        }
        // ensure the json data is a string
        if (data['repositoryPath'] && !(typeof data['repositoryPath'] === 'string' || data['repositoryPath'] instanceof String)) {
            throw new Error("Expected the field `repositoryPath` to be a primitive type in the JSON string but got " + data['repositoryPath']);
        }

        return true;
    }


}



/**
 * A common public repository base for Apt.
 * @member {module:model/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository.RepositoryBaseEnum} repositoryBase
 */
GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository.prototype['repositoryBase'] = undefined;

/**
 * A custom field to define a path to a specific repository from the base.
 * @member {String} repositoryPath
 */
GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository.prototype['repositoryPath'] = undefined;





/**
 * Allowed values for the <code>repositoryBase</code> property.
 * @enum {String}
 * @readonly
 */
GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository['RepositoryBaseEnum'] = {

    /**
     * value: "REPOSITORY_BASE_UNSPECIFIED"
     * @const
     */
    "REPOSITORY_BASE_UNSPECIFIED": "REPOSITORY_BASE_UNSPECIFIED",

    /**
     * value: "DEBIAN"
     * @const
     */
    "DEBIAN": "DEBIAN",

    /**
     * value: "UBUNTU"
     * @const
     */
    "UBUNTU": "UBUNTU",

    /**
     * value: "DEBIAN_SNAPSHOT"
     * @const
     */
    "DEBIAN_SNAPSHOT": "DEBIAN_SNAPSHOT"
};



export default GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository;

