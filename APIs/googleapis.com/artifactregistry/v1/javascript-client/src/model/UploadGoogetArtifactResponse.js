/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogetArtifact from './GoogetArtifact';

/**
 * The UploadGoogetArtifactResponse model module.
 * @module model/UploadGoogetArtifactResponse
 * @version v1
 */
class UploadGoogetArtifactResponse {
    /**
     * Constructs a new <code>UploadGoogetArtifactResponse</code>.
     * The response of the completed artifact upload operation. This response is contained in the Operation and available to users.
     * @alias module:model/UploadGoogetArtifactResponse
     */
    constructor() { 
        
        UploadGoogetArtifactResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UploadGoogetArtifactResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadGoogetArtifactResponse} obj Optional instance to populate.
     * @return {module:model/UploadGoogetArtifactResponse} The populated <code>UploadGoogetArtifactResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadGoogetArtifactResponse();

            if (data.hasOwnProperty('googetArtifacts')) {
                obj['googetArtifacts'] = ApiClient.convertToType(data['googetArtifacts'], [GoogetArtifact]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadGoogetArtifactResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadGoogetArtifactResponse</code>.
     */
    static validateJSON(data) {
        if (data['googetArtifacts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['googetArtifacts'])) {
                throw new Error("Expected the field `googetArtifacts` to be an array in the JSON data but got " + data['googetArtifacts']);
            }
            // validate the optional field `googetArtifacts` (array)
            for (const item of data['googetArtifacts']) {
                GoogetArtifact.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The GooGet artifacts updated.
 * @member {Array.<module:model/GoogetArtifact>} googetArtifacts
 */
UploadGoogetArtifactResponse.prototype['googetArtifacts'] = undefined;






export default UploadGoogetArtifactResponse;

