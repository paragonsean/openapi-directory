/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AptRepository from './AptRepository';
import DockerRepository from './DockerRepository';
import MavenRepository from './MavenRepository';
import NpmRepository from './NpmRepository';
import PythonRepository from './PythonRepository';
import UpstreamCredentials from './UpstreamCredentials';
import YumRepository from './YumRepository';

/**
 * The RemoteRepositoryConfig model module.
 * @module model/RemoteRepositoryConfig
 * @version v1
 */
class RemoteRepositoryConfig {
    /**
     * Constructs a new <code>RemoteRepositoryConfig</code>.
     * Remote repository configuration.
     * @alias module:model/RemoteRepositoryConfig
     */
    constructor() { 
        
        RemoteRepositoryConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoteRepositoryConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteRepositoryConfig} obj Optional instance to populate.
     * @return {module:model/RemoteRepositoryConfig} The populated <code>RemoteRepositoryConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteRepositoryConfig();

            if (data.hasOwnProperty('aptRepository')) {
                obj['aptRepository'] = AptRepository.constructFromObject(data['aptRepository']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dockerRepository')) {
                obj['dockerRepository'] = DockerRepository.constructFromObject(data['dockerRepository']);
            }
            if (data.hasOwnProperty('mavenRepository')) {
                obj['mavenRepository'] = MavenRepository.constructFromObject(data['mavenRepository']);
            }
            if (data.hasOwnProperty('npmRepository')) {
                obj['npmRepository'] = NpmRepository.constructFromObject(data['npmRepository']);
            }
            if (data.hasOwnProperty('pythonRepository')) {
                obj['pythonRepository'] = PythonRepository.constructFromObject(data['pythonRepository']);
            }
            if (data.hasOwnProperty('upstreamCredentials')) {
                obj['upstreamCredentials'] = UpstreamCredentials.constructFromObject(data['upstreamCredentials']);
            }
            if (data.hasOwnProperty('yumRepository')) {
                obj['yumRepository'] = YumRepository.constructFromObject(data['yumRepository']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteRepositoryConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteRepositoryConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `aptRepository`
        if (data['aptRepository']) { // data not null
          AptRepository.validateJSON(data['aptRepository']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `dockerRepository`
        if (data['dockerRepository']) { // data not null
          DockerRepository.validateJSON(data['dockerRepository']);
        }
        // validate the optional field `mavenRepository`
        if (data['mavenRepository']) { // data not null
          MavenRepository.validateJSON(data['mavenRepository']);
        }
        // validate the optional field `npmRepository`
        if (data['npmRepository']) { // data not null
          NpmRepository.validateJSON(data['npmRepository']);
        }
        // validate the optional field `pythonRepository`
        if (data['pythonRepository']) { // data not null
          PythonRepository.validateJSON(data['pythonRepository']);
        }
        // validate the optional field `upstreamCredentials`
        if (data['upstreamCredentials']) { // data not null
          UpstreamCredentials.validateJSON(data['upstreamCredentials']);
        }
        // validate the optional field `yumRepository`
        if (data['yumRepository']) { // data not null
          YumRepository.validateJSON(data['yumRepository']);
        }

        return true;
    }


}



/**
 * @member {module:model/AptRepository} aptRepository
 */
RemoteRepositoryConfig.prototype['aptRepository'] = undefined;

/**
 * The description of the remote source.
 * @member {String} description
 */
RemoteRepositoryConfig.prototype['description'] = undefined;

/**
 * @member {module:model/DockerRepository} dockerRepository
 */
RemoteRepositoryConfig.prototype['dockerRepository'] = undefined;

/**
 * @member {module:model/MavenRepository} mavenRepository
 */
RemoteRepositoryConfig.prototype['mavenRepository'] = undefined;

/**
 * @member {module:model/NpmRepository} npmRepository
 */
RemoteRepositoryConfig.prototype['npmRepository'] = undefined;

/**
 * @member {module:model/PythonRepository} pythonRepository
 */
RemoteRepositoryConfig.prototype['pythonRepository'] = undefined;

/**
 * @member {module:model/UpstreamCredentials} upstreamCredentials
 */
RemoteRepositoryConfig.prototype['upstreamCredentials'] = undefined;

/**
 * @member {module:model/YumRepository} yumRepository
 */
RemoteRepositoryConfig.prototype['yumRepository'] = undefined;






export default RemoteRepositoryConfig;

