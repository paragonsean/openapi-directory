/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NpmPackage from './NpmPackage';

/**
 * The ListNpmPackagesResponse model module.
 * @module model/ListNpmPackagesResponse
 * @version v1
 */
class ListNpmPackagesResponse {
    /**
     * Constructs a new <code>ListNpmPackagesResponse</code>.
     * The response from listing npm packages.
     * @alias module:model/ListNpmPackagesResponse
     */
    constructor() { 
        
        ListNpmPackagesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListNpmPackagesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListNpmPackagesResponse} obj Optional instance to populate.
     * @return {module:model/ListNpmPackagesResponse} The populated <code>ListNpmPackagesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListNpmPackagesResponse();

            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('npmPackages')) {
                obj['npmPackages'] = ApiClient.convertToType(data['npmPackages'], [NpmPackage]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListNpmPackagesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListNpmPackagesResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['npmPackages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['npmPackages'])) {
                throw new Error("Expected the field `npmPackages` to be an array in the JSON data but got " + data['npmPackages']);
            }
            // validate the optional field `npmPackages` (array)
            for (const item of data['npmPackages']) {
                NpmPackage.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.
 * @member {String} nextPageToken
 */
ListNpmPackagesResponse.prototype['nextPageToken'] = undefined;

/**
 * The npm packages returned.
 * @member {Array.<module:model/NpmPackage>} npmPackages
 */
ListNpmPackagesResponse.prototype['npmPackages'] = undefined;






export default ListNpmPackagesResponse;

