/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CleanupPolicyCondition from './CleanupPolicyCondition';
import CleanupPolicyMostRecentVersions from './CleanupPolicyMostRecentVersions';

/**
 * The CleanupPolicy model module.
 * @module model/CleanupPolicy
 * @version v1
 */
class CleanupPolicy {
    /**
     * Constructs a new <code>CleanupPolicy</code>.
     * Artifact policy configuration for repository cleanup policies.
     * @alias module:model/CleanupPolicy
     */
    constructor() { 
        
        CleanupPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CleanupPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CleanupPolicy} obj Optional instance to populate.
     * @return {module:model/CleanupPolicy} The populated <code>CleanupPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CleanupPolicy();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = CleanupPolicyCondition.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('mostRecentVersions')) {
                obj['mostRecentVersions'] = CleanupPolicyMostRecentVersions.constructFromObject(data['mostRecentVersions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CleanupPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CleanupPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          CleanupPolicyCondition.validateJSON(data['condition']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `mostRecentVersions`
        if (data['mostRecentVersions']) { // data not null
          CleanupPolicyMostRecentVersions.validateJSON(data['mostRecentVersions']);
        }

        return true;
    }


}



/**
 * Policy action.
 * @member {module:model/CleanupPolicy.ActionEnum} action
 */
CleanupPolicy.prototype['action'] = undefined;

/**
 * @member {module:model/CleanupPolicyCondition} condition
 */
CleanupPolicy.prototype['condition'] = undefined;

/**
 * The user-provided ID of the cleanup policy.
 * @member {String} id
 */
CleanupPolicy.prototype['id'] = undefined;

/**
 * @member {module:model/CleanupPolicyMostRecentVersions} mostRecentVersions
 */
CleanupPolicy.prototype['mostRecentVersions'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
CleanupPolicy['ActionEnum'] = {

    /**
     * value: "ACTION_UNSPECIFIED"
     * @const
     */
    "ACTION_UNSPECIFIED": "ACTION_UNSPECIFIED",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE",

    /**
     * value: "KEEP"
     * @const
     */
    "KEEP": "KEEP"
};



export default CleanupPolicy;

