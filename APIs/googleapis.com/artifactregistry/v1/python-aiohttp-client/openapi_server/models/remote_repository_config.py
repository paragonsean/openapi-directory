# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.apt_repository import AptRepository
from openapi_server.models.docker_repository import DockerRepository
from openapi_server.models.maven_repository import MavenRepository
from openapi_server.models.npm_repository import NpmRepository
from openapi_server.models.python_repository import PythonRepository
from openapi_server.models.upstream_credentials import UpstreamCredentials
from openapi_server.models.yum_repository import YumRepository
from openapi_server import util


class RemoteRepositoryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apt_repository: AptRepository=None, description: str=None, docker_repository: DockerRepository=None, maven_repository: MavenRepository=None, npm_repository: NpmRepository=None, python_repository: PythonRepository=None, upstream_credentials: UpstreamCredentials=None, yum_repository: YumRepository=None):
        """RemoteRepositoryConfig - a model defined in OpenAPI

        :param apt_repository: The apt_repository of this RemoteRepositoryConfig.
        :param description: The description of this RemoteRepositoryConfig.
        :param docker_repository: The docker_repository of this RemoteRepositoryConfig.
        :param maven_repository: The maven_repository of this RemoteRepositoryConfig.
        :param npm_repository: The npm_repository of this RemoteRepositoryConfig.
        :param python_repository: The python_repository of this RemoteRepositoryConfig.
        :param upstream_credentials: The upstream_credentials of this RemoteRepositoryConfig.
        :param yum_repository: The yum_repository of this RemoteRepositoryConfig.
        """
        self.openapi_types = {
            'apt_repository': AptRepository,
            'description': str,
            'docker_repository': DockerRepository,
            'maven_repository': MavenRepository,
            'npm_repository': NpmRepository,
            'python_repository': PythonRepository,
            'upstream_credentials': UpstreamCredentials,
            'yum_repository': YumRepository
        }

        self.attribute_map = {
            'apt_repository': 'aptRepository',
            'description': 'description',
            'docker_repository': 'dockerRepository',
            'maven_repository': 'mavenRepository',
            'npm_repository': 'npmRepository',
            'python_repository': 'pythonRepository',
            'upstream_credentials': 'upstreamCredentials',
            'yum_repository': 'yumRepository'
        }

        self._apt_repository = apt_repository
        self._description = description
        self._docker_repository = docker_repository
        self._maven_repository = maven_repository
        self._npm_repository = npm_repository
        self._python_repository = python_repository
        self._upstream_credentials = upstream_credentials
        self._yum_repository = yum_repository

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoteRepositoryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoteRepositoryConfig of this RemoteRepositoryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apt_repository(self):
        """Gets the apt_repository of this RemoteRepositoryConfig.


        :return: The apt_repository of this RemoteRepositoryConfig.
        :rtype: AptRepository
        """
        return self._apt_repository

    @apt_repository.setter
    def apt_repository(self, apt_repository):
        """Sets the apt_repository of this RemoteRepositoryConfig.


        :param apt_repository: The apt_repository of this RemoteRepositoryConfig.
        :type apt_repository: AptRepository
        """

        self._apt_repository = apt_repository

    @property
    def description(self):
        """Gets the description of this RemoteRepositoryConfig.

        The description of the remote source.

        :return: The description of this RemoteRepositoryConfig.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RemoteRepositoryConfig.

        The description of the remote source.

        :param description: The description of this RemoteRepositoryConfig.
        :type description: str
        """

        self._description = description

    @property
    def docker_repository(self):
        """Gets the docker_repository of this RemoteRepositoryConfig.


        :return: The docker_repository of this RemoteRepositoryConfig.
        :rtype: DockerRepository
        """
        return self._docker_repository

    @docker_repository.setter
    def docker_repository(self, docker_repository):
        """Sets the docker_repository of this RemoteRepositoryConfig.


        :param docker_repository: The docker_repository of this RemoteRepositoryConfig.
        :type docker_repository: DockerRepository
        """

        self._docker_repository = docker_repository

    @property
    def maven_repository(self):
        """Gets the maven_repository of this RemoteRepositoryConfig.


        :return: The maven_repository of this RemoteRepositoryConfig.
        :rtype: MavenRepository
        """
        return self._maven_repository

    @maven_repository.setter
    def maven_repository(self, maven_repository):
        """Sets the maven_repository of this RemoteRepositoryConfig.


        :param maven_repository: The maven_repository of this RemoteRepositoryConfig.
        :type maven_repository: MavenRepository
        """

        self._maven_repository = maven_repository

    @property
    def npm_repository(self):
        """Gets the npm_repository of this RemoteRepositoryConfig.


        :return: The npm_repository of this RemoteRepositoryConfig.
        :rtype: NpmRepository
        """
        return self._npm_repository

    @npm_repository.setter
    def npm_repository(self, npm_repository):
        """Sets the npm_repository of this RemoteRepositoryConfig.


        :param npm_repository: The npm_repository of this RemoteRepositoryConfig.
        :type npm_repository: NpmRepository
        """

        self._npm_repository = npm_repository

    @property
    def python_repository(self):
        """Gets the python_repository of this RemoteRepositoryConfig.


        :return: The python_repository of this RemoteRepositoryConfig.
        :rtype: PythonRepository
        """
        return self._python_repository

    @python_repository.setter
    def python_repository(self, python_repository):
        """Sets the python_repository of this RemoteRepositoryConfig.


        :param python_repository: The python_repository of this RemoteRepositoryConfig.
        :type python_repository: PythonRepository
        """

        self._python_repository = python_repository

    @property
    def upstream_credentials(self):
        """Gets the upstream_credentials of this RemoteRepositoryConfig.


        :return: The upstream_credentials of this RemoteRepositoryConfig.
        :rtype: UpstreamCredentials
        """
        return self._upstream_credentials

    @upstream_credentials.setter
    def upstream_credentials(self, upstream_credentials):
        """Sets the upstream_credentials of this RemoteRepositoryConfig.


        :param upstream_credentials: The upstream_credentials of this RemoteRepositoryConfig.
        :type upstream_credentials: UpstreamCredentials
        """

        self._upstream_credentials = upstream_credentials

    @property
    def yum_repository(self):
        """Gets the yum_repository of this RemoteRepositoryConfig.


        :return: The yum_repository of this RemoteRepositoryConfig.
        :rtype: YumRepository
        """
        return self._yum_repository

    @yum_repository.setter
    def yum_repository(self, yum_repository):
        """Sets the yum_repository of this RemoteRepositoryConfig.


        :param yum_repository: The yum_repository of this RemoteRepositoryConfig.
        :type yum_repository: YumRepository
        """

        self._yum_repository = yum_repository
