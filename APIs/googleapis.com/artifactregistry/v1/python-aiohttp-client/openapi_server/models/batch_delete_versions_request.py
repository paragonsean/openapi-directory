# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDeleteVersionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, names: List[str]=None, validate_only: bool=None):
        """BatchDeleteVersionsRequest - a model defined in OpenAPI

        :param names: The names of this BatchDeleteVersionsRequest.
        :param validate_only: The validate_only of this BatchDeleteVersionsRequest.
        """
        self.openapi_types = {
            'names': List[str],
            'validate_only': bool
        }

        self.attribute_map = {
            'names': 'names',
            'validate_only': 'validateOnly'
        }

        self._names = names
        self._validate_only = validate_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteVersionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteVersionsRequest of this BatchDeleteVersionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def names(self):
        """Gets the names of this BatchDeleteVersionsRequest.

        Required. The names of the versions to delete. A maximum of 10000 versions can be deleted in a batch.

        :return: The names of this BatchDeleteVersionsRequest.
        :rtype: List[str]
        """
        return self._names

    @names.setter
    def names(self, names):
        """Sets the names of this BatchDeleteVersionsRequest.

        Required. The names of the versions to delete. A maximum of 10000 versions can be deleted in a batch.

        :param names: The names of this BatchDeleteVersionsRequest.
        :type names: List[str]
        """

        self._names = names

    @property
    def validate_only(self):
        """Gets the validate_only of this BatchDeleteVersionsRequest.

        If true, the request is performed without deleting data, following AIP-163.

        :return: The validate_only of this BatchDeleteVersionsRequest.
        :rtype: bool
        """
        return self._validate_only

    @validate_only.setter
    def validate_only(self, validate_only):
        """Sets the validate_only of this BatchDeleteVersionsRequest.

        If true, the request is performed without deleting data, following AIP-163.

        :param validate_only: The validate_only of this BatchDeleteVersionsRequest.
        :type validate_only: bool
        """

        self._validate_only = validate_only
