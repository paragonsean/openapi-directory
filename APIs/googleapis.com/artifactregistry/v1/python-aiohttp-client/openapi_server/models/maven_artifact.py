# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MavenArtifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_id: str=None, create_time: str=None, group_id: str=None, name: str=None, pom_uri: str=None, update_time: str=None, version: str=None):
        """MavenArtifact - a model defined in OpenAPI

        :param artifact_id: The artifact_id of this MavenArtifact.
        :param create_time: The create_time of this MavenArtifact.
        :param group_id: The group_id of this MavenArtifact.
        :param name: The name of this MavenArtifact.
        :param pom_uri: The pom_uri of this MavenArtifact.
        :param update_time: The update_time of this MavenArtifact.
        :param version: The version of this MavenArtifact.
        """
        self.openapi_types = {
            'artifact_id': str,
            'create_time': str,
            'group_id': str,
            'name': str,
            'pom_uri': str,
            'update_time': str,
            'version': str
        }

        self.attribute_map = {
            'artifact_id': 'artifactId',
            'create_time': 'createTime',
            'group_id': 'groupId',
            'name': 'name',
            'pom_uri': 'pomUri',
            'update_time': 'updateTime',
            'version': 'version'
        }

        self._artifact_id = artifact_id
        self._create_time = create_time
        self._group_id = group_id
        self._name = name
        self._pom_uri = pom_uri
        self._update_time = update_time
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MavenArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MavenArtifact of this MavenArtifact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_id(self):
        """Gets the artifact_id of this MavenArtifact.

        Artifact ID for the artifact.

        :return: The artifact_id of this MavenArtifact.
        :rtype: str
        """
        return self._artifact_id

    @artifact_id.setter
    def artifact_id(self, artifact_id):
        """Sets the artifact_id of this MavenArtifact.

        Artifact ID for the artifact.

        :param artifact_id: The artifact_id of this MavenArtifact.
        :type artifact_id: str
        """

        self._artifact_id = artifact_id

    @property
    def create_time(self):
        """Gets the create_time of this MavenArtifact.

        Output only. Time the artifact was created.

        :return: The create_time of this MavenArtifact.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this MavenArtifact.

        Output only. Time the artifact was created.

        :param create_time: The create_time of this MavenArtifact.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def group_id(self):
        """Gets the group_id of this MavenArtifact.

        Group ID for the artifact. Example: com.google.guava

        :return: The group_id of this MavenArtifact.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this MavenArtifact.

        Group ID for the artifact. Example: com.google.guava

        :param group_id: The group_id of this MavenArtifact.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def name(self):
        """Gets the name of this MavenArtifact.

        Required. registry_location, project_id, repository_name and maven_artifact forms a unique artifact For example, \"projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/ com.google.guava:guava:31.0-jre\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"com.google.guava:guava:31.0-jre\" is the maven artifact.

        :return: The name of this MavenArtifact.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MavenArtifact.

        Required. registry_location, project_id, repository_name and maven_artifact forms a unique artifact For example, \"projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/ com.google.guava:guava:31.0-jre\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"com.google.guava:guava:31.0-jre\" is the maven artifact.

        :param name: The name of this MavenArtifact.
        :type name: str
        """

        self._name = name

    @property
    def pom_uri(self):
        """Gets the pom_uri of this MavenArtifact.

        Required. URL to access the pom file of the artifact. Example: us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom

        :return: The pom_uri of this MavenArtifact.
        :rtype: str
        """
        return self._pom_uri

    @pom_uri.setter
    def pom_uri(self, pom_uri):
        """Sets the pom_uri of this MavenArtifact.

        Required. URL to access the pom file of the artifact. Example: us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom

        :param pom_uri: The pom_uri of this MavenArtifact.
        :type pom_uri: str
        """

        self._pom_uri = pom_uri

    @property
    def update_time(self):
        """Gets the update_time of this MavenArtifact.

        Output only. Time the artifact was updated.

        :return: The update_time of this MavenArtifact.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this MavenArtifact.

        Output only. Time the artifact was updated.

        :param update_time: The update_time of this MavenArtifact.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def version(self):
        """Gets the version of this MavenArtifact.

        Version of this artifact.

        :return: The version of this MavenArtifact.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this MavenArtifact.

        Version of this artifact.

        :param version: The version of this MavenArtifact.
        :type version: str
        """

        self._version = version
