# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MavenRepositoryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_snapshot_overwrites: bool=None, version_policy: str=None):
        """MavenRepositoryConfig - a model defined in OpenAPI

        :param allow_snapshot_overwrites: The allow_snapshot_overwrites of this MavenRepositoryConfig.
        :param version_policy: The version_policy of this MavenRepositoryConfig.
        """
        self.openapi_types = {
            'allow_snapshot_overwrites': bool,
            'version_policy': str
        }

        self.attribute_map = {
            'allow_snapshot_overwrites': 'allowSnapshotOverwrites',
            'version_policy': 'versionPolicy'
        }

        self._allow_snapshot_overwrites = allow_snapshot_overwrites
        self._version_policy = version_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MavenRepositoryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MavenRepositoryConfig of this MavenRepositoryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_snapshot_overwrites(self):
        """Gets the allow_snapshot_overwrites of this MavenRepositoryConfig.

        The repository with this flag will allow publishing the same snapshot versions.

        :return: The allow_snapshot_overwrites of this MavenRepositoryConfig.
        :rtype: bool
        """
        return self._allow_snapshot_overwrites

    @allow_snapshot_overwrites.setter
    def allow_snapshot_overwrites(self, allow_snapshot_overwrites):
        """Sets the allow_snapshot_overwrites of this MavenRepositoryConfig.

        The repository with this flag will allow publishing the same snapshot versions.

        :param allow_snapshot_overwrites: The allow_snapshot_overwrites of this MavenRepositoryConfig.
        :type allow_snapshot_overwrites: bool
        """

        self._allow_snapshot_overwrites = allow_snapshot_overwrites

    @property
    def version_policy(self):
        """Gets the version_policy of this MavenRepositoryConfig.

        Version policy defines the versions that the registry will accept.

        :return: The version_policy of this MavenRepositoryConfig.
        :rtype: str
        """
        return self._version_policy

    @version_policy.setter
    def version_policy(self, version_policy):
        """Sets the version_policy of this MavenRepositoryConfig.

        Version policy defines the versions that the registry will accept.

        :param version_policy: The version_policy of this MavenRepositoryConfig.
        :type version_policy: str
        """
        allowed_values = ["VERSION_POLICY_UNSPECIFIED", "RELEASE", "SNAPSHOT"]  # noqa: E501
        if version_policy not in allowed_values:
            raise ValueError(
                "Invalid value for `version_policy` ({0}), must be one of {1}"
                .format(version_policy, allowed_values)
            )

        self._version_policy = version_policy
