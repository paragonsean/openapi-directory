# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DockerRepositoryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, immutable_tags: bool=None):
        """DockerRepositoryConfig - a model defined in OpenAPI

        :param immutable_tags: The immutable_tags of this DockerRepositoryConfig.
        """
        self.openapi_types = {
            'immutable_tags': bool
        }

        self.attribute_map = {
            'immutable_tags': 'immutableTags'
        }

        self._immutable_tags = immutable_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DockerRepositoryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DockerRepositoryConfig of this DockerRepositoryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def immutable_tags(self):
        """Gets the immutable_tags of this DockerRepositoryConfig.

        The repository which enabled this flag prevents all tags from being modified, moved or deleted. This does not prevent tags from being created.

        :return: The immutable_tags of this DockerRepositoryConfig.
        :rtype: bool
        """
        return self._immutable_tags

    @immutable_tags.setter
    def immutable_tags(self, immutable_tags):
        """Sets the immutable_tags of this DockerRepositoryConfig.

        The repository which enabled this flag prevents all tags from being modified, moved or deleted. This does not prevent tags from being created.

        :param immutable_tags: The immutable_tags of this DockerRepositoryConfig.
        :type immutable_tags: bool
        """

        self._immutable_tags = immutable_tags
