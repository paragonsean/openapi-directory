# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDeleteVersionsMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed_versions: List[str]=None):
        """BatchDeleteVersionsMetadata - a model defined in OpenAPI

        :param failed_versions: The failed_versions of this BatchDeleteVersionsMetadata.
        """
        self.openapi_types = {
            'failed_versions': List[str]
        }

        self.attribute_map = {
            'failed_versions': 'failedVersions'
        }

        self._failed_versions = failed_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteVersionsMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteVersionsMetadata of this BatchDeleteVersionsMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed_versions(self):
        """Gets the failed_versions of this BatchDeleteVersionsMetadata.

        The versions the operation failed to delete.

        :return: The failed_versions of this BatchDeleteVersionsMetadata.
        :rtype: List[str]
        """
        return self._failed_versions

    @failed_versions.setter
    def failed_versions(self, failed_versions):
        """Sets the failed_versions of this BatchDeleteVersionsMetadata.

        The versions the operation failed to delete.

        :param failed_versions: The failed_versions of this BatchDeleteVersionsMetadata.
        :type failed_versions: List[str]
        """

        self._failed_versions = failed_versions
