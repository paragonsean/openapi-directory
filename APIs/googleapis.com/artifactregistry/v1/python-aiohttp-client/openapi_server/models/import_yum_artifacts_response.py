# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_yum_artifacts_error_info import ImportYumArtifactsErrorInfo
from openapi_server.models.yum_artifact import YumArtifact
from openapi_server import util


class ImportYumArtifactsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[ImportYumArtifactsErrorInfo]=None, yum_artifacts: List[YumArtifact]=None):
        """ImportYumArtifactsResponse - a model defined in OpenAPI

        :param errors: The errors of this ImportYumArtifactsResponse.
        :param yum_artifacts: The yum_artifacts of this ImportYumArtifactsResponse.
        """
        self.openapi_types = {
            'errors': List[ImportYumArtifactsErrorInfo],
            'yum_artifacts': List[YumArtifact]
        }

        self.attribute_map = {
            'errors': 'errors',
            'yum_artifacts': 'yumArtifacts'
        }

        self._errors = errors
        self._yum_artifacts = yum_artifacts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportYumArtifactsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportYumArtifactsResponse of this ImportYumArtifactsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this ImportYumArtifactsResponse.

        Detailed error info for packages that were not imported.

        :return: The errors of this ImportYumArtifactsResponse.
        :rtype: List[ImportYumArtifactsErrorInfo]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ImportYumArtifactsResponse.

        Detailed error info for packages that were not imported.

        :param errors: The errors of this ImportYumArtifactsResponse.
        :type errors: List[ImportYumArtifactsErrorInfo]
        """

        self._errors = errors

    @property
    def yum_artifacts(self):
        """Gets the yum_artifacts of this ImportYumArtifactsResponse.

        The yum artifacts imported.

        :return: The yum_artifacts of this ImportYumArtifactsResponse.
        :rtype: List[YumArtifact]
        """
        return self._yum_artifacts

    @yum_artifacts.setter
    def yum_artifacts(self, yum_artifacts):
        """Sets the yum_artifacts of this ImportYumArtifactsResponse.

        The yum artifacts imported.

        :param yum_artifacts: The yum_artifacts of this ImportYumArtifactsResponse.
        :type yum_artifacts: List[YumArtifact]
        """

        self._yum_artifacts = yum_artifacts
