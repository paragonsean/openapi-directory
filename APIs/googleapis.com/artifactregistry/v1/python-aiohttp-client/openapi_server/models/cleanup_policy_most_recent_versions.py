# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CleanupPolicyMostRecentVersions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keep_count: int=None, package_name_prefixes: List[str]=None):
        """CleanupPolicyMostRecentVersions - a model defined in OpenAPI

        :param keep_count: The keep_count of this CleanupPolicyMostRecentVersions.
        :param package_name_prefixes: The package_name_prefixes of this CleanupPolicyMostRecentVersions.
        """
        self.openapi_types = {
            'keep_count': int,
            'package_name_prefixes': List[str]
        }

        self.attribute_map = {
            'keep_count': 'keepCount',
            'package_name_prefixes': 'packageNamePrefixes'
        }

        self._keep_count = keep_count
        self._package_name_prefixes = package_name_prefixes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CleanupPolicyMostRecentVersions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CleanupPolicyMostRecentVersions of this CleanupPolicyMostRecentVersions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keep_count(self):
        """Gets the keep_count of this CleanupPolicyMostRecentVersions.

        Minimum number of versions to keep.

        :return: The keep_count of this CleanupPolicyMostRecentVersions.
        :rtype: int
        """
        return self._keep_count

    @keep_count.setter
    def keep_count(self, keep_count):
        """Sets the keep_count of this CleanupPolicyMostRecentVersions.

        Minimum number of versions to keep.

        :param keep_count: The keep_count of this CleanupPolicyMostRecentVersions.
        :type keep_count: int
        """

        self._keep_count = keep_count

    @property
    def package_name_prefixes(self):
        """Gets the package_name_prefixes of this CleanupPolicyMostRecentVersions.

        List of package name prefixes that will apply this rule.

        :return: The package_name_prefixes of this CleanupPolicyMostRecentVersions.
        :rtype: List[str]
        """
        return self._package_name_prefixes

    @package_name_prefixes.setter
    def package_name_prefixes(self, package_name_prefixes):
        """Sets the package_name_prefixes of this CleanupPolicyMostRecentVersions.

        List of package name prefixes that will apply this rule.

        :param package_name_prefixes: The package_name_prefixes of this CleanupPolicyMostRecentVersions.
        :type package_name_prefixes: List[str]
        """

        self._package_name_prefixes = package_name_prefixes
