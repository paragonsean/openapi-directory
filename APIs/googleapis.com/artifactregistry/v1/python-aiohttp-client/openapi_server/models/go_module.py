# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoModule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, name: str=None, update_time: str=None, version: str=None):
        """GoModule - a model defined in OpenAPI

        :param create_time: The create_time of this GoModule.
        :param name: The name of this GoModule.
        :param update_time: The update_time of this GoModule.
        :param version: The version of this GoModule.
        """
        self.openapi_types = {
            'create_time': str,
            'name': str,
            'update_time': str,
            'version': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'name': 'name',
            'update_time': 'updateTime',
            'version': 'version'
        }

        self._create_time = create_time
        self._name = name
        self._update_time = update_time
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoModule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoModule of this GoModule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoModule.

        Output only. The time when the Go module is created.

        :return: The create_time of this GoModule.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoModule.

        Output only. The time when the Go module is created.

        :param create_time: The create_time of this GoModule.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def name(self):
        """Gets the name of this GoModule.

        The resource name of a Go module.

        :return: The name of this GoModule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoModule.

        The resource name of a Go module.

        :param name: The name of this GoModule.
        :type name: str
        """

        self._name = name

    @property
    def update_time(self):
        """Gets the update_time of this GoModule.

        Output only. The time when the Go module is updated.

        :return: The update_time of this GoModule.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoModule.

        Output only. The time when the Go module is updated.

        :param update_time: The update_time of this GoModule.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def version(self):
        """Gets the version of this GoModule.

        The version of the Go module. Must be a valid canonical version as defined in https://go.dev/ref/mod#glos-canonical-version.

        :return: The version of this GoModule.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GoModule.

        The version of the Go module. Must be a valid canonical version as defined in https://go.dev/ref/mod#glos-canonical-version.

        :param version: The version of this GoModule.
        :type version: str
        """

        self._version = version
