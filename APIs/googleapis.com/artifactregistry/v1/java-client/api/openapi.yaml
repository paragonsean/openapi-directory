openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Store and manage build artifacts in a scalable and integrated service
    built on Google infrastructure.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Artifact Registry API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://artifactregistry.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: artifactregistry
externalDocs:
  url: https://cloud.google.com/artifacts/docs/
servers:
- url: https://artifactregistry.googleapis.com/
tags:
- name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a version and all of its content. The returned operation
        will complete once the version has been deleted.
      operationId: artifactregistry.projects.locations.repositories.packages.versions.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the version to delete.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "By default, a version that is tagged may not be deleted. If\
          \ force=true, the version and any tags pointing to the version are deleted."
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    get:
      description: Gets a python package.
      operationId: artifactregistry.projects.locations.repositories.pythonPackages.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the python package.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The view that should be returned in the response.
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VERSION_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PythonPackage'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
    patch:
      description: Updates a tag.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\"\
          . If the package part contains slashes, the slashes are escaped. The tag\
          \ part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must\
          \ be URL encoded."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "The update mask applies to the resource. For the `FieldMask`\
          \ definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: artifactregistry.projects.locations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The resource that owns the locations collection, if applicable."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A filter to narrow down results to a preferred subset. The filtering\
          \ language accepts strings like `\"displayName=tokyo\"`, and is documented\
          \ in more detail in [AIP-160](https://google.aip.dev/160)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return. If not set, the service\
          \ selects a default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A page token received from the `next_page_token` field in the
          response. Send that page token to receive the subsequent page.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/aptArtifacts:create:
    post:
      description: "Directly uploads an Apt artifact. The returned Operation will\
        \ complete once the resources are uploaded. Package, Version, and File resources\
        \ are created based on the imported artifact. Imported artifacts that conflict\
        \ with existing resources are ignored."
      operationId: artifactregistry.projects.locations.repositories.aptArtifacts.upload
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource where the artifacts will be uploaded.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadAptArtifactRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAptArtifactMediaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/octet-stream
      x-accepts:
      - application/json
  /v1/{parent}/aptArtifacts:import:
    post:
      description: "Imports Apt artifacts. The returned Operation will complete once\
        \ the resources are imported. Package, Version, and File resources are created\
        \ based on the imported artifacts. Imported artifacts that conflict with existing\
        \ resources are ignored."
      operationId: artifactregistry.projects.locations.repositories.aptArtifacts.import
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource where the artifacts will be imported.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAptArtifactsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/dockerImages:
    get:
      description: Lists docker images.
      operationId: artifactregistry.projects.locations.repositories.dockerImages.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the parent resource whose docker images
          will be listed.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The field to order the results by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of artifacts to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDockerImagesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/files:
    get:
      description: Lists files.
      operationId: artifactregistry.projects.locations.repositories.files.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the repository whose files will be listed.\
          \ For example: \"projects/p1/locations/us-central1/repositories/repo1"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "An expression for filtering the results of the request. Filter\
          \ rules are case insensitive. The fields eligible for filtering are: * `name`\
          \ * `owner` An example of using a filter: * `name=\"projects/p1/locations/us-central1/repositories/repo1/files/a/b/*\"\
          ` --> Files with an ID starting with \"a/b/\". * `owner=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"\
          ` --> Files owned by the version `1.0` in package `pkg1`."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field to order the results by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of files to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/goModules:create:
    post:
      description: "Directly uploads a Go module. The returned Operation will complete\
        \ once the Go module is uploaded. Package, Version, and File resources are\
        \ created based on the uploaded Go module."
      operationId: artifactregistry.projects.locations.repositories.goModules.upload
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The resource name of the repository where the Go module will
          be uploaded.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadGoModuleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadGoModuleMediaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/octet-stream
      x-accepts:
      - application/json
  /v1/{parent}/googetArtifacts:create:
    post:
      description: "Directly uploads a GooGet artifact. The returned Operation will\
        \ complete once the resources are uploaded. Package, Version, and File resources\
        \ are created based on the imported artifact. Imported artifacts that conflict\
        \ with existing resources are ignored."
      operationId: artifactregistry.projects.locations.repositories.googetArtifacts.upload
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource where the artifacts will be uploaded.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadGoogetArtifactRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadGoogetArtifactMediaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/octet-stream
      x-accepts:
      - application/json
  /v1/{parent}/googetArtifacts:import:
    post:
      description: "Imports GooGet artifacts. The returned Operation will complete\
        \ once the resources are imported. Package, Version, and File resources are\
        \ created based on the imported artifacts. Imported artifacts that conflict\
        \ with existing resources are ignored."
      operationId: artifactregistry.projects.locations.repositories.googetArtifacts.import
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource where the artifacts will be imported.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportGoogetArtifactsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/kfpArtifacts:create:
    post:
      description: "Directly uploads a KFP artifact. The returned Operation will complete\
        \ once the resource is uploaded. Package, Version, and File resources will\
        \ be created based on the uploaded artifact. Uploaded artifacts that conflict\
        \ with existing resources will be overwritten."
      operationId: artifactregistry.projects.locations.repositories.kfpArtifacts.upload
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The resource name of the repository where the KFP artifact will
          be uploaded.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadKfpArtifactRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadKfpArtifactMediaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/octet-stream
      x-accepts:
      - application/json
  /v1/{parent}/mavenArtifacts:
    get:
      description: Lists maven artifacts.
      operationId: artifactregistry.projects.locations.repositories.mavenArtifacts.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the parent resource whose maven artifacts
          will be listed.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of artifacts to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMavenArtifactsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/npmPackages:
    get:
      description: Lists npm packages.
      operationId: artifactregistry.projects.locations.repositories.npmPackages.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the parent resource whose npm packages
          will be listed.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of artifacts to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNpmPackagesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/packages:
    get:
      description: Lists packages.
      operationId: artifactregistry.projects.locations.repositories.packages.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the parent resource whose packages will
          be listed.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of packages to return. Maximum page size\
          \ is 1,000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/pythonPackages:
    get:
      description: Lists python packages.
      operationId: artifactregistry.projects.locations.repositories.pythonPackages.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the parent resource whose python packages
          will be listed.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of artifacts to return.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPythonPackagesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/repositories:
    get:
      description: Lists repositories.
      operationId: artifactregistry.projects.locations.repositories.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the parent resource whose repositories
          will be listed.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of repositories to return. Maximum page size\
          \ is 1,000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: Creates a repository. The returned Operation will finish once the
        repository has been created. Its response will be the created Repository.
      operationId: artifactregistry.projects.locations.repositories.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the parent resource where the repository
          will be created.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Required. The repository id to use for this repository.
        explode: true
        in: query
        name: repositoryId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/tags:
    get:
      description: Lists tags.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The name of the parent package whose tags will be listed. For\
          \ example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "An expression for filtering the results of the request. Filter\
          \ rules are case insensitive. The fields eligible for filtering are: * `version`\
          \ An example of using a filter: * `version=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"\
          ` --> Tags that are applied to the version `1.0` in package `pkg1`."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of tags to return. Maximum page size is 10,000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: Creates a tag.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource where the tag will be created.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The tag id to use for this repository.
        explode: true
        in: query
        name: tagId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/versions:
    get:
      description: Lists versions.
      operationId: artifactregistry.projects.locations.repositories.packages.versions.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource whose versions will be listed.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. The field to order the results by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of versions to return. Maximum page size\
          \ is 1,000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token value returned from a previous list request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: The view that should be returned in the response.
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VERSION_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/versions:batchDelete:
    post:
      description: Deletes multiple versions across a repository. The returned operation
        will complete once the versions have been deleted.
      operationId: artifactregistry.projects.locations.repositories.packages.versions.batchDelete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the repository holding all requested versions.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteVersionsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/yumArtifacts:create:
    post:
      description: "Directly uploads a Yum artifact. The returned Operation will complete\
        \ once the resources are uploaded. Package, Version, and File resources are\
        \ created based on the imported artifact. Imported artifacts that conflict\
        \ with existing resources are ignored."
      operationId: artifactregistry.projects.locations.repositories.yumArtifacts.upload
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource where the artifacts will be uploaded.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/UploadYumArtifactRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadYumArtifactMediaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/octet-stream
      x-accepts:
      - application/json
  /v1/{parent}/yumArtifacts:import:
    post:
      description: "Imports Yum (RPM) artifacts. The returned Operation will complete\
        \ once the resources are imported. Package, Version, and File resources are\
        \ created based on the imported artifacts. Imported artifacts that conflict\
        \ with existing resources are ignored."
      operationId: artifactregistry.projects.locations.repositories.yumArtifacts.import
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the parent resource where the artifacts will be imported.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportYumArtifactsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the IAM policy for a given resource.
      operationId: artifactregistry.projects.locations.repositories.getIamPolicy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being requested.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. The maximum policy version that will be used to format\
          \ the policy. Valid values are 0, 1, and 3. Requests specifying an invalid\
          \ value will be rejected. Requests for policies with any conditional role\
          \ bindings must specify version 3. Policies with no conditional role bindings\
          \ may specify any valid value or leave the field unset. The policy in the\
          \ response might use the policy version that you specified, or it might\
          \ use a lower policy version. For example, if you specify version 3, but\
          \ the policy has no conditional role bindings, the response uses version\
          \ 1. To learn which resources support conditions in their IAM policies,\
          \ see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        explode: true
        in: query
        name: options.requestedPolicyVersion
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{resource}:setIamPolicy:
    post:
      description: Updates the IAM policy for a given resource.
      operationId: artifactregistry.projects.locations.repositories.setIamPolicy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being specified.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{resource}:testIamPermissions:
    post:
      description: Tests if the caller has a list of permissions on a resource.
      operationId: artifactregistry.projects.locations.repositories.testIamPermissions
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy detail is being\
          \ requested. See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AptArtifact:
      description: A detailed representation of an Apt artifact. Information in the
        record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        component:
          description: Output only. Repository component of the artifact.
          readOnly: true
          type: string
        controlFile:
          description: Output only. Contents of the artifact's control metadata file.
          format: byte
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The Apt package name of the artifact.
          readOnly: true
          type: string
        packageType:
          description: Output only. An artifact is a binary or source package.
          enum:
          - PACKAGE_TYPE_UNSPECIFIED
          - BINARY
          - SOURCE
          readOnly: true
          type: string
      type: object
    AptRepository:
      description: Configuration for an Apt remote repository.
      example:
        publicRepository:
          repositoryPath: repositoryPath
          repositoryBase: REPOSITORY_BASE_UNSPECIFIED
      properties:
        publicRepository:
          $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository'
      type: object
    BatchDeleteVersionsMetadata:
      description: The metadata of an LRO from deleting multiple versions.
      properties:
        failedVersions:
          description: The versions the operation failed to delete.
          items:
            type: string
          type: array
      type: object
    BatchDeleteVersionsRequest:
      description: The request to delete multiple versions across a repository.
      example:
        validateOnly: true
        names:
        - names
        - names
      properties:
        names:
          description: Required. The names of the versions to delete. A maximum of
            10000 versions can be deleted in a batch.
          items:
            type: string
          type: array
        validateOnly:
          description: "If true, the request is performed without deleting data, following\
            \ AIP-163."
          type: boolean
      type: object
    Binding:
      description: "Associates `members`, or principals, with a `role`."
      example:
        condition:
          expression: expression
          description: description
          location: location
          title: title
        role: role
        members:
        - members
        - members
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
        members:
          description: "Specifies the principals requesting access for a Google Cloud\
            \ resource. `members` can have the following values: * `allUsers`: A special\
            \ identifier that represents anyone who is on the internet; with or without\
            \ a Google account. * `allAuthenticatedUsers`: A special identifier that\
            \ represents anyone who is authenticated with a Google account or a service\
            \ account. Does not include identities that come from external identity\
            \ providers (IdPs) through identity federation. * `user:{emailid}`: An\
            \ email address that represents a specific Google account. For example,\
            \ `alice@example.com` . * `serviceAccount:{emailid}`: An email address\
            \ that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`.\
            \ * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:\
            \ An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).\
            \ For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`.\
            \ * `group:{emailid}`: An email address that represents a Google group.\
            \ For example, `admins@example.com`. * `domain:{domain}`: The G Suite\
            \ domain (primary) that represents all the users of that domain. For example,\
            \ `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:\
            \ All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:\
            \ All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:\
            \ A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All identities in a workload identity pool with a certain attribute.\
            \ * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:\
            \ All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a user that has\
            \ been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\
            \ If the user is recovered, this value reverts to `user:{emailid}` and\
            \ the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a service account\
            \ that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\
            \ If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\
            \ and the undeleted service account retains the role in the binding. *\
            \ `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\
            \ identifier) representing a Google group that has been recently deleted.\
            \ For example, `admins@example.com?uid=123456789012345678901`. If the\
            \ group is recovered, this value reverts to `group:{emailid}` and the\
            \ recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: "Role that is assigned to the list of `members`, or principals.\
            \ For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an\
            \ overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview).\
            \ For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles)."
          type: string
      type: object
    CleanupPolicy:
      description: Artifact policy configuration for repository cleanup policies.
      example:
        condition:
          tagPrefixes:
          - tagPrefixes
          - tagPrefixes
          versionNamePrefixes:
          - versionNamePrefixes
          - versionNamePrefixes
          olderThan: olderThan
          newerThan: newerThan
          packageNamePrefixes:
          - packageNamePrefixes
          - packageNamePrefixes
          tagState: TAG_STATE_UNSPECIFIED
        mostRecentVersions:
          keepCount: 0
          packageNamePrefixes:
          - packageNamePrefixes
          - packageNamePrefixes
        action: ACTION_UNSPECIFIED
        id: id
      properties:
        action:
          description: Policy action.
          enum:
          - ACTION_UNSPECIFIED
          - DELETE
          - KEEP
          type: string
        condition:
          $ref: '#/components/schemas/CleanupPolicyCondition'
        id:
          description: The user-provided ID of the cleanup policy.
          type: string
        mostRecentVersions:
          $ref: '#/components/schemas/CleanupPolicyMostRecentVersions'
      type: object
    CleanupPolicyCondition:
      description: "CleanupPolicyCondition is a set of conditions attached to a CleanupPolicy.\
        \ If multiple entries are set, all must be satisfied for the condition to\
        \ be satisfied."
      example:
        tagPrefixes:
        - tagPrefixes
        - tagPrefixes
        versionNamePrefixes:
        - versionNamePrefixes
        - versionNamePrefixes
        olderThan: olderThan
        newerThan: newerThan
        packageNamePrefixes:
        - packageNamePrefixes
        - packageNamePrefixes
        tagState: TAG_STATE_UNSPECIFIED
      properties:
        newerThan:
          description: Match versions newer than a duration.
          format: google-duration
          type: string
        olderThan:
          description: Match versions older than a duration.
          format: google-duration
          type: string
        packageNamePrefixes:
          description: Match versions by package prefix. Applied on any prefix match.
          items:
            type: string
          type: array
        tagPrefixes:
          description: Match versions by tag prefix. Applied on any prefix match.
          items:
            type: string
          type: array
        tagState:
          description: Match versions by tag status.
          enum:
          - TAG_STATE_UNSPECIFIED
          - TAGGED
          - UNTAGGED
          - ANY
          type: string
        versionNamePrefixes:
          description: Match versions by version name prefix. Applied on any prefix
            match.
          items:
            type: string
          type: array
      type: object
    CleanupPolicyMostRecentVersions:
      description: CleanupPolicyMostRecentVersions is an alternate condition of a
        CleanupPolicy for retaining a minimum number of versions.
      example:
        keepCount: 0
        packageNamePrefixes:
        - packageNamePrefixes
        - packageNamePrefixes
      properties:
        keepCount:
          description: Minimum number of versions to keep.
          format: int32
          type: integer
        packageNamePrefixes:
          description: List of package name prefixes that will apply this rule.
          items:
            type: string
          type: array
      type: object
    DockerImage:
      description: "DockerImage represents a docker artifact. The following fields\
        \ are returned as untyped metadata in the Version resource, using camelcase\
        \ keys (i.e. metadata.imageSizeBytes): * imageSizeBytes * mediaType * buildTime"
      example:
        buildTime: buildTime
        name: name
        imageSizeBytes: imageSizeBytes
        mediaType: mediaType
        updateTime: updateTime
        uploadTime: uploadTime
        uri: uri
        tags:
        - tags
        - tags
      properties:
        buildTime:
          description: "The time this image was built. This field is returned as the\
            \ 'metadata.buildTime' field in the Version resource. The build time is\
            \ returned to the client as an RFC 3339 string, which can be easily used\
            \ with the JavaScript Date constructor."
          format: google-datetime
          type: string
        imageSizeBytes:
          description: Calculated size of the image. This field is returned as the
            'metadata.imageSizeBytes' field in the Version resource.
          format: int64
          type: string
        mediaType:
          description: "Media type of this image, e.g. \"application/vnd.docker.distribution.manifest.v2+json\"\
            . This field is returned as the 'metadata.mediaType' field in the Version\
            \ resource."
          type: string
        name:
          description: "Required. registry_location, project_id, repository_name and\
            \ image id forms a unique image name:`projects//locations//repository//dockerImages/`.\
            \ For example, \"projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/\
            \ nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\"\
            , where \"us-west4\" is the registry_location, \"test-project\" is the\
            \ project_id, \"test-repo\" is the repository_name and \"nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\"\
            \ is the image's digest."
          type: string
        tags:
          description: Tags attached to this image.
          items:
            type: string
          type: array
        updateTime:
          description: Output only. The time when the docker image was last updated.
          format: google-datetime
          readOnly: true
          type: string
        uploadTime:
          description: Time the image was uploaded.
          format: google-datetime
          type: string
        uri:
          description: "Required. URL to access the image. Example: us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf"
          type: string
      type: object
    DockerRepository:
      description: Configuration for a Docker remote repository.
      example:
        publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
      properties:
        publicRepository:
          description: One of the publicly available Docker repositories supported
            by Artifact Registry.
          enum:
          - PUBLIC_REPOSITORY_UNSPECIFIED
          - DOCKER_HUB
          type: string
      type: object
    DockerRepositoryConfig:
      description: DockerRepositoryConfig is docker related repository details. Provides
        additional configuration details for repositories of the docker format type.
      example:
        immutableTags: true
      properties:
        immutableTags:
          description: "The repository which enabled this flag prevents all tags from\
            \ being modified, moved or deleted. This does not prevent tags from being\
            \ created."
          type: boolean
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language\
        \ (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\
        \ of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\
        \ title: \"Summary size limit\" description: \"Determines if a summary is\
        \ less than 100 chars\" expression: \"document.summary.size() < 100\" Example\
        \ (Equality): title: \"Requestor is owner\" description: \"Determines if requestor\
        \ is the document owner\" expression: \"document.owner == request.auth.claims.email\"\
        \ Example (Logic): title: \"Public documents\" description: \"Determine whether\
        \ the document should be publicly visible\" expression: \"document.type !=\
        \ 'private' && document.type != 'internal'\" Example (Data Manipulation):\
        \ title: \"Notification string\" description: \"Create a notification string\
        \ with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\"\
        \ The exact variables and functions that may be referenced within an expression\
        \ are determined by the service that evaluates it. See the service documentation\
        \ for additional information."
      example:
        expression: expression
        description: description
        location: location
        title: title
      properties:
        description:
          description: "Optional. Description of the expression. This is a longer\
            \ text which describes the expression, e.g. when hovered over it in a\
            \ UI."
          type: string
        expression:
          description: Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        location:
          description: "Optional. String indicating the location of the expression\
            \ for error reporting, e.g. a file name and a position in the file."
          type: string
        title:
          description: "Optional. Title for the expression, i.e. a short string describing\
            \ its purpose. This can be used e.g. in UIs which allow to enter the expression."
          type: string
      type: object
    GoModule:
      description: GoModule represents a Go module.
      properties:
        createTime:
          description: Output only. The time when the Go module is created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: The resource name of a Go module.
          type: string
        updateTime:
          description: Output only. The time when the Go module is updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: The version of the Go module. Must be a valid canonical version
            as defined in https://go.dev/ref/mod#glos-canonical-version.
          type: string
      type: object
    GoogetArtifact:
      description: A detailed representation of a GooGet artifact.
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The GooGet package name of the artifact.
          readOnly: true
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1File:
      description: Files store content that is potentially associated with Packages
        or Versions.
      example:
        owner: owner
        createTime: createTime
        hashes:
        - type: HASH_TYPE_UNSPECIFIED
          value: value
        - type: HASH_TYPE_UNSPECIFIED
          value: value
        name: name
        fetchTime: fetchTime
        updateTime: updateTime
        sizeBytes: sizeBytes
      properties:
        createTime:
          description: Output only. The time when the File was created.
          format: google-datetime
          readOnly: true
          type: string
        fetchTime:
          description: Output only. The time when the last attempt to refresh the
            file's data was made. Only set when the repository is remote.
          format: google-datetime
          readOnly: true
          type: string
        hashes:
          description: The hashes of the file content.
          items:
            $ref: '#/components/schemas/Hash'
          type: array
        name:
          description: "The name of the file, for example: \"projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt\"\
            . If the file ID part contains slashes, they are escaped."
          type: string
        owner:
          description: "The name of the Package or Version that owns this file, if\
            \ any."
          type: string
        sizeBytes:
          description: The size of the File in bytes.
          format: int64
          type: string
        updateTime:
          description: Output only. The time when the File was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository:
      description: Publicly available Apt repositories constructed from a common repository
        base and a custom repository path.
      example:
        repositoryPath: repositoryPath
        repositoryBase: REPOSITORY_BASE_UNSPECIFIED
      properties:
        repositoryBase:
          description: A common public repository base for Apt.
          enum:
          - REPOSITORY_BASE_UNSPECIFIED
          - DEBIAN
          - UBUNTU
          - DEBIAN_SNAPSHOT
          type: string
        repositoryPath:
          description: A custom field to define a path to a specific repository from
            the base.
          type: string
      type: object
    GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository:
      description: Publicly available Yum repositories constructed from a common repository
        base and a custom repository path.
      example:
        repositoryPath: repositoryPath
        repositoryBase: REPOSITORY_BASE_UNSPECIFIED
      properties:
        repositoryBase:
          description: A common public repository base for Yum.
          enum:
          - REPOSITORY_BASE_UNSPECIFIED
          - CENTOS
          - CENTOS_DEBUG
          - CENTOS_VAULT
          - CENTOS_STREAM
          - ROCKY
          - EPEL
          type: string
        repositoryPath:
          description: A custom field to define a path to a specific repository from
            the base.
          type: string
      type: object
    Hash:
      description: A hash of file content.
      example:
        type: HASH_TYPE_UNSPECIFIED
        value: value
      properties:
        type:
          description: The algorithm used to compute the hash value.
          enum:
          - HASH_TYPE_UNSPECIFIED
          - SHA256
          - MD5
          type: string
        value:
          description: The hash value.
          format: byte
          type: string
      type: object
    ImportAptArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: '#/components/schemas/Status'
        gcsSource:
          $ref: '#/components/schemas/ImportAptArtifactsGcsSource'
      type: object
    ImportAptArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      example:
        uris:
        - uris
        - uris
        useWildcards: true
      properties:
        uris:
          description: "Cloud Storage paths URI (e.g., gs://my_bucket//my_object)."
          items:
            type: string
          type: array
        useWildcards:
          description: Supports URI wildcards for matching multiple objects from a
            single URI.
          type: boolean
      type: object
    ImportAptArtifactsMetadata:
      description: The operation metadata for importing artifacts.
      properties: {}
      type: object
    ImportAptArtifactsRequest:
      description: The request to import new apt artifacts.
      example:
        gcsSource:
          uris:
          - uris
          - uris
          useWildcards: true
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportAptArtifactsGcsSource'
      type: object
    ImportAptArtifactsResponse:
      description: The response message from importing APT artifacts.
      properties:
        aptArtifacts:
          description: The Apt artifacts imported.
          items:
            $ref: '#/components/schemas/AptArtifact'
          type: array
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: '#/components/schemas/ImportAptArtifactsErrorInfo'
          type: array
      type: object
    ImportGoogetArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: '#/components/schemas/Status'
        gcsSource:
          $ref: '#/components/schemas/ImportGoogetArtifactsGcsSource'
      type: object
    ImportGoogetArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      example:
        uris:
        - uris
        - uris
        useWildcards: true
      properties:
        uris:
          description: "Cloud Storage paths URI (e.g., `gs://my_bucket/my_object`)."
          items:
            type: string
          type: array
        useWildcards:
          description: Supports URI wildcards for matching multiple objects from a
            single URI.
          type: boolean
      type: object
    ImportGoogetArtifactsMetadata:
      description: The operation metadata for importing artifacts.
      properties: {}
      type: object
    ImportGoogetArtifactsRequest:
      description: The request to import new googet artifacts.
      example:
        gcsSource:
          uris:
          - uris
          - uris
          useWildcards: true
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportGoogetArtifactsGcsSource'
      type: object
    ImportGoogetArtifactsResponse:
      description: The response message from importing artifacts.
      properties:
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: '#/components/schemas/ImportGoogetArtifactsErrorInfo'
          type: array
        googetArtifacts:
          description: The GooGet artifacts updated.
          items:
            $ref: '#/components/schemas/GoogetArtifact'
          type: array
      type: object
    ImportYumArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: '#/components/schemas/Status'
        gcsSource:
          $ref: '#/components/schemas/ImportYumArtifactsGcsSource'
      type: object
    ImportYumArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      example:
        uris:
        - uris
        - uris
        useWildcards: true
      properties:
        uris:
          description: "Cloud Storage paths URI (e.g., gs://my_bucket//my_object)."
          items:
            type: string
          type: array
        useWildcards:
          description: Supports URI wildcards for matching multiple objects from a
            single URI.
          type: boolean
      type: object
    ImportYumArtifactsMetadata:
      description: The operation metadata for importing artifacts.
      properties: {}
      type: object
    ImportYumArtifactsRequest:
      description: The request to import new yum artifacts.
      example:
        gcsSource:
          uris:
          - uris
          - uris
          useWildcards: true
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportYumArtifactsGcsSource'
      type: object
    ImportYumArtifactsResponse:
      description: The response message from importing YUM artifacts.
      properties:
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: '#/components/schemas/ImportYumArtifactsErrorInfo'
          type: array
        yumArtifacts:
          description: The yum artifacts imported.
          items:
            $ref: '#/components/schemas/YumArtifact'
          type: array
      type: object
    KfpArtifact:
      description: A detailed representation of a KFP artifact.
      properties:
        name:
          description: "Output only. Resource name of the KFP artifact. Since users\
            \ don't directly interact with this resource, the name will be derived\
            \ from the associated version. For example, when version = \".../versions/sha256:abcdef...\"\
            , the name will be \".../kfpArtifacts/sha256:abcdef...\"."
          readOnly: true
          type: string
        version:
          description: The version associated with the KFP artifact. Must follow the
            Semantic Versioning standard.
          type: string
      type: object
    ListDockerImagesResponse:
      description: The response from listing docker images.
      example:
        dockerImages:
        - buildTime: buildTime
          name: name
          imageSizeBytes: imageSizeBytes
          mediaType: mediaType
          updateTime: updateTime
          uploadTime: uploadTime
          uri: uri
          tags:
          - tags
          - tags
        - buildTime: buildTime
          name: name
          imageSizeBytes: imageSizeBytes
          mediaType: mediaType
          updateTime: updateTime
          uploadTime: uploadTime
          uri: uri
          tags:
          - tags
          - tags
        nextPageToken: nextPageToken
      properties:
        dockerImages:
          description: The docker images returned.
          items:
            $ref: '#/components/schemas/DockerImage'
          type: array
        nextPageToken:
          description: "The token to retrieve the next page of artifacts, or empty\
            \ if there are no more artifacts to return."
          type: string
      type: object
    ListFilesResponse:
      description: The response from listing files.
      example:
        nextPageToken: nextPageToken
        files:
        - owner: owner
          createTime: createTime
          hashes:
          - type: HASH_TYPE_UNSPECIFIED
            value: value
          - type: HASH_TYPE_UNSPECIFIED
            value: value
          name: name
          fetchTime: fetchTime
          updateTime: updateTime
          sizeBytes: sizeBytes
        - owner: owner
          createTime: createTime
          hashes:
          - type: HASH_TYPE_UNSPECIFIED
            value: value
          - type: HASH_TYPE_UNSPECIFIED
            value: value
          name: name
          fetchTime: fetchTime
          updateTime: updateTime
          sizeBytes: sizeBytes
      properties:
        files:
          description: The files returned.
          items:
            $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1File'
          type: array
        nextPageToken:
          description: "The token to retrieve the next page of files, or empty if\
            \ there are no more files to return."
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      example:
        nextPageToken: nextPageToken
        locations:
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
      properties:
        locations:
          description: A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListMavenArtifactsResponse:
      description: The response from listing maven artifacts.
      example:
        mavenArtifacts:
        - pomUri: pomUri
          createTime: createTime
          groupId: groupId
          name: name
          artifactId: artifactId
          updateTime: updateTime
          version: version
        - pomUri: pomUri
          createTime: createTime
          groupId: groupId
          name: name
          artifactId: artifactId
          updateTime: updateTime
          version: version
        nextPageToken: nextPageToken
      properties:
        mavenArtifacts:
          description: The maven artifacts returned.
          items:
            $ref: '#/components/schemas/MavenArtifact'
          type: array
        nextPageToken:
          description: "The token to retrieve the next page of artifacts, or empty\
            \ if there are no more artifacts to return."
          type: string
      type: object
    ListNpmPackagesResponse:
      description: The response from listing npm packages.
      example:
        nextPageToken: nextPageToken
        npmPackages:
        - createTime: createTime
          name: name
          updateTime: updateTime
          packageName: packageName
          version: version
          tags:
          - tags
          - tags
        - createTime: createTime
          name: name
          updateTime: updateTime
          packageName: packageName
          version: version
          tags:
          - tags
          - tags
      properties:
        nextPageToken:
          description: "The token to retrieve the next page of artifacts, or empty\
            \ if there are no more artifacts to return."
          type: string
        npmPackages:
          description: The npm packages returned.
          items:
            $ref: '#/components/schemas/NpmPackage'
          type: array
      type: object
    ListPackagesResponse:
      description: The response from listing packages.
      example:
        nextPageToken: nextPageToken
        packages:
        - createTime: createTime
          displayName: displayName
          name: name
          updateTime: updateTime
        - createTime: createTime
          displayName: displayName
          name: name
          updateTime: updateTime
      properties:
        nextPageToken:
          description: "The token to retrieve the next page of packages, or empty\
            \ if there are no more packages to return."
          type: string
        packages:
          description: The packages returned.
          items:
            $ref: '#/components/schemas/Package'
          type: array
      type: object
    ListPythonPackagesResponse:
      description: The response from listing python packages.
      example:
        pythonPackages:
        - createTime: createTime
          name: name
          updateTime: updateTime
          packageName: packageName
          uri: uri
          version: version
        - createTime: createTime
          name: name
          updateTime: updateTime
          packageName: packageName
          uri: uri
          version: version
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: "The token to retrieve the next page of artifacts, or empty\
            \ if there are no more artifacts to return."
          type: string
        pythonPackages:
          description: The python packages returned.
          items:
            $ref: '#/components/schemas/PythonPackage'
          type: array
      type: object
    ListRepositoriesResponse:
      description: The response from listing repositories.
      example:
        repositories:
        - disallowUnspecifiedMode: true
          format: FORMAT_UNSPECIFIED
          remoteRepositoryConfig:
            pythonRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            dockerRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            aptRepository:
              publicRepository:
                repositoryPath: repositoryPath
                repositoryBase: REPOSITORY_BASE_UNSPECIFIED
            npmRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            description: description
            mavenRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            upstreamCredentials:
              usernamePasswordCredentials:
                passwordSecretVersion: passwordSecretVersion
                username: username
            yumRepository:
              publicRepository:
                repositoryPath: repositoryPath
                repositoryBase: REPOSITORY_BASE_UNSPECIFIED
          description: description
          mavenConfig:
            allowSnapshotOverwrites: true
            versionPolicy: VERSION_POLICY_UNSPECIFIED
          satisfiesPzs: true
          updateTime: updateTime
          kmsKeyName: kmsKeyName
          cleanupPolicyDryRun: true
          labels:
            key: labels
          sizeBytes: sizeBytes
          mode: MODE_UNSPECIFIED
          cleanupPolicies:
            key:
              condition:
                tagPrefixes:
                - tagPrefixes
                - tagPrefixes
                versionNamePrefixes:
                - versionNamePrefixes
                - versionNamePrefixes
                olderThan: olderThan
                newerThan: newerThan
                packageNamePrefixes:
                - packageNamePrefixes
                - packageNamePrefixes
                tagState: TAG_STATE_UNSPECIFIED
              mostRecentVersions:
                keepCount: 0
                packageNamePrefixes:
                - packageNamePrefixes
                - packageNamePrefixes
              action: ACTION_UNSPECIFIED
              id: id
          dockerConfig:
            immutableTags: true
          virtualRepositoryConfig:
            upstreamPolicies:
            - id: id
              priority: 6
              repository: repository
            - id: id
              priority: 6
              repository: repository
          createTime: createTime
          name: name
        - disallowUnspecifiedMode: true
          format: FORMAT_UNSPECIFIED
          remoteRepositoryConfig:
            pythonRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            dockerRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            aptRepository:
              publicRepository:
                repositoryPath: repositoryPath
                repositoryBase: REPOSITORY_BASE_UNSPECIFIED
            npmRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            description: description
            mavenRepository:
              publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
            upstreamCredentials:
              usernamePasswordCredentials:
                passwordSecretVersion: passwordSecretVersion
                username: username
            yumRepository:
              publicRepository:
                repositoryPath: repositoryPath
                repositoryBase: REPOSITORY_BASE_UNSPECIFIED
          description: description
          mavenConfig:
            allowSnapshotOverwrites: true
            versionPolicy: VERSION_POLICY_UNSPECIFIED
          satisfiesPzs: true
          updateTime: updateTime
          kmsKeyName: kmsKeyName
          cleanupPolicyDryRun: true
          labels:
            key: labels
          sizeBytes: sizeBytes
          mode: MODE_UNSPECIFIED
          cleanupPolicies:
            key:
              condition:
                tagPrefixes:
                - tagPrefixes
                - tagPrefixes
                versionNamePrefixes:
                - versionNamePrefixes
                - versionNamePrefixes
                olderThan: olderThan
                newerThan: newerThan
                packageNamePrefixes:
                - packageNamePrefixes
                - packageNamePrefixes
                tagState: TAG_STATE_UNSPECIFIED
              mostRecentVersions:
                keepCount: 0
                packageNamePrefixes:
                - packageNamePrefixes
                - packageNamePrefixes
              action: ACTION_UNSPECIFIED
              id: id
          dockerConfig:
            immutableTags: true
          virtualRepositoryConfig:
            upstreamPolicies:
            - id: id
              priority: 6
              repository: repository
            - id: id
              priority: 6
              repository: repository
          createTime: createTime
          name: name
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: "The token to retrieve the next page of repositories, or empty\
            \ if there are no more repositories to return."
          type: string
        repositories:
          description: The repositories returned.
          items:
            $ref: '#/components/schemas/Repository'
          type: array
      type: object
    ListTagsResponse:
      description: The response from listing tags.
      example:
        nextPageToken: nextPageToken
        tags:
        - name: name
          version: version
        - name: name
          version: version
      properties:
        nextPageToken:
          description: "The token to retrieve the next page of tags, or empty if there\
            \ are no more tags to return."
          type: string
        tags:
          description: The tags returned.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      type: object
    ListVersionsResponse:
      description: The response from listing versions.
      example:
        versions:
        - metadata:
            key: ""
          relatedTags:
          - name: name
            version: version
          - name: name
            version: version
          createTime: createTime
          name: name
          description: description
          updateTime: updateTime
        - metadata:
            key: ""
          relatedTags:
          - name: name
            version: version
          - name: name
            version: version
          createTime: createTime
          name: name
          description: description
          updateTime: updateTime
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: "The token to retrieve the next page of versions, or empty\
            \ if there are no more versions to return."
          type: string
        versions:
          description: The versions returned.
          items:
            $ref: '#/components/schemas/Version'
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      example:
        metadata:
          key: ""
        displayName: displayName
        locationId: locationId
        name: name
        labels:
          key: labels
      properties:
        displayName:
          description: "The friendly name for this location, typically a nearby city\
            \ name. For example, \"Tokyo\"."
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Cross-service attributes for the location. For example {\"\
            cloud.googleapis.com/region\": \"us-east1\"}"
          type: object
        locationId:
          description: "The canonical id for this location. For example: `\"us-east1\"\
            `."
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata. For example the available capacity
            at the given location.
          type: object
        name:
          description: "Resource name for the location, which may vary between implementations.\
            \ For example: `\"projects/example-project/locations/us-east1\"`"
          type: string
      type: object
    MavenArtifact:
      description: MavenArtifact represents a maven artifact.
      example:
        pomUri: pomUri
        createTime: createTime
        groupId: groupId
        name: name
        artifactId: artifactId
        updateTime: updateTime
        version: version
      properties:
        artifactId:
          description: Artifact ID for the artifact.
          type: string
        createTime:
          description: Output only. Time the artifact was created.
          format: google-datetime
          readOnly: true
          type: string
        groupId:
          description: "Group ID for the artifact. Example: com.google.guava"
          type: string
        name:
          description: "Required. registry_location, project_id, repository_name and\
            \ maven_artifact forms a unique artifact For example, \"projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/\
            \ com.google.guava:guava:31.0-jre\", where \"us-west4\" is the registry_location,\
            \ \"test-project\" is the project_id, \"test-repo\" is the repository_name\
            \ and \"com.google.guava:guava:31.0-jre\" is the maven artifact."
          type: string
        pomUri:
          description: "Required. URL to access the pom file of the artifact. Example:\
            \ us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom"
          type: string
        updateTime:
          description: Output only. Time the artifact was updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: Version of this artifact.
          type: string
      type: object
    MavenRepository:
      description: Configuration for a Maven remote repository.
      example:
        publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
      properties:
        publicRepository:
          description: One of the publicly available Maven repositories supported
            by Artifact Registry.
          enum:
          - PUBLIC_REPOSITORY_UNSPECIFIED
          - MAVEN_CENTRAL
          type: string
      type: object
    MavenRepositoryConfig:
      description: MavenRepositoryConfig is maven related repository details. Provides
        additional configuration details for repositories of the maven format type.
      example:
        allowSnapshotOverwrites: true
        versionPolicy: VERSION_POLICY_UNSPECIFIED
      properties:
        allowSnapshotOverwrites:
          description: The repository with this flag will allow publishing the same
            snapshot versions.
          type: boolean
        versionPolicy:
          description: Version policy defines the versions that the registry will
            accept.
          enum:
          - VERSION_POLICY_UNSPECIFIED
          - RELEASE
          - SNAPSHOT
          type: string
      type: object
    NpmPackage:
      description: NpmPackage represents an npm artifact.
      example:
        createTime: createTime
        name: name
        updateTime: updateTime
        packageName: packageName
        version: version
        tags:
        - tags
        - tags
      properties:
        createTime:
          description: Output only. Time the package was created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: "Required. registry_location, project_id, repository_name and\
            \ npm_package forms a unique package For example, \"projects/test-project/locations/us-west4/repositories/test-repo/npmPackages/\
            \ npm_test:1.0.0\", where \"us-west4\" is the registry_location, \"test-project\"\
            \ is the project_id, \"test-repo\" is the repository_name and npm_test:1.0.0\"\
            \ is the npm package."
          type: string
        packageName:
          description: Package for the artifact.
          type: string
        tags:
          description: Tags attached to this package.
          items:
            type: string
          type: array
        updateTime:
          description: Output only. Time the package was updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: Version of this package.
          type: string
      type: object
    NpmRepository:
      description: Configuration for a Npm remote repository.
      example:
        publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
      properties:
        publicRepository:
          description: One of the publicly available Npm repositories supported by
            Artifact Registry.
          enum:
          - PUBLIC_REPOSITORY_UNSPECIFIED
          - NPMJS
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          type: object
      type: object
    OperationMetadata:
      description: "Metadata type for longrunning-operations, currently empty."
      properties: {}
      type: object
    Package:
      description: Packages are named collections of versions.
      example:
        createTime: createTime
        displayName: displayName
        name: name
        updateTime: updateTime
      properties:
        createTime:
          description: The time when the package was created.
          format: google-datetime
          type: string
        displayName:
          description: The display name of the package.
          type: string
        name:
          description: "The name of the package, for example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`.\
            \ If the package ID part contains slashes, the slashes are escaped."
          type: string
        updateTime:
          description: The time when the package was last updated. This includes publishing
            a new version of the package.
          format: google-datetime
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies\
        \ access controls for Google Cloud resources. A `Policy` is a collection of\
        \ `bindings`. A `binding` binds one or more `members`, or principals, to a\
        \ single `role`. Principals can be user accounts, service accounts, Google\
        \ groups, and domains (such as G Suite). A `role` is a named list of permissions;\
        \ each `role` can be an IAM predefined role or a user-created custom role.\
        \ For some types of Google Cloud resources, a `binding` can also specify a\
        \ `condition`, which is a logical expression that allows access to a resource\
        \ only if the expression evaluates to `true`. A condition can add constraints\
        \ based on attributes of the request, the resource, or both. To learn which\
        \ resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\
        \ **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\"\
        , \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\",\
        \ \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\
        \ ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\"\
        : [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\"\
        , \"description\": \"Does not grant access after Sep 2020\", \"expression\"\
        : \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\"\
        : \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: -\
        \ members: - user:mike@example.com - group:admins@example.com - domain:google.com\
        \ - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\
        \ - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\
        \ condition: title: expirable access description: Does not grant access after\
        \ Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\
        \ etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features,\
        \ see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      example:
        bindings:
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        etag: etag
        version: 0
      properties:
        bindings:
          description: "Associates a list of `members`, or principals, with a `role`.\
            \ Optionally, may specify a `condition` that determines how and when the\
            \ `bindings` are applied. Each of the `bindings` must contain at least\
            \ one principal. The `bindings` in a `Policy` can refer to up to 1,500\
            \ principals; up to 250 of these principals can be Google groups. Each\
            \ occurrence of a principal counts towards these limits. For example,\
            \ if the `bindings` grant 50 different roles to `user:alice@example.com`,\
            \ and not to any other principal, then you can add another 1,450 principals\
            \ to the `bindings` in the `Policy`."
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way\
            \ to help prevent simultaneous updates of a policy from overwriting each\
            \ other. It is strongly suggested that systems make use of the `etag`\
            \ in the read-modify-write cycle to perform policy updates in order to\
            \ avoid race conditions: An `etag` is returned in the response to `getIamPolicy`,\
            \ and systems are expected to put that etag in the request to `setIamPolicy`\
            \ to ensure that their change will be applied to the same version of the\
            \ policy. **Important:** If you use IAM Conditions, you must include the\
            \ `etag` field whenever you call `setIamPolicy`. If you omit this field,\
            \ then IAM allows you to overwrite a version `3` policy with a version\
            \ `1` policy, and all of the conditions in the version `3` policy are\
            \ lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`,\
            \ `1`, and `3`. Requests that specify an invalid value are rejected. Any\
            \ operation that affects conditional role bindings must specify version\
            \ `3`. This requirement applies to the following operations: * Getting\
            \ a policy that includes a conditional role binding * Adding a conditional\
            \ role binding to a policy * Changing a conditional role binding in a\
            \ policy * Removing any role binding, with or without a condition, from\
            \ a policy that includes conditions **Important:** If you use IAM Conditions,\
            \ you must include the `etag` field whenever you call `setIamPolicy`.\
            \ If you omit this field, then IAM allows you to overwrite a version `3`\
            \ policy with a version `1` policy, and all of the conditions in the version\
            \ `3` policy are lost. If a policy does not include any conditions, operations\
            \ on that policy may specify any valid version or leave the field unset.\
            \ To learn which resources support conditions in their IAM policies, see\
            \ the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    ProjectSettings:
      description: The Artifact Registry settings that apply to a Project.
      properties:
        legacyRedirectionState:
          description: The redirection state of the legacy repositories in this project.
          enum:
          - REDIRECTION_STATE_UNSPECIFIED
          - REDIRECTION_FROM_GCR_IO_DISABLED
          - REDIRECTION_FROM_GCR_IO_ENABLED
          - REDIRECTION_FROM_GCR_IO_FINALIZED
          type: string
          x-enumDeprecated:
          - false
          - false
          - false
          - true
        name:
          description: "The name of the project's settings. Always of the form: projects/{project-id}/projectSettings\
            \ In update request: never set In response: always set"
          type: string
      type: object
    PythonPackage:
      description: PythonPackage represents a python artifact.
      example:
        createTime: createTime
        name: name
        updateTime: updateTime
        packageName: packageName
        uri: uri
        version: version
      properties:
        createTime:
          description: Output only. Time the package was created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: "Required. registry_location, project_id, repository_name and\
            \ python_package forms a unique package name:`projects//locations//repository//pythonPackages/`.\
            \ For example, \"projects/test-project/locations/us-west4/repositories/test-repo/pythonPackages/\
            \ python_package:1.0.0\", where \"us-west4\" is the registry_location,\
            \ \"test-project\" is the project_id, \"test-repo\" is the repository_name\
            \ and python_package:1.0.0\" is the python package."
          type: string
        packageName:
          description: Package for the artifact.
          type: string
        updateTime:
          description: Output only. Time the package was updated.
          format: google-datetime
          readOnly: true
          type: string
        uri:
          description: "Required. URL to access the package. Example: us-west4-python.pkg.dev/test-project/test-repo/python_package/file-name-1.0.0.tar.gz"
          type: string
        version:
          description: Version of this package.
          type: string
      type: object
    PythonRepository:
      description: Configuration for a Python remote repository.
      example:
        publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
      properties:
        publicRepository:
          description: One of the publicly available Python repositories supported
            by Artifact Registry.
          enum:
          - PUBLIC_REPOSITORY_UNSPECIFIED
          - PYPI
          type: string
      type: object
    RemoteRepositoryConfig:
      description: Remote repository configuration.
      example:
        pythonRepository:
          publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
        dockerRepository:
          publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
        aptRepository:
          publicRepository:
            repositoryPath: repositoryPath
            repositoryBase: REPOSITORY_BASE_UNSPECIFIED
        npmRepository:
          publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
        description: description
        mavenRepository:
          publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
        upstreamCredentials:
          usernamePasswordCredentials:
            passwordSecretVersion: passwordSecretVersion
            username: username
        yumRepository:
          publicRepository:
            repositoryPath: repositoryPath
            repositoryBase: REPOSITORY_BASE_UNSPECIFIED
      properties:
        aptRepository:
          $ref: '#/components/schemas/AptRepository'
        description:
          description: The description of the remote source.
          type: string
        dockerRepository:
          $ref: '#/components/schemas/DockerRepository'
        mavenRepository:
          $ref: '#/components/schemas/MavenRepository'
        npmRepository:
          $ref: '#/components/schemas/NpmRepository'
        pythonRepository:
          $ref: '#/components/schemas/PythonRepository'
        upstreamCredentials:
          $ref: '#/components/schemas/UpstreamCredentials'
        yumRepository:
          $ref: '#/components/schemas/YumRepository'
      type: object
    Repository:
      description: A Repository for storing artifacts with a specific format.
      example:
        disallowUnspecifiedMode: true
        format: FORMAT_UNSPECIFIED
        remoteRepositoryConfig:
          pythonRepository:
            publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
          dockerRepository:
            publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
          aptRepository:
            publicRepository:
              repositoryPath: repositoryPath
              repositoryBase: REPOSITORY_BASE_UNSPECIFIED
          npmRepository:
            publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
          description: description
          mavenRepository:
            publicRepository: PUBLIC_REPOSITORY_UNSPECIFIED
          upstreamCredentials:
            usernamePasswordCredentials:
              passwordSecretVersion: passwordSecretVersion
              username: username
          yumRepository:
            publicRepository:
              repositoryPath: repositoryPath
              repositoryBase: REPOSITORY_BASE_UNSPECIFIED
        description: description
        mavenConfig:
          allowSnapshotOverwrites: true
          versionPolicy: VERSION_POLICY_UNSPECIFIED
        satisfiesPzs: true
        updateTime: updateTime
        kmsKeyName: kmsKeyName
        cleanupPolicyDryRun: true
        labels:
          key: labels
        sizeBytes: sizeBytes
        mode: MODE_UNSPECIFIED
        cleanupPolicies:
          key:
            condition:
              tagPrefixes:
              - tagPrefixes
              - tagPrefixes
              versionNamePrefixes:
              - versionNamePrefixes
              - versionNamePrefixes
              olderThan: olderThan
              newerThan: newerThan
              packageNamePrefixes:
              - packageNamePrefixes
              - packageNamePrefixes
              tagState: TAG_STATE_UNSPECIFIED
            mostRecentVersions:
              keepCount: 0
              packageNamePrefixes:
              - packageNamePrefixes
              - packageNamePrefixes
            action: ACTION_UNSPECIFIED
            id: id
        dockerConfig:
          immutableTags: true
        virtualRepositoryConfig:
          upstreamPolicies:
          - id: id
            priority: 6
            repository: repository
          - id: id
            priority: 6
            repository: repository
        createTime: createTime
        name: name
      properties:
        cleanupPolicies:
          additionalProperties:
            $ref: '#/components/schemas/CleanupPolicy'
          description: Optional. Cleanup policies for this repository. Cleanup policies
            indicate when certain package versions can be automatically deleted. Map
            keys are policy IDs supplied by users during policy creation. They must
            unique within a repository and be under 128 characters in length.
          type: object
        cleanupPolicyDryRun:
          description: "Optional. If true, the cleanup pipeline is prevented from\
            \ deleting versions in this repository."
          type: boolean
        createTime:
          description: Output only. The time when the repository was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: The user-provided description of the repository.
          type: string
        disallowUnspecifiedMode:
          description: "Optional. If this is true, aunspecified repo type will be\
            \ treated as error. Is used for new repo types that don't have any specific\
            \ fields. Right now is used by AOSS team when creating repos for customers."
          type: boolean
        dockerConfig:
          $ref: '#/components/schemas/DockerRepositoryConfig'
        format:
          description: Optional. The format of packages that are stored in the repository.
          enum:
          - FORMAT_UNSPECIFIED
          - DOCKER
          - MAVEN
          - NPM
          - APT
          - YUM
          - GOOGET
          - PYTHON
          - KFP
          - GO
          type: string
        kmsKeyName:
          description: "The Cloud KMS resource name of the customer managed encryption\
            \ key that's used to encrypt the contents of the Repository. Has the form:\
            \ `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.\
            \ This value may not be changed after the Repository has been created."
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels with user-defined metadata. This field may contain\
            \ up to 64 entries. Label keys and values may be no longer than 63 characters.\
            \ Label keys must begin with a lowercase letter and may only contain lowercase\
            \ letters, numeric characters, underscores, and dashes."
          type: object
        mavenConfig:
          $ref: '#/components/schemas/MavenRepositoryConfig'
        mode:
          description: Optional. The mode of the repository.
          enum:
          - MODE_UNSPECIFIED
          - STANDARD_REPOSITORY
          - VIRTUAL_REPOSITORY
          - REMOTE_REPOSITORY
          type: string
        name:
          description: "The name of the repository, for example: `projects/p1/locations/us-central1/repositories/repo1`."
          type: string
        remoteRepositoryConfig:
          $ref: '#/components/schemas/RemoteRepositoryConfig'
        satisfiesPzs:
          description: "Output only. If set, the repository satisfies physical zone\
            \ separation."
          readOnly: true
          type: boolean
        sizeBytes:
          description: "Output only. The size, in bytes, of all artifact storage in\
            \ this repository. Repositories that are generally available or in public\
            \ preview use this to calculate storage costs."
          format: int64
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the repository was last updated.
          format: google-datetime
          readOnly: true
          type: string
        virtualRepositoryConfig:
          $ref: '#/components/schemas/VirtualRepositoryConfig'
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      example:
        policy:
          bindings:
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          etag: etag
          version: 0
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          type: string
      type: object
    Tag:
      description: Tags point to a version and represent an alternative name that
        can be used to access the version.
      example:
        name: name
        version: version
      properties:
        name:
          description: "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\"\
            . If the package part contains slashes, the slashes are escaped. The tag\
            \ part can only have characters in [a-zA-Z0-9\\-._~:@], anything else\
            \ must be URL encoded."
          type: string
        version:
          description: "The name of the version the tag refers to, for example: \"\
            projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811\"\
            \ If the package or version ID parts contain slashes, the slashes are\
            \ escaped."
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: "The set of permissions to check for the `resource`. Permissions\
            \ with wildcards (such as `*` or `storage.*`) are not allowed. For more\
            \ information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller
            is allowed.
          items:
            type: string
          type: array
      type: object
    UploadAptArtifactMediaResponse:
      description: The response to upload an artifact.
      example:
        operation:
          metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
      type: object
    UploadAptArtifactMetadata:
      description: The operation metadata for uploading artifacts.
      properties: {}
      type: object
    UploadAptArtifactRequest:
      description: The request to upload an artifact.
      properties: {}
      type: object
    UploadAptArtifactResponse:
      description: The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
      properties:
        aptArtifacts:
          description: The Apt artifacts updated.
          items:
            $ref: '#/components/schemas/AptArtifact'
          type: array
      type: object
    UploadGoModuleMediaResponse:
      description: The response to upload a Go module.
      example:
        operation:
          metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
      type: object
    UploadGoModuleMetadata:
      description: The operation metadata for uploading go modules.
      properties: {}
      type: object
    UploadGoModuleRequest:
      description: The request to upload a Go module.
      properties: {}
      type: object
    UploadGoogetArtifactMediaResponse:
      description: The response to upload an artifact.
      example:
        operation:
          metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
      type: object
    UploadGoogetArtifactMetadata:
      description: The operation metadata for uploading artifacts.
      properties: {}
      type: object
    UploadGoogetArtifactRequest:
      description: The request to upload an artifact.
      properties: {}
      type: object
    UploadGoogetArtifactResponse:
      description: The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
      properties:
        googetArtifacts:
          description: The GooGet artifacts updated.
          items:
            $ref: '#/components/schemas/GoogetArtifact'
          type: array
      type: object
    UploadKfpArtifactMediaResponse:
      description: The response to upload an artifact.
      example:
        operation:
          metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
      type: object
    UploadKfpArtifactMetadata:
      description: The operation metadata for uploading KFP artifacts.
      properties: {}
      type: object
    UploadKfpArtifactRequest:
      description: The request to upload an artifact.
      properties:
        description:
          description: Description of the package version.
          type: string
        tags:
          description: Tags to be created with the version.
          items:
            type: string
          type: array
      type: object
    UploadYumArtifactMediaResponse:
      description: The response to upload an artifact.
      example:
        operation:
          metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
      type: object
    UploadYumArtifactMetadata:
      description: The operation metadata for uploading artifacts.
      properties: {}
      type: object
    UploadYumArtifactRequest:
      description: The request to upload an artifact.
      properties: {}
      type: object
    UploadYumArtifactResponse:
      description: The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
      properties:
        yumArtifacts:
          description: The Yum artifacts updated.
          items:
            $ref: '#/components/schemas/YumArtifact'
          type: array
      type: object
    UpstreamCredentials:
      description: The credentials to access the remote repository.
      example:
        usernamePasswordCredentials:
          passwordSecretVersion: passwordSecretVersion
          username: username
      properties:
        usernamePasswordCredentials:
          $ref: '#/components/schemas/UsernamePasswordCredentials'
      type: object
    UpstreamPolicy:
      description: Artifact policy configuration for the repository contents.
      example:
        id: id
        priority: 6
        repository: repository
      properties:
        id:
          description: The user-provided ID of the upstream policy.
          type: string
        priority:
          description: Entries with a greater priority value take precedence in the
            pull order.
          format: int32
          type: integer
        repository:
          description: "A reference to the repository resource, for example: `projects/p1/locations/us-central1/repositories/repo1`."
          type: string
      type: object
    UsernamePasswordCredentials:
      description: Username and password credentials.
      example:
        passwordSecretVersion: passwordSecretVersion
        username: username
      properties:
        passwordSecretVersion:
          description: "The Secret Manager key version that holds the password to\
            \ access the remote repository. Must be in the format of `projects/{project}/secrets/{secret}/versions/{version}`."
          type: string
        username:
          description: The username to access the remote repository.
          type: string
      type: object
    VPCSCConfig:
      description: The Artifact Registry VPC SC config that apply to a Project.
      properties:
        name:
          description: "The name of the project's VPC SC Config. Always of the form:\
            \ projects/{projectID}/locations/{location}/vpcscConfig In update request:\
            \ never set In response: always set"
          type: string
        vpcscPolicy:
          description: The project per location VPC SC policy that defines the VPC
            SC behavior for the Remote Repository (Allow/Deny).
          enum:
          - VPCSC_POLICY_UNSPECIFIED
          - DENY
          - ALLOW
          type: string
      type: object
    Version:
      description: "The body of a version resource. A version resource represents\
        \ a collection of components, such as files and other data. This may correspond\
        \ to a version in many package management schemes."
      example:
        metadata:
          key: ""
        relatedTags:
        - name: name
          version: version
        - name: name
          version: version
        createTime: createTime
        name: name
        description: description
        updateTime: updateTime
      properties:
        createTime:
          description: The time when the version was created.
          format: google-datetime
          type: string
        description:
          description: "Optional. Description of the version, as specified in its\
            \ metadata."
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: "Output only. Repository-specific Metadata stored against this\
            \ version. The fields returned are defined by the underlying repository-specific\
            \ resource. Currently, the resources could be: DockerImage MavenArtifact"
          readOnly: true
          type: object
        name:
          description: "The name of the version, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1\"\
            . If the package or version ID parts contain slashes, the slashes are\
            \ escaped."
          type: string
        relatedTags:
          description: Output only. A list of related tags. Will contain up to 100
            tags that reference this version.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        updateTime:
          description: The time when the version was last updated.
          format: google-datetime
          type: string
      type: object
    VirtualRepositoryConfig:
      description: Virtual repository configuration.
      example:
        upstreamPolicies:
        - id: id
          priority: 6
          repository: repository
        - id: id
          priority: 6
          repository: repository
      properties:
        upstreamPolicies:
          description: Policies that configure the upstream artifacts distributed
            by the Virtual Repository. Upstream policies cannot be set on a standard
            repository.
          items:
            $ref: '#/components/schemas/UpstreamPolicy'
          type: array
      type: object
    YumArtifact:
      description: A detailed representation of a Yum artifact.
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The yum package name of the artifact.
          readOnly: true
          type: string
        packageType:
          description: Output only. An artifact is a binary or source package.
          enum:
          - PACKAGE_TYPE_UNSPECIFIED
          - BINARY
          - SOURCE
          readOnly: true
          type: string
      type: object
    YumRepository:
      description: Configuration for a Yum remote repository.
      example:
        publicRepository:
          repositoryPath: repositoryPath
          repositoryBase: REPOSITORY_BASE_UNSPECIFIED
      properties:
        publicRepository:
          $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository'
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data
              across Google Cloud services and see the email address of your Google
              Account
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data
              across Google Cloud services and see the email address of your Google
              Account
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

