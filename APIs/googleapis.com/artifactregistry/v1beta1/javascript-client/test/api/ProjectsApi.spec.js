/**
 * Artifact Registry API
 * Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ArtifactRegistryApi);
  }
}(this, function(expect, ArtifactRegistryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ArtifactRegistryApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('artifactregistryProjectsLocationsList', function() {
      it('should call artifactregistryProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsList
        //instance.artifactregistryProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesCreate', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesCreate successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesCreate
        //instance.artifactregistryProjectsLocationsRepositoriesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesFilesList', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesFilesList successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesFilesList
        //instance.artifactregistryProjectsLocationsRepositoriesFilesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesGetIamPolicy', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesGetIamPolicy
        //instance.artifactregistryProjectsLocationsRepositoriesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesList', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesList successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesList
        //instance.artifactregistryProjectsLocationsRepositoriesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesPackagesList', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesPackagesList successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesPackagesList
        //instance.artifactregistryProjectsLocationsRepositoriesPackagesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesPackagesTagsCreate', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesPackagesTagsCreate successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesPackagesTagsCreate
        //instance.artifactregistryProjectsLocationsRepositoriesPackagesTagsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesPackagesTagsList', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesPackagesTagsList successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesPackagesTagsList
        //instance.artifactregistryProjectsLocationsRepositoriesPackagesTagsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesPackagesTagsPatch', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesPackagesTagsPatch successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesPackagesTagsPatch
        //instance.artifactregistryProjectsLocationsRepositoriesPackagesTagsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesPackagesVersionsDelete', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesPackagesVersionsDelete successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesPackagesVersionsDelete
        //instance.artifactregistryProjectsLocationsRepositoriesPackagesVersionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesPackagesVersionsGet', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesPackagesVersionsGet successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesPackagesVersionsGet
        //instance.artifactregistryProjectsLocationsRepositoriesPackagesVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesPackagesVersionsList', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesPackagesVersionsList successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesPackagesVersionsList
        //instance.artifactregistryProjectsLocationsRepositoriesPackagesVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesSetIamPolicy', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesSetIamPolicy
        //instance.artifactregistryProjectsLocationsRepositoriesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('artifactregistryProjectsLocationsRepositoriesTestIamPermissions', function() {
      it('should call artifactregistryProjectsLocationsRepositoriesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test artifactregistryProjectsLocationsRepositoriesTestIamPermissions
        //instance.artifactregistryProjectsLocationsRepositoriesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
