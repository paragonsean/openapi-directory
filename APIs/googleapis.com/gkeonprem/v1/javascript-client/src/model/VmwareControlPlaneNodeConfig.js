/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VmwareAutoResizeConfig from './VmwareAutoResizeConfig';
import VmwareControlPlaneVsphereConfig from './VmwareControlPlaneVsphereConfig';

/**
 * The VmwareControlPlaneNodeConfig model module.
 * @module model/VmwareControlPlaneNodeConfig
 * @version v1
 */
class VmwareControlPlaneNodeConfig {
    /**
     * Constructs a new <code>VmwareControlPlaneNodeConfig</code>.
     * Specifies control plane node config for the VMware user cluster.
     * @alias module:model/VmwareControlPlaneNodeConfig
     */
    constructor() { 
        
        VmwareControlPlaneNodeConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmwareControlPlaneNodeConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmwareControlPlaneNodeConfig} obj Optional instance to populate.
     * @return {module:model/VmwareControlPlaneNodeConfig} The populated <code>VmwareControlPlaneNodeConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmwareControlPlaneNodeConfig();

            if (data.hasOwnProperty('autoResizeConfig')) {
                obj['autoResizeConfig'] = VmwareAutoResizeConfig.constructFromObject(data['autoResizeConfig']);
            }
            if (data.hasOwnProperty('cpus')) {
                obj['cpus'] = ApiClient.convertToType(data['cpus'], 'String');
            }
            if (data.hasOwnProperty('memory')) {
                obj['memory'] = ApiClient.convertToType(data['memory'], 'String');
            }
            if (data.hasOwnProperty('replicas')) {
                obj['replicas'] = ApiClient.convertToType(data['replicas'], 'String');
            }
            if (data.hasOwnProperty('vsphereConfig')) {
                obj['vsphereConfig'] = VmwareControlPlaneVsphereConfig.constructFromObject(data['vsphereConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmwareControlPlaneNodeConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmwareControlPlaneNodeConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoResizeConfig`
        if (data['autoResizeConfig']) { // data not null
          VmwareAutoResizeConfig.validateJSON(data['autoResizeConfig']);
        }
        // ensure the json data is a string
        if (data['cpus'] && !(typeof data['cpus'] === 'string' || data['cpus'] instanceof String)) {
            throw new Error("Expected the field `cpus` to be a primitive type in the JSON string but got " + data['cpus']);
        }
        // ensure the json data is a string
        if (data['memory'] && !(typeof data['memory'] === 'string' || data['memory'] instanceof String)) {
            throw new Error("Expected the field `memory` to be a primitive type in the JSON string but got " + data['memory']);
        }
        // ensure the json data is a string
        if (data['replicas'] && !(typeof data['replicas'] === 'string' || data['replicas'] instanceof String)) {
            throw new Error("Expected the field `replicas` to be a primitive type in the JSON string but got " + data['replicas']);
        }
        // validate the optional field `vsphereConfig`
        if (data['vsphereConfig']) { // data not null
          VmwareControlPlaneVsphereConfig.validateJSON(data['vsphereConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/VmwareAutoResizeConfig} autoResizeConfig
 */
VmwareControlPlaneNodeConfig.prototype['autoResizeConfig'] = undefined;

/**
 * The number of CPUs for each admin cluster node that serve as control planes for this VMware user cluster. (default: 4 CPUs)
 * @member {String} cpus
 */
VmwareControlPlaneNodeConfig.prototype['cpus'] = undefined;

/**
 * The megabytes of memory for each admin cluster node that serves as a control plane for this VMware user cluster (default: 8192 MB memory).
 * @member {String} memory
 */
VmwareControlPlaneNodeConfig.prototype['memory'] = undefined;

/**
 * The number of control plane nodes for this VMware user cluster. (default: 1 replica).
 * @member {String} replicas
 */
VmwareControlPlaneNodeConfig.prototype['replicas'] = undefined;

/**
 * @member {module:model/VmwareControlPlaneVsphereConfig} vsphereConfig
 */
VmwareControlPlaneNodeConfig.prototype['vsphereConfig'] = undefined;






export default VmwareControlPlaneNodeConfig;

