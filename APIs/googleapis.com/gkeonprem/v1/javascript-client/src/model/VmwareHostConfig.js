/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VmwareHostConfig model module.
 * @module model/VmwareHostConfig
 * @version v1
 */
class VmwareHostConfig {
    /**
     * Constructs a new <code>VmwareHostConfig</code>.
     * Represents the common parameters for all the hosts irrespective of their IP address.
     * @alias module:model/VmwareHostConfig
     */
    constructor() { 
        
        VmwareHostConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmwareHostConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmwareHostConfig} obj Optional instance to populate.
     * @return {module:model/VmwareHostConfig} The populated <code>VmwareHostConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmwareHostConfig();

            if (data.hasOwnProperty('dnsSearchDomains')) {
                obj['dnsSearchDomains'] = ApiClient.convertToType(data['dnsSearchDomains'], ['String']);
            }
            if (data.hasOwnProperty('dnsServers')) {
                obj['dnsServers'] = ApiClient.convertToType(data['dnsServers'], ['String']);
            }
            if (data.hasOwnProperty('ntpServers')) {
                obj['ntpServers'] = ApiClient.convertToType(data['ntpServers'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmwareHostConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmwareHostConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['dnsSearchDomains'])) {
            throw new Error("Expected the field `dnsSearchDomains` to be an array in the JSON data but got " + data['dnsSearchDomains']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dnsServers'])) {
            throw new Error("Expected the field `dnsServers` to be an array in the JSON data but got " + data['dnsServers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ntpServers'])) {
            throw new Error("Expected the field `ntpServers` to be an array in the JSON data but got " + data['ntpServers']);
        }

        return true;
    }


}



/**
 * DNS search domains.
 * @member {Array.<String>} dnsSearchDomains
 */
VmwareHostConfig.prototype['dnsSearchDomains'] = undefined;

/**
 * DNS servers.
 * @member {Array.<String>} dnsServers
 */
VmwareHostConfig.prototype['dnsServers'] = undefined;

/**
 * NTP servers.
 * @member {Array.<String>} ntpServers
 */
VmwareHostConfig.prototype['ntpServers'] = undefined;






export default VmwareHostConfig;

