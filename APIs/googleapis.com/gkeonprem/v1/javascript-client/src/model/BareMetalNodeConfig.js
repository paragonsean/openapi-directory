/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BareMetalNodeConfig model module.
 * @module model/BareMetalNodeConfig
 * @version v1
 */
class BareMetalNodeConfig {
    /**
     * Constructs a new <code>BareMetalNodeConfig</code>.
     * BareMetalNodeConfig lists machine addresses to access Nodes.
     * @alias module:model/BareMetalNodeConfig
     */
    constructor() { 
        
        BareMetalNodeConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BareMetalNodeConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BareMetalNodeConfig} obj Optional instance to populate.
     * @return {module:model/BareMetalNodeConfig} The populated <code>BareMetalNodeConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BareMetalNodeConfig();

            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('nodeIp')) {
                obj['nodeIp'] = ApiClient.convertToType(data['nodeIp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BareMetalNodeConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BareMetalNodeConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nodeIp'] && !(typeof data['nodeIp'] === 'string' || data['nodeIp'] instanceof String)) {
            throw new Error("Expected the field `nodeIp` to be a primitive type in the JSON string but got " + data['nodeIp']);
        }

        return true;
    }


}



/**
 * The labels assigned to this node. An object containing a list of key/value pairs. The labels here, unioned with the labels set on BareMetalNodePoolConfig are the set of labels that will be applied to the node. If there are any conflicts, the BareMetalNodeConfig labels take precedence. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.
 * @member {Object.<String, String>} labels
 */
BareMetalNodeConfig.prototype['labels'] = undefined;

/**
 * The default IPv4 address for SSH access and Kubernetes node. Example: 192.168.0.1
 * @member {String} nodeIp
 */
BareMetalNodeConfig.prototype['nodeIp'] = undefined;






export default BareMetalNodeConfig;

