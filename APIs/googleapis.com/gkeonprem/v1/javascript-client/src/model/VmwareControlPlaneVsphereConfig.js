/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VmwareControlPlaneVsphereConfig model module.
 * @module model/VmwareControlPlaneVsphereConfig
 * @version v1
 */
class VmwareControlPlaneVsphereConfig {
    /**
     * Constructs a new <code>VmwareControlPlaneVsphereConfig</code>.
     * Specifies control plane node config.
     * @alias module:model/VmwareControlPlaneVsphereConfig
     */
    constructor() { 
        
        VmwareControlPlaneVsphereConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmwareControlPlaneVsphereConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmwareControlPlaneVsphereConfig} obj Optional instance to populate.
     * @return {module:model/VmwareControlPlaneVsphereConfig} The populated <code>VmwareControlPlaneVsphereConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmwareControlPlaneVsphereConfig();

            if (data.hasOwnProperty('datastore')) {
                obj['datastore'] = ApiClient.convertToType(data['datastore'], 'String');
            }
            if (data.hasOwnProperty('storagePolicyName')) {
                obj['storagePolicyName'] = ApiClient.convertToType(data['storagePolicyName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmwareControlPlaneVsphereConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmwareControlPlaneVsphereConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['datastore'] && !(typeof data['datastore'] === 'string' || data['datastore'] instanceof String)) {
            throw new Error("Expected the field `datastore` to be a primitive type in the JSON string but got " + data['datastore']);
        }
        // ensure the json data is a string
        if (data['storagePolicyName'] && !(typeof data['storagePolicyName'] === 'string' || data['storagePolicyName'] instanceof String)) {
            throw new Error("Expected the field `storagePolicyName` to be a primitive type in the JSON string but got " + data['storagePolicyName']);
        }

        return true;
    }


}



/**
 * The Vsphere datastore used by the control plane Node.
 * @member {String} datastore
 */
VmwareControlPlaneVsphereConfig.prototype['datastore'] = undefined;

/**
 * The Vsphere storage policy used by the control plane Node.
 * @member {String} storagePolicyName
 */
VmwareControlPlaneVsphereConfig.prototype['storagePolicyName'] = undefined;






export default VmwareControlPlaneVsphereConfig;

