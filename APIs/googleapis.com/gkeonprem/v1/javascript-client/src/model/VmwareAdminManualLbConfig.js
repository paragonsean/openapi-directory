/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VmwareAdminManualLbConfig model module.
 * @module model/VmwareAdminManualLbConfig
 * @version v1
 */
class VmwareAdminManualLbConfig {
    /**
     * Constructs a new <code>VmwareAdminManualLbConfig</code>.
     * @alias module:model/VmwareAdminManualLbConfig
     */
    constructor() { 
        
        VmwareAdminManualLbConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmwareAdminManualLbConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmwareAdminManualLbConfig} obj Optional instance to populate.
     * @return {module:model/VmwareAdminManualLbConfig} The populated <code>VmwareAdminManualLbConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmwareAdminManualLbConfig();

            if (data.hasOwnProperty('addonsNodePort')) {
                obj['addonsNodePort'] = ApiClient.convertToType(data['addonsNodePort'], 'Number');
            }
            if (data.hasOwnProperty('controlPlaneNodePort')) {
                obj['controlPlaneNodePort'] = ApiClient.convertToType(data['controlPlaneNodePort'], 'Number');
            }
            if (data.hasOwnProperty('ingressHttpNodePort')) {
                obj['ingressHttpNodePort'] = ApiClient.convertToType(data['ingressHttpNodePort'], 'Number');
            }
            if (data.hasOwnProperty('ingressHttpsNodePort')) {
                obj['ingressHttpsNodePort'] = ApiClient.convertToType(data['ingressHttpsNodePort'], 'Number');
            }
            if (data.hasOwnProperty('konnectivityServerNodePort')) {
                obj['konnectivityServerNodePort'] = ApiClient.convertToType(data['konnectivityServerNodePort'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmwareAdminManualLbConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmwareAdminManualLbConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * NodePort for add-ons server in the admin cluster.
 * @member {Number} addonsNodePort
 */
VmwareAdminManualLbConfig.prototype['addonsNodePort'] = undefined;

/**
 * NodePort for control plane service. The Kubernetes API server in the admin cluster is implemented as a Service of type NodePort (ex. 30968).
 * @member {Number} controlPlaneNodePort
 */
VmwareAdminManualLbConfig.prototype['controlPlaneNodePort'] = undefined;

/**
 * NodePort for ingress service's http. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 32527).
 * @member {Number} ingressHttpNodePort
 */
VmwareAdminManualLbConfig.prototype['ingressHttpNodePort'] = undefined;

/**
 * NodePort for ingress service's https. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 30139).
 * @member {Number} ingressHttpsNodePort
 */
VmwareAdminManualLbConfig.prototype['ingressHttpsNodePort'] = undefined;

/**
 * NodePort for konnectivity server service running as a sidecar in each kube-apiserver pod (ex. 30564).
 * @member {Number} konnectivityServerNodePort
 */
VmwareAdminManualLbConfig.prototype['konnectivityServerNodePort'] = undefined;






export default VmwareAdminManualLbConfig;

