/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BareMetalAdminClusterOperationsConfig from './BareMetalAdminClusterOperationsConfig';
import BareMetalAdminControlPlaneConfig from './BareMetalAdminControlPlaneConfig';
import BareMetalAdminLoadBalancerConfig from './BareMetalAdminLoadBalancerConfig';
import BareMetalAdminMaintenanceConfig from './BareMetalAdminMaintenanceConfig';
import BareMetalAdminMaintenanceStatus from './BareMetalAdminMaintenanceStatus';
import BareMetalAdminNetworkConfig from './BareMetalAdminNetworkConfig';
import BareMetalAdminNodeAccessConfig from './BareMetalAdminNodeAccessConfig';
import BareMetalAdminOsEnvironmentConfig from './BareMetalAdminOsEnvironmentConfig';
import BareMetalAdminProxyConfig from './BareMetalAdminProxyConfig';
import BareMetalAdminSecurityConfig from './BareMetalAdminSecurityConfig';
import BareMetalAdminStorageConfig from './BareMetalAdminStorageConfig';
import BareMetalAdminWorkloadNodeConfig from './BareMetalAdminWorkloadNodeConfig';
import BinaryAuthorization from './BinaryAuthorization';
import Fleet from './Fleet';
import ResourceStatus from './ResourceStatus';
import ValidationCheck from './ValidationCheck';

/**
 * The BareMetalAdminCluster model module.
 * @module model/BareMetalAdminCluster
 * @version v1
 */
class BareMetalAdminCluster {
    /**
     * Constructs a new <code>BareMetalAdminCluster</code>.
     * Resource that represents a bare metal admin cluster.
     * @alias module:model/BareMetalAdminCluster
     */
    constructor() { 
        
        BareMetalAdminCluster.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BareMetalAdminCluster</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BareMetalAdminCluster} obj Optional instance to populate.
     * @return {module:model/BareMetalAdminCluster} The populated <code>BareMetalAdminCluster</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BareMetalAdminCluster();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('bareMetalVersion')) {
                obj['bareMetalVersion'] = ApiClient.convertToType(data['bareMetalVersion'], 'String');
            }
            if (data.hasOwnProperty('binaryAuthorization')) {
                obj['binaryAuthorization'] = BinaryAuthorization.constructFromObject(data['binaryAuthorization']);
            }
            if (data.hasOwnProperty('clusterOperations')) {
                obj['clusterOperations'] = BareMetalAdminClusterOperationsConfig.constructFromObject(data['clusterOperations']);
            }
            if (data.hasOwnProperty('controlPlane')) {
                obj['controlPlane'] = BareMetalAdminControlPlaneConfig.constructFromObject(data['controlPlane']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('deleteTime')) {
                obj['deleteTime'] = ApiClient.convertToType(data['deleteTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('fleet')) {
                obj['fleet'] = Fleet.constructFromObject(data['fleet']);
            }
            if (data.hasOwnProperty('loadBalancer')) {
                obj['loadBalancer'] = BareMetalAdminLoadBalancerConfig.constructFromObject(data['loadBalancer']);
            }
            if (data.hasOwnProperty('localName')) {
                obj['localName'] = ApiClient.convertToType(data['localName'], 'String');
            }
            if (data.hasOwnProperty('maintenanceConfig')) {
                obj['maintenanceConfig'] = BareMetalAdminMaintenanceConfig.constructFromObject(data['maintenanceConfig']);
            }
            if (data.hasOwnProperty('maintenanceStatus')) {
                obj['maintenanceStatus'] = BareMetalAdminMaintenanceStatus.constructFromObject(data['maintenanceStatus']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('networkConfig')) {
                obj['networkConfig'] = BareMetalAdminNetworkConfig.constructFromObject(data['networkConfig']);
            }
            if (data.hasOwnProperty('nodeAccessConfig')) {
                obj['nodeAccessConfig'] = BareMetalAdminNodeAccessConfig.constructFromObject(data['nodeAccessConfig']);
            }
            if (data.hasOwnProperty('nodeConfig')) {
                obj['nodeConfig'] = BareMetalAdminWorkloadNodeConfig.constructFromObject(data['nodeConfig']);
            }
            if (data.hasOwnProperty('osEnvironmentConfig')) {
                obj['osEnvironmentConfig'] = BareMetalAdminOsEnvironmentConfig.constructFromObject(data['osEnvironmentConfig']);
            }
            if (data.hasOwnProperty('proxy')) {
                obj['proxy'] = BareMetalAdminProxyConfig.constructFromObject(data['proxy']);
            }
            if (data.hasOwnProperty('reconciling')) {
                obj['reconciling'] = ApiClient.convertToType(data['reconciling'], 'Boolean');
            }
            if (data.hasOwnProperty('securityConfig')) {
                obj['securityConfig'] = BareMetalAdminSecurityConfig.constructFromObject(data['securityConfig']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ResourceStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('storage')) {
                obj['storage'] = BareMetalAdminStorageConfig.constructFromObject(data['storage']);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('validationCheck')) {
                obj['validationCheck'] = ValidationCheck.constructFromObject(data['validationCheck']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BareMetalAdminCluster</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BareMetalAdminCluster</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bareMetalVersion'] && !(typeof data['bareMetalVersion'] === 'string' || data['bareMetalVersion'] instanceof String)) {
            throw new Error("Expected the field `bareMetalVersion` to be a primitive type in the JSON string but got " + data['bareMetalVersion']);
        }
        // validate the optional field `binaryAuthorization`
        if (data['binaryAuthorization']) { // data not null
          BinaryAuthorization.validateJSON(data['binaryAuthorization']);
        }
        // validate the optional field `clusterOperations`
        if (data['clusterOperations']) { // data not null
          BareMetalAdminClusterOperationsConfig.validateJSON(data['clusterOperations']);
        }
        // validate the optional field `controlPlane`
        if (data['controlPlane']) { // data not null
          BareMetalAdminControlPlaneConfig.validateJSON(data['controlPlane']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['deleteTime'] && !(typeof data['deleteTime'] === 'string' || data['deleteTime'] instanceof String)) {
            throw new Error("Expected the field `deleteTime` to be a primitive type in the JSON string but got " + data['deleteTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `fleet`
        if (data['fleet']) { // data not null
          Fleet.validateJSON(data['fleet']);
        }
        // validate the optional field `loadBalancer`
        if (data['loadBalancer']) { // data not null
          BareMetalAdminLoadBalancerConfig.validateJSON(data['loadBalancer']);
        }
        // ensure the json data is a string
        if (data['localName'] && !(typeof data['localName'] === 'string' || data['localName'] instanceof String)) {
            throw new Error("Expected the field `localName` to be a primitive type in the JSON string but got " + data['localName']);
        }
        // validate the optional field `maintenanceConfig`
        if (data['maintenanceConfig']) { // data not null
          BareMetalAdminMaintenanceConfig.validateJSON(data['maintenanceConfig']);
        }
        // validate the optional field `maintenanceStatus`
        if (data['maintenanceStatus']) { // data not null
          BareMetalAdminMaintenanceStatus.validateJSON(data['maintenanceStatus']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `networkConfig`
        if (data['networkConfig']) { // data not null
          BareMetalAdminNetworkConfig.validateJSON(data['networkConfig']);
        }
        // validate the optional field `nodeAccessConfig`
        if (data['nodeAccessConfig']) { // data not null
          BareMetalAdminNodeAccessConfig.validateJSON(data['nodeAccessConfig']);
        }
        // validate the optional field `nodeConfig`
        if (data['nodeConfig']) { // data not null
          BareMetalAdminWorkloadNodeConfig.validateJSON(data['nodeConfig']);
        }
        // validate the optional field `osEnvironmentConfig`
        if (data['osEnvironmentConfig']) { // data not null
          BareMetalAdminOsEnvironmentConfig.validateJSON(data['osEnvironmentConfig']);
        }
        // validate the optional field `proxy`
        if (data['proxy']) { // data not null
          BareMetalAdminProxyConfig.validateJSON(data['proxy']);
        }
        // validate the optional field `securityConfig`
        if (data['securityConfig']) { // data not null
          BareMetalAdminSecurityConfig.validateJSON(data['securityConfig']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ResourceStatus.validateJSON(data['status']);
        }
        // validate the optional field `storage`
        if (data['storage']) { // data not null
          BareMetalAdminStorageConfig.validateJSON(data['storage']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `validationCheck`
        if (data['validationCheck']) { // data not null
          ValidationCheck.validateJSON(data['validationCheck']);
        }

        return true;
    }


}



/**
 * Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
 * @member {Object.<String, String>} annotations
 */
BareMetalAdminCluster.prototype['annotations'] = undefined;

/**
 * The Anthos clusters on bare metal version for the bare metal admin cluster.
 * @member {String} bareMetalVersion
 */
BareMetalAdminCluster.prototype['bareMetalVersion'] = undefined;

/**
 * @member {module:model/BinaryAuthorization} binaryAuthorization
 */
BareMetalAdminCluster.prototype['binaryAuthorization'] = undefined;

/**
 * @member {module:model/BareMetalAdminClusterOperationsConfig} clusterOperations
 */
BareMetalAdminCluster.prototype['clusterOperations'] = undefined;

/**
 * @member {module:model/BareMetalAdminControlPlaneConfig} controlPlane
 */
BareMetalAdminCluster.prototype['controlPlane'] = undefined;

/**
 * Output only. The time at which this bare metal admin cluster was created.
 * @member {String} createTime
 */
BareMetalAdminCluster.prototype['createTime'] = undefined;

/**
 * Output only. The time at which this bare metal admin cluster was deleted. If the resource is not deleted, this must be empty
 * @member {String} deleteTime
 */
BareMetalAdminCluster.prototype['deleteTime'] = undefined;

/**
 * A human readable description of this bare metal admin cluster.
 * @member {String} description
 */
BareMetalAdminCluster.prototype['description'] = undefined;

/**
 * Output only. The IP address name of bare metal admin cluster's API server.
 * @member {String} endpoint
 */
BareMetalAdminCluster.prototype['endpoint'] = undefined;

/**
 * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
 * @member {String} etag
 */
BareMetalAdminCluster.prototype['etag'] = undefined;

/**
 * @member {module:model/Fleet} fleet
 */
BareMetalAdminCluster.prototype['fleet'] = undefined;

/**
 * @member {module:model/BareMetalAdminLoadBalancerConfig} loadBalancer
 */
BareMetalAdminCluster.prototype['loadBalancer'] = undefined;

/**
 * Output only. The object name of the bare metal cluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.
 * @member {String} localName
 */
BareMetalAdminCluster.prototype['localName'] = undefined;

/**
 * @member {module:model/BareMetalAdminMaintenanceConfig} maintenanceConfig
 */
BareMetalAdminCluster.prototype['maintenanceConfig'] = undefined;

/**
 * @member {module:model/BareMetalAdminMaintenanceStatus} maintenanceStatus
 */
BareMetalAdminCluster.prototype['maintenanceStatus'] = undefined;

/**
 * Immutable. The bare metal admin cluster resource name.
 * @member {String} name
 */
BareMetalAdminCluster.prototype['name'] = undefined;

/**
 * @member {module:model/BareMetalAdminNetworkConfig} networkConfig
 */
BareMetalAdminCluster.prototype['networkConfig'] = undefined;

/**
 * @member {module:model/BareMetalAdminNodeAccessConfig} nodeAccessConfig
 */
BareMetalAdminCluster.prototype['nodeAccessConfig'] = undefined;

/**
 * @member {module:model/BareMetalAdminWorkloadNodeConfig} nodeConfig
 */
BareMetalAdminCluster.prototype['nodeConfig'] = undefined;

/**
 * @member {module:model/BareMetalAdminOsEnvironmentConfig} osEnvironmentConfig
 */
BareMetalAdminCluster.prototype['osEnvironmentConfig'] = undefined;

/**
 * @member {module:model/BareMetalAdminProxyConfig} proxy
 */
BareMetalAdminCluster.prototype['proxy'] = undefined;

/**
 * Output only. If set, there are currently changes in flight to the bare metal Admin Cluster.
 * @member {Boolean} reconciling
 */
BareMetalAdminCluster.prototype['reconciling'] = undefined;

/**
 * @member {module:model/BareMetalAdminSecurityConfig} securityConfig
 */
BareMetalAdminCluster.prototype['securityConfig'] = undefined;

/**
 * Output only. The current state of the bare metal admin cluster.
 * @member {module:model/BareMetalAdminCluster.StateEnum} state
 */
BareMetalAdminCluster.prototype['state'] = undefined;

/**
 * @member {module:model/ResourceStatus} status
 */
BareMetalAdminCluster.prototype['status'] = undefined;

/**
 * @member {module:model/BareMetalAdminStorageConfig} storage
 */
BareMetalAdminCluster.prototype['storage'] = undefined;

/**
 * Output only. The unique identifier of the bare metal admin cluster.
 * @member {String} uid
 */
BareMetalAdminCluster.prototype['uid'] = undefined;

/**
 * Output only. The time at which this bare metal admin cluster was last updated.
 * @member {String} updateTime
 */
BareMetalAdminCluster.prototype['updateTime'] = undefined;

/**
 * @member {module:model/ValidationCheck} validationCheck
 */
BareMetalAdminCluster.prototype['validationCheck'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
BareMetalAdminCluster['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "PROVISIONING"
     * @const
     */
    "PROVISIONING": "PROVISIONING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "RECONCILING"
     * @const
     */
    "RECONCILING": "RECONCILING",

    /**
     * value: "STOPPING"
     * @const
     */
    "STOPPING": "STOPPING",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "DEGRADED"
     * @const
     */
    "DEGRADED": "DEGRADED"
};



export default BareMetalAdminCluster;

