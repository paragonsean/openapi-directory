/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BareMetalAdminIslandModeCidrConfig model module.
 * @module model/BareMetalAdminIslandModeCidrConfig
 * @version v1
 */
class BareMetalAdminIslandModeCidrConfig {
    /**
     * Constructs a new <code>BareMetalAdminIslandModeCidrConfig</code>.
     * BareMetalAdminIslandModeCidrConfig specifies the cluster CIDR configuration while running in island mode.
     * @alias module:model/BareMetalAdminIslandModeCidrConfig
     */
    constructor() { 
        
        BareMetalAdminIslandModeCidrConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BareMetalAdminIslandModeCidrConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BareMetalAdminIslandModeCidrConfig} obj Optional instance to populate.
     * @return {module:model/BareMetalAdminIslandModeCidrConfig} The populated <code>BareMetalAdminIslandModeCidrConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BareMetalAdminIslandModeCidrConfig();

            if (data.hasOwnProperty('podAddressCidrBlocks')) {
                obj['podAddressCidrBlocks'] = ApiClient.convertToType(data['podAddressCidrBlocks'], ['String']);
            }
            if (data.hasOwnProperty('serviceAddressCidrBlocks')) {
                obj['serviceAddressCidrBlocks'] = ApiClient.convertToType(data['serviceAddressCidrBlocks'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BareMetalAdminIslandModeCidrConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BareMetalAdminIslandModeCidrConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['podAddressCidrBlocks'])) {
            throw new Error("Expected the field `podAddressCidrBlocks` to be an array in the JSON data but got " + data['podAddressCidrBlocks']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['serviceAddressCidrBlocks'])) {
            throw new Error("Expected the field `serviceAddressCidrBlocks` to be an array in the JSON data but got " + data['serviceAddressCidrBlocks']);
        }

        return true;
    }


}



/**
 * Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
 * @member {Array.<String>} podAddressCidrBlocks
 */
BareMetalAdminIslandModeCidrConfig.prototype['podAddressCidrBlocks'] = undefined;

/**
 * Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.
 * @member {Array.<String>} serviceAddressCidrBlocks
 */
BareMetalAdminIslandModeCidrConfig.prototype['serviceAddressCidrBlocks'] = undefined;






export default BareMetalAdminIslandModeCidrConfig;

