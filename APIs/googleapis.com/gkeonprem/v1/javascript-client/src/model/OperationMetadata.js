/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperationProgress from './OperationProgress';

/**
 * The OperationMetadata model module.
 * @module model/OperationMetadata
 * @version v1
 */
class OperationMetadata {
    /**
     * Constructs a new <code>OperationMetadata</code>.
     * Represents the metadata of the long-running operation.
     * @alias module:model/OperationMetadata
     */
    constructor() { 
        
        OperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationMetadata} obj Optional instance to populate.
     * @return {module:model/OperationMetadata} The populated <code>OperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationMetadata();

            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('controlPlaneDisconnected')) {
                obj['controlPlaneDisconnected'] = ApiClient.convertToType(data['controlPlaneDisconnected'], 'Boolean');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = OperationProgress.constructFromObject(data['progress']);
            }
            if (data.hasOwnProperty('requestedCancellation')) {
                obj['requestedCancellation'] = ApiClient.convertToType(data['requestedCancellation'], 'Boolean');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('verb')) {
                obj['verb'] = ApiClient.convertToType(data['verb'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // validate the optional field `progress`
        if (data['progress']) { // data not null
          OperationProgress.validateJSON(data['progress']);
        }
        // ensure the json data is a string
        if (data['statusMessage'] && !(typeof data['statusMessage'] === 'string' || data['statusMessage'] instanceof String)) {
            throw new Error("Expected the field `statusMessage` to be a primitive type in the JSON string but got " + data['statusMessage']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['verb'] && !(typeof data['verb'] === 'string' || data['verb'] instanceof String)) {
            throw new Error("Expected the field `verb` to be a primitive type in the JSON string but got " + data['verb']);
        }

        return true;
    }


}



/**
 * Output only. API version used to start the operation.
 * @member {String} apiVersion
 */
OperationMetadata.prototype['apiVersion'] = undefined;

/**
 * Output only. Denotes if the local managing cluster's control plane is currently disconnected. This is expected to occur temporarily during self-managed cluster upgrades.
 * @member {Boolean} controlPlaneDisconnected
 */
OperationMetadata.prototype['controlPlaneDisconnected'] = undefined;

/**
 * Output only. The time the operation was created.
 * @member {String} createTime
 */
OperationMetadata.prototype['createTime'] = undefined;

/**
 * Output only. The time the operation finished running.
 * @member {String} endTime
 */
OperationMetadata.prototype['endTime'] = undefined;

/**
 * @member {module:model/OperationProgress} progress
 */
OperationMetadata.prototype['progress'] = undefined;

/**
 * Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error] value with a [google.rpc.Status.code] of 1, corresponding to `Code.CANCELLED`.
 * @member {Boolean} requestedCancellation
 */
OperationMetadata.prototype['requestedCancellation'] = undefined;

/**
 * Output only. Human-readable status of the operation, if any.
 * @member {String} statusMessage
 */
OperationMetadata.prototype['statusMessage'] = undefined;

/**
 * Output only. Server-defined resource path for the target of the operation.
 * @member {String} target
 */
OperationMetadata.prototype['target'] = undefined;

/**
 * Output only. Type of operation being executed.
 * @member {module:model/OperationMetadata.TypeEnum} type
 */
OperationMetadata.prototype['type'] = undefined;

/**
 * Output only. Name of the verb executed by the operation.
 * @member {String} verb
 */
OperationMetadata.prototype['verb'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OperationMetadata['TypeEnum'] = {

    /**
     * value: "OPERATION_TYPE_UNSPECIFIED"
     * @const
     */
    "OPERATION_TYPE_UNSPECIFIED": "OPERATION_TYPE_UNSPECIFIED",

    /**
     * value: "CREATE"
     * @const
     */
    "CREATE": "CREATE",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE",

    /**
     * value: "UPDATE"
     * @const
     */
    "UPDATE": "UPDATE",

    /**
     * value: "UPGRADE"
     * @const
     */
    "UPGRADE": "UPGRADE",

    /**
     * value: "PLATFORM_UPGRADE"
     * @const
     */
    "PLATFORM_UPGRADE": "PLATFORM_UPGRADE"
};



export default OperationMetadata;

