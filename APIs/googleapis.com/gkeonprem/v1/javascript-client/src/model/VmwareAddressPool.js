/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VmwareAddressPool model module.
 * @module model/VmwareAddressPool
 * @version v1
 */
class VmwareAddressPool {
    /**
     * Constructs a new <code>VmwareAddressPool</code>.
     * Represents an IP pool used by the load balancer.
     * @alias module:model/VmwareAddressPool
     */
    constructor() { 
        
        VmwareAddressPool.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmwareAddressPool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmwareAddressPool} obj Optional instance to populate.
     * @return {module:model/VmwareAddressPool} The populated <code>VmwareAddressPool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmwareAddressPool();

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], ['String']);
            }
            if (data.hasOwnProperty('avoidBuggyIps')) {
                obj['avoidBuggyIps'] = ApiClient.convertToType(data['avoidBuggyIps'], 'Boolean');
            }
            if (data.hasOwnProperty('manualAssign')) {
                obj['manualAssign'] = ApiClient.convertToType(data['manualAssign'], 'Boolean');
            }
            if (data.hasOwnProperty('pool')) {
                obj['pool'] = ApiClient.convertToType(data['pool'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmwareAddressPool</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmwareAddressPool</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['addresses'])) {
            throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
        }
        // ensure the json data is a string
        if (data['pool'] && !(typeof data['pool'] === 'string' || data['pool'] instanceof String)) {
            throw new Error("Expected the field `pool` to be a primitive type in the JSON string but got " + data['pool']);
        }

        return true;
    }


}



/**
 * Required. The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
 * @member {Array.<String>} addresses
 */
VmwareAddressPool.prototype['addresses'] = undefined;

/**
 * If true, avoid using IPs ending in .0 or .255. This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
 * @member {Boolean} avoidBuggyIps
 */
VmwareAddressPool.prototype['avoidBuggyIps'] = undefined;

/**
 * If true, prevent IP addresses from being automatically assigned.
 * @member {Boolean} manualAssign
 */
VmwareAddressPool.prototype['manualAssign'] = undefined;

/**
 * Required. The name of the address pool.
 * @member {String} pool
 */
VmwareAddressPool.prototype['pool'] = undefined;






export default VmwareAddressPool;

