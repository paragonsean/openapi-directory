/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BareMetalBgpPeerConfig from './BareMetalBgpPeerConfig';
import BareMetalLoadBalancerAddressPool from './BareMetalLoadBalancerAddressPool';
import BareMetalLoadBalancerNodePoolConfig from './BareMetalLoadBalancerNodePoolConfig';

/**
 * The BareMetalBgpLbConfig model module.
 * @module model/BareMetalBgpLbConfig
 * @version v1
 */
class BareMetalBgpLbConfig {
    /**
     * Constructs a new <code>BareMetalBgpLbConfig</code>.
     * BareMetalBgpLbConfig represents configuration parameters for a Border Gateway Protocol (BGP) load balancer.
     * @alias module:model/BareMetalBgpLbConfig
     */
    constructor() { 
        
        BareMetalBgpLbConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BareMetalBgpLbConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BareMetalBgpLbConfig} obj Optional instance to populate.
     * @return {module:model/BareMetalBgpLbConfig} The populated <code>BareMetalBgpLbConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BareMetalBgpLbConfig();

            if (data.hasOwnProperty('addressPools')) {
                obj['addressPools'] = ApiClient.convertToType(data['addressPools'], [BareMetalLoadBalancerAddressPool]);
            }
            if (data.hasOwnProperty('asn')) {
                obj['asn'] = ApiClient.convertToType(data['asn'], 'String');
            }
            if (data.hasOwnProperty('bgpPeerConfigs')) {
                obj['bgpPeerConfigs'] = ApiClient.convertToType(data['bgpPeerConfigs'], [BareMetalBgpPeerConfig]);
            }
            if (data.hasOwnProperty('loadBalancerNodePoolConfig')) {
                obj['loadBalancerNodePoolConfig'] = BareMetalLoadBalancerNodePoolConfig.constructFromObject(data['loadBalancerNodePoolConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BareMetalBgpLbConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BareMetalBgpLbConfig</code>.
     */
    static validateJSON(data) {
        if (data['addressPools']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addressPools'])) {
                throw new Error("Expected the field `addressPools` to be an array in the JSON data but got " + data['addressPools']);
            }
            // validate the optional field `addressPools` (array)
            for (const item of data['addressPools']) {
                BareMetalLoadBalancerAddressPool.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['asn'] && !(typeof data['asn'] === 'string' || data['asn'] instanceof String)) {
            throw new Error("Expected the field `asn` to be a primitive type in the JSON string but got " + data['asn']);
        }
        if (data['bgpPeerConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bgpPeerConfigs'])) {
                throw new Error("Expected the field `bgpPeerConfigs` to be an array in the JSON data but got " + data['bgpPeerConfigs']);
            }
            // validate the optional field `bgpPeerConfigs` (array)
            for (const item of data['bgpPeerConfigs']) {
                BareMetalBgpPeerConfig.validateJSON(item);
            };
        }
        // validate the optional field `loadBalancerNodePoolConfig`
        if (data['loadBalancerNodePoolConfig']) { // data not null
          BareMetalLoadBalancerNodePoolConfig.validateJSON(data['loadBalancerNodePoolConfig']);
        }

        return true;
    }


}



/**
 * Required. AddressPools is a list of non-overlapping IP pools used by load balancer typed services. All addresses must be routable to load balancer nodes. IngressVIP must be included in the pools.
 * @member {Array.<module:model/BareMetalLoadBalancerAddressPool>} addressPools
 */
BareMetalBgpLbConfig.prototype['addressPools'] = undefined;

/**
 * Required. BGP autonomous system number (ASN) of the cluster. This field can be updated after cluster creation.
 * @member {String} asn
 */
BareMetalBgpLbConfig.prototype['asn'] = undefined;

/**
 * Required. The list of BGP peers that the cluster will connect to. At least one peer must be configured for each control plane node. Control plane nodes will connect to these peers to advertise the control plane VIP. The Services load balancer also uses these peers by default. This field can be updated after cluster creation.
 * @member {Array.<module:model/BareMetalBgpPeerConfig>} bgpPeerConfigs
 */
BareMetalBgpLbConfig.prototype['bgpPeerConfigs'] = undefined;

/**
 * @member {module:model/BareMetalLoadBalancerNodePoolConfig} loadBalancerNodePoolConfig
 */
BareMetalBgpLbConfig.prototype['loadBalancerNodePoolConfig'] = undefined;






export default BareMetalBgpLbConfig;

