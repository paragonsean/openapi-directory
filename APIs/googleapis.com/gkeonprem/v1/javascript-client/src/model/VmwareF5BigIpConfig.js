/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VmwareF5BigIpConfig model module.
 * @module model/VmwareF5BigIpConfig
 * @version v1
 */
class VmwareF5BigIpConfig {
    /**
     * Constructs a new <code>VmwareF5BigIpConfig</code>.
     * Represents configuration parameters for an F5 BIG-IP load balancer.
     * @alias module:model/VmwareF5BigIpConfig
     */
    constructor() { 
        
        VmwareF5BigIpConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VmwareF5BigIpConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VmwareF5BigIpConfig} obj Optional instance to populate.
     * @return {module:model/VmwareF5BigIpConfig} The populated <code>VmwareF5BigIpConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VmwareF5BigIpConfig();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
            }
            if (data.hasOwnProperty('snatPool')) {
                obj['snatPool'] = ApiClient.convertToType(data['snatPool'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VmwareF5BigIpConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VmwareF5BigIpConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['partition'] && !(typeof data['partition'] === 'string' || data['partition'] instanceof String)) {
            throw new Error("Expected the field `partition` to be a primitive type in the JSON string but got " + data['partition']);
        }
        // ensure the json data is a string
        if (data['snatPool'] && !(typeof data['snatPool'] === 'string' || data['snatPool'] instanceof String)) {
            throw new Error("Expected the field `snatPool` to be a primitive type in the JSON string but got " + data['snatPool']);
        }

        return true;
    }


}



/**
 * The load balancer's IP address.
 * @member {String} address
 */
VmwareF5BigIpConfig.prototype['address'] = undefined;

/**
 * The preexisting partition to be used by the load balancer. This partition is usually created for the admin cluster for example: 'my-f5-admin-partition'.
 * @member {String} partition
 */
VmwareF5BigIpConfig.prototype['partition'] = undefined;

/**
 * The pool name. Only necessary, if using SNAT.
 * @member {String} snatPool
 */
VmwareF5BigIpConfig.prototype['snatPool'] = undefined;






export default VmwareF5BigIpConfig;

