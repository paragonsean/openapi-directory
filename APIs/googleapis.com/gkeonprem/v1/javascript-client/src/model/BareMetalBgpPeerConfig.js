/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BareMetalBgpPeerConfig model module.
 * @module model/BareMetalBgpPeerConfig
 * @version v1
 */
class BareMetalBgpPeerConfig {
    /**
     * Constructs a new <code>BareMetalBgpPeerConfig</code>.
     * BareMetalBgpPeerConfig represents configuration parameters for a Border Gateway Protocol (BGP) peer.
     * @alias module:model/BareMetalBgpPeerConfig
     */
    constructor() { 
        
        BareMetalBgpPeerConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BareMetalBgpPeerConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BareMetalBgpPeerConfig} obj Optional instance to populate.
     * @return {module:model/BareMetalBgpPeerConfig} The populated <code>BareMetalBgpPeerConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BareMetalBgpPeerConfig();

            if (data.hasOwnProperty('asn')) {
                obj['asn'] = ApiClient.convertToType(data['asn'], 'String');
            }
            if (data.hasOwnProperty('controlPlaneNodes')) {
                obj['controlPlaneNodes'] = ApiClient.convertToType(data['controlPlaneNodes'], ['String']);
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BareMetalBgpPeerConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BareMetalBgpPeerConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['asn'] && !(typeof data['asn'] === 'string' || data['asn'] instanceof String)) {
            throw new Error("Expected the field `asn` to be a primitive type in the JSON string but got " + data['asn']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['controlPlaneNodes'])) {
            throw new Error("Expected the field `controlPlaneNodes` to be an array in the JSON data but got " + data['controlPlaneNodes']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }

        return true;
    }


}



/**
 * Required. BGP autonomous system number (ASN) for the network that contains the external peer device.
 * @member {String} asn
 */
BareMetalBgpPeerConfig.prototype['asn'] = undefined;

/**
 * The IP address of the control plane node that connects to the external peer. If you don't specify any control plane nodes, all control plane nodes can connect to the external peer. If you specify one or more IP addresses, only the nodes specified participate in peering sessions.
 * @member {Array.<String>} controlPlaneNodes
 */
BareMetalBgpPeerConfig.prototype['controlPlaneNodes'] = undefined;

/**
 * Required. The IP address of the external peer device.
 * @member {String} ipAddress
 */
BareMetalBgpPeerConfig.prototype['ipAddress'] = undefined;






export default BareMetalBgpPeerConfig;

