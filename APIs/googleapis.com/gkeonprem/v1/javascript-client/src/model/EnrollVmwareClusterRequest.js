/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnrollVmwareClusterRequest model module.
 * @module model/EnrollVmwareClusterRequest
 * @version v1
 */
class EnrollVmwareClusterRequest {
    /**
     * Constructs a new <code>EnrollVmwareClusterRequest</code>.
     * Message for enrolling an existing VMware cluster to the Anthos On-Prem API.
     * @alias module:model/EnrollVmwareClusterRequest
     */
    constructor() { 
        
        EnrollVmwareClusterRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnrollVmwareClusterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnrollVmwareClusterRequest} obj Optional instance to populate.
     * @return {module:model/EnrollVmwareClusterRequest} The populated <code>EnrollVmwareClusterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnrollVmwareClusterRequest();

            if (data.hasOwnProperty('adminClusterMembership')) {
                obj['adminClusterMembership'] = ApiClient.convertToType(data['adminClusterMembership'], 'String');
            }
            if (data.hasOwnProperty('localName')) {
                obj['localName'] = ApiClient.convertToType(data['localName'], 'String');
            }
            if (data.hasOwnProperty('validateOnly')) {
                obj['validateOnly'] = ApiClient.convertToType(data['validateOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('vmwareClusterId')) {
                obj['vmwareClusterId'] = ApiClient.convertToType(data['vmwareClusterId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnrollVmwareClusterRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnrollVmwareClusterRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adminClusterMembership'] && !(typeof data['adminClusterMembership'] === 'string' || data['adminClusterMembership'] instanceof String)) {
            throw new Error("Expected the field `adminClusterMembership` to be a primitive type in the JSON string but got " + data['adminClusterMembership']);
        }
        // ensure the json data is a string
        if (data['localName'] && !(typeof data['localName'] === 'string' || data['localName'] instanceof String)) {
            throw new Error("Expected the field `localName` to be a primitive type in the JSON string but got " + data['localName']);
        }
        // ensure the json data is a string
        if (data['vmwareClusterId'] && !(typeof data['vmwareClusterId'] === 'string' || data['vmwareClusterId'] instanceof String)) {
            throw new Error("Expected the field `vmwareClusterId` to be a primitive type in the JSON string but got " + data['vmwareClusterId']);
        }

        return true;
    }


}



/**
 * Required. The admin cluster this VMware user cluster belongs to. This is the full resource name of the admin cluster's fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.
 * @member {String} adminClusterMembership
 */
EnrollVmwareClusterRequest.prototype['adminClusterMembership'] = undefined;

/**
 * Optional. The object name of the VMware OnPremUserCluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the vmware_cluster_id. Otherwise, it must match the object name of the VMware OnPremUserCluster custom resource. It is not modifiable outside / beyond the enrollment operation.
 * @member {String} localName
 */
EnrollVmwareClusterRequest.prototype['localName'] = undefined;

/**
 * Validate the request without actually doing any updates.
 * @member {Boolean} validateOnly
 */
EnrollVmwareClusterRequest.prototype['validateOnly'] = undefined;

/**
 * User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all GKE on-prem clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.
 * @member {String} vmwareClusterId
 */
EnrollVmwareClusterRequest.prototype['vmwareClusterId'] = undefined;






export default EnrollVmwareClusterRequest;

