/*
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Message for enrolling an existing bare metal cluster to the Anthos On-Prem API.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:14.708243-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnrollBareMetalClusterRequest {
  public static final String SERIALIZED_NAME_ADMIN_CLUSTER_MEMBERSHIP = "adminClusterMembership";
  @SerializedName(SERIALIZED_NAME_ADMIN_CLUSTER_MEMBERSHIP)
  private String adminClusterMembership;

  public static final String SERIALIZED_NAME_BARE_METAL_CLUSTER_ID = "bareMetalClusterId";
  @SerializedName(SERIALIZED_NAME_BARE_METAL_CLUSTER_ID)
  private String bareMetalClusterId;

  public static final String SERIALIZED_NAME_LOCAL_NAME = "localName";
  @SerializedName(SERIALIZED_NAME_LOCAL_NAME)
  private String localName;

  public EnrollBareMetalClusterRequest() {
  }

  public EnrollBareMetalClusterRequest adminClusterMembership(String adminClusterMembership) {
    this.adminClusterMembership = adminClusterMembership;
    return this;
  }

  /**
   * Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster&#39;s fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.
   * @return adminClusterMembership
   */
  @javax.annotation.Nullable
  public String getAdminClusterMembership() {
    return adminClusterMembership;
  }

  public void setAdminClusterMembership(String adminClusterMembership) {
    this.adminClusterMembership = adminClusterMembership;
  }


  public EnrollBareMetalClusterRequest bareMetalClusterId(String bareMetalClusterId) {
    this.bareMetalClusterId = bareMetalClusterId;
    return this;
  }

  /**
   * User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all bare metal clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.
   * @return bareMetalClusterId
   */
  @javax.annotation.Nullable
  public String getBareMetalClusterId() {
    return bareMetalClusterId;
  }

  public void setBareMetalClusterId(String bareMetalClusterId) {
    this.bareMetalClusterId = bareMetalClusterId;
  }


  public EnrollBareMetalClusterRequest localName(String localName) {
    this.localName = localName;
    return this;
  }

  /**
   * Optional. The object name of the bare metal cluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the bare_metal_cluster_id. Otherwise, it must match the object name of the bare metal cluster custom resource. It is not modifiable outside / beyond the enrollment operation.
   * @return localName
   */
  @javax.annotation.Nullable
  public String getLocalName() {
    return localName;
  }

  public void setLocalName(String localName) {
    this.localName = localName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnrollBareMetalClusterRequest enrollBareMetalClusterRequest = (EnrollBareMetalClusterRequest) o;
    return Objects.equals(this.adminClusterMembership, enrollBareMetalClusterRequest.adminClusterMembership) &&
        Objects.equals(this.bareMetalClusterId, enrollBareMetalClusterRequest.bareMetalClusterId) &&
        Objects.equals(this.localName, enrollBareMetalClusterRequest.localName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminClusterMembership, bareMetalClusterId, localName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnrollBareMetalClusterRequest {\n");
    sb.append("    adminClusterMembership: ").append(toIndentedString(adminClusterMembership)).append("\n");
    sb.append("    bareMetalClusterId: ").append(toIndentedString(bareMetalClusterId)).append("\n");
    sb.append("    localName: ").append(toIndentedString(localName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adminClusterMembership");
    openapiFields.add("bareMetalClusterId");
    openapiFields.add("localName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnrollBareMetalClusterRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnrollBareMetalClusterRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnrollBareMetalClusterRequest is not found in the empty JSON string", EnrollBareMetalClusterRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnrollBareMetalClusterRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnrollBareMetalClusterRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adminClusterMembership") != null && !jsonObj.get("adminClusterMembership").isJsonNull()) && !jsonObj.get("adminClusterMembership").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adminClusterMembership` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adminClusterMembership").toString()));
      }
      if ((jsonObj.get("bareMetalClusterId") != null && !jsonObj.get("bareMetalClusterId").isJsonNull()) && !jsonObj.get("bareMetalClusterId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bareMetalClusterId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bareMetalClusterId").toString()));
      }
      if ((jsonObj.get("localName") != null && !jsonObj.get("localName").isJsonNull()) && !jsonObj.get("localName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnrollBareMetalClusterRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnrollBareMetalClusterRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnrollBareMetalClusterRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnrollBareMetalClusterRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<EnrollBareMetalClusterRequest>() {
           @Override
           public void write(JsonWriter out, EnrollBareMetalClusterRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnrollBareMetalClusterRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnrollBareMetalClusterRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnrollBareMetalClusterRequest
   * @throws IOException if the JSON string is invalid with respect to EnrollBareMetalClusterRequest
   */
  public static EnrollBareMetalClusterRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnrollBareMetalClusterRequest.class);
  }

  /**
   * Convert an instance of EnrollBareMetalClusterRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

