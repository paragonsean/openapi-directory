/*
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.BareMetalAdminClusterOperationsConfig;
import org.openapitools.client.model.BareMetalAdminControlPlaneConfig;
import org.openapitools.client.model.BareMetalAdminLoadBalancerConfig;
import org.openapitools.client.model.BareMetalAdminMaintenanceConfig;
import org.openapitools.client.model.BareMetalAdminMaintenanceStatus;
import org.openapitools.client.model.BareMetalAdminNetworkConfig;
import org.openapitools.client.model.BareMetalAdminNodeAccessConfig;
import org.openapitools.client.model.BareMetalAdminOsEnvironmentConfig;
import org.openapitools.client.model.BareMetalAdminProxyConfig;
import org.openapitools.client.model.BareMetalAdminSecurityConfig;
import org.openapitools.client.model.BareMetalAdminStorageConfig;
import org.openapitools.client.model.BareMetalAdminWorkloadNodeConfig;
import org.openapitools.client.model.BinaryAuthorization;
import org.openapitools.client.model.Fleet;
import org.openapitools.client.model.ResourceStatus;
import org.openapitools.client.model.ValidationCheck;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Resource that represents a bare metal admin cluster.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:14.708243-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BareMetalAdminCluster {
  public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
  private Map<String, String> annotations = new HashMap<>();

  public static final String SERIALIZED_NAME_BARE_METAL_VERSION = "bareMetalVersion";
  @SerializedName(SERIALIZED_NAME_BARE_METAL_VERSION)
  private String bareMetalVersion;

  public static final String SERIALIZED_NAME_BINARY_AUTHORIZATION = "binaryAuthorization";
  @SerializedName(SERIALIZED_NAME_BINARY_AUTHORIZATION)
  private BinaryAuthorization binaryAuthorization;

  public static final String SERIALIZED_NAME_CLUSTER_OPERATIONS = "clusterOperations";
  @SerializedName(SERIALIZED_NAME_CLUSTER_OPERATIONS)
  private BareMetalAdminClusterOperationsConfig clusterOperations;

  public static final String SERIALIZED_NAME_CONTROL_PLANE = "controlPlane";
  @SerializedName(SERIALIZED_NAME_CONTROL_PLANE)
  private BareMetalAdminControlPlaneConfig controlPlane;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DELETE_TIME = "deleteTime";
  @SerializedName(SERIALIZED_NAME_DELETE_TIME)
  private String deleteTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_FLEET = "fleet";
  @SerializedName(SERIALIZED_NAME_FLEET)
  private Fleet fleet;

  public static final String SERIALIZED_NAME_LOAD_BALANCER = "loadBalancer";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER)
  private BareMetalAdminLoadBalancerConfig loadBalancer;

  public static final String SERIALIZED_NAME_LOCAL_NAME = "localName";
  @SerializedName(SERIALIZED_NAME_LOCAL_NAME)
  private String localName;

  public static final String SERIALIZED_NAME_MAINTENANCE_CONFIG = "maintenanceConfig";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_CONFIG)
  private BareMetalAdminMaintenanceConfig maintenanceConfig;

  public static final String SERIALIZED_NAME_MAINTENANCE_STATUS = "maintenanceStatus";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_STATUS)
  private BareMetalAdminMaintenanceStatus maintenanceStatus;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK_CONFIG = "networkConfig";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONFIG)
  private BareMetalAdminNetworkConfig networkConfig;

  public static final String SERIALIZED_NAME_NODE_ACCESS_CONFIG = "nodeAccessConfig";
  @SerializedName(SERIALIZED_NAME_NODE_ACCESS_CONFIG)
  private BareMetalAdminNodeAccessConfig nodeAccessConfig;

  public static final String SERIALIZED_NAME_NODE_CONFIG = "nodeConfig";
  @SerializedName(SERIALIZED_NAME_NODE_CONFIG)
  private BareMetalAdminWorkloadNodeConfig nodeConfig;

  public static final String SERIALIZED_NAME_OS_ENVIRONMENT_CONFIG = "osEnvironmentConfig";
  @SerializedName(SERIALIZED_NAME_OS_ENVIRONMENT_CONFIG)
  private BareMetalAdminOsEnvironmentConfig osEnvironmentConfig;

  public static final String SERIALIZED_NAME_PROXY = "proxy";
  @SerializedName(SERIALIZED_NAME_PROXY)
  private BareMetalAdminProxyConfig proxy;

  public static final String SERIALIZED_NAME_RECONCILING = "reconciling";
  @SerializedName(SERIALIZED_NAME_RECONCILING)
  private Boolean reconciling;

  public static final String SERIALIZED_NAME_SECURITY_CONFIG = "securityConfig";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONFIG)
  private BareMetalAdminSecurityConfig securityConfig;

  /**
   * Output only. The current state of the bare metal admin cluster.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    PROVISIONING("PROVISIONING"),
    
    RUNNING("RUNNING"),
    
    RECONCILING("RECONCILING"),
    
    STOPPING("STOPPING"),
    
    ERROR("ERROR"),
    
    DEGRADED("DEGRADED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ResourceStatus status;

  public static final String SERIALIZED_NAME_STORAGE = "storage";
  @SerializedName(SERIALIZED_NAME_STORAGE)
  private BareMetalAdminStorageConfig storage;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_VALIDATION_CHECK = "validationCheck";
  @SerializedName(SERIALIZED_NAME_VALIDATION_CHECK)
  private ValidationCheck validationCheck;

  public BareMetalAdminCluster() {
  }

  public BareMetalAdminCluster(
     String createTime, 
     String deleteTime, 
     String endpoint, 
     String localName, 
     Boolean reconciling, 
     StateEnum state, 
     String uid, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.deleteTime = deleteTime;
    this.endpoint = endpoint;
    this.localName = localName;
    this.reconciling = reconciling;
    this.state = state;
    this.uid = uid;
    this.updateTime = updateTime;
  }

  public BareMetalAdminCluster annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public BareMetalAdminCluster putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

  /**
   * Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
   * @return annotations
   */
  @javax.annotation.Nullable
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }


  public BareMetalAdminCluster bareMetalVersion(String bareMetalVersion) {
    this.bareMetalVersion = bareMetalVersion;
    return this;
  }

  /**
   * The Anthos clusters on bare metal version for the bare metal admin cluster.
   * @return bareMetalVersion
   */
  @javax.annotation.Nullable
  public String getBareMetalVersion() {
    return bareMetalVersion;
  }

  public void setBareMetalVersion(String bareMetalVersion) {
    this.bareMetalVersion = bareMetalVersion;
  }


  public BareMetalAdminCluster binaryAuthorization(BinaryAuthorization binaryAuthorization) {
    this.binaryAuthorization = binaryAuthorization;
    return this;
  }

  /**
   * Get binaryAuthorization
   * @return binaryAuthorization
   */
  @javax.annotation.Nullable
  public BinaryAuthorization getBinaryAuthorization() {
    return binaryAuthorization;
  }

  public void setBinaryAuthorization(BinaryAuthorization binaryAuthorization) {
    this.binaryAuthorization = binaryAuthorization;
  }


  public BareMetalAdminCluster clusterOperations(BareMetalAdminClusterOperationsConfig clusterOperations) {
    this.clusterOperations = clusterOperations;
    return this;
  }

  /**
   * Get clusterOperations
   * @return clusterOperations
   */
  @javax.annotation.Nullable
  public BareMetalAdminClusterOperationsConfig getClusterOperations() {
    return clusterOperations;
  }

  public void setClusterOperations(BareMetalAdminClusterOperationsConfig clusterOperations) {
    this.clusterOperations = clusterOperations;
  }


  public BareMetalAdminCluster controlPlane(BareMetalAdminControlPlaneConfig controlPlane) {
    this.controlPlane = controlPlane;
    return this;
  }

  /**
   * Get controlPlane
   * @return controlPlane
   */
  @javax.annotation.Nullable
  public BareMetalAdminControlPlaneConfig getControlPlane() {
    return controlPlane;
  }

  public void setControlPlane(BareMetalAdminControlPlaneConfig controlPlane) {
    this.controlPlane = controlPlane;
  }


  /**
   * Output only. The time at which this bare metal admin cluster was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. The time at which this bare metal admin cluster was deleted. If the resource is not deleted, this must be empty
   * @return deleteTime
   */
  @javax.annotation.Nullable
  public String getDeleteTime() {
    return deleteTime;
  }



  public BareMetalAdminCluster description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A human readable description of this bare metal admin cluster.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Output only. The IP address name of bare metal admin cluster&#39;s API server.
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }



  public BareMetalAdminCluster etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public BareMetalAdminCluster fleet(Fleet fleet) {
    this.fleet = fleet;
    return this;
  }

  /**
   * Get fleet
   * @return fleet
   */
  @javax.annotation.Nullable
  public Fleet getFleet() {
    return fleet;
  }

  public void setFleet(Fleet fleet) {
    this.fleet = fleet;
  }


  public BareMetalAdminCluster loadBalancer(BareMetalAdminLoadBalancerConfig loadBalancer) {
    this.loadBalancer = loadBalancer;
    return this;
  }

  /**
   * Get loadBalancer
   * @return loadBalancer
   */
  @javax.annotation.Nullable
  public BareMetalAdminLoadBalancerConfig getLoadBalancer() {
    return loadBalancer;
  }

  public void setLoadBalancer(BareMetalAdminLoadBalancerConfig loadBalancer) {
    this.loadBalancer = loadBalancer;
  }


  /**
   * Output only. The object name of the bare metal cluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.
   * @return localName
   */
  @javax.annotation.Nullable
  public String getLocalName() {
    return localName;
  }



  public BareMetalAdminCluster maintenanceConfig(BareMetalAdminMaintenanceConfig maintenanceConfig) {
    this.maintenanceConfig = maintenanceConfig;
    return this;
  }

  /**
   * Get maintenanceConfig
   * @return maintenanceConfig
   */
  @javax.annotation.Nullable
  public BareMetalAdminMaintenanceConfig getMaintenanceConfig() {
    return maintenanceConfig;
  }

  public void setMaintenanceConfig(BareMetalAdminMaintenanceConfig maintenanceConfig) {
    this.maintenanceConfig = maintenanceConfig;
  }


  public BareMetalAdminCluster maintenanceStatus(BareMetalAdminMaintenanceStatus maintenanceStatus) {
    this.maintenanceStatus = maintenanceStatus;
    return this;
  }

  /**
   * Get maintenanceStatus
   * @return maintenanceStatus
   */
  @javax.annotation.Nullable
  public BareMetalAdminMaintenanceStatus getMaintenanceStatus() {
    return maintenanceStatus;
  }

  public void setMaintenanceStatus(BareMetalAdminMaintenanceStatus maintenanceStatus) {
    this.maintenanceStatus = maintenanceStatus;
  }


  public BareMetalAdminCluster name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. The bare metal admin cluster resource name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public BareMetalAdminCluster networkConfig(BareMetalAdminNetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
    return this;
  }

  /**
   * Get networkConfig
   * @return networkConfig
   */
  @javax.annotation.Nullable
  public BareMetalAdminNetworkConfig getNetworkConfig() {
    return networkConfig;
  }

  public void setNetworkConfig(BareMetalAdminNetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
  }


  public BareMetalAdminCluster nodeAccessConfig(BareMetalAdminNodeAccessConfig nodeAccessConfig) {
    this.nodeAccessConfig = nodeAccessConfig;
    return this;
  }

  /**
   * Get nodeAccessConfig
   * @return nodeAccessConfig
   */
  @javax.annotation.Nullable
  public BareMetalAdminNodeAccessConfig getNodeAccessConfig() {
    return nodeAccessConfig;
  }

  public void setNodeAccessConfig(BareMetalAdminNodeAccessConfig nodeAccessConfig) {
    this.nodeAccessConfig = nodeAccessConfig;
  }


  public BareMetalAdminCluster nodeConfig(BareMetalAdminWorkloadNodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
    return this;
  }

  /**
   * Get nodeConfig
   * @return nodeConfig
   */
  @javax.annotation.Nullable
  public BareMetalAdminWorkloadNodeConfig getNodeConfig() {
    return nodeConfig;
  }

  public void setNodeConfig(BareMetalAdminWorkloadNodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
  }


  public BareMetalAdminCluster osEnvironmentConfig(BareMetalAdminOsEnvironmentConfig osEnvironmentConfig) {
    this.osEnvironmentConfig = osEnvironmentConfig;
    return this;
  }

  /**
   * Get osEnvironmentConfig
   * @return osEnvironmentConfig
   */
  @javax.annotation.Nullable
  public BareMetalAdminOsEnvironmentConfig getOsEnvironmentConfig() {
    return osEnvironmentConfig;
  }

  public void setOsEnvironmentConfig(BareMetalAdminOsEnvironmentConfig osEnvironmentConfig) {
    this.osEnvironmentConfig = osEnvironmentConfig;
  }


  public BareMetalAdminCluster proxy(BareMetalAdminProxyConfig proxy) {
    this.proxy = proxy;
    return this;
  }

  /**
   * Get proxy
   * @return proxy
   */
  @javax.annotation.Nullable
  public BareMetalAdminProxyConfig getProxy() {
    return proxy;
  }

  public void setProxy(BareMetalAdminProxyConfig proxy) {
    this.proxy = proxy;
  }


  /**
   * Output only. If set, there are currently changes in flight to the bare metal Admin Cluster.
   * @return reconciling
   */
  @javax.annotation.Nullable
  public Boolean getReconciling() {
    return reconciling;
  }



  public BareMetalAdminCluster securityConfig(BareMetalAdminSecurityConfig securityConfig) {
    this.securityConfig = securityConfig;
    return this;
  }

  /**
   * Get securityConfig
   * @return securityConfig
   */
  @javax.annotation.Nullable
  public BareMetalAdminSecurityConfig getSecurityConfig() {
    return securityConfig;
  }

  public void setSecurityConfig(BareMetalAdminSecurityConfig securityConfig) {
    this.securityConfig = securityConfig;
  }


  /**
   * Output only. The current state of the bare metal admin cluster.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public BareMetalAdminCluster status(ResourceStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ResourceStatus getStatus() {
    return status;
  }

  public void setStatus(ResourceStatus status) {
    this.status = status;
  }


  public BareMetalAdminCluster storage(BareMetalAdminStorageConfig storage) {
    this.storage = storage;
    return this;
  }

  /**
   * Get storage
   * @return storage
   */
  @javax.annotation.Nullable
  public BareMetalAdminStorageConfig getStorage() {
    return storage;
  }

  public void setStorage(BareMetalAdminStorageConfig storage) {
    this.storage = storage;
  }


  /**
   * Output only. The unique identifier of the bare metal admin cluster.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }



  /**
   * Output only. The time at which this bare metal admin cluster was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public BareMetalAdminCluster validationCheck(ValidationCheck validationCheck) {
    this.validationCheck = validationCheck;
    return this;
  }

  /**
   * Get validationCheck
   * @return validationCheck
   */
  @javax.annotation.Nullable
  public ValidationCheck getValidationCheck() {
    return validationCheck;
  }

  public void setValidationCheck(ValidationCheck validationCheck) {
    this.validationCheck = validationCheck;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BareMetalAdminCluster bareMetalAdminCluster = (BareMetalAdminCluster) o;
    return Objects.equals(this.annotations, bareMetalAdminCluster.annotations) &&
        Objects.equals(this.bareMetalVersion, bareMetalAdminCluster.bareMetalVersion) &&
        Objects.equals(this.binaryAuthorization, bareMetalAdminCluster.binaryAuthorization) &&
        Objects.equals(this.clusterOperations, bareMetalAdminCluster.clusterOperations) &&
        Objects.equals(this.controlPlane, bareMetalAdminCluster.controlPlane) &&
        Objects.equals(this.createTime, bareMetalAdminCluster.createTime) &&
        Objects.equals(this.deleteTime, bareMetalAdminCluster.deleteTime) &&
        Objects.equals(this.description, bareMetalAdminCluster.description) &&
        Objects.equals(this.endpoint, bareMetalAdminCluster.endpoint) &&
        Objects.equals(this.etag, bareMetalAdminCluster.etag) &&
        Objects.equals(this.fleet, bareMetalAdminCluster.fleet) &&
        Objects.equals(this.loadBalancer, bareMetalAdminCluster.loadBalancer) &&
        Objects.equals(this.localName, bareMetalAdminCluster.localName) &&
        Objects.equals(this.maintenanceConfig, bareMetalAdminCluster.maintenanceConfig) &&
        Objects.equals(this.maintenanceStatus, bareMetalAdminCluster.maintenanceStatus) &&
        Objects.equals(this.name, bareMetalAdminCluster.name) &&
        Objects.equals(this.networkConfig, bareMetalAdminCluster.networkConfig) &&
        Objects.equals(this.nodeAccessConfig, bareMetalAdminCluster.nodeAccessConfig) &&
        Objects.equals(this.nodeConfig, bareMetalAdminCluster.nodeConfig) &&
        Objects.equals(this.osEnvironmentConfig, bareMetalAdminCluster.osEnvironmentConfig) &&
        Objects.equals(this.proxy, bareMetalAdminCluster.proxy) &&
        Objects.equals(this.reconciling, bareMetalAdminCluster.reconciling) &&
        Objects.equals(this.securityConfig, bareMetalAdminCluster.securityConfig) &&
        Objects.equals(this.state, bareMetalAdminCluster.state) &&
        Objects.equals(this.status, bareMetalAdminCluster.status) &&
        Objects.equals(this.storage, bareMetalAdminCluster.storage) &&
        Objects.equals(this.uid, bareMetalAdminCluster.uid) &&
        Objects.equals(this.updateTime, bareMetalAdminCluster.updateTime) &&
        Objects.equals(this.validationCheck, bareMetalAdminCluster.validationCheck);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, bareMetalVersion, binaryAuthorization, clusterOperations, controlPlane, createTime, deleteTime, description, endpoint, etag, fleet, loadBalancer, localName, maintenanceConfig, maintenanceStatus, name, networkConfig, nodeAccessConfig, nodeConfig, osEnvironmentConfig, proxy, reconciling, securityConfig, state, status, storage, uid, updateTime, validationCheck);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BareMetalAdminCluster {\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    bareMetalVersion: ").append(toIndentedString(bareMetalVersion)).append("\n");
    sb.append("    binaryAuthorization: ").append(toIndentedString(binaryAuthorization)).append("\n");
    sb.append("    clusterOperations: ").append(toIndentedString(clusterOperations)).append("\n");
    sb.append("    controlPlane: ").append(toIndentedString(controlPlane)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    deleteTime: ").append(toIndentedString(deleteTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    fleet: ").append(toIndentedString(fleet)).append("\n");
    sb.append("    loadBalancer: ").append(toIndentedString(loadBalancer)).append("\n");
    sb.append("    localName: ").append(toIndentedString(localName)).append("\n");
    sb.append("    maintenanceConfig: ").append(toIndentedString(maintenanceConfig)).append("\n");
    sb.append("    maintenanceStatus: ").append(toIndentedString(maintenanceStatus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkConfig: ").append(toIndentedString(networkConfig)).append("\n");
    sb.append("    nodeAccessConfig: ").append(toIndentedString(nodeAccessConfig)).append("\n");
    sb.append("    nodeConfig: ").append(toIndentedString(nodeConfig)).append("\n");
    sb.append("    osEnvironmentConfig: ").append(toIndentedString(osEnvironmentConfig)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    reconciling: ").append(toIndentedString(reconciling)).append("\n");
    sb.append("    securityConfig: ").append(toIndentedString(securityConfig)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    validationCheck: ").append(toIndentedString(validationCheck)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotations");
    openapiFields.add("bareMetalVersion");
    openapiFields.add("binaryAuthorization");
    openapiFields.add("clusterOperations");
    openapiFields.add("controlPlane");
    openapiFields.add("createTime");
    openapiFields.add("deleteTime");
    openapiFields.add("description");
    openapiFields.add("endpoint");
    openapiFields.add("etag");
    openapiFields.add("fleet");
    openapiFields.add("loadBalancer");
    openapiFields.add("localName");
    openapiFields.add("maintenanceConfig");
    openapiFields.add("maintenanceStatus");
    openapiFields.add("name");
    openapiFields.add("networkConfig");
    openapiFields.add("nodeAccessConfig");
    openapiFields.add("nodeConfig");
    openapiFields.add("osEnvironmentConfig");
    openapiFields.add("proxy");
    openapiFields.add("reconciling");
    openapiFields.add("securityConfig");
    openapiFields.add("state");
    openapiFields.add("status");
    openapiFields.add("storage");
    openapiFields.add("uid");
    openapiFields.add("updateTime");
    openapiFields.add("validationCheck");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BareMetalAdminCluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BareMetalAdminCluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BareMetalAdminCluster is not found in the empty JSON string", BareMetalAdminCluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BareMetalAdminCluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BareMetalAdminCluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bareMetalVersion") != null && !jsonObj.get("bareMetalVersion").isJsonNull()) && !jsonObj.get("bareMetalVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bareMetalVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bareMetalVersion").toString()));
      }
      // validate the optional field `binaryAuthorization`
      if (jsonObj.get("binaryAuthorization") != null && !jsonObj.get("binaryAuthorization").isJsonNull()) {
        BinaryAuthorization.validateJsonElement(jsonObj.get("binaryAuthorization"));
      }
      // validate the optional field `clusterOperations`
      if (jsonObj.get("clusterOperations") != null && !jsonObj.get("clusterOperations").isJsonNull()) {
        BareMetalAdminClusterOperationsConfig.validateJsonElement(jsonObj.get("clusterOperations"));
      }
      // validate the optional field `controlPlane`
      if (jsonObj.get("controlPlane") != null && !jsonObj.get("controlPlane").isJsonNull()) {
        BareMetalAdminControlPlaneConfig.validateJsonElement(jsonObj.get("controlPlane"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("deleteTime") != null && !jsonObj.get("deleteTime").isJsonNull()) && !jsonObj.get("deleteTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deleteTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deleteTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `fleet`
      if (jsonObj.get("fleet") != null && !jsonObj.get("fleet").isJsonNull()) {
        Fleet.validateJsonElement(jsonObj.get("fleet"));
      }
      // validate the optional field `loadBalancer`
      if (jsonObj.get("loadBalancer") != null && !jsonObj.get("loadBalancer").isJsonNull()) {
        BareMetalAdminLoadBalancerConfig.validateJsonElement(jsonObj.get("loadBalancer"));
      }
      if ((jsonObj.get("localName") != null && !jsonObj.get("localName").isJsonNull()) && !jsonObj.get("localName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localName").toString()));
      }
      // validate the optional field `maintenanceConfig`
      if (jsonObj.get("maintenanceConfig") != null && !jsonObj.get("maintenanceConfig").isJsonNull()) {
        BareMetalAdminMaintenanceConfig.validateJsonElement(jsonObj.get("maintenanceConfig"));
      }
      // validate the optional field `maintenanceStatus`
      if (jsonObj.get("maintenanceStatus") != null && !jsonObj.get("maintenanceStatus").isJsonNull()) {
        BareMetalAdminMaintenanceStatus.validateJsonElement(jsonObj.get("maintenanceStatus"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `networkConfig`
      if (jsonObj.get("networkConfig") != null && !jsonObj.get("networkConfig").isJsonNull()) {
        BareMetalAdminNetworkConfig.validateJsonElement(jsonObj.get("networkConfig"));
      }
      // validate the optional field `nodeAccessConfig`
      if (jsonObj.get("nodeAccessConfig") != null && !jsonObj.get("nodeAccessConfig").isJsonNull()) {
        BareMetalAdminNodeAccessConfig.validateJsonElement(jsonObj.get("nodeAccessConfig"));
      }
      // validate the optional field `nodeConfig`
      if (jsonObj.get("nodeConfig") != null && !jsonObj.get("nodeConfig").isJsonNull()) {
        BareMetalAdminWorkloadNodeConfig.validateJsonElement(jsonObj.get("nodeConfig"));
      }
      // validate the optional field `osEnvironmentConfig`
      if (jsonObj.get("osEnvironmentConfig") != null && !jsonObj.get("osEnvironmentConfig").isJsonNull()) {
        BareMetalAdminOsEnvironmentConfig.validateJsonElement(jsonObj.get("osEnvironmentConfig"));
      }
      // validate the optional field `proxy`
      if (jsonObj.get("proxy") != null && !jsonObj.get("proxy").isJsonNull()) {
        BareMetalAdminProxyConfig.validateJsonElement(jsonObj.get("proxy"));
      }
      // validate the optional field `securityConfig`
      if (jsonObj.get("securityConfig") != null && !jsonObj.get("securityConfig").isJsonNull()) {
        BareMetalAdminSecurityConfig.validateJsonElement(jsonObj.get("securityConfig"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ResourceStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `storage`
      if (jsonObj.get("storage") != null && !jsonObj.get("storage").isJsonNull()) {
        BareMetalAdminStorageConfig.validateJsonElement(jsonObj.get("storage"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      // validate the optional field `validationCheck`
      if (jsonObj.get("validationCheck") != null && !jsonObj.get("validationCheck").isJsonNull()) {
        ValidationCheck.validateJsonElement(jsonObj.get("validationCheck"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BareMetalAdminCluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BareMetalAdminCluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BareMetalAdminCluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BareMetalAdminCluster.class));

       return (TypeAdapter<T>) new TypeAdapter<BareMetalAdminCluster>() {
           @Override
           public void write(JsonWriter out, BareMetalAdminCluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BareMetalAdminCluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BareMetalAdminCluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BareMetalAdminCluster
   * @throws IOException if the JSON string is invalid with respect to BareMetalAdminCluster
   */
  public static BareMetalAdminCluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BareMetalAdminCluster.class);
  }

  /**
   * Convert an instance of BareMetalAdminCluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

