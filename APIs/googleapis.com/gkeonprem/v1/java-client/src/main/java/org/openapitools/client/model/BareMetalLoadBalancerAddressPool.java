/*
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an IP pool used by the load balancer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:14.708243-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BareMetalLoadBalancerAddressPool {
  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<String> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVOID_BUGGY_IPS = "avoidBuggyIps";
  @SerializedName(SERIALIZED_NAME_AVOID_BUGGY_IPS)
  private Boolean avoidBuggyIps;

  public static final String SERIALIZED_NAME_MANUAL_ASSIGN = "manualAssign";
  @SerializedName(SERIALIZED_NAME_MANUAL_ASSIGN)
  private Boolean manualAssign;

  public static final String SERIALIZED_NAME_POOL = "pool";
  @SerializedName(SERIALIZED_NAME_POOL)
  private String pool;

  public BareMetalLoadBalancerAddressPool() {
  }

  public BareMetalLoadBalancerAddressPool addresses(List<String> addresses) {
    this.addresses = addresses;
    return this;
  }

  public BareMetalLoadBalancerAddressPool addAddressesItem(String addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * Required. The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
   * @return addresses
   */
  @javax.annotation.Nullable
  public List<String> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<String> addresses) {
    this.addresses = addresses;
  }


  public BareMetalLoadBalancerAddressPool avoidBuggyIps(Boolean avoidBuggyIps) {
    this.avoidBuggyIps = avoidBuggyIps;
    return this;
  }

  /**
   * If true, avoid using IPs ending in .0 or .255. This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.
   * @return avoidBuggyIps
   */
  @javax.annotation.Nullable
  public Boolean getAvoidBuggyIps() {
    return avoidBuggyIps;
  }

  public void setAvoidBuggyIps(Boolean avoidBuggyIps) {
    this.avoidBuggyIps = avoidBuggyIps;
  }


  public BareMetalLoadBalancerAddressPool manualAssign(Boolean manualAssign) {
    this.manualAssign = manualAssign;
    return this;
  }

  /**
   * If true, prevent IP addresses from being automatically assigned.
   * @return manualAssign
   */
  @javax.annotation.Nullable
  public Boolean getManualAssign() {
    return manualAssign;
  }

  public void setManualAssign(Boolean manualAssign) {
    this.manualAssign = manualAssign;
  }


  public BareMetalLoadBalancerAddressPool pool(String pool) {
    this.pool = pool;
    return this;
  }

  /**
   * Required. The name of the address pool.
   * @return pool
   */
  @javax.annotation.Nullable
  public String getPool() {
    return pool;
  }

  public void setPool(String pool) {
    this.pool = pool;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BareMetalLoadBalancerAddressPool bareMetalLoadBalancerAddressPool = (BareMetalLoadBalancerAddressPool) o;
    return Objects.equals(this.addresses, bareMetalLoadBalancerAddressPool.addresses) &&
        Objects.equals(this.avoidBuggyIps, bareMetalLoadBalancerAddressPool.avoidBuggyIps) &&
        Objects.equals(this.manualAssign, bareMetalLoadBalancerAddressPool.manualAssign) &&
        Objects.equals(this.pool, bareMetalLoadBalancerAddressPool.pool);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresses, avoidBuggyIps, manualAssign, pool);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BareMetalLoadBalancerAddressPool {\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    avoidBuggyIps: ").append(toIndentedString(avoidBuggyIps)).append("\n");
    sb.append("    manualAssign: ").append(toIndentedString(manualAssign)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addresses");
    openapiFields.add("avoidBuggyIps");
    openapiFields.add("manualAssign");
    openapiFields.add("pool");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BareMetalLoadBalancerAddressPool
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BareMetalLoadBalancerAddressPool.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BareMetalLoadBalancerAddressPool is not found in the empty JSON string", BareMetalLoadBalancerAddressPool.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BareMetalLoadBalancerAddressPool.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BareMetalLoadBalancerAddressPool` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull() && !jsonObj.get("addresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
      }
      if ((jsonObj.get("pool") != null && !jsonObj.get("pool").isJsonNull()) && !jsonObj.get("pool").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pool` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pool").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BareMetalLoadBalancerAddressPool.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BareMetalLoadBalancerAddressPool' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BareMetalLoadBalancerAddressPool> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BareMetalLoadBalancerAddressPool.class));

       return (TypeAdapter<T>) new TypeAdapter<BareMetalLoadBalancerAddressPool>() {
           @Override
           public void write(JsonWriter out, BareMetalLoadBalancerAddressPool value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BareMetalLoadBalancerAddressPool read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BareMetalLoadBalancerAddressPool given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BareMetalLoadBalancerAddressPool
   * @throws IOException if the JSON string is invalid with respect to BareMetalLoadBalancerAddressPool
   */
  public static BareMetalLoadBalancerAddressPool fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BareMetalLoadBalancerAddressPool.class);
  }

  /**
   * Convert an instance of BareMetalLoadBalancerAddressPool to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

