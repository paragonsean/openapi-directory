/*
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BareMetalAdminCluster;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for listing bare metal admin clusters.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:14.708243-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListBareMetalAdminClustersResponse {
  public static final String SERIALIZED_NAME_BARE_METAL_ADMIN_CLUSTERS = "bareMetalAdminClusters";
  @SerializedName(SERIALIZED_NAME_BARE_METAL_ADMIN_CLUSTERS)
  private List<BareMetalAdminCluster> bareMetalAdminClusters = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "nextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public static final String SERIALIZED_NAME_UNREACHABLE = "unreachable";
  @SerializedName(SERIALIZED_NAME_UNREACHABLE)
  private List<String> unreachable = new ArrayList<>();

  public ListBareMetalAdminClustersResponse() {
  }

  public ListBareMetalAdminClustersResponse bareMetalAdminClusters(List<BareMetalAdminCluster> bareMetalAdminClusters) {
    this.bareMetalAdminClusters = bareMetalAdminClusters;
    return this;
  }

  public ListBareMetalAdminClustersResponse addBareMetalAdminClustersItem(BareMetalAdminCluster bareMetalAdminClustersItem) {
    if (this.bareMetalAdminClusters == null) {
      this.bareMetalAdminClusters = new ArrayList<>();
    }
    this.bareMetalAdminClusters.add(bareMetalAdminClustersItem);
    return this;
  }

  /**
   * The list of bare metal admin cluster.
   * @return bareMetalAdminClusters
   */
  @javax.annotation.Nullable
  public List<BareMetalAdminCluster> getBareMetalAdminClusters() {
    return bareMetalAdminClusters;
  }

  public void setBareMetalAdminClusters(List<BareMetalAdminCluster> bareMetalAdminClusters) {
    this.bareMetalAdminClusters = bareMetalAdminClusters;
  }


  public ListBareMetalAdminClustersResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }


  public ListBareMetalAdminClustersResponse unreachable(List<String> unreachable) {
    this.unreachable = unreachable;
    return this;
  }

  public ListBareMetalAdminClustersResponse addUnreachableItem(String unreachableItem) {
    if (this.unreachable == null) {
      this.unreachable = new ArrayList<>();
    }
    this.unreachable.add(unreachableItem);
    return this;
  }

  /**
   * Locations that could not be reached.
   * @return unreachable
   */
  @javax.annotation.Nullable
  public List<String> getUnreachable() {
    return unreachable;
  }

  public void setUnreachable(List<String> unreachable) {
    this.unreachable = unreachable;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListBareMetalAdminClustersResponse listBareMetalAdminClustersResponse = (ListBareMetalAdminClustersResponse) o;
    return Objects.equals(this.bareMetalAdminClusters, listBareMetalAdminClustersResponse.bareMetalAdminClusters) &&
        Objects.equals(this.nextPageToken, listBareMetalAdminClustersResponse.nextPageToken) &&
        Objects.equals(this.unreachable, listBareMetalAdminClustersResponse.unreachable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bareMetalAdminClusters, nextPageToken, unreachable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListBareMetalAdminClustersResponse {\n");
    sb.append("    bareMetalAdminClusters: ").append(toIndentedString(bareMetalAdminClusters)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    unreachable: ").append(toIndentedString(unreachable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bareMetalAdminClusters");
    openapiFields.add("nextPageToken");
    openapiFields.add("unreachable");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListBareMetalAdminClustersResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListBareMetalAdminClustersResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListBareMetalAdminClustersResponse is not found in the empty JSON string", ListBareMetalAdminClustersResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListBareMetalAdminClustersResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListBareMetalAdminClustersResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("bareMetalAdminClusters") != null && !jsonObj.get("bareMetalAdminClusters").isJsonNull()) {
        JsonArray jsonArraybareMetalAdminClusters = jsonObj.getAsJsonArray("bareMetalAdminClusters");
        if (jsonArraybareMetalAdminClusters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bareMetalAdminClusters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bareMetalAdminClusters` to be an array in the JSON string but got `%s`", jsonObj.get("bareMetalAdminClusters").toString()));
          }

          // validate the optional field `bareMetalAdminClusters` (array)
          for (int i = 0; i < jsonArraybareMetalAdminClusters.size(); i++) {
            BareMetalAdminCluster.validateJsonElement(jsonArraybareMetalAdminClusters.get(i));
          };
        }
      }
      if ((jsonObj.get("nextPageToken") != null && !jsonObj.get("nextPageToken").isJsonNull()) && !jsonObj.get("nextPageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextPageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextPageToken").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("unreachable") != null && !jsonObj.get("unreachable").isJsonNull() && !jsonObj.get("unreachable").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `unreachable` to be an array in the JSON string but got `%s`", jsonObj.get("unreachable").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListBareMetalAdminClustersResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListBareMetalAdminClustersResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListBareMetalAdminClustersResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListBareMetalAdminClustersResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListBareMetalAdminClustersResponse>() {
           @Override
           public void write(JsonWriter out, ListBareMetalAdminClustersResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListBareMetalAdminClustersResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListBareMetalAdminClustersResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListBareMetalAdminClustersResponse
   * @throws IOException if the JSON string is invalid with respect to ListBareMetalAdminClustersResponse
   */
  public static ListBareMetalAdminClustersResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListBareMetalAdminClustersResponse.class);
  }

  /**
   * Convert an instance of ListBareMetalAdminClustersResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

