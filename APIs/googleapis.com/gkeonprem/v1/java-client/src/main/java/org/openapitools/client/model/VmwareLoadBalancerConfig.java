/*
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.VmwareF5BigIpConfig;
import org.openapitools.client.model.VmwareManualLbConfig;
import org.openapitools.client.model.VmwareMetalLbConfig;
import org.openapitools.client.model.VmwareSeesawConfig;
import org.openapitools.client.model.VmwareVipConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the locad balancer config for the VMware user cluster.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:14.708243-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VmwareLoadBalancerConfig {
  public static final String SERIALIZED_NAME_F5_CONFIG = "f5Config";
  @SerializedName(SERIALIZED_NAME_F5_CONFIG)
  private VmwareF5BigIpConfig f5Config;

  public static final String SERIALIZED_NAME_MANUAL_LB_CONFIG = "manualLbConfig";
  @SerializedName(SERIALIZED_NAME_MANUAL_LB_CONFIG)
  private VmwareManualLbConfig manualLbConfig;

  public static final String SERIALIZED_NAME_METAL_LB_CONFIG = "metalLbConfig";
  @SerializedName(SERIALIZED_NAME_METAL_LB_CONFIG)
  private VmwareMetalLbConfig metalLbConfig;

  public static final String SERIALIZED_NAME_SEESAW_CONFIG = "seesawConfig";
  @SerializedName(SERIALIZED_NAME_SEESAW_CONFIG)
  private VmwareSeesawConfig seesawConfig;

  public static final String SERIALIZED_NAME_VIP_CONFIG = "vipConfig";
  @SerializedName(SERIALIZED_NAME_VIP_CONFIG)
  private VmwareVipConfig vipConfig;

  public VmwareLoadBalancerConfig() {
  }

  public VmwareLoadBalancerConfig f5Config(VmwareF5BigIpConfig f5Config) {
    this.f5Config = f5Config;
    return this;
  }

  /**
   * Get f5Config
   * @return f5Config
   */
  @javax.annotation.Nullable
  public VmwareF5BigIpConfig getF5Config() {
    return f5Config;
  }

  public void setF5Config(VmwareF5BigIpConfig f5Config) {
    this.f5Config = f5Config;
  }


  public VmwareLoadBalancerConfig manualLbConfig(VmwareManualLbConfig manualLbConfig) {
    this.manualLbConfig = manualLbConfig;
    return this;
  }

  /**
   * Get manualLbConfig
   * @return manualLbConfig
   */
  @javax.annotation.Nullable
  public VmwareManualLbConfig getManualLbConfig() {
    return manualLbConfig;
  }

  public void setManualLbConfig(VmwareManualLbConfig manualLbConfig) {
    this.manualLbConfig = manualLbConfig;
  }


  public VmwareLoadBalancerConfig metalLbConfig(VmwareMetalLbConfig metalLbConfig) {
    this.metalLbConfig = metalLbConfig;
    return this;
  }

  /**
   * Get metalLbConfig
   * @return metalLbConfig
   */
  @javax.annotation.Nullable
  public VmwareMetalLbConfig getMetalLbConfig() {
    return metalLbConfig;
  }

  public void setMetalLbConfig(VmwareMetalLbConfig metalLbConfig) {
    this.metalLbConfig = metalLbConfig;
  }


  public VmwareLoadBalancerConfig seesawConfig(VmwareSeesawConfig seesawConfig) {
    this.seesawConfig = seesawConfig;
    return this;
  }

  /**
   * Get seesawConfig
   * @return seesawConfig
   */
  @javax.annotation.Nullable
  public VmwareSeesawConfig getSeesawConfig() {
    return seesawConfig;
  }

  public void setSeesawConfig(VmwareSeesawConfig seesawConfig) {
    this.seesawConfig = seesawConfig;
  }


  public VmwareLoadBalancerConfig vipConfig(VmwareVipConfig vipConfig) {
    this.vipConfig = vipConfig;
    return this;
  }

  /**
   * Get vipConfig
   * @return vipConfig
   */
  @javax.annotation.Nullable
  public VmwareVipConfig getVipConfig() {
    return vipConfig;
  }

  public void setVipConfig(VmwareVipConfig vipConfig) {
    this.vipConfig = vipConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VmwareLoadBalancerConfig vmwareLoadBalancerConfig = (VmwareLoadBalancerConfig) o;
    return Objects.equals(this.f5Config, vmwareLoadBalancerConfig.f5Config) &&
        Objects.equals(this.manualLbConfig, vmwareLoadBalancerConfig.manualLbConfig) &&
        Objects.equals(this.metalLbConfig, vmwareLoadBalancerConfig.metalLbConfig) &&
        Objects.equals(this.seesawConfig, vmwareLoadBalancerConfig.seesawConfig) &&
        Objects.equals(this.vipConfig, vmwareLoadBalancerConfig.vipConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(f5Config, manualLbConfig, metalLbConfig, seesawConfig, vipConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VmwareLoadBalancerConfig {\n");
    sb.append("    f5Config: ").append(toIndentedString(f5Config)).append("\n");
    sb.append("    manualLbConfig: ").append(toIndentedString(manualLbConfig)).append("\n");
    sb.append("    metalLbConfig: ").append(toIndentedString(metalLbConfig)).append("\n");
    sb.append("    seesawConfig: ").append(toIndentedString(seesawConfig)).append("\n");
    sb.append("    vipConfig: ").append(toIndentedString(vipConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("f5Config");
    openapiFields.add("manualLbConfig");
    openapiFields.add("metalLbConfig");
    openapiFields.add("seesawConfig");
    openapiFields.add("vipConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VmwareLoadBalancerConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VmwareLoadBalancerConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VmwareLoadBalancerConfig is not found in the empty JSON string", VmwareLoadBalancerConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VmwareLoadBalancerConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VmwareLoadBalancerConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `f5Config`
      if (jsonObj.get("f5Config") != null && !jsonObj.get("f5Config").isJsonNull()) {
        VmwareF5BigIpConfig.validateJsonElement(jsonObj.get("f5Config"));
      }
      // validate the optional field `manualLbConfig`
      if (jsonObj.get("manualLbConfig") != null && !jsonObj.get("manualLbConfig").isJsonNull()) {
        VmwareManualLbConfig.validateJsonElement(jsonObj.get("manualLbConfig"));
      }
      // validate the optional field `metalLbConfig`
      if (jsonObj.get("metalLbConfig") != null && !jsonObj.get("metalLbConfig").isJsonNull()) {
        VmwareMetalLbConfig.validateJsonElement(jsonObj.get("metalLbConfig"));
      }
      // validate the optional field `seesawConfig`
      if (jsonObj.get("seesawConfig") != null && !jsonObj.get("seesawConfig").isJsonNull()) {
        VmwareSeesawConfig.validateJsonElement(jsonObj.get("seesawConfig"));
      }
      // validate the optional field `vipConfig`
      if (jsonObj.get("vipConfig") != null && !jsonObj.get("vipConfig").isJsonNull()) {
        VmwareVipConfig.validateJsonElement(jsonObj.get("vipConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VmwareLoadBalancerConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VmwareLoadBalancerConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VmwareLoadBalancerConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VmwareLoadBalancerConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<VmwareLoadBalancerConfig>() {
           @Override
           public void write(JsonWriter out, VmwareLoadBalancerConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VmwareLoadBalancerConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VmwareLoadBalancerConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VmwareLoadBalancerConfig
   * @throws IOException if the JSON string is invalid with respect to VmwareLoadBalancerConfig
   */
  public static VmwareLoadBalancerConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VmwareLoadBalancerConfig.class);
  }

  /**
   * Convert an instance of VmwareLoadBalancerConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

