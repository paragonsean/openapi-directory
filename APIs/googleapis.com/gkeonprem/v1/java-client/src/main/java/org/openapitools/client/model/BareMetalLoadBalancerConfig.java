/*
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BareMetalBgpLbConfig;
import org.openapitools.client.model.BareMetalManualLbConfig;
import org.openapitools.client.model.BareMetalMetalLbConfig;
import org.openapitools.client.model.BareMetalPortConfig;
import org.openapitools.client.model.BareMetalVipConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the load balancer configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:35:14.708243-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BareMetalLoadBalancerConfig {
  public static final String SERIALIZED_NAME_BGP_LB_CONFIG = "bgpLbConfig";
  @SerializedName(SERIALIZED_NAME_BGP_LB_CONFIG)
  private BareMetalBgpLbConfig bgpLbConfig;

  public static final String SERIALIZED_NAME_MANUAL_LB_CONFIG = "manualLbConfig";
  @SerializedName(SERIALIZED_NAME_MANUAL_LB_CONFIG)
  private BareMetalManualLbConfig manualLbConfig;

  public static final String SERIALIZED_NAME_METAL_LB_CONFIG = "metalLbConfig";
  @SerializedName(SERIALIZED_NAME_METAL_LB_CONFIG)
  private BareMetalMetalLbConfig metalLbConfig;

  public static final String SERIALIZED_NAME_PORT_CONFIG = "portConfig";
  @SerializedName(SERIALIZED_NAME_PORT_CONFIG)
  private BareMetalPortConfig portConfig;

  public static final String SERIALIZED_NAME_VIP_CONFIG = "vipConfig";
  @SerializedName(SERIALIZED_NAME_VIP_CONFIG)
  private BareMetalVipConfig vipConfig;

  public BareMetalLoadBalancerConfig() {
  }

  public BareMetalLoadBalancerConfig bgpLbConfig(BareMetalBgpLbConfig bgpLbConfig) {
    this.bgpLbConfig = bgpLbConfig;
    return this;
  }

  /**
   * Get bgpLbConfig
   * @return bgpLbConfig
   */
  @javax.annotation.Nullable
  public BareMetalBgpLbConfig getBgpLbConfig() {
    return bgpLbConfig;
  }

  public void setBgpLbConfig(BareMetalBgpLbConfig bgpLbConfig) {
    this.bgpLbConfig = bgpLbConfig;
  }


  public BareMetalLoadBalancerConfig manualLbConfig(BareMetalManualLbConfig manualLbConfig) {
    this.manualLbConfig = manualLbConfig;
    return this;
  }

  /**
   * Get manualLbConfig
   * @return manualLbConfig
   */
  @javax.annotation.Nullable
  public BareMetalManualLbConfig getManualLbConfig() {
    return manualLbConfig;
  }

  public void setManualLbConfig(BareMetalManualLbConfig manualLbConfig) {
    this.manualLbConfig = manualLbConfig;
  }


  public BareMetalLoadBalancerConfig metalLbConfig(BareMetalMetalLbConfig metalLbConfig) {
    this.metalLbConfig = metalLbConfig;
    return this;
  }

  /**
   * Get metalLbConfig
   * @return metalLbConfig
   */
  @javax.annotation.Nullable
  public BareMetalMetalLbConfig getMetalLbConfig() {
    return metalLbConfig;
  }

  public void setMetalLbConfig(BareMetalMetalLbConfig metalLbConfig) {
    this.metalLbConfig = metalLbConfig;
  }


  public BareMetalLoadBalancerConfig portConfig(BareMetalPortConfig portConfig) {
    this.portConfig = portConfig;
    return this;
  }

  /**
   * Get portConfig
   * @return portConfig
   */
  @javax.annotation.Nullable
  public BareMetalPortConfig getPortConfig() {
    return portConfig;
  }

  public void setPortConfig(BareMetalPortConfig portConfig) {
    this.portConfig = portConfig;
  }


  public BareMetalLoadBalancerConfig vipConfig(BareMetalVipConfig vipConfig) {
    this.vipConfig = vipConfig;
    return this;
  }

  /**
   * Get vipConfig
   * @return vipConfig
   */
  @javax.annotation.Nullable
  public BareMetalVipConfig getVipConfig() {
    return vipConfig;
  }

  public void setVipConfig(BareMetalVipConfig vipConfig) {
    this.vipConfig = vipConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BareMetalLoadBalancerConfig bareMetalLoadBalancerConfig = (BareMetalLoadBalancerConfig) o;
    return Objects.equals(this.bgpLbConfig, bareMetalLoadBalancerConfig.bgpLbConfig) &&
        Objects.equals(this.manualLbConfig, bareMetalLoadBalancerConfig.manualLbConfig) &&
        Objects.equals(this.metalLbConfig, bareMetalLoadBalancerConfig.metalLbConfig) &&
        Objects.equals(this.portConfig, bareMetalLoadBalancerConfig.portConfig) &&
        Objects.equals(this.vipConfig, bareMetalLoadBalancerConfig.vipConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bgpLbConfig, manualLbConfig, metalLbConfig, portConfig, vipConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BareMetalLoadBalancerConfig {\n");
    sb.append("    bgpLbConfig: ").append(toIndentedString(bgpLbConfig)).append("\n");
    sb.append("    manualLbConfig: ").append(toIndentedString(manualLbConfig)).append("\n");
    sb.append("    metalLbConfig: ").append(toIndentedString(metalLbConfig)).append("\n");
    sb.append("    portConfig: ").append(toIndentedString(portConfig)).append("\n");
    sb.append("    vipConfig: ").append(toIndentedString(vipConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bgpLbConfig");
    openapiFields.add("manualLbConfig");
    openapiFields.add("metalLbConfig");
    openapiFields.add("portConfig");
    openapiFields.add("vipConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BareMetalLoadBalancerConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BareMetalLoadBalancerConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BareMetalLoadBalancerConfig is not found in the empty JSON string", BareMetalLoadBalancerConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BareMetalLoadBalancerConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BareMetalLoadBalancerConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bgpLbConfig`
      if (jsonObj.get("bgpLbConfig") != null && !jsonObj.get("bgpLbConfig").isJsonNull()) {
        BareMetalBgpLbConfig.validateJsonElement(jsonObj.get("bgpLbConfig"));
      }
      // validate the optional field `manualLbConfig`
      if (jsonObj.get("manualLbConfig") != null && !jsonObj.get("manualLbConfig").isJsonNull()) {
        BareMetalManualLbConfig.validateJsonElement(jsonObj.get("manualLbConfig"));
      }
      // validate the optional field `metalLbConfig`
      if (jsonObj.get("metalLbConfig") != null && !jsonObj.get("metalLbConfig").isJsonNull()) {
        BareMetalMetalLbConfig.validateJsonElement(jsonObj.get("metalLbConfig"));
      }
      // validate the optional field `portConfig`
      if (jsonObj.get("portConfig") != null && !jsonObj.get("portConfig").isJsonNull()) {
        BareMetalPortConfig.validateJsonElement(jsonObj.get("portConfig"));
      }
      // validate the optional field `vipConfig`
      if (jsonObj.get("vipConfig") != null && !jsonObj.get("vipConfig").isJsonNull()) {
        BareMetalVipConfig.validateJsonElement(jsonObj.get("vipConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BareMetalLoadBalancerConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BareMetalLoadBalancerConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BareMetalLoadBalancerConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BareMetalLoadBalancerConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<BareMetalLoadBalancerConfig>() {
           @Override
           public void write(JsonWriter out, BareMetalLoadBalancerConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BareMetalLoadBalancerConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BareMetalLoadBalancerConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BareMetalLoadBalancerConfig
   * @throws IOException if the JSON string is invalid with respect to BareMetalLoadBalancerConfig
   */
  public static BareMetalLoadBalancerConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BareMetalLoadBalancerConfig.class);
  }

  /**
   * Convert an instance of BareMetalLoadBalancerConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

