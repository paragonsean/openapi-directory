/*
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BareMetalAdminCluster;
import org.openapitools.client.model.BareMetalCluster;
import org.openapitools.client.model.BareMetalNodePool;
import org.openapitools.client.model.EnrollBareMetalAdminClusterRequest;
import org.openapitools.client.model.EnrollBareMetalClusterRequest;
import org.openapitools.client.model.EnrollBareMetalNodePoolRequest;
import org.openapitools.client.model.EnrollVmwareAdminClusterRequest;
import org.openapitools.client.model.EnrollVmwareClusterRequest;
import org.openapitools.client.model.EnrollVmwareNodePoolRequest;
import org.openapitools.client.model.ListBareMetalAdminClustersResponse;
import org.openapitools.client.model.ListBareMetalClustersResponse;
import org.openapitools.client.model.ListBareMetalNodePoolsResponse;
import org.openapitools.client.model.ListLocationsResponse;
import org.openapitools.client.model.ListOperationsResponse;
import org.openapitools.client.model.ListVmwareAdminClustersResponse;
import org.openapitools.client.model.ListVmwareClustersResponse;
import org.openapitools.client.model.ListVmwareNodePoolsResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.Policy;
import org.openapitools.client.model.QueryBareMetalAdminVersionConfigResponse;
import org.openapitools.client.model.QueryBareMetalVersionConfigResponse;
import org.openapitools.client.model.QueryVmwareVersionConfigResponse;
import org.openapitools.client.model.SetIamPolicyRequest;
import org.openapitools.client.model.TestIamPermissionsRequest;
import org.openapitools.client.model.TestIamPermissionsResponse;
import org.openapitools.client.model.VmwareCluster;
import org.openapitools.client.model.VmwareNodePool;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates a new bare metal admin cluster in a given project and location. The API needs to be combined with creating a bootstrap cluster to work. See: https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalAdminClustersCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String bareMetalAdminClusterId = null;
        Boolean validateOnly = null;
        BareMetalAdminCluster bareMetalAdminCluster = null;
        Operation response = api.gkeonpremProjectsLocationsBareMetalAdminClustersCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, bareMetalAdminClusterId, validateOnly, bareMetalAdminCluster);
        // TODO: test validations
    }

    /**
     * Enrolls an existing bare metal admin cluster to the Anthos On-Prem API within a given project and location. Through enrollment, an existing admin cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster will be expected to be performed through the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalAdminClustersEnrollTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        EnrollBareMetalAdminClusterRequest enrollBareMetalAdminClusterRequest = null;
        Operation response = api.gkeonpremProjectsLocationsBareMetalAdminClustersEnroll(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, enrollBareMetalAdminClusterRequest);
        // TODO: test validations
    }

    /**
     * Lists bare metal admin clusters in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalAdminClustersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        ListBareMetalAdminClustersResponse response = api.gkeonpremProjectsLocationsBareMetalAdminClustersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Queries the bare metal admin cluster version config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalAdminClustersQueryVersionConfigTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String upgradeConfigClusterName = null;
        QueryBareMetalAdminVersionConfigResponse response = api.gkeonpremProjectsLocationsBareMetalAdminClustersQueryVersionConfig(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, upgradeConfigClusterName);
        // TODO: test validations
    }

    /**
     * Creates a new bare metal node pool in a given project, location and Bare Metal cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalClustersBareMetalNodePoolsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String bareMetalNodePoolId = null;
        Boolean validateOnly = null;
        BareMetalNodePool bareMetalNodePool = null;
        Operation response = api.gkeonpremProjectsLocationsBareMetalClustersBareMetalNodePoolsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, bareMetalNodePoolId, validateOnly, bareMetalNodePool);
        // TODO: test validations
    }

    /**
     * Enrolls an existing bare metal node pool to the Anthos On-Prem API within a given project and location. Through enrollment, an existing node pool will become Anthos On-Prem API managed. The corresponding GCP resources will be created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalClustersBareMetalNodePoolsEnrollTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        EnrollBareMetalNodePoolRequest enrollBareMetalNodePoolRequest = null;
        Operation response = api.gkeonpremProjectsLocationsBareMetalClustersBareMetalNodePoolsEnroll(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, enrollBareMetalNodePoolRequest);
        // TODO: test validations
    }

    /**
     * Lists bare metal node pools in a given project, location and bare metal cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalClustersBareMetalNodePoolsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        ListBareMetalNodePoolsResponse response = api.gkeonpremProjectsLocationsBareMetalClustersBareMetalNodePoolsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Creates a new bare metal cluster in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalClustersCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String bareMetalClusterId = null;
        Boolean validateOnly = null;
        BareMetalCluster bareMetalCluster = null;
        Operation response = api.gkeonpremProjectsLocationsBareMetalClustersCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, bareMetalClusterId, validateOnly, bareMetalCluster);
        // TODO: test validations
    }

    /**
     * Enrolls an existing bare metal user cluster and its node pools to the Anthos On-Prem API within a given project and location. Through enrollment, an existing cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster and/or its node pools will be expected to be performed through the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalClustersEnrollTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        EnrollBareMetalClusterRequest enrollBareMetalClusterRequest = null;
        Operation response = api.gkeonpremProjectsLocationsBareMetalClustersEnroll(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, enrollBareMetalClusterRequest);
        // TODO: test validations
    }

    /**
     * Lists bare metal clusters in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalClustersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        ListBareMetalClustersResponse response = api.gkeonpremProjectsLocationsBareMetalClustersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Queries the bare metal user cluster version config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsBareMetalClustersQueryVersionConfigTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String createConfigAdminClusterMembership = null;
        String createConfigAdminClusterName = null;
        String upgradeConfigClusterName = null;
        QueryBareMetalVersionConfigResponse response = api.gkeonpremProjectsLocationsBareMetalClustersQueryVersionConfig(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, createConfigAdminClusterMembership, createConfigAdminClusterName, upgradeConfigClusterName);
        // TODO: test validations
    }

    /**
     * Lists information about the supported locations for this service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ListLocationsResponse response = api.gkeonpremProjectsLocationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to &#x60;Code.CANCELLED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsOperationsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.gkeonpremProjectsLocationsOperationsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Enrolls an existing VMware admin cluster to the Anthos On-Prem API within a given project and location. Through enrollment, an existing admin cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster will be expected to be performed through the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareAdminClustersEnrollTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        EnrollVmwareAdminClusterRequest enrollVmwareAdminClusterRequest = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareAdminClustersEnroll(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, enrollVmwareAdminClusterRequest);
        // TODO: test validations
    }

    /**
     * Lists VMware admin clusters in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareAdminClustersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        ListVmwareAdminClustersResponse response = api.gkeonpremProjectsLocationsVmwareAdminClustersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Creates a new VMware user cluster in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        String vmwareClusterId = null;
        VmwareCluster vmwareCluster = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, vmwareClusterId, vmwareCluster);
        // TODO: test validations
    }

    /**
     * Enrolls an existing VMware user cluster and its node pools to the Anthos On-Prem API within a given project and location. Through enrollment, an existing cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster and/or its node pools will be expected to be performed through the API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersEnrollTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        EnrollVmwareClusterRequest enrollVmwareClusterRequest = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersEnroll(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, enrollVmwareClusterRequest);
        // TODO: test validations
    }

    /**
     * Lists VMware Clusters in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        ListVmwareClustersResponse response = api.gkeonpremProjectsLocationsVmwareClustersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Queries the VMware user cluster version config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersQueryVersionConfigTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String createConfigAdminClusterMembership = null;
        String createConfigAdminClusterName = null;
        String upgradeConfigClusterName = null;
        QueryVmwareVersionConfigResponse response = api.gkeonpremProjectsLocationsVmwareClustersQueryVersionConfig(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, createConfigAdminClusterMembership, createConfigAdminClusterName, upgradeConfigClusterName);
        // TODO: test validations
    }

    /**
     * Creates a new VMware node pool in a given project, location and VMWare cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        String vmwareNodePoolId = null;
        VmwareNodePool vmwareNodePool = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, vmwareNodePoolId, vmwareNodePool);
        // TODO: test validations
    }

    /**
     * Deletes a single VMware node pool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean allowMissing = null;
        String etag = null;
        Boolean ignoreErrors = null;
        Boolean validateOnly = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, allowMissing, etag, ignoreErrors, validateOnly);
        // TODO: test validations
    }

    /**
     * Enrolls a VMware node pool to Anthos On-Prem API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsEnrollTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        EnrollVmwareNodePoolRequest enrollVmwareNodePoolRequest = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsEnroll(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, enrollVmwareNodePoolRequest);
        // TODO: test validations
    }

    /**
     * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsGetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer optionsRequestedPolicyVersion = null;
        Policy response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsGetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, optionsRequestedPolicyVersion);
        // TODO: test validations
    }

    /**
     * Lists VMware node pools in a given project, location and VMWare cluster.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        ListVmwareNodePoolsResponse response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsOperationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String view = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsOperationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, view);
        // TODO: test validations
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns &#x60;UNIMPLEMENTED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsOperationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ListOperationsResponse response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsOperationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates the parameters of a single VMware node pool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        Boolean validateOnly = null;
        VmwareNodePool vmwareNodePool = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, validateOnly, vmwareNodePool);
        // TODO: test validations
    }

    /**
     * Sets the access control policy on the specified resource. Replaces any existing policy. Can return &#x60;NOT_FOUND&#x60;, &#x60;INVALID_ARGUMENT&#x60;, and &#x60;PERMISSION_DENIED&#x60; errors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsSetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SetIamPolicyRequest setIamPolicyRequest = null;
        Policy response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsSetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, setIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a &#x60;NOT_FOUND&#x60; error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \&quot;fail open\&quot; without warning.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsTestIamPermissionsTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TestIamPermissionsRequest testIamPermissionsRequest = null;
        TestIamPermissionsResponse response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsTestIamPermissions(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, testIamPermissionsRequest);
        // TODO: test validations
    }

    /**
     * Unenrolls a VMware node pool to Anthos On-Prem API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsUnenrollTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean allowMissing = null;
        String etag = null;
        Boolean validateOnly = null;
        Operation response = api.gkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsUnenroll(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, allowMissing, etag, validateOnly);
        // TODO: test validations
    }

}
