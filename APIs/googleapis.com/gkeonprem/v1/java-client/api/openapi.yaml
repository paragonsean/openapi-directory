openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Anthos On-Prem API
  version: v1
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://gkeonprem.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: gkeonprem
externalDocs:
  url: https://cloud.google.com/anthos/clusters/docs/on-prem/
servers:
- url: https://gkeonprem.googleapis.com/
tags:
- name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the node pool to delete. Format: projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, and the VMware node pool is not found, the request\
          \ will succeed but no action will be taken on the server and return a completed\
          \ LRO."
        explode: true
        in: query
        name: allowMissing
        required: false
        schema:
          type: boolean
        style: form
      - description: "The current etag of the VmwareNodePool. If an etag is provided\
          \ and does not match the current etag of the node pool, deletion will be\
          \ blocked and an ABORTED error will be returned."
        explode: true
        in: query
        name: etag
        required: false
        schema:
          type: string
        style: form
      - description: "If set to true, the deletion of a VMware node pool resource\
          \ will succeed even if errors occur during deletion. This parameter can\
          \ be used when you want to delete GCP's node pool resource and you've already\
          \ deleted the on-prem admin cluster that hosted your node pool. WARNING:\
          \ Using this parameter when your user cluster still exists may result in\
          \ a deleted GCP node pool but an existing on-prem node pool."
        explode: true
        in: query
        name: ignoreErrors
        required: false
        schema:
          type: boolean
        style: form
      - description: "If set, only validate the request, but do not actually delete\
          \ the node pool."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    get:
      description: Gets the latest state of a long-running operation. Clients can
        use this method to poll the operation result at intervals as recommended by
        the API service.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "View for VMware node pool. When `BASIC` is specified, only the\
          \ node pool resource name is returned. The default/unset value `NODE_POOL_VIEW_UNSPECIFIED`\
          \ is the same as `FULL', which returns the complete node pool configuration\
          \ details."
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - NODE_POOL_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    patch:
      description: Updates the parameters of a single VMware node pool.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Immutable. The resource name of this node pool.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. Field mask is used to specify the fields to be overwritten\
          \ in the VMwareNodePool resource by the update. The fields specified in\
          \ the update_mask are relative to the resource, not the full request. A\
          \ field will be overwritten if it is in the mask. If the user does not provide\
          \ a mask then all populated fields in the VMwareNodePool message will be\
          \ updated. Empty fields will be ignored unless a field mask is used."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      - description: Validate the request without actually doing any updates.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareNodePool'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkeonprem.projects.locations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The resource that owns the locations collection, if applicable."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A filter to narrow down results to a preferred subset. The filtering\
          \ language accepts strings like `\"displayName=tokyo\"`, and is documented\
          \ in more detail in [AIP-160](https://google.aip.dev/160)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return. If not set, the service\
          \ selects a default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A page token received from the `next_page_token` field in the
          response. Send that page token to receive the subsequent page.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{name}/operations:
    get:
      description: "Lists operations that match the specified filter in the request.\
        \ If the server doesn't support this method, it returns `UNIMPLEMENTED`."
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation's parent resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The standard list filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The standard list page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: The standard list page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{name}:cancel:
    post:
      description: "Starts asynchronous cancellation on a long-running operation.\
        \ The server makes a best effort to cancel the operation, but success is not\
        \ guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.\
        \ Clients can use Operations.GetOperation or other methods to check whether\
        \ the cancellation succeeded or whether the operation completed despite cancellation.\
        \ On successful cancellation, the operation is not deleted; instead, it becomes\
        \ an operation with an Operation.error value with a google.rpc.Status.code\
        \ of 1, corresponding to `Code.CANCELLED`."
      operationId: gkeonprem.projects.locations.operations.cancel
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be cancelled.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{name}:unenroll:
    delete:
      description: Unenrolls a VMware node pool to Anthos On-Prem API
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.unenroll
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the node pool to unenroll. Format: projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, and the VMware node pool is not found, the request\
          \ will succeed but no action will be taken on the server and return a completed\
          \ LRO."
        explode: true
        in: query
        name: allowMissing
        required: false
        schema:
          type: boolean
        style: form
      - description: "The current etag of the VMware node pool. If an etag is provided\
          \ and does not match the current etag of node pool, deletion will be blocked\
          \ and an ABORTED error will be returned."
        explode: true
        in: query
        name: etag
        required: false
        schema:
          type: string
        style: form
      - description: "If set, only validate the request, but do not actually unenroll\
          \ the node pool."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalAdminClusters:
    get:
      description: Lists bare metal admin clusters in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the clusters\
          \ are listed in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Requested page size. Server may return fewer items than requested.\
          \ If unspecified, at most 50 clusters will be returned. The maximum value\
          \ is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token identifying a page of results the server should return.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "View for bare metal admin clusters. When `BASIC` is specified,\
          \ only the admin cluster resource name and membership are returned. The\
          \ default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL',\
          \ which returns the complete admin cluster configuration details."
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - CLUSTER_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalAdminClustersResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: "Creates a new bare metal admin cluster in a given project and\
        \ location. The API needs to be combined with creating a bootstrap cluster\
        \ to work. See: https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment"
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the cluster\
          \ is created in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. User provided identifier that is used as part of the\
          \ resource name; must conform to RFC-1034 and additionally restrict to lower-cased\
          \ letters. This comes out roughly to: /^a-z+[a-z0-9]$/"
        explode: true
        in: query
        name: bareMetalAdminClusterId
        required: false
        schema:
          type: string
        style: form
      - description: Validate the request without actually doing any updates.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalAdminCluster'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalAdminClusters:enroll:
    post:
      description: "Enrolls an existing bare metal admin cluster to the Anthos On-Prem\
        \ API within a given project and location. Through enrollment, an existing\
        \ admin cluster will become Anthos On-Prem API managed. The corresponding\
        \ GCP resources will be created and all future modifications to the cluster\
        \ will be expected to be performed through the API."
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.enroll
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the cluster\
          \ is enrolled in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalAdminClusterRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalAdminClusters:queryVersionConfig:
    post:
      description: Queries the bare metal admin cluster version config.
      operationId: gkeonprem.projects.locations.bareMetalAdminClusters.queryVersionConfig
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location to query for\
          \ version config. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The admin cluster resource name. This is the full resource name\
          \ of the admin cluster resource. Format: \"projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}\""
        explode: true
        in: query
        name: upgradeConfig.clusterName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBareMetalAdminVersionConfigResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalClusters:
    get:
      description: Lists bare metal clusters in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalClusters.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the clusters\
          \ are listed in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "A resource filtering expression following https://google.aip.dev/160.\
          \ When non-empty, only resource's whose attributes field matches the filter\
          \ are returned."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Requested page size. Server may return fewer items than requested.\
          \ If unspecified, at most 50 clusters will be returned. The maximum value\
          \ is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token identifying a page of results the server should return.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "View for bare metal Clusters. When `BASIC` is specified, only\
          \ the cluster resource name and admin cluster membership are returned. The\
          \ default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL',\
          \ which returns the complete cluster configuration details."
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - CLUSTER_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalClustersResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: Creates a new bare metal cluster in a given project and location.
      operationId: gkeonprem.projects.locations.bareMetalClusters.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the cluster\
          \ is created in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. User provided identifier that is used as part of the\
          \ resource name; must conform to RFC-1034 and additionally restrict to lower-cased\
          \ letters. This comes out roughly to: /^a-z+[a-z0-9]$/"
        explode: true
        in: query
        name: bareMetalClusterId
        required: false
        schema:
          type: string
        style: form
      - description: Validate the request without actually doing any updates.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalCluster'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalClusters:enroll:
    post:
      description: "Enrolls an existing bare metal user cluster and its node pools\
        \ to the Anthos On-Prem API within a given project and location. Through enrollment,\
        \ an existing cluster will become Anthos On-Prem API managed. The corresponding\
        \ GCP resources will be created and all future modifications to the cluster\
        \ and/or its node pools will be expected to be performed through the API."
      operationId: gkeonprem.projects.locations.bareMetalClusters.enroll
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the cluster\
          \ is enrolled in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalClusterRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalClusters:queryVersionConfig:
    post:
      description: Queries the bare metal user cluster version config.
      operationId: gkeonprem.projects.locations.bareMetalClusters.queryVersionConfig
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location to query for\
          \ version config. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The admin cluster membership. This is the full resource name\
          \ of the admin cluster's fleet membership. Format: \"projects/{project}/locations/{location}/memberships/{membership}\""
        explode: true
        in: query
        name: createConfig.adminClusterMembership
        required: false
        schema:
          type: string
        style: form
      - description: "The admin cluster resource name. This is the full resource name\
          \ of the admin cluster resource. Format: \"projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}\""
        explode: true
        in: query
        name: createConfig.adminClusterName
        required: false
        schema:
          type: string
        style: form
      - description: "The user cluster resource name. This is the full resource name\
          \ of the user cluster resource. Format: \"projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}\""
        explode: true
        in: query
        name: upgradeConfig.clusterName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBareMetalVersionConfigResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalNodePools:
    get:
      description: "Lists bare metal node pools in a given project, location and bare\
        \ metal cluster."
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent, which owns this collection of node pools.\
          \ Format: projects/{project}/locations/{location}/bareMetalClusters/{bareMetalCluster}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of node pools to return. The service may\
          \ return fewer than this value. If unspecified, at most 50 node pools will\
          \ be returned. The maximum value is 1000; values above 1000 will be coerced\
          \ to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A page token, received from a previous `ListBareMetalNodePools`\
          \ call. Provide this to retrieve the subsequent page. When paginating, all\
          \ other parameters provided to `ListBareMetalNodePools` must match the call\
          \ that provided the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "View for bare metal node pools. When `BASIC` is specified, only\
          \ the node pool resource name is returned. The default/unset value `NODE_POOL_VIEW_UNSPECIFIED`\
          \ is the same as `FULL', which returns the complete node pool configuration\
          \ details."
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - NODE_POOL_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBareMetalNodePoolsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: "Creates a new bare metal node pool in a given project, location\
        \ and Bare Metal cluster."
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent resource where this node pool will be created.\
          \ projects/{project}/locations/{location}/bareMetalClusters/{cluster}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The ID to use for the node pool, which will become the final\
          \ component of the node pool's resource name. This value must be up to 63\
          \ characters, and valid characters are /a-z-/. The value must not be permitted\
          \ to be a UUID (or UUID-like: anything matching /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i)."
        explode: true
        in: query
        name: bareMetalNodePoolId
        required: false
        schema:
          type: string
        style: form
      - description: "If set, only validate the request, but do not actually create\
          \ the node pool."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalNodePool'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/bareMetalNodePools:enroll:
    post:
      description: "Enrolls an existing bare metal node pool to the Anthos On-Prem\
        \ API within a given project and location. Through enrollment, an existing\
        \ node pool will become Anthos On-Prem API managed. The corresponding GCP\
        \ resources will be created."
      operationId: gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.enroll
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent resource where this node pool will be created.\
          \ projects/{project}/locations/{location}/bareMetalClusters/{cluster}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollBareMetalNodePoolRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/vmwareAdminClusters:
    get:
      description: Lists VMware admin clusters in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the clusters\
          \ are listed in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Requested page size. Server may return fewer items than requested.\
          \ If unspecified, at most 50 clusters will be returned. The maximum value\
          \ is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token identifying a page of results the server should return.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "View for VMware admin clusters. When `BASIC` is specified, only\
          \ the admin cluster resource name and membership are returned. The default/unset\
          \ value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns\
          \ the complete admin cluster configuration details."
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - CLUSTER_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareAdminClustersResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/vmwareAdminClusters:enroll:
    post:
      description: "Enrolls an existing VMware admin cluster to the Anthos On-Prem\
        \ API within a given project and location. Through enrollment, an existing\
        \ admin cluster will become Anthos On-Prem API managed. The corresponding\
        \ GCP resources will be created and all future modifications to the cluster\
        \ will be expected to be performed through the API."
      operationId: gkeonprem.projects.locations.vmwareAdminClusters.enroll
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the cluster\
          \ is enrolled in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareAdminClusterRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/vmwareClusters:
    get:
      description: Lists VMware Clusters in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareClusters.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the clusters\
          \ are listed in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "A resource filtering expression following https://google.aip.dev/160.\
          \ When non-empty, only resource's whose attributes field matches the filter\
          \ are returned."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Requested page size. Server may return fewer items than requested.\
          \ If unspecified, at most 50 clusters will be returned. The maximum value\
          \ is 1000; values above 1000 will be coerced to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token identifying a page of results the server should return.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "View for VMware clusters. When `BASIC` is specified, only the\
          \ cluster resource name and admin cluster membership are returned. The default/unset\
          \ value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns\
          \ the complete cluster configuration details."
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - CLUSTER_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareClustersResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: Creates a new VMware user cluster in a given project and location.
      operationId: gkeonprem.projects.locations.vmwareClusters.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where this\
          \ cluster is created in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Validate the request without actually doing any updates.
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      - description: User provided identifier that is used as part of the resource
          name; This value must be up to 40 characters and follow RFC-1123 (https://tools.ietf.org/html/rfc1123)
          format.
        explode: true
        in: query
        name: vmwareClusterId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareCluster'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/vmwareClusters:enroll:
    post:
      description: "Enrolls an existing VMware user cluster and its node pools to\
        \ the Anthos On-Prem API within a given project and location. Through enrollment,\
        \ an existing cluster will become Anthos On-Prem API managed. The corresponding\
        \ GCP resources will be created and all future modifications to the cluster\
        \ and/or its node pools will be expected to be performed through the API."
      operationId: gkeonprem.projects.locations.vmwareClusters.enroll
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location where the cluster\
          \ is Enrolled in. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareClusterRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/vmwareClusters:queryVersionConfig:
    post:
      description: Queries the VMware user cluster version config.
      operationId: gkeonprem.projects.locations.vmwareClusters.queryVersionConfig
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent of the project and location to query for\
          \ version config. Format: \"projects/{project}/locations/{location}\""
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The admin cluster membership. This is the full resource name\
          \ of the admin cluster's fleet membership. Format: \"projects/{project}/locations/{location}/memberships/{membership}\""
        explode: true
        in: query
        name: createConfig.adminClusterMembership
        required: false
        schema:
          type: string
        style: form
      - description: "The admin cluster resource name. This is the full resource name\
          \ of the admin cluster resource. Format: \"projects/{project}/locations/{location}/vmwareAdminClusters/{vmware_admin_cluster}\""
        explode: true
        in: query
        name: createConfig.adminClusterName
        required: false
        schema:
          type: string
        style: form
      - description: "The user cluster resource name. This is the full resource name\
          \ of the user cluster resource. Format: \"projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}\""
        explode: true
        in: query
        name: upgradeConfig.clusterName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryVmwareVersionConfigResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{parent}/vmwareNodePools:
    get:
      description: "Lists VMware node pools in a given project, location and VMWare\
        \ cluster."
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent, which owns this collection of node pools.\
          \ Format: projects/{project}/locations/{location}/vmwareClusters/{vmwareCluster}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of node pools to return. The service may\
          \ return fewer than this value. If unspecified, at most 50 node pools will\
          \ be returned. The maximum value is 1000; values above 1000 will be coerced\
          \ to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A page token, received from a previous `ListVmwareNodePools`\
          \ call. Provide this to retrieve the subsequent page. When paginating, all\
          \ other parameters provided to `ListVmwareNodePools` must match the call\
          \ that provided the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "View for VMware node pools. When `BASIC` is specified, only\
          \ the node pool resource name is returned. The default/unset value `NODE_POOL_VIEW_UNSPECIFIED`\
          \ is the same as `FULL', which returns the complete node pool configuration\
          \ details."
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - NODE_POOL_VIEW_UNSPECIFIED
          - BASIC
          - FULL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVmwareNodePoolsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: "Creates a new VMware node pool in a given project, location and\
        \ VMWare cluster."
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent resource where this node pool will be created.\
          \ projects/{project}/locations/{location}/vmwareClusters/{cluster}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "If set, only validate the request, but do not actually create\
          \ the node pool."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      - description: "The ID to use for the node pool, which will become the final\
          \ component of the node pool's resource name. This value must be up to 40\
          \ characters and follow RFC-1123 (https://tools.ietf.org/html/rfc1123) format.\
          \ The value must not be permitted to be a UUID (or UUID-like: anything matching\
          \ /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i)."
        explode: true
        in: query
        name: vmwareNodePoolId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareNodePool'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}/vmwareNodePools:enroll:
    post:
      description: Enrolls a VMware node pool to Anthos On-Prem API
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.enroll
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The parent resource where the node pool is enrolled
          in.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollVmwareNodePoolRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty
        policy if the resource exists and does not have a policy set.
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.getIamPolicy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being requested.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. The maximum policy version that will be used to format\
          \ the policy. Valid values are 0, 1, and 3. Requests specifying an invalid\
          \ value will be rejected. Requests for policies with any conditional role\
          \ bindings must specify version 3. Policies with no conditional role bindings\
          \ may specify any valid value or leave the field unset. The policy in the\
          \ response might use the policy version that you specified, or it might\
          \ use a lower policy version. For example, if you specify version 3, but\
          \ the policy has no conditional role bindings, the response uses version\
          \ 1. To learn which resources support conditions in their IAM policies,\
          \ see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        explode: true
        in: query
        name: options.requestedPolicyVersion
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{resource}:setIamPolicy:
    post:
      description: "Sets the access control policy on the specified resource. Replaces\
        \ any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\
        \ errors."
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.setIamPolicy
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy is being specified.\
          \ See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{resource}:testIamPermissions:
    post:
      description: "Returns permissions that a caller has on the specified resource.\
        \ If the resource does not exist, this will return an empty set of permissions,\
        \ not a `NOT_FOUND` error. Note: This operation is designed to be used for\
        \ building permission-aware UIs and command-line tools, not for authorization\
        \ checking. This operation may \"fail open\" without warning."
      operationId: gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.testIamPermissions
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "REQUIRED: The resource for which the policy detail is being\
          \ requested. See [Resource names](https://cloud.google.com/apis/design/resource_names)\
          \ for the appropriate value for this field."
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Authorization:
      description: Authorization defines the On-Prem cluster authorization configuration
        to bootstrap onto the admin cluster.
      example:
        adminUsers:
        - username: username
        - username: username
      properties:
        adminUsers:
          description: "For VMware and bare metal user clusters, users will be granted\
            \ the cluster-admin role on the cluster, which provides full administrative\
            \ access to the cluster. For bare metal admin clusters, users will be\
            \ granted the cluster-view role, which limits users to read-only access."
          items:
            $ref: '#/components/schemas/ClusterUser'
          type: array
      type: object
    BareMetalAdminApiServerArgument:
      description: "BareMetalAdminApiServerArgument represents an arg name->value\
        \ pair. Only a subset of customized flags are supported. Please refer to the\
        \ API server documentation below to know the exact format: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/"
      example:
        argument: argument
        value: value
      properties:
        argument:
          description: Required. The argument name as it appears on the API Server
            command line please make sure to remove the leading dashes.
          type: string
        value:
          description: Required. The value of the arg as it will be passed to the
            API Server command line.
          type: string
      type: object
    BareMetalAdminCluster:
      description: Resource that represents a bare metal admin cluster.
      example:
        fleet:
          membership: membership
        clusterOperations:
          enableApplicationLogs: true
        annotations:
          key: annotations
        description: description
        reconciling: true
        storage:
          lvpShareConfig:
            sharedPathPvCount: 5
            lvpConfig:
              path: path
              storageClass: storageClass
          lvpNodeMountsConfig:
            path: path
            storageClass: storageClass
        nodeConfig:
          maxPodsPerNode: maxPodsPerNode
        validationCheck:
          scenario: SCENARIO_UNSPECIFIED
          option: OPTIONS_UNSPECIFIED
          status:
            result:
            - reason: reason
              description: description
              details: details
              state: STATE_UNKNOWN
              category: category
            - reason: reason
              description: description
              details: details
              state: STATE_UNKNOWN
              category: category
        maintenanceStatus:
          machineDrainStatus:
            drainedMachines:
            - nodeIp: nodeIp
            - nodeIp: nodeIp
            drainingMachines:
            - nodeIp: nodeIp
              podCount: 5
            - nodeIp: nodeIp
              podCount: 5
        uid: uid
        endpoint: endpoint
        maintenanceConfig:
          maintenanceAddressCidrBlocks:
          - maintenanceAddressCidrBlocks
          - maintenanceAddressCidrBlocks
        controlPlane:
          apiServerArgs:
          - argument: argument
            value: value
          - argument: argument
            value: value
          controlPlaneNodePoolConfig:
            nodePoolConfig:
              kubeletConfig:
                registryBurst: 0
                registryPullQps: 6
                serializeImagePullsDisabled: true
              nodeConfigs:
              - nodeIp: nodeIp
                labels:
                  key: labels
              - nodeIp: nodeIp
                labels:
                  key: labels
              taints:
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
              labels:
                key: labels
        loadBalancer:
          portConfig:
            controlPlaneLoadBalancerPort: 1
          vipConfig:
            controlPlaneVip: controlPlaneVip
          manualLbConfig:
            enabled: true
        bareMetalVersion: bareMetalVersion
        state: STATE_UNSPECIFIED
        binaryAuthorization:
          evaluationMode: EVALUATION_MODE_UNSPECIFIED
        nodeAccessConfig:
          loginUser: loginUser
        networkConfig:
          islandModeCidr:
            serviceAddressCidrBlocks:
            - serviceAddressCidrBlocks
            - serviceAddressCidrBlocks
            podAddressCidrBlocks:
            - podAddressCidrBlocks
            - podAddressCidrBlocks
        osEnvironmentConfig:
          packageRepoExcluded: true
        updateTime: updateTime
        localName: localName
        proxy:
          noProxy:
          - noProxy
          - noProxy
          uri: uri
        securityConfig:
          authorization:
            adminUsers:
            - username: username
            - username: username
        createTime: createTime
        deleteTime: deleteTime
        name: name
        etag: etag
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations on the bare metal admin cluster. This field has\
            \ the same restrictions as Kubernetes annotations. The total size of all\
            \ keys and values combined is limited to 256k. Key can have 2 segments:\
            \ prefix (optional) and name (required), separated by a slash (/). Prefix\
            \ must be a DNS subdomain. Name must be 63 characters or less, begin and\
            \ end with alphanumerics, with dashes (-), underscores (_), dots (.),\
            \ and alphanumerics between."
          type: object
        bareMetalVersion:
          description: The Anthos clusters on bare metal version for the bare metal
            admin cluster.
          type: string
        binaryAuthorization:
          $ref: '#/components/schemas/BinaryAuthorization'
        clusterOperations:
          $ref: '#/components/schemas/BareMetalAdminClusterOperationsConfig'
        controlPlane:
          $ref: '#/components/schemas/BareMetalAdminControlPlaneConfig'
        createTime:
          description: Output only. The time at which this bare metal admin cluster
            was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: "Output only. The time at which this bare metal admin cluster\
            \ was deleted. If the resource is not deleted, this must be empty"
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A human readable description of this bare metal admin cluster.
          type: string
        endpoint:
          description: Output only. The IP address name of bare metal admin cluster's
            API server.
          readOnly: true
          type: string
        etag:
          description: "This checksum is computed by the server based on the value\
            \ of other fields, and may be sent on update and delete requests to ensure\
            \ the client has an up-to-date value before proceeding. Allows clients\
            \ to perform consistent read-modify-writes through optimistic concurrency\
            \ control."
          type: string
        fleet:
          $ref: '#/components/schemas/Fleet'
        loadBalancer:
          $ref: '#/components/schemas/BareMetalAdminLoadBalancerConfig'
        localName:
          description: "Output only. The object name of the bare metal cluster custom\
            \ resource. This field is used to support conflicting names when enrolling\
            \ existing clusters to the API. When used as a part of cluster enrollment,\
            \ this field will differ from the ID in the resource name. For new clusters,\
            \ this field will match the user provided cluster name and be visible\
            \ in the last component of the resource name. It is not modifiable. All\
            \ users should use this name to access their cluster using gkectl or kubectl\
            \ and should expect to see the local name when viewing admin cluster controller\
            \ logs."
          readOnly: true
          type: string
        maintenanceConfig:
          $ref: '#/components/schemas/BareMetalAdminMaintenanceConfig'
        maintenanceStatus:
          $ref: '#/components/schemas/BareMetalAdminMaintenanceStatus'
        name:
          description: Immutable. The bare metal admin cluster resource name.
          type: string
        networkConfig:
          $ref: '#/components/schemas/BareMetalAdminNetworkConfig'
        nodeAccessConfig:
          $ref: '#/components/schemas/BareMetalAdminNodeAccessConfig'
        nodeConfig:
          $ref: '#/components/schemas/BareMetalAdminWorkloadNodeConfig'
        osEnvironmentConfig:
          $ref: '#/components/schemas/BareMetalAdminOsEnvironmentConfig'
        proxy:
          $ref: '#/components/schemas/BareMetalAdminProxyConfig'
        reconciling:
          description: "Output only. If set, there are currently changes in flight\
            \ to the bare metal Admin Cluster."
          readOnly: true
          type: boolean
        securityConfig:
          $ref: '#/components/schemas/BareMetalAdminSecurityConfig'
        state:
          description: Output only. The current state of the bare metal admin cluster.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
          - DEGRADED
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
        storage:
          $ref: '#/components/schemas/BareMetalAdminStorageConfig'
        uid:
          description: Output only. The unique identifier of the bare metal admin
            cluster.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which this bare metal admin cluster
            was last updated.
          format: google-datetime
          readOnly: true
          type: string
        validationCheck:
          $ref: '#/components/schemas/ValidationCheck'
      type: object
    BareMetalAdminClusterOperationsConfig:
      description: BareMetalAdminClusterOperationsConfig specifies the admin cluster's
        observability infrastructure.
      example:
        enableApplicationLogs: true
      properties:
        enableApplicationLogs:
          description: Whether collection of application logs/metrics should be enabled
            (in addition to system logs/metrics).
          type: boolean
      type: object
    BareMetalAdminControlPlaneConfig:
      description: BareMetalAdminControlPlaneConfig specifies the control plane configuration.
      example:
        apiServerArgs:
        - argument: argument
          value: value
        - argument: argument
          value: value
        controlPlaneNodePoolConfig:
          nodePoolConfig:
            kubeletConfig:
              registryBurst: 0
              registryPullQps: 6
              serializeImagePullsDisabled: true
            nodeConfigs:
            - nodeIp: nodeIp
              labels:
                key: labels
            - nodeIp: nodeIp
              labels:
                key: labels
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
            labels:
              key: labels
      properties:
        apiServerArgs:
          description: "Customizes the default API server args. Only a subset of customized\
            \ flags are supported. Please refer to the API server documentation below\
            \ to know the exact format: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/"
          items:
            $ref: '#/components/schemas/BareMetalAdminApiServerArgument'
          type: array
        controlPlaneNodePoolConfig:
          $ref: '#/components/schemas/BareMetalAdminControlPlaneNodePoolConfig'
      type: object
    BareMetalAdminControlPlaneNodePoolConfig:
      description: BareMetalAdminControlPlaneNodePoolConfig specifies the control
        plane node pool configuration. We have a control plane specific node pool
        config so that we can flexible about supporting control plane specific fields
        in the future.
      example:
        nodePoolConfig:
          kubeletConfig:
            registryBurst: 0
            registryPullQps: 6
            serializeImagePullsDisabled: true
          nodeConfigs:
          - nodeIp: nodeIp
            labels:
              key: labels
          - nodeIp: nodeIp
            labels:
              key: labels
          taints:
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
          labels:
            key: labels
      properties:
        nodePoolConfig:
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
      type: object
    BareMetalAdminDrainedMachine:
      description: BareMetalAdminDrainedMachine represents the machines that are drained.
      example:
        nodeIp: nodeIp
      properties:
        nodeIp:
          description: Drained machine IP address.
          type: string
      type: object
    BareMetalAdminDrainingMachine:
      description: BareMetalAdminDrainingMachine represents the machines that are
        currently draining.
      example:
        nodeIp: nodeIp
        podCount: 5
      properties:
        nodeIp:
          description: Draining machine IP address.
          type: string
        podCount:
          description: The count of pods yet to drain.
          format: int32
          type: integer
      type: object
    BareMetalAdminIslandModeCidrConfig:
      description: BareMetalAdminIslandModeCidrConfig specifies the cluster CIDR configuration
        while running in island mode.
      example:
        serviceAddressCidrBlocks:
        - serviceAddressCidrBlocks
        - serviceAddressCidrBlocks
        podAddressCidrBlocks:
        - podAddressCidrBlocks
        - podAddressCidrBlocks
      properties:
        podAddressCidrBlocks:
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. This field cannot be changed after creation.
          items:
            type: string
          type: array
        serviceAddressCidrBlocks:
          description: Required. All services in the cluster are assigned an RFC1918
            IPv4 address from these ranges. This field cannot be changed after creation.
          items:
            type: string
          type: array
      type: object
    BareMetalAdminLoadBalancerConfig:
      description: BareMetalAdminLoadBalancerConfig specifies the load balancer configuration.
      example:
        portConfig:
          controlPlaneLoadBalancerPort: 1
        vipConfig:
          controlPlaneVip: controlPlaneVip
        manualLbConfig:
          enabled: true
      properties:
        manualLbConfig:
          $ref: '#/components/schemas/BareMetalAdminManualLbConfig'
        portConfig:
          $ref: '#/components/schemas/BareMetalAdminPortConfig'
        vipConfig:
          $ref: '#/components/schemas/BareMetalAdminVipConfig'
      type: object
    BareMetalAdminMachineDrainStatus:
      description: BareMetalAdminMachineDrainStatus represents the status of bare
        metal node machines that are undergoing drain operations.
      example:
        drainedMachines:
        - nodeIp: nodeIp
        - nodeIp: nodeIp
        drainingMachines:
        - nodeIp: nodeIp
          podCount: 5
        - nodeIp: nodeIp
          podCount: 5
      properties:
        drainedMachines:
          description: The list of drained machines.
          items:
            $ref: '#/components/schemas/BareMetalAdminDrainedMachine'
          type: array
        drainingMachines:
          description: The list of draning machines.
          items:
            $ref: '#/components/schemas/BareMetalAdminDrainingMachine'
          type: array
      type: object
    BareMetalAdminMaintenanceConfig:
      description: BareMetalAdminMaintenanceConfig specifies configurations to put
        bare metal Admin cluster CRs nodes in and out of maintenance.
      example:
        maintenanceAddressCidrBlocks:
        - maintenanceAddressCidrBlocks
        - maintenanceAddressCidrBlocks
      properties:
        maintenanceAddressCidrBlocks:
          description: "Required. All IPv4 address from these ranges will be placed\
            \ into maintenance mode. Nodes in maintenance mode will be cordoned and\
            \ drained. When both of these are true, the \"baremetal.cluster.gke.io/maintenance\"\
            \ annotation will be set on the node resource."
          items:
            type: string
          type: array
      type: object
    BareMetalAdminMaintenanceStatus:
      description: BareMetalAdminMaintenanceStatus represents the maintenance status
        for bare metal Admin cluster CR's nodes.
      example:
        machineDrainStatus:
          drainedMachines:
          - nodeIp: nodeIp
          - nodeIp: nodeIp
          drainingMachines:
          - nodeIp: nodeIp
            podCount: 5
          - nodeIp: nodeIp
            podCount: 5
      properties:
        machineDrainStatus:
          $ref: '#/components/schemas/BareMetalAdminMachineDrainStatus'
      type: object
    BareMetalAdminManualLbConfig:
      description: BareMetalAdminManualLbConfig represents configuration parameters
        for a manual load balancer.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether manual load balancing is enabled.
          type: boolean
      type: object
    BareMetalAdminNetworkConfig:
      description: BareMetalAdminNetworkConfig specifies the cluster network configuration.
      example:
        islandModeCidr:
          serviceAddressCidrBlocks:
          - serviceAddressCidrBlocks
          - serviceAddressCidrBlocks
          podAddressCidrBlocks:
          - podAddressCidrBlocks
          - podAddressCidrBlocks
      properties:
        islandModeCidr:
          $ref: '#/components/schemas/BareMetalAdminIslandModeCidrConfig'
      type: object
    BareMetalAdminNodeAccessConfig:
      description: Specifies the node access related settings for the bare metal admin
        cluster.
      example:
        loginUser: loginUser
      properties:
        loginUser:
          description: Required. LoginUser is the user name used to access node machines.
            It defaults to "root" if not set.
          type: string
      type: object
    BareMetalAdminOsEnvironmentConfig:
      description: Specifies operating system operation settings for cluster provisioning.
      example:
        packageRepoExcluded: true
      properties:
        packageRepoExcluded:
          description: Whether the package repo should be added when initializing
            bare metal machines.
          type: boolean
      type: object
    BareMetalAdminPortConfig:
      description: BareMetalAdminPortConfig is the specification of load balancer
        ports.
      example:
        controlPlaneLoadBalancerPort: 1
      properties:
        controlPlaneLoadBalancerPort:
          description: The port that control plane hosted load balancers will listen
            on.
          format: int32
          type: integer
      type: object
    BareMetalAdminProxyConfig:
      description: BareMetalAdminProxyConfig specifies the cluster proxy configuration.
      example:
        noProxy:
        - noProxy
        - noProxy
        uri: uri
      properties:
        noProxy:
          description: "A list of IPs, hostnames, and domains that should skip the\
            \ proxy. Examples: [\"127.0.0.1\", \"example.com\", \".corp\", \"localhost\"\
            ]."
          items:
            type: string
          type: array
        uri:
          description: "Required. Specifies the address of your proxy server. Examples:\
            \ `http://domain` WARNING: Do not provide credentials in the format `http://(username:password@)domain`\
            \ these will be rejected by the server."
          type: string
      type: object
    BareMetalAdminSecurityConfig:
      description: Specifies the security related settings for the bare metal admin
        cluster.
      example:
        authorization:
          adminUsers:
          - username: username
          - username: username
      properties:
        authorization:
          $ref: '#/components/schemas/Authorization'
      type: object
    BareMetalAdminStorageConfig:
      description: BareMetalAdminStorageConfig specifies the cluster storage configuration.
      example:
        lvpShareConfig:
          sharedPathPvCount: 5
          lvpConfig:
            path: path
            storageClass: storageClass
        lvpNodeMountsConfig:
          path: path
          storageClass: storageClass
      properties:
        lvpNodeMountsConfig:
          $ref: '#/components/schemas/BareMetalLvpConfig'
        lvpShareConfig:
          $ref: '#/components/schemas/BareMetalLvpShareConfig'
      type: object
    BareMetalAdminVipConfig:
      description: BareMetalAdminVipConfig for bare metal load balancer configurations.
      example:
        controlPlaneVip: controlPlaneVip
      properties:
        controlPlaneVip:
          description: The VIP which you previously set aside for the Kubernetes API
            of this bare metal admin cluster.
          type: string
      type: object
    BareMetalAdminWorkloadNodeConfig:
      description: BareMetalAdminWorkloadNodeConfig specifies the workload node configurations.
      example:
        maxPodsPerNode: maxPodsPerNode
      properties:
        maxPodsPerNode:
          description: The maximum number of pods a node can run. The size of the
            CIDR range assigned to the node will be derived from this parameter. By
            default 110 Pods are created per Node. Upper bound is 250 for both HA
            and non-HA admin cluster. Lower bound is 64 for non-HA admin cluster and
            32 for HA admin cluster.
          format: int64
          type: string
      type: object
    BareMetalApiServerArgument:
      description: "Represents an arg name->value pair. Only a subset of customized\
        \ flags are supported. For the exact format, refer to the [API server documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/)."
      example:
        argument: argument
        value: value
      properties:
        argument:
          description: "Required. The argument name as it appears on the API Server\
            \ command line, make sure to remove the leading dashes."
          type: string
        value:
          description: Required. The value of the arg as it will be passed to the
            API Server command line.
          type: string
      type: object
    BareMetalBgpLbConfig:
      description: BareMetalBgpLbConfig represents configuration parameters for a
        Border Gateway Protocol (BGP) load balancer.
      example:
        bgpPeerConfigs:
        - ipAddress: ipAddress
          asn: asn
          controlPlaneNodes:
          - controlPlaneNodes
          - controlPlaneNodes
        - ipAddress: ipAddress
          asn: asn
          controlPlaneNodes:
          - controlPlaneNodes
          - controlPlaneNodes
        addressPools:
        - addresses:
          - addresses
          - addresses
          avoidBuggyIps: true
          pool: pool
          manualAssign: true
        - addresses:
          - addresses
          - addresses
          avoidBuggyIps: true
          pool: pool
          manualAssign: true
        loadBalancerNodePoolConfig:
          nodePoolConfig:
            kubeletConfig:
              registryBurst: 0
              registryPullQps: 6
              serializeImagePullsDisabled: true
            nodeConfigs:
            - nodeIp: nodeIp
              labels:
                key: labels
            - nodeIp: nodeIp
              labels:
                key: labels
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
            labels:
              key: labels
        asn: asn
      properties:
        addressPools:
          description: Required. AddressPools is a list of non-overlapping IP pools
            used by load balancer typed services. All addresses must be routable to
            load balancer nodes. IngressVIP must be included in the pools.
          items:
            $ref: '#/components/schemas/BareMetalLoadBalancerAddressPool'
          type: array
        asn:
          description: Required. BGP autonomous system number (ASN) of the cluster.
            This field can be updated after cluster creation.
          format: int64
          type: string
        bgpPeerConfigs:
          description: Required. The list of BGP peers that the cluster will connect
            to. At least one peer must be configured for each control plane node.
            Control plane nodes will connect to these peers to advertise the control
            plane VIP. The Services load balancer also uses these peers by default.
            This field can be updated after cluster creation.
          items:
            $ref: '#/components/schemas/BareMetalBgpPeerConfig'
          type: array
        loadBalancerNodePoolConfig:
          $ref: '#/components/schemas/BareMetalLoadBalancerNodePoolConfig'
      type: object
    BareMetalBgpPeerConfig:
      description: BareMetalBgpPeerConfig represents configuration parameters for
        a Border Gateway Protocol (BGP) peer.
      example:
        ipAddress: ipAddress
        asn: asn
        controlPlaneNodes:
        - controlPlaneNodes
        - controlPlaneNodes
      properties:
        asn:
          description: Required. BGP autonomous system number (ASN) for the network
            that contains the external peer device.
          format: int64
          type: string
        controlPlaneNodes:
          description: "The IP address of the control plane node that connects to\
            \ the external peer. If you don't specify any control plane nodes, all\
            \ control plane nodes can connect to the external peer. If you specify\
            \ one or more IP addresses, only the nodes specified participate in peering\
            \ sessions."
          items:
            type: string
          type: array
        ipAddress:
          description: Required. The IP address of the external peer device.
          type: string
      type: object
    BareMetalCluster:
      description: Resource that represents a bare metal user cluster.
      example:
        fleet:
          membership: membership
        clusterOperations:
          enableApplicationLogs: true
        annotations:
          key: annotations
        description: description
        reconciling: true
        storage:
          lvpShareConfig:
            sharedPathPvCount: 5
            lvpConfig:
              path: path
              storageClass: storageClass
          lvpNodeMountsConfig:
            path: path
            storageClass: storageClass
        adminClusterName: adminClusterName
        nodeConfig:
          containerRuntime: CONTAINER_RUNTIME_UNSPECIFIED
          maxPodsPerNode: maxPodsPerNode
        validationCheck:
          scenario: SCENARIO_UNSPECIFIED
          option: OPTIONS_UNSPECIFIED
          status:
            result:
            - reason: reason
              description: description
              details: details
              state: STATE_UNKNOWN
              category: category
            - reason: reason
              description: description
              details: details
              state: STATE_UNKNOWN
              category: category
        maintenanceStatus:
          machineDrainStatus:
            drainedMachines:
            - nodeIp: nodeIp
            - nodeIp: nodeIp
            drainingMachines:
            - nodeIp: nodeIp
              podCount: 6
            - nodeIp: nodeIp
              podCount: 6
        uid: uid
        endpoint: endpoint
        maintenanceConfig:
          maintenanceAddressCidrBlocks:
          - maintenanceAddressCidrBlocks
          - maintenanceAddressCidrBlocks
        controlPlane:
          apiServerArgs:
          - argument: argument
            value: value
          - argument: argument
            value: value
          controlPlaneNodePoolConfig:
            nodePoolConfig:
              kubeletConfig:
                registryBurst: 0
                registryPullQps: 6
                serializeImagePullsDisabled: true
              nodeConfigs:
              - nodeIp: nodeIp
                labels:
                  key: labels
              - nodeIp: nodeIp
                labels:
                  key: labels
              taints:
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
              labels:
                key: labels
        loadBalancer:
          portConfig:
            controlPlaneLoadBalancerPort: 0
          bgpLbConfig:
            bgpPeerConfigs:
            - ipAddress: ipAddress
              asn: asn
              controlPlaneNodes:
              - controlPlaneNodes
              - controlPlaneNodes
            - ipAddress: ipAddress
              asn: asn
              controlPlaneNodes:
              - controlPlaneNodes
              - controlPlaneNodes
            addressPools:
            - addresses:
              - addresses
              - addresses
              avoidBuggyIps: true
              pool: pool
              manualAssign: true
            - addresses:
              - addresses
              - addresses
              avoidBuggyIps: true
              pool: pool
              manualAssign: true
            loadBalancerNodePoolConfig:
              nodePoolConfig:
                kubeletConfig:
                  registryBurst: 0
                  registryPullQps: 6
                  serializeImagePullsDisabled: true
                nodeConfigs:
                - nodeIp: nodeIp
                  labels:
                    key: labels
                - nodeIp: nodeIp
                  labels:
                    key: labels
                taints:
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                labels:
                  key: labels
            asn: asn
          metalLbConfig:
            addressPools:
            - addresses:
              - addresses
              - addresses
              avoidBuggyIps: true
              pool: pool
              manualAssign: true
            - addresses:
              - addresses
              - addresses
              avoidBuggyIps: true
              pool: pool
              manualAssign: true
            loadBalancerNodePoolConfig:
              nodePoolConfig:
                kubeletConfig:
                  registryBurst: 0
                  registryPullQps: 6
                  serializeImagePullsDisabled: true
                nodeConfigs:
                - nodeIp: nodeIp
                  labels:
                    key: labels
                - nodeIp: nodeIp
                  labels:
                    key: labels
                taints:
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                labels:
                  key: labels
          vipConfig:
            ingressVip: ingressVip
            controlPlaneVip: controlPlaneVip
          manualLbConfig:
            enabled: true
        bareMetalVersion: bareMetalVersion
        state: STATE_UNSPECIFIED
        binaryAuthorization:
          evaluationMode: EVALUATION_MODE_UNSPECIFIED
        nodeAccessConfig:
          loginUser: loginUser
        adminClusterMembership: adminClusterMembership
        networkConfig:
          advancedNetworking: true
          islandModeCidr:
            serviceAddressCidrBlocks:
            - serviceAddressCidrBlocks
            - serviceAddressCidrBlocks
            podAddressCidrBlocks:
            - podAddressCidrBlocks
            - podAddressCidrBlocks
          multipleNetworkInterfacesConfig:
            enabled: true
          srIovConfig:
            enabled: true
        osEnvironmentConfig:
          packageRepoExcluded: true
        updateTime: updateTime
        upgradePolicy:
          policy: NODE_POOL_POLICY_UNSPECIFIED
        localName: localName
        proxy:
          noProxy:
          - noProxy
          - noProxy
          uri: uri
        securityConfig:
          authorization:
            adminUsers:
            - username: username
            - username: username
        createTime: createTime
        deleteTime: deleteTime
        name: name
        etag: etag
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        adminClusterMembership:
          description: Required. The admin cluster this bare metal user cluster belongs
            to. This is the full resource name of the admin cluster's fleet membership.
          type: string
        adminClusterName:
          description: Output only. The resource name of the bare metal admin cluster
            managing this user cluster.
          readOnly: true
          type: string
        annotations:
          additionalProperties:
            type: string
          description: "Annotations on the bare metal user cluster. This field has\
            \ the same restrictions as Kubernetes annotations. The total size of all\
            \ keys and values combined is limited to 256k. Key can have 2 segments:\
            \ prefix (optional) and name (required), separated by a slash (/). Prefix\
            \ must be a DNS subdomain. Name must be 63 characters or less, begin and\
            \ end with alphanumerics, with dashes (-), underscores (_), dots (.),\
            \ and alphanumerics between."
          type: object
        bareMetalVersion:
          description: Required. The Anthos clusters on bare metal version for your
            user cluster.
          type: string
        binaryAuthorization:
          $ref: '#/components/schemas/BinaryAuthorization'
        clusterOperations:
          $ref: '#/components/schemas/BareMetalClusterOperationsConfig'
        controlPlane:
          $ref: '#/components/schemas/BareMetalControlPlaneConfig'
        createTime:
          description: Output only. The time when the bare metal user cluster was
            created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: "Output only. The time when the bare metal user cluster was\
            \ deleted. If the resource is not deleted, this must be empty"
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A human readable description of this bare metal user cluster.
          type: string
        endpoint:
          description: Output only. The IP address of the bare metal user cluster's
            API server.
          readOnly: true
          type: string
        etag:
          description: "Output only. This checksum is computed by the server based\
            \ on the value of other fields, and may be sent on update and delete requests\
            \ to ensure the client has an up-to-date value before proceeding. Allows\
            \ clients to perform consistent read-modify-writes through optimistic\
            \ concurrency control."
          readOnly: true
          type: string
        fleet:
          $ref: '#/components/schemas/Fleet'
        loadBalancer:
          $ref: '#/components/schemas/BareMetalLoadBalancerConfig'
        localName:
          description: "Output only. The object name of the bare metal user cluster\
            \ custom resource on the associated admin cluster. This field is used\
            \ to support conflicting names when enrolling existing clusters to the\
            \ API. When used as a part of cluster enrollment, this field will differ\
            \ from the name in the resource name. For new clusters, this field will\
            \ match the user provided cluster name and be visible in the last component\
            \ of the resource name. It is not modifiable. When the local name and\
            \ cluster name differ, the local name is used in the admin cluster controller\
            \ logs. You use the cluster name when accessing the cluster using bmctl\
            \ and kubectl."
          readOnly: true
          type: string
        maintenanceConfig:
          $ref: '#/components/schemas/BareMetalMaintenanceConfig'
        maintenanceStatus:
          $ref: '#/components/schemas/BareMetalMaintenanceStatus'
        name:
          description: Immutable. The bare metal user cluster resource name.
          type: string
        networkConfig:
          $ref: '#/components/schemas/BareMetalNetworkConfig'
        nodeAccessConfig:
          $ref: '#/components/schemas/BareMetalNodeAccessConfig'
        nodeConfig:
          $ref: '#/components/schemas/BareMetalWorkloadNodeConfig'
        osEnvironmentConfig:
          $ref: '#/components/schemas/BareMetalOsEnvironmentConfig'
        proxy:
          $ref: '#/components/schemas/BareMetalProxyConfig'
        reconciling:
          description: "Output only. If set, there are currently changes in flight\
            \ to the bare metal user cluster."
          readOnly: true
          type: boolean
        securityConfig:
          $ref: '#/components/schemas/BareMetalSecurityConfig'
        state:
          description: Output only. The current state of the bare metal user cluster.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
          - DEGRADED
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
        storage:
          $ref: '#/components/schemas/BareMetalStorageConfig'
        uid:
          description: Output only. The unique identifier of the bare metal user cluster.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the bare metal user cluster was
            last updated.
          format: google-datetime
          readOnly: true
          type: string
        upgradePolicy:
          $ref: '#/components/schemas/BareMetalClusterUpgradePolicy'
        validationCheck:
          $ref: '#/components/schemas/ValidationCheck'
      type: object
    BareMetalClusterOperationsConfig:
      description: Specifies the bare metal user cluster's observability infrastructure.
      example:
        enableApplicationLogs: true
      properties:
        enableApplicationLogs:
          description: Whether collection of application logs/metrics should be enabled
            (in addition to system logs/metrics).
          type: boolean
      type: object
    BareMetalClusterUpgradePolicy:
      description: BareMetalClusterUpgradePolicy defines the cluster upgrade policy.
      example:
        policy: NODE_POOL_POLICY_UNSPECIFIED
      properties:
        policy:
          description: Specifies which upgrade policy to use.
          enum:
          - NODE_POOL_POLICY_UNSPECIFIED
          - SERIAL
          - CONCURRENT
          type: string
      type: object
    BareMetalControlPlaneConfig:
      description: Specifies the control plane configuration.
      example:
        apiServerArgs:
        - argument: argument
          value: value
        - argument: argument
          value: value
        controlPlaneNodePoolConfig:
          nodePoolConfig:
            kubeletConfig:
              registryBurst: 0
              registryPullQps: 6
              serializeImagePullsDisabled: true
            nodeConfigs:
            - nodeIp: nodeIp
              labels:
                key: labels
            - nodeIp: nodeIp
              labels:
                key: labels
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
            labels:
              key: labels
      properties:
        apiServerArgs:
          description: "Customizes the default API server args. Only a subset of customized\
            \ flags are supported. For the exact format, refer to the [API server\
            \ documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/)."
          items:
            $ref: '#/components/schemas/BareMetalApiServerArgument'
          type: array
        controlPlaneNodePoolConfig:
          $ref: '#/components/schemas/BareMetalControlPlaneNodePoolConfig'
      type: object
    BareMetalControlPlaneNodePoolConfig:
      description: Specifies the control plane node pool configuration.
      example:
        nodePoolConfig:
          kubeletConfig:
            registryBurst: 0
            registryPullQps: 6
            serializeImagePullsDisabled: true
          nodeConfigs:
          - nodeIp: nodeIp
            labels:
              key: labels
          - nodeIp: nodeIp
            labels:
              key: labels
          taints:
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
          labels:
            key: labels
      properties:
        nodePoolConfig:
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
      type: object
    BareMetalDrainedMachine:
      description: Represents a machine that is currently drained.
      example:
        nodeIp: nodeIp
      properties:
        nodeIp:
          description: Drained machine IP address.
          type: string
      type: object
    BareMetalDrainingMachine:
      description: Represents a machine that is currently draining.
      example:
        nodeIp: nodeIp
        podCount: 6
      properties:
        nodeIp:
          description: Draining machine IP address.
          type: string
        podCount:
          description: The count of pods yet to drain.
          format: int32
          type: integer
      type: object
    BareMetalIslandModeCidrConfig:
      description: Specifies the cluster CIDR configuration while running in island
        mode.
      example:
        serviceAddressCidrBlocks:
        - serviceAddressCidrBlocks
        - serviceAddressCidrBlocks
        podAddressCidrBlocks:
        - podAddressCidrBlocks
        - podAddressCidrBlocks
      properties:
        podAddressCidrBlocks:
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. This field cannot be changed after creation.
          items:
            type: string
          type: array
        serviceAddressCidrBlocks:
          description: Required. All services in the cluster are assigned an RFC1918
            IPv4 address from these ranges. This field is mutable after creation starting
            with version 1.15.
          items:
            type: string
          type: array
      type: object
    BareMetalKubeletConfig:
      description: "KubeletConfig defines the modifiable kubelet configurations for\
        \ bare metal machines. Note: this list includes fields supported in GKE (see\
        \ https://cloud.google.com/kubernetes-engine/docs/how-to/node-system-config#kubelet-options)."
      example:
        registryBurst: 0
        registryPullQps: 6
        serializeImagePullsDisabled: true
      properties:
        registryBurst:
          description: "The maximum size of bursty pulls, temporarily allows pulls\
            \ to burst to this number, while still not exceeding registry_pull_qps.\
            \ The value must not be a negative number. Updating this field may impact\
            \ scalability by changing the amount of traffic produced by image pulls.\
            \ Defaults to 10."
          format: int32
          type: integer
        registryPullQps:
          description: The limit of registry pulls per second. Setting this value
            to 0 means no limit. Updating this field may impact scalability by changing
            the amount of traffic produced by image pulls. Defaults to 5.
          format: int32
          type: integer
        serializeImagePullsDisabled:
          description: Prevents the Kubelet from pulling multiple images at a time.
            We recommend *not* changing the default value on nodes that run docker
            daemon with version < 1.9 or an Another Union File System (Aufs) storage
            backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
            more details.
          type: boolean
      type: object
    BareMetalLoadBalancerAddressPool:
      description: Represents an IP pool used by the load balancer.
      example:
        addresses:
        - addresses
        - addresses
        avoidBuggyIps: true
        pool: pool
        manualAssign: true
      properties:
        addresses:
          description: Required. The addresses that are part of this pool. Each address
            must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
          items:
            type: string
          type: array
        avoidBuggyIps:
          description: "If true, avoid using IPs ending in .0 or .255. This avoids\
            \ buggy consumer devices mistakenly dropping IPv4 traffic for those special\
            \ IP addresses."
          type: boolean
        manualAssign:
          description: "If true, prevent IP addresses from being automatically assigned."
          type: boolean
        pool:
          description: Required. The name of the address pool.
          type: string
      type: object
    BareMetalLoadBalancerConfig:
      description: Specifies the load balancer configuration.
      example:
        portConfig:
          controlPlaneLoadBalancerPort: 0
        bgpLbConfig:
          bgpPeerConfigs:
          - ipAddress: ipAddress
            asn: asn
            controlPlaneNodes:
            - controlPlaneNodes
            - controlPlaneNodes
          - ipAddress: ipAddress
            asn: asn
            controlPlaneNodes:
            - controlPlaneNodes
            - controlPlaneNodes
          addressPools:
          - addresses:
            - addresses
            - addresses
            avoidBuggyIps: true
            pool: pool
            manualAssign: true
          - addresses:
            - addresses
            - addresses
            avoidBuggyIps: true
            pool: pool
            manualAssign: true
          loadBalancerNodePoolConfig:
            nodePoolConfig:
              kubeletConfig:
                registryBurst: 0
                registryPullQps: 6
                serializeImagePullsDisabled: true
              nodeConfigs:
              - nodeIp: nodeIp
                labels:
                  key: labels
              - nodeIp: nodeIp
                labels:
                  key: labels
              taints:
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
              labels:
                key: labels
          asn: asn
        metalLbConfig:
          addressPools:
          - addresses:
            - addresses
            - addresses
            avoidBuggyIps: true
            pool: pool
            manualAssign: true
          - addresses:
            - addresses
            - addresses
            avoidBuggyIps: true
            pool: pool
            manualAssign: true
          loadBalancerNodePoolConfig:
            nodePoolConfig:
              kubeletConfig:
                registryBurst: 0
                registryPullQps: 6
                serializeImagePullsDisabled: true
              nodeConfigs:
              - nodeIp: nodeIp
                labels:
                  key: labels
              - nodeIp: nodeIp
                labels:
                  key: labels
              taints:
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              - effect: EFFECT_UNSPECIFIED
                value: value
                key: key
              operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
              labels:
                key: labels
        vipConfig:
          ingressVip: ingressVip
          controlPlaneVip: controlPlaneVip
        manualLbConfig:
          enabled: true
      properties:
        bgpLbConfig:
          $ref: '#/components/schemas/BareMetalBgpLbConfig'
        manualLbConfig:
          $ref: '#/components/schemas/BareMetalManualLbConfig'
        metalLbConfig:
          $ref: '#/components/schemas/BareMetalMetalLbConfig'
        portConfig:
          $ref: '#/components/schemas/BareMetalPortConfig'
        vipConfig:
          $ref: '#/components/schemas/BareMetalVipConfig'
      type: object
    BareMetalLoadBalancerNodePoolConfig:
      description: Specifies the load balancer's node pool configuration.
      example:
        nodePoolConfig:
          kubeletConfig:
            registryBurst: 0
            registryPullQps: 6
            serializeImagePullsDisabled: true
          nodeConfigs:
          - nodeIp: nodeIp
            labels:
              key: labels
          - nodeIp: nodeIp
            labels:
              key: labels
          taints:
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
          labels:
            key: labels
      properties:
        nodePoolConfig:
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
      type: object
    BareMetalLvpConfig:
      description: Specifies the configs for local persistent volumes (PVs).
      example:
        path: path
        storageClass: storageClass
      properties:
        path:
          description: Required. The host machine path.
          type: string
        storageClass:
          description: Required. The StorageClass name that PVs will be created with.
          type: string
      type: object
    BareMetalLvpShareConfig:
      description: Specifies the configs for local persistent volumes under a shared
        file system.
      example:
        sharedPathPvCount: 5
        lvpConfig:
          path: path
          storageClass: storageClass
      properties:
        lvpConfig:
          $ref: '#/components/schemas/BareMetalLvpConfig'
        sharedPathPvCount:
          description: The number of subdirectories to create under path.
          format: int32
          type: integer
      type: object
    BareMetalMachineDrainStatus:
      description: Represents the status of node machines that are undergoing drain
        operations.
      example:
        drainedMachines:
        - nodeIp: nodeIp
        - nodeIp: nodeIp
        drainingMachines:
        - nodeIp: nodeIp
          podCount: 6
        - nodeIp: nodeIp
          podCount: 6
      properties:
        drainedMachines:
          description: The list of drained machines.
          items:
            $ref: '#/components/schemas/BareMetalDrainedMachine'
          type: array
        drainingMachines:
          description: The list of draning machines.
          items:
            $ref: '#/components/schemas/BareMetalDrainingMachine'
          type: array
      type: object
    BareMetalMaintenanceConfig:
      description: Specifies configurations to put bare metal nodes in and out of
        maintenance.
      example:
        maintenanceAddressCidrBlocks:
        - maintenanceAddressCidrBlocks
        - maintenanceAddressCidrBlocks
      properties:
        maintenanceAddressCidrBlocks:
          description: "Required. All IPv4 address from these ranges will be placed\
            \ into maintenance mode. Nodes in maintenance mode will be cordoned and\
            \ drained. When both of these are true, the \"baremetal.cluster.gke.io/maintenance\"\
            \ annotation will be set on the node resource."
          items:
            type: string
          type: array
      type: object
    BareMetalMaintenanceStatus:
      description: Represents the maintenance status of the bare metal user cluster.
      example:
        machineDrainStatus:
          drainedMachines:
          - nodeIp: nodeIp
          - nodeIp: nodeIp
          drainingMachines:
          - nodeIp: nodeIp
            podCount: 6
          - nodeIp: nodeIp
            podCount: 6
      properties:
        machineDrainStatus:
          $ref: '#/components/schemas/BareMetalMachineDrainStatus'
      type: object
    BareMetalManualLbConfig:
      description: Represents configuration parameters for a manual load balancer.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether manual load balancing is enabled.
          type: boolean
      type: object
    BareMetalMetalLbConfig:
      description: Represents configuration parameters for a MetalLB load balancer.
      example:
        addressPools:
        - addresses:
          - addresses
          - addresses
          avoidBuggyIps: true
          pool: pool
          manualAssign: true
        - addresses:
          - addresses
          - addresses
          avoidBuggyIps: true
          pool: pool
          manualAssign: true
        loadBalancerNodePoolConfig:
          nodePoolConfig:
            kubeletConfig:
              registryBurst: 0
              registryPullQps: 6
              serializeImagePullsDisabled: true
            nodeConfigs:
            - nodeIp: nodeIp
              labels:
                key: labels
            - nodeIp: nodeIp
              labels:
                key: labels
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
            labels:
              key: labels
      properties:
        addressPools:
          description: Required. AddressPools is a list of non-overlapping IP pools
            used by load balancer typed services. All addresses must be routable to
            load balancer nodes. IngressVIP must be included in the pools.
          items:
            $ref: '#/components/schemas/BareMetalLoadBalancerAddressPool'
          type: array
        loadBalancerNodePoolConfig:
          $ref: '#/components/schemas/BareMetalLoadBalancerNodePoolConfig'
      type: object
    BareMetalMultipleNetworkInterfacesConfig:
      description: Specifies the multiple networking interfaces cluster configuration.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether to enable multiple network interfaces for your pods.
            When set network_config.advanced_networking is automatically set to true.
          type: boolean
      type: object
    BareMetalNetworkConfig:
      description: Specifies the cluster network configuration.
      example:
        advancedNetworking: true
        islandModeCidr:
          serviceAddressCidrBlocks:
          - serviceAddressCidrBlocks
          - serviceAddressCidrBlocks
          podAddressCidrBlocks:
          - podAddressCidrBlocks
          - podAddressCidrBlocks
        multipleNetworkInterfacesConfig:
          enabled: true
        srIovConfig:
          enabled: true
      properties:
        advancedNetworking:
          description: "Enables the use of advanced Anthos networking features, such\
            \ as Bundled Load Balancing with BGP or the egress NAT gateway. Setting\
            \ configuration for advanced networking features will automatically set\
            \ this flag."
          type: boolean
        islandModeCidr:
          $ref: '#/components/schemas/BareMetalIslandModeCidrConfig'
        multipleNetworkInterfacesConfig:
          $ref: '#/components/schemas/BareMetalMultipleNetworkInterfacesConfig'
        srIovConfig:
          $ref: '#/components/schemas/BareMetalSrIovConfig'
      type: object
    BareMetalNodeAccessConfig:
      description: Specifies the node access related settings for the bare metal user
        cluster.
      example:
        loginUser: loginUser
      properties:
        loginUser:
          description: LoginUser is the user name used to access node machines. It
            defaults to "root" if not set.
          type: string
      type: object
    BareMetalNodeConfig:
      description: BareMetalNodeConfig lists machine addresses to access Nodes.
      example:
        nodeIp: nodeIp
        labels:
          key: labels
      properties:
        labels:
          additionalProperties:
            type: string
          description: "The labels assigned to this node. An object containing a list\
            \ of key/value pairs. The labels here, unioned with the labels set on\
            \ BareMetalNodePoolConfig are the set of labels that will be applied to\
            \ the node. If there are any conflicts, the BareMetalNodeConfig labels\
            \ take precedence. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\"\
            , \"count\": \"3\" }."
          type: object
        nodeIp:
          description: "The default IPv4 address for SSH access and Kubernetes node.\
            \ Example: 192.168.0.1"
          type: string
      type: object
    BareMetalNodePool:
      description: Resource that represents a bare metal node pool.
      example:
        nodePoolConfig:
          kubeletConfig:
            registryBurst: 0
            registryPullQps: 6
            serializeImagePullsDisabled: true
          nodeConfigs:
          - nodeIp: nodeIp
            labels:
              key: labels
          - nodeIp: nodeIp
            labels:
              key: labels
          taints:
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
          labels:
            key: labels
        displayName: displayName
        annotations:
          key: annotations
        reconciling: true
        updateTime: updateTime
        upgradePolicy:
          parallelUpgradeConfig:
            minimumAvailableNodes: 6
            concurrentNodes: 0
        uid: uid
        createTime: createTime
        deleteTime: deleteTime
        name: name
        etag: etag
        state: STATE_UNSPECIFIED
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations on the bare metal node pool. This field has the\
            \ same restrictions as Kubernetes annotations. The total size of all keys\
            \ and values combined is limited to 256k. Key can have 2 segments: prefix\
            \ (optional) and name (required), separated by a slash (/). Prefix must\
            \ be a DNS subdomain. Name must be 63 characters or less, begin and end\
            \ with alphanumerics, with dashes (-), underscores (_), dots (.), and\
            \ alphanumerics between."
          type: object
        createTime:
          description: Output only. The time at which this bare metal node pool was
            created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: "Output only. The time at which this bare metal node pool was\
            \ deleted. If the resource is not deleted, this must be empty"
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: The display name for the bare metal node pool.
          type: string
        etag:
          description: "This checksum is computed by the server based on the value\
            \ of other fields, and may be sent on update and delete requests to ensure\
            \ the client has an up-to-date value before proceeding. Allows clients\
            \ to perform consistent read-modify-writes through optimistic concurrency\
            \ control."
          type: string
        name:
          description: Immutable. The bare metal node pool resource name.
          type: string
        nodePoolConfig:
          $ref: '#/components/schemas/BareMetalNodePoolConfig'
        reconciling:
          description: "Output only. If set, there are currently changes in flight\
            \ to the bare metal node pool."
          readOnly: true
          type: boolean
        state:
          description: Output only. The current state of the bare metal node pool.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
          - DEGRADED
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
        uid:
          description: Output only. The unique identifier of the bare metal node pool.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which this bare metal node pool was
            last updated.
          format: google-datetime
          readOnly: true
          type: string
        upgradePolicy:
          $ref: '#/components/schemas/BareMetalNodePoolUpgradePolicy'
      type: object
    BareMetalNodePoolConfig:
      description: BareMetalNodePoolConfig describes the configuration of all nodes
        within a given bare metal node pool.
      example:
        kubeletConfig:
          registryBurst: 0
          registryPullQps: 6
          serializeImagePullsDisabled: true
        nodeConfigs:
        - nodeIp: nodeIp
          labels:
            key: labels
        - nodeIp: nodeIp
          labels:
            key: labels
        taints:
        - effect: EFFECT_UNSPECIFIED
          value: value
          key: key
        - effect: EFFECT_UNSPECIFIED
          value: value
          key: key
        operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
        labels:
          key: labels
      properties:
        kubeletConfig:
          $ref: '#/components/schemas/BareMetalKubeletConfig'
        labels:
          additionalProperties:
            type: string
          description: "The labels assigned to nodes of this node pool. An object\
            \ containing a list of key/value pairs. Example: { \"name\": \"wrench\"\
            , \"mass\": \"1.3kg\", \"count\": \"3\" }."
          type: object
        nodeConfigs:
          description: Required. The list of machine addresses in the bare metal node
            pool.
          items:
            $ref: '#/components/schemas/BareMetalNodeConfig'
          type: array
        operatingSystem:
          description: "Specifies the nodes operating system (default: LINUX)."
          enum:
          - OPERATING_SYSTEM_UNSPECIFIED
          - LINUX
          type: string
        taints:
          description: The initial taints assigned to nodes of this node pool.
          items:
            $ref: '#/components/schemas/NodeTaint'
          type: array
      type: object
    BareMetalNodePoolUpgradePolicy:
      description: BareMetalNodePoolUpgradePolicy defines the node pool upgrade policy.
      example:
        parallelUpgradeConfig:
          minimumAvailableNodes: 6
          concurrentNodes: 0
      properties:
        parallelUpgradeConfig:
          $ref: '#/components/schemas/BareMetalParallelUpgradeConfig'
      type: object
    BareMetalOsEnvironmentConfig:
      description: Specifies operating system settings for cluster provisioning.
      example:
        packageRepoExcluded: true
      properties:
        packageRepoExcluded:
          description: Whether the package repo should not be included when initializing
            bare metal machines.
          type: boolean
      type: object
    BareMetalParallelUpgradeConfig:
      description: BareMetalParallelUpgradeConfig defines the parallel upgrade settings
        for worker node pools.
      example:
        minimumAvailableNodes: 6
        concurrentNodes: 0
      properties:
        concurrentNodes:
          description: The maximum number of nodes that can be upgraded at once.
          format: int32
          type: integer
        minimumAvailableNodes:
          description: "The minimum number of nodes that should be healthy and available\
            \ during an upgrade. If set to the default value of 0, it is possible\
            \ that none of the nodes will be available during an upgrade."
          format: int32
          type: integer
      type: object
    BareMetalPortConfig:
      description: Specifies load balancer ports for the bare metal user cluster.
      example:
        controlPlaneLoadBalancerPort: 0
      properties:
        controlPlaneLoadBalancerPort:
          description: The port that control plane hosted load balancers will listen
            on.
          format: int32
          type: integer
      type: object
    BareMetalProxyConfig:
      description: Specifies the cluster proxy configuration.
      example:
        noProxy:
        - noProxy
        - noProxy
        uri: uri
      properties:
        noProxy:
          description: "A list of IPs, hostnames, and domains that should skip the\
            \ proxy. Examples: [\"127.0.0.1\", \"example.com\", \".corp\", \"localhost\"\
            ]."
          items:
            type: string
          type: array
        uri:
          description: "Required. Specifies the address of your proxy server. Examples:\
            \ `http://domain` Do not provide credentials in the format `http://(username:password@)domain`\
            \ these will be rejected by the server."
          type: string
      type: object
    BareMetalSecurityConfig:
      description: Specifies the security related settings for the bare metal user
        cluster.
      example:
        authorization:
          adminUsers:
          - username: username
          - username: username
      properties:
        authorization:
          $ref: '#/components/schemas/Authorization'
      type: object
    BareMetalSrIovConfig:
      description: Specifies the SR-IOV networking operator config.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether to install the SR-IOV operator.
          type: boolean
      type: object
    BareMetalStorageConfig:
      description: BareMetalStorageConfig specifies the cluster storage configuration.
      example:
        lvpShareConfig:
          sharedPathPvCount: 5
          lvpConfig:
            path: path
            storageClass: storageClass
        lvpNodeMountsConfig:
          path: path
          storageClass: storageClass
      properties:
        lvpNodeMountsConfig:
          $ref: '#/components/schemas/BareMetalLvpConfig'
        lvpShareConfig:
          $ref: '#/components/schemas/BareMetalLvpShareConfig'
      type: object
    BareMetalVersionInfo:
      description: Contains information about a specific Anthos on bare metal version.
      example:
        hasDependencies: true
        version: version
        dependencies:
        - resourceName: resourceName
          membership: membership
          currentVersion: currentVersion
          targetVersion: targetVersion
        - resourceName: resourceName
          membership: membership
          currentVersion: currentVersion
          targetVersion: targetVersion
      properties:
        dependencies:
          description: The list of upgrade dependencies for this version.
          items:
            $ref: '#/components/schemas/UpgradeDependency'
          type: array
        hasDependencies:
          description: "If set, the cluster dependencies (e.g. the admin cluster,\
            \ other user clusters managed by the same admin cluster, version skew\
            \ policy, etc) must be upgraded before this version can be installed or\
            \ upgraded to."
          type: boolean
        version:
          description: Version number e.g. 1.13.1.
          type: string
      type: object
    BareMetalVipConfig:
      description: Specifies the VIP config for the bare metal load balancer.
      example:
        ingressVip: ingressVip
        controlPlaneVip: controlPlaneVip
      properties:
        controlPlaneVip:
          description: The VIP which you previously set aside for the Kubernetes API
            of this bare metal user cluster.
          type: string
        ingressVip:
          description: The VIP which you previously set aside for ingress traffic
            into this bare metal user cluster.
          type: string
      type: object
    BareMetalWorkloadNodeConfig:
      description: Specifies the workload node configurations.
      example:
        containerRuntime: CONTAINER_RUNTIME_UNSPECIFIED
        maxPodsPerNode: maxPodsPerNode
      properties:
        containerRuntime:
          description: Specifies which container runtime will be used.
          enum:
          - CONTAINER_RUNTIME_UNSPECIFIED
          - CONTAINERD
          type: string
        maxPodsPerNode:
          description: The maximum number of pods a node can run. The size of the
            CIDR range assigned to the node will be derived from this parameter.
          format: int64
          type: string
      type: object
    BinaryAuthorization:
      description: Configuration for Binary Authorization.
      example:
        evaluationMode: EVALUATION_MODE_UNSPECIFIED
      properties:
        evaluationMode:
          description: "Mode of operation for binauthz policy evaluation. If unspecified,\
            \ defaults to DISABLED."
          enum:
          - EVALUATION_MODE_UNSPECIFIED
          - DISABLED
          - PROJECT_SINGLETON_POLICY_ENFORCE
          type: string
      type: object
    Binding:
      description: "Associates `members`, or principals, with a `role`."
      example:
        condition:
          expression: expression
          description: description
          location: location
          title: title
        role: role
        members:
        - members
        - members
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
        members:
          description: "Specifies the principals requesting access for a Google Cloud\
            \ resource. `members` can have the following values: * `allUsers`: A special\
            \ identifier that represents anyone who is on the internet; with or without\
            \ a Google account. * `allAuthenticatedUsers`: A special identifier that\
            \ represents anyone who is authenticated with a Google account or a service\
            \ account. Does not include identities that come from external identity\
            \ providers (IdPs) through identity federation. * `user:{emailid}`: An\
            \ email address that represents a specific Google account. For example,\
            \ `alice@example.com` . * `serviceAccount:{emailid}`: An email address\
            \ that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`.\
            \ * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:\
            \ An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).\
            \ For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`.\
            \ * `group:{emailid}`: An email address that represents a Google group.\
            \ For example, `admins@example.com`. * `domain:{domain}`: The G Suite\
            \ domain (primary) that represents all the users of that domain. For example,\
            \ `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:\
            \ All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:\
            \ All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:\
            \ A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:\
            \ A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:\
            \ All identities in a workload identity pool with a certain attribute.\
            \ * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:\
            \ All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a user that has\
            \ been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\
            \ If the user is recovered, this value reverts to `user:{emailid}` and\
            \ the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\
            \ An email address (plus unique identifier) representing a service account\
            \ that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\
            \ If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\
            \ and the undeleted service account retains the role in the binding. *\
            \ `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\
            \ identifier) representing a Google group that has been recently deleted.\
            \ For example, `admins@example.com?uid=123456789012345678901`. If the\
            \ group is recovered, this value reverts to `group:{emailid}` and the\
            \ recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:\
            \ Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: "Role that is assigned to the list of `members`, or principals.\
            \ For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an\
            \ overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview).\
            \ For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles)."
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    ClusterUser:
      description: ClusterUser configures user principals for an RBAC policy.
      example:
        username: username
      properties:
        username:
          description: "Required. The name of the user, e.g. `my-gcp-id@gmail.com`."
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EnrollBareMetalAdminClusterRequest:
      description: Message for enrolling an existing bare metal admin cluster to the
        GKE on-prem API.
      example:
        bareMetalAdminClusterId: bareMetalAdminClusterId
        membership: membership
      properties:
        bareMetalAdminClusterId:
          description: User provided OnePlatform identifier that is used as part of
            the resource name. This must be unique among all GKE on-prem clusters
            within a project and location and will return a 409 if the cluster already
            exists. (https://tools.ietf.org/html/rfc1123) format.
          type: string
        membership:
          description: Required. This is the full resource name of this admin cluster's
            fleet membership.
          type: string
      type: object
    EnrollBareMetalClusterRequest:
      description: Message for enrolling an existing bare metal cluster to the Anthos
        On-Prem API.
      example:
        localName: localName
        bareMetalClusterId: bareMetalClusterId
        adminClusterMembership: adminClusterMembership
      properties:
        adminClusterMembership:
          description: "Required. The admin cluster this bare metal user cluster belongs\
            \ to. This is the full resource name of the admin cluster's fleet membership.\
            \ In the future, references to other resource types might be allowed if\
            \ admin clusters are modeled as their own resources."
          type: string
        bareMetalClusterId:
          description: User provided OnePlatform identifier that is used as part of
            the resource name. This must be unique among all bare metal clusters within
            a project and location and will return a 409 if the cluster already exists.
            (https://tools.ietf.org/html/rfc1123) format.
          type: string
        localName:
          description: "Optional. The object name of the bare metal cluster custom\
            \ resource on the associated admin cluster. This field is used to support\
            \ conflicting resource names when enrolling existing clusters to the API.\
            \ When not provided, this field will resolve to the bare_metal_cluster_id.\
            \ Otherwise, it must match the object name of the bare metal cluster custom\
            \ resource. It is not modifiable outside / beyond the enrollment operation."
          type: string
      type: object
    EnrollBareMetalNodePoolRequest:
      description: Message for enrolling an existing bare metal node pool to the GKE
        on-prem API.
      example:
        validateOnly: true
        bareMetalNodePoolId: bareMetalNodePoolId
      properties:
        bareMetalNodePoolId:
          description: User provided OnePlatform identifier that is used as part of
            the resource name. (https://tools.ietf.org/html/rfc1123) format.
          type: string
        validateOnly:
          description: "If set, only validate the request, but do not actually enroll\
            \ the node pool."
          type: boolean
      type: object
    EnrollVmwareAdminClusterRequest:
      description: Message for enrolling an existing VMware admin cluster to the GKE
        on-prem API.
      example:
        membership: membership
        vmwareAdminClusterId: vmwareAdminClusterId
      properties:
        membership:
          description: Required. This is the full resource name of this admin cluster's
            fleet membership.
          type: string
        vmwareAdminClusterId:
          description: User provided OnePlatform identifier that is used as part of
            the resource name. This must be unique among all GKE on-prem clusters
            within a project and location and will return a 409 if the cluster already
            exists. (https://tools.ietf.org/html/rfc1123) format.
          type: string
      type: object
    EnrollVmwareClusterRequest:
      description: Message for enrolling an existing VMware cluster to the Anthos
        On-Prem API.
      example:
        localName: localName
        validateOnly: true
        adminClusterMembership: adminClusterMembership
        vmwareClusterId: vmwareClusterId
      properties:
        adminClusterMembership:
          description: "Required. The admin cluster this VMware user cluster belongs\
            \ to. This is the full resource name of the admin cluster's fleet membership.\
            \ In the future, references to other resource types might be allowed if\
            \ admin clusters are modeled as their own resources."
          type: string
        localName:
          description: "Optional. The object name of the VMware OnPremUserCluster\
            \ custom resource on the associated admin cluster. This field is used\
            \ to support conflicting resource names when enrolling existing clusters\
            \ to the API. When not provided, this field will resolve to the vmware_cluster_id.\
            \ Otherwise, it must match the object name of the VMware OnPremUserCluster\
            \ custom resource. It is not modifiable outside / beyond the enrollment\
            \ operation."
          type: string
        validateOnly:
          description: Validate the request without actually doing any updates.
          type: boolean
        vmwareClusterId:
          description: User provided OnePlatform identifier that is used as part of
            the resource name. This must be unique among all GKE on-prem clusters
            within a project and location and will return a 409 if the cluster already
            exists. (https://tools.ietf.org/html/rfc1123) format.
          type: string
      type: object
    EnrollVmwareNodePoolRequest:
      description: Message for enrolling a VMware node pool.
      example:
        vmwareNodePoolId: vmwareNodePoolId
      properties:
        vmwareNodePoolId:
          description: The target node pool id to be enrolled.
          type: string
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language\
        \ (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\
        \ of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\
        \ title: \"Summary size limit\" description: \"Determines if a summary is\
        \ less than 100 chars\" expression: \"document.summary.size() < 100\" Example\
        \ (Equality): title: \"Requestor is owner\" description: \"Determines if requestor\
        \ is the document owner\" expression: \"document.owner == request.auth.claims.email\"\
        \ Example (Logic): title: \"Public documents\" description: \"Determine whether\
        \ the document should be publicly visible\" expression: \"document.type !=\
        \ 'private' && document.type != 'internal'\" Example (Data Manipulation):\
        \ title: \"Notification string\" description: \"Create a notification string\
        \ with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\"\
        \ The exact variables and functions that may be referenced within an expression\
        \ are determined by the service that evaluates it. See the service documentation\
        \ for additional information."
      example:
        expression: expression
        description: description
        location: location
        title: title
      properties:
        description:
          description: "Optional. Description of the expression. This is a longer\
            \ text which describes the expression, e.g. when hovered over it in a\
            \ UI."
          type: string
        expression:
          description: Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        location:
          description: "Optional. String indicating the location of the expression\
            \ for error reporting, e.g. a file name and a position in the file."
          type: string
        title:
          description: "Optional. Title for the expression, i.e. a short string describing\
            \ its purpose. This can be used e.g. in UIs which allow to enter the expression."
          type: string
      type: object
    Fleet:
      description: "Fleet related configuration. Fleets are a Google Cloud concept\
        \ for logically organizing clusters, letting you use and manage multi-cluster\
        \ capabilities and apply consistent policies across your systems. See [Anthos\
        \ Fleets](`https://cloud.google.com/anthos/multicluster-management/fleets`)\
        \ for more details on Anthos multi-cluster capabilities using Fleets. ##"
      example:
        membership: membership
      properties:
        membership:
          description: Output only. The name of the managed fleet Membership resource
            associated to this cluster. Membership names are formatted as `projects//locations//memberships/`.
          readOnly: true
          type: string
      type: object
    ListBareMetalAdminClustersResponse:
      description: Response message for listing bare metal admin clusters.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        bareMetalAdminClusters:
        - fleet:
            membership: membership
          clusterOperations:
            enableApplicationLogs: true
          annotations:
            key: annotations
          description: description
          reconciling: true
          storage:
            lvpShareConfig:
              sharedPathPvCount: 5
              lvpConfig:
                path: path
                storageClass: storageClass
            lvpNodeMountsConfig:
              path: path
              storageClass: storageClass
          nodeConfig:
            maxPodsPerNode: maxPodsPerNode
          validationCheck:
            scenario: SCENARIO_UNSPECIFIED
            option: OPTIONS_UNSPECIFIED
            status:
              result:
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
          maintenanceStatus:
            machineDrainStatus:
              drainedMachines:
              - nodeIp: nodeIp
              - nodeIp: nodeIp
              drainingMachines:
              - nodeIp: nodeIp
                podCount: 5
              - nodeIp: nodeIp
                podCount: 5
          uid: uid
          endpoint: endpoint
          maintenanceConfig:
            maintenanceAddressCidrBlocks:
            - maintenanceAddressCidrBlocks
            - maintenanceAddressCidrBlocks
          controlPlane:
            apiServerArgs:
            - argument: argument
              value: value
            - argument: argument
              value: value
            controlPlaneNodePoolConfig:
              nodePoolConfig:
                kubeletConfig:
                  registryBurst: 0
                  registryPullQps: 6
                  serializeImagePullsDisabled: true
                nodeConfigs:
                - nodeIp: nodeIp
                  labels:
                    key: labels
                - nodeIp: nodeIp
                  labels:
                    key: labels
                taints:
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                labels:
                  key: labels
          loadBalancer:
            portConfig:
              controlPlaneLoadBalancerPort: 1
            vipConfig:
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              enabled: true
          bareMetalVersion: bareMetalVersion
          state: STATE_UNSPECIFIED
          binaryAuthorization:
            evaluationMode: EVALUATION_MODE_UNSPECIFIED
          nodeAccessConfig:
            loginUser: loginUser
          networkConfig:
            islandModeCidr:
              serviceAddressCidrBlocks:
              - serviceAddressCidrBlocks
              - serviceAddressCidrBlocks
              podAddressCidrBlocks:
              - podAddressCidrBlocks
              - podAddressCidrBlocks
          osEnvironmentConfig:
            packageRepoExcluded: true
          updateTime: updateTime
          localName: localName
          proxy:
            noProxy:
            - noProxy
            - noProxy
            uri: uri
          securityConfig:
            authorization:
              adminUsers:
              - username: username
              - username: username
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        - fleet:
            membership: membership
          clusterOperations:
            enableApplicationLogs: true
          annotations:
            key: annotations
          description: description
          reconciling: true
          storage:
            lvpShareConfig:
              sharedPathPvCount: 5
              lvpConfig:
                path: path
                storageClass: storageClass
            lvpNodeMountsConfig:
              path: path
              storageClass: storageClass
          nodeConfig:
            maxPodsPerNode: maxPodsPerNode
          validationCheck:
            scenario: SCENARIO_UNSPECIFIED
            option: OPTIONS_UNSPECIFIED
            status:
              result:
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
          maintenanceStatus:
            machineDrainStatus:
              drainedMachines:
              - nodeIp: nodeIp
              - nodeIp: nodeIp
              drainingMachines:
              - nodeIp: nodeIp
                podCount: 5
              - nodeIp: nodeIp
                podCount: 5
          uid: uid
          endpoint: endpoint
          maintenanceConfig:
            maintenanceAddressCidrBlocks:
            - maintenanceAddressCidrBlocks
            - maintenanceAddressCidrBlocks
          controlPlane:
            apiServerArgs:
            - argument: argument
              value: value
            - argument: argument
              value: value
            controlPlaneNodePoolConfig:
              nodePoolConfig:
                kubeletConfig:
                  registryBurst: 0
                  registryPullQps: 6
                  serializeImagePullsDisabled: true
                nodeConfigs:
                - nodeIp: nodeIp
                  labels:
                    key: labels
                - nodeIp: nodeIp
                  labels:
                    key: labels
                taints:
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                labels:
                  key: labels
          loadBalancer:
            portConfig:
              controlPlaneLoadBalancerPort: 1
            vipConfig:
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              enabled: true
          bareMetalVersion: bareMetalVersion
          state: STATE_UNSPECIFIED
          binaryAuthorization:
            evaluationMode: EVALUATION_MODE_UNSPECIFIED
          nodeAccessConfig:
            loginUser: loginUser
          networkConfig:
            islandModeCidr:
              serviceAddressCidrBlocks:
              - serviceAddressCidrBlocks
              - serviceAddressCidrBlocks
              podAddressCidrBlocks:
              - podAddressCidrBlocks
              - podAddressCidrBlocks
          osEnvironmentConfig:
            packageRepoExcluded: true
          updateTime: updateTime
          localName: localName
          proxy:
            noProxy:
            - noProxy
            - noProxy
            uri: uri
          securityConfig:
            authorization:
              adminUsers:
              - username: username
              - username: username
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
      properties:
        bareMetalAdminClusters:
          description: The list of bare metal admin cluster.
          items:
            $ref: '#/components/schemas/BareMetalAdminCluster'
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
            If the token is not empty this means that more results are available and
            should be retrieved by repeating the request with the provided page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListBareMetalClustersResponse:
      description: Response message for listing bare metal Clusters.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        bareMetalClusters:
        - fleet:
            membership: membership
          clusterOperations:
            enableApplicationLogs: true
          annotations:
            key: annotations
          description: description
          reconciling: true
          storage:
            lvpShareConfig:
              sharedPathPvCount: 5
              lvpConfig:
                path: path
                storageClass: storageClass
            lvpNodeMountsConfig:
              path: path
              storageClass: storageClass
          adminClusterName: adminClusterName
          nodeConfig:
            containerRuntime: CONTAINER_RUNTIME_UNSPECIFIED
            maxPodsPerNode: maxPodsPerNode
          validationCheck:
            scenario: SCENARIO_UNSPECIFIED
            option: OPTIONS_UNSPECIFIED
            status:
              result:
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
          maintenanceStatus:
            machineDrainStatus:
              drainedMachines:
              - nodeIp: nodeIp
              - nodeIp: nodeIp
              drainingMachines:
              - nodeIp: nodeIp
                podCount: 6
              - nodeIp: nodeIp
                podCount: 6
          uid: uid
          endpoint: endpoint
          maintenanceConfig:
            maintenanceAddressCidrBlocks:
            - maintenanceAddressCidrBlocks
            - maintenanceAddressCidrBlocks
          controlPlane:
            apiServerArgs:
            - argument: argument
              value: value
            - argument: argument
              value: value
            controlPlaneNodePoolConfig:
              nodePoolConfig:
                kubeletConfig:
                  registryBurst: 0
                  registryPullQps: 6
                  serializeImagePullsDisabled: true
                nodeConfigs:
                - nodeIp: nodeIp
                  labels:
                    key: labels
                - nodeIp: nodeIp
                  labels:
                    key: labels
                taints:
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                labels:
                  key: labels
          loadBalancer:
            portConfig:
              controlPlaneLoadBalancerPort: 0
            bgpLbConfig:
              bgpPeerConfigs:
              - ipAddress: ipAddress
                asn: asn
                controlPlaneNodes:
                - controlPlaneNodes
                - controlPlaneNodes
              - ipAddress: ipAddress
                asn: asn
                controlPlaneNodes:
                - controlPlaneNodes
                - controlPlaneNodes
              addressPools:
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              loadBalancerNodePoolConfig:
                nodePoolConfig:
                  kubeletConfig:
                    registryBurst: 0
                    registryPullQps: 6
                    serializeImagePullsDisabled: true
                  nodeConfigs:
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  taints:
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                  labels:
                    key: labels
              asn: asn
            metalLbConfig:
              addressPools:
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              loadBalancerNodePoolConfig:
                nodePoolConfig:
                  kubeletConfig:
                    registryBurst: 0
                    registryPullQps: 6
                    serializeImagePullsDisabled: true
                  nodeConfigs:
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  taints:
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                  labels:
                    key: labels
            vipConfig:
              ingressVip: ingressVip
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              enabled: true
          bareMetalVersion: bareMetalVersion
          state: STATE_UNSPECIFIED
          binaryAuthorization:
            evaluationMode: EVALUATION_MODE_UNSPECIFIED
          nodeAccessConfig:
            loginUser: loginUser
          adminClusterMembership: adminClusterMembership
          networkConfig:
            advancedNetworking: true
            islandModeCidr:
              serviceAddressCidrBlocks:
              - serviceAddressCidrBlocks
              - serviceAddressCidrBlocks
              podAddressCidrBlocks:
              - podAddressCidrBlocks
              - podAddressCidrBlocks
            multipleNetworkInterfacesConfig:
              enabled: true
            srIovConfig:
              enabled: true
          osEnvironmentConfig:
            packageRepoExcluded: true
          updateTime: updateTime
          upgradePolicy:
            policy: NODE_POOL_POLICY_UNSPECIFIED
          localName: localName
          proxy:
            noProxy:
            - noProxy
            - noProxy
            uri: uri
          securityConfig:
            authorization:
              adminUsers:
              - username: username
              - username: username
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        - fleet:
            membership: membership
          clusterOperations:
            enableApplicationLogs: true
          annotations:
            key: annotations
          description: description
          reconciling: true
          storage:
            lvpShareConfig:
              sharedPathPvCount: 5
              lvpConfig:
                path: path
                storageClass: storageClass
            lvpNodeMountsConfig:
              path: path
              storageClass: storageClass
          adminClusterName: adminClusterName
          nodeConfig:
            containerRuntime: CONTAINER_RUNTIME_UNSPECIFIED
            maxPodsPerNode: maxPodsPerNode
          validationCheck:
            scenario: SCENARIO_UNSPECIFIED
            option: OPTIONS_UNSPECIFIED
            status:
              result:
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
          maintenanceStatus:
            machineDrainStatus:
              drainedMachines:
              - nodeIp: nodeIp
              - nodeIp: nodeIp
              drainingMachines:
              - nodeIp: nodeIp
                podCount: 6
              - nodeIp: nodeIp
                podCount: 6
          uid: uid
          endpoint: endpoint
          maintenanceConfig:
            maintenanceAddressCidrBlocks:
            - maintenanceAddressCidrBlocks
            - maintenanceAddressCidrBlocks
          controlPlane:
            apiServerArgs:
            - argument: argument
              value: value
            - argument: argument
              value: value
            controlPlaneNodePoolConfig:
              nodePoolConfig:
                kubeletConfig:
                  registryBurst: 0
                  registryPullQps: 6
                  serializeImagePullsDisabled: true
                nodeConfigs:
                - nodeIp: nodeIp
                  labels:
                    key: labels
                - nodeIp: nodeIp
                  labels:
                    key: labels
                taints:
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                - effect: EFFECT_UNSPECIFIED
                  value: value
                  key: key
                operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                labels:
                  key: labels
          loadBalancer:
            portConfig:
              controlPlaneLoadBalancerPort: 0
            bgpLbConfig:
              bgpPeerConfigs:
              - ipAddress: ipAddress
                asn: asn
                controlPlaneNodes:
                - controlPlaneNodes
                - controlPlaneNodes
              - ipAddress: ipAddress
                asn: asn
                controlPlaneNodes:
                - controlPlaneNodes
                - controlPlaneNodes
              addressPools:
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              loadBalancerNodePoolConfig:
                nodePoolConfig:
                  kubeletConfig:
                    registryBurst: 0
                    registryPullQps: 6
                    serializeImagePullsDisabled: true
                  nodeConfigs:
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  taints:
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                  labels:
                    key: labels
              asn: asn
            metalLbConfig:
              addressPools:
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              loadBalancerNodePoolConfig:
                nodePoolConfig:
                  kubeletConfig:
                    registryBurst: 0
                    registryPullQps: 6
                    serializeImagePullsDisabled: true
                  nodeConfigs:
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  - nodeIp: nodeIp
                    labels:
                      key: labels
                  taints:
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  - effect: EFFECT_UNSPECIFIED
                    value: value
                    key: key
                  operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
                  labels:
                    key: labels
            vipConfig:
              ingressVip: ingressVip
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              enabled: true
          bareMetalVersion: bareMetalVersion
          state: STATE_UNSPECIFIED
          binaryAuthorization:
            evaluationMode: EVALUATION_MODE_UNSPECIFIED
          nodeAccessConfig:
            loginUser: loginUser
          adminClusterMembership: adminClusterMembership
          networkConfig:
            advancedNetworking: true
            islandModeCidr:
              serviceAddressCidrBlocks:
              - serviceAddressCidrBlocks
              - serviceAddressCidrBlocks
              podAddressCidrBlocks:
              - podAddressCidrBlocks
              - podAddressCidrBlocks
            multipleNetworkInterfacesConfig:
              enabled: true
            srIovConfig:
              enabled: true
          osEnvironmentConfig:
            packageRepoExcluded: true
          updateTime: updateTime
          upgradePolicy:
            policy: NODE_POOL_POLICY_UNSPECIFIED
          localName: localName
          proxy:
            noProxy:
            - noProxy
            - noProxy
            uri: uri
          securityConfig:
            authorization:
              adminUsers:
              - username: username
              - username: username
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
      properties:
        bareMetalClusters:
          description: The list of bare metal Clusters.
          items:
            $ref: '#/components/schemas/BareMetalCluster'
          type: array
        nextPageToken:
          description: A token identifying a page of results the server should return.
            If the token is not empty this means that more results are available and
            should be retrieved by repeating the request with the provided page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListBareMetalNodePoolsResponse:
      description: Response message for listing bare metal node pools.
      example:
        unreachable:
        - unreachable
        - unreachable
        bareMetalNodePools:
        - nodePoolConfig:
            kubeletConfig:
              registryBurst: 0
              registryPullQps: 6
              serializeImagePullsDisabled: true
            nodeConfigs:
            - nodeIp: nodeIp
              labels:
                key: labels
            - nodeIp: nodeIp
              labels:
                key: labels
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
            labels:
              key: labels
          displayName: displayName
          annotations:
            key: annotations
          reconciling: true
          updateTime: updateTime
          upgradePolicy:
            parallelUpgradeConfig:
              minimumAvailableNodes: 6
              concurrentNodes: 0
          uid: uid
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          state: STATE_UNSPECIFIED
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        - nodePoolConfig:
            kubeletConfig:
              registryBurst: 0
              registryPullQps: 6
              serializeImagePullsDisabled: true
            nodeConfigs:
            - nodeIp: nodeIp
              labels:
                key: labels
            - nodeIp: nodeIp
              labels:
                key: labels
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            operatingSystem: OPERATING_SYSTEM_UNSPECIFIED
            labels:
              key: labels
          displayName: displayName
          annotations:
            key: annotations
          reconciling: true
          updateTime: updateTime
          upgradePolicy:
            parallelUpgradeConfig:
              minimumAvailableNodes: 6
              concurrentNodes: 0
          uid: uid
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          state: STATE_UNSPECIFIED
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        nextPageToken: nextPageToken
      properties:
        bareMetalNodePools:
          description: The node pools from the specified parent resource.
          items:
            $ref: '#/components/schemas/BareMetalNodePool'
          type: array
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is omitted, there are no subsequent pages."
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      example:
        nextPageToken: nextPageToken
        locations:
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
      properties:
        locations:
          description: A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    ListVmwareAdminClustersResponse:
      description: Response message for listing VMware admin clusters.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        vmwareAdminClusters:
        - fleet:
            membership: membership
          annotations:
            key: annotations
          description: description
          reconciling: true
          antiAffinityGroups:
            aagConfigDisabled: true
          addonNode:
            autoResizeConfig:
              enabled: true
          authorization:
            viewerUsers:
            - username: username
            - username: username
          uid: uid
          endpoint: endpoint
          loadBalancer:
            seesawConfig:
              stackdriverName: stackdriverName
              masterIp: masterIp
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              enableHa: true
              vms:
              - vms
              - vms
              group: group
            f5Config:
              address: address
              partition: partition
              snatPool: snatPool
            metalLbConfig: "{}"
            vipConfig:
              addonsVip: addonsVip
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              konnectivityServerNodePort: 5
              ingressHttpNodePort: 1
              ingressHttpsNodePort: 5
              controlPlaneNodePort: 6
              addonsNodePort: 0
          vcenter:
            cluster: cluster
            address: address
            folder: folder
            datastore: datastore
            caCertData: caCertData
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            dataDisk: dataDisk
            resourcePool: resourcePool
          state: STATE_UNSPECIFIED
          imageType: imageType
          controlPlaneNode:
            memory: memory
            cpus: cpus
            replicas: replicas
          bootstrapClusterMembership: bootstrapClusterMembership
          preparedSecrets:
            enabled: true
          networkConfig:
            dhcpIpConfig:
              enabled: true
            haControlPlaneConfig:
              controlPlaneIpBlock:
                netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            hostConfig:
              ntpServers:
              - ntpServers
              - ntpServers
              dnsServers:
              - dnsServers
              - dnsServers
              dnsSearchDomains:
              - dnsSearchDomains
              - dnsSearchDomains
            serviceAddressCidrBlocks:
            - serviceAddressCidrBlocks
            - serviceAddressCidrBlocks
            vcenterNetwork: vcenterNetwork
            staticIpConfig:
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            podAddressCidrBlocks:
            - podAddressCidrBlocks
            - podAddressCidrBlocks
          updateTime: updateTime
          autoRepairConfig:
            enabled: true
          localName: localName
          onPremVersion: onPremVersion
          createTime: createTime
          platformConfig:
            bundles:
            - version: version
              status:
                errorMessage: errorMessage
                conditions:
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
            - version: version
              status:
                errorMessage: errorMessage
                conditions:
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
            platformVersion: platformVersion
            requiredPlatformVersion: requiredPlatformVersion
            status:
              errorMessage: errorMessage
              conditions:
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        - fleet:
            membership: membership
          annotations:
            key: annotations
          description: description
          reconciling: true
          antiAffinityGroups:
            aagConfigDisabled: true
          addonNode:
            autoResizeConfig:
              enabled: true
          authorization:
            viewerUsers:
            - username: username
            - username: username
          uid: uid
          endpoint: endpoint
          loadBalancer:
            seesawConfig:
              stackdriverName: stackdriverName
              masterIp: masterIp
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              enableHa: true
              vms:
              - vms
              - vms
              group: group
            f5Config:
              address: address
              partition: partition
              snatPool: snatPool
            metalLbConfig: "{}"
            vipConfig:
              addonsVip: addonsVip
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              konnectivityServerNodePort: 5
              ingressHttpNodePort: 1
              ingressHttpsNodePort: 5
              controlPlaneNodePort: 6
              addonsNodePort: 0
          vcenter:
            cluster: cluster
            address: address
            folder: folder
            datastore: datastore
            caCertData: caCertData
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            dataDisk: dataDisk
            resourcePool: resourcePool
          state: STATE_UNSPECIFIED
          imageType: imageType
          controlPlaneNode:
            memory: memory
            cpus: cpus
            replicas: replicas
          bootstrapClusterMembership: bootstrapClusterMembership
          preparedSecrets:
            enabled: true
          networkConfig:
            dhcpIpConfig:
              enabled: true
            haControlPlaneConfig:
              controlPlaneIpBlock:
                netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            hostConfig:
              ntpServers:
              - ntpServers
              - ntpServers
              dnsServers:
              - dnsServers
              - dnsServers
              dnsSearchDomains:
              - dnsSearchDomains
              - dnsSearchDomains
            serviceAddressCidrBlocks:
            - serviceAddressCidrBlocks
            - serviceAddressCidrBlocks
            vcenterNetwork: vcenterNetwork
            staticIpConfig:
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            podAddressCidrBlocks:
            - podAddressCidrBlocks
            - podAddressCidrBlocks
          updateTime: updateTime
          autoRepairConfig:
            enabled: true
          localName: localName
          onPremVersion: onPremVersion
          createTime: createTime
          platformConfig:
            bundles:
            - version: version
              status:
                errorMessage: errorMessage
                conditions:
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
            - version: version
              status:
                errorMessage: errorMessage
                conditions:
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                - reason: reason
                  state: STATE_UNSPECIFIED
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
            platformVersion: platformVersion
            requiredPlatformVersion: requiredPlatformVersion
            status:
              errorMessage: errorMessage
              conditions:
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
            If the token is not empty this means that more results are available and
            should be retrieved by repeating the request with the provided page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        vmwareAdminClusters:
          description: The list of VMware admin cluster.
          items:
            $ref: '#/components/schemas/VmwareAdminCluster'
          type: array
      type: object
    ListVmwareClustersResponse:
      description: Response message for listing VMware Clusters.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        vmwareClusters:
        - disableBundledIngress: true
          fleet:
            membership: membership
          dataplaneV2:
            dataplaneV2Enabled: true
            advancedNetworking: true
            windowsDataplaneV2Enabled: true
            forwardMode: forwardMode
          annotations:
            key: annotations
          description: description
          reconciling: true
          storage:
            vsphereCsiDisabled: true
          antiAffinityGroups:
            aagConfigDisabled: true
          adminClusterName: adminClusterName
          validationCheck:
            scenario: SCENARIO_UNSPECIFIED
            option: OPTIONS_UNSPECIFIED
            status:
              result:
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
          enableControlPlaneV2: true
          authorization:
            adminUsers:
            - username: username
            - username: username
          uid: uid
          endpoint: endpoint
          vmTrackingEnabled: true
          loadBalancer:
            seesawConfig:
              stackdriverName: stackdriverName
              masterIp: masterIp
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              enableHa: true
              vms:
              - vms
              - vms
              group: group
            f5Config:
              address: address
              partition: partition
              snatPool: snatPool
            metalLbConfig:
              addressPools:
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
            vipConfig:
              ingressVip: ingressVip
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              konnectivityServerNodePort: 5
              ingressHttpNodePort: 6
              ingressHttpsNodePort: 1
              controlPlaneNodePort: 0
          vcenter:
            cluster: cluster
            address: address
            folder: folder
            datastore: datastore
            caCertData: caCertData
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            resourcePool: resourcePool
          state: STATE_UNSPECIFIED
          binaryAuthorization:
            evaluationMode: EVALUATION_MODE_UNSPECIFIED
          controlPlaneNode:
            autoResizeConfig:
              enabled: true
            memory: memory
            vsphereConfig:
              datastore: datastore
              storagePolicyName: storagePolicyName
            cpus: cpus
            replicas: replicas
          adminClusterMembership: adminClusterMembership
          networkConfig:
            dhcpIpConfig:
              enabled: true
            hostConfig:
              ntpServers:
              - ntpServers
              - ntpServers
              dnsServers:
              - dnsServers
              - dnsServers
              dnsSearchDomains:
              - dnsSearchDomains
              - dnsSearchDomains
            serviceAddressCidrBlocks:
            - serviceAddressCidrBlocks
            - serviceAddressCidrBlocks
            vcenterNetwork: vcenterNetwork
            controlPlaneV2Config:
              controlPlaneIpBlock:
                netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            staticIpConfig:
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            podAddressCidrBlocks:
            - podAddressCidrBlocks
            - podAddressCidrBlocks
          updateTime: updateTime
          autoRepairConfig:
            enabled: true
          upgradePolicy:
            controlPlaneOnly: true
          localName: localName
          onPremVersion: onPremVersion
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        - disableBundledIngress: true
          fleet:
            membership: membership
          dataplaneV2:
            dataplaneV2Enabled: true
            advancedNetworking: true
            windowsDataplaneV2Enabled: true
            forwardMode: forwardMode
          annotations:
            key: annotations
          description: description
          reconciling: true
          storage:
            vsphereCsiDisabled: true
          antiAffinityGroups:
            aagConfigDisabled: true
          adminClusterName: adminClusterName
          validationCheck:
            scenario: SCENARIO_UNSPECIFIED
            option: OPTIONS_UNSPECIFIED
            status:
              result:
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
              - reason: reason
                description: description
                details: details
                state: STATE_UNKNOWN
                category: category
          enableControlPlaneV2: true
          authorization:
            adminUsers:
            - username: username
            - username: username
          uid: uid
          endpoint: endpoint
          vmTrackingEnabled: true
          loadBalancer:
            seesawConfig:
              stackdriverName: stackdriverName
              masterIp: masterIp
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              enableHa: true
              vms:
              - vms
              - vms
              group: group
            f5Config:
              address: address
              partition: partition
              snatPool: snatPool
            metalLbConfig:
              addressPools:
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
              - addresses:
                - addresses
                - addresses
                avoidBuggyIps: true
                pool: pool
                manualAssign: true
            vipConfig:
              ingressVip: ingressVip
              controlPlaneVip: controlPlaneVip
            manualLbConfig:
              konnectivityServerNodePort: 5
              ingressHttpNodePort: 6
              ingressHttpsNodePort: 1
              controlPlaneNodePort: 0
          vcenter:
            cluster: cluster
            address: address
            folder: folder
            datastore: datastore
            caCertData: caCertData
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            resourcePool: resourcePool
          state: STATE_UNSPECIFIED
          binaryAuthorization:
            evaluationMode: EVALUATION_MODE_UNSPECIFIED
          controlPlaneNode:
            autoResizeConfig:
              enabled: true
            memory: memory
            vsphereConfig:
              datastore: datastore
              storagePolicyName: storagePolicyName
            cpus: cpus
            replicas: replicas
          adminClusterMembership: adminClusterMembership
          networkConfig:
            dhcpIpConfig:
              enabled: true
            hostConfig:
              ntpServers:
              - ntpServers
              - ntpServers
              dnsServers:
              - dnsServers
              - dnsServers
              dnsSearchDomains:
              - dnsSearchDomains
              - dnsSearchDomains
            serviceAddressCidrBlocks:
            - serviceAddressCidrBlocks
            - serviceAddressCidrBlocks
            vcenterNetwork: vcenterNetwork
            controlPlaneV2Config:
              controlPlaneIpBlock:
                netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            staticIpConfig:
              ipBlocks:
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
              - netmask: netmask
                ips:
                - hostname: hostname
                  ip: ip
                - hostname: hostname
                  ip: ip
                gateway: gateway
            podAddressCidrBlocks:
            - podAddressCidrBlocks
            - podAddressCidrBlocks
          updateTime: updateTime
          autoRepairConfig:
            enabled: true
          upgradePolicy:
            controlPlaneOnly: true
          localName: localName
          onPremVersion: onPremVersion
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
            If the token is not empty this means that more results are available and
            should be retrieved by repeating the request with the provided page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        vmwareClusters:
          description: The list of VMware Cluster.
          items:
            $ref: '#/components/schemas/VmwareCluster'
          type: array
      type: object
    ListVmwareNodePoolsResponse:
      description: Response message for listing VMware node pools.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        vmwareNodePools:
        - displayName: displayName
          annotations:
            key: annotations
          reconciling: true
          updateTime: updateTime
          onPremVersion: onPremVersion
          uid: uid
          nodePoolAutoscaling:
            maxReplicas: 0
            minReplicas: 6
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          state: STATE_UNSPECIFIED
          config:
            image: image
            memoryMb: memoryMb
            vsphereConfig:
              hostGroups:
              - hostGroups
              - hostGroups
              datastore: datastore
              tags:
              - tag: tag
                category: category
              - tag: tag
                category: category
            cpus: cpus
            replicas: replicas
            enableLoadBalancer: true
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            bootDiskSizeGb: bootDiskSizeGb
            imageType: imageType
            labels:
              key: labels
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        - displayName: displayName
          annotations:
            key: annotations
          reconciling: true
          updateTime: updateTime
          onPremVersion: onPremVersion
          uid: uid
          nodePoolAutoscaling:
            maxReplicas: 0
            minReplicas: 6
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          state: STATE_UNSPECIFIED
          config:
            image: image
            memoryMb: memoryMb
            vsphereConfig:
              hostGroups:
              - hostGroups
              - hostGroups
              datastore: datastore
              tags:
              - tag: tag
                category: category
              - tag: tag
                category: category
            cpus: cpus
            replicas: replicas
            enableLoadBalancer: true
            taints:
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            - effect: EFFECT_UNSPECIFIED
              value: value
              key: key
            bootDiskSizeGb: bootDiskSizeGb
            imageType: imageType
            labels:
              key: labels
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
      properties:
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is omitted, there are no subsequent pages."
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        vmwareNodePools:
          description: The node pools from the specified parent resource.
          items:
            $ref: '#/components/schemas/VmwareNodePool'
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      example:
        metadata:
          key: ""
        displayName: displayName
        locationId: locationId
        name: name
        labels:
          key: labels
      properties:
        displayName:
          description: "The friendly name for this location, typically a nearby city\
            \ name. For example, \"Tokyo\"."
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Cross-service attributes for the location. For example {\"\
            cloud.googleapis.com/region\": \"us-east1\"}"
          type: object
        locationId:
          description: "The canonical id for this location. For example: `\"us-east1\"\
            `."
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata. For example the available capacity
            at the given location.
          type: object
        name:
          description: "Resource name for the location, which may vary between implementations.\
            \ For example: `\"projects/example-project/locations/us-east1\"`"
          type: string
      type: object
    Metric:
      description: "Progress metric is (string, int|float|string) pair."
      properties:
        doubleValue:
          description: For metrics with floating point value.
          format: double
          type: number
        intValue:
          description: For metrics with integer value.
          format: int64
          type: string
        metric:
          description: Required. The metric name.
          enum:
          - METRIC_ID_UNSPECIFIED
          - NODES_TOTAL
          - NODES_DRAINING
          - NODES_UPGRADING
          - NODES_PENDING_UPGRADE
          - NODES_UPGRADED
          - NODES_FAILED
          - NODES_HEALTHY
          - NODES_RECONCILING
          - NODES_IN_MAINTENANCE
          - PREFLIGHTS_COMPLETED
          - PREFLIGHTS_RUNNING
          - PREFLIGHTS_FAILED
          - PREFLIGHTS_TOTAL
          type: string
        stringValue:
          description: "For metrics with custom values (ratios, visual progress, etc.)."
          type: string
      type: object
    NodeTaint:
      description: NodeTaint applied to every Kubernetes node in a node pool. Kubernetes
        taints can be used together with tolerations to control how workloads are
        scheduled to your nodes. Node taints are permanent.
      example:
        effect: EFFECT_UNSPECIFIED
        value: value
        key: key
      properties:
        effect:
          description: The taint effect.
          enum:
          - EFFECT_UNSPECIFIED
          - NO_SCHEDULE
          - PREFER_NO_SCHEDULE
          - NO_EXECUTE
          type: string
        key:
          description: Key associated with the effect.
          type: string
        value:
          description: Value associated with the effect.
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        controlPlaneDisconnected:
          description: Output only. Denotes if the local managing cluster's control
            plane is currently disconnected. This is expected to occur temporarily
            during self-managed cluster upgrades.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        progress:
          $ref: '#/components/schemas/OperationProgress'
        requestedCancellation:
          description: "Output only. Identifies whether the user has requested cancellation\
            \ of the operation. Operations that have successfully been cancelled have\
            \ [Operation.error] value with a [google.rpc.Status.code] of 1, corresponding\
            \ to `Code.CANCELLED`."
          readOnly: true
          type: boolean
        statusMessage:
          description: "Output only. Human-readable status of the operation, if any."
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of
            the operation.
          readOnly: true
          type: string
        type:
          description: Output only. Type of operation being executed.
          enum:
          - OPERATION_TYPE_UNSPECIFIED
          - CREATE
          - DELETE
          - UPDATE
          - UPGRADE
          - PLATFORM_UPGRADE
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    OperationProgress:
      description: Information about operation progress.
      properties:
        stages:
          description: The stages of the operation.
          items:
            $ref: '#/components/schemas/OperationStage'
          type: array
      type: object
    OperationStage:
      description: Information about a particular stage of an operation.
      properties:
        endTime:
          description: Time the stage ended.
          format: google-datetime
          type: string
        metrics:
          description: Progress metric bundle.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        stage:
          description: The high-level stage of the operation.
          enum:
          - STAGE_UNSPECIFIED
          - PREFLIGHT_CHECK
          - CONFIGURE
          - DEPLOY
          - HEALTH_CHECK
          - UPDATE
          type: string
        startTime:
          description: Time the stage started.
          format: google-datetime
          type: string
        state:
          description: Output only. State of the stage.
          enum:
          - STATE_UNSPECIFIED
          - PENDING
          - RUNNING
          - SUCCEEDED
          - FAILED
          readOnly: true
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies\
        \ access controls for Google Cloud resources. A `Policy` is a collection of\
        \ `bindings`. A `binding` binds one or more `members`, or principals, to a\
        \ single `role`. Principals can be user accounts, service accounts, Google\
        \ groups, and domains (such as G Suite). A `role` is a named list of permissions;\
        \ each `role` can be an IAM predefined role or a user-created custom role.\
        \ For some types of Google Cloud resources, a `binding` can also specify a\
        \ `condition`, which is a logical expression that allows access to a resource\
        \ only if the expression evaluates to `true`. A condition can add constraints\
        \ based on attributes of the request, the resource, or both. To learn which\
        \ resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\
        \ **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\"\
        , \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\",\
        \ \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\
        \ ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\"\
        : [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\"\
        , \"description\": \"Does not grant access after Sep 2020\", \"expression\"\
        : \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\"\
        : \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: -\
        \ members: - user:mike@example.com - group:admins@example.com - domain:google.com\
        \ - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\
        \ - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\
        \ condition: title: expirable access description: Does not grant access after\
        \ Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\
        \ etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features,\
        \ see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      example:
        bindings:
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        etag: etag
        version: 0
      properties:
        bindings:
          description: "Associates a list of `members`, or principals, with a `role`.\
            \ Optionally, may specify a `condition` that determines how and when the\
            \ `bindings` are applied. Each of the `bindings` must contain at least\
            \ one principal. The `bindings` in a `Policy` can refer to up to 1,500\
            \ principals; up to 250 of these principals can be Google groups. Each\
            \ occurrence of a principal counts towards these limits. For example,\
            \ if the `bindings` grant 50 different roles to `user:alice@example.com`,\
            \ and not to any other principal, then you can add another 1,450 principals\
            \ to the `bindings` in the `Policy`."
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way\
            \ to help prevent simultaneous updates of a policy from overwriting each\
            \ other. It is strongly suggested that systems make use of the `etag`\
            \ in the read-modify-write cycle to perform policy updates in order to\
            \ avoid race conditions: An `etag` is returned in the response to `getIamPolicy`,\
            \ and systems are expected to put that etag in the request to `setIamPolicy`\
            \ to ensure that their change will be applied to the same version of the\
            \ policy. **Important:** If you use IAM Conditions, you must include the\
            \ `etag` field whenever you call `setIamPolicy`. If you omit this field,\
            \ then IAM allows you to overwrite a version `3` policy with a version\
            \ `1` policy, and all of the conditions in the version `3` policy are\
            \ lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`,\
            \ `1`, and `3`. Requests that specify an invalid value are rejected. Any\
            \ operation that affects conditional role bindings must specify version\
            \ `3`. This requirement applies to the following operations: * Getting\
            \ a policy that includes a conditional role binding * Adding a conditional\
            \ role binding to a policy * Changing a conditional role binding in a\
            \ policy * Removing any role binding, with or without a condition, from\
            \ a policy that includes conditions **Important:** If you use IAM Conditions,\
            \ you must include the `etag` field whenever you call `setIamPolicy`.\
            \ If you omit this field, then IAM allows you to overwrite a version `3`\
            \ policy with a version `1` policy, and all of the conditions in the version\
            \ `3` policy are lost. If a policy does not include any conditions, operations\
            \ on that policy may specify any valid version or leave the field unset.\
            \ To learn which resources support conditions in their IAM policies, see\
            \ the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    QueryBareMetalAdminVersionConfigResponse:
      description: Response message for querying bare metal admin cluster version
        config.
      example:
        versions:
        - hasDependencies: true
          version: version
          dependencies:
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
        - hasDependencies: true
          version: version
          dependencies:
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
      properties:
        versions:
          description: List of available versions to install or to upgrade to.
          items:
            $ref: '#/components/schemas/BareMetalVersionInfo'
          type: array
      type: object
    QueryBareMetalVersionConfigResponse:
      description: Response message for querying bare metal admin cluster version
        config.
      example:
        versions:
        - hasDependencies: true
          version: version
          dependencies:
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
        - hasDependencies: true
          version: version
          dependencies:
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
      properties:
        versions:
          description: List of available versions to install or to upgrade to.
          items:
            $ref: '#/components/schemas/BareMetalVersionInfo'
          type: array
      type: object
    QueryVmwareVersionConfigResponse:
      description: Response message for querying VMware user cluster version config.
      example:
        versions:
        - isInstalled: true
          hasDependencies: true
          version: version
          dependencies:
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
        - isInstalled: true
          hasDependencies: true
          version: version
          dependencies:
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
          - resourceName: resourceName
            membership: membership
            currentVersion: currentVersion
            targetVersion: targetVersion
      properties:
        versions:
          description: List of available versions to install or to upgrade to.
          items:
            $ref: '#/components/schemas/VmwareVersionInfo'
          type: array
      type: object
    ResourceCondition:
      description: ResourceCondition provides a standard mechanism for higher-level
        status reporting from controller.
      example:
        reason: reason
        state: STATE_UNSPECIFIED
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
      properties:
        lastTransitionTime:
          description: Last time the condition transit from one status to another.
          format: google-datetime
          type: string
        message:
          description: Human-readable message indicating details about last transition.
          type: string
        reason:
          description: Machine-readable message indicating details about last transition.
          type: string
        state:
          description: state of the condition.
          enum:
          - STATE_UNSPECIFIED
          - STATE_TRUE
          - STATE_FALSE
          - STATE_UNKNOWN
          type: string
        type:
          description: "Type of the condition. (e.g., ClusterRunning, NodePoolRunning\
            \ or ServerSidePreflightReady)"
          type: string
      type: object
    ResourceStatus:
      description: "ResourceStatus describes why a cluster or node pool has a certain\
        \ status. (e.g., ERROR or DEGRADED)."
      example:
        errorMessage: errorMessage
        conditions:
        - reason: reason
          state: STATE_UNSPECIFIED
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
        - reason: reason
          state: STATE_UNSPECIFIED
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
      properties:
        conditions:
          description: ResourceCondition provide a standard mechanism for higher-level
            status reporting from controller.
          items:
            $ref: '#/components/schemas/ResourceCondition'
          type: array
        errorMessage:
          description: "Human-friendly representation of the error message from controller.\
            \ The error message can be temporary as the controller controller creates\
            \ a cluster or node pool. If the error message persists for a longer period\
            \ of time, it can be used to surface error message to indicate real problems\
            \ requiring user intervention."
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      example:
        policy:
          bindings:
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          - condition:
              expression: expression
              description: description
              location: location
              title: title
            role: role
            members:
            - members
            - members
          etag: etag
          version: 0
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: "The set of permissions to check for the `resource`. Permissions\
            \ with wildcards (such as `*` or `storage.*`) are not allowed. For more\
            \ information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller
            is allowed.
          items:
            type: string
          type: array
      type: object
    UpgradeDependency:
      description: UpgradeDependency represents a dependency when upgrading a resource.
      example:
        resourceName: resourceName
        membership: membership
        currentVersion: currentVersion
        targetVersion: targetVersion
      properties:
        currentVersion:
          description: Current version of the dependency e.g. 1.15.0.
          type: string
        membership:
          description: Membership names are formatted as `projects//locations//memberships/`.
          type: string
        resourceName:
          description: Resource name of the dependency.
          type: string
        targetVersion:
          description: Target version of the dependency e.g. 1.16.1. This is the version
            the dependency needs to be upgraded to before a resource can be upgraded.
          type: string
      type: object
    ValidationCheck:
      description: ValidationCheck represents the result of preflight check.
      example:
        scenario: SCENARIO_UNSPECIFIED
        option: OPTIONS_UNSPECIFIED
        status:
          result:
          - reason: reason
            description: description
            details: details
            state: STATE_UNKNOWN
            category: category
          - reason: reason
            description: description
            details: details
            state: STATE_UNKNOWN
            category: category
      properties:
        option:
          description: Options used for the validation check
          enum:
          - OPTIONS_UNSPECIFIED
          - SKIP_VALIDATION_CHECK_BLOCKING
          - SKIP_VALIDATION_ALL
          type: string
        scenario:
          description: Output only. The scenario when the preflight checks were run.
          enum:
          - SCENARIO_UNSPECIFIED
          - CREATE
          - UPDATE
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/ValidationCheckStatus'
      type: object
    ValidationCheckResult:
      description: ValidationCheckResult defines the details about the validation
        check.
      example:
        reason: reason
        description: description
        details: details
        state: STATE_UNKNOWN
        category: category
      properties:
        category:
          description: The category of the validation.
          type: string
        description:
          description: The description of the validation check.
          type: string
        details:
          description: "Detailed failure information, which might be unformatted."
          type: string
        reason:
          description: A human-readable message of the check failure.
          type: string
        state:
          description: The validation check state.
          enum:
          - STATE_UNKNOWN
          - STATE_FAILURE
          - STATE_SKIPPED
          - STATE_FATAL
          - STATE_WARNING
          type: string
      type: object
    ValidationCheckStatus:
      description: ValidationCheckStatus defines the detailed validation check status.
      example:
        result:
        - reason: reason
          description: description
          details: details
          state: STATE_UNKNOWN
          category: category
        - reason: reason
          description: description
          details: details
          state: STATE_UNKNOWN
          category: category
      properties:
        result:
          description: Individual checks which failed as part of the Preflight check
            execution.
          items:
            $ref: '#/components/schemas/ValidationCheckResult'
          type: array
      type: object
    VmwareAAGConfig:
      description: Specifies anti affinity group config for the VMware user cluster.
      example:
        aagConfigDisabled: true
      properties:
        aagConfigDisabled:
          description: Spread nodes across at least three physical hosts (requires
            at least three hosts). Enabled by default.
          type: boolean
      type: object
    VmwareAddressPool:
      description: Represents an IP pool used by the load balancer.
      example:
        addresses:
        - addresses
        - addresses
        avoidBuggyIps: true
        pool: pool
        manualAssign: true
      properties:
        addresses:
          description: Required. The addresses that are part of this pool. Each address
            must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).
          items:
            type: string
          type: array
        avoidBuggyIps:
          description: "If true, avoid using IPs ending in .0 or .255. This avoids\
            \ buggy consumer devices mistakenly dropping IPv4 traffic for those special\
            \ IP addresses."
          type: boolean
        manualAssign:
          description: "If true, prevent IP addresses from being automatically assigned."
          type: boolean
        pool:
          description: Required. The name of the address pool.
          type: string
      type: object
    VmwareAdminAddonNodeConfig:
      description: VmwareAdminAddonNodeConfig contains add-on node configurations
        for VMware admin cluster.
      example:
        autoResizeConfig:
          enabled: true
      properties:
        autoResizeConfig:
          $ref: '#/components/schemas/VmwareAutoResizeConfig'
      type: object
    VmwareAdminAuthorizationConfig:
      description: VmwareAdminAuthorizationConfig represents configuration for admin
        cluster authorization.
      example:
        viewerUsers:
        - username: username
        - username: username
      properties:
        viewerUsers:
          description: "For VMware admin clusters, users will be granted the cluster-viewer\
            \ role on the cluster."
          items:
            $ref: '#/components/schemas/ClusterUser'
          type: array
      type: object
    VmwareAdminCluster:
      description: Resource that represents a VMware admin cluster.
      example:
        fleet:
          membership: membership
        annotations:
          key: annotations
        description: description
        reconciling: true
        antiAffinityGroups:
          aagConfigDisabled: true
        addonNode:
          autoResizeConfig:
            enabled: true
        authorization:
          viewerUsers:
          - username: username
          - username: username
        uid: uid
        endpoint: endpoint
        loadBalancer:
          seesawConfig:
            stackdriverName: stackdriverName
            masterIp: masterIp
            ipBlocks:
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
            enableHa: true
            vms:
            - vms
            - vms
            group: group
          f5Config:
            address: address
            partition: partition
            snatPool: snatPool
          metalLbConfig: "{}"
          vipConfig:
            addonsVip: addonsVip
            controlPlaneVip: controlPlaneVip
          manualLbConfig:
            konnectivityServerNodePort: 5
            ingressHttpNodePort: 1
            ingressHttpsNodePort: 5
            controlPlaneNodePort: 6
            addonsNodePort: 0
        vcenter:
          cluster: cluster
          address: address
          folder: folder
          datastore: datastore
          caCertData: caCertData
          datacenter: datacenter
          storagePolicyName: storagePolicyName
          dataDisk: dataDisk
          resourcePool: resourcePool
        state: STATE_UNSPECIFIED
        imageType: imageType
        controlPlaneNode:
          memory: memory
          cpus: cpus
          replicas: replicas
        bootstrapClusterMembership: bootstrapClusterMembership
        preparedSecrets:
          enabled: true
        networkConfig:
          dhcpIpConfig:
            enabled: true
          haControlPlaneConfig:
            controlPlaneIpBlock:
              netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
          hostConfig:
            ntpServers:
            - ntpServers
            - ntpServers
            dnsServers:
            - dnsServers
            - dnsServers
            dnsSearchDomains:
            - dnsSearchDomains
            - dnsSearchDomains
          serviceAddressCidrBlocks:
          - serviceAddressCidrBlocks
          - serviceAddressCidrBlocks
          vcenterNetwork: vcenterNetwork
          staticIpConfig:
            ipBlocks:
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
          podAddressCidrBlocks:
          - podAddressCidrBlocks
          - podAddressCidrBlocks
        updateTime: updateTime
        autoRepairConfig:
          enabled: true
        localName: localName
        onPremVersion: onPremVersion
        createTime: createTime
        platformConfig:
          bundles:
          - version: version
            status:
              errorMessage: errorMessage
              conditions:
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
          - version: version
            status:
              errorMessage: errorMessage
              conditions:
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
              - reason: reason
                state: STATE_UNSPECIFIED
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
          platformVersion: platformVersion
          requiredPlatformVersion: requiredPlatformVersion
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        name: name
        etag: etag
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        addonNode:
          $ref: '#/components/schemas/VmwareAdminAddonNodeConfig'
        annotations:
          additionalProperties:
            type: string
          description: "Annotations on the VMware admin cluster. This field has the\
            \ same restrictions as Kubernetes annotations. The total size of all keys\
            \ and values combined is limited to 256k. Key can have 2 segments: prefix\
            \ (optional) and name (required), separated by a slash (/). Prefix must\
            \ be a DNS subdomain. Name must be 63 characters or less, begin and end\
            \ with alphanumerics, with dashes (-), underscores (_), dots (.), and\
            \ alphanumerics between."
          type: object
        antiAffinityGroups:
          $ref: '#/components/schemas/VmwareAAGConfig'
        authorization:
          $ref: '#/components/schemas/VmwareAdminAuthorizationConfig'
        autoRepairConfig:
          $ref: '#/components/schemas/VmwareAutoRepairConfig'
        bootstrapClusterMembership:
          description: The bootstrap cluster this VMware admin cluster belongs to.
          type: string
        controlPlaneNode:
          $ref: '#/components/schemas/VmwareAdminControlPlaneNodeConfig'
        createTime:
          description: Output only. The time at which VMware admin cluster was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A human readable description of this VMware admin cluster.
          type: string
        endpoint:
          description: Output only. The DNS name of VMware admin cluster's API server.
          readOnly: true
          type: string
        etag:
          description: "This checksum is computed by the server based on the value\
            \ of other fields, and may be sent on update and delete requests to ensure\
            \ the client has an up-to-date value before proceeding. Allows clients\
            \ to perform consistent read-modify-writes through optimistic concurrency\
            \ control."
          type: string
        fleet:
          $ref: '#/components/schemas/Fleet'
        imageType:
          description: The OS image type for the VMware admin cluster.
          type: string
        loadBalancer:
          $ref: '#/components/schemas/VmwareAdminLoadBalancerConfig'
        localName:
          description: "Output only. The object name of the VMware OnPremAdminCluster\
            \ custom resource. This field is used to support conflicting names when\
            \ enrolling existing clusters to the API. When used as a part of cluster\
            \ enrollment, this field will differ from the ID in the resource name.\
            \ For new clusters, this field will match the user provided cluster name\
            \ and be visible in the last component of the resource name. It is not\
            \ modifiable. All users should use this name to access their cluster using\
            \ gkectl or kubectl and should expect to see the local name when viewing\
            \ admin cluster controller logs."
          readOnly: true
          type: string
        name:
          description: Immutable. The VMware admin cluster resource name.
          type: string
        networkConfig:
          $ref: '#/components/schemas/VmwareAdminNetworkConfig'
        onPremVersion:
          description: The Anthos clusters on the VMware version for the admin cluster.
          type: string
        platformConfig:
          $ref: '#/components/schemas/VmwarePlatformConfig'
        preparedSecrets:
          $ref: '#/components/schemas/VmwareAdminPreparedSecretsConfig'
        reconciling:
          description: "Output only. If set, there are currently changes in flight\
            \ to the VMware admin cluster."
          readOnly: true
          type: boolean
        state:
          description: Output only. The current state of VMware admin cluster.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
          - DEGRADED
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
        uid:
          description: Output only. The unique identifier of the VMware admin cluster.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which VMware admin cluster was last
            updated.
          format: google-datetime
          readOnly: true
          type: string
        vcenter:
          $ref: '#/components/schemas/VmwareAdminVCenterConfig'
      type: object
    VmwareAdminControlPlaneNodeConfig:
      description: VmwareAdminControlPlaneNodeConfig contains control plane node configuration
        for VMware admin cluster.
      example:
        memory: memory
        cpus: cpus
        replicas: replicas
      properties:
        cpus:
          description: The number of vCPUs for the control-plane node of the admin
            cluster.
          format: int64
          type: string
        memory:
          description: The number of mebibytes of memory for the control-plane node
            of the admin cluster.
          format: int64
          type: string
        replicas:
          description: "The number of control plane nodes for this VMware admin cluster.\
            \ (default: 1 replica)."
          format: int64
          type: string
      type: object
    VmwareAdminF5BigIpConfig:
      description: VmwareAdminF5BigIpConfig represents configuration parameters for
        an F5 BIG-IP load balancer.
      example:
        address: address
        partition: partition
        snatPool: snatPool
      properties:
        address:
          description: The load balancer's IP address.
          type: string
        partition:
          description: "The preexisting partition to be used by the load balancer.\
            \ This partition is usually created for the admin cluster for example:\
            \ 'my-f5-admin-partition'."
          type: string
        snatPool:
          description: "The pool name. Only necessary, if using SNAT."
          type: string
      type: object
    VmwareAdminHAControlPlaneConfig:
      description: Specifies HA admin control plane config.
      example:
        controlPlaneIpBlock:
          netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
      properties:
        controlPlaneIpBlock:
          $ref: '#/components/schemas/VmwareIpBlock'
      type: object
    VmwareAdminLoadBalancerConfig:
      description: VmwareAdminLoadBalancerConfig contains load balancer configuration
        for VMware admin cluster.
      example:
        seesawConfig:
          stackdriverName: stackdriverName
          masterIp: masterIp
          ipBlocks:
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
          enableHa: true
          vms:
          - vms
          - vms
          group: group
        f5Config:
          address: address
          partition: partition
          snatPool: snatPool
        metalLbConfig: "{}"
        vipConfig:
          addonsVip: addonsVip
          controlPlaneVip: controlPlaneVip
        manualLbConfig:
          konnectivityServerNodePort: 5
          ingressHttpNodePort: 1
          ingressHttpsNodePort: 5
          controlPlaneNodePort: 6
          addonsNodePort: 0
      properties:
        f5Config:
          $ref: '#/components/schemas/VmwareAdminF5BigIpConfig'
        manualLbConfig:
          $ref: '#/components/schemas/VmwareAdminManualLbConfig'
        metalLbConfig:
          description: "VmwareAdminMetalLbConfig represents configuration parameters\
            \ for a MetalLB load balancer. For admin clusters, currently no configurations\
            \ is needed."
          properties: {}
          type: object
        seesawConfig:
          $ref: '#/components/schemas/VmwareAdminSeesawConfig'
        vipConfig:
          $ref: '#/components/schemas/VmwareAdminVipConfig'
      type: object
    VmwareAdminManualLbConfig:
      example:
        konnectivityServerNodePort: 5
        ingressHttpNodePort: 1
        ingressHttpsNodePort: 5
        controlPlaneNodePort: 6
        addonsNodePort: 0
      properties:
        addonsNodePort:
          description: NodePort for add-ons server in the admin cluster.
          format: int32
          type: integer
        controlPlaneNodePort:
          description: NodePort for control plane service. The Kubernetes API server
            in the admin cluster is implemented as a Service of type NodePort (ex.
            30968).
          format: int32
          type: integer
        ingressHttpNodePort:
          description: NodePort for ingress service's http. The ingress service in
            the admin cluster is implemented as a Service of type NodePort (ex. 32527).
          format: int32
          type: integer
        ingressHttpsNodePort:
          description: NodePort for ingress service's https. The ingress service in
            the admin cluster is implemented as a Service of type NodePort (ex. 30139).
          format: int32
          type: integer
        konnectivityServerNodePort:
          description: NodePort for konnectivity server service running as a sidecar
            in each kube-apiserver pod (ex. 30564).
          format: int32
          type: integer
      type: object
    VmwareAdminMetalLbConfig:
      description: "VmwareAdminMetalLbConfig represents configuration parameters for\
        \ a MetalLB load balancer. For admin clusters, currently no configurations\
        \ is needed."
      properties: {}
      type: object
    VmwareAdminNetworkConfig:
      description: VmwareAdminNetworkConfig contains network configuration for VMware
        admin cluster.
      example:
        dhcpIpConfig:
          enabled: true
        haControlPlaneConfig:
          controlPlaneIpBlock:
            netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
        hostConfig:
          ntpServers:
          - ntpServers
          - ntpServers
          dnsServers:
          - dnsServers
          - dnsServers
          dnsSearchDomains:
          - dnsSearchDomains
          - dnsSearchDomains
        serviceAddressCidrBlocks:
        - serviceAddressCidrBlocks
        - serviceAddressCidrBlocks
        vcenterNetwork: vcenterNetwork
        staticIpConfig:
          ipBlocks:
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
        podAddressCidrBlocks:
        - podAddressCidrBlocks
        - podAddressCidrBlocks
      properties:
        dhcpIpConfig:
          $ref: '#/components/schemas/VmwareDhcpIpConfig'
        haControlPlaneConfig:
          $ref: '#/components/schemas/VmwareAdminHAControlPlaneConfig'
        hostConfig:
          $ref: '#/components/schemas/VmwareHostConfig'
        podAddressCidrBlocks:
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. Only a single range is supported. This field
            cannot be changed after creation.
          items:
            type: string
          type: array
        serviceAddressCidrBlocks:
          description: Required. All services in the cluster are assigned an RFC1918
            IPv4 address from these ranges. Only a single range is supported. This
            field cannot be changed after creation.
          items:
            type: string
          type: array
        staticIpConfig:
          $ref: '#/components/schemas/VmwareStaticIpConfig'
        vcenterNetwork:
          description: vcenter_network specifies vCenter network name.
          type: string
      type: object
    VmwareAdminPreparedSecretsConfig:
      description: VmwareAdminPreparedSecretsConfig represents configuration for admin
        cluster prepared secrets.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether prepared secrets is enabled.
          type: boolean
      type: object
    VmwareAdminSeesawConfig:
      description: "VmwareSeesawConfig represents configuration parameters for an\
        \ already existing Seesaw load balancer. IMPORTANT: Please note that the Anthos\
        \ On-Prem API will not generate or update Seesaw configurations it can only\
        \ bind a pre-existing configuration to a new user cluster. IMPORTANT: When\
        \ attempting to create a user cluster with a pre-existing Seesaw load balancer\
        \ you will need to follow some preparation steps before calling the 'CreateVmwareCluster'\
        \ API method. First you will need to create the user cluster's namespace via\
        \ kubectl. The namespace will need to use the following naming convention\
        \ : -gke-onprem-mgmt or -gke-onprem-mgmt depending on whether you used the\
        \ 'VmwareCluster.local_name' to disambiguate collisions; for more context\
        \ see the documentation of 'VmwareCluster.local_name'. Once the namespace\
        \ is created you will need to create a secret resource via kubectl. This secret\
        \ will contain copies of your Seesaw credentials. The Secret must be called\
        \ 'user-cluster-creds' and contain Seesaw's SSH and Cert credentials. The\
        \ credentials must be keyed with the following names: 'seesaw-ssh-private-key',\
        \ 'seesaw-ssh-public-key', 'seesaw-ssh-ca-key', 'seesaw-ssh-ca-cert'."
      example:
        stackdriverName: stackdriverName
        masterIp: masterIp
        ipBlocks:
        - netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
        - netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
        enableHa: true
        vms:
        - vms
        - vms
        group: group
      properties:
        enableHa:
          description: Enable two load balancer VMs to achieve a highly-available
            Seesaw load balancer.
          type: boolean
        group:
          description: "In general the following format should be used for the Seesaw\
            \ group name: seesaw-for-[cluster_name]."
          type: string
        ipBlocks:
          description: The IP Blocks to be used by the Seesaw load balancer
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
          type: array
        masterIp:
          description: MasterIP is the IP announced by the master of Seesaw group.
          type: string
        stackdriverName:
          description: Name to be used by Stackdriver.
          type: string
        vms:
          description: Names of the VMs created for this Seesaw group.
          items:
            type: string
          type: array
      type: object
    VmwareAdminVCenterConfig:
      description: VmwareAdminVCenterConfig contains VCenter configuration for VMware
        admin cluster.
      example:
        cluster: cluster
        address: address
        folder: folder
        datastore: datastore
        caCertData: caCertData
        datacenter: datacenter
        storagePolicyName: storagePolicyName
        dataDisk: dataDisk
        resourcePool: resourcePool
      properties:
        address:
          description: The vCenter IP address.
          type: string
        caCertData:
          description: Contains the vCenter CA certificate public key for SSL verification.
          type: string
        cluster:
          description: The name of the vCenter cluster for the admin cluster.
          type: string
        dataDisk:
          description: The name of the virtual machine disk (VMDK) for the admin cluster.
          type: string
        datacenter:
          description: The name of the vCenter datacenter for the admin cluster.
          type: string
        datastore:
          description: The name of the vCenter datastore for the admin cluster.
          type: string
        folder:
          description: The name of the vCenter folder for the admin cluster.
          type: string
        resourcePool:
          description: The name of the vCenter resource pool for the admin cluster.
          type: string
        storagePolicyName:
          description: The name of the vCenter storage policy for the user cluster.
          type: string
      type: object
    VmwareAdminVipConfig:
      description: VmwareAdminVipConfig for VMware load balancer configurations.
      example:
        addonsVip: addonsVip
        controlPlaneVip: controlPlaneVip
      properties:
        addonsVip:
          description: The VIP to configure the load balancer for add-ons.
          type: string
        controlPlaneVip:
          description: The VIP which you previously set aside for the Kubernetes API
            of the admin cluster.
          type: string
      type: object
    VmwareAutoRepairConfig:
      description: Specifies config to enable/disable auto repair. The cluster-health-controller
        is deployed only if Enabled is true.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether auto repair is enabled.
          type: boolean
      type: object
    VmwareAutoResizeConfig:
      description: Represents auto resizing configurations for the VMware user cluster.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether to enable controle plane node auto resizing.
          type: boolean
      type: object
    VmwareBundleConfig:
      description: VmwareBundleConfig represents configuration for the bundle.
      example:
        version: version
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        status:
          $ref: '#/components/schemas/ResourceStatus'
        version:
          description: The version of the bundle.
          type: string
      type: object
    VmwareCluster:
      description: "Resource that represents a VMware user cluster. ##"
      example:
        disableBundledIngress: true
        fleet:
          membership: membership
        dataplaneV2:
          dataplaneV2Enabled: true
          advancedNetworking: true
          windowsDataplaneV2Enabled: true
          forwardMode: forwardMode
        annotations:
          key: annotations
        description: description
        reconciling: true
        storage:
          vsphereCsiDisabled: true
        antiAffinityGroups:
          aagConfigDisabled: true
        adminClusterName: adminClusterName
        validationCheck:
          scenario: SCENARIO_UNSPECIFIED
          option: OPTIONS_UNSPECIFIED
          status:
            result:
            - reason: reason
              description: description
              details: details
              state: STATE_UNKNOWN
              category: category
            - reason: reason
              description: description
              details: details
              state: STATE_UNKNOWN
              category: category
        enableControlPlaneV2: true
        authorization:
          adminUsers:
          - username: username
          - username: username
        uid: uid
        endpoint: endpoint
        vmTrackingEnabled: true
        loadBalancer:
          seesawConfig:
            stackdriverName: stackdriverName
            masterIp: masterIp
            ipBlocks:
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
            enableHa: true
            vms:
            - vms
            - vms
            group: group
          f5Config:
            address: address
            partition: partition
            snatPool: snatPool
          metalLbConfig:
            addressPools:
            - addresses:
              - addresses
              - addresses
              avoidBuggyIps: true
              pool: pool
              manualAssign: true
            - addresses:
              - addresses
              - addresses
              avoidBuggyIps: true
              pool: pool
              manualAssign: true
          vipConfig:
            ingressVip: ingressVip
            controlPlaneVip: controlPlaneVip
          manualLbConfig:
            konnectivityServerNodePort: 5
            ingressHttpNodePort: 6
            ingressHttpsNodePort: 1
            controlPlaneNodePort: 0
        vcenter:
          cluster: cluster
          address: address
          folder: folder
          datastore: datastore
          caCertData: caCertData
          datacenter: datacenter
          storagePolicyName: storagePolicyName
          resourcePool: resourcePool
        state: STATE_UNSPECIFIED
        binaryAuthorization:
          evaluationMode: EVALUATION_MODE_UNSPECIFIED
        controlPlaneNode:
          autoResizeConfig:
            enabled: true
          memory: memory
          vsphereConfig:
            datastore: datastore
            storagePolicyName: storagePolicyName
          cpus: cpus
          replicas: replicas
        adminClusterMembership: adminClusterMembership
        networkConfig:
          dhcpIpConfig:
            enabled: true
          hostConfig:
            ntpServers:
            - ntpServers
            - ntpServers
            dnsServers:
            - dnsServers
            - dnsServers
            dnsSearchDomains:
            - dnsSearchDomains
            - dnsSearchDomains
          serviceAddressCidrBlocks:
          - serviceAddressCidrBlocks
          - serviceAddressCidrBlocks
          vcenterNetwork: vcenterNetwork
          controlPlaneV2Config:
            controlPlaneIpBlock:
              netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
          staticIpConfig:
            ipBlocks:
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
            - netmask: netmask
              ips:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
              gateway: gateway
          podAddressCidrBlocks:
          - podAddressCidrBlocks
          - podAddressCidrBlocks
        updateTime: updateTime
        autoRepairConfig:
          enabled: true
        upgradePolicy:
          controlPlaneOnly: true
        localName: localName
        onPremVersion: onPremVersion
        createTime: createTime
        deleteTime: deleteTime
        name: name
        etag: etag
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        adminClusterMembership:
          description: "Required. The admin cluster this VMware user cluster belongs\
            \ to. This is the full resource name of the admin cluster's fleet membership.\
            \ In the future, references to other resource types might be allowed if\
            \ admin clusters are modeled as their own resources."
          type: string
        adminClusterName:
          description: Output only. The resource name of the VMware admin cluster
            hosting this user cluster.
          readOnly: true
          type: string
        annotations:
          additionalProperties:
            type: string
          description: "Annotations on the VMware user cluster. This field has the\
            \ same restrictions as Kubernetes annotations. The total size of all keys\
            \ and values combined is limited to 256k. Key can have 2 segments: prefix\
            \ (optional) and name (required), separated by a slash (/). Prefix must\
            \ be a DNS subdomain. Name must be 63 characters or less, begin and end\
            \ with alphanumerics, with dashes (-), underscores (_), dots (.), and\
            \ alphanumerics between."
          type: object
        antiAffinityGroups:
          $ref: '#/components/schemas/VmwareAAGConfig'
        authorization:
          $ref: '#/components/schemas/Authorization'
        autoRepairConfig:
          $ref: '#/components/schemas/VmwareAutoRepairConfig'
        binaryAuthorization:
          $ref: '#/components/schemas/BinaryAuthorization'
        controlPlaneNode:
          $ref: '#/components/schemas/VmwareControlPlaneNodeConfig'
        createTime:
          description: Output only. The time at which VMware user cluster was created.
          format: google-datetime
          readOnly: true
          type: string
        dataplaneV2:
          $ref: '#/components/schemas/VmwareDataplaneV2Config'
        deleteTime:
          description: Output only. The time at which VMware user cluster was deleted.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: A human readable description of this VMware user cluster.
          type: string
        disableBundledIngress:
          description: Disable bundled ingress.
          type: boolean
        enableControlPlaneV2:
          description: Enable control plane V2. Default to false.
          type: boolean
        endpoint:
          description: Output only. The DNS name of VMware user cluster's API server.
          readOnly: true
          type: string
        etag:
          description: "This checksum is computed by the server based on the value\
            \ of other fields, and may be sent on update and delete requests to ensure\
            \ the client has an up-to-date value before proceeding. Allows clients\
            \ to perform consistent read-modify-writes through optimistic concurrency\
            \ control."
          type: string
        fleet:
          $ref: '#/components/schemas/Fleet'
        loadBalancer:
          $ref: '#/components/schemas/VmwareLoadBalancerConfig'
        localName:
          description: "Output only. The object name of the VMware OnPremUserCluster\
            \ custom resource on the associated admin cluster. This field is used\
            \ to support conflicting names when enrolling existing clusters to the\
            \ API. When used as a part of cluster enrollment, this field will differ\
            \ from the ID in the resource name. For new clusters, this field will\
            \ match the user provided cluster name and be visible in the last component\
            \ of the resource name. It is not modifiable. All users should use this\
            \ name to access their cluster using gkectl or kubectl and should expect\
            \ to see the local name when viewing admin cluster controller logs."
          readOnly: true
          type: string
        name:
          description: Immutable. The VMware user cluster resource name.
          type: string
        networkConfig:
          $ref: '#/components/schemas/VmwareNetworkConfig'
        onPremVersion:
          description: Required. The Anthos clusters on the VMware version for your
            user cluster.
          type: string
        reconciling:
          description: "Output only. If set, there are currently changes in flight\
            \ to the VMware user cluster."
          readOnly: true
          type: boolean
        state:
          description: Output only. The current state of VMware user cluster.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
          - DEGRADED
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
        storage:
          $ref: '#/components/schemas/VmwareStorageConfig'
        uid:
          description: Output only. The unique identifier of the VMware user cluster.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which VMware user cluster was last
            updated.
          format: google-datetime
          readOnly: true
          type: string
        upgradePolicy:
          $ref: '#/components/schemas/VmwareClusterUpgradePolicy'
        validationCheck:
          $ref: '#/components/schemas/ValidationCheck'
        vcenter:
          $ref: '#/components/schemas/VmwareVCenterConfig'
        vmTrackingEnabled:
          description: Enable VM tracking.
          type: boolean
      type: object
    VmwareClusterUpgradePolicy:
      description: VmwareClusterUpgradePolicy defines the cluster upgrade policy.
      example:
        controlPlaneOnly: true
      properties:
        controlPlaneOnly:
          description: Controls whether the upgrade applies to the control plane only.
          type: boolean
      type: object
    VmwareControlPlaneNodeConfig:
      description: Specifies control plane node config for the VMware user cluster.
      example:
        autoResizeConfig:
          enabled: true
        memory: memory
        vsphereConfig:
          datastore: datastore
          storagePolicyName: storagePolicyName
        cpus: cpus
        replicas: replicas
      properties:
        autoResizeConfig:
          $ref: '#/components/schemas/VmwareAutoResizeConfig'
        cpus:
          description: "The number of CPUs for each admin cluster node that serve\
            \ as control planes for this VMware user cluster. (default: 4 CPUs)"
          format: int64
          type: string
        memory:
          description: "The megabytes of memory for each admin cluster node that serves\
            \ as a control plane for this VMware user cluster (default: 8192 MB memory)."
          format: int64
          type: string
        replicas:
          description: "The number of control plane nodes for this VMware user cluster.\
            \ (default: 1 replica)."
          format: int64
          type: string
        vsphereConfig:
          $ref: '#/components/schemas/VmwareControlPlaneVsphereConfig'
      type: object
    VmwareControlPlaneV2Config:
      description: Specifies control plane V2 config.
      example:
        controlPlaneIpBlock:
          netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
      properties:
        controlPlaneIpBlock:
          $ref: '#/components/schemas/VmwareIpBlock'
      type: object
    VmwareControlPlaneVsphereConfig:
      description: Specifies control plane node config.
      example:
        datastore: datastore
        storagePolicyName: storagePolicyName
      properties:
        datastore:
          description: The Vsphere datastore used by the control plane Node.
          type: string
        storagePolicyName:
          description: The Vsphere storage policy used by the control plane Node.
          type: string
      type: object
    VmwareDataplaneV2Config:
      description: "Contains configurations for Dataplane V2, which is optimized dataplane\
        \ for Kubernetes networking. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2"
      example:
        dataplaneV2Enabled: true
        advancedNetworking: true
        windowsDataplaneV2Enabled: true
        forwardMode: forwardMode
      properties:
        advancedNetworking:
          description: Enable advanced networking which requires dataplane_v2_enabled
            to be set true.
          type: boolean
        dataplaneV2Enabled:
          description: Enables Dataplane V2.
          type: boolean
        forwardMode:
          description: Configure ForwardMode for Dataplane v2.
          type: string
        windowsDataplaneV2Enabled:
          description: Enable Dataplane V2 for clusters with Windows nodes.
          type: boolean
      type: object
    VmwareDhcpIpConfig:
      description: Represents the network configuration required for the VMware user
        clusters with DHCP IP configurations.
      example:
        enabled: true
      properties:
        enabled:
          description: enabled is a flag to mark if DHCP IP allocation is used for
            VMware user clusters.
          type: boolean
      type: object
    VmwareF5BigIpConfig:
      description: Represents configuration parameters for an F5 BIG-IP load balancer.
      example:
        address: address
        partition: partition
        snatPool: snatPool
      properties:
        address:
          description: The load balancer's IP address.
          type: string
        partition:
          description: "The preexisting partition to be used by the load balancer.\
            \ This partition is usually created for the admin cluster for example:\
            \ 'my-f5-admin-partition'."
          type: string
        snatPool:
          description: "The pool name. Only necessary, if using SNAT."
          type: string
      type: object
    VmwareHostConfig:
      description: Represents the common parameters for all the hosts irrespective
        of their IP address.
      example:
        ntpServers:
        - ntpServers
        - ntpServers
        dnsServers:
        - dnsServers
        - dnsServers
        dnsSearchDomains:
        - dnsSearchDomains
        - dnsSearchDomains
      properties:
        dnsSearchDomains:
          description: DNS search domains.
          items:
            type: string
          type: array
        dnsServers:
          description: DNS servers.
          items:
            type: string
          type: array
        ntpServers:
          description: NTP servers.
          items:
            type: string
          type: array
      type: object
    VmwareHostIp:
      description: Represents VMware user cluster node's network configuration.
      example:
        hostname: hostname
        ip: ip
      properties:
        hostname:
          description: Hostname of the machine. VM's name will be used if this field
            is empty.
          type: string
        ip:
          description: IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24).
          type: string
      type: object
    VmwareIpBlock:
      description: Represents a collection of IP addresses to assign to nodes.
      example:
        netmask: netmask
        ips:
        - hostname: hostname
          ip: ip
        - hostname: hostname
          ip: ip
        gateway: gateway
      properties:
        gateway:
          description: The network gateway used by the VMware user cluster.
          type: string
        ips:
          description: The node's network configurations used by the VMware user cluster.
          items:
            $ref: '#/components/schemas/VmwareHostIp'
          type: array
        netmask:
          description: The netmask used by the VMware user cluster.
          type: string
      type: object
    VmwareLoadBalancerConfig:
      description: Specifies the locad balancer config for the VMware user cluster.
      example:
        seesawConfig:
          stackdriverName: stackdriverName
          masterIp: masterIp
          ipBlocks:
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
          enableHa: true
          vms:
          - vms
          - vms
          group: group
        f5Config:
          address: address
          partition: partition
          snatPool: snatPool
        metalLbConfig:
          addressPools:
          - addresses:
            - addresses
            - addresses
            avoidBuggyIps: true
            pool: pool
            manualAssign: true
          - addresses:
            - addresses
            - addresses
            avoidBuggyIps: true
            pool: pool
            manualAssign: true
        vipConfig:
          ingressVip: ingressVip
          controlPlaneVip: controlPlaneVip
        manualLbConfig:
          konnectivityServerNodePort: 5
          ingressHttpNodePort: 6
          ingressHttpsNodePort: 1
          controlPlaneNodePort: 0
      properties:
        f5Config:
          $ref: '#/components/schemas/VmwareF5BigIpConfig'
        manualLbConfig:
          $ref: '#/components/schemas/VmwareManualLbConfig'
        metalLbConfig:
          $ref: '#/components/schemas/VmwareMetalLbConfig'
        seesawConfig:
          $ref: '#/components/schemas/VmwareSeesawConfig'
        vipConfig:
          $ref: '#/components/schemas/VmwareVipConfig'
      type: object
    VmwareManualLbConfig:
      description: "Represents configuration parameters for an already existing manual\
        \ load balancer. Given the nature of manual load balancers it is expected\
        \ that said load balancer will be fully managed by users. IMPORTANT: Please\
        \ note that the Anthos On-Prem API will not generate or update ManualLB configurations\
        \ it can only bind a pre-existing configuration to a new VMware user cluster."
      example:
        konnectivityServerNodePort: 5
        ingressHttpNodePort: 6
        ingressHttpsNodePort: 1
        controlPlaneNodePort: 0
      properties:
        controlPlaneNodePort:
          description: NodePort for control plane service. The Kubernetes API server
            in the admin cluster is implemented as a Service of type NodePort (ex.
            30968).
          format: int32
          type: integer
        ingressHttpNodePort:
          description: NodePort for ingress service's http. The ingress service in
            the admin cluster is implemented as a Service of type NodePort (ex. 32527).
          format: int32
          type: integer
        ingressHttpsNodePort:
          description: NodePort for ingress service's https. The ingress service in
            the admin cluster is implemented as a Service of type NodePort (ex. 30139).
          format: int32
          type: integer
        konnectivityServerNodePort:
          description: NodePort for konnectivity server service running as a sidecar
            in each kube-apiserver pod (ex. 30564).
          format: int32
          type: integer
      type: object
    VmwareMetalLbConfig:
      description: Represents configuration parameters for the MetalLB load balancer.
      example:
        addressPools:
        - addresses:
          - addresses
          - addresses
          avoidBuggyIps: true
          pool: pool
          manualAssign: true
        - addresses:
          - addresses
          - addresses
          avoidBuggyIps: true
          pool: pool
          manualAssign: true
      properties:
        addressPools:
          description: Required. AddressPools is a list of non-overlapping IP pools
            used by load balancer typed services. All addresses must be routable to
            load balancer nodes. IngressVIP must be included in the pools.
          items:
            $ref: '#/components/schemas/VmwareAddressPool'
          type: array
      type: object
    VmwareNetworkConfig:
      description: Specifies network config for the VMware user cluster.
      example:
        dhcpIpConfig:
          enabled: true
        hostConfig:
          ntpServers:
          - ntpServers
          - ntpServers
          dnsServers:
          - dnsServers
          - dnsServers
          dnsSearchDomains:
          - dnsSearchDomains
          - dnsSearchDomains
        serviceAddressCidrBlocks:
        - serviceAddressCidrBlocks
        - serviceAddressCidrBlocks
        vcenterNetwork: vcenterNetwork
        controlPlaneV2Config:
          controlPlaneIpBlock:
            netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
        staticIpConfig:
          ipBlocks:
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
          - netmask: netmask
            ips:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
            gateway: gateway
        podAddressCidrBlocks:
        - podAddressCidrBlocks
        - podAddressCidrBlocks
      properties:
        controlPlaneV2Config:
          $ref: '#/components/schemas/VmwareControlPlaneV2Config'
        dhcpIpConfig:
          $ref: '#/components/schemas/VmwareDhcpIpConfig'
        hostConfig:
          $ref: '#/components/schemas/VmwareHostConfig'
        podAddressCidrBlocks:
          description: Required. All pods in the cluster are assigned an RFC1918 IPv4
            address from these ranges. Only a single range is supported. This field
            cannot be changed after creation.
          items:
            type: string
          type: array
        serviceAddressCidrBlocks:
          description: Required. All services in the cluster are assigned an RFC1918
            IPv4 address from these ranges. Only a single range is supported. This
            field cannot be changed after creation.
          items:
            type: string
          type: array
        staticIpConfig:
          $ref: '#/components/schemas/VmwareStaticIpConfig'
        vcenterNetwork:
          description: vcenter_network specifies vCenter network name. Inherited from
            the admin cluster.
          type: string
      type: object
    VmwareNodeConfig:
      description: Parameters that describe the configuration of all nodes within
        a given node pool.
      example:
        image: image
        memoryMb: memoryMb
        vsphereConfig:
          hostGroups:
          - hostGroups
          - hostGroups
          datastore: datastore
          tags:
          - tag: tag
            category: category
          - tag: tag
            category: category
        cpus: cpus
        replicas: replicas
        enableLoadBalancer: true
        taints:
        - effect: EFFECT_UNSPECIFIED
          value: value
          key: key
        - effect: EFFECT_UNSPECIFIED
          value: value
          key: key
        bootDiskSizeGb: bootDiskSizeGb
        imageType: imageType
        labels:
          key: labels
      properties:
        bootDiskSizeGb:
          description: VMware disk size to be used during creation.
          format: int64
          type: string
        cpus:
          description: The number of CPUs for each node in the node pool.
          format: int64
          type: string
        enableLoadBalancer:
          description: Allow node pool traffic to be load balanced. Only works for
            clusters with MetalLB load balancers.
          type: boolean
        image:
          description: "The OS image name in vCenter, only valid when using Windows."
          type: string
        imageType:
          description: "Required. The OS image to be used for each node in a node\
            \ pool. Currently `cos`, `ubuntu`, `ubuntu_containerd` and `windows` are\
            \ supported."
          type: string
        labels:
          additionalProperties:
            type: string
          description: "The map of Kubernetes labels (key/value pairs) to be applied\
            \ to each node. These will added in addition to any default label(s) that\
            \ Kubernetes may apply to the node. In case of conflict in label keys,\
            \ the applied set may differ depending on the Kubernetes version -- it's\
            \ best to assume the behavior is undefined and conflicts should be avoided.\
            \ For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/"
          type: object
        memoryMb:
          description: The megabytes of memory for each node in the node pool.
          format: int64
          type: string
        replicas:
          description: The number of nodes in the node pool.
          format: int64
          type: string
        taints:
          description: The initial taints assigned to nodes of this node pool.
          items:
            $ref: '#/components/schemas/NodeTaint'
          type: array
        vsphereConfig:
          $ref: '#/components/schemas/VmwareVsphereConfig'
      type: object
    VmwareNodePool:
      description: "Resource VmwareNodePool represents a VMware node pool. ##"
      example:
        displayName: displayName
        annotations:
          key: annotations
        reconciling: true
        updateTime: updateTime
        onPremVersion: onPremVersion
        uid: uid
        nodePoolAutoscaling:
          maxReplicas: 0
          minReplicas: 6
        createTime: createTime
        deleteTime: deleteTime
        name: name
        etag: etag
        state: STATE_UNSPECIFIED
        config:
          image: image
          memoryMb: memoryMb
          vsphereConfig:
            hostGroups:
            - hostGroups
            - hostGroups
            datastore: datastore
            tags:
            - tag: tag
              category: category
            - tag: tag
              category: category
          cpus: cpus
          replicas: replicas
          enableLoadBalancer: true
          taints:
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          - effect: EFFECT_UNSPECIFIED
            value: value
            key: key
          bootDiskSizeGb: bootDiskSizeGb
          imageType: imageType
          labels:
            key: labels
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations on the node pool. This field has the same restrictions\
            \ as Kubernetes annotations. The total size of all keys and values combined\
            \ is limited to 256k. Key can have 2 segments: prefix (optional) and name\
            \ (required), separated by a slash (/). Prefix must be a DNS subdomain.\
            \ Name must be 63 characters or less, begin and end with alphanumerics,\
            \ with dashes (-), underscores (_), dots (.), and alphanumerics between."
          type: object
        config:
          $ref: '#/components/schemas/VmwareNodeConfig'
        createTime:
          description: Output only. The time at which this node pool was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: "Output only. The time at which this node pool was deleted.\
            \ If the resource is not deleted, this must be empty"
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: The display name for the node pool.
          type: string
        etag:
          description: "This checksum is computed by the server based on the value\
            \ of other fields, and may be sent on update and delete requests to ensure\
            \ the client has an up-to-date value before proceeding. Allows clients\
            \ to perform consistent read-modify-writes through optimistic concurrency\
            \ control."
          type: string
        name:
          description: Immutable. The resource name of this node pool.
          type: string
        nodePoolAutoscaling:
          $ref: '#/components/schemas/VmwareNodePoolAutoscalingConfig'
        onPremVersion:
          description: Anthos version for the node pool. Defaults to the user cluster
            version.
          type: string
        reconciling:
          description: "Output only. If set, there are currently changes in flight\
            \ to the node pool."
          readOnly: true
          type: boolean
        state:
          description: Output only. The current state of the node pool.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
          - DEGRADED
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
        uid:
          description: Output only. The unique identifier of the node pool.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which this node pool was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    VmwareNodePoolAutoscalingConfig:
      description: NodePoolAutoscaling config for the NodePool to allow for the kubernetes
        to scale NodePool.
      example:
        maxReplicas: 0
        minReplicas: 6
      properties:
        maxReplicas:
          description: Maximum number of replicas in the NodePool.
          format: int32
          type: integer
        minReplicas:
          description: Minimum number of replicas in the NodePool.
          format: int32
          type: integer
      type: object
    VmwarePlatformConfig:
      description: VmwarePlatformConfig represents configuration for the VMware platform.
      example:
        bundles:
        - version: version
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        - version: version
          status:
            errorMessage: errorMessage
            conditions:
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
            - reason: reason
              state: STATE_UNSPECIFIED
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
        platformVersion: platformVersion
        requiredPlatformVersion: requiredPlatformVersion
        status:
          errorMessage: errorMessage
          conditions:
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
          - reason: reason
            state: STATE_UNSPECIFIED
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
      properties:
        bundles:
          description: Output only. The list of bundles installed in the admin cluster.
          items:
            $ref: '#/components/schemas/VmwareBundleConfig'
          readOnly: true
          type: array
        platformVersion:
          description: Output only. The platform version e.g. 1.13.2.
          readOnly: true
          type: string
        requiredPlatformVersion:
          description: "Input only. The required platform version e.g. 1.13.1. If\
            \ the current platform version is lower than the target version, the platform\
            \ version will be updated to the target version. If the target version\
            \ is not installed in the platform (bundle versions), download the target\
            \ version bundle."
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
      type: object
    VmwareSeesawConfig:
      description: "VmwareSeesawConfig represents configuration parameters for an\
        \ already existing Seesaw load balancer. IMPORTANT: Please note that the Anthos\
        \ On-Prem API will not generate or update Seesaw configurations it can only\
        \ bind a pre-existing configuration to a new user cluster. IMPORTANT: When\
        \ attempting to create a user cluster with a pre-existing Seesaw load balancer\
        \ you will need to follow some preparation steps before calling the 'CreateVmwareCluster'\
        \ API method. First you will need to create the user cluster's namespace via\
        \ kubectl. The namespace will need to use the following naming convention\
        \ : -gke-onprem-mgmt or -gke-onprem-mgmt depending on whether you used the\
        \ 'VmwareCluster.local_name' to disambiguate collisions; for more context\
        \ see the documentation of 'VmwareCluster.local_name'. Once the namespace\
        \ is created you will need to create a secret resource via kubectl. This secret\
        \ will contain copies of your Seesaw credentials. The Secret must be called\
        \ 'user-cluster-creds' and contain Seesaw's SSH and Cert credentials. The\
        \ credentials must be keyed with the following names: 'seesaw-ssh-private-key',\
        \ 'seesaw-ssh-public-key', 'seesaw-ssh-ca-key', 'seesaw-ssh-ca-cert'."
      example:
        stackdriverName: stackdriverName
        masterIp: masterIp
        ipBlocks:
        - netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
        - netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
        enableHa: true
        vms:
        - vms
        - vms
        group: group
      properties:
        enableHa:
          description: Enable two load balancer VMs to achieve a highly-available
            Seesaw load balancer.
          type: boolean
        group:
          description: "Required. In general the following format should be used for\
            \ the Seesaw group name: seesaw-for-[cluster_name]."
          type: string
        ipBlocks:
          description: Required. The IP Blocks to be used by the Seesaw load balancer
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
          type: array
        masterIp:
          description: Required. MasterIP is the IP announced by the master of Seesaw
            group.
          type: string
        stackdriverName:
          description: Name to be used by Stackdriver.
          type: string
        vms:
          description: Names of the VMs created for this Seesaw group.
          items:
            type: string
          type: array
      type: object
    VmwareStaticIpConfig:
      description: Represents the network configuration required for the VMware user
        clusters with Static IP configurations.
      example:
        ipBlocks:
        - netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
        - netmask: netmask
          ips:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
          gateway: gateway
      properties:
        ipBlocks:
          description: Represents the configuration values for static IP allocation
            to nodes.
          items:
            $ref: '#/components/schemas/VmwareIpBlock'
          type: array
      type: object
    VmwareStorageConfig:
      description: Specifies vSphere CSI components deployment config in the VMware
        user cluster.
      example:
        vsphereCsiDisabled: true
      properties:
        vsphereCsiDisabled:
          description: Whether or not to deploy vSphere CSI components in the VMware
            user cluster. Enabled by default.
          type: boolean
      type: object
    VmwareVCenterConfig:
      description: Represents configuration for the VMware VCenter for the user cluster.
      example:
        cluster: cluster
        address: address
        folder: folder
        datastore: datastore
        caCertData: caCertData
        datacenter: datacenter
        storagePolicyName: storagePolicyName
        resourcePool: resourcePool
      properties:
        address:
          description: Output only. The vCenter IP address.
          readOnly: true
          type: string
        caCertData:
          description: Contains the vCenter CA certificate public key for SSL verification.
          type: string
        cluster:
          description: The name of the vCenter cluster for the user cluster.
          type: string
        datacenter:
          description: The name of the vCenter datacenter for the user cluster.
          type: string
        datastore:
          description: The name of the vCenter datastore for the user cluster.
          type: string
        folder:
          description: The name of the vCenter folder for the user cluster.
          type: string
        resourcePool:
          description: The name of the vCenter resource pool for the user cluster.
          type: string
        storagePolicyName:
          description: The name of the vCenter storage policy for the user cluster.
          type: string
      type: object
    VmwareVersionInfo:
      description: Contains information about a specific Anthos on VMware version.
      example:
        isInstalled: true
        hasDependencies: true
        version: version
        dependencies:
        - resourceName: resourceName
          membership: membership
          currentVersion: currentVersion
          targetVersion: targetVersion
        - resourceName: resourceName
          membership: membership
          currentVersion: currentVersion
          targetVersion: targetVersion
      properties:
        dependencies:
          description: The list of upgrade dependencies for this version.
          items:
            $ref: '#/components/schemas/UpgradeDependency'
          type: array
        hasDependencies:
          description: "If set, the cluster dependencies (e.g. the admin cluster,\
            \ other user clusters managed by the same admin cluster) must be upgraded\
            \ before this version can be installed or upgraded to."
          type: boolean
        isInstalled:
          description: "If set, the version is installed in the admin cluster. Otherwise,\
            \ the version bundle must be downloaded and installed before a user cluster\
            \ can be created at or upgraded to this version."
          type: boolean
        version:
          description: Version number e.g. 1.13.1-gke.1000.
          type: string
      type: object
    VmwareVipConfig:
      description: Specifies the VIP config for the VMware user cluster load balancer.
      example:
        ingressVip: ingressVip
        controlPlaneVip: controlPlaneVip
      properties:
        controlPlaneVip:
          description: The VIP which you previously set aside for the Kubernetes API
            of this cluster.
          type: string
        ingressVip:
          description: The VIP which you previously set aside for ingress traffic
            into this cluster.
          type: string
      type: object
    VmwareVsphereConfig:
      description: VmwareVsphereConfig represents configuration for the VMware VCenter
        for node pool.
      example:
        hostGroups:
        - hostGroups
        - hostGroups
        datastore: datastore
        tags:
        - tag: tag
          category: category
        - tag: tag
          category: category
      properties:
        datastore:
          description: The name of the vCenter datastore. Inherited from the user
            cluster.
          type: string
        hostGroups:
          description: Vsphere host groups to apply to all VMs in the node pool
          items:
            type: string
          type: array
        tags:
          description: Tags to apply to VMs.
          items:
            $ref: '#/components/schemas/VmwareVsphereTag'
          type: array
      type: object
    VmwareVsphereTag:
      description: "VmwareVsphereTag describes a vSphere tag to be placed on VMs in\
        \ the node pool. For more information, see https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html"
      example:
        tag: tag
        category: category
      properties:
        category:
          description: The Vsphere tag category.
          type: string
        tag:
          description: The Vsphere tag name.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

