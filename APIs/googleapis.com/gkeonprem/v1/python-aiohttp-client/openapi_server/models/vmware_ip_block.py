# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vmware_host_ip import VmwareHostIp
from openapi_server import util


class VmwareIpBlock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway: str=None, ips: List[VmwareHostIp]=None, netmask: str=None):
        """VmwareIpBlock - a model defined in OpenAPI

        :param gateway: The gateway of this VmwareIpBlock.
        :param ips: The ips of this VmwareIpBlock.
        :param netmask: The netmask of this VmwareIpBlock.
        """
        self.openapi_types = {
            'gateway': str,
            'ips': List[VmwareHostIp],
            'netmask': str
        }

        self.attribute_map = {
            'gateway': 'gateway',
            'ips': 'ips',
            'netmask': 'netmask'
        }

        self._gateway = gateway
        self._ips = ips
        self._netmask = netmask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareIpBlock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareIpBlock of this VmwareIpBlock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway(self):
        """Gets the gateway of this VmwareIpBlock.

        The network gateway used by the VMware user cluster.

        :return: The gateway of this VmwareIpBlock.
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this VmwareIpBlock.

        The network gateway used by the VMware user cluster.

        :param gateway: The gateway of this VmwareIpBlock.
        :type gateway: str
        """

        self._gateway = gateway

    @property
    def ips(self):
        """Gets the ips of this VmwareIpBlock.

        The node's network configurations used by the VMware user cluster.

        :return: The ips of this VmwareIpBlock.
        :rtype: List[VmwareHostIp]
        """
        return self._ips

    @ips.setter
    def ips(self, ips):
        """Sets the ips of this VmwareIpBlock.

        The node's network configurations used by the VMware user cluster.

        :param ips: The ips of this VmwareIpBlock.
        :type ips: List[VmwareHostIp]
        """

        self._ips = ips

    @property
    def netmask(self):
        """Gets the netmask of this VmwareIpBlock.

        The netmask used by the VMware user cluster.

        :return: The netmask of this VmwareIpBlock.
        :rtype: str
        """
        return self._netmask

    @netmask.setter
    def netmask(self, netmask):
        """Sets the netmask of this VmwareIpBlock.

        The netmask used by the VMware user cluster.

        :param netmask: The netmask of this VmwareIpBlock.
        :type netmask: str
        """

        self._netmask = netmask
