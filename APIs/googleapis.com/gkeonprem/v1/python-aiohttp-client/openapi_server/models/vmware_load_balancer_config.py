# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vmware_f5_big_ip_config import VmwareF5BigIpConfig
from openapi_server.models.vmware_manual_lb_config import VmwareManualLbConfig
from openapi_server.models.vmware_metal_lb_config import VmwareMetalLbConfig
from openapi_server.models.vmware_seesaw_config import VmwareSeesawConfig
from openapi_server.models.vmware_vip_config import VmwareVipConfig
from openapi_server import util


class VmwareLoadBalancerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, f5_config: VmwareF5BigIpConfig=None, manual_lb_config: VmwareManualLbConfig=None, metal_lb_config: VmwareMetalLbConfig=None, seesaw_config: VmwareSeesawConfig=None, vip_config: VmwareVipConfig=None):
        """VmwareLoadBalancerConfig - a model defined in OpenAPI

        :param f5_config: The f5_config of this VmwareLoadBalancerConfig.
        :param manual_lb_config: The manual_lb_config of this VmwareLoadBalancerConfig.
        :param metal_lb_config: The metal_lb_config of this VmwareLoadBalancerConfig.
        :param seesaw_config: The seesaw_config of this VmwareLoadBalancerConfig.
        :param vip_config: The vip_config of this VmwareLoadBalancerConfig.
        """
        self.openapi_types = {
            'f5_config': VmwareF5BigIpConfig,
            'manual_lb_config': VmwareManualLbConfig,
            'metal_lb_config': VmwareMetalLbConfig,
            'seesaw_config': VmwareSeesawConfig,
            'vip_config': VmwareVipConfig
        }

        self.attribute_map = {
            'f5_config': 'f5Config',
            'manual_lb_config': 'manualLbConfig',
            'metal_lb_config': 'metalLbConfig',
            'seesaw_config': 'seesawConfig',
            'vip_config': 'vipConfig'
        }

        self._f5_config = f5_config
        self._manual_lb_config = manual_lb_config
        self._metal_lb_config = metal_lb_config
        self._seesaw_config = seesaw_config
        self._vip_config = vip_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareLoadBalancerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareLoadBalancerConfig of this VmwareLoadBalancerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def f5_config(self):
        """Gets the f5_config of this VmwareLoadBalancerConfig.


        :return: The f5_config of this VmwareLoadBalancerConfig.
        :rtype: VmwareF5BigIpConfig
        """
        return self._f5_config

    @f5_config.setter
    def f5_config(self, f5_config):
        """Sets the f5_config of this VmwareLoadBalancerConfig.


        :param f5_config: The f5_config of this VmwareLoadBalancerConfig.
        :type f5_config: VmwareF5BigIpConfig
        """

        self._f5_config = f5_config

    @property
    def manual_lb_config(self):
        """Gets the manual_lb_config of this VmwareLoadBalancerConfig.


        :return: The manual_lb_config of this VmwareLoadBalancerConfig.
        :rtype: VmwareManualLbConfig
        """
        return self._manual_lb_config

    @manual_lb_config.setter
    def manual_lb_config(self, manual_lb_config):
        """Sets the manual_lb_config of this VmwareLoadBalancerConfig.


        :param manual_lb_config: The manual_lb_config of this VmwareLoadBalancerConfig.
        :type manual_lb_config: VmwareManualLbConfig
        """

        self._manual_lb_config = manual_lb_config

    @property
    def metal_lb_config(self):
        """Gets the metal_lb_config of this VmwareLoadBalancerConfig.


        :return: The metal_lb_config of this VmwareLoadBalancerConfig.
        :rtype: VmwareMetalLbConfig
        """
        return self._metal_lb_config

    @metal_lb_config.setter
    def metal_lb_config(self, metal_lb_config):
        """Sets the metal_lb_config of this VmwareLoadBalancerConfig.


        :param metal_lb_config: The metal_lb_config of this VmwareLoadBalancerConfig.
        :type metal_lb_config: VmwareMetalLbConfig
        """

        self._metal_lb_config = metal_lb_config

    @property
    def seesaw_config(self):
        """Gets the seesaw_config of this VmwareLoadBalancerConfig.


        :return: The seesaw_config of this VmwareLoadBalancerConfig.
        :rtype: VmwareSeesawConfig
        """
        return self._seesaw_config

    @seesaw_config.setter
    def seesaw_config(self, seesaw_config):
        """Sets the seesaw_config of this VmwareLoadBalancerConfig.


        :param seesaw_config: The seesaw_config of this VmwareLoadBalancerConfig.
        :type seesaw_config: VmwareSeesawConfig
        """

        self._seesaw_config = seesaw_config

    @property
    def vip_config(self):
        """Gets the vip_config of this VmwareLoadBalancerConfig.


        :return: The vip_config of this VmwareLoadBalancerConfig.
        :rtype: VmwareVipConfig
        """
        return self._vip_config

    @vip_config.setter
    def vip_config(self, vip_config):
        """Sets the vip_config of this VmwareLoadBalancerConfig.


        :param vip_config: The vip_config of this VmwareLoadBalancerConfig.
        :type vip_config: VmwareVipConfig
        """

        self._vip_config = vip_config
