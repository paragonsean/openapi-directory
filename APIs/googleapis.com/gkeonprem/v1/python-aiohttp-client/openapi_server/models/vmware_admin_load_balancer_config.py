# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vmware_admin_f5_big_ip_config import VmwareAdminF5BigIpConfig
from openapi_server.models.vmware_admin_manual_lb_config import VmwareAdminManualLbConfig
from openapi_server.models.vmware_admin_seesaw_config import VmwareAdminSeesawConfig
from openapi_server.models.vmware_admin_vip_config import VmwareAdminVipConfig
from openapi_server import util


class VmwareAdminLoadBalancerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, f5_config: VmwareAdminF5BigIpConfig=None, manual_lb_config: VmwareAdminManualLbConfig=None, metal_lb_config: object=None, seesaw_config: VmwareAdminSeesawConfig=None, vip_config: VmwareAdminVipConfig=None):
        """VmwareAdminLoadBalancerConfig - a model defined in OpenAPI

        :param f5_config: The f5_config of this VmwareAdminLoadBalancerConfig.
        :param manual_lb_config: The manual_lb_config of this VmwareAdminLoadBalancerConfig.
        :param metal_lb_config: The metal_lb_config of this VmwareAdminLoadBalancerConfig.
        :param seesaw_config: The seesaw_config of this VmwareAdminLoadBalancerConfig.
        :param vip_config: The vip_config of this VmwareAdminLoadBalancerConfig.
        """
        self.openapi_types = {
            'f5_config': VmwareAdminF5BigIpConfig,
            'manual_lb_config': VmwareAdminManualLbConfig,
            'metal_lb_config': object,
            'seesaw_config': VmwareAdminSeesawConfig,
            'vip_config': VmwareAdminVipConfig
        }

        self.attribute_map = {
            'f5_config': 'f5Config',
            'manual_lb_config': 'manualLbConfig',
            'metal_lb_config': 'metalLbConfig',
            'seesaw_config': 'seesawConfig',
            'vip_config': 'vipConfig'
        }

        self._f5_config = f5_config
        self._manual_lb_config = manual_lb_config
        self._metal_lb_config = metal_lb_config
        self._seesaw_config = seesaw_config
        self._vip_config = vip_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareAdminLoadBalancerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareAdminLoadBalancerConfig of this VmwareAdminLoadBalancerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def f5_config(self):
        """Gets the f5_config of this VmwareAdminLoadBalancerConfig.


        :return: The f5_config of this VmwareAdminLoadBalancerConfig.
        :rtype: VmwareAdminF5BigIpConfig
        """
        return self._f5_config

    @f5_config.setter
    def f5_config(self, f5_config):
        """Sets the f5_config of this VmwareAdminLoadBalancerConfig.


        :param f5_config: The f5_config of this VmwareAdminLoadBalancerConfig.
        :type f5_config: VmwareAdminF5BigIpConfig
        """

        self._f5_config = f5_config

    @property
    def manual_lb_config(self):
        """Gets the manual_lb_config of this VmwareAdminLoadBalancerConfig.


        :return: The manual_lb_config of this VmwareAdminLoadBalancerConfig.
        :rtype: VmwareAdminManualLbConfig
        """
        return self._manual_lb_config

    @manual_lb_config.setter
    def manual_lb_config(self, manual_lb_config):
        """Sets the manual_lb_config of this VmwareAdminLoadBalancerConfig.


        :param manual_lb_config: The manual_lb_config of this VmwareAdminLoadBalancerConfig.
        :type manual_lb_config: VmwareAdminManualLbConfig
        """

        self._manual_lb_config = manual_lb_config

    @property
    def metal_lb_config(self):
        """Gets the metal_lb_config of this VmwareAdminLoadBalancerConfig.

        VmwareAdminMetalLbConfig represents configuration parameters for a MetalLB load balancer. For admin clusters, currently no configurations is needed.

        :return: The metal_lb_config of this VmwareAdminLoadBalancerConfig.
        :rtype: object
        """
        return self._metal_lb_config

    @metal_lb_config.setter
    def metal_lb_config(self, metal_lb_config):
        """Sets the metal_lb_config of this VmwareAdminLoadBalancerConfig.

        VmwareAdminMetalLbConfig represents configuration parameters for a MetalLB load balancer. For admin clusters, currently no configurations is needed.

        :param metal_lb_config: The metal_lb_config of this VmwareAdminLoadBalancerConfig.
        :type metal_lb_config: object
        """

        self._metal_lb_config = metal_lb_config

    @property
    def seesaw_config(self):
        """Gets the seesaw_config of this VmwareAdminLoadBalancerConfig.


        :return: The seesaw_config of this VmwareAdminLoadBalancerConfig.
        :rtype: VmwareAdminSeesawConfig
        """
        return self._seesaw_config

    @seesaw_config.setter
    def seesaw_config(self, seesaw_config):
        """Sets the seesaw_config of this VmwareAdminLoadBalancerConfig.


        :param seesaw_config: The seesaw_config of this VmwareAdminLoadBalancerConfig.
        :type seesaw_config: VmwareAdminSeesawConfig
        """

        self._seesaw_config = seesaw_config

    @property
    def vip_config(self):
        """Gets the vip_config of this VmwareAdminLoadBalancerConfig.


        :return: The vip_config of this VmwareAdminLoadBalancerConfig.
        :rtype: VmwareAdminVipConfig
        """
        return self._vip_config

    @vip_config.setter
    def vip_config(self, vip_config):
        """Sets the vip_config of this VmwareAdminLoadBalancerConfig.


        :param vip_config: The vip_config of this VmwareAdminLoadBalancerConfig.
        :type vip_config: VmwareAdminVipConfig
        """

        self._vip_config = vip_config
