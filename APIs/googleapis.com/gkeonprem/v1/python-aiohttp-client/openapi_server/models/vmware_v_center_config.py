# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwareVCenterConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, ca_cert_data: str=None, cluster: str=None, datacenter: str=None, datastore: str=None, folder: str=None, resource_pool: str=None, storage_policy_name: str=None):
        """VmwareVCenterConfig - a model defined in OpenAPI

        :param address: The address of this VmwareVCenterConfig.
        :param ca_cert_data: The ca_cert_data of this VmwareVCenterConfig.
        :param cluster: The cluster of this VmwareVCenterConfig.
        :param datacenter: The datacenter of this VmwareVCenterConfig.
        :param datastore: The datastore of this VmwareVCenterConfig.
        :param folder: The folder of this VmwareVCenterConfig.
        :param resource_pool: The resource_pool of this VmwareVCenterConfig.
        :param storage_policy_name: The storage_policy_name of this VmwareVCenterConfig.
        """
        self.openapi_types = {
            'address': str,
            'ca_cert_data': str,
            'cluster': str,
            'datacenter': str,
            'datastore': str,
            'folder': str,
            'resource_pool': str,
            'storage_policy_name': str
        }

        self.attribute_map = {
            'address': 'address',
            'ca_cert_data': 'caCertData',
            'cluster': 'cluster',
            'datacenter': 'datacenter',
            'datastore': 'datastore',
            'folder': 'folder',
            'resource_pool': 'resourcePool',
            'storage_policy_name': 'storagePolicyName'
        }

        self._address = address
        self._ca_cert_data = ca_cert_data
        self._cluster = cluster
        self._datacenter = datacenter
        self._datastore = datastore
        self._folder = folder
        self._resource_pool = resource_pool
        self._storage_policy_name = storage_policy_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareVCenterConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareVCenterConfig of this VmwareVCenterConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this VmwareVCenterConfig.

        Output only. The vCenter IP address.

        :return: The address of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this VmwareVCenterConfig.

        Output only. The vCenter IP address.

        :param address: The address of this VmwareVCenterConfig.
        :type address: str
        """

        self._address = address

    @property
    def ca_cert_data(self):
        """Gets the ca_cert_data of this VmwareVCenterConfig.

        Contains the vCenter CA certificate public key for SSL verification.

        :return: The ca_cert_data of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._ca_cert_data

    @ca_cert_data.setter
    def ca_cert_data(self, ca_cert_data):
        """Sets the ca_cert_data of this VmwareVCenterConfig.

        Contains the vCenter CA certificate public key for SSL verification.

        :param ca_cert_data: The ca_cert_data of this VmwareVCenterConfig.
        :type ca_cert_data: str
        """

        self._ca_cert_data = ca_cert_data

    @property
    def cluster(self):
        """Gets the cluster of this VmwareVCenterConfig.

        The name of the vCenter cluster for the user cluster.

        :return: The cluster of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this VmwareVCenterConfig.

        The name of the vCenter cluster for the user cluster.

        :param cluster: The cluster of this VmwareVCenterConfig.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def datacenter(self):
        """Gets the datacenter of this VmwareVCenterConfig.

        The name of the vCenter datacenter for the user cluster.

        :return: The datacenter of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._datacenter

    @datacenter.setter
    def datacenter(self, datacenter):
        """Sets the datacenter of this VmwareVCenterConfig.

        The name of the vCenter datacenter for the user cluster.

        :param datacenter: The datacenter of this VmwareVCenterConfig.
        :type datacenter: str
        """

        self._datacenter = datacenter

    @property
    def datastore(self):
        """Gets the datastore of this VmwareVCenterConfig.

        The name of the vCenter datastore for the user cluster.

        :return: The datastore of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._datastore

    @datastore.setter
    def datastore(self, datastore):
        """Sets the datastore of this VmwareVCenterConfig.

        The name of the vCenter datastore for the user cluster.

        :param datastore: The datastore of this VmwareVCenterConfig.
        :type datastore: str
        """

        self._datastore = datastore

    @property
    def folder(self):
        """Gets the folder of this VmwareVCenterConfig.

        The name of the vCenter folder for the user cluster.

        :return: The folder of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this VmwareVCenterConfig.

        The name of the vCenter folder for the user cluster.

        :param folder: The folder of this VmwareVCenterConfig.
        :type folder: str
        """

        self._folder = folder

    @property
    def resource_pool(self):
        """Gets the resource_pool of this VmwareVCenterConfig.

        The name of the vCenter resource pool for the user cluster.

        :return: The resource_pool of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._resource_pool

    @resource_pool.setter
    def resource_pool(self, resource_pool):
        """Sets the resource_pool of this VmwareVCenterConfig.

        The name of the vCenter resource pool for the user cluster.

        :param resource_pool: The resource_pool of this VmwareVCenterConfig.
        :type resource_pool: str
        """

        self._resource_pool = resource_pool

    @property
    def storage_policy_name(self):
        """Gets the storage_policy_name of this VmwareVCenterConfig.

        The name of the vCenter storage policy for the user cluster.

        :return: The storage_policy_name of this VmwareVCenterConfig.
        :rtype: str
        """
        return self._storage_policy_name

    @storage_policy_name.setter
    def storage_policy_name(self, storage_policy_name):
        """Sets the storage_policy_name of this VmwareVCenterConfig.

        The name of the vCenter storage policy for the user cluster.

        :param storage_policy_name: The storage_policy_name of this VmwareVCenterConfig.
        :type storage_policy_name: str
        """

        self._storage_policy_name = storage_policy_name
