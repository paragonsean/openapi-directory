# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bare_metal_admin_manual_lb_config import BareMetalAdminManualLbConfig
from openapi_server.models.bare_metal_admin_port_config import BareMetalAdminPortConfig
from openapi_server.models.bare_metal_admin_vip_config import BareMetalAdminVipConfig
from openapi_server import util


class BareMetalAdminLoadBalancerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, manual_lb_config: BareMetalAdminManualLbConfig=None, port_config: BareMetalAdminPortConfig=None, vip_config: BareMetalAdminVipConfig=None):
        """BareMetalAdminLoadBalancerConfig - a model defined in OpenAPI

        :param manual_lb_config: The manual_lb_config of this BareMetalAdminLoadBalancerConfig.
        :param port_config: The port_config of this BareMetalAdminLoadBalancerConfig.
        :param vip_config: The vip_config of this BareMetalAdminLoadBalancerConfig.
        """
        self.openapi_types = {
            'manual_lb_config': BareMetalAdminManualLbConfig,
            'port_config': BareMetalAdminPortConfig,
            'vip_config': BareMetalAdminVipConfig
        }

        self.attribute_map = {
            'manual_lb_config': 'manualLbConfig',
            'port_config': 'portConfig',
            'vip_config': 'vipConfig'
        }

        self._manual_lb_config = manual_lb_config
        self._port_config = port_config
        self._vip_config = vip_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BareMetalAdminLoadBalancerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BareMetalAdminLoadBalancerConfig of this BareMetalAdminLoadBalancerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def manual_lb_config(self):
        """Gets the manual_lb_config of this BareMetalAdminLoadBalancerConfig.


        :return: The manual_lb_config of this BareMetalAdminLoadBalancerConfig.
        :rtype: BareMetalAdminManualLbConfig
        """
        return self._manual_lb_config

    @manual_lb_config.setter
    def manual_lb_config(self, manual_lb_config):
        """Sets the manual_lb_config of this BareMetalAdminLoadBalancerConfig.


        :param manual_lb_config: The manual_lb_config of this BareMetalAdminLoadBalancerConfig.
        :type manual_lb_config: BareMetalAdminManualLbConfig
        """

        self._manual_lb_config = manual_lb_config

    @property
    def port_config(self):
        """Gets the port_config of this BareMetalAdminLoadBalancerConfig.


        :return: The port_config of this BareMetalAdminLoadBalancerConfig.
        :rtype: BareMetalAdminPortConfig
        """
        return self._port_config

    @port_config.setter
    def port_config(self, port_config):
        """Sets the port_config of this BareMetalAdminLoadBalancerConfig.


        :param port_config: The port_config of this BareMetalAdminLoadBalancerConfig.
        :type port_config: BareMetalAdminPortConfig
        """

        self._port_config = port_config

    @property
    def vip_config(self):
        """Gets the vip_config of this BareMetalAdminLoadBalancerConfig.


        :return: The vip_config of this BareMetalAdminLoadBalancerConfig.
        :rtype: BareMetalAdminVipConfig
        """
        return self._vip_config

    @vip_config.setter
    def vip_config(self, vip_config):
        """Sets the vip_config of this BareMetalAdminLoadBalancerConfig.


        :param vip_config: The vip_config of this BareMetalAdminLoadBalancerConfig.
        :type vip_config: BareMetalAdminVipConfig
        """

        self._vip_config = vip_config
