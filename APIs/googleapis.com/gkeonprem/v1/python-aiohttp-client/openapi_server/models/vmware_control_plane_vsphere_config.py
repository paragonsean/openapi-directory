# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwareControlPlaneVsphereConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datastore: str=None, storage_policy_name: str=None):
        """VmwareControlPlaneVsphereConfig - a model defined in OpenAPI

        :param datastore: The datastore of this VmwareControlPlaneVsphereConfig.
        :param storage_policy_name: The storage_policy_name of this VmwareControlPlaneVsphereConfig.
        """
        self.openapi_types = {
            'datastore': str,
            'storage_policy_name': str
        }

        self.attribute_map = {
            'datastore': 'datastore',
            'storage_policy_name': 'storagePolicyName'
        }

        self._datastore = datastore
        self._storage_policy_name = storage_policy_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareControlPlaneVsphereConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareControlPlaneVsphereConfig of this VmwareControlPlaneVsphereConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datastore(self):
        """Gets the datastore of this VmwareControlPlaneVsphereConfig.

        The Vsphere datastore used by the control plane Node.

        :return: The datastore of this VmwareControlPlaneVsphereConfig.
        :rtype: str
        """
        return self._datastore

    @datastore.setter
    def datastore(self, datastore):
        """Sets the datastore of this VmwareControlPlaneVsphereConfig.

        The Vsphere datastore used by the control plane Node.

        :param datastore: The datastore of this VmwareControlPlaneVsphereConfig.
        :type datastore: str
        """

        self._datastore = datastore

    @property
    def storage_policy_name(self):
        """Gets the storage_policy_name of this VmwareControlPlaneVsphereConfig.

        The Vsphere storage policy used by the control plane Node.

        :return: The storage_policy_name of this VmwareControlPlaneVsphereConfig.
        :rtype: str
        """
        return self._storage_policy_name

    @storage_policy_name.setter
    def storage_policy_name(self, storage_policy_name):
        """Sets the storage_policy_name of this VmwareControlPlaneVsphereConfig.

        The Vsphere storage policy used by the control plane Node.

        :param storage_policy_name: The storage_policy_name of this VmwareControlPlaneVsphereConfig.
        :type storage_policy_name: str
        """

        self._storage_policy_name = storage_policy_name
