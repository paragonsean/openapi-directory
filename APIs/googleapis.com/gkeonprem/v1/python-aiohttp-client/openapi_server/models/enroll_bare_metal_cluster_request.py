# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnrollBareMetalClusterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_cluster_membership: str=None, bare_metal_cluster_id: str=None, local_name: str=None):
        """EnrollBareMetalClusterRequest - a model defined in OpenAPI

        :param admin_cluster_membership: The admin_cluster_membership of this EnrollBareMetalClusterRequest.
        :param bare_metal_cluster_id: The bare_metal_cluster_id of this EnrollBareMetalClusterRequest.
        :param local_name: The local_name of this EnrollBareMetalClusterRequest.
        """
        self.openapi_types = {
            'admin_cluster_membership': str,
            'bare_metal_cluster_id': str,
            'local_name': str
        }

        self.attribute_map = {
            'admin_cluster_membership': 'adminClusterMembership',
            'bare_metal_cluster_id': 'bareMetalClusterId',
            'local_name': 'localName'
        }

        self._admin_cluster_membership = admin_cluster_membership
        self._bare_metal_cluster_id = bare_metal_cluster_id
        self._local_name = local_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnrollBareMetalClusterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnrollBareMetalClusterRequest of this EnrollBareMetalClusterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_cluster_membership(self):
        """Gets the admin_cluster_membership of this EnrollBareMetalClusterRequest.

        Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.

        :return: The admin_cluster_membership of this EnrollBareMetalClusterRequest.
        :rtype: str
        """
        return self._admin_cluster_membership

    @admin_cluster_membership.setter
    def admin_cluster_membership(self, admin_cluster_membership):
        """Sets the admin_cluster_membership of this EnrollBareMetalClusterRequest.

        Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.

        :param admin_cluster_membership: The admin_cluster_membership of this EnrollBareMetalClusterRequest.
        :type admin_cluster_membership: str
        """

        self._admin_cluster_membership = admin_cluster_membership

    @property
    def bare_metal_cluster_id(self):
        """Gets the bare_metal_cluster_id of this EnrollBareMetalClusterRequest.

        User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all bare metal clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.

        :return: The bare_metal_cluster_id of this EnrollBareMetalClusterRequest.
        :rtype: str
        """
        return self._bare_metal_cluster_id

    @bare_metal_cluster_id.setter
    def bare_metal_cluster_id(self, bare_metal_cluster_id):
        """Sets the bare_metal_cluster_id of this EnrollBareMetalClusterRequest.

        User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all bare metal clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.

        :param bare_metal_cluster_id: The bare_metal_cluster_id of this EnrollBareMetalClusterRequest.
        :type bare_metal_cluster_id: str
        """

        self._bare_metal_cluster_id = bare_metal_cluster_id

    @property
    def local_name(self):
        """Gets the local_name of this EnrollBareMetalClusterRequest.

        Optional. The object name of the bare metal cluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the bare_metal_cluster_id. Otherwise, it must match the object name of the bare metal cluster custom resource. It is not modifiable outside / beyond the enrollment operation.

        :return: The local_name of this EnrollBareMetalClusterRequest.
        :rtype: str
        """
        return self._local_name

    @local_name.setter
    def local_name(self, local_name):
        """Sets the local_name of this EnrollBareMetalClusterRequest.

        Optional. The object name of the bare metal cluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the bare_metal_cluster_id. Otherwise, it must match the object name of the bare metal cluster custom resource. It is not modifiable outside / beyond the enrollment operation.

        :param local_name: The local_name of this EnrollBareMetalClusterRequest.
        :type local_name: str
        """

        self._local_name = local_name
