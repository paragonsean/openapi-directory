# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwareNodePoolAutoscalingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_replicas: int=None, min_replicas: int=None):
        """VmwareNodePoolAutoscalingConfig - a model defined in OpenAPI

        :param max_replicas: The max_replicas of this VmwareNodePoolAutoscalingConfig.
        :param min_replicas: The min_replicas of this VmwareNodePoolAutoscalingConfig.
        """
        self.openapi_types = {
            'max_replicas': int,
            'min_replicas': int
        }

        self.attribute_map = {
            'max_replicas': 'maxReplicas',
            'min_replicas': 'minReplicas'
        }

        self._max_replicas = max_replicas
        self._min_replicas = min_replicas

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareNodePoolAutoscalingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareNodePoolAutoscalingConfig of this VmwareNodePoolAutoscalingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_replicas(self):
        """Gets the max_replicas of this VmwareNodePoolAutoscalingConfig.

        Maximum number of replicas in the NodePool.

        :return: The max_replicas of this VmwareNodePoolAutoscalingConfig.
        :rtype: int
        """
        return self._max_replicas

    @max_replicas.setter
    def max_replicas(self, max_replicas):
        """Sets the max_replicas of this VmwareNodePoolAutoscalingConfig.

        Maximum number of replicas in the NodePool.

        :param max_replicas: The max_replicas of this VmwareNodePoolAutoscalingConfig.
        :type max_replicas: int
        """

        self._max_replicas = max_replicas

    @property
    def min_replicas(self):
        """Gets the min_replicas of this VmwareNodePoolAutoscalingConfig.

        Minimum number of replicas in the NodePool.

        :return: The min_replicas of this VmwareNodePoolAutoscalingConfig.
        :rtype: int
        """
        return self._min_replicas

    @min_replicas.setter
    def min_replicas(self, min_replicas):
        """Sets the min_replicas of this VmwareNodePoolAutoscalingConfig.

        Minimum number of replicas in the NodePool.

        :param min_replicas: The min_replicas of this VmwareNodePoolAutoscalingConfig.
        :type min_replicas: int
        """

        self._min_replicas = min_replicas
