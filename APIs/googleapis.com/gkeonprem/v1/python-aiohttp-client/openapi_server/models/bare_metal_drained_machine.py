# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BareMetalDrainedMachine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_ip: str=None):
        """BareMetalDrainedMachine - a model defined in OpenAPI

        :param node_ip: The node_ip of this BareMetalDrainedMachine.
        """
        self.openapi_types = {
            'node_ip': str
        }

        self.attribute_map = {
            'node_ip': 'nodeIp'
        }

        self._node_ip = node_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BareMetalDrainedMachine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BareMetalDrainedMachine of this BareMetalDrainedMachine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_ip(self):
        """Gets the node_ip of this BareMetalDrainedMachine.

        Drained machine IP address.

        :return: The node_ip of this BareMetalDrainedMachine.
        :rtype: str
        """
        return self._node_ip

    @node_ip.setter
    def node_ip(self, node_ip):
        """Sets the node_ip of this BareMetalDrainedMachine.

        Drained machine IP address.

        :param node_ip: The node_ip of this BareMetalDrainedMachine.
        :type node_ip: str
        """

        self._node_ip = node_ip
