# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vmware_cluster import VmwareCluster
from openapi_server import util


class ListVmwareClustersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, unreachable: List[str]=None, vmware_clusters: List[VmwareCluster]=None):
        """ListVmwareClustersResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListVmwareClustersResponse.
        :param unreachable: The unreachable of this ListVmwareClustersResponse.
        :param vmware_clusters: The vmware_clusters of this ListVmwareClustersResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'unreachable': List[str],
            'vmware_clusters': List[VmwareCluster]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'unreachable': 'unreachable',
            'vmware_clusters': 'vmwareClusters'
        }

        self._next_page_token = next_page_token
        self._unreachable = unreachable
        self._vmware_clusters = vmware_clusters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListVmwareClustersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListVmwareClustersResponse of this ListVmwareClustersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListVmwareClustersResponse.

        A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.

        :return: The next_page_token of this ListVmwareClustersResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListVmwareClustersResponse.

        A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.

        :param next_page_token: The next_page_token of this ListVmwareClustersResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable(self):
        """Gets the unreachable of this ListVmwareClustersResponse.

        Locations that could not be reached.

        :return: The unreachable of this ListVmwareClustersResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListVmwareClustersResponse.

        Locations that could not be reached.

        :param unreachable: The unreachable of this ListVmwareClustersResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable

    @property
    def vmware_clusters(self):
        """Gets the vmware_clusters of this ListVmwareClustersResponse.

        The list of VMware Cluster.

        :return: The vmware_clusters of this ListVmwareClustersResponse.
        :rtype: List[VmwareCluster]
        """
        return self._vmware_clusters

    @vmware_clusters.setter
    def vmware_clusters(self, vmware_clusters):
        """Sets the vmware_clusters of this ListVmwareClustersResponse.

        The list of VMware Cluster.

        :param vmware_clusters: The vmware_clusters of this ListVmwareClustersResponse.
        :type vmware_clusters: List[VmwareCluster]
        """

        self._vmware_clusters = vmware_clusters
