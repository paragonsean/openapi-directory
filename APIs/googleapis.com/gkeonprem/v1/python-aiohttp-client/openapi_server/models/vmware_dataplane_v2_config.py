# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwareDataplaneV2Config(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_networking: bool=None, dataplane_v2_enabled: bool=None, forward_mode: str=None, windows_dataplane_v2_enabled: bool=None):
        """VmwareDataplaneV2Config - a model defined in OpenAPI

        :param advanced_networking: The advanced_networking of this VmwareDataplaneV2Config.
        :param dataplane_v2_enabled: The dataplane_v2_enabled of this VmwareDataplaneV2Config.
        :param forward_mode: The forward_mode of this VmwareDataplaneV2Config.
        :param windows_dataplane_v2_enabled: The windows_dataplane_v2_enabled of this VmwareDataplaneV2Config.
        """
        self.openapi_types = {
            'advanced_networking': bool,
            'dataplane_v2_enabled': bool,
            'forward_mode': str,
            'windows_dataplane_v2_enabled': bool
        }

        self.attribute_map = {
            'advanced_networking': 'advancedNetworking',
            'dataplane_v2_enabled': 'dataplaneV2Enabled',
            'forward_mode': 'forwardMode',
            'windows_dataplane_v2_enabled': 'windowsDataplaneV2Enabled'
        }

        self._advanced_networking = advanced_networking
        self._dataplane_v2_enabled = dataplane_v2_enabled
        self._forward_mode = forward_mode
        self._windows_dataplane_v2_enabled = windows_dataplane_v2_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareDataplaneV2Config':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareDataplaneV2Config of this VmwareDataplaneV2Config.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_networking(self):
        """Gets the advanced_networking of this VmwareDataplaneV2Config.

        Enable advanced networking which requires dataplane_v2_enabled to be set true.

        :return: The advanced_networking of this VmwareDataplaneV2Config.
        :rtype: bool
        """
        return self._advanced_networking

    @advanced_networking.setter
    def advanced_networking(self, advanced_networking):
        """Sets the advanced_networking of this VmwareDataplaneV2Config.

        Enable advanced networking which requires dataplane_v2_enabled to be set true.

        :param advanced_networking: The advanced_networking of this VmwareDataplaneV2Config.
        :type advanced_networking: bool
        """

        self._advanced_networking = advanced_networking

    @property
    def dataplane_v2_enabled(self):
        """Gets the dataplane_v2_enabled of this VmwareDataplaneV2Config.

        Enables Dataplane V2.

        :return: The dataplane_v2_enabled of this VmwareDataplaneV2Config.
        :rtype: bool
        """
        return self._dataplane_v2_enabled

    @dataplane_v2_enabled.setter
    def dataplane_v2_enabled(self, dataplane_v2_enabled):
        """Sets the dataplane_v2_enabled of this VmwareDataplaneV2Config.

        Enables Dataplane V2.

        :param dataplane_v2_enabled: The dataplane_v2_enabled of this VmwareDataplaneV2Config.
        :type dataplane_v2_enabled: bool
        """

        self._dataplane_v2_enabled = dataplane_v2_enabled

    @property
    def forward_mode(self):
        """Gets the forward_mode of this VmwareDataplaneV2Config.

        Configure ForwardMode for Dataplane v2.

        :return: The forward_mode of this VmwareDataplaneV2Config.
        :rtype: str
        """
        return self._forward_mode

    @forward_mode.setter
    def forward_mode(self, forward_mode):
        """Sets the forward_mode of this VmwareDataplaneV2Config.

        Configure ForwardMode for Dataplane v2.

        :param forward_mode: The forward_mode of this VmwareDataplaneV2Config.
        :type forward_mode: str
        """

        self._forward_mode = forward_mode

    @property
    def windows_dataplane_v2_enabled(self):
        """Gets the windows_dataplane_v2_enabled of this VmwareDataplaneV2Config.

        Enable Dataplane V2 for clusters with Windows nodes.

        :return: The windows_dataplane_v2_enabled of this VmwareDataplaneV2Config.
        :rtype: bool
        """
        return self._windows_dataplane_v2_enabled

    @windows_dataplane_v2_enabled.setter
    def windows_dataplane_v2_enabled(self, windows_dataplane_v2_enabled):
        """Sets the windows_dataplane_v2_enabled of this VmwareDataplaneV2Config.

        Enable Dataplane V2 for clusters with Windows nodes.

        :param windows_dataplane_v2_enabled: The windows_dataplane_v2_enabled of this VmwareDataplaneV2Config.
        :type windows_dataplane_v2_enabled: bool
        """

        self._windows_dataplane_v2_enabled = windows_dataplane_v2_enabled
