# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bare_metal_admin_cluster import BareMetalAdminCluster
from openapi_server import util


class ListBareMetalAdminClustersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bare_metal_admin_clusters: List[BareMetalAdminCluster]=None, next_page_token: str=None, unreachable: List[str]=None):
        """ListBareMetalAdminClustersResponse - a model defined in OpenAPI

        :param bare_metal_admin_clusters: The bare_metal_admin_clusters of this ListBareMetalAdminClustersResponse.
        :param next_page_token: The next_page_token of this ListBareMetalAdminClustersResponse.
        :param unreachable: The unreachable of this ListBareMetalAdminClustersResponse.
        """
        self.openapi_types = {
            'bare_metal_admin_clusters': List[BareMetalAdminCluster],
            'next_page_token': str,
            'unreachable': List[str]
        }

        self.attribute_map = {
            'bare_metal_admin_clusters': 'bareMetalAdminClusters',
            'next_page_token': 'nextPageToken',
            'unreachable': 'unreachable'
        }

        self._bare_metal_admin_clusters = bare_metal_admin_clusters
        self._next_page_token = next_page_token
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListBareMetalAdminClustersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListBareMetalAdminClustersResponse of this ListBareMetalAdminClustersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bare_metal_admin_clusters(self):
        """Gets the bare_metal_admin_clusters of this ListBareMetalAdminClustersResponse.

        The list of bare metal admin cluster.

        :return: The bare_metal_admin_clusters of this ListBareMetalAdminClustersResponse.
        :rtype: List[BareMetalAdminCluster]
        """
        return self._bare_metal_admin_clusters

    @bare_metal_admin_clusters.setter
    def bare_metal_admin_clusters(self, bare_metal_admin_clusters):
        """Sets the bare_metal_admin_clusters of this ListBareMetalAdminClustersResponse.

        The list of bare metal admin cluster.

        :param bare_metal_admin_clusters: The bare_metal_admin_clusters of this ListBareMetalAdminClustersResponse.
        :type bare_metal_admin_clusters: List[BareMetalAdminCluster]
        """

        self._bare_metal_admin_clusters = bare_metal_admin_clusters

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListBareMetalAdminClustersResponse.

        A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.

        :return: The next_page_token of this ListBareMetalAdminClustersResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListBareMetalAdminClustersResponse.

        A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.

        :param next_page_token: The next_page_token of this ListBareMetalAdminClustersResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable(self):
        """Gets the unreachable of this ListBareMetalAdminClustersResponse.

        Locations that could not be reached.

        :return: The unreachable of this ListBareMetalAdminClustersResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListBareMetalAdminClustersResponse.

        Locations that could not be reached.

        :param unreachable: The unreachable of this ListBareMetalAdminClustersResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
