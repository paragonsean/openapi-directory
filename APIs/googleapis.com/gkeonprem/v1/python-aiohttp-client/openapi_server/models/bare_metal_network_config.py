# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bare_metal_island_mode_cidr_config import BareMetalIslandModeCidrConfig
from openapi_server.models.bare_metal_multiple_network_interfaces_config import BareMetalMultipleNetworkInterfacesConfig
from openapi_server.models.bare_metal_sr_iov_config import BareMetalSrIovConfig
from openapi_server import util


class BareMetalNetworkConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_networking: bool=None, island_mode_cidr: BareMetalIslandModeCidrConfig=None, multiple_network_interfaces_config: BareMetalMultipleNetworkInterfacesConfig=None, sr_iov_config: BareMetalSrIovConfig=None):
        """BareMetalNetworkConfig - a model defined in OpenAPI

        :param advanced_networking: The advanced_networking of this BareMetalNetworkConfig.
        :param island_mode_cidr: The island_mode_cidr of this BareMetalNetworkConfig.
        :param multiple_network_interfaces_config: The multiple_network_interfaces_config of this BareMetalNetworkConfig.
        :param sr_iov_config: The sr_iov_config of this BareMetalNetworkConfig.
        """
        self.openapi_types = {
            'advanced_networking': bool,
            'island_mode_cidr': BareMetalIslandModeCidrConfig,
            'multiple_network_interfaces_config': BareMetalMultipleNetworkInterfacesConfig,
            'sr_iov_config': BareMetalSrIovConfig
        }

        self.attribute_map = {
            'advanced_networking': 'advancedNetworking',
            'island_mode_cidr': 'islandModeCidr',
            'multiple_network_interfaces_config': 'multipleNetworkInterfacesConfig',
            'sr_iov_config': 'srIovConfig'
        }

        self._advanced_networking = advanced_networking
        self._island_mode_cidr = island_mode_cidr
        self._multiple_network_interfaces_config = multiple_network_interfaces_config
        self._sr_iov_config = sr_iov_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BareMetalNetworkConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BareMetalNetworkConfig of this BareMetalNetworkConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_networking(self):
        """Gets the advanced_networking of this BareMetalNetworkConfig.

        Enables the use of advanced Anthos networking features, such as Bundled Load Balancing with BGP or the egress NAT gateway. Setting configuration for advanced networking features will automatically set this flag.

        :return: The advanced_networking of this BareMetalNetworkConfig.
        :rtype: bool
        """
        return self._advanced_networking

    @advanced_networking.setter
    def advanced_networking(self, advanced_networking):
        """Sets the advanced_networking of this BareMetalNetworkConfig.

        Enables the use of advanced Anthos networking features, such as Bundled Load Balancing with BGP or the egress NAT gateway. Setting configuration for advanced networking features will automatically set this flag.

        :param advanced_networking: The advanced_networking of this BareMetalNetworkConfig.
        :type advanced_networking: bool
        """

        self._advanced_networking = advanced_networking

    @property
    def island_mode_cidr(self):
        """Gets the island_mode_cidr of this BareMetalNetworkConfig.


        :return: The island_mode_cidr of this BareMetalNetworkConfig.
        :rtype: BareMetalIslandModeCidrConfig
        """
        return self._island_mode_cidr

    @island_mode_cidr.setter
    def island_mode_cidr(self, island_mode_cidr):
        """Sets the island_mode_cidr of this BareMetalNetworkConfig.


        :param island_mode_cidr: The island_mode_cidr of this BareMetalNetworkConfig.
        :type island_mode_cidr: BareMetalIslandModeCidrConfig
        """

        self._island_mode_cidr = island_mode_cidr

    @property
    def multiple_network_interfaces_config(self):
        """Gets the multiple_network_interfaces_config of this BareMetalNetworkConfig.


        :return: The multiple_network_interfaces_config of this BareMetalNetworkConfig.
        :rtype: BareMetalMultipleNetworkInterfacesConfig
        """
        return self._multiple_network_interfaces_config

    @multiple_network_interfaces_config.setter
    def multiple_network_interfaces_config(self, multiple_network_interfaces_config):
        """Sets the multiple_network_interfaces_config of this BareMetalNetworkConfig.


        :param multiple_network_interfaces_config: The multiple_network_interfaces_config of this BareMetalNetworkConfig.
        :type multiple_network_interfaces_config: BareMetalMultipleNetworkInterfacesConfig
        """

        self._multiple_network_interfaces_config = multiple_network_interfaces_config

    @property
    def sr_iov_config(self):
        """Gets the sr_iov_config of this BareMetalNetworkConfig.


        :return: The sr_iov_config of this BareMetalNetworkConfig.
        :rtype: BareMetalSrIovConfig
        """
        return self._sr_iov_config

    @sr_iov_config.setter
    def sr_iov_config(self, sr_iov_config):
        """Sets the sr_iov_config of this BareMetalNetworkConfig.


        :param sr_iov_config: The sr_iov_config of this BareMetalNetworkConfig.
        :type sr_iov_config: BareMetalSrIovConfig
        """

        self._sr_iov_config = sr_iov_config
