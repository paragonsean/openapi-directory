# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BareMetalWorkloadNodeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_runtime: str=None, max_pods_per_node: str=None):
        """BareMetalWorkloadNodeConfig - a model defined in OpenAPI

        :param container_runtime: The container_runtime of this BareMetalWorkloadNodeConfig.
        :param max_pods_per_node: The max_pods_per_node of this BareMetalWorkloadNodeConfig.
        """
        self.openapi_types = {
            'container_runtime': str,
            'max_pods_per_node': str
        }

        self.attribute_map = {
            'container_runtime': 'containerRuntime',
            'max_pods_per_node': 'maxPodsPerNode'
        }

        self._container_runtime = container_runtime
        self._max_pods_per_node = max_pods_per_node

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BareMetalWorkloadNodeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BareMetalWorkloadNodeConfig of this BareMetalWorkloadNodeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_runtime(self):
        """Gets the container_runtime of this BareMetalWorkloadNodeConfig.

        Specifies which container runtime will be used.

        :return: The container_runtime of this BareMetalWorkloadNodeConfig.
        :rtype: str
        """
        return self._container_runtime

    @container_runtime.setter
    def container_runtime(self, container_runtime):
        """Sets the container_runtime of this BareMetalWorkloadNodeConfig.

        Specifies which container runtime will be used.

        :param container_runtime: The container_runtime of this BareMetalWorkloadNodeConfig.
        :type container_runtime: str
        """
        allowed_values = ["CONTAINER_RUNTIME_UNSPECIFIED", "CONTAINERD"]  # noqa: E501
        if container_runtime not in allowed_values:
            raise ValueError(
                "Invalid value for `container_runtime` ({0}), must be one of {1}"
                .format(container_runtime, allowed_values)
            )

        self._container_runtime = container_runtime

    @property
    def max_pods_per_node(self):
        """Gets the max_pods_per_node of this BareMetalWorkloadNodeConfig.

        The maximum number of pods a node can run. The size of the CIDR range assigned to the node will be derived from this parameter.

        :return: The max_pods_per_node of this BareMetalWorkloadNodeConfig.
        :rtype: str
        """
        return self._max_pods_per_node

    @max_pods_per_node.setter
    def max_pods_per_node(self, max_pods_per_node):
        """Sets the max_pods_per_node of this BareMetalWorkloadNodeConfig.

        The maximum number of pods a node can run. The size of the CIDR range assigned to the node will be derived from this parameter.

        :param max_pods_per_node: The max_pods_per_node of this BareMetalWorkloadNodeConfig.
        :type max_pods_per_node: str
        """

        self._max_pods_per_node = max_pods_per_node
