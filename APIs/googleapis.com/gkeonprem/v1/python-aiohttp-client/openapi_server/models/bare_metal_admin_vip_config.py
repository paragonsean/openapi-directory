# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BareMetalAdminVipConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, control_plane_vip: str=None):
        """BareMetalAdminVipConfig - a model defined in OpenAPI

        :param control_plane_vip: The control_plane_vip of this BareMetalAdminVipConfig.
        """
        self.openapi_types = {
            'control_plane_vip': str
        }

        self.attribute_map = {
            'control_plane_vip': 'controlPlaneVip'
        }

        self._control_plane_vip = control_plane_vip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BareMetalAdminVipConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BareMetalAdminVipConfig of this BareMetalAdminVipConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def control_plane_vip(self):
        """Gets the control_plane_vip of this BareMetalAdminVipConfig.

        The VIP which you previously set aside for the Kubernetes API of this bare metal admin cluster.

        :return: The control_plane_vip of this BareMetalAdminVipConfig.
        :rtype: str
        """
        return self._control_plane_vip

    @control_plane_vip.setter
    def control_plane_vip(self, control_plane_vip):
        """Sets the control_plane_vip of this BareMetalAdminVipConfig.

        The VIP which you previously set aside for the Kubernetes API of this bare metal admin cluster.

        :param control_plane_vip: The control_plane_vip of this BareMetalAdminVipConfig.
        :type control_plane_vip: str
        """

        self._control_plane_vip = control_plane_vip
