# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VmwareAdminF5BigIpConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, partition: str=None, snat_pool: str=None):
        """VmwareAdminF5BigIpConfig - a model defined in OpenAPI

        :param address: The address of this VmwareAdminF5BigIpConfig.
        :param partition: The partition of this VmwareAdminF5BigIpConfig.
        :param snat_pool: The snat_pool of this VmwareAdminF5BigIpConfig.
        """
        self.openapi_types = {
            'address': str,
            'partition': str,
            'snat_pool': str
        }

        self.attribute_map = {
            'address': 'address',
            'partition': 'partition',
            'snat_pool': 'snatPool'
        }

        self._address = address
        self._partition = partition
        self._snat_pool = snat_pool

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareAdminF5BigIpConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareAdminF5BigIpConfig of this VmwareAdminF5BigIpConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this VmwareAdminF5BigIpConfig.

        The load balancer's IP address.

        :return: The address of this VmwareAdminF5BigIpConfig.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this VmwareAdminF5BigIpConfig.

        The load balancer's IP address.

        :param address: The address of this VmwareAdminF5BigIpConfig.
        :type address: str
        """

        self._address = address

    @property
    def partition(self):
        """Gets the partition of this VmwareAdminF5BigIpConfig.

        The preexisting partition to be used by the load balancer. This partition is usually created for the admin cluster for example: 'my-f5-admin-partition'.

        :return: The partition of this VmwareAdminF5BigIpConfig.
        :rtype: str
        """
        return self._partition

    @partition.setter
    def partition(self, partition):
        """Sets the partition of this VmwareAdminF5BigIpConfig.

        The preexisting partition to be used by the load balancer. This partition is usually created for the admin cluster for example: 'my-f5-admin-partition'.

        :param partition: The partition of this VmwareAdminF5BigIpConfig.
        :type partition: str
        """

        self._partition = partition

    @property
    def snat_pool(self):
        """Gets the snat_pool of this VmwareAdminF5BigIpConfig.

        The pool name. Only necessary, if using SNAT.

        :return: The snat_pool of this VmwareAdminF5BigIpConfig.
        :rtype: str
        """
        return self._snat_pool

    @snat_pool.setter
    def snat_pool(self, snat_pool):
        """Sets the snat_pool of this VmwareAdminF5BigIpConfig.

        The pool name. Only necessary, if using SNAT.

        :param snat_pool: The snat_pool of this VmwareAdminF5BigIpConfig.
        :type snat_pool: str
        """

        self._snat_pool = snat_pool
