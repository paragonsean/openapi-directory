# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bare_metal_version_info import BareMetalVersionInfo
from openapi_server import util


class QueryBareMetalAdminVersionConfigResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, versions: List[BareMetalVersionInfo]=None):
        """QueryBareMetalAdminVersionConfigResponse - a model defined in OpenAPI

        :param versions: The versions of this QueryBareMetalAdminVersionConfigResponse.
        """
        self.openapi_types = {
            'versions': List[BareMetalVersionInfo]
        }

        self.attribute_map = {
            'versions': 'versions'
        }

        self._versions = versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryBareMetalAdminVersionConfigResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryBareMetalAdminVersionConfigResponse of this QueryBareMetalAdminVersionConfigResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def versions(self):
        """Gets the versions of this QueryBareMetalAdminVersionConfigResponse.

        List of available versions to install or to upgrade to.

        :return: The versions of this QueryBareMetalAdminVersionConfigResponse.
        :rtype: List[BareMetalVersionInfo]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this QueryBareMetalAdminVersionConfigResponse.

        List of available versions to install or to upgrade to.

        :param versions: The versions of this QueryBareMetalAdminVersionConfigResponse.
        :type versions: List[BareMetalVersionInfo]
        """

        self._versions = versions
