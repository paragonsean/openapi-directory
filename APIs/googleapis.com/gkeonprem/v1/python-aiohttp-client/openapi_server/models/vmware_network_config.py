# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vmware_control_plane_v2_config import VmwareControlPlaneV2Config
from openapi_server.models.vmware_dhcp_ip_config import VmwareDhcpIpConfig
from openapi_server.models.vmware_host_config import VmwareHostConfig
from openapi_server.models.vmware_static_ip_config import VmwareStaticIpConfig
from openapi_server import util


class VmwareNetworkConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, control_plane_v2_config: VmwareControlPlaneV2Config=None, dhcp_ip_config: VmwareDhcpIpConfig=None, host_config: VmwareHostConfig=None, pod_address_cidr_blocks: List[str]=None, service_address_cidr_blocks: List[str]=None, static_ip_config: VmwareStaticIpConfig=None, vcenter_network: str=None):
        """VmwareNetworkConfig - a model defined in OpenAPI

        :param control_plane_v2_config: The control_plane_v2_config of this VmwareNetworkConfig.
        :param dhcp_ip_config: The dhcp_ip_config of this VmwareNetworkConfig.
        :param host_config: The host_config of this VmwareNetworkConfig.
        :param pod_address_cidr_blocks: The pod_address_cidr_blocks of this VmwareNetworkConfig.
        :param service_address_cidr_blocks: The service_address_cidr_blocks of this VmwareNetworkConfig.
        :param static_ip_config: The static_ip_config of this VmwareNetworkConfig.
        :param vcenter_network: The vcenter_network of this VmwareNetworkConfig.
        """
        self.openapi_types = {
            'control_plane_v2_config': VmwareControlPlaneV2Config,
            'dhcp_ip_config': VmwareDhcpIpConfig,
            'host_config': VmwareHostConfig,
            'pod_address_cidr_blocks': List[str],
            'service_address_cidr_blocks': List[str],
            'static_ip_config': VmwareStaticIpConfig,
            'vcenter_network': str
        }

        self.attribute_map = {
            'control_plane_v2_config': 'controlPlaneV2Config',
            'dhcp_ip_config': 'dhcpIpConfig',
            'host_config': 'hostConfig',
            'pod_address_cidr_blocks': 'podAddressCidrBlocks',
            'service_address_cidr_blocks': 'serviceAddressCidrBlocks',
            'static_ip_config': 'staticIpConfig',
            'vcenter_network': 'vcenterNetwork'
        }

        self._control_plane_v2_config = control_plane_v2_config
        self._dhcp_ip_config = dhcp_ip_config
        self._host_config = host_config
        self._pod_address_cidr_blocks = pod_address_cidr_blocks
        self._service_address_cidr_blocks = service_address_cidr_blocks
        self._static_ip_config = static_ip_config
        self._vcenter_network = vcenter_network

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareNetworkConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareNetworkConfig of this VmwareNetworkConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def control_plane_v2_config(self):
        """Gets the control_plane_v2_config of this VmwareNetworkConfig.


        :return: The control_plane_v2_config of this VmwareNetworkConfig.
        :rtype: VmwareControlPlaneV2Config
        """
        return self._control_plane_v2_config

    @control_plane_v2_config.setter
    def control_plane_v2_config(self, control_plane_v2_config):
        """Sets the control_plane_v2_config of this VmwareNetworkConfig.


        :param control_plane_v2_config: The control_plane_v2_config of this VmwareNetworkConfig.
        :type control_plane_v2_config: VmwareControlPlaneV2Config
        """

        self._control_plane_v2_config = control_plane_v2_config

    @property
    def dhcp_ip_config(self):
        """Gets the dhcp_ip_config of this VmwareNetworkConfig.


        :return: The dhcp_ip_config of this VmwareNetworkConfig.
        :rtype: VmwareDhcpIpConfig
        """
        return self._dhcp_ip_config

    @dhcp_ip_config.setter
    def dhcp_ip_config(self, dhcp_ip_config):
        """Sets the dhcp_ip_config of this VmwareNetworkConfig.


        :param dhcp_ip_config: The dhcp_ip_config of this VmwareNetworkConfig.
        :type dhcp_ip_config: VmwareDhcpIpConfig
        """

        self._dhcp_ip_config = dhcp_ip_config

    @property
    def host_config(self):
        """Gets the host_config of this VmwareNetworkConfig.


        :return: The host_config of this VmwareNetworkConfig.
        :rtype: VmwareHostConfig
        """
        return self._host_config

    @host_config.setter
    def host_config(self, host_config):
        """Sets the host_config of this VmwareNetworkConfig.


        :param host_config: The host_config of this VmwareNetworkConfig.
        :type host_config: VmwareHostConfig
        """

        self._host_config = host_config

    @property
    def pod_address_cidr_blocks(self):
        """Gets the pod_address_cidr_blocks of this VmwareNetworkConfig.

        Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.

        :return: The pod_address_cidr_blocks of this VmwareNetworkConfig.
        :rtype: List[str]
        """
        return self._pod_address_cidr_blocks

    @pod_address_cidr_blocks.setter
    def pod_address_cidr_blocks(self, pod_address_cidr_blocks):
        """Sets the pod_address_cidr_blocks of this VmwareNetworkConfig.

        Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.

        :param pod_address_cidr_blocks: The pod_address_cidr_blocks of this VmwareNetworkConfig.
        :type pod_address_cidr_blocks: List[str]
        """

        self._pod_address_cidr_blocks = pod_address_cidr_blocks

    @property
    def service_address_cidr_blocks(self):
        """Gets the service_address_cidr_blocks of this VmwareNetworkConfig.

        Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.

        :return: The service_address_cidr_blocks of this VmwareNetworkConfig.
        :rtype: List[str]
        """
        return self._service_address_cidr_blocks

    @service_address_cidr_blocks.setter
    def service_address_cidr_blocks(self, service_address_cidr_blocks):
        """Sets the service_address_cidr_blocks of this VmwareNetworkConfig.

        Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.

        :param service_address_cidr_blocks: The service_address_cidr_blocks of this VmwareNetworkConfig.
        :type service_address_cidr_blocks: List[str]
        """

        self._service_address_cidr_blocks = service_address_cidr_blocks

    @property
    def static_ip_config(self):
        """Gets the static_ip_config of this VmwareNetworkConfig.


        :return: The static_ip_config of this VmwareNetworkConfig.
        :rtype: VmwareStaticIpConfig
        """
        return self._static_ip_config

    @static_ip_config.setter
    def static_ip_config(self, static_ip_config):
        """Sets the static_ip_config of this VmwareNetworkConfig.


        :param static_ip_config: The static_ip_config of this VmwareNetworkConfig.
        :type static_ip_config: VmwareStaticIpConfig
        """

        self._static_ip_config = static_ip_config

    @property
    def vcenter_network(self):
        """Gets the vcenter_network of this VmwareNetworkConfig.

        vcenter_network specifies vCenter network name. Inherited from the admin cluster.

        :return: The vcenter_network of this VmwareNetworkConfig.
        :rtype: str
        """
        return self._vcenter_network

    @vcenter_network.setter
    def vcenter_network(self, vcenter_network):
        """Sets the vcenter_network of this VmwareNetworkConfig.

        vcenter_network specifies vCenter network name. Inherited from the admin cluster.

        :param vcenter_network: The vcenter_network of this VmwareNetworkConfig.
        :type vcenter_network: str
        """

        self._vcenter_network = vcenter_network
