# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_user import ClusterUser
from openapi_server import util


class VmwareAdminAuthorizationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, viewer_users: List[ClusterUser]=None):
        """VmwareAdminAuthorizationConfig - a model defined in OpenAPI

        :param viewer_users: The viewer_users of this VmwareAdminAuthorizationConfig.
        """
        self.openapi_types = {
            'viewer_users': List[ClusterUser]
        }

        self.attribute_map = {
            'viewer_users': 'viewerUsers'
        }

        self._viewer_users = viewer_users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareAdminAuthorizationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareAdminAuthorizationConfig of this VmwareAdminAuthorizationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def viewer_users(self):
        """Gets the viewer_users of this VmwareAdminAuthorizationConfig.

        For VMware admin clusters, users will be granted the cluster-viewer role on the cluster.

        :return: The viewer_users of this VmwareAdminAuthorizationConfig.
        :rtype: List[ClusterUser]
        """
        return self._viewer_users

    @viewer_users.setter
    def viewer_users(self, viewer_users):
        """Sets the viewer_users of this VmwareAdminAuthorizationConfig.

        For VMware admin clusters, users will be granted the cluster-viewer role on the cluster.

        :param viewer_users: The viewer_users of this VmwareAdminAuthorizationConfig.
        :type viewer_users: List[ClusterUser]
        """

        self._viewer_users = viewer_users
