# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vmware_ip_block import VmwareIpBlock
from openapi_server import util


class VmwareControlPlaneV2Config(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, control_plane_ip_block: VmwareIpBlock=None):
        """VmwareControlPlaneV2Config - a model defined in OpenAPI

        :param control_plane_ip_block: The control_plane_ip_block of this VmwareControlPlaneV2Config.
        """
        self.openapi_types = {
            'control_plane_ip_block': VmwareIpBlock
        }

        self.attribute_map = {
            'control_plane_ip_block': 'controlPlaneIpBlock'
        }

        self._control_plane_ip_block = control_plane_ip_block

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareControlPlaneV2Config':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareControlPlaneV2Config of this VmwareControlPlaneV2Config.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def control_plane_ip_block(self):
        """Gets the control_plane_ip_block of this VmwareControlPlaneV2Config.


        :return: The control_plane_ip_block of this VmwareControlPlaneV2Config.
        :rtype: VmwareIpBlock
        """
        return self._control_plane_ip_block

    @control_plane_ip_block.setter
    def control_plane_ip_block(self, control_plane_ip_block):
        """Sets the control_plane_ip_block of this VmwareControlPlaneV2Config.


        :param control_plane_ip_block: The control_plane_ip_block of this VmwareControlPlaneV2Config.
        :type control_plane_ip_block: VmwareIpBlock
        """

        self._control_plane_ip_block = control_plane_ip_block
