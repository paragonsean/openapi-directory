# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_user import ClusterUser
from openapi_server import util


class Authorization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin_users: List[ClusterUser]=None):
        """Authorization - a model defined in OpenAPI

        :param admin_users: The admin_users of this Authorization.
        """
        self.openapi_types = {
            'admin_users': List[ClusterUser]
        }

        self.attribute_map = {
            'admin_users': 'adminUsers'
        }

        self._admin_users = admin_users

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Authorization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Authorization of this Authorization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin_users(self):
        """Gets the admin_users of this Authorization.

        For VMware and bare metal user clusters, users will be granted the cluster-admin role on the cluster, which provides full administrative access to the cluster. For bare metal admin clusters, users will be granted the cluster-view role, which limits users to read-only access.

        :return: The admin_users of this Authorization.
        :rtype: List[ClusterUser]
        """
        return self._admin_users

    @admin_users.setter
    def admin_users(self, admin_users):
        """Sets the admin_users of this Authorization.

        For VMware and bare metal user clusters, users will be granted the cluster-admin role on the cluster, which provides full administrative access to the cluster. For bare metal admin clusters, users will be granted the cluster-view role, which limits users to read-only access.

        :param admin_users: The admin_users of this Authorization.
        :type admin_users: List[ClusterUser]
        """

        self._admin_users = admin_users
