/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBareMetalAdminStorageConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBareMetalAdminStorageConfig::OAIBareMetalAdminStorageConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBareMetalAdminStorageConfig::OAIBareMetalAdminStorageConfig() {
    this->initializeModel();
}

OAIBareMetalAdminStorageConfig::~OAIBareMetalAdminStorageConfig() {}

void OAIBareMetalAdminStorageConfig::initializeModel() {

    m_lvp_node_mounts_config_isSet = false;
    m_lvp_node_mounts_config_isValid = false;

    m_lvp_share_config_isSet = false;
    m_lvp_share_config_isValid = false;
}

void OAIBareMetalAdminStorageConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBareMetalAdminStorageConfig::fromJsonObject(QJsonObject json) {

    m_lvp_node_mounts_config_isValid = ::OpenAPI::fromJsonValue(m_lvp_node_mounts_config, json[QString("lvpNodeMountsConfig")]);
    m_lvp_node_mounts_config_isSet = !json[QString("lvpNodeMountsConfig")].isNull() && m_lvp_node_mounts_config_isValid;

    m_lvp_share_config_isValid = ::OpenAPI::fromJsonValue(m_lvp_share_config, json[QString("lvpShareConfig")]);
    m_lvp_share_config_isSet = !json[QString("lvpShareConfig")].isNull() && m_lvp_share_config_isValid;
}

QString OAIBareMetalAdminStorageConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBareMetalAdminStorageConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_lvp_node_mounts_config.isSet()) {
        obj.insert(QString("lvpNodeMountsConfig"), ::OpenAPI::toJsonValue(m_lvp_node_mounts_config));
    }
    if (m_lvp_share_config.isSet()) {
        obj.insert(QString("lvpShareConfig"), ::OpenAPI::toJsonValue(m_lvp_share_config));
    }
    return obj;
}

OAIBareMetalLvpConfig OAIBareMetalAdminStorageConfig::getLvpNodeMountsConfig() const {
    return m_lvp_node_mounts_config;
}
void OAIBareMetalAdminStorageConfig::setLvpNodeMountsConfig(const OAIBareMetalLvpConfig &lvp_node_mounts_config) {
    m_lvp_node_mounts_config = lvp_node_mounts_config;
    m_lvp_node_mounts_config_isSet = true;
}

bool OAIBareMetalAdminStorageConfig::is_lvp_node_mounts_config_Set() const{
    return m_lvp_node_mounts_config_isSet;
}

bool OAIBareMetalAdminStorageConfig::is_lvp_node_mounts_config_Valid() const{
    return m_lvp_node_mounts_config_isValid;
}

OAIBareMetalLvpShareConfig OAIBareMetalAdminStorageConfig::getLvpShareConfig() const {
    return m_lvp_share_config;
}
void OAIBareMetalAdminStorageConfig::setLvpShareConfig(const OAIBareMetalLvpShareConfig &lvp_share_config) {
    m_lvp_share_config = lvp_share_config;
    m_lvp_share_config_isSet = true;
}

bool OAIBareMetalAdminStorageConfig::is_lvp_share_config_Set() const{
    return m_lvp_share_config_isSet;
}

bool OAIBareMetalAdminStorageConfig::is_lvp_share_config_Valid() const{
    return m_lvp_share_config_isValid;
}

bool OAIBareMetalAdminStorageConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lvp_node_mounts_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lvp_share_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBareMetalAdminStorageConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
