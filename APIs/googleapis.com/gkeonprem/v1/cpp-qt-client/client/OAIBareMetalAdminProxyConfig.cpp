/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBareMetalAdminProxyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBareMetalAdminProxyConfig::OAIBareMetalAdminProxyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBareMetalAdminProxyConfig::OAIBareMetalAdminProxyConfig() {
    this->initializeModel();
}

OAIBareMetalAdminProxyConfig::~OAIBareMetalAdminProxyConfig() {}

void OAIBareMetalAdminProxyConfig::initializeModel() {

    m_no_proxy_isSet = false;
    m_no_proxy_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIBareMetalAdminProxyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBareMetalAdminProxyConfig::fromJsonObject(QJsonObject json) {

    m_no_proxy_isValid = ::OpenAPI::fromJsonValue(m_no_proxy, json[QString("noProxy")]);
    m_no_proxy_isSet = !json[QString("noProxy")].isNull() && m_no_proxy_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIBareMetalAdminProxyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBareMetalAdminProxyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_no_proxy.size() > 0) {
        obj.insert(QString("noProxy"), ::OpenAPI::toJsonValue(m_no_proxy));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QList<QString> OAIBareMetalAdminProxyConfig::getNoProxy() const {
    return m_no_proxy;
}
void OAIBareMetalAdminProxyConfig::setNoProxy(const QList<QString> &no_proxy) {
    m_no_proxy = no_proxy;
    m_no_proxy_isSet = true;
}

bool OAIBareMetalAdminProxyConfig::is_no_proxy_Set() const{
    return m_no_proxy_isSet;
}

bool OAIBareMetalAdminProxyConfig::is_no_proxy_Valid() const{
    return m_no_proxy_isValid;
}

QString OAIBareMetalAdminProxyConfig::getUri() const {
    return m_uri;
}
void OAIBareMetalAdminProxyConfig::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIBareMetalAdminProxyConfig::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIBareMetalAdminProxyConfig::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIBareMetalAdminProxyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_no_proxy.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBareMetalAdminProxyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
