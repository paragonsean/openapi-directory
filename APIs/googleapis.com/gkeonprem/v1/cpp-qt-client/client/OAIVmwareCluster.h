/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVmwareCluster.h
 *
 * Resource that represents a VMware user cluster. ##
 */

#ifndef OAIVmwareCluster_H
#define OAIVmwareCluster_H

#include <QJsonObject>

#include "OAIAuthorization.h"
#include "OAIBinaryAuthorization.h"
#include "OAIFleet.h"
#include "OAIResourceStatus.h"
#include "OAIValidationCheck.h"
#include "OAIVmwareAAGConfig.h"
#include "OAIVmwareAutoRepairConfig.h"
#include "OAIVmwareClusterUpgradePolicy.h"
#include "OAIVmwareControlPlaneNodeConfig.h"
#include "OAIVmwareDataplaneV2Config.h"
#include "OAIVmwareLoadBalancerConfig.h"
#include "OAIVmwareNetworkConfig.h"
#include "OAIVmwareStorageConfig.h"
#include "OAIVmwareVCenterConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVmwareAAGConfig;
class OAIAuthorization;
class OAIVmwareAutoRepairConfig;
class OAIBinaryAuthorization;
class OAIVmwareControlPlaneNodeConfig;
class OAIVmwareDataplaneV2Config;
class OAIFleet;
class OAIVmwareLoadBalancerConfig;
class OAIVmwareNetworkConfig;
class OAIResourceStatus;
class OAIVmwareStorageConfig;
class OAIVmwareClusterUpgradePolicy;
class OAIValidationCheck;
class OAIVmwareVCenterConfig;

class OAIVmwareCluster : public OAIObject {
public:
    OAIVmwareCluster();
    OAIVmwareCluster(QString json);
    ~OAIVmwareCluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminClusterMembership() const;
    void setAdminClusterMembership(const QString &admin_cluster_membership);
    bool is_admin_cluster_membership_Set() const;
    bool is_admin_cluster_membership_Valid() const;

    QString getAdminClusterName() const;
    void setAdminClusterName(const QString &admin_cluster_name);
    bool is_admin_cluster_name_Set() const;
    bool is_admin_cluster_name_Valid() const;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    OAIVmwareAAGConfig getAntiAffinityGroups() const;
    void setAntiAffinityGroups(const OAIVmwareAAGConfig &anti_affinity_groups);
    bool is_anti_affinity_groups_Set() const;
    bool is_anti_affinity_groups_Valid() const;

    OAIAuthorization getAuthorization() const;
    void setAuthorization(const OAIAuthorization &authorization);
    bool is_authorization_Set() const;
    bool is_authorization_Valid() const;

    OAIVmwareAutoRepairConfig getAutoRepairConfig() const;
    void setAutoRepairConfig(const OAIVmwareAutoRepairConfig &auto_repair_config);
    bool is_auto_repair_config_Set() const;
    bool is_auto_repair_config_Valid() const;

    OAIBinaryAuthorization getBinaryAuthorization() const;
    void setBinaryAuthorization(const OAIBinaryAuthorization &binary_authorization);
    bool is_binary_authorization_Set() const;
    bool is_binary_authorization_Valid() const;

    OAIVmwareControlPlaneNodeConfig getControlPlaneNode() const;
    void setControlPlaneNode(const OAIVmwareControlPlaneNodeConfig &control_plane_node);
    bool is_control_plane_node_Set() const;
    bool is_control_plane_node_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIVmwareDataplaneV2Config getDataplaneV2() const;
    void setDataplaneV2(const OAIVmwareDataplaneV2Config &dataplane_v2);
    bool is_dataplane_v2_Set() const;
    bool is_dataplane_v2_Valid() const;

    QString getDeleteTime() const;
    void setDeleteTime(const QString &delete_time);
    bool is_delete_time_Set() const;
    bool is_delete_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isDisableBundledIngress() const;
    void setDisableBundledIngress(const bool &disable_bundled_ingress);
    bool is_disable_bundled_ingress_Set() const;
    bool is_disable_bundled_ingress_Valid() const;

    bool isEnableControlPlaneV2() const;
    void setEnableControlPlaneV2(const bool &enable_control_plane_v2);
    bool is_enable_control_plane_v2_Set() const;
    bool is_enable_control_plane_v2_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    OAIFleet getFleet() const;
    void setFleet(const OAIFleet &fleet);
    bool is_fleet_Set() const;
    bool is_fleet_Valid() const;

    OAIVmwareLoadBalancerConfig getLoadBalancer() const;
    void setLoadBalancer(const OAIVmwareLoadBalancerConfig &load_balancer);
    bool is_load_balancer_Set() const;
    bool is_load_balancer_Valid() const;

    QString getLocalName() const;
    void setLocalName(const QString &local_name);
    bool is_local_name_Set() const;
    bool is_local_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIVmwareNetworkConfig getNetworkConfig() const;
    void setNetworkConfig(const OAIVmwareNetworkConfig &network_config);
    bool is_network_config_Set() const;
    bool is_network_config_Valid() const;

    QString getOnPremVersion() const;
    void setOnPremVersion(const QString &on_prem_version);
    bool is_on_prem_version_Set() const;
    bool is_on_prem_version_Valid() const;

    bool isReconciling() const;
    void setReconciling(const bool &reconciling);
    bool is_reconciling_Set() const;
    bool is_reconciling_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIResourceStatus getStatus() const;
    void setStatus(const OAIResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIVmwareStorageConfig getStorage() const;
    void setStorage(const OAIVmwareStorageConfig &storage);
    bool is_storage_Set() const;
    bool is_storage_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIVmwareClusterUpgradePolicy getUpgradePolicy() const;
    void setUpgradePolicy(const OAIVmwareClusterUpgradePolicy &upgrade_policy);
    bool is_upgrade_policy_Set() const;
    bool is_upgrade_policy_Valid() const;

    OAIValidationCheck getValidationCheck() const;
    void setValidationCheck(const OAIValidationCheck &validation_check);
    bool is_validation_check_Set() const;
    bool is_validation_check_Valid() const;

    OAIVmwareVCenterConfig getVcenter() const;
    void setVcenter(const OAIVmwareVCenterConfig &vcenter);
    bool is_vcenter_Set() const;
    bool is_vcenter_Valid() const;

    bool isVmTrackingEnabled() const;
    void setVmTrackingEnabled(const bool &vm_tracking_enabled);
    bool is_vm_tracking_enabled_Set() const;
    bool is_vm_tracking_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_cluster_membership;
    bool m_admin_cluster_membership_isSet;
    bool m_admin_cluster_membership_isValid;

    QString m_admin_cluster_name;
    bool m_admin_cluster_name_isSet;
    bool m_admin_cluster_name_isValid;

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    OAIVmwareAAGConfig m_anti_affinity_groups;
    bool m_anti_affinity_groups_isSet;
    bool m_anti_affinity_groups_isValid;

    OAIAuthorization m_authorization;
    bool m_authorization_isSet;
    bool m_authorization_isValid;

    OAIVmwareAutoRepairConfig m_auto_repair_config;
    bool m_auto_repair_config_isSet;
    bool m_auto_repair_config_isValid;

    OAIBinaryAuthorization m_binary_authorization;
    bool m_binary_authorization_isSet;
    bool m_binary_authorization_isValid;

    OAIVmwareControlPlaneNodeConfig m_control_plane_node;
    bool m_control_plane_node_isSet;
    bool m_control_plane_node_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIVmwareDataplaneV2Config m_dataplane_v2;
    bool m_dataplane_v2_isSet;
    bool m_dataplane_v2_isValid;

    QString m_delete_time;
    bool m_delete_time_isSet;
    bool m_delete_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_disable_bundled_ingress;
    bool m_disable_bundled_ingress_isSet;
    bool m_disable_bundled_ingress_isValid;

    bool m_enable_control_plane_v2;
    bool m_enable_control_plane_v2_isSet;
    bool m_enable_control_plane_v2_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    OAIFleet m_fleet;
    bool m_fleet_isSet;
    bool m_fleet_isValid;

    OAIVmwareLoadBalancerConfig m_load_balancer;
    bool m_load_balancer_isSet;
    bool m_load_balancer_isValid;

    QString m_local_name;
    bool m_local_name_isSet;
    bool m_local_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIVmwareNetworkConfig m_network_config;
    bool m_network_config_isSet;
    bool m_network_config_isValid;

    QString m_on_prem_version;
    bool m_on_prem_version_isSet;
    bool m_on_prem_version_isValid;

    bool m_reconciling;
    bool m_reconciling_isSet;
    bool m_reconciling_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIVmwareStorageConfig m_storage;
    bool m_storage_isSet;
    bool m_storage_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIVmwareClusterUpgradePolicy m_upgrade_policy;
    bool m_upgrade_policy_isSet;
    bool m_upgrade_policy_isValid;

    OAIValidationCheck m_validation_check;
    bool m_validation_check_isSet;
    bool m_validation_check_isValid;

    OAIVmwareVCenterConfig m_vcenter;
    bool m_vcenter_isSet;
    bool m_vcenter_isValid;

    bool m_vm_tracking_enabled;
    bool m_vm_tracking_enabled_isSet;
    bool m_vm_tracking_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVmwareCluster)

#endif // OAIVmwareCluster_H
