/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBareMetalBgpLbConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBareMetalBgpLbConfig::OAIBareMetalBgpLbConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBareMetalBgpLbConfig::OAIBareMetalBgpLbConfig() {
    this->initializeModel();
}

OAIBareMetalBgpLbConfig::~OAIBareMetalBgpLbConfig() {}

void OAIBareMetalBgpLbConfig::initializeModel() {

    m_address_pools_isSet = false;
    m_address_pools_isValid = false;

    m_asn_isSet = false;
    m_asn_isValid = false;

    m_bgp_peer_configs_isSet = false;
    m_bgp_peer_configs_isValid = false;

    m_load_balancer_node_pool_config_isSet = false;
    m_load_balancer_node_pool_config_isValid = false;
}

void OAIBareMetalBgpLbConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBareMetalBgpLbConfig::fromJsonObject(QJsonObject json) {

    m_address_pools_isValid = ::OpenAPI::fromJsonValue(m_address_pools, json[QString("addressPools")]);
    m_address_pools_isSet = !json[QString("addressPools")].isNull() && m_address_pools_isValid;

    m_asn_isValid = ::OpenAPI::fromJsonValue(m_asn, json[QString("asn")]);
    m_asn_isSet = !json[QString("asn")].isNull() && m_asn_isValid;

    m_bgp_peer_configs_isValid = ::OpenAPI::fromJsonValue(m_bgp_peer_configs, json[QString("bgpPeerConfigs")]);
    m_bgp_peer_configs_isSet = !json[QString("bgpPeerConfigs")].isNull() && m_bgp_peer_configs_isValid;

    m_load_balancer_node_pool_config_isValid = ::OpenAPI::fromJsonValue(m_load_balancer_node_pool_config, json[QString("loadBalancerNodePoolConfig")]);
    m_load_balancer_node_pool_config_isSet = !json[QString("loadBalancerNodePoolConfig")].isNull() && m_load_balancer_node_pool_config_isValid;
}

QString OAIBareMetalBgpLbConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBareMetalBgpLbConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_address_pools.size() > 0) {
        obj.insert(QString("addressPools"), ::OpenAPI::toJsonValue(m_address_pools));
    }
    if (m_asn_isSet) {
        obj.insert(QString("asn"), ::OpenAPI::toJsonValue(m_asn));
    }
    if (m_bgp_peer_configs.size() > 0) {
        obj.insert(QString("bgpPeerConfigs"), ::OpenAPI::toJsonValue(m_bgp_peer_configs));
    }
    if (m_load_balancer_node_pool_config.isSet()) {
        obj.insert(QString("loadBalancerNodePoolConfig"), ::OpenAPI::toJsonValue(m_load_balancer_node_pool_config));
    }
    return obj;
}

QList<OAIBareMetalLoadBalancerAddressPool> OAIBareMetalBgpLbConfig::getAddressPools() const {
    return m_address_pools;
}
void OAIBareMetalBgpLbConfig::setAddressPools(const QList<OAIBareMetalLoadBalancerAddressPool> &address_pools) {
    m_address_pools = address_pools;
    m_address_pools_isSet = true;
}

bool OAIBareMetalBgpLbConfig::is_address_pools_Set() const{
    return m_address_pools_isSet;
}

bool OAIBareMetalBgpLbConfig::is_address_pools_Valid() const{
    return m_address_pools_isValid;
}

QString OAIBareMetalBgpLbConfig::getAsn() const {
    return m_asn;
}
void OAIBareMetalBgpLbConfig::setAsn(const QString &asn) {
    m_asn = asn;
    m_asn_isSet = true;
}

bool OAIBareMetalBgpLbConfig::is_asn_Set() const{
    return m_asn_isSet;
}

bool OAIBareMetalBgpLbConfig::is_asn_Valid() const{
    return m_asn_isValid;
}

QList<OAIBareMetalBgpPeerConfig> OAIBareMetalBgpLbConfig::getBgpPeerConfigs() const {
    return m_bgp_peer_configs;
}
void OAIBareMetalBgpLbConfig::setBgpPeerConfigs(const QList<OAIBareMetalBgpPeerConfig> &bgp_peer_configs) {
    m_bgp_peer_configs = bgp_peer_configs;
    m_bgp_peer_configs_isSet = true;
}

bool OAIBareMetalBgpLbConfig::is_bgp_peer_configs_Set() const{
    return m_bgp_peer_configs_isSet;
}

bool OAIBareMetalBgpLbConfig::is_bgp_peer_configs_Valid() const{
    return m_bgp_peer_configs_isValid;
}

OAIBareMetalLoadBalancerNodePoolConfig OAIBareMetalBgpLbConfig::getLoadBalancerNodePoolConfig() const {
    return m_load_balancer_node_pool_config;
}
void OAIBareMetalBgpLbConfig::setLoadBalancerNodePoolConfig(const OAIBareMetalLoadBalancerNodePoolConfig &load_balancer_node_pool_config) {
    m_load_balancer_node_pool_config = load_balancer_node_pool_config;
    m_load_balancer_node_pool_config_isSet = true;
}

bool OAIBareMetalBgpLbConfig::is_load_balancer_node_pool_config_Set() const{
    return m_load_balancer_node_pool_config_isSet;
}

bool OAIBareMetalBgpLbConfig::is_load_balancer_node_pool_config_Valid() const{
    return m_load_balancer_node_pool_config_isValid;
}

bool OAIBareMetalBgpLbConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_pools.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_asn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bgp_peer_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_load_balancer_node_pool_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBareMetalBgpLbConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
