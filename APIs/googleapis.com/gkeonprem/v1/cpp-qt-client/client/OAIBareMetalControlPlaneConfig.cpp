/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBareMetalControlPlaneConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBareMetalControlPlaneConfig::OAIBareMetalControlPlaneConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBareMetalControlPlaneConfig::OAIBareMetalControlPlaneConfig() {
    this->initializeModel();
}

OAIBareMetalControlPlaneConfig::~OAIBareMetalControlPlaneConfig() {}

void OAIBareMetalControlPlaneConfig::initializeModel() {

    m_api_server_args_isSet = false;
    m_api_server_args_isValid = false;

    m_control_plane_node_pool_config_isSet = false;
    m_control_plane_node_pool_config_isValid = false;
}

void OAIBareMetalControlPlaneConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBareMetalControlPlaneConfig::fromJsonObject(QJsonObject json) {

    m_api_server_args_isValid = ::OpenAPI::fromJsonValue(m_api_server_args, json[QString("apiServerArgs")]);
    m_api_server_args_isSet = !json[QString("apiServerArgs")].isNull() && m_api_server_args_isValid;

    m_control_plane_node_pool_config_isValid = ::OpenAPI::fromJsonValue(m_control_plane_node_pool_config, json[QString("controlPlaneNodePoolConfig")]);
    m_control_plane_node_pool_config_isSet = !json[QString("controlPlaneNodePoolConfig")].isNull() && m_control_plane_node_pool_config_isValid;
}

QString OAIBareMetalControlPlaneConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBareMetalControlPlaneConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_api_server_args.size() > 0) {
        obj.insert(QString("apiServerArgs"), ::OpenAPI::toJsonValue(m_api_server_args));
    }
    if (m_control_plane_node_pool_config.isSet()) {
        obj.insert(QString("controlPlaneNodePoolConfig"), ::OpenAPI::toJsonValue(m_control_plane_node_pool_config));
    }
    return obj;
}

QList<OAIBareMetalApiServerArgument> OAIBareMetalControlPlaneConfig::getApiServerArgs() const {
    return m_api_server_args;
}
void OAIBareMetalControlPlaneConfig::setApiServerArgs(const QList<OAIBareMetalApiServerArgument> &api_server_args) {
    m_api_server_args = api_server_args;
    m_api_server_args_isSet = true;
}

bool OAIBareMetalControlPlaneConfig::is_api_server_args_Set() const{
    return m_api_server_args_isSet;
}

bool OAIBareMetalControlPlaneConfig::is_api_server_args_Valid() const{
    return m_api_server_args_isValid;
}

OAIBareMetalControlPlaneNodePoolConfig OAIBareMetalControlPlaneConfig::getControlPlaneNodePoolConfig() const {
    return m_control_plane_node_pool_config;
}
void OAIBareMetalControlPlaneConfig::setControlPlaneNodePoolConfig(const OAIBareMetalControlPlaneNodePoolConfig &control_plane_node_pool_config) {
    m_control_plane_node_pool_config = control_plane_node_pool_config;
    m_control_plane_node_pool_config_isSet = true;
}

bool OAIBareMetalControlPlaneConfig::is_control_plane_node_pool_config_Set() const{
    return m_control_plane_node_pool_config_isSet;
}

bool OAIBareMetalControlPlaneConfig::is_control_plane_node_pool_config_Valid() const{
    return m_control_plane_node_pool_config_isValid;
}

bool OAIBareMetalControlPlaneConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_server_args.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_control_plane_node_pool_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBareMetalControlPlaneConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
