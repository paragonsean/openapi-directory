/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVmwareNodeConfig.h
 *
 * Parameters that describe the configuration of all nodes within a given node pool.
 */

#ifndef OAIVmwareNodeConfig_H
#define OAIVmwareNodeConfig_H

#include <QJsonObject>

#include "OAINodeTaint.h"
#include "OAIVmwareVsphereConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINodeTaint;
class OAIVmwareVsphereConfig;

class OAIVmwareNodeConfig : public OAIObject {
public:
    OAIVmwareNodeConfig();
    OAIVmwareNodeConfig(QString json);
    ~OAIVmwareNodeConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBootDiskSizeGb() const;
    void setBootDiskSizeGb(const QString &boot_disk_size_gb);
    bool is_boot_disk_size_gb_Set() const;
    bool is_boot_disk_size_gb_Valid() const;

    QString getCpus() const;
    void setCpus(const QString &cpus);
    bool is_cpus_Set() const;
    bool is_cpus_Valid() const;

    bool isEnableLoadBalancer() const;
    void setEnableLoadBalancer(const bool &enable_load_balancer);
    bool is_enable_load_balancer_Set() const;
    bool is_enable_load_balancer_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getImageType() const;
    void setImageType(const QString &image_type);
    bool is_image_type_Set() const;
    bool is_image_type_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getMemoryMb() const;
    void setMemoryMb(const QString &memory_mb);
    bool is_memory_mb_Set() const;
    bool is_memory_mb_Valid() const;

    QString getReplicas() const;
    void setReplicas(const QString &replicas);
    bool is_replicas_Set() const;
    bool is_replicas_Valid() const;

    QList<OAINodeTaint> getTaints() const;
    void setTaints(const QList<OAINodeTaint> &taints);
    bool is_taints_Set() const;
    bool is_taints_Valid() const;

    OAIVmwareVsphereConfig getVsphereConfig() const;
    void setVsphereConfig(const OAIVmwareVsphereConfig &vsphere_config);
    bool is_vsphere_config_Set() const;
    bool is_vsphere_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_boot_disk_size_gb;
    bool m_boot_disk_size_gb_isSet;
    bool m_boot_disk_size_gb_isValid;

    QString m_cpus;
    bool m_cpus_isSet;
    bool m_cpus_isValid;

    bool m_enable_load_balancer;
    bool m_enable_load_balancer_isSet;
    bool m_enable_load_balancer_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_image_type;
    bool m_image_type_isSet;
    bool m_image_type_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_memory_mb;
    bool m_memory_mb_isSet;
    bool m_memory_mb_isValid;

    QString m_replicas;
    bool m_replicas_isSet;
    bool m_replicas_isValid;

    QList<OAINodeTaint> m_taints;
    bool m_taints_isSet;
    bool m_taints_isValid;

    OAIVmwareVsphereConfig m_vsphere_config;
    bool m_vsphere_config_isSet;
    bool m_vsphere_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVmwareNodeConfig)

#endif // OAIVmwareNodeConfig_H
