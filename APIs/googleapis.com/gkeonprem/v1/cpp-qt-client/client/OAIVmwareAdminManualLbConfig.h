/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVmwareAdminManualLbConfig.h
 *
 * 
 */

#ifndef OAIVmwareAdminManualLbConfig_H
#define OAIVmwareAdminManualLbConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVmwareAdminManualLbConfig : public OAIObject {
public:
    OAIVmwareAdminManualLbConfig();
    OAIVmwareAdminManualLbConfig(QString json);
    ~OAIVmwareAdminManualLbConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAddonsNodePort() const;
    void setAddonsNodePort(const qint32 &addons_node_port);
    bool is_addons_node_port_Set() const;
    bool is_addons_node_port_Valid() const;

    qint32 getControlPlaneNodePort() const;
    void setControlPlaneNodePort(const qint32 &control_plane_node_port);
    bool is_control_plane_node_port_Set() const;
    bool is_control_plane_node_port_Valid() const;

    qint32 getIngressHttpNodePort() const;
    void setIngressHttpNodePort(const qint32 &ingress_http_node_port);
    bool is_ingress_http_node_port_Set() const;
    bool is_ingress_http_node_port_Valid() const;

    qint32 getIngressHttpsNodePort() const;
    void setIngressHttpsNodePort(const qint32 &ingress_https_node_port);
    bool is_ingress_https_node_port_Set() const;
    bool is_ingress_https_node_port_Valid() const;

    qint32 getKonnectivityServerNodePort() const;
    void setKonnectivityServerNodePort(const qint32 &konnectivity_server_node_port);
    bool is_konnectivity_server_node_port_Set() const;
    bool is_konnectivity_server_node_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_addons_node_port;
    bool m_addons_node_port_isSet;
    bool m_addons_node_port_isValid;

    qint32 m_control_plane_node_port;
    bool m_control_plane_node_port_isSet;
    bool m_control_plane_node_port_isValid;

    qint32 m_ingress_http_node_port;
    bool m_ingress_http_node_port_isSet;
    bool m_ingress_http_node_port_isValid;

    qint32 m_ingress_https_node_port;
    bool m_ingress_https_node_port_isSet;
    bool m_ingress_https_node_port_isValid;

    qint32 m_konnectivity_server_node_port;
    bool m_konnectivity_server_node_port_isSet;
    bool m_konnectivity_server_node_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVmwareAdminManualLbConfig)

#endif // OAIVmwareAdminManualLbConfig_H
