/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVmwareControlPlaneV2Config.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVmwareControlPlaneV2Config::OAIVmwareControlPlaneV2Config(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVmwareControlPlaneV2Config::OAIVmwareControlPlaneV2Config() {
    this->initializeModel();
}

OAIVmwareControlPlaneV2Config::~OAIVmwareControlPlaneV2Config() {}

void OAIVmwareControlPlaneV2Config::initializeModel() {

    m_control_plane_ip_block_isSet = false;
    m_control_plane_ip_block_isValid = false;
}

void OAIVmwareControlPlaneV2Config::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVmwareControlPlaneV2Config::fromJsonObject(QJsonObject json) {

    m_control_plane_ip_block_isValid = ::OpenAPI::fromJsonValue(m_control_plane_ip_block, json[QString("controlPlaneIpBlock")]);
    m_control_plane_ip_block_isSet = !json[QString("controlPlaneIpBlock")].isNull() && m_control_plane_ip_block_isValid;
}

QString OAIVmwareControlPlaneV2Config::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVmwareControlPlaneV2Config::asJsonObject() const {
    QJsonObject obj;
    if (m_control_plane_ip_block.isSet()) {
        obj.insert(QString("controlPlaneIpBlock"), ::OpenAPI::toJsonValue(m_control_plane_ip_block));
    }
    return obj;
}

OAIVmwareIpBlock OAIVmwareControlPlaneV2Config::getControlPlaneIpBlock() const {
    return m_control_plane_ip_block;
}
void OAIVmwareControlPlaneV2Config::setControlPlaneIpBlock(const OAIVmwareIpBlock &control_plane_ip_block) {
    m_control_plane_ip_block = control_plane_ip_block;
    m_control_plane_ip_block_isSet = true;
}

bool OAIVmwareControlPlaneV2Config::is_control_plane_ip_block_Set() const{
    return m_control_plane_ip_block_isSet;
}

bool OAIVmwareControlPlaneV2Config::is_control_plane_ip_block_Valid() const{
    return m_control_plane_ip_block_isValid;
}

bool OAIVmwareControlPlaneV2Config::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_control_plane_ip_block.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVmwareControlPlaneV2Config::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
