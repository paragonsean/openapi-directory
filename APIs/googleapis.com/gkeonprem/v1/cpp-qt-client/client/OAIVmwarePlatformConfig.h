/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVmwarePlatformConfig.h
 *
 * VmwarePlatformConfig represents configuration for the VMware platform.
 */

#ifndef OAIVmwarePlatformConfig_H
#define OAIVmwarePlatformConfig_H

#include <QJsonObject>

#include "OAIResourceStatus.h"
#include "OAIVmwareBundleConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVmwareBundleConfig;
class OAIResourceStatus;

class OAIVmwarePlatformConfig : public OAIObject {
public:
    OAIVmwarePlatformConfig();
    OAIVmwarePlatformConfig(QString json);
    ~OAIVmwarePlatformConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIVmwareBundleConfig> getBundles() const;
    void setBundles(const QList<OAIVmwareBundleConfig> &bundles);
    bool is_bundles_Set() const;
    bool is_bundles_Valid() const;

    QString getPlatformVersion() const;
    void setPlatformVersion(const QString &platform_version);
    bool is_platform_version_Set() const;
    bool is_platform_version_Valid() const;

    QString getRequiredPlatformVersion() const;
    void setRequiredPlatformVersion(const QString &required_platform_version);
    bool is_required_platform_version_Set() const;
    bool is_required_platform_version_Valid() const;

    OAIResourceStatus getStatus() const;
    void setStatus(const OAIResourceStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIVmwareBundleConfig> m_bundles;
    bool m_bundles_isSet;
    bool m_bundles_isValid;

    QString m_platform_version;
    bool m_platform_version_isSet;
    bool m_platform_version_isValid;

    QString m_required_platform_version;
    bool m_required_platform_version_isSet;
    bool m_required_platform_version_isValid;

    OAIResourceStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVmwarePlatformConfig)

#endif // OAIVmwarePlatformConfig_H
