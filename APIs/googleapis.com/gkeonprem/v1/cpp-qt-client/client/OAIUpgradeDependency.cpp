/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpgradeDependency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpgradeDependency::OAIUpgradeDependency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpgradeDependency::OAIUpgradeDependency() {
    this->initializeModel();
}

OAIUpgradeDependency::~OAIUpgradeDependency() {}

void OAIUpgradeDependency::initializeModel() {

    m_current_version_isSet = false;
    m_current_version_isValid = false;

    m_membership_isSet = false;
    m_membership_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_target_version_isSet = false;
    m_target_version_isValid = false;
}

void OAIUpgradeDependency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpgradeDependency::fromJsonObject(QJsonObject json) {

    m_current_version_isValid = ::OpenAPI::fromJsonValue(m_current_version, json[QString("currentVersion")]);
    m_current_version_isSet = !json[QString("currentVersion")].isNull() && m_current_version_isValid;

    m_membership_isValid = ::OpenAPI::fromJsonValue(m_membership, json[QString("membership")]);
    m_membership_isSet = !json[QString("membership")].isNull() && m_membership_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_target_version_isValid = ::OpenAPI::fromJsonValue(m_target_version, json[QString("targetVersion")]);
    m_target_version_isSet = !json[QString("targetVersion")].isNull() && m_target_version_isValid;
}

QString OAIUpgradeDependency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpgradeDependency::asJsonObject() const {
    QJsonObject obj;
    if (m_current_version_isSet) {
        obj.insert(QString("currentVersion"), ::OpenAPI::toJsonValue(m_current_version));
    }
    if (m_membership_isSet) {
        obj.insert(QString("membership"), ::OpenAPI::toJsonValue(m_membership));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_target_version_isSet) {
        obj.insert(QString("targetVersion"), ::OpenAPI::toJsonValue(m_target_version));
    }
    return obj;
}

QString OAIUpgradeDependency::getCurrentVersion() const {
    return m_current_version;
}
void OAIUpgradeDependency::setCurrentVersion(const QString &current_version) {
    m_current_version = current_version;
    m_current_version_isSet = true;
}

bool OAIUpgradeDependency::is_current_version_Set() const{
    return m_current_version_isSet;
}

bool OAIUpgradeDependency::is_current_version_Valid() const{
    return m_current_version_isValid;
}

QString OAIUpgradeDependency::getMembership() const {
    return m_membership;
}
void OAIUpgradeDependency::setMembership(const QString &membership) {
    m_membership = membership;
    m_membership_isSet = true;
}

bool OAIUpgradeDependency::is_membership_Set() const{
    return m_membership_isSet;
}

bool OAIUpgradeDependency::is_membership_Valid() const{
    return m_membership_isValid;
}

QString OAIUpgradeDependency::getResourceName() const {
    return m_resource_name;
}
void OAIUpgradeDependency::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIUpgradeDependency::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIUpgradeDependency::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAIUpgradeDependency::getTargetVersion() const {
    return m_target_version;
}
void OAIUpgradeDependency::setTargetVersion(const QString &target_version) {
    m_target_version = target_version;
    m_target_version_isSet = true;
}

bool OAIUpgradeDependency::is_target_version_Set() const{
    return m_target_version_isSet;
}

bool OAIUpgradeDependency::is_target_version_Valid() const{
    return m_target_version_isValid;
}

bool OAIUpgradeDependency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpgradeDependency::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
