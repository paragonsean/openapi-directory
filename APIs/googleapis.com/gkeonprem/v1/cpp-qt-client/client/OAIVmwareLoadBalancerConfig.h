/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVmwareLoadBalancerConfig.h
 *
 * Specifies the locad balancer config for the VMware user cluster.
 */

#ifndef OAIVmwareLoadBalancerConfig_H
#define OAIVmwareLoadBalancerConfig_H

#include <QJsonObject>

#include "OAIVmwareF5BigIpConfig.h"
#include "OAIVmwareManualLbConfig.h"
#include "OAIVmwareMetalLbConfig.h"
#include "OAIVmwareSeesawConfig.h"
#include "OAIVmwareVipConfig.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVmwareF5BigIpConfig;
class OAIVmwareManualLbConfig;
class OAIVmwareMetalLbConfig;
class OAIVmwareSeesawConfig;
class OAIVmwareVipConfig;

class OAIVmwareLoadBalancerConfig : public OAIObject {
public:
    OAIVmwareLoadBalancerConfig();
    OAIVmwareLoadBalancerConfig(QString json);
    ~OAIVmwareLoadBalancerConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVmwareF5BigIpConfig getF5Config() const;
    void setF5Config(const OAIVmwareF5BigIpConfig &f5_config);
    bool is_f5_config_Set() const;
    bool is_f5_config_Valid() const;

    OAIVmwareManualLbConfig getManualLbConfig() const;
    void setManualLbConfig(const OAIVmwareManualLbConfig &manual_lb_config);
    bool is_manual_lb_config_Set() const;
    bool is_manual_lb_config_Valid() const;

    OAIVmwareMetalLbConfig getMetalLbConfig() const;
    void setMetalLbConfig(const OAIVmwareMetalLbConfig &metal_lb_config);
    bool is_metal_lb_config_Set() const;
    bool is_metal_lb_config_Valid() const;

    OAIVmwareSeesawConfig getSeesawConfig() const;
    void setSeesawConfig(const OAIVmwareSeesawConfig &seesaw_config);
    bool is_seesaw_config_Set() const;
    bool is_seesaw_config_Valid() const;

    OAIVmwareVipConfig getVipConfig() const;
    void setVipConfig(const OAIVmwareVipConfig &vip_config);
    bool is_vip_config_Set() const;
    bool is_vip_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVmwareF5BigIpConfig m_f5_config;
    bool m_f5_config_isSet;
    bool m_f5_config_isValid;

    OAIVmwareManualLbConfig m_manual_lb_config;
    bool m_manual_lb_config_isSet;
    bool m_manual_lb_config_isValid;

    OAIVmwareMetalLbConfig m_metal_lb_config;
    bool m_metal_lb_config_isSet;
    bool m_metal_lb_config_isValid;

    OAIVmwareSeesawConfig m_seesaw_config;
    bool m_seesaw_config_isSet;
    bool m_seesaw_config_isValid;

    OAIVmwareVipConfig m_vip_config;
    bool m_vip_config_isSet;
    bool m_vip_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVmwareLoadBalancerConfig)

#endif // OAIVmwareLoadBalancerConfig_H
