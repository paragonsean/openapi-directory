/**
 * Anthos On-Prem API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVmwareAdminF5BigIpConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVmwareAdminF5BigIpConfig::OAIVmwareAdminF5BigIpConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVmwareAdminF5BigIpConfig::OAIVmwareAdminF5BigIpConfig() {
    this->initializeModel();
}

OAIVmwareAdminF5BigIpConfig::~OAIVmwareAdminF5BigIpConfig() {}

void OAIVmwareAdminF5BigIpConfig::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_partition_isSet = false;
    m_partition_isValid = false;

    m_snat_pool_isSet = false;
    m_snat_pool_isValid = false;
}

void OAIVmwareAdminF5BigIpConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVmwareAdminF5BigIpConfig::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_partition_isValid = ::OpenAPI::fromJsonValue(m_partition, json[QString("partition")]);
    m_partition_isSet = !json[QString("partition")].isNull() && m_partition_isValid;

    m_snat_pool_isValid = ::OpenAPI::fromJsonValue(m_snat_pool, json[QString("snatPool")]);
    m_snat_pool_isSet = !json[QString("snatPool")].isNull() && m_snat_pool_isValid;
}

QString OAIVmwareAdminF5BigIpConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVmwareAdminF5BigIpConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_partition_isSet) {
        obj.insert(QString("partition"), ::OpenAPI::toJsonValue(m_partition));
    }
    if (m_snat_pool_isSet) {
        obj.insert(QString("snatPool"), ::OpenAPI::toJsonValue(m_snat_pool));
    }
    return obj;
}

QString OAIVmwareAdminF5BigIpConfig::getAddress() const {
    return m_address;
}
void OAIVmwareAdminF5BigIpConfig::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIVmwareAdminF5BigIpConfig::is_address_Set() const{
    return m_address_isSet;
}

bool OAIVmwareAdminF5BigIpConfig::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIVmwareAdminF5BigIpConfig::getPartition() const {
    return m_partition;
}
void OAIVmwareAdminF5BigIpConfig::setPartition(const QString &partition) {
    m_partition = partition;
    m_partition_isSet = true;
}

bool OAIVmwareAdminF5BigIpConfig::is_partition_Set() const{
    return m_partition_isSet;
}

bool OAIVmwareAdminF5BigIpConfig::is_partition_Valid() const{
    return m_partition_isValid;
}

QString OAIVmwareAdminF5BigIpConfig::getSnatPool() const {
    return m_snat_pool;
}
void OAIVmwareAdminF5BigIpConfig::setSnatPool(const QString &snat_pool) {
    m_snat_pool = snat_pool;
    m_snat_pool_isSet = true;
}

bool OAIVmwareAdminF5BigIpConfig::is_snat_pool_Set() const{
    return m_snat_pool_isSet;
}

bool OAIVmwareAdminF5BigIpConfig::is_snat_pool_Valid() const{
    return m_snat_pool_isValid;
}

bool OAIVmwareAdminF5BigIpConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_snat_pool_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVmwareAdminF5BigIpConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
