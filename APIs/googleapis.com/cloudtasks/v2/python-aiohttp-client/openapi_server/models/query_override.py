# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _query_params: str=None):
        """QueryOverride - a model defined in OpenAPI

        :param _query_params: The _query_params of this QueryOverride.
        """
        self.openapi_types = {
            '_query_params': str
        }

        self.attribute_map = {
            '_query_params': 'queryParams'
        }

        self.__query_params = _query_params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryOverride of this QueryOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _query_params(self):
        """Gets the _query_params of this QueryOverride.

        The query parameters (e.g., qparam1=123&qparam2=456). Default is an empty string.

        :return: The _query_params of this QueryOverride.
        :rtype: str
        """
        return self.__query_params

    @_query_params.setter
    def _query_params(self, _query_params):
        """Sets the _query_params of this QueryOverride.

        The query parameters (e.g., qparam1=123&qparam2=456). Default is an empty string.

        :param _query_params: The _query_params of this QueryOverride.
        :type _query_params: str
        """

        self.__query_params = _query_params
