# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OidcToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audience: str=None, service_account_email: str=None):
        """OidcToken - a model defined in OpenAPI

        :param audience: The audience of this OidcToken.
        :param service_account_email: The service_account_email of this OidcToken.
        """
        self.openapi_types = {
            'audience': str,
            'service_account_email': str
        }

        self.attribute_map = {
            'audience': 'audience',
            'service_account_email': 'serviceAccountEmail'
        }

        self._audience = audience
        self._service_account_email = service_account_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OidcToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OidcToken of this OidcToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audience(self):
        """Gets the audience of this OidcToken.

        Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.

        :return: The audience of this OidcToken.
        :rtype: str
        """
        return self._audience

    @audience.setter
    def audience(self, audience):
        """Sets the audience of this OidcToken.

        Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.

        :param audience: The audience of this OidcToken.
        :type audience: str
        """

        self._audience = audience

    @property
    def service_account_email(self):
        """Gets the service_account_email of this OidcToken.

        [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OIDC token. The service account must be within the same project as the queue. The caller must have iam.serviceAccounts.actAs permission for the service account.

        :return: The service_account_email of this OidcToken.
        :rtype: str
        """
        return self._service_account_email

    @service_account_email.setter
    def service_account_email(self, service_account_email):
        """Sets the service_account_email of this OidcToken.

        [Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OIDC token. The service account must be within the same project as the queue. The caller must have iam.serviceAccounts.actAs permission for the service account.

        :param service_account_email: The service_account_email of this OidcToken.
        :type service_account_email: str
        """

        self._service_account_email = service_account_email
