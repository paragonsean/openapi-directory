/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppEngineRouting from './AppEngineRouting';
import HttpTarget from './HttpTarget';
import RateLimits from './RateLimits';
import RetryConfig from './RetryConfig';
import StackdriverLoggingConfig from './StackdriverLoggingConfig';

/**
 * The Queue model module.
 * @module model/Queue
 * @version v2
 */
class Queue {
    /**
     * Constructs a new <code>Queue</code>.
     * A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, queue types, and others.
     * @alias module:model/Queue
     */
    constructor() { 
        
        Queue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Queue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Queue} obj Optional instance to populate.
     * @return {module:model/Queue} The populated <code>Queue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Queue();

            if (data.hasOwnProperty('appEngineRoutingOverride')) {
                obj['appEngineRoutingOverride'] = AppEngineRouting.constructFromObject(data['appEngineRoutingOverride']);
            }
            if (data.hasOwnProperty('httpTarget')) {
                obj['httpTarget'] = HttpTarget.constructFromObject(data['httpTarget']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('purgeTime')) {
                obj['purgeTime'] = ApiClient.convertToType(data['purgeTime'], 'String');
            }
            if (data.hasOwnProperty('rateLimits')) {
                obj['rateLimits'] = RateLimits.constructFromObject(data['rateLimits']);
            }
            if (data.hasOwnProperty('retryConfig')) {
                obj['retryConfig'] = RetryConfig.constructFromObject(data['retryConfig']);
            }
            if (data.hasOwnProperty('stackdriverLoggingConfig')) {
                obj['stackdriverLoggingConfig'] = StackdriverLoggingConfig.constructFromObject(data['stackdriverLoggingConfig']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Queue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Queue</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appEngineRoutingOverride`
        if (data['appEngineRoutingOverride']) { // data not null
          AppEngineRouting.validateJSON(data['appEngineRoutingOverride']);
        }
        // validate the optional field `httpTarget`
        if (data['httpTarget']) { // data not null
          HttpTarget.validateJSON(data['httpTarget']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['purgeTime'] && !(typeof data['purgeTime'] === 'string' || data['purgeTime'] instanceof String)) {
            throw new Error("Expected the field `purgeTime` to be a primitive type in the JSON string but got " + data['purgeTime']);
        }
        // validate the optional field `rateLimits`
        if (data['rateLimits']) { // data not null
          RateLimits.validateJSON(data['rateLimits']);
        }
        // validate the optional field `retryConfig`
        if (data['retryConfig']) { // data not null
          RetryConfig.validateJSON(data['retryConfig']);
        }
        // validate the optional field `stackdriverLoggingConfig`
        if (data['stackdriverLoggingConfig']) { // data not null
          StackdriverLoggingConfig.validateJSON(data['stackdriverLoggingConfig']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppEngineRouting} appEngineRoutingOverride
 */
Queue.prototype['appEngineRoutingOverride'] = undefined;

/**
 * @member {module:model/HttpTarget} httpTarget
 */
Queue.prototype['httpTarget'] = undefined;

/**
 * Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.
 * @member {String} name
 */
Queue.prototype['name'] = undefined;

/**
 * Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.
 * @member {String} purgeTime
 */
Queue.prototype['purgeTime'] = undefined;

/**
 * @member {module:model/RateLimits} rateLimits
 */
Queue.prototype['rateLimits'] = undefined;

/**
 * @member {module:model/RetryConfig} retryConfig
 */
Queue.prototype['retryConfig'] = undefined;

/**
 * @member {module:model/StackdriverLoggingConfig} stackdriverLoggingConfig
 */
Queue.prototype['stackdriverLoggingConfig'] = undefined;

/**
 * Output only. The state of the queue. `state` can only be changed by calling PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.
 * @member {module:model/Queue.StateEnum} state
 */
Queue.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Queue['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "PAUSED"
     * @const
     */
    "PAUSED": "PAUSED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED"
};



export default Queue;

