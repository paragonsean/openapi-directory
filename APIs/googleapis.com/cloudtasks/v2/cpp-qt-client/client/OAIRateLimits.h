/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRateLimits.h
 *
 * Rate limits. This message determines the maximum rate that tasks can be dispatched by a queue, regardless of whether the dispatch is a first task attempt or a retry. Note: The debugging command, RunTask, will run a task even if the queue has reached its RateLimits.
 */

#ifndef OAIRateLimits_H
#define OAIRateLimits_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRateLimits : public OAIObject {
public:
    OAIRateLimits();
    OAIRateLimits(QString json);
    ~OAIRateLimits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxBurstSize() const;
    void setMaxBurstSize(const qint32 &max_burst_size);
    bool is_max_burst_size_Set() const;
    bool is_max_burst_size_Valid() const;

    qint32 getMaxConcurrentDispatches() const;
    void setMaxConcurrentDispatches(const qint32 &max_concurrent_dispatches);
    bool is_max_concurrent_dispatches_Set() const;
    bool is_max_concurrent_dispatches_Valid() const;

    double getMaxDispatchesPerSecond() const;
    void setMaxDispatchesPerSecond(const double &max_dispatches_per_second);
    bool is_max_dispatches_per_second_Set() const;
    bool is_max_dispatches_per_second_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_burst_size;
    bool m_max_burst_size_isSet;
    bool m_max_burst_size_isValid;

    qint32 m_max_concurrent_dispatches;
    bool m_max_concurrent_dispatches_isSet;
    bool m_max_concurrent_dispatches_isValid;

    double m_max_dispatches_per_second;
    bool m_max_dispatches_per_second_isSet;
    bool m_max_dispatches_per_second_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRateLimits)

#endif // OAIRateLimits_H
