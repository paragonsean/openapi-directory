/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpTarget.h
 *
 * HTTP target. When specified as a Queue, all the tasks with [HttpRequest] will be overridden according to the target.
 */

#ifndef OAIHttpTarget_H
#define OAIHttpTarget_H

#include <QJsonObject>

#include "OAIHeaderOverride.h"
#include "OAIOAuthToken.h"
#include "OAIOidcToken.h"
#include "OAIUriOverride.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHeaderOverride;
class OAIOAuthToken;
class OAIOidcToken;
class OAIUriOverride;

class OAIHttpTarget : public OAIObject {
public:
    OAIHttpTarget();
    OAIHttpTarget(QString json);
    ~OAIHttpTarget() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIHeaderOverride> getHeaderOverrides() const;
    void setHeaderOverrides(const QList<OAIHeaderOverride> &header_overrides);
    bool is_header_overrides_Set() const;
    bool is_header_overrides_Valid() const;

    QString getHttpMethod() const;
    void setHttpMethod(const QString &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    OAIOAuthToken getOauthToken() const;
    void setOauthToken(const OAIOAuthToken &oauth_token);
    bool is_oauth_token_Set() const;
    bool is_oauth_token_Valid() const;

    OAIOidcToken getOidcToken() const;
    void setOidcToken(const OAIOidcToken &oidc_token);
    bool is_oidc_token_Set() const;
    bool is_oidc_token_Valid() const;

    OAIUriOverride getUriOverride() const;
    void setUriOverride(const OAIUriOverride &uri_override);
    bool is_uri_override_Set() const;
    bool is_uri_override_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIHeaderOverride> m_header_overrides;
    bool m_header_overrides_isSet;
    bool m_header_overrides_isValid;

    QString m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    OAIOAuthToken m_oauth_token;
    bool m_oauth_token_isSet;
    bool m_oauth_token_isValid;

    OAIOidcToken m_oidc_token;
    bool m_oidc_token_isSet;
    bool m_oidc_token_isValid;

    OAIUriOverride m_uri_override;
    bool m_uri_override_isSet;
    bool m_uri_override_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpTarget)

#endif // OAIHttpTarget_H
