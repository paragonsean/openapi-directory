/*
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AttemptStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Status of the task.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:40:06.175700-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskStatus {
  public static final String SERIALIZED_NAME_ATTEMPT_DISPATCH_COUNT = "attemptDispatchCount";
  @SerializedName(SERIALIZED_NAME_ATTEMPT_DISPATCH_COUNT)
  private Integer attemptDispatchCount;

  public static final String SERIALIZED_NAME_ATTEMPT_RESPONSE_COUNT = "attemptResponseCount";
  @SerializedName(SERIALIZED_NAME_ATTEMPT_RESPONSE_COUNT)
  private Integer attemptResponseCount;

  public static final String SERIALIZED_NAME_FIRST_ATTEMPT_STATUS = "firstAttemptStatus";
  @SerializedName(SERIALIZED_NAME_FIRST_ATTEMPT_STATUS)
  private AttemptStatus firstAttemptStatus;

  public static final String SERIALIZED_NAME_LAST_ATTEMPT_STATUS = "lastAttemptStatus";
  @SerializedName(SERIALIZED_NAME_LAST_ATTEMPT_STATUS)
  private AttemptStatus lastAttemptStatus;

  public TaskStatus() {
  }

  public TaskStatus attemptDispatchCount(Integer attemptDispatchCount) {
    this.attemptDispatchCount = attemptDispatchCount;
    return this;
  }

  /**
   * Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven&#39;t received a response.
   * @return attemptDispatchCount
   */
  @javax.annotation.Nullable
  public Integer getAttemptDispatchCount() {
    return attemptDispatchCount;
  }

  public void setAttemptDispatchCount(Integer attemptDispatchCount) {
    this.attemptDispatchCount = attemptDispatchCount;
  }


  public TaskStatus attemptResponseCount(Integer attemptResponseCount) {
    this.attemptResponseCount = attemptResponseCount;
    return this;
  }

  /**
   * Output only. The number of attempts which have received a response. This field is not calculated for pull tasks.
   * @return attemptResponseCount
   */
  @javax.annotation.Nullable
  public Integer getAttemptResponseCount() {
    return attemptResponseCount;
  }

  public void setAttemptResponseCount(Integer attemptResponseCount) {
    this.attemptResponseCount = attemptResponseCount;
  }


  public TaskStatus firstAttemptStatus(AttemptStatus firstAttemptStatus) {
    this.firstAttemptStatus = firstAttemptStatus;
    return this;
  }

  /**
   * Get firstAttemptStatus
   * @return firstAttemptStatus
   */
  @javax.annotation.Nullable
  public AttemptStatus getFirstAttemptStatus() {
    return firstAttemptStatus;
  }

  public void setFirstAttemptStatus(AttemptStatus firstAttemptStatus) {
    this.firstAttemptStatus = firstAttemptStatus;
  }


  public TaskStatus lastAttemptStatus(AttemptStatus lastAttemptStatus) {
    this.lastAttemptStatus = lastAttemptStatus;
    return this;
  }

  /**
   * Get lastAttemptStatus
   * @return lastAttemptStatus
   */
  @javax.annotation.Nullable
  public AttemptStatus getLastAttemptStatus() {
    return lastAttemptStatus;
  }

  public void setLastAttemptStatus(AttemptStatus lastAttemptStatus) {
    this.lastAttemptStatus = lastAttemptStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskStatus taskStatus = (TaskStatus) o;
    return Objects.equals(this.attemptDispatchCount, taskStatus.attemptDispatchCount) &&
        Objects.equals(this.attemptResponseCount, taskStatus.attemptResponseCount) &&
        Objects.equals(this.firstAttemptStatus, taskStatus.firstAttemptStatus) &&
        Objects.equals(this.lastAttemptStatus, taskStatus.lastAttemptStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attemptDispatchCount, attemptResponseCount, firstAttemptStatus, lastAttemptStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskStatus {\n");
    sb.append("    attemptDispatchCount: ").append(toIndentedString(attemptDispatchCount)).append("\n");
    sb.append("    attemptResponseCount: ").append(toIndentedString(attemptResponseCount)).append("\n");
    sb.append("    firstAttemptStatus: ").append(toIndentedString(firstAttemptStatus)).append("\n");
    sb.append("    lastAttemptStatus: ").append(toIndentedString(lastAttemptStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attemptDispatchCount");
    openapiFields.add("attemptResponseCount");
    openapiFields.add("firstAttemptStatus");
    openapiFields.add("lastAttemptStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskStatus is not found in the empty JSON string", TaskStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `firstAttemptStatus`
      if (jsonObj.get("firstAttemptStatus") != null && !jsonObj.get("firstAttemptStatus").isJsonNull()) {
        AttemptStatus.validateJsonElement(jsonObj.get("firstAttemptStatus"));
      }
      // validate the optional field `lastAttemptStatus`
      if (jsonObj.get("lastAttemptStatus") != null && !jsonObj.get("lastAttemptStatus").isJsonNull()) {
        AttemptStatus.validateJsonElement(jsonObj.get("lastAttemptStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskStatus>() {
           @Override
           public void write(JsonWriter out, TaskStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskStatus
   * @throws IOException if the JSON string is invalid with respect to TaskStatus
   */
  public static TaskStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskStatus.class);
  }

  /**
   * Convert an instance of TaskStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

