# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RateLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_burst_size: int=None, max_concurrent_tasks: int=None, max_tasks_dispatched_per_second: float=None):
        """RateLimits - a model defined in OpenAPI

        :param max_burst_size: The max_burst_size of this RateLimits.
        :param max_concurrent_tasks: The max_concurrent_tasks of this RateLimits.
        :param max_tasks_dispatched_per_second: The max_tasks_dispatched_per_second of this RateLimits.
        """
        self.openapi_types = {
            'max_burst_size': int,
            'max_concurrent_tasks': int,
            'max_tasks_dispatched_per_second': float
        }

        self.attribute_map = {
            'max_burst_size': 'maxBurstSize',
            'max_concurrent_tasks': 'maxConcurrentTasks',
            'max_tasks_dispatched_per_second': 'maxTasksDispatchedPerSecond'
        }

        self._max_burst_size = max_burst_size
        self._max_concurrent_tasks = max_concurrent_tasks
        self._max_tasks_dispatched_per_second = max_tasks_dispatched_per_second

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RateLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RateLimits of this RateLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_burst_size(self):
        """Gets the max_burst_size of this RateLimits.

        The max burst size. Max burst size limits how fast tasks in queue are processed when many tasks are in the queue and the rate is high. This field allows the queue to have a high rate so processing starts shortly after a task is enqueued, but still limits resource usage when many tasks are enqueued in a short period of time. The [token bucket](https://wikipedia.org/wiki/Token_Bucket) algorithm is used to control the rate of task dispatches. Each queue has a token bucket that holds tokens, up to the maximum specified by `max_burst_size`. Each time a task is dispatched, a token is removed from the bucket. Tasks will be dispatched until the queue's bucket runs out of tokens. The bucket will be continuously refilled with new tokens based on max_dispatches_per_second. The default value of `max_burst_size` is picked by Cloud Tasks based on the value of max_dispatches_per_second. The maximum value of `max_burst_size` is 500. For App Engine queues that were created or updated using `queue.yaml/xml`, `max_burst_size` is equal to [bucket_size](https://cloud.google.com/appengine/docs/standard/python/config/queueref#bucket_size). If UpdateQueue is called on a queue without explicitly setting a value for `max_burst_size`, `max_burst_size` value will get updated if UpdateQueue is updating max_dispatches_per_second. 

        :return: The max_burst_size of this RateLimits.
        :rtype: int
        """
        return self._max_burst_size

    @max_burst_size.setter
    def max_burst_size(self, max_burst_size):
        """Sets the max_burst_size of this RateLimits.

        The max burst size. Max burst size limits how fast tasks in queue are processed when many tasks are in the queue and the rate is high. This field allows the queue to have a high rate so processing starts shortly after a task is enqueued, but still limits resource usage when many tasks are enqueued in a short period of time. The [token bucket](https://wikipedia.org/wiki/Token_Bucket) algorithm is used to control the rate of task dispatches. Each queue has a token bucket that holds tokens, up to the maximum specified by `max_burst_size`. Each time a task is dispatched, a token is removed from the bucket. Tasks will be dispatched until the queue's bucket runs out of tokens. The bucket will be continuously refilled with new tokens based on max_dispatches_per_second. The default value of `max_burst_size` is picked by Cloud Tasks based on the value of max_dispatches_per_second. The maximum value of `max_burst_size` is 500. For App Engine queues that were created or updated using `queue.yaml/xml`, `max_burst_size` is equal to [bucket_size](https://cloud.google.com/appengine/docs/standard/python/config/queueref#bucket_size). If UpdateQueue is called on a queue without explicitly setting a value for `max_burst_size`, `max_burst_size` value will get updated if UpdateQueue is updating max_dispatches_per_second. 

        :param max_burst_size: The max_burst_size of this RateLimits.
        :type max_burst_size: int
        """

        self._max_burst_size = max_burst_size

    @property
    def max_concurrent_tasks(self):
        """Gets the max_concurrent_tasks of this RateLimits.

        The maximum number of concurrent tasks that Cloud Tasks allows to be dispatched for this queue. After this threshold has been reached, Cloud Tasks stops dispatching tasks until the number of concurrent requests decreases. If unspecified when the queue is created, Cloud Tasks will pick the default. The maximum allowed value is 5,000. This field is output only for pull queues and always -1, which indicates no limit. No other queue types can have `max_concurrent_tasks` set to -1. This field has the same meaning as [max_concurrent_requests in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#max_concurrent_requests).

        :return: The max_concurrent_tasks of this RateLimits.
        :rtype: int
        """
        return self._max_concurrent_tasks

    @max_concurrent_tasks.setter
    def max_concurrent_tasks(self, max_concurrent_tasks):
        """Sets the max_concurrent_tasks of this RateLimits.

        The maximum number of concurrent tasks that Cloud Tasks allows to be dispatched for this queue. After this threshold has been reached, Cloud Tasks stops dispatching tasks until the number of concurrent requests decreases. If unspecified when the queue is created, Cloud Tasks will pick the default. The maximum allowed value is 5,000. This field is output only for pull queues and always -1, which indicates no limit. No other queue types can have `max_concurrent_tasks` set to -1. This field has the same meaning as [max_concurrent_requests in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#max_concurrent_requests).

        :param max_concurrent_tasks: The max_concurrent_tasks of this RateLimits.
        :type max_concurrent_tasks: int
        """

        self._max_concurrent_tasks = max_concurrent_tasks

    @property
    def max_tasks_dispatched_per_second(self):
        """Gets the max_tasks_dispatched_per_second of this RateLimits.

        The maximum rate at which tasks are dispatched from this queue. If unspecified when the queue is created, Cloud Tasks will pick the default. * For App Engine queues, the maximum allowed value is 500. * This field is output only for pull queues. In addition to the `max_tasks_dispatched_per_second` limit, a maximum of 10 QPS of LeaseTasks requests are allowed per pull queue. This field has the same meaning as [rate in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#rate).

        :return: The max_tasks_dispatched_per_second of this RateLimits.
        :rtype: float
        """
        return self._max_tasks_dispatched_per_second

    @max_tasks_dispatched_per_second.setter
    def max_tasks_dispatched_per_second(self, max_tasks_dispatched_per_second):
        """Sets the max_tasks_dispatched_per_second of this RateLimits.

        The maximum rate at which tasks are dispatched from this queue. If unspecified when the queue is created, Cloud Tasks will pick the default. * For App Engine queues, the maximum allowed value is 500. * This field is output only for pull queues. In addition to the `max_tasks_dispatched_per_second` limit, a maximum of 10 QPS of LeaseTasks requests are allowed per pull queue. This field has the same meaning as [rate in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#rate).

        :param max_tasks_dispatched_per_second: The max_tasks_dispatched_per_second of this RateLimits.
        :type max_tasks_dispatched_per_second: float
        """

        self._max_tasks_dispatched_per_second = max_tasks_dispatched_per_second
