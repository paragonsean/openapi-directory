# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AcknowledgeTaskRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_time: str=None):
        """AcknowledgeTaskRequest - a model defined in OpenAPI

        :param schedule_time: The schedule_time of this AcknowledgeTaskRequest.
        """
        self.openapi_types = {
            'schedule_time': str
        }

        self.attribute_map = {
            'schedule_time': 'scheduleTime'
        }

        self._schedule_time = schedule_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcknowledgeTaskRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcknowledgeTaskRequest of this AcknowledgeTaskRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_time(self):
        """Gets the schedule_time of this AcknowledgeTaskRequest.

        Required. The task's current schedule time, available in the schedule_time returned by LeaseTasks response or RenewLease response. This restriction is to ensure that your worker currently holds the lease.

        :return: The schedule_time of this AcknowledgeTaskRequest.
        :rtype: str
        """
        return self._schedule_time

    @schedule_time.setter
    def schedule_time(self, schedule_time):
        """Sets the schedule_time of this AcknowledgeTaskRequest.

        Required. The task's current schedule time, available in the schedule_time returned by LeaseTasks response or RenewLease response. This restriction is to ensure that your worker currently holds the lease.

        :param schedule_time: The schedule_time of this AcknowledgeTaskRequest.
        :type schedule_time: str
        """

        self._schedule_time = schedule_time
