# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attempt_status import AttemptStatus
from openapi_server import util


class TaskStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attempt_dispatch_count: int=None, attempt_response_count: int=None, first_attempt_status: AttemptStatus=None, last_attempt_status: AttemptStatus=None):
        """TaskStatus - a model defined in OpenAPI

        :param attempt_dispatch_count: The attempt_dispatch_count of this TaskStatus.
        :param attempt_response_count: The attempt_response_count of this TaskStatus.
        :param first_attempt_status: The first_attempt_status of this TaskStatus.
        :param last_attempt_status: The last_attempt_status of this TaskStatus.
        """
        self.openapi_types = {
            'attempt_dispatch_count': int,
            'attempt_response_count': int,
            'first_attempt_status': AttemptStatus,
            'last_attempt_status': AttemptStatus
        }

        self.attribute_map = {
            'attempt_dispatch_count': 'attemptDispatchCount',
            'attempt_response_count': 'attemptResponseCount',
            'first_attempt_status': 'firstAttemptStatus',
            'last_attempt_status': 'lastAttemptStatus'
        }

        self._attempt_dispatch_count = attempt_dispatch_count
        self._attempt_response_count = attempt_response_count
        self._first_attempt_status = first_attempt_status
        self._last_attempt_status = last_attempt_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskStatus of this TaskStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attempt_dispatch_count(self):
        """Gets the attempt_dispatch_count of this TaskStatus.

        Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven't received a response.

        :return: The attempt_dispatch_count of this TaskStatus.
        :rtype: int
        """
        return self._attempt_dispatch_count

    @attempt_dispatch_count.setter
    def attempt_dispatch_count(self, attempt_dispatch_count):
        """Sets the attempt_dispatch_count of this TaskStatus.

        Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven't received a response.

        :param attempt_dispatch_count: The attempt_dispatch_count of this TaskStatus.
        :type attempt_dispatch_count: int
        """

        self._attempt_dispatch_count = attempt_dispatch_count

    @property
    def attempt_response_count(self):
        """Gets the attempt_response_count of this TaskStatus.

        Output only. The number of attempts which have received a response. This field is not calculated for pull tasks.

        :return: The attempt_response_count of this TaskStatus.
        :rtype: int
        """
        return self._attempt_response_count

    @attempt_response_count.setter
    def attempt_response_count(self, attempt_response_count):
        """Sets the attempt_response_count of this TaskStatus.

        Output only. The number of attempts which have received a response. This field is not calculated for pull tasks.

        :param attempt_response_count: The attempt_response_count of this TaskStatus.
        :type attempt_response_count: int
        """

        self._attempt_response_count = attempt_response_count

    @property
    def first_attempt_status(self):
        """Gets the first_attempt_status of this TaskStatus.


        :return: The first_attempt_status of this TaskStatus.
        :rtype: AttemptStatus
        """
        return self._first_attempt_status

    @first_attempt_status.setter
    def first_attempt_status(self, first_attempt_status):
        """Sets the first_attempt_status of this TaskStatus.


        :param first_attempt_status: The first_attempt_status of this TaskStatus.
        :type first_attempt_status: AttemptStatus
        """

        self._first_attempt_status = first_attempt_status

    @property
    def last_attempt_status(self):
        """Gets the last_attempt_status of this TaskStatus.


        :return: The last_attempt_status of this TaskStatus.
        :rtype: AttemptStatus
        """
        return self._last_attempt_status

    @last_attempt_status.setter
    def last_attempt_status(self, last_attempt_status):
        """Sets the last_attempt_status of this TaskStatus.


        :param last_attempt_status: The last_attempt_status of this TaskStatus.
        :type last_attempt_status: AttemptStatus
        """

        self._last_attempt_status = last_attempt_status
