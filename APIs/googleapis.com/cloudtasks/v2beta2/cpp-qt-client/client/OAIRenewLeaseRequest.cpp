/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRenewLeaseRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRenewLeaseRequest::OAIRenewLeaseRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRenewLeaseRequest::OAIRenewLeaseRequest() {
    this->initializeModel();
}

OAIRenewLeaseRequest::~OAIRenewLeaseRequest() {}

void OAIRenewLeaseRequest::initializeModel() {

    m_lease_duration_isSet = false;
    m_lease_duration_isValid = false;

    m_response_view_isSet = false;
    m_response_view_isValid = false;

    m_schedule_time_isSet = false;
    m_schedule_time_isValid = false;
}

void OAIRenewLeaseRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRenewLeaseRequest::fromJsonObject(QJsonObject json) {

    m_lease_duration_isValid = ::OpenAPI::fromJsonValue(m_lease_duration, json[QString("leaseDuration")]);
    m_lease_duration_isSet = !json[QString("leaseDuration")].isNull() && m_lease_duration_isValid;

    m_response_view_isValid = ::OpenAPI::fromJsonValue(m_response_view, json[QString("responseView")]);
    m_response_view_isSet = !json[QString("responseView")].isNull() && m_response_view_isValid;

    m_schedule_time_isValid = ::OpenAPI::fromJsonValue(m_schedule_time, json[QString("scheduleTime")]);
    m_schedule_time_isSet = !json[QString("scheduleTime")].isNull() && m_schedule_time_isValid;
}

QString OAIRenewLeaseRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRenewLeaseRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_lease_duration_isSet) {
        obj.insert(QString("leaseDuration"), ::OpenAPI::toJsonValue(m_lease_duration));
    }
    if (m_response_view_isSet) {
        obj.insert(QString("responseView"), ::OpenAPI::toJsonValue(m_response_view));
    }
    if (m_schedule_time_isSet) {
        obj.insert(QString("scheduleTime"), ::OpenAPI::toJsonValue(m_schedule_time));
    }
    return obj;
}

QString OAIRenewLeaseRequest::getLeaseDuration() const {
    return m_lease_duration;
}
void OAIRenewLeaseRequest::setLeaseDuration(const QString &lease_duration) {
    m_lease_duration = lease_duration;
    m_lease_duration_isSet = true;
}

bool OAIRenewLeaseRequest::is_lease_duration_Set() const{
    return m_lease_duration_isSet;
}

bool OAIRenewLeaseRequest::is_lease_duration_Valid() const{
    return m_lease_duration_isValid;
}

QString OAIRenewLeaseRequest::getResponseView() const {
    return m_response_view;
}
void OAIRenewLeaseRequest::setResponseView(const QString &response_view) {
    m_response_view = response_view;
    m_response_view_isSet = true;
}

bool OAIRenewLeaseRequest::is_response_view_Set() const{
    return m_response_view_isSet;
}

bool OAIRenewLeaseRequest::is_response_view_Valid() const{
    return m_response_view_isValid;
}

QString OAIRenewLeaseRequest::getScheduleTime() const {
    return m_schedule_time;
}
void OAIRenewLeaseRequest::setScheduleTime(const QString &schedule_time) {
    m_schedule_time = schedule_time;
    m_schedule_time_isSet = true;
}

bool OAIRenewLeaseRequest::is_schedule_time_Set() const{
    return m_schedule_time_isSet;
}

bool OAIRenewLeaseRequest::is_schedule_time_Valid() const{
    return m_schedule_time_isValid;
}

bool OAIRenewLeaseRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lease_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_view_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRenewLeaseRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
