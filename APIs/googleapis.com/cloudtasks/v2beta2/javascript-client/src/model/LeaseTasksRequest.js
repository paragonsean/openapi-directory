/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LeaseTasksRequest model module.
 * @module model/LeaseTasksRequest
 * @version v2beta2
 */
class LeaseTasksRequest {
    /**
     * Constructs a new <code>LeaseTasksRequest</code>.
     * Request message for leasing tasks using LeaseTasks.
     * @alias module:model/LeaseTasksRequest
     */
    constructor() { 
        
        LeaseTasksRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LeaseTasksRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LeaseTasksRequest} obj Optional instance to populate.
     * @return {module:model/LeaseTasksRequest} The populated <code>LeaseTasksRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeaseTasksRequest();

            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('leaseDuration')) {
                obj['leaseDuration'] = ApiClient.convertToType(data['leaseDuration'], 'String');
            }
            if (data.hasOwnProperty('maxTasks')) {
                obj['maxTasks'] = ApiClient.convertToType(data['maxTasks'], 'Number');
            }
            if (data.hasOwnProperty('responseView')) {
                obj['responseView'] = ApiClient.convertToType(data['responseView'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LeaseTasksRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LeaseTasksRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        // ensure the json data is a string
        if (data['leaseDuration'] && !(typeof data['leaseDuration'] === 'string' || data['leaseDuration'] instanceof String)) {
            throw new Error("Expected the field `leaseDuration` to be a primitive type in the JSON string but got " + data['leaseDuration']);
        }
        // ensure the json data is a string
        if (data['responseView'] && !(typeof data['responseView'] === 'string' || data['responseView'] instanceof String)) {
            throw new Error("Expected the field `responseView` to be a primitive type in the JSON string but got " + data['responseView']);
        }

        return true;
    }


}



/**
 * `filter` can be used to specify a subset of tasks to lease. When `filter` is set to `tag=` then the response will contain only tasks whose tag is equal to ``. `` must be less than 500 characters. When `filter` is set to `tag_function=oldest_tag()`, only tasks which have the same tag as the task with the oldest schedule_time will be returned. Grammar Syntax: * `filter = \"tag=\" tag | \"tag_function=\" function` * `tag = string` * `function = \"oldest_tag()\"` The `oldest_tag()` function returns tasks which have the same tag as the oldest task (ordered by schedule time). SDK compatibility: Although the SDK allows tags to be either string or [bytes](https://cloud.google.com/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-), only UTF-8 encoded tags can be used in Cloud Tasks. Tag which aren't UTF-8 encoded can't be used in the filter and the task's tag will be displayed as empty in Cloud Tasks.
 * @member {String} filter
 */
LeaseTasksRequest.prototype['filter'] = undefined;

/**
 * Required. The duration of the lease. Each task returned in the response will have its schedule_time set to the current time plus the `lease_duration`. The task is leased until its schedule_time; thus, the task will not be returned to another LeaseTasks call before its schedule_time. After the worker has successfully finished the work associated with the task, the worker must call via AcknowledgeTask before the schedule_time. Otherwise the task will be returned to a later LeaseTasks call so that another worker can retry it. The maximum lease duration is 1 week. `lease_duration` will be truncated to the nearest second.
 * @member {String} leaseDuration
 */
LeaseTasksRequest.prototype['leaseDuration'] = undefined;

/**
 * The maximum number of tasks to lease. The system will make a best effort to return as close to as `max_tasks` as possible. The largest that `max_tasks` can be is 1000. The maximum total size of a lease tasks response is 32 MB. If the sum of all task sizes requested reaches this limit, fewer tasks than requested are returned.
 * @member {Number} maxTasks
 */
LeaseTasksRequest.prototype['maxTasks'] = undefined;

/**
 * The response_view specifies which subset of the Task will be returned. By default response_view is BASIC; not all information is retrieved by default because some data, such as payloads, might be desirable to return only when needed because of its large size or because of the sensitivity of data that it contains. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Task resource.
 * @member {module:model/LeaseTasksRequest.ResponseViewEnum} responseView
 */
LeaseTasksRequest.prototype['responseView'] = undefined;





/**
 * Allowed values for the <code>responseView</code> property.
 * @enum {String}
 * @readonly
 */
LeaseTasksRequest['ResponseViewEnum'] = {

    /**
     * value: "VIEW_UNSPECIFIED"
     * @const
     */
    "VIEW_UNSPECIFIED": "VIEW_UNSPECIFIED",

    /**
     * value: "BASIC"
     * @const
     */
    "BASIC": "BASIC",

    /**
     * value: "FULL"
     * @const
     */
    "FULL": "FULL"
};



export default LeaseTasksRequest;

