/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppEngineHttpRequest from './AppEngineHttpRequest';
import HttpRequest from './HttpRequest';
import PullMessage from './PullMessage';
import TaskStatus from './TaskStatus';

/**
 * The Task model module.
 * @module model/Task
 * @version v2beta2
 */
class Task {
    /**
     * Constructs a new <code>Task</code>.
     * A unit of scheduled work.
     * @alias module:model/Task
     */
    constructor() { 
        
        Task.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Task</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Task} obj Optional instance to populate.
     * @return {module:model/Task} The populated <code>Task</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Task();

            if (data.hasOwnProperty('appEngineHttpRequest')) {
                obj['appEngineHttpRequest'] = AppEngineHttpRequest.constructFromObject(data['appEngineHttpRequest']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('httpRequest')) {
                obj['httpRequest'] = HttpRequest.constructFromObject(data['httpRequest']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pullMessage')) {
                obj['pullMessage'] = PullMessage.constructFromObject(data['pullMessage']);
            }
            if (data.hasOwnProperty('scheduleTime')) {
                obj['scheduleTime'] = ApiClient.convertToType(data['scheduleTime'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = TaskStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('view')) {
                obj['view'] = ApiClient.convertToType(data['view'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Task</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Task</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appEngineHttpRequest`
        if (data['appEngineHttpRequest']) { // data not null
          AppEngineHttpRequest.validateJSON(data['appEngineHttpRequest']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `httpRequest`
        if (data['httpRequest']) { // data not null
          HttpRequest.validateJSON(data['httpRequest']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `pullMessage`
        if (data['pullMessage']) { // data not null
          PullMessage.validateJSON(data['pullMessage']);
        }
        // ensure the json data is a string
        if (data['scheduleTime'] && !(typeof data['scheduleTime'] === 'string' || data['scheduleTime'] instanceof String)) {
            throw new Error("Expected the field `scheduleTime` to be a primitive type in the JSON string but got " + data['scheduleTime']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          TaskStatus.validateJSON(data['status']);
        }
        // ensure the json data is a string
        if (data['view'] && !(typeof data['view'] === 'string' || data['view'] instanceof String)) {
            throw new Error("Expected the field `view` to be a primitive type in the JSON string but got " + data['view']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppEngineHttpRequest} appEngineHttpRequest
 */
Task.prototype['appEngineHttpRequest'] = undefined;

/**
 * Output only. The time that the task was created. `create_time` will be truncated to the nearest second.
 * @member {String} createTime
 */
Task.prototype['createTime'] = undefined;

/**
 * @member {module:model/HttpRequest} httpRequest
 */
Task.prototype['httpRequest'] = undefined;

/**
 * Optionally caller-specified in CreateTask. The task name. The task name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the task's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters. * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.
 * @member {String} name
 */
Task.prototype['name'] = undefined;

/**
 * @member {module:model/PullMessage} pullMessage
 */
Task.prototype['pullMessage'] = undefined;

/**
 * The time when the task is scheduled to be attempted. For App Engine queues, this is when the task will be attempted or retried. For pull queues, this is the time when the task is available to be leased; if a task is currently leased, this is the time when the current lease expires, that is, the time that the task was leased plus the lease_duration. `schedule_time` will be truncated to the nearest microsecond.
 * @member {String} scheduleTime
 */
Task.prototype['scheduleTime'] = undefined;

/**
 * @member {module:model/TaskStatus} status
 */
Task.prototype['status'] = undefined;

/**
 * Output only. The view specifies which subset of the Task has been returned.
 * @member {module:model/Task.ViewEnum} view
 */
Task.prototype['view'] = undefined;





/**
 * Allowed values for the <code>view</code> property.
 * @enum {String}
 * @readonly
 */
Task['ViewEnum'] = {

    /**
     * value: "VIEW_UNSPECIFIED"
     * @const
     */
    "VIEW_UNSPECIFIED": "VIEW_UNSPECIFIED",

    /**
     * value: "BASIC"
     * @const
     */
    "BASIC": "BASIC",

    /**
     * value: "FULL"
     * @const
     */
    "FULL": "FULL"
};



export default Task;

