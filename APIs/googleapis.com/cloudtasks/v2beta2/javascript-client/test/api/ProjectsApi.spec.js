/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudTasksApi);
  }
}(this, function(expect, CloudTasksApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudTasksApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('cloudtasksProjectsLocationsList', function() {
      it('should call cloudtasksProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsList
        //instance.cloudtasksProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesCreate', function() {
      it('should call cloudtasksProjectsLocationsQueuesCreate successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesCreate
        //instance.cloudtasksProjectsLocationsQueuesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesGetIamPolicy', function() {
      it('should call cloudtasksProjectsLocationsQueuesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesGetIamPolicy
        //instance.cloudtasksProjectsLocationsQueuesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesList', function() {
      it('should call cloudtasksProjectsLocationsQueuesList successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesList
        //instance.cloudtasksProjectsLocationsQueuesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesPatch', function() {
      it('should call cloudtasksProjectsLocationsQueuesPatch successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesPatch
        //instance.cloudtasksProjectsLocationsQueuesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesPause', function() {
      it('should call cloudtasksProjectsLocationsQueuesPause successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesPause
        //instance.cloudtasksProjectsLocationsQueuesPause(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesPurge', function() {
      it('should call cloudtasksProjectsLocationsQueuesPurge successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesPurge
        //instance.cloudtasksProjectsLocationsQueuesPurge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesResume', function() {
      it('should call cloudtasksProjectsLocationsQueuesResume successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesResume
        //instance.cloudtasksProjectsLocationsQueuesResume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesSetIamPolicy', function() {
      it('should call cloudtasksProjectsLocationsQueuesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesSetIamPolicy
        //instance.cloudtasksProjectsLocationsQueuesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksAcknowledge', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksAcknowledge successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksAcknowledge
        //instance.cloudtasksProjectsLocationsQueuesTasksAcknowledge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksBuffer', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksBuffer successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksBuffer
        //instance.cloudtasksProjectsLocationsQueuesTasksBuffer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksCancelLease', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksCancelLease successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksCancelLease
        //instance.cloudtasksProjectsLocationsQueuesTasksCancelLease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksCreate', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksCreate successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksCreate
        //instance.cloudtasksProjectsLocationsQueuesTasksCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksDelete', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksDelete successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksDelete
        //instance.cloudtasksProjectsLocationsQueuesTasksDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksGet', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksGet successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksGet
        //instance.cloudtasksProjectsLocationsQueuesTasksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksLease', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksLease successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksLease
        //instance.cloudtasksProjectsLocationsQueuesTasksLease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksList', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksList successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksList
        //instance.cloudtasksProjectsLocationsQueuesTasksList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksRenewLease', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksRenewLease successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksRenewLease
        //instance.cloudtasksProjectsLocationsQueuesTasksRenewLease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTasksRun', function() {
      it('should call cloudtasksProjectsLocationsQueuesTasksRun successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTasksRun
        //instance.cloudtasksProjectsLocationsQueuesTasksRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloudtasksProjectsLocationsQueuesTestIamPermissions', function() {
      it('should call cloudtasksProjectsLocationsQueuesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test cloudtasksProjectsLocationsQueuesTestIamPermissions
        //instance.cloudtasksProjectsLocationsQueuesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
