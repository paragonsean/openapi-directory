# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CmekConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_key: str=None, name: str=None):
        """CmekConfig - a model defined in OpenAPI

        :param kms_key: The kms_key of this CmekConfig.
        :param name: The name of this CmekConfig.
        """
        self.openapi_types = {
            'kms_key': str,
            'name': str
        }

        self.attribute_map = {
            'kms_key': 'kmsKey',
            'name': 'name'
        }

        self._kms_key = kms_key
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CmekConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CmekConfig of this CmekConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_key(self):
        """Gets the kms_key of this CmekConfig.

        Resource name of the Cloud KMS key, of the form `projects/PROJECT_ID/locations/LOCATION_ID/keyRings/KEY_RING_ID/cryptoKeys/KEY_ID`, that will be used to encrypt the Queues & Tasks in the region. Setting this as blank will turn off CMEK encryption.

        :return: The kms_key of this CmekConfig.
        :rtype: str
        """
        return self._kms_key

    @kms_key.setter
    def kms_key(self, kms_key):
        """Sets the kms_key of this CmekConfig.

        Resource name of the Cloud KMS key, of the form `projects/PROJECT_ID/locations/LOCATION_ID/keyRings/KEY_RING_ID/cryptoKeys/KEY_ID`, that will be used to encrypt the Queues & Tasks in the region. Setting this as blank will turn off CMEK encryption.

        :param kms_key: The kms_key of this CmekConfig.
        :type kms_key: str
        """

        self._kms_key = kms_key

    @property
    def name(self):
        """Gets the name of this CmekConfig.

        Output only. The config resource name which includes the project and location and must end in 'cmekConfig', in the format projects/PROJECT_ID/locations/LOCATION_ID/cmekConfig`

        :return: The name of this CmekConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CmekConfig.

        Output only. The config resource name which includes the project and location and must end in 'cmekConfig', in the format projects/PROJECT_ID/locations/LOCATION_ID/cmekConfig`

        :param name: The name of this CmekConfig.
        :type name: str
        """

        self._name = name
