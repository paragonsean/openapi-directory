/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueueStats model module.
 * @module model/QueueStats
 * @version v2beta3
 */
class QueueStats {
    /**
     * Constructs a new <code>QueueStats</code>.
     * Statistics for a queue.
     * @alias module:model/QueueStats
     */
    constructor() { 
        
        QueueStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueueStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueueStats} obj Optional instance to populate.
     * @return {module:model/QueueStats} The populated <code>QueueStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueueStats();

            if (data.hasOwnProperty('concurrentDispatchesCount')) {
                obj['concurrentDispatchesCount'] = ApiClient.convertToType(data['concurrentDispatchesCount'], 'String');
            }
            if (data.hasOwnProperty('effectiveExecutionRate')) {
                obj['effectiveExecutionRate'] = ApiClient.convertToType(data['effectiveExecutionRate'], 'Number');
            }
            if (data.hasOwnProperty('executedLastMinuteCount')) {
                obj['executedLastMinuteCount'] = ApiClient.convertToType(data['executedLastMinuteCount'], 'String');
            }
            if (data.hasOwnProperty('oldestEstimatedArrivalTime')) {
                obj['oldestEstimatedArrivalTime'] = ApiClient.convertToType(data['oldestEstimatedArrivalTime'], 'String');
            }
            if (data.hasOwnProperty('tasksCount')) {
                obj['tasksCount'] = ApiClient.convertToType(data['tasksCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueueStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueueStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['concurrentDispatchesCount'] && !(typeof data['concurrentDispatchesCount'] === 'string' || data['concurrentDispatchesCount'] instanceof String)) {
            throw new Error("Expected the field `concurrentDispatchesCount` to be a primitive type in the JSON string but got " + data['concurrentDispatchesCount']);
        }
        // ensure the json data is a string
        if (data['executedLastMinuteCount'] && !(typeof data['executedLastMinuteCount'] === 'string' || data['executedLastMinuteCount'] instanceof String)) {
            throw new Error("Expected the field `executedLastMinuteCount` to be a primitive type in the JSON string but got " + data['executedLastMinuteCount']);
        }
        // ensure the json data is a string
        if (data['oldestEstimatedArrivalTime'] && !(typeof data['oldestEstimatedArrivalTime'] === 'string' || data['oldestEstimatedArrivalTime'] instanceof String)) {
            throw new Error("Expected the field `oldestEstimatedArrivalTime` to be a primitive type in the JSON string but got " + data['oldestEstimatedArrivalTime']);
        }
        // ensure the json data is a string
        if (data['tasksCount'] && !(typeof data['tasksCount'] === 'string' || data['tasksCount'] instanceof String)) {
            throw new Error("Expected the field `tasksCount` to be a primitive type in the JSON string but got " + data['tasksCount']);
        }

        return true;
    }


}



/**
 * Output only. The number of requests that the queue has dispatched but has not received a reply for yet.
 * @member {String} concurrentDispatchesCount
 */
QueueStats.prototype['concurrentDispatchesCount'] = undefined;

/**
 * Output only. The current maximum number of tasks per second executed by the queue. The maximum value of this variable is controlled by the RateLimits of the Queue. However, this value could be less to avoid overloading the endpoints tasks in the queue are targeting.
 * @member {Number} effectiveExecutionRate
 */
QueueStats.prototype['effectiveExecutionRate'] = undefined;

/**
 * Output only. The number of tasks that the queue has dispatched and received a reply for during the last minute. This variable counts both successful and non-successful executions.
 * @member {String} executedLastMinuteCount
 */
QueueStats.prototype['executedLastMinuteCount'] = undefined;

/**
 * Output only. An estimation of the nearest time in the future where a task in the queue is scheduled to be executed.
 * @member {String} oldestEstimatedArrivalTime
 */
QueueStats.prototype['oldestEstimatedArrivalTime'] = undefined;

/**
 * Output only. An estimation of the number of tasks in the queue, that is, the tasks in the queue that haven't been executed, the tasks in the queue which the queue has dispatched but has not yet received a reply for, and the failed tasks that the queue is retrying.
 * @member {String} tasksCount
 */
QueueStats.prototype['tasksCount'] = undefined;






export default QueueStats;

