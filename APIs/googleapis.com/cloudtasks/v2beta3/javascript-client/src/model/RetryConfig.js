/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetryConfig model module.
 * @module model/RetryConfig
 * @version v2beta3
 */
class RetryConfig {
    /**
     * Constructs a new <code>RetryConfig</code>.
     * Retry config. These settings determine when a failed task attempt is retried.
     * @alias module:model/RetryConfig
     */
    constructor() { 
        
        RetryConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetryConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetryConfig} obj Optional instance to populate.
     * @return {module:model/RetryConfig} The populated <code>RetryConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetryConfig();

            if (data.hasOwnProperty('maxAttempts')) {
                obj['maxAttempts'] = ApiClient.convertToType(data['maxAttempts'], 'Number');
            }
            if (data.hasOwnProperty('maxBackoff')) {
                obj['maxBackoff'] = ApiClient.convertToType(data['maxBackoff'], 'String');
            }
            if (data.hasOwnProperty('maxDoublings')) {
                obj['maxDoublings'] = ApiClient.convertToType(data['maxDoublings'], 'Number');
            }
            if (data.hasOwnProperty('maxRetryDuration')) {
                obj['maxRetryDuration'] = ApiClient.convertToType(data['maxRetryDuration'], 'String');
            }
            if (data.hasOwnProperty('minBackoff')) {
                obj['minBackoff'] = ApiClient.convertToType(data['minBackoff'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetryConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetryConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['maxBackoff'] && !(typeof data['maxBackoff'] === 'string' || data['maxBackoff'] instanceof String)) {
            throw new Error("Expected the field `maxBackoff` to be a primitive type in the JSON string but got " + data['maxBackoff']);
        }
        // ensure the json data is a string
        if (data['maxRetryDuration'] && !(typeof data['maxRetryDuration'] === 'string' || data['maxRetryDuration'] instanceof String)) {
            throw new Error("Expected the field `maxRetryDuration` to be a primitive type in the JSON string but got " + data['maxRetryDuration']);
        }
        // ensure the json data is a string
        if (data['minBackoff'] && !(typeof data['minBackoff'] === 'string' || data['minBackoff'] instanceof String)) {
            throw new Error("Expected the field `minBackoff` to be a primitive type in the JSON string but got " + data['minBackoff']);
        }

        return true;
    }


}



/**
 * Number of attempts per task. Cloud Tasks will attempt the task `max_attempts` times (that is, if the first attempt fails, then there will be `max_attempts - 1` retries). Must be >= -1. If unspecified when the queue is created, Cloud Tasks will pick the default. -1 indicates unlimited attempts. This field has the same meaning as [task_retry_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
 * @member {Number} maxAttempts
 */
RetryConfig.prototype['maxAttempts'] = undefined;

/**
 * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails, if the queue's RetryConfig specifies that the task should be retried. If unspecified when the queue is created, Cloud Tasks will pick the default. The value must be given as a string that indicates the length of time (in seconds) followed by `s` (for \"seconds\"). For more information on the format, see the documentation for [Duration](https://protobuf.dev/reference/protobuf/google.protobuf/#duration). `max_backoff` will be truncated to the nearest second. This field has the same meaning as [max_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
 * @member {String} maxBackoff
 */
RetryConfig.prototype['maxBackoff'] = undefined;

/**
 * The time between retries will double `max_doublings` times. A task's retry interval starts at min_backoff, then doubles `max_doublings` times, then increases linearly, and finally retries at intervals of max_backoff up to max_attempts times. For example, if min_backoff is 10s, max_backoff is 300s, and `max_doublings` is 3, then the a task will first be retried in 10s. The retry interval will double three times, and then increase linearly by 2^3 * 10s. Finally, the task will retry at intervals of max_backoff until the task has been attempted max_attempts times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, .... If unspecified when the queue is created, Cloud Tasks will pick the default. This field has the same meaning as [max_doublings in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
 * @member {Number} maxDoublings
 */
RetryConfig.prototype['maxDoublings'] = undefined;

/**
 * If positive, `max_retry_duration` specifies the time limit for retrying a failed task, measured from when the task was first attempted. Once `max_retry_duration` time has passed *and* the task has been attempted max_attempts times, no further attempts will be made and the task will be deleted. If zero, then the task age is unlimited. If unspecified when the queue is created, Cloud Tasks will pick the default. The value must be given as a string that indicates the length of time (in seconds) followed by `s` (for \"seconds\"). For the maximum possible value or the format, see the documentation for [Duration](https://protobuf.dev/reference/protobuf/google.protobuf/#duration). `max_retry_duration` will be truncated to the nearest second. This field has the same meaning as [task_age_limit in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
 * @member {String} maxRetryDuration
 */
RetryConfig.prototype['maxRetryDuration'] = undefined;

/**
 * A task will be scheduled for retry between min_backoff and max_backoff duration after it fails, if the queue's RetryConfig specifies that the task should be retried. If unspecified when the queue is created, Cloud Tasks will pick the default. The value must be given as a string that indicates the length of time (in seconds) followed by `s` (for \"seconds\"). For more information on the format, see the documentation for [Duration](https://protobuf.dev/reference/protobuf/google.protobuf/#duration). `min_backoff` will be truncated to the nearest second. This field has the same meaning as [min_backoff_seconds in queue.yaml/xml](https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters).
 * @member {String} minBackoff
 */
RetryConfig.prototype['minBackoff'] = undefined;






export default RetryConfig;

