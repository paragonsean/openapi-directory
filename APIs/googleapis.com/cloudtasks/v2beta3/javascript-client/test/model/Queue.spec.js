/**
 * Cloud Tasks API
 * Manages the execution of large numbers of distributed requests.
 *
 * The version of the OpenAPI document: v2beta3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudTasksApi);
  }
}(this, function(expect, CloudTasksApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudTasksApi.Queue();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Queue', function() {
    it('should create an instance of Queue', function() {
      // uncomment below and update the code to test Queue
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be.a(CloudTasksApi.Queue);
    });

    it('should have the property appEngineHttpQueue (base name: "appEngineHttpQueue")', function() {
      // uncomment below and update the code to test the property appEngineHttpQueue
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property httpTarget (base name: "httpTarget")', function() {
      // uncomment below and update the code to test the property httpTarget
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property purgeTime (base name: "purgeTime")', function() {
      // uncomment below and update the code to test the property purgeTime
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property rateLimits (base name: "rateLimits")', function() {
      // uncomment below and update the code to test the property rateLimits
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property retryConfig (base name: "retryConfig")', function() {
      // uncomment below and update the code to test the property retryConfig
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property stackdriverLoggingConfig (base name: "stackdriverLoggingConfig")', function() {
      // uncomment below and update the code to test the property stackdriverLoggingConfig
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property stats (base name: "stats")', function() {
      // uncomment below and update the code to test the property stats
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property taskTtl (base name: "taskTtl")', function() {
      // uncomment below and update the code to test the property taskTtl
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property tombstoneTtl (base name: "tombstoneTtl")', function() {
      // uncomment below and update the code to test the property tombstoneTtl
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new CloudTasksApi.Queue();
      //expect(instance).to.be();
    });

  });

}));
