/**
 * Cloud Source Repositories API
 * Accesses source code repositories hosted by Google.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepo::OAIRepo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepo::OAIRepo() {
    this->initializeModel();
}

OAIRepo::~OAIRepo() {}

void OAIRepo::initializeModel() {

    m_mirror_config_isSet = false;
    m_mirror_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pubsub_configs_isSet = false;
    m_pubsub_configs_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIRepo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepo::fromJsonObject(QJsonObject json) {

    m_mirror_config_isValid = ::OpenAPI::fromJsonValue(m_mirror_config, json[QString("mirrorConfig")]);
    m_mirror_config_isSet = !json[QString("mirrorConfig")].isNull() && m_mirror_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pubsub_configs_isValid = ::OpenAPI::fromJsonValue(m_pubsub_configs, json[QString("pubsubConfigs")]);
    m_pubsub_configs_isSet = !json[QString("pubsubConfigs")].isNull() && m_pubsub_configs_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIRepo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepo::asJsonObject() const {
    QJsonObject obj;
    if (m_mirror_config.isSet()) {
        obj.insert(QString("mirrorConfig"), ::OpenAPI::toJsonValue(m_mirror_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pubsub_configs.size() > 0) {
        obj.insert(QString("pubsubConfigs"), ::OpenAPI::toJsonValue(m_pubsub_configs));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIMirrorConfig OAIRepo::getMirrorConfig() const {
    return m_mirror_config;
}
void OAIRepo::setMirrorConfig(const OAIMirrorConfig &mirror_config) {
    m_mirror_config = mirror_config;
    m_mirror_config_isSet = true;
}

bool OAIRepo::is_mirror_config_Set() const{
    return m_mirror_config_isSet;
}

bool OAIRepo::is_mirror_config_Valid() const{
    return m_mirror_config_isValid;
}

QString OAIRepo::getName() const {
    return m_name;
}
void OAIRepo::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRepo::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRepo::is_name_Valid() const{
    return m_name_isValid;
}

QMap<QString, OAIPubsubConfig> OAIRepo::getPubsubConfigs() const {
    return m_pubsub_configs;
}
void OAIRepo::setPubsubConfigs(const QMap<QString, OAIPubsubConfig> &pubsub_configs) {
    m_pubsub_configs = pubsub_configs;
    m_pubsub_configs_isSet = true;
}

bool OAIRepo::is_pubsub_configs_Set() const{
    return m_pubsub_configs_isSet;
}

bool OAIRepo::is_pubsub_configs_Valid() const{
    return m_pubsub_configs_isValid;
}

QString OAIRepo::getSize() const {
    return m_size;
}
void OAIRepo::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIRepo::is_size_Set() const{
    return m_size_isSet;
}

bool OAIRepo::is_size_Valid() const{
    return m_size_isValid;
}

QString OAIRepo::getUrl() const {
    return m_url;
}
void OAIRepo::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIRepo::is_url_Set() const{
    return m_url_isSet;
}

bool OAIRepo::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIRepo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mirror_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pubsub_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
