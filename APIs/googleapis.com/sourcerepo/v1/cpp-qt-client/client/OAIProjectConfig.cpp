/**
 * Cloud Source Repositories API
 * Accesses source code repositories hosted by Google.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectConfig::OAIProjectConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectConfig::OAIProjectConfig() {
    this->initializeModel();
}

OAIProjectConfig::~OAIProjectConfig() {}

void OAIProjectConfig::initializeModel() {

    m_enable_private_key_check_isSet = false;
    m_enable_private_key_check_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pubsub_configs_isSet = false;
    m_pubsub_configs_isValid = false;
}

void OAIProjectConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectConfig::fromJsonObject(QJsonObject json) {

    m_enable_private_key_check_isValid = ::OpenAPI::fromJsonValue(m_enable_private_key_check, json[QString("enablePrivateKeyCheck")]);
    m_enable_private_key_check_isSet = !json[QString("enablePrivateKeyCheck")].isNull() && m_enable_private_key_check_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pubsub_configs_isValid = ::OpenAPI::fromJsonValue(m_pubsub_configs, json[QString("pubsubConfigs")]);
    m_pubsub_configs_isSet = !json[QString("pubsubConfigs")].isNull() && m_pubsub_configs_isValid;
}

QString OAIProjectConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_private_key_check_isSet) {
        obj.insert(QString("enablePrivateKeyCheck"), ::OpenAPI::toJsonValue(m_enable_private_key_check));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pubsub_configs.size() > 0) {
        obj.insert(QString("pubsubConfigs"), ::OpenAPI::toJsonValue(m_pubsub_configs));
    }
    return obj;
}

bool OAIProjectConfig::isEnablePrivateKeyCheck() const {
    return m_enable_private_key_check;
}
void OAIProjectConfig::setEnablePrivateKeyCheck(const bool &enable_private_key_check) {
    m_enable_private_key_check = enable_private_key_check;
    m_enable_private_key_check_isSet = true;
}

bool OAIProjectConfig::is_enable_private_key_check_Set() const{
    return m_enable_private_key_check_isSet;
}

bool OAIProjectConfig::is_enable_private_key_check_Valid() const{
    return m_enable_private_key_check_isValid;
}

QString OAIProjectConfig::getName() const {
    return m_name;
}
void OAIProjectConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProjectConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProjectConfig::is_name_Valid() const{
    return m_name_isValid;
}

QMap<QString, OAIPubsubConfig> OAIProjectConfig::getPubsubConfigs() const {
    return m_pubsub_configs;
}
void OAIProjectConfig::setPubsubConfigs(const QMap<QString, OAIPubsubConfig> &pubsub_configs) {
    m_pubsub_configs = pubsub_configs;
    m_pubsub_configs_isSet = true;
}

bool OAIProjectConfig::is_pubsub_configs_Set() const{
    return m_pubsub_configs_isSet;
}

bool OAIProjectConfig::is_pubsub_configs_Valid() const{
    return m_pubsub_configs_isValid;
}

bool OAIProjectConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_private_key_check_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pubsub_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
