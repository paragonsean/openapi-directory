# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SyncRepoMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, start_time: str=None, status_message: str=None, update_time: str=None):
        """SyncRepoMetadata - a model defined in OpenAPI

        :param name: The name of this SyncRepoMetadata.
        :param start_time: The start_time of this SyncRepoMetadata.
        :param status_message: The status_message of this SyncRepoMetadata.
        :param update_time: The update_time of this SyncRepoMetadata.
        """
        self.openapi_types = {
            'name': str,
            'start_time': str,
            'status_message': str,
            'update_time': str
        }

        self.attribute_map = {
            'name': 'name',
            'start_time': 'startTime',
            'status_message': 'statusMessage',
            'update_time': 'updateTime'
        }

        self._name = name
        self._start_time = start_time
        self._status_message = status_message
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncRepoMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyncRepoMetadata of this SyncRepoMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this SyncRepoMetadata.

        The name of the repo being synchronized. Values are of the form `projects//repos/`.

        :return: The name of this SyncRepoMetadata.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SyncRepoMetadata.

        The name of the repo being synchronized. Values are of the form `projects//repos/`.

        :param name: The name of this SyncRepoMetadata.
        :type name: str
        """

        self._name = name

    @property
    def start_time(self):
        """Gets the start_time of this SyncRepoMetadata.

        The time this operation is started.

        :return: The start_time of this SyncRepoMetadata.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this SyncRepoMetadata.

        The time this operation is started.

        :param start_time: The start_time of this SyncRepoMetadata.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def status_message(self):
        """Gets the status_message of this SyncRepoMetadata.

        The latest status message on syncing the repository.

        :return: The status_message of this SyncRepoMetadata.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this SyncRepoMetadata.

        The latest status message on syncing the repository.

        :param status_message: The status_message of this SyncRepoMetadata.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def update_time(self):
        """Gets the update_time of this SyncRepoMetadata.

        The time this operation's status message is updated.

        :return: The update_time of this SyncRepoMetadata.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this SyncRepoMetadata.

        The time this operation's status message is updated.

        :param update_time: The update_time of this SyncRepoMetadata.
        :type update_time: str
        """

        self._update_time = update_time
