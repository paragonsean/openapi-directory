# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project_config import ProjectConfig
from openapi_server import util


class UpdateProjectConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_config: ProjectConfig=None, update_mask: str=None):
        """UpdateProjectConfigRequest - a model defined in OpenAPI

        :param project_config: The project_config of this UpdateProjectConfigRequest.
        :param update_mask: The update_mask of this UpdateProjectConfigRequest.
        """
        self.openapi_types = {
            'project_config': ProjectConfig,
            'update_mask': str
        }

        self.attribute_map = {
            'project_config': 'projectConfig',
            'update_mask': 'updateMask'
        }

        self._project_config = project_config
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateProjectConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateProjectConfigRequest of this UpdateProjectConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_config(self):
        """Gets the project_config of this UpdateProjectConfigRequest.


        :return: The project_config of this UpdateProjectConfigRequest.
        :rtype: ProjectConfig
        """
        return self._project_config

    @project_config.setter
    def project_config(self, project_config):
        """Sets the project_config of this UpdateProjectConfigRequest.


        :param project_config: The project_config of this UpdateProjectConfigRequest.
        :type project_config: ProjectConfig
        """

        self._project_config = project_config

    @property
    def update_mask(self):
        """Gets the update_mask of this UpdateProjectConfigRequest.

        A FieldMask specifying which fields of the project_config to modify. Only the fields in the mask will be modified. If no mask is provided, this request is no-op.

        :return: The update_mask of this UpdateProjectConfigRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this UpdateProjectConfigRequest.

        A FieldMask specifying which fields of the project_config to modify. Only the fields in the mask will be modified. If no mask is provided, this request is no-op.

        :param update_mask: The update_mask of this UpdateProjectConfigRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
