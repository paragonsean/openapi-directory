/**
 * Cloud Source Repositories API
 * Accesses source code repositories hosted by Google.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudSourceRepositoriesApi);
  }
}(this, function(expect, CloudSourceRepositoriesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudSourceRepositoriesApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('sourcerepoProjectsGetConfig', function() {
      it('should call sourcerepoProjectsGetConfig successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsGetConfig
        //instance.sourcerepoProjectsGetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposCreate', function() {
      it('should call sourcerepoProjectsReposCreate successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposCreate
        //instance.sourcerepoProjectsReposCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposDelete', function() {
      it('should call sourcerepoProjectsReposDelete successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposDelete
        //instance.sourcerepoProjectsReposDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposGet', function() {
      it('should call sourcerepoProjectsReposGet successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposGet
        //instance.sourcerepoProjectsReposGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposGetIamPolicy', function() {
      it('should call sourcerepoProjectsReposGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposGetIamPolicy
        //instance.sourcerepoProjectsReposGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposList', function() {
      it('should call sourcerepoProjectsReposList successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposList
        //instance.sourcerepoProjectsReposList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposPatch', function() {
      it('should call sourcerepoProjectsReposPatch successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposPatch
        //instance.sourcerepoProjectsReposPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposSetIamPolicy', function() {
      it('should call sourcerepoProjectsReposSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposSetIamPolicy
        //instance.sourcerepoProjectsReposSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposSync', function() {
      it('should call sourcerepoProjectsReposSync successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposSync
        //instance.sourcerepoProjectsReposSync(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsReposTestIamPermissions', function() {
      it('should call sourcerepoProjectsReposTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsReposTestIamPermissions
        //instance.sourcerepoProjectsReposTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcerepoProjectsUpdateConfig', function() {
      it('should call sourcerepoProjectsUpdateConfig successfully', function(done) {
        //uncomment below and update the code to test sourcerepoProjectsUpdateConfig
        //instance.sourcerepoProjectsUpdateConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
