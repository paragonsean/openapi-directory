/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsScriptTypeAddOnEntryPoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsScriptTypeAddOnEntryPoint::OAIGoogleAppsScriptTypeAddOnEntryPoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsScriptTypeAddOnEntryPoint::OAIGoogleAppsScriptTypeAddOnEntryPoint() {
    this->initializeModel();
}

OAIGoogleAppsScriptTypeAddOnEntryPoint::~OAIGoogleAppsScriptTypeAddOnEntryPoint() {}

void OAIGoogleAppsScriptTypeAddOnEntryPoint::initializeModel() {

    m_add_on_type_isSet = false;
    m_add_on_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_help_url_isSet = false;
    m_help_url_isValid = false;

    m_post_install_tip_url_isSet = false;
    m_post_install_tip_url_isValid = false;

    m_report_issue_url_isSet = false;
    m_report_issue_url_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleAppsScriptTypeAddOnEntryPoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsScriptTypeAddOnEntryPoint::fromJsonObject(QJsonObject json) {

    m_add_on_type_isValid = ::OpenAPI::fromJsonValue(m_add_on_type, json[QString("addOnType")]);
    m_add_on_type_isSet = !json[QString("addOnType")].isNull() && m_add_on_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_help_url_isValid = ::OpenAPI::fromJsonValue(m_help_url, json[QString("helpUrl")]);
    m_help_url_isSet = !json[QString("helpUrl")].isNull() && m_help_url_isValid;

    m_post_install_tip_url_isValid = ::OpenAPI::fromJsonValue(m_post_install_tip_url, json[QString("postInstallTipUrl")]);
    m_post_install_tip_url_isSet = !json[QString("postInstallTipUrl")].isNull() && m_post_install_tip_url_isValid;

    m_report_issue_url_isValid = ::OpenAPI::fromJsonValue(m_report_issue_url, json[QString("reportIssueUrl")]);
    m_report_issue_url_isSet = !json[QString("reportIssueUrl")].isNull() && m_report_issue_url_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleAppsScriptTypeAddOnEntryPoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsScriptTypeAddOnEntryPoint::asJsonObject() const {
    QJsonObject obj;
    if (m_add_on_type_isSet) {
        obj.insert(QString("addOnType"), ::OpenAPI::toJsonValue(m_add_on_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_help_url_isSet) {
        obj.insert(QString("helpUrl"), ::OpenAPI::toJsonValue(m_help_url));
    }
    if (m_post_install_tip_url_isSet) {
        obj.insert(QString("postInstallTipUrl"), ::OpenAPI::toJsonValue(m_post_install_tip_url));
    }
    if (m_report_issue_url_isSet) {
        obj.insert(QString("reportIssueUrl"), ::OpenAPI::toJsonValue(m_report_issue_url));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIGoogleAppsScriptTypeAddOnEntryPoint::getAddOnType() const {
    return m_add_on_type;
}
void OAIGoogleAppsScriptTypeAddOnEntryPoint::setAddOnType(const QString &add_on_type) {
    m_add_on_type = add_on_type;
    m_add_on_type_isSet = true;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_add_on_type_Set() const{
    return m_add_on_type_isSet;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_add_on_type_Valid() const{
    return m_add_on_type_isValid;
}

QString OAIGoogleAppsScriptTypeAddOnEntryPoint::getDescription() const {
    return m_description;
}
void OAIGoogleAppsScriptTypeAddOnEntryPoint::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleAppsScriptTypeAddOnEntryPoint::getHelpUrl() const {
    return m_help_url;
}
void OAIGoogleAppsScriptTypeAddOnEntryPoint::setHelpUrl(const QString &help_url) {
    m_help_url = help_url;
    m_help_url_isSet = true;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_help_url_Set() const{
    return m_help_url_isSet;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_help_url_Valid() const{
    return m_help_url_isValid;
}

QString OAIGoogleAppsScriptTypeAddOnEntryPoint::getPostInstallTipUrl() const {
    return m_post_install_tip_url;
}
void OAIGoogleAppsScriptTypeAddOnEntryPoint::setPostInstallTipUrl(const QString &post_install_tip_url) {
    m_post_install_tip_url = post_install_tip_url;
    m_post_install_tip_url_isSet = true;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_post_install_tip_url_Set() const{
    return m_post_install_tip_url_isSet;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_post_install_tip_url_Valid() const{
    return m_post_install_tip_url_isValid;
}

QString OAIGoogleAppsScriptTypeAddOnEntryPoint::getReportIssueUrl() const {
    return m_report_issue_url;
}
void OAIGoogleAppsScriptTypeAddOnEntryPoint::setReportIssueUrl(const QString &report_issue_url) {
    m_report_issue_url = report_issue_url;
    m_report_issue_url_isSet = true;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_report_issue_url_Set() const{
    return m_report_issue_url_isSet;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_report_issue_url_Valid() const{
    return m_report_issue_url_isValid;
}

QString OAIGoogleAppsScriptTypeAddOnEntryPoint::getTitle() const {
    return m_title;
}
void OAIGoogleAppsScriptTypeAddOnEntryPoint::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_on_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_install_tip_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_issue_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsScriptTypeAddOnEntryPoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
