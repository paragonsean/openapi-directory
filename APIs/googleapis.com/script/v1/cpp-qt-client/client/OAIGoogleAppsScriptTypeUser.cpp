/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsScriptTypeUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsScriptTypeUser::OAIGoogleAppsScriptTypeUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsScriptTypeUser::OAIGoogleAppsScriptTypeUser() {
    this->initializeModel();
}

OAIGoogleAppsScriptTypeUser::~OAIGoogleAppsScriptTypeUser() {}

void OAIGoogleAppsScriptTypeUser::initializeModel() {

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_photo_url_isSet = false;
    m_photo_url_isValid = false;
}

void OAIGoogleAppsScriptTypeUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsScriptTypeUser::fromJsonObject(QJsonObject json) {

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_photo_url_isValid = ::OpenAPI::fromJsonValue(m_photo_url, json[QString("photoUrl")]);
    m_photo_url_isSet = !json[QString("photoUrl")].isNull() && m_photo_url_isValid;
}

QString OAIGoogleAppsScriptTypeUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsScriptTypeUser::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_photo_url_isSet) {
        obj.insert(QString("photoUrl"), ::OpenAPI::toJsonValue(m_photo_url));
    }
    return obj;
}

QString OAIGoogleAppsScriptTypeUser::getDomain() const {
    return m_domain;
}
void OAIGoogleAppsScriptTypeUser::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAIGoogleAppsScriptTypeUser::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAIGoogleAppsScriptTypeUser::is_domain_Valid() const{
    return m_domain_isValid;
}

QString OAIGoogleAppsScriptTypeUser::getEmail() const {
    return m_email;
}
void OAIGoogleAppsScriptTypeUser::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIGoogleAppsScriptTypeUser::is_email_Set() const{
    return m_email_isSet;
}

bool OAIGoogleAppsScriptTypeUser::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIGoogleAppsScriptTypeUser::getName() const {
    return m_name;
}
void OAIGoogleAppsScriptTypeUser::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAppsScriptTypeUser::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAppsScriptTypeUser::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAppsScriptTypeUser::getPhotoUrl() const {
    return m_photo_url;
}
void OAIGoogleAppsScriptTypeUser::setPhotoUrl(const QString &photo_url) {
    m_photo_url = photo_url;
    m_photo_url_isSet = true;
}

bool OAIGoogleAppsScriptTypeUser::is_photo_url_Set() const{
    return m_photo_url_isSet;
}

bool OAIGoogleAppsScriptTypeUser::is_photo_url_Valid() const{
    return m_photo_url_isValid;
}

bool OAIGoogleAppsScriptTypeUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_photo_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsScriptTypeUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
