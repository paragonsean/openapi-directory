/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAppsScriptTypeProcess.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAppsScriptTypeProcess::OAIGoogleAppsScriptTypeProcess(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAppsScriptTypeProcess::OAIGoogleAppsScriptTypeProcess() {
    this->initializeModel();
}

OAIGoogleAppsScriptTypeProcess::~OAIGoogleAppsScriptTypeProcess() {}

void OAIGoogleAppsScriptTypeProcess::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_function_name_isSet = false;
    m_function_name_isValid = false;

    m_process_status_isSet = false;
    m_process_status_isValid = false;

    m_process_type_isSet = false;
    m_process_type_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_runtime_version_isSet = false;
    m_runtime_version_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_user_access_level_isSet = false;
    m_user_access_level_isValid = false;
}

void OAIGoogleAppsScriptTypeProcess::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAppsScriptTypeProcess::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_function_name_isValid = ::OpenAPI::fromJsonValue(m_function_name, json[QString("functionName")]);
    m_function_name_isSet = !json[QString("functionName")].isNull() && m_function_name_isValid;

    m_process_status_isValid = ::OpenAPI::fromJsonValue(m_process_status, json[QString("processStatus")]);
    m_process_status_isSet = !json[QString("processStatus")].isNull() && m_process_status_isValid;

    m_process_type_isValid = ::OpenAPI::fromJsonValue(m_process_type, json[QString("processType")]);
    m_process_type_isSet = !json[QString("processType")].isNull() && m_process_type_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("projectName")]);
    m_project_name_isSet = !json[QString("projectName")].isNull() && m_project_name_isValid;

    m_runtime_version_isValid = ::OpenAPI::fromJsonValue(m_runtime_version, json[QString("runtimeVersion")]);
    m_runtime_version_isSet = !json[QString("runtimeVersion")].isNull() && m_runtime_version_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_user_access_level_isValid = ::OpenAPI::fromJsonValue(m_user_access_level, json[QString("userAccessLevel")]);
    m_user_access_level_isSet = !json[QString("userAccessLevel")].isNull() && m_user_access_level_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAppsScriptTypeProcess::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_function_name_isSet) {
        obj.insert(QString("functionName"), ::OpenAPI::toJsonValue(m_function_name));
    }
    if (m_process_status_isSet) {
        obj.insert(QString("processStatus"), ::OpenAPI::toJsonValue(m_process_status));
    }
    if (m_process_type_isSet) {
        obj.insert(QString("processType"), ::OpenAPI::toJsonValue(m_process_type));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("projectName"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_runtime_version_isSet) {
        obj.insert(QString("runtimeVersion"), ::OpenAPI::toJsonValue(m_runtime_version));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_user_access_level_isSet) {
        obj.insert(QString("userAccessLevel"), ::OpenAPI::toJsonValue(m_user_access_level));
    }
    return obj;
}

QString OAIGoogleAppsScriptTypeProcess::getDuration() const {
    return m_duration;
}
void OAIGoogleAppsScriptTypeProcess::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::getFunctionName() const {
    return m_function_name;
}
void OAIGoogleAppsScriptTypeProcess::setFunctionName(const QString &function_name) {
    m_function_name = function_name;
    m_function_name_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_function_name_Set() const{
    return m_function_name_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_function_name_Valid() const{
    return m_function_name_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::getProcessStatus() const {
    return m_process_status;
}
void OAIGoogleAppsScriptTypeProcess::setProcessStatus(const QString &process_status) {
    m_process_status = process_status;
    m_process_status_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_process_status_Set() const{
    return m_process_status_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_process_status_Valid() const{
    return m_process_status_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::getProcessType() const {
    return m_process_type;
}
void OAIGoogleAppsScriptTypeProcess::setProcessType(const QString &process_type) {
    m_process_type = process_type;
    m_process_type_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_process_type_Set() const{
    return m_process_type_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_process_type_Valid() const{
    return m_process_type_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::getProjectName() const {
    return m_project_name;
}
void OAIGoogleAppsScriptTypeProcess::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::getRuntimeVersion() const {
    return m_runtime_version;
}
void OAIGoogleAppsScriptTypeProcess::setRuntimeVersion(const QString &runtime_version) {
    m_runtime_version = runtime_version;
    m_runtime_version_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_runtime_version_Set() const{
    return m_runtime_version_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_runtime_version_Valid() const{
    return m_runtime_version_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::getStartTime() const {
    return m_start_time;
}
void OAIGoogleAppsScriptTypeProcess::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleAppsScriptTypeProcess::getUserAccessLevel() const {
    return m_user_access_level;
}
void OAIGoogleAppsScriptTypeProcess::setUserAccessLevel(const QString &user_access_level) {
    m_user_access_level = user_access_level;
    m_user_access_level_isSet = true;
}

bool OAIGoogleAppsScriptTypeProcess::is_user_access_level_Set() const{
    return m_user_access_level_isSet;
}

bool OAIGoogleAppsScriptTypeProcess::is_user_access_level_Valid() const{
    return m_user_access_level_isValid;
}

bool OAIGoogleAppsScriptTypeProcess::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_function_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_process_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_process_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_access_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAppsScriptTypeProcess::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
