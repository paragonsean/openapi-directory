/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProject::OAIProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProject::OAIProject() {
    this->initializeModel();
}

OAIProject::~OAIProject() {}

void OAIProject::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_creator_isSet = false;
    m_creator_isValid = false;

    m_last_modify_user_isSet = false;
    m_last_modify_user_isValid = false;

    m_parent_id_isSet = false;
    m_parent_id_isValid = false;

    m_script_id_isSet = false;
    m_script_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProject::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_creator_isValid = ::OpenAPI::fromJsonValue(m_creator, json[QString("creator")]);
    m_creator_isSet = !json[QString("creator")].isNull() && m_creator_isValid;

    m_last_modify_user_isValid = ::OpenAPI::fromJsonValue(m_last_modify_user, json[QString("lastModifyUser")]);
    m_last_modify_user_isSet = !json[QString("lastModifyUser")].isNull() && m_last_modify_user_isValid;

    m_parent_id_isValid = ::OpenAPI::fromJsonValue(m_parent_id, json[QString("parentId")]);
    m_parent_id_isSet = !json[QString("parentId")].isNull() && m_parent_id_isValid;

    m_script_id_isValid = ::OpenAPI::fromJsonValue(m_script_id, json[QString("scriptId")]);
    m_script_id_isSet = !json[QString("scriptId")].isNull() && m_script_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProject::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_creator.isSet()) {
        obj.insert(QString("creator"), ::OpenAPI::toJsonValue(m_creator));
    }
    if (m_last_modify_user.isSet()) {
        obj.insert(QString("lastModifyUser"), ::OpenAPI::toJsonValue(m_last_modify_user));
    }
    if (m_parent_id_isSet) {
        obj.insert(QString("parentId"), ::OpenAPI::toJsonValue(m_parent_id));
    }
    if (m_script_id_isSet) {
        obj.insert(QString("scriptId"), ::OpenAPI::toJsonValue(m_script_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIProject::getCreateTime() const {
    return m_create_time;
}
void OAIProject::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIProject::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIProject::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleAppsScriptTypeUser OAIProject::getCreator() const {
    return m_creator;
}
void OAIProject::setCreator(const OAIGoogleAppsScriptTypeUser &creator) {
    m_creator = creator;
    m_creator_isSet = true;
}

bool OAIProject::is_creator_Set() const{
    return m_creator_isSet;
}

bool OAIProject::is_creator_Valid() const{
    return m_creator_isValid;
}

OAIGoogleAppsScriptTypeUser OAIProject::getLastModifyUser() const {
    return m_last_modify_user;
}
void OAIProject::setLastModifyUser(const OAIGoogleAppsScriptTypeUser &last_modify_user) {
    m_last_modify_user = last_modify_user;
    m_last_modify_user_isSet = true;
}

bool OAIProject::is_last_modify_user_Set() const{
    return m_last_modify_user_isSet;
}

bool OAIProject::is_last_modify_user_Valid() const{
    return m_last_modify_user_isValid;
}

QString OAIProject::getParentId() const {
    return m_parent_id;
}
void OAIProject::setParentId(const QString &parent_id) {
    m_parent_id = parent_id;
    m_parent_id_isSet = true;
}

bool OAIProject::is_parent_id_Set() const{
    return m_parent_id_isSet;
}

bool OAIProject::is_parent_id_Valid() const{
    return m_parent_id_isValid;
}

QString OAIProject::getScriptId() const {
    return m_script_id;
}
void OAIProject::setScriptId(const QString &script_id) {
    m_script_id = script_id;
    m_script_id_isSet = true;
}

bool OAIProject::is_script_id_Set() const{
    return m_script_id_isSet;
}

bool OAIProject::is_script_id_Valid() const{
    return m_script_id_isValid;
}

QString OAIProject::getTitle() const {
    return m_title;
}
void OAIProject::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIProject::is_title_Set() const{
    return m_title_isSet;
}

bool OAIProject::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIProject::getUpdateTime() const {
    return m_update_time;
}
void OAIProject::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIProject::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIProject::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modify_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_script_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
