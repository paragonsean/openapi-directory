/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntryPoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntryPoint::OAIEntryPoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntryPoint::OAIEntryPoint() {
    this->initializeModel();
}

OAIEntryPoint::~OAIEntryPoint() {}

void OAIEntryPoint::initializeModel() {

    m_add_on_isSet = false;
    m_add_on_isValid = false;

    m_entry_point_type_isSet = false;
    m_entry_point_type_isValid = false;

    m_execution_api_isSet = false;
    m_execution_api_isValid = false;

    m_web_app_isSet = false;
    m_web_app_isValid = false;
}

void OAIEntryPoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntryPoint::fromJsonObject(QJsonObject json) {

    m_add_on_isValid = ::OpenAPI::fromJsonValue(m_add_on, json[QString("addOn")]);
    m_add_on_isSet = !json[QString("addOn")].isNull() && m_add_on_isValid;

    m_entry_point_type_isValid = ::OpenAPI::fromJsonValue(m_entry_point_type, json[QString("entryPointType")]);
    m_entry_point_type_isSet = !json[QString("entryPointType")].isNull() && m_entry_point_type_isValid;

    m_execution_api_isValid = ::OpenAPI::fromJsonValue(m_execution_api, json[QString("executionApi")]);
    m_execution_api_isSet = !json[QString("executionApi")].isNull() && m_execution_api_isValid;

    m_web_app_isValid = ::OpenAPI::fromJsonValue(m_web_app, json[QString("webApp")]);
    m_web_app_isSet = !json[QString("webApp")].isNull() && m_web_app_isValid;
}

QString OAIEntryPoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntryPoint::asJsonObject() const {
    QJsonObject obj;
    if (m_add_on.isSet()) {
        obj.insert(QString("addOn"), ::OpenAPI::toJsonValue(m_add_on));
    }
    if (m_entry_point_type_isSet) {
        obj.insert(QString("entryPointType"), ::OpenAPI::toJsonValue(m_entry_point_type));
    }
    if (m_execution_api.isSet()) {
        obj.insert(QString("executionApi"), ::OpenAPI::toJsonValue(m_execution_api));
    }
    if (m_web_app.isSet()) {
        obj.insert(QString("webApp"), ::OpenAPI::toJsonValue(m_web_app));
    }
    return obj;
}

OAIGoogleAppsScriptTypeAddOnEntryPoint OAIEntryPoint::getAddOn() const {
    return m_add_on;
}
void OAIEntryPoint::setAddOn(const OAIGoogleAppsScriptTypeAddOnEntryPoint &add_on) {
    m_add_on = add_on;
    m_add_on_isSet = true;
}

bool OAIEntryPoint::is_add_on_Set() const{
    return m_add_on_isSet;
}

bool OAIEntryPoint::is_add_on_Valid() const{
    return m_add_on_isValid;
}

QString OAIEntryPoint::getEntryPointType() const {
    return m_entry_point_type;
}
void OAIEntryPoint::setEntryPointType(const QString &entry_point_type) {
    m_entry_point_type = entry_point_type;
    m_entry_point_type_isSet = true;
}

bool OAIEntryPoint::is_entry_point_type_Set() const{
    return m_entry_point_type_isSet;
}

bool OAIEntryPoint::is_entry_point_type_Valid() const{
    return m_entry_point_type_isValid;
}

OAIGoogleAppsScriptTypeExecutionApiEntryPoint OAIEntryPoint::getExecutionApi() const {
    return m_execution_api;
}
void OAIEntryPoint::setExecutionApi(const OAIGoogleAppsScriptTypeExecutionApiEntryPoint &execution_api) {
    m_execution_api = execution_api;
    m_execution_api_isSet = true;
}

bool OAIEntryPoint::is_execution_api_Set() const{
    return m_execution_api_isSet;
}

bool OAIEntryPoint::is_execution_api_Valid() const{
    return m_execution_api_isValid;
}

OAIGoogleAppsScriptTypeWebAppEntryPoint OAIEntryPoint::getWebApp() const {
    return m_web_app;
}
void OAIEntryPoint::setWebApp(const OAIGoogleAppsScriptTypeWebAppEntryPoint &web_app) {
    m_web_app = web_app;
    m_web_app_isSet = true;
}

bool OAIEntryPoint::is_web_app_Set() const{
    return m_web_app_isSet;
}

bool OAIEntryPoint::is_web_app_Valid() const{
    return m_web_app_isValid;
}

bool OAIEntryPoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_on.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entry_point_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_api.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_app.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntryPoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
