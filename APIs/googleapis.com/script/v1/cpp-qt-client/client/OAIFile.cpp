/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFile::OAIFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFile::OAIFile() {
    this->initializeModel();
}

OAIFile::~OAIFile() {}

void OAIFile::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_function_set_isSet = false;
    m_function_set_isValid = false;

    m_last_modify_user_isSet = false;
    m_last_modify_user_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFile::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_function_set_isValid = ::OpenAPI::fromJsonValue(m_function_set, json[QString("functionSet")]);
    m_function_set_isSet = !json[QString("functionSet")].isNull() && m_function_set_isValid;

    m_last_modify_user_isValid = ::OpenAPI::fromJsonValue(m_last_modify_user, json[QString("lastModifyUser")]);
    m_last_modify_user_isSet = !json[QString("lastModifyUser")].isNull() && m_last_modify_user_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFile::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_function_set.isSet()) {
        obj.insert(QString("functionSet"), ::OpenAPI::toJsonValue(m_function_set));
    }
    if (m_last_modify_user.isSet()) {
        obj.insert(QString("lastModifyUser"), ::OpenAPI::toJsonValue(m_last_modify_user));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIFile::getCreateTime() const {
    return m_create_time;
}
void OAIFile::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIFile::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIFile::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleAppsScriptTypeFunctionSet OAIFile::getFunctionSet() const {
    return m_function_set;
}
void OAIFile::setFunctionSet(const OAIGoogleAppsScriptTypeFunctionSet &function_set) {
    m_function_set = function_set;
    m_function_set_isSet = true;
}

bool OAIFile::is_function_set_Set() const{
    return m_function_set_isSet;
}

bool OAIFile::is_function_set_Valid() const{
    return m_function_set_isValid;
}

OAIGoogleAppsScriptTypeUser OAIFile::getLastModifyUser() const {
    return m_last_modify_user;
}
void OAIFile::setLastModifyUser(const OAIGoogleAppsScriptTypeUser &last_modify_user) {
    m_last_modify_user = last_modify_user;
    m_last_modify_user_isSet = true;
}

bool OAIFile::is_last_modify_user_Set() const{
    return m_last_modify_user_isSet;
}

bool OAIFile::is_last_modify_user_Valid() const{
    return m_last_modify_user_isValid;
}

QString OAIFile::getName() const {
    return m_name;
}
void OAIFile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFile::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIFile::getSource() const {
    return m_source;
}
void OAIFile::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIFile::is_source_Set() const{
    return m_source_isSet;
}

bool OAIFile::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIFile::getType() const {
    return m_type;
}
void OAIFile::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIFile::is_type_Set() const{
    return m_type_isSet;
}

bool OAIFile::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIFile::getUpdateTime() const {
    return m_update_time;
}
void OAIFile::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIFile::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIFile::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_function_set.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modify_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
