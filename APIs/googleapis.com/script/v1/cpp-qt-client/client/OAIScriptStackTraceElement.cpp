/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScriptStackTraceElement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScriptStackTraceElement::OAIScriptStackTraceElement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScriptStackTraceElement::OAIScriptStackTraceElement() {
    this->initializeModel();
}

OAIScriptStackTraceElement::~OAIScriptStackTraceElement() {}

void OAIScriptStackTraceElement::initializeModel() {

    m_function_isSet = false;
    m_function_isValid = false;

    m_line_number_isSet = false;
    m_line_number_isValid = false;
}

void OAIScriptStackTraceElement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScriptStackTraceElement::fromJsonObject(QJsonObject json) {

    m_function_isValid = ::OpenAPI::fromJsonValue(m_function, json[QString("function")]);
    m_function_isSet = !json[QString("function")].isNull() && m_function_isValid;

    m_line_number_isValid = ::OpenAPI::fromJsonValue(m_line_number, json[QString("lineNumber")]);
    m_line_number_isSet = !json[QString("lineNumber")].isNull() && m_line_number_isValid;
}

QString OAIScriptStackTraceElement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScriptStackTraceElement::asJsonObject() const {
    QJsonObject obj;
    if (m_function_isSet) {
        obj.insert(QString("function"), ::OpenAPI::toJsonValue(m_function));
    }
    if (m_line_number_isSet) {
        obj.insert(QString("lineNumber"), ::OpenAPI::toJsonValue(m_line_number));
    }
    return obj;
}

QString OAIScriptStackTraceElement::getFunction() const {
    return m_function;
}
void OAIScriptStackTraceElement::setFunction(const QString &function) {
    m_function = function;
    m_function_isSet = true;
}

bool OAIScriptStackTraceElement::is_function_Set() const{
    return m_function_isSet;
}

bool OAIScriptStackTraceElement::is_function_Valid() const{
    return m_function_isValid;
}

qint32 OAIScriptStackTraceElement::getLineNumber() const {
    return m_line_number;
}
void OAIScriptStackTraceElement::setLineNumber(const qint32 &line_number) {
    m_line_number = line_number;
    m_line_number_isSet = true;
}

bool OAIScriptStackTraceElement::is_line_number_Set() const{
    return m_line_number_isSet;
}

bool OAIScriptStackTraceElement::is_line_number_Valid() const{
    return m_line_number_isValid;
}

bool OAIScriptStackTraceElement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_function_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScriptStackTraceElement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
