/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AppsScriptApi);
  }
}(this, function(expect, AppsScriptApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AppsScriptApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('scriptProjectsCreate', function() {
      it('should call scriptProjectsCreate successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsCreate
        //instance.scriptProjectsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsDeploymentsCreate', function() {
      it('should call scriptProjectsDeploymentsCreate successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsDeploymentsCreate
        //instance.scriptProjectsDeploymentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsDeploymentsDelete', function() {
      it('should call scriptProjectsDeploymentsDelete successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsDeploymentsDelete
        //instance.scriptProjectsDeploymentsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsDeploymentsGet', function() {
      it('should call scriptProjectsDeploymentsGet successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsDeploymentsGet
        //instance.scriptProjectsDeploymentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsDeploymentsList', function() {
      it('should call scriptProjectsDeploymentsList successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsDeploymentsList
        //instance.scriptProjectsDeploymentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsDeploymentsUpdate', function() {
      it('should call scriptProjectsDeploymentsUpdate successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsDeploymentsUpdate
        //instance.scriptProjectsDeploymentsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsGet', function() {
      it('should call scriptProjectsGet successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsGet
        //instance.scriptProjectsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsGetContent', function() {
      it('should call scriptProjectsGetContent successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsGetContent
        //instance.scriptProjectsGetContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsGetMetrics', function() {
      it('should call scriptProjectsGetMetrics successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsGetMetrics
        //instance.scriptProjectsGetMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsUpdateContent', function() {
      it('should call scriptProjectsUpdateContent successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsUpdateContent
        //instance.scriptProjectsUpdateContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsVersionsCreate', function() {
      it('should call scriptProjectsVersionsCreate successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsVersionsCreate
        //instance.scriptProjectsVersionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsVersionsGet', function() {
      it('should call scriptProjectsVersionsGet successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsVersionsGet
        //instance.scriptProjectsVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scriptProjectsVersionsList', function() {
      it('should call scriptProjectsVersionsList successfully', function(done) {
        //uncomment below and update the code to test scriptProjectsVersionsList
        //instance.scriptProjectsVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
