/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScriptStackTraceElement from './ScriptStackTraceElement';

/**
 * The ExecutionError model module.
 * @module model/ExecutionError
 * @version v1
 */
class ExecutionError {
    /**
     * Constructs a new <code>ExecutionError</code>.
     * An object that provides information about the nature of an error resulting from an attempted execution of a script function using the Apps Script API. If a run call succeeds but the script function (or Apps Script itself) throws an exception, the response body&#39;s error field contains a Status object. The &#x60;Status&#x60; object&#39;s &#x60;details&#x60; field contains an array with a single one of these &#x60;ExecutionError&#x60; objects.
     * @alias module:model/ExecutionError
     */
    constructor() { 
        
        ExecutionError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExecutionError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecutionError} obj Optional instance to populate.
     * @return {module:model/ExecutionError} The populated <code>ExecutionError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecutionError();

            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('errorType')) {
                obj['errorType'] = ApiClient.convertToType(data['errorType'], 'String');
            }
            if (data.hasOwnProperty('scriptStackTraceElements')) {
                obj['scriptStackTraceElements'] = ApiClient.convertToType(data['scriptStackTraceElements'], [ScriptStackTraceElement]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecutionError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecutionError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['errorType'] && !(typeof data['errorType'] === 'string' || data['errorType'] instanceof String)) {
            throw new Error("Expected the field `errorType` to be a primitive type in the JSON string but got " + data['errorType']);
        }
        if (data['scriptStackTraceElements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['scriptStackTraceElements'])) {
                throw new Error("Expected the field `scriptStackTraceElements` to be an array in the JSON data but got " + data['scriptStackTraceElements']);
            }
            // validate the optional field `scriptStackTraceElements` (array)
            for (const item of data['scriptStackTraceElements']) {
                ScriptStackTraceElement.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The error message thrown by Apps Script, usually localized into the user's language.
 * @member {String} errorMessage
 */
ExecutionError.prototype['errorMessage'] = undefined;

/**
 * The error type, for example `TypeError` or `ReferenceError`. If the error type is unavailable, this field is not included.
 * @member {String} errorType
 */
ExecutionError.prototype['errorType'] = undefined;

/**
 * An array of objects that provide a stack trace through the script to show where the execution failed, with the deepest call first.
 * @member {Array.<module:model/ScriptStackTraceElement>} scriptStackTraceElements
 */
ExecutionError.prototype['scriptStackTraceElements'] = undefined;






export default ExecutionError;

