/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Value from './Value';

/**
 * The ScriptExecutionResult model module.
 * @module model/ScriptExecutionResult
 * @version v1
 */
class ScriptExecutionResult {
    /**
     * Constructs a new <code>ScriptExecutionResult</code>.
     * The result of an execution.
     * @alias module:model/ScriptExecutionResult
     */
    constructor() { 
        
        ScriptExecutionResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScriptExecutionResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScriptExecutionResult} obj Optional instance to populate.
     * @return {module:model/ScriptExecutionResult} The populated <code>ScriptExecutionResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScriptExecutionResult();

            if (data.hasOwnProperty('returnValue')) {
                obj['returnValue'] = Value.constructFromObject(data['returnValue']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScriptExecutionResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScriptExecutionResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `returnValue`
        if (data['returnValue']) { // data not null
          Value.validateJSON(data['returnValue']);
        }

        return true;
    }


}



/**
 * @member {module:model/Value} returnValue
 */
ScriptExecutionResult.prototype['returnValue'] = undefined;






export default ScriptExecutionResult;

