/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExecutionRequest model module.
 * @module model/ExecutionRequest
 * @version v1
 */
class ExecutionRequest {
    /**
     * Constructs a new <code>ExecutionRequest</code>.
     * A request to run the function in a script. The script is identified by the specified &#x60;script_id&#x60;. Executing a function on a script returns results based on the implementation of the script.
     * @alias module:model/ExecutionRequest
     */
    constructor() { 
        
        ExecutionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExecutionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecutionRequest} obj Optional instance to populate.
     * @return {module:model/ExecutionRequest} The populated <code>ExecutionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecutionRequest();

            if (data.hasOwnProperty('devMode')) {
                obj['devMode'] = ApiClient.convertToType(data['devMode'], 'Boolean');
            }
            if (data.hasOwnProperty('function')) {
                obj['function'] = ApiClient.convertToType(data['function'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [Object]);
            }
            if (data.hasOwnProperty('sessionState')) {
                obj['sessionState'] = ApiClient.convertToType(data['sessionState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecutionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecutionRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['function'] && !(typeof data['function'] === 'string' || data['function'] instanceof String)) {
            throw new Error("Expected the field `function` to be a primitive type in the JSON string but got " + data['function']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['parameters'])) {
            throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
        }
        // ensure the json data is a string
        if (data['sessionState'] && !(typeof data['sessionState'] === 'string' || data['sessionState'] instanceof String)) {
            throw new Error("Expected the field `sessionState` to be a primitive type in the JSON string but got " + data['sessionState']);
        }

        return true;
    }


}



/**
 * If `true` and the user is an owner of the script, the script runs at the most recently saved version rather than the version deployed for use with the Apps Script API. Optional; default is `false`.
 * @member {Boolean} devMode
 */
ExecutionRequest.prototype['devMode'] = undefined;

/**
 * The name of the function to execute in the given script. The name does not include parentheses or parameters. It can reference a function in an included library such as `Library.libFunction1`.
 * @member {String} function
 */
ExecutionRequest.prototype['function'] = undefined;

/**
 * The parameters to be passed to the function being executed. The object type for each parameter should match the expected type in Apps Script. Parameters cannot be Apps Script-specific object types (such as a `Document` or a `Calendar`); they can only be primitive types such as `string`, `number`, `array`, `object`, or `boolean`. Optional.
 * @member {Array.<Object>} parameters
 */
ExecutionRequest.prototype['parameters'] = undefined;

/**
 * *Deprecated*. For use with Android add-ons only. An ID that represents the user's current session in the Android app for Google Docs or Sheets, included as extra data in the [Intent](https://developer.android.com/guide/components/intents-filters.html) that launches the add-on. When an Android add-on is run with a session state, it gains the privileges of a [bound](https://developers.google.com/apps-script/guides/bound) scriptâ€”that is, it can access information like the user's current cursor position (in Docs) or selected cell (in Sheets). To retrieve the state, call `Intent.getStringExtra(\"com.google.android.apps.docs.addons.SessionState\")`. Optional.
 * @member {String} sessionState
 */
ExecutionRequest.prototype['sessionState'] = undefined;






export default ExecutionRequest;

