/**
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAppsScriptTypeUser from './GoogleAppsScriptTypeUser';

/**
 * The Project model module.
 * @module model/Project
 * @version v1
 */
class Project {
    /**
     * Constructs a new <code>Project</code>.
     * The script project resource.
     * @alias module:model/Project
     */
    constructor() { 
        
        Project.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Project</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Project} obj Optional instance to populate.
     * @return {module:model/Project} The populated <code>Project</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Project();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('creator')) {
                obj['creator'] = GoogleAppsScriptTypeUser.constructFromObject(data['creator']);
            }
            if (data.hasOwnProperty('lastModifyUser')) {
                obj['lastModifyUser'] = GoogleAppsScriptTypeUser.constructFromObject(data['lastModifyUser']);
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'String');
            }
            if (data.hasOwnProperty('scriptId')) {
                obj['scriptId'] = ApiClient.convertToType(data['scriptId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Project</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Project</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `creator`
        if (data['creator']) { // data not null
          GoogleAppsScriptTypeUser.validateJSON(data['creator']);
        }
        // validate the optional field `lastModifyUser`
        if (data['lastModifyUser']) { // data not null
          GoogleAppsScriptTypeUser.validateJSON(data['lastModifyUser']);
        }
        // ensure the json data is a string
        if (data['parentId'] && !(typeof data['parentId'] === 'string' || data['parentId'] instanceof String)) {
            throw new Error("Expected the field `parentId` to be a primitive type in the JSON string but got " + data['parentId']);
        }
        // ensure the json data is a string
        if (data['scriptId'] && !(typeof data['scriptId'] === 'string' || data['scriptId'] instanceof String)) {
            throw new Error("Expected the field `scriptId` to be a primitive type in the JSON string but got " + data['scriptId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * When the script was created.
 * @member {String} createTime
 */
Project.prototype['createTime'] = undefined;

/**
 * @member {module:model/GoogleAppsScriptTypeUser} creator
 */
Project.prototype['creator'] = undefined;

/**
 * @member {module:model/GoogleAppsScriptTypeUser} lastModifyUser
 */
Project.prototype['lastModifyUser'] = undefined;

/**
 * The parent's Drive ID that the script will be attached to. This is usually the ID of a Google Document or Google Sheet. This filed is optional, and if not set, a stand-alone script will be created.
 * @member {String} parentId
 */
Project.prototype['parentId'] = undefined;

/**
 * The script project's Drive ID.
 * @member {String} scriptId
 */
Project.prototype['scriptId'] = undefined;

/**
 * The title for the project.
 * @member {String} title
 */
Project.prototype['title'] = undefined;

/**
 * When the script was last updated.
 * @member {String} updateTime
 */
Project.prototype['updateTime'] = undefined;






export default Project;

