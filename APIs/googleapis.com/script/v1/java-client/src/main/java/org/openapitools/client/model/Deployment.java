/*
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeploymentConfig;
import org.openapitools.client.model.EntryPoint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Representation of a single script deployment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:22.086382-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Deployment {
  public static final String SERIALIZED_NAME_DEPLOYMENT_CONFIG = "deploymentConfig";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_CONFIG)
  private DeploymentConfig deploymentConfig;

  public static final String SERIALIZED_NAME_DEPLOYMENT_ID = "deploymentId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ID)
  private String deploymentId;

  public static final String SERIALIZED_NAME_ENTRY_POINTS = "entryPoints";
  @SerializedName(SERIALIZED_NAME_ENTRY_POINTS)
  private List<EntryPoint> entryPoints = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public Deployment() {
  }

  public Deployment deploymentConfig(DeploymentConfig deploymentConfig) {
    this.deploymentConfig = deploymentConfig;
    return this;
  }

  /**
   * Get deploymentConfig
   * @return deploymentConfig
   */
  @javax.annotation.Nullable
  public DeploymentConfig getDeploymentConfig() {
    return deploymentConfig;
  }

  public void setDeploymentConfig(DeploymentConfig deploymentConfig) {
    this.deploymentConfig = deploymentConfig;
  }


  public Deployment deploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

  /**
   * The deployment ID for this deployment.
   * @return deploymentId
   */
  @javax.annotation.Nullable
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
  }


  public Deployment entryPoints(List<EntryPoint> entryPoints) {
    this.entryPoints = entryPoints;
    return this;
  }

  public Deployment addEntryPointsItem(EntryPoint entryPointsItem) {
    if (this.entryPoints == null) {
      this.entryPoints = new ArrayList<>();
    }
    this.entryPoints.add(entryPointsItem);
    return this;
  }

  /**
   * The deployment&#39;s entry points.
   * @return entryPoints
   */
  @javax.annotation.Nullable
  public List<EntryPoint> getEntryPoints() {
    return entryPoints;
  }

  public void setEntryPoints(List<EntryPoint> entryPoints) {
    this.entryPoints = entryPoints;
  }


  public Deployment updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Last modified date time stamp.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Deployment deployment = (Deployment) o;
    return Objects.equals(this.deploymentConfig, deployment.deploymentConfig) &&
        Objects.equals(this.deploymentId, deployment.deploymentId) &&
        Objects.equals(this.entryPoints, deployment.entryPoints) &&
        Objects.equals(this.updateTime, deployment.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deploymentConfig, deploymentId, entryPoints, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Deployment {\n");
    sb.append("    deploymentConfig: ").append(toIndentedString(deploymentConfig)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    entryPoints: ").append(toIndentedString(entryPoints)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deploymentConfig");
    openapiFields.add("deploymentId");
    openapiFields.add("entryPoints");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Deployment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Deployment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Deployment is not found in the empty JSON string", Deployment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Deployment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Deployment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `deploymentConfig`
      if (jsonObj.get("deploymentConfig") != null && !jsonObj.get("deploymentConfig").isJsonNull()) {
        DeploymentConfig.validateJsonElement(jsonObj.get("deploymentConfig"));
      }
      if ((jsonObj.get("deploymentId") != null && !jsonObj.get("deploymentId").isJsonNull()) && !jsonObj.get("deploymentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deploymentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deploymentId").toString()));
      }
      if (jsonObj.get("entryPoints") != null && !jsonObj.get("entryPoints").isJsonNull()) {
        JsonArray jsonArrayentryPoints = jsonObj.getAsJsonArray("entryPoints");
        if (jsonArrayentryPoints != null) {
          // ensure the json data is an array
          if (!jsonObj.get("entryPoints").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `entryPoints` to be an array in the JSON string but got `%s`", jsonObj.get("entryPoints").toString()));
          }

          // validate the optional field `entryPoints` (array)
          for (int i = 0; i < jsonArrayentryPoints.size(); i++) {
            EntryPoint.validateJsonElement(jsonArrayentryPoints.get(i));
          };
        }
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Deployment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Deployment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Deployment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Deployment.class));

       return (TypeAdapter<T>) new TypeAdapter<Deployment>() {
           @Override
           public void write(JsonWriter out, Deployment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Deployment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Deployment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Deployment
   * @throws IOException if the JSON string is invalid with respect to Deployment
   */
  public static Deployment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Deployment.class);
  }

  /**
   * Convert an instance of Deployment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

