/*
 * Apps Script API
 * Manages and executes Google Apps Script projects. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAppsScriptTypeAddOnEntryPoint;
import org.openapitools.client.model.GoogleAppsScriptTypeExecutionApiEntryPoint;
import org.openapitools.client.model.GoogleAppsScriptTypeWebAppEntryPoint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A configuration that defines how a deployment is accessed externally.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:22.086382-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EntryPoint {
  public static final String SERIALIZED_NAME_ADD_ON = "addOn";
  @SerializedName(SERIALIZED_NAME_ADD_ON)
  private GoogleAppsScriptTypeAddOnEntryPoint addOn;

  /**
   * The type of the entry point.
   */
  @JsonAdapter(EntryPointTypeEnum.Adapter.class)
  public enum EntryPointTypeEnum {
    ENTRY_POINT_TYPE_UNSPECIFIED("ENTRY_POINT_TYPE_UNSPECIFIED"),
    
    WEB_APP("WEB_APP"),
    
    EXECUTION_API("EXECUTION_API"),
    
    ADD_ON("ADD_ON");

    private String value;

    EntryPointTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntryPointTypeEnum fromValue(String value) {
      for (EntryPointTypeEnum b : EntryPointTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntryPointTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntryPointTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntryPointTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntryPointTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EntryPointTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENTRY_POINT_TYPE = "entryPointType";
  @SerializedName(SERIALIZED_NAME_ENTRY_POINT_TYPE)
  private EntryPointTypeEnum entryPointType;

  public static final String SERIALIZED_NAME_EXECUTION_API = "executionApi";
  @SerializedName(SERIALIZED_NAME_EXECUTION_API)
  private GoogleAppsScriptTypeExecutionApiEntryPoint executionApi;

  public static final String SERIALIZED_NAME_WEB_APP = "webApp";
  @SerializedName(SERIALIZED_NAME_WEB_APP)
  private GoogleAppsScriptTypeWebAppEntryPoint webApp;

  public EntryPoint() {
  }

  public EntryPoint addOn(GoogleAppsScriptTypeAddOnEntryPoint addOn) {
    this.addOn = addOn;
    return this;
  }

  /**
   * Get addOn
   * @return addOn
   */
  @javax.annotation.Nullable
  public GoogleAppsScriptTypeAddOnEntryPoint getAddOn() {
    return addOn;
  }

  public void setAddOn(GoogleAppsScriptTypeAddOnEntryPoint addOn) {
    this.addOn = addOn;
  }


  public EntryPoint entryPointType(EntryPointTypeEnum entryPointType) {
    this.entryPointType = entryPointType;
    return this;
  }

  /**
   * The type of the entry point.
   * @return entryPointType
   */
  @javax.annotation.Nullable
  public EntryPointTypeEnum getEntryPointType() {
    return entryPointType;
  }

  public void setEntryPointType(EntryPointTypeEnum entryPointType) {
    this.entryPointType = entryPointType;
  }


  public EntryPoint executionApi(GoogleAppsScriptTypeExecutionApiEntryPoint executionApi) {
    this.executionApi = executionApi;
    return this;
  }

  /**
   * Get executionApi
   * @return executionApi
   */
  @javax.annotation.Nullable
  public GoogleAppsScriptTypeExecutionApiEntryPoint getExecutionApi() {
    return executionApi;
  }

  public void setExecutionApi(GoogleAppsScriptTypeExecutionApiEntryPoint executionApi) {
    this.executionApi = executionApi;
  }


  public EntryPoint webApp(GoogleAppsScriptTypeWebAppEntryPoint webApp) {
    this.webApp = webApp;
    return this;
  }

  /**
   * Get webApp
   * @return webApp
   */
  @javax.annotation.Nullable
  public GoogleAppsScriptTypeWebAppEntryPoint getWebApp() {
    return webApp;
  }

  public void setWebApp(GoogleAppsScriptTypeWebAppEntryPoint webApp) {
    this.webApp = webApp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntryPoint entryPoint = (EntryPoint) o;
    return Objects.equals(this.addOn, entryPoint.addOn) &&
        Objects.equals(this.entryPointType, entryPoint.entryPointType) &&
        Objects.equals(this.executionApi, entryPoint.executionApi) &&
        Objects.equals(this.webApp, entryPoint.webApp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addOn, entryPointType, executionApi, webApp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntryPoint {\n");
    sb.append("    addOn: ").append(toIndentedString(addOn)).append("\n");
    sb.append("    entryPointType: ").append(toIndentedString(entryPointType)).append("\n");
    sb.append("    executionApi: ").append(toIndentedString(executionApi)).append("\n");
    sb.append("    webApp: ").append(toIndentedString(webApp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addOn");
    openapiFields.add("entryPointType");
    openapiFields.add("executionApi");
    openapiFields.add("webApp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EntryPoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EntryPoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EntryPoint is not found in the empty JSON string", EntryPoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EntryPoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EntryPoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `addOn`
      if (jsonObj.get("addOn") != null && !jsonObj.get("addOn").isJsonNull()) {
        GoogleAppsScriptTypeAddOnEntryPoint.validateJsonElement(jsonObj.get("addOn"));
      }
      if ((jsonObj.get("entryPointType") != null && !jsonObj.get("entryPointType").isJsonNull()) && !jsonObj.get("entryPointType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entryPointType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entryPointType").toString()));
      }
      // validate the optional field `entryPointType`
      if (jsonObj.get("entryPointType") != null && !jsonObj.get("entryPointType").isJsonNull()) {
        EntryPointTypeEnum.validateJsonElement(jsonObj.get("entryPointType"));
      }
      // validate the optional field `executionApi`
      if (jsonObj.get("executionApi") != null && !jsonObj.get("executionApi").isJsonNull()) {
        GoogleAppsScriptTypeExecutionApiEntryPoint.validateJsonElement(jsonObj.get("executionApi"));
      }
      // validate the optional field `webApp`
      if (jsonObj.get("webApp") != null && !jsonObj.get("webApp").isJsonNull()) {
        GoogleAppsScriptTypeWebAppEntryPoint.validateJsonElement(jsonObj.get("webApp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EntryPoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EntryPoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EntryPoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EntryPoint.class));

       return (TypeAdapter<T>) new TypeAdapter<EntryPoint>() {
           @Override
           public void write(JsonWriter out, EntryPoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EntryPoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EntryPoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EntryPoint
   * @throws IOException if the JSON string is invalid with respect to EntryPoint
   */
  public static EntryPoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EntryPoint.class);
  }

  /**
   * Convert an instance of EntryPoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

