# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExecutionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, result: object=None):
        """ExecutionResponse - a model defined in OpenAPI

        :param result: The result of this ExecutionResponse.
        """
        self.openapi_types = {
            'result': object
        }

        self.attribute_map = {
            'result': 'result'
        }

        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionResponse of this ExecutionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result(self):
        """Gets the result of this ExecutionResponse.

        The return value of the script function. The type matches the object type returned in Apps Script. Functions called using the Apps Script API cannot return Apps Script-specific objects (such as a `Document` or a `Calendar`); they can only return primitive types such as a `string`, `number`, `array`, `object`, or `boolean`.

        :return: The result of this ExecutionResponse.
        :rtype: object
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this ExecutionResponse.

        The return value of the script function. The type matches the object type returned in Apps Script. Functions called using the Apps Script API cannot return Apps Script-specific objects (such as a `Document` or a `Calendar`); they can only return primitive types such as a `string`, `number`, `array`, `object`, or `boolean`.

        :param result: The result of this ExecutionResponse.
        :type result: object
        """

        self._result = result
