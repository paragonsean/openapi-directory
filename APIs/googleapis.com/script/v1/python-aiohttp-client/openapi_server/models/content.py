# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file import File
from openapi_server import util


class Content(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, files: List[File]=None, script_id: str=None):
        """Content - a model defined in OpenAPI

        :param files: The files of this Content.
        :param script_id: The script_id of this Content.
        """
        self.openapi_types = {
            'files': List[File],
            'script_id': str
        }

        self.attribute_map = {
            'files': 'files',
            'script_id': 'scriptId'
        }

        self._files = files
        self._script_id = script_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Content':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Content of this Content.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def files(self):
        """Gets the files of this Content.

        The list of script project files. One of the files is a script manifest; it must be named \"appsscript\", must have type of JSON, and include the manifest configurations for the project.

        :return: The files of this Content.
        :rtype: List[File]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this Content.

        The list of script project files. One of the files is a script manifest; it must be named \"appsscript\", must have type of JSON, and include the manifest configurations for the project.

        :param files: The files of this Content.
        :type files: List[File]
        """

        self._files = files

    @property
    def script_id(self):
        """Gets the script_id of this Content.

        The script project's Drive ID.

        :return: The script_id of this Content.
        :rtype: str
        """
        return self._script_id

    @script_id.setter
    def script_id(self, script_id):
        """Sets the script_id of this Content.

        The script project's Drive ID.

        :param script_id: The script_id of this Content.
        :type script_id: str
        """

        self._script_id = script_id
