# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAppsScriptTypeUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, email: str=None, name: str=None, photo_url: str=None):
        """GoogleAppsScriptTypeUser - a model defined in OpenAPI

        :param domain: The domain of this GoogleAppsScriptTypeUser.
        :param email: The email of this GoogleAppsScriptTypeUser.
        :param name: The name of this GoogleAppsScriptTypeUser.
        :param photo_url: The photo_url of this GoogleAppsScriptTypeUser.
        """
        self.openapi_types = {
            'domain': str,
            'email': str,
            'name': str,
            'photo_url': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'email': 'email',
            'name': 'name',
            'photo_url': 'photoUrl'
        }

        self._domain = domain
        self._email = email
        self._name = name
        self._photo_url = photo_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsScriptTypeUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsScriptTypeUser of this GoogleAppsScriptTypeUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this GoogleAppsScriptTypeUser.

        The user's domain.

        :return: The domain of this GoogleAppsScriptTypeUser.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this GoogleAppsScriptTypeUser.

        The user's domain.

        :param domain: The domain of this GoogleAppsScriptTypeUser.
        :type domain: str
        """

        self._domain = domain

    @property
    def email(self):
        """Gets the email of this GoogleAppsScriptTypeUser.

        The user's identifying email address.

        :return: The email of this GoogleAppsScriptTypeUser.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GoogleAppsScriptTypeUser.

        The user's identifying email address.

        :param email: The email of this GoogleAppsScriptTypeUser.
        :type email: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this GoogleAppsScriptTypeUser.

        The user's display name.

        :return: The name of this GoogleAppsScriptTypeUser.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAppsScriptTypeUser.

        The user's display name.

        :param name: The name of this GoogleAppsScriptTypeUser.
        :type name: str
        """

        self._name = name

    @property
    def photo_url(self):
        """Gets the photo_url of this GoogleAppsScriptTypeUser.

        The user's photo.

        :return: The photo_url of this GoogleAppsScriptTypeUser.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this GoogleAppsScriptTypeUser.

        The user's photo.

        :param photo_url: The photo_url of this GoogleAppsScriptTypeUser.
        :type photo_url: str
        """

        self._photo_url = photo_url
