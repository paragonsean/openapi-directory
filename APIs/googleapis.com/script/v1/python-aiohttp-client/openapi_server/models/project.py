# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_apps_script_type_user import GoogleAppsScriptTypeUser
from openapi_server import util


class Project(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, creator: GoogleAppsScriptTypeUser=None, last_modify_user: GoogleAppsScriptTypeUser=None, parent_id: str=None, script_id: str=None, title: str=None, update_time: str=None):
        """Project - a model defined in OpenAPI

        :param create_time: The create_time of this Project.
        :param creator: The creator of this Project.
        :param last_modify_user: The last_modify_user of this Project.
        :param parent_id: The parent_id of this Project.
        :param script_id: The script_id of this Project.
        :param title: The title of this Project.
        :param update_time: The update_time of this Project.
        """
        self.openapi_types = {
            'create_time': str,
            'creator': GoogleAppsScriptTypeUser,
            'last_modify_user': GoogleAppsScriptTypeUser,
            'parent_id': str,
            'script_id': str,
            'title': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'creator': 'creator',
            'last_modify_user': 'lastModifyUser',
            'parent_id': 'parentId',
            'script_id': 'scriptId',
            'title': 'title',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._creator = creator
        self._last_modify_user = last_modify_user
        self._parent_id = parent_id
        self._script_id = script_id
        self._title = title
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Project of this Project.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this Project.

        When the script was created.

        :return: The create_time of this Project.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Project.

        When the script was created.

        :param create_time: The create_time of this Project.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def creator(self):
        """Gets the creator of this Project.


        :return: The creator of this Project.
        :rtype: GoogleAppsScriptTypeUser
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this Project.


        :param creator: The creator of this Project.
        :type creator: GoogleAppsScriptTypeUser
        """

        self._creator = creator

    @property
    def last_modify_user(self):
        """Gets the last_modify_user of this Project.


        :return: The last_modify_user of this Project.
        :rtype: GoogleAppsScriptTypeUser
        """
        return self._last_modify_user

    @last_modify_user.setter
    def last_modify_user(self, last_modify_user):
        """Sets the last_modify_user of this Project.


        :param last_modify_user: The last_modify_user of this Project.
        :type last_modify_user: GoogleAppsScriptTypeUser
        """

        self._last_modify_user = last_modify_user

    @property
    def parent_id(self):
        """Gets the parent_id of this Project.

        The parent's Drive ID that the script will be attached to. This is usually the ID of a Google Document or Google Sheet. This filed is optional, and if not set, a stand-alone script will be created.

        :return: The parent_id of this Project.
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this Project.

        The parent's Drive ID that the script will be attached to. This is usually the ID of a Google Document or Google Sheet. This filed is optional, and if not set, a stand-alone script will be created.

        :param parent_id: The parent_id of this Project.
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def script_id(self):
        """Gets the script_id of this Project.

        The script project's Drive ID.

        :return: The script_id of this Project.
        :rtype: str
        """
        return self._script_id

    @script_id.setter
    def script_id(self, script_id):
        """Sets the script_id of this Project.

        The script project's Drive ID.

        :param script_id: The script_id of this Project.
        :type script_id: str
        """

        self._script_id = script_id

    @property
    def title(self):
        """Gets the title of this Project.

        The title for the project.

        :return: The title of this Project.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Project.

        The title for the project.

        :param title: The title of this Project.
        :type title: str
        """

        self._title = title

    @property
    def update_time(self):
        """Gets the update_time of this Project.

        When the script was last updated.

        :return: The update_time of this Project.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Project.

        When the script was last updated.

        :param update_time: The update_time of this Project.
        :type update_time: str
        """

        self._update_time = update_time
