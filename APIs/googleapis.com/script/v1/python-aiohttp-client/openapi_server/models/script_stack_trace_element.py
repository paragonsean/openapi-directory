# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScriptStackTraceElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, function: str=None, line_number: int=None):
        """ScriptStackTraceElement - a model defined in OpenAPI

        :param function: The function of this ScriptStackTraceElement.
        :param line_number: The line_number of this ScriptStackTraceElement.
        """
        self.openapi_types = {
            'function': str,
            'line_number': int
        }

        self.attribute_map = {
            'function': 'function',
            'line_number': 'lineNumber'
        }

        self._function = function
        self._line_number = line_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScriptStackTraceElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScriptStackTraceElement of this ScriptStackTraceElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def function(self):
        """Gets the function of this ScriptStackTraceElement.

        The name of the function that failed.

        :return: The function of this ScriptStackTraceElement.
        :rtype: str
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this ScriptStackTraceElement.

        The name of the function that failed.

        :param function: The function of this ScriptStackTraceElement.
        :type function: str
        """

        self._function = function

    @property
    def line_number(self):
        """Gets the line_number of this ScriptStackTraceElement.

        The line number where the script failed.

        :return: The line_number of this ScriptStackTraceElement.
        :rtype: int
        """
        return self._line_number

    @line_number.setter
    def line_number(self, line_number):
        """Sets the line_number of this ScriptStackTraceElement.

        The line number where the script failed.

        :param line_number: The line_number of this ScriptStackTraceElement.
        :type line_number: int
        """

        self._line_number = line_number
