# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class Operation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, done: bool=None, error: Status=None, response: Dict[str, object]=None):
        """Operation - a model defined in OpenAPI

        :param done: The done of this Operation.
        :param error: The error of this Operation.
        :param response: The response of this Operation.
        """
        self.openapi_types = {
            'done': bool,
            'error': Status,
            'response': Dict[str, object]
        }

        self.attribute_map = {
            'done': 'done',
            'error': 'error',
            'response': 'response'
        }

        self._done = done
        self._error = error
        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Operation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Operation of this Operation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def done(self):
        """Gets the done of this Operation.

        This field indicates whether the script execution has completed. A completed execution has a populated `response` field containing the ExecutionResponse from function that was executed.

        :return: The done of this Operation.
        :rtype: bool
        """
        return self._done

    @done.setter
    def done(self, done):
        """Sets the done of this Operation.

        This field indicates whether the script execution has completed. A completed execution has a populated `response` field containing the ExecutionResponse from function that was executed.

        :param done: The done of this Operation.
        :type done: bool
        """

        self._done = done

    @property
    def error(self):
        """Gets the error of this Operation.


        :return: The error of this Operation.
        :rtype: Status
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this Operation.


        :param error: The error of this Operation.
        :type error: Status
        """

        self._error = error

    @property
    def response(self):
        """Gets the response of this Operation.

        If the script function returns successfully, this field contains an ExecutionResponse object with the function's return value.

        :return: The response of this Operation.
        :rtype: Dict[str, object]
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this Operation.

        If the script function returns successfully, this field contains an ExecutionResponse object with the function's return value.

        :param response: The response of this Operation.
        :type response: Dict[str, object]
        """

        self._response = response
