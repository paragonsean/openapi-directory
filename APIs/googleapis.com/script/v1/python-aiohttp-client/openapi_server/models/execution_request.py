# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExecutionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dev_mode: bool=None, function: str=None, parameters: List[object]=None, session_state: str=None):
        """ExecutionRequest - a model defined in OpenAPI

        :param dev_mode: The dev_mode of this ExecutionRequest.
        :param function: The function of this ExecutionRequest.
        :param parameters: The parameters of this ExecutionRequest.
        :param session_state: The session_state of this ExecutionRequest.
        """
        self.openapi_types = {
            'dev_mode': bool,
            'function': str,
            'parameters': List[object],
            'session_state': str
        }

        self.attribute_map = {
            'dev_mode': 'devMode',
            'function': 'function',
            'parameters': 'parameters',
            'session_state': 'sessionState'
        }

        self._dev_mode = dev_mode
        self._function = function
        self._parameters = parameters
        self._session_state = session_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionRequest of this ExecutionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dev_mode(self):
        """Gets the dev_mode of this ExecutionRequest.

        If `true` and the user is an owner of the script, the script runs at the most recently saved version rather than the version deployed for use with the Apps Script API. Optional; default is `false`.

        :return: The dev_mode of this ExecutionRequest.
        :rtype: bool
        """
        return self._dev_mode

    @dev_mode.setter
    def dev_mode(self, dev_mode):
        """Sets the dev_mode of this ExecutionRequest.

        If `true` and the user is an owner of the script, the script runs at the most recently saved version rather than the version deployed for use with the Apps Script API. Optional; default is `false`.

        :param dev_mode: The dev_mode of this ExecutionRequest.
        :type dev_mode: bool
        """

        self._dev_mode = dev_mode

    @property
    def function(self):
        """Gets the function of this ExecutionRequest.

        The name of the function to execute in the given script. The name does not include parentheses or parameters. It can reference a function in an included library such as `Library.libFunction1`.

        :return: The function of this ExecutionRequest.
        :rtype: str
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this ExecutionRequest.

        The name of the function to execute in the given script. The name does not include parentheses or parameters. It can reference a function in an included library such as `Library.libFunction1`.

        :param function: The function of this ExecutionRequest.
        :type function: str
        """

        self._function = function

    @property
    def parameters(self):
        """Gets the parameters of this ExecutionRequest.

        The parameters to be passed to the function being executed. The object type for each parameter should match the expected type in Apps Script. Parameters cannot be Apps Script-specific object types (such as a `Document` or a `Calendar`); they can only be primitive types such as `string`, `number`, `array`, `object`, or `boolean`. Optional.

        :return: The parameters of this ExecutionRequest.
        :rtype: List[object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ExecutionRequest.

        The parameters to be passed to the function being executed. The object type for each parameter should match the expected type in Apps Script. Parameters cannot be Apps Script-specific object types (such as a `Document` or a `Calendar`); they can only be primitive types such as `string`, `number`, `array`, `object`, or `boolean`. Optional.

        :param parameters: The parameters of this ExecutionRequest.
        :type parameters: List[object]
        """

        self._parameters = parameters

    @property
    def session_state(self):
        """Gets the session_state of this ExecutionRequest.

        *Deprecated*. For use with Android add-ons only. An ID that represents the user's current session in the Android app for Google Docs or Sheets, included as extra data in the [Intent](https://developer.android.com/guide/components/intents-filters.html) that launches the add-on. When an Android add-on is run with a session state, it gains the privileges of a [bound](https://developers.google.com/apps-script/guides/bound) script—that is, it can access information like the user's current cursor position (in Docs) or selected cell (in Sheets). To retrieve the state, call `Intent.getStringExtra(\"com.google.android.apps.docs.addons.SessionState\")`. Optional.

        :return: The session_state of this ExecutionRequest.
        :rtype: str
        """
        return self._session_state

    @session_state.setter
    def session_state(self, session_state):
        """Sets the session_state of this ExecutionRequest.

        *Deprecated*. For use with Android add-ons only. An ID that represents the user's current session in the Android app for Google Docs or Sheets, included as extra data in the [Intent](https://developer.android.com/guide/components/intents-filters.html) that launches the add-on. When an Android add-on is run with a session state, it gains the privileges of a [bound](https://developers.google.com/apps-script/guides/bound) script—that is, it can access information like the user's current cursor position (in Docs) or selected cell (in Sheets). To retrieve the state, call `Intent.getStringExtra(\"com.google.android.apps.docs.addons.SessionState\")`. Optional.

        :param session_state: The session_state of this ExecutionRequest.
        :type session_state: str
        """

        self._session_state = session_state
