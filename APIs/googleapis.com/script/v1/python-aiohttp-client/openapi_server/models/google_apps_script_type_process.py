# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAppsScriptTypeProcess(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, function_name: str=None, process_status: str=None, process_type: str=None, project_name: str=None, runtime_version: str=None, start_time: str=None, user_access_level: str=None):
        """GoogleAppsScriptTypeProcess - a model defined in OpenAPI

        :param duration: The duration of this GoogleAppsScriptTypeProcess.
        :param function_name: The function_name of this GoogleAppsScriptTypeProcess.
        :param process_status: The process_status of this GoogleAppsScriptTypeProcess.
        :param process_type: The process_type of this GoogleAppsScriptTypeProcess.
        :param project_name: The project_name of this GoogleAppsScriptTypeProcess.
        :param runtime_version: The runtime_version of this GoogleAppsScriptTypeProcess.
        :param start_time: The start_time of this GoogleAppsScriptTypeProcess.
        :param user_access_level: The user_access_level of this GoogleAppsScriptTypeProcess.
        """
        self.openapi_types = {
            'duration': str,
            'function_name': str,
            'process_status': str,
            'process_type': str,
            'project_name': str,
            'runtime_version': str,
            'start_time': str,
            'user_access_level': str
        }

        self.attribute_map = {
            'duration': 'duration',
            'function_name': 'functionName',
            'process_status': 'processStatus',
            'process_type': 'processType',
            'project_name': 'projectName',
            'runtime_version': 'runtimeVersion',
            'start_time': 'startTime',
            'user_access_level': 'userAccessLevel'
        }

        self._duration = duration
        self._function_name = function_name
        self._process_status = process_status
        self._process_type = process_type
        self._project_name = project_name
        self._runtime_version = runtime_version
        self._start_time = start_time
        self._user_access_level = user_access_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAppsScriptTypeProcess':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAppsScriptTypeProcess of this GoogleAppsScriptTypeProcess.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this GoogleAppsScriptTypeProcess.

        Duration the execution spent executing.

        :return: The duration of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this GoogleAppsScriptTypeProcess.

        Duration the execution spent executing.

        :param duration: The duration of this GoogleAppsScriptTypeProcess.
        :type duration: str
        """

        self._duration = duration

    @property
    def function_name(self):
        """Gets the function_name of this GoogleAppsScriptTypeProcess.

        Name of the function the started the execution.

        :return: The function_name of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._function_name

    @function_name.setter
    def function_name(self, function_name):
        """Sets the function_name of this GoogleAppsScriptTypeProcess.

        Name of the function the started the execution.

        :param function_name: The function_name of this GoogleAppsScriptTypeProcess.
        :type function_name: str
        """

        self._function_name = function_name

    @property
    def process_status(self):
        """Gets the process_status of this GoogleAppsScriptTypeProcess.

        The executions status.

        :return: The process_status of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._process_status

    @process_status.setter
    def process_status(self, process_status):
        """Sets the process_status of this GoogleAppsScriptTypeProcess.

        The executions status.

        :param process_status: The process_status of this GoogleAppsScriptTypeProcess.
        :type process_status: str
        """
        allowed_values = ["PROCESS_STATUS_UNSPECIFIED", "RUNNING", "PAUSED", "COMPLETED", "CANCELED", "FAILED", "TIMED_OUT", "UNKNOWN", "DELAYED", "EXECUTION_DISABLED"]  # noqa: E501
        if process_status not in allowed_values:
            raise ValueError(
                "Invalid value for `process_status` ({0}), must be one of {1}"
                .format(process_status, allowed_values)
            )

        self._process_status = process_status

    @property
    def process_type(self):
        """Gets the process_type of this GoogleAppsScriptTypeProcess.

        The executions type.

        :return: The process_type of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._process_type

    @process_type.setter
    def process_type(self, process_type):
        """Sets the process_type of this GoogleAppsScriptTypeProcess.

        The executions type.

        :param process_type: The process_type of this GoogleAppsScriptTypeProcess.
        :type process_type: str
        """
        allowed_values = ["PROCESS_TYPE_UNSPECIFIED", "ADD_ON", "EXECUTION_API", "TIME_DRIVEN", "TRIGGER", "WEBAPP", "EDITOR", "SIMPLE_TRIGGER", "MENU", "BATCH_TASK"]  # noqa: E501
        if process_type not in allowed_values:
            raise ValueError(
                "Invalid value for `process_type` ({0}), must be one of {1}"
                .format(process_type, allowed_values)
            )

        self._process_type = process_type

    @property
    def project_name(self):
        """Gets the project_name of this GoogleAppsScriptTypeProcess.

        Name of the script being executed.

        :return: The project_name of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this GoogleAppsScriptTypeProcess.

        Name of the script being executed.

        :param project_name: The project_name of this GoogleAppsScriptTypeProcess.
        :type project_name: str
        """

        self._project_name = project_name

    @property
    def runtime_version(self):
        """Gets the runtime_version of this GoogleAppsScriptTypeProcess.

        Which version of maestro to use to execute the script.

        :return: The runtime_version of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._runtime_version

    @runtime_version.setter
    def runtime_version(self, runtime_version):
        """Sets the runtime_version of this GoogleAppsScriptTypeProcess.

        Which version of maestro to use to execute the script.

        :param runtime_version: The runtime_version of this GoogleAppsScriptTypeProcess.
        :type runtime_version: str
        """
        allowed_values = ["RUNTIME_VERSION_UNSPECIFIED", "DEPRECATED_ES5", "V8"]  # noqa: E501
        if runtime_version not in allowed_values:
            raise ValueError(
                "Invalid value for `runtime_version` ({0}), must be one of {1}"
                .format(runtime_version, allowed_values)
            )

        self._runtime_version = runtime_version

    @property
    def start_time(self):
        """Gets the start_time of this GoogleAppsScriptTypeProcess.

        Time the execution started.

        :return: The start_time of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleAppsScriptTypeProcess.

        Time the execution started.

        :param start_time: The start_time of this GoogleAppsScriptTypeProcess.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def user_access_level(self):
        """Gets the user_access_level of this GoogleAppsScriptTypeProcess.

        The executing users access level to the script.

        :return: The user_access_level of this GoogleAppsScriptTypeProcess.
        :rtype: str
        """
        return self._user_access_level

    @user_access_level.setter
    def user_access_level(self, user_access_level):
        """Sets the user_access_level of this GoogleAppsScriptTypeProcess.

        The executing users access level to the script.

        :param user_access_level: The user_access_level of this GoogleAppsScriptTypeProcess.
        :type user_access_level: str
        """
        allowed_values = ["USER_ACCESS_LEVEL_UNSPECIFIED", "NONE", "READ", "WRITE", "OWNER"]  # noqa: E501
        if user_access_level not in allowed_values:
            raise ValueError(
                "Invalid value for `user_access_level` ({0}), must be one of {1}"
                .format(user_access_level, allowed_values)
            )

        self._user_access_level = user_access_level
