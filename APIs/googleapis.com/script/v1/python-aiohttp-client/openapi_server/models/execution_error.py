# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.script_stack_trace_element import ScriptStackTraceElement
from openapi_server import util


class ExecutionError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_message: str=None, error_type: str=None, script_stack_trace_elements: List[ScriptStackTraceElement]=None):
        """ExecutionError - a model defined in OpenAPI

        :param error_message: The error_message of this ExecutionError.
        :param error_type: The error_type of this ExecutionError.
        :param script_stack_trace_elements: The script_stack_trace_elements of this ExecutionError.
        """
        self.openapi_types = {
            'error_message': str,
            'error_type': str,
            'script_stack_trace_elements': List[ScriptStackTraceElement]
        }

        self.attribute_map = {
            'error_message': 'errorMessage',
            'error_type': 'errorType',
            'script_stack_trace_elements': 'scriptStackTraceElements'
        }

        self._error_message = error_message
        self._error_type = error_type
        self._script_stack_trace_elements = script_stack_trace_elements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionError of this ExecutionError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self):
        """Gets the error_message of this ExecutionError.

        The error message thrown by Apps Script, usually localized into the user's language.

        :return: The error_message of this ExecutionError.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ExecutionError.

        The error message thrown by Apps Script, usually localized into the user's language.

        :param error_message: The error_message of this ExecutionError.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_type(self):
        """Gets the error_type of this ExecutionError.

        The error type, for example `TypeError` or `ReferenceError`. If the error type is unavailable, this field is not included.

        :return: The error_type of this ExecutionError.
        :rtype: str
        """
        return self._error_type

    @error_type.setter
    def error_type(self, error_type):
        """Sets the error_type of this ExecutionError.

        The error type, for example `TypeError` or `ReferenceError`. If the error type is unavailable, this field is not included.

        :param error_type: The error_type of this ExecutionError.
        :type error_type: str
        """

        self._error_type = error_type

    @property
    def script_stack_trace_elements(self):
        """Gets the script_stack_trace_elements of this ExecutionError.

        An array of objects that provide a stack trace through the script to show where the execution failed, with the deepest call first.

        :return: The script_stack_trace_elements of this ExecutionError.
        :rtype: List[ScriptStackTraceElement]
        """
        return self._script_stack_trace_elements

    @script_stack_trace_elements.setter
    def script_stack_trace_elements(self, script_stack_trace_elements):
        """Sets the script_stack_trace_elements of this ExecutionError.

        An array of objects that provide a stack trace through the script to show where the execution failed, with the deepest call first.

        :param script_stack_trace_elements: The script_stack_trace_elements of this ExecutionError.
        :type script_stack_trace_elements: List[ScriptStackTraceElement]
        """

        self._script_stack_trace_elements = script_stack_trace_elements
