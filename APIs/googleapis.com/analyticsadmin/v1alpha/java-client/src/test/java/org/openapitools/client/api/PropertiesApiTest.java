/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaAccessBinding;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaAdSenseLink;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaAudience;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCalculatedMetric;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaChannelGroup;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaConversionEvent;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCreateSubpropertyRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCustomDimension;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaCustomMetric;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaDataStream;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaEventCreateRule;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaExpandedDataSet;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaFetchConnectedGa4PropertyResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaFirebaseLink;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListAccessBindingsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListAdSenseLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListAudiencesResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListBigQueryLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListCalculatedMetricsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListChannelGroupsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListConversionEventsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListCustomDimensionsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListCustomMetricsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListDataStreamsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListEventCreateRulesResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListExpandedDataSetsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListPropertiesResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListRollupPropertySourceLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListSKAdNetworkConversionValueSchemasResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListSearchAds360LinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaListSubpropertyEventFiltersResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaProperty;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaRunAccessReportResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaSearchAds360Link;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PropertiesApi
 */
@Disabled
public class PropertiesApiTest {

    private final PropertiesApi api = new PropertiesApi();

    /**
     * Creates information about multiple access bindings to an account or property. This method is transactional. If any AccessBinding cannot be created, none of the AccessBindings will be created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAccessBindingsBatchCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest googleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest = null;
        GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse response = api.analyticsadminPropertiesAccessBindingsBatchCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest);
        // TODO: test validations
    }

    /**
     * Deletes information about multiple users&#39; links to an account or property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAccessBindingsBatchDeleteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest googleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest = null;
        Object response = api.analyticsadminPropertiesAccessBindingsBatchDelete(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest);
        // TODO: test validations
    }

    /**
     * Gets information about multiple access bindings to an account or property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAccessBindingsBatchGetTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> names = null;
        GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse response = api.analyticsadminPropertiesAccessBindingsBatchGet(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, names);
        // TODO: test validations
    }

    /**
     * Updates information about multiple access bindings to an account or property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAccessBindingsBatchUpdateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest googleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest = null;
        GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse response = api.analyticsadminPropertiesAccessBindingsBatchUpdate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest);
        // TODO: test validations
    }

    /**
     * Creates an access binding on an account or property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAccessBindingsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaAccessBinding googleAnalyticsAdminV1alphaAccessBinding = null;
        GoogleAnalyticsAdminV1alphaAccessBinding response = api.analyticsadminPropertiesAccessBindingsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaAccessBinding);
        // TODO: test validations
    }

    /**
     * Lists all access bindings on an account or property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAccessBindingsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListAccessBindingsResponse response = api.analyticsadminPropertiesAccessBindingsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Acknowledges the terms of user data collection for the specified property. This acknowledgement must be completed (either in the Google Analytics UI or through this API) before MeasurementProtocolSecret resources may be created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAcknowledgeUserDataCollectionTest() throws ApiException {
        String property = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest googleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest = null;
        Object response = api.analyticsadminPropertiesAcknowledgeUserDataCollection(property, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest);
        // TODO: test validations
    }

    /**
     * Creates an AdSenseLink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAdSenseLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaAdSenseLink googleAnalyticsAdminV1alphaAdSenseLink = null;
        GoogleAnalyticsAdminV1alphaAdSenseLink response = api.analyticsadminPropertiesAdSenseLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaAdSenseLink);
        // TODO: test validations
    }

    /**
     * Lists AdSenseLinks on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAdSenseLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListAdSenseLinksResponse response = api.analyticsadminPropertiesAdSenseLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates an Audience.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAudiencesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaAudience googleAnalyticsAdminV1alphaAudience = null;
        GoogleAnalyticsAdminV1alphaAudience response = api.analyticsadminPropertiesAudiencesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaAudience);
        // TODO: test validations
    }

    /**
     * Lists Audiences on a property. Audiences created before 2020 may not be supported. Default audiences will not show filter definitions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAudiencesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListAudiencesResponse response = api.analyticsadminPropertiesAudiencesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists BigQuery Links on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesBigQueryLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListBigQueryLinksResponse response = api.analyticsadminPropertiesBigQueryLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a CalculatedMetric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCalculatedMetricsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String calculatedMetricId = null;
        GoogleAnalyticsAdminV1alphaCalculatedMetric googleAnalyticsAdminV1alphaCalculatedMetric = null;
        GoogleAnalyticsAdminV1alphaCalculatedMetric response = api.analyticsadminPropertiesCalculatedMetricsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, calculatedMetricId, googleAnalyticsAdminV1alphaCalculatedMetric);
        // TODO: test validations
    }

    /**
     * Lists CalculatedMetrics on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCalculatedMetricsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListCalculatedMetricsResponse response = api.analyticsadminPropertiesCalculatedMetricsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a ChannelGroup.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesChannelGroupsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaChannelGroup googleAnalyticsAdminV1alphaChannelGroup = null;
        GoogleAnalyticsAdminV1alphaChannelGroup response = api.analyticsadminPropertiesChannelGroupsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaChannelGroup);
        // TODO: test validations
    }

    /**
     * Lists ChannelGroups on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesChannelGroupsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListChannelGroupsResponse response = api.analyticsadminPropertiesChannelGroupsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a conversion event with the specified attributes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesConversionEventsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaConversionEvent googleAnalyticsAdminV1alphaConversionEvent = null;
        GoogleAnalyticsAdminV1alphaConversionEvent response = api.analyticsadminPropertiesConversionEventsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaConversionEvent);
        // TODO: test validations
    }

    /**
     * Returns a list of conversion events in the specified parent property. Returns an empty list if no conversion events are found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesConversionEventsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListConversionEventsResponse response = api.analyticsadminPropertiesConversionEventsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates an \&quot;GA4\&quot; property with the specified location and attributes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaProperty googleAnalyticsAdminV1alphaProperty = null;
        GoogleAnalyticsAdminV1alphaProperty response = api.analyticsadminPropertiesCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaProperty);
        // TODO: test validations
    }

    /**
     * Creates a connected site tag for a Universal Analytics property. You can create a maximum of 20 connected site tags per property. Note: This API cannot be used on GA4 properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCreateConnectedSiteTagTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest googleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest = null;
        Object response = api.analyticsadminPropertiesCreateConnectedSiteTag($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest);
        // TODO: test validations
    }

    /**
     * Create a roll-up property and all roll-up property source links.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCreateRollupPropertyTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaCreateRollupPropertyRequest googleAnalyticsAdminV1alphaCreateRollupPropertyRequest = null;
        GoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse response = api.analyticsadminPropertiesCreateRollupProperty($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaCreateRollupPropertyRequest);
        // TODO: test validations
    }

    /**
     * Create a subproperty and a subproperty event filter that applies to the created subproperty.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCreateSubpropertyTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaCreateSubpropertyRequest googleAnalyticsAdminV1alphaCreateSubpropertyRequest = null;
        GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse response = api.analyticsadminPropertiesCreateSubproperty($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaCreateSubpropertyRequest);
        // TODO: test validations
    }

    /**
     * Creates a CustomDimension.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomDimensionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaCustomDimension googleAnalyticsAdminV1alphaCustomDimension = null;
        GoogleAnalyticsAdminV1alphaCustomDimension response = api.analyticsadminPropertiesCustomDimensionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaCustomDimension);
        // TODO: test validations
    }

    /**
     * Lists CustomDimensions on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomDimensionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListCustomDimensionsResponse response = api.analyticsadminPropertiesCustomDimensionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Archives a CustomMetric on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomMetricsArchiveTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.analyticsadminPropertiesCustomMetricsArchive(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Creates a CustomMetric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomMetricsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaCustomMetric googleAnalyticsAdminV1alphaCustomMetric = null;
        GoogleAnalyticsAdminV1alphaCustomMetric response = api.analyticsadminPropertiesCustomMetricsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaCustomMetric);
        // TODO: test validations
    }

    /**
     * Lists CustomMetrics on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomMetricsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListCustomMetricsResponse response = api.analyticsadminPropertiesCustomMetricsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a DataStream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaDataStream googleAnalyticsAdminV1alphaDataStream = null;
        GoogleAnalyticsAdminV1alphaDataStream response = api.analyticsadminPropertiesDataStreamsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaDataStream);
        // TODO: test validations
    }

    /**
     * Creates an EventCreateRule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsEventCreateRulesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaEventCreateRule googleAnalyticsAdminV1alphaEventCreateRule = null;
        GoogleAnalyticsAdminV1alphaEventCreateRule response = api.analyticsadminPropertiesDataStreamsEventCreateRulesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaEventCreateRule);
        // TODO: test validations
    }

    /**
     * Lists EventCreateRules on a web data stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsEventCreateRulesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListEventCreateRulesResponse response = api.analyticsadminPropertiesDataStreamsEventCreateRulesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists DataStreams on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListDataStreamsResponse response = api.analyticsadminPropertiesDataStreamsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a measurement protocol secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret googleAnalyticsAdminV1alphaMeasurementProtocolSecret = null;
        GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret response = api.analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaMeasurementProtocolSecret);
        // TODO: test validations
    }

    /**
     * Returns child MeasurementProtocolSecrets under the specified parent Property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse response = api.analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a SKAdNetworkConversionValueSchema.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsSKAdNetworkConversionValueSchemaCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema googleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema = null;
        GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema response = api.analyticsadminPropertiesDataStreamsSKAdNetworkConversionValueSchemaCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema);
        // TODO: test validations
    }

    /**
     * Lists SKAdNetworkConversionValueSchema on a stream. Properties can have at most one SKAdNetworkConversionValueSchema.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsSKAdNetworkConversionValueSchemaListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListSKAdNetworkConversionValueSchemasResponse response = api.analyticsadminPropertiesDataStreamsSKAdNetworkConversionValueSchemaList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Deletes a connected site tag for a Universal Analytics property. Note: this has no effect on GA4 properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDeleteConnectedSiteTagTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest googleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest = null;
        Object response = api.analyticsadminPropertiesDeleteConnectedSiteTag($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest);
        // TODO: test validations
    }

    /**
     * Approves a DisplayVideo360AdvertiserLinkProposal. The DisplayVideo360AdvertiserLinkProposal will be deleted and a new DisplayVideo360AdvertiserLink will be created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse response = api.analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApprove(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Cancels a DisplayVideo360AdvertiserLinkProposal. Cancelling can mean either: - Declining a proposal initiated from Display &amp; Video 360 - Withdrawing a proposal initiated from Google Analytics After being cancelled, a proposal will eventually be deleted automatically.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal response = api.analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Creates a DisplayVideo360AdvertiserLinkProposal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal = null;
        GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal response = api.analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal);
        // TODO: test validations
    }

    /**
     * Lists DisplayVideo360AdvertiserLinkProposals on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse response = api.analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a DisplayVideo360AdvertiserLink. This can only be utilized by users who have proper authorization both on the Google Analytics property and on the Display &amp; Video 360 advertiser. Users who do not have access to the Display &amp; Video 360 advertiser should instead seek to create a DisplayVideo360LinkProposal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink = null;
        GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink response = api.analyticsadminPropertiesDisplayVideo360AdvertiserLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink);
        // TODO: test validations
    }

    /**
     * Lists all DisplayVideo360AdvertiserLinks on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDisplayVideo360AdvertiserLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse response = api.analyticsadminPropertiesDisplayVideo360AdvertiserLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a ExpandedDataSet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesExpandedDataSetsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaExpandedDataSet googleAnalyticsAdminV1alphaExpandedDataSet = null;
        GoogleAnalyticsAdminV1alphaExpandedDataSet response = api.analyticsadminPropertiesExpandedDataSetsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaExpandedDataSet);
        // TODO: test validations
    }

    /**
     * Lists ExpandedDataSets on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesExpandedDataSetsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListExpandedDataSetsResponse response = api.analyticsadminPropertiesExpandedDataSetsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Fetches the opt out status for the automated GA4 setup process for a UA property. Note: this has no effect on GA4 property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOutTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest googleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest = null;
        GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse response = api.analyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOut($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest);
        // TODO: test validations
    }

    /**
     * Given a specified UA property, looks up the GA4 property connected to it. Note: this cannot be used with GA4 properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesFetchConnectedGa4PropertyTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String property = null;
        GoogleAnalyticsAdminV1alphaFetchConnectedGa4PropertyResponse response = api.analyticsadminPropertiesFetchConnectedGa4Property($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, property);
        // TODO: test validations
    }

    /**
     * Creates a FirebaseLink. Properties can have at most one FirebaseLink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesFirebaseLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaFirebaseLink googleAnalyticsAdminV1alphaFirebaseLink = null;
        GoogleAnalyticsAdminV1alphaFirebaseLink response = api.analyticsadminPropertiesFirebaseLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaFirebaseLink);
        // TODO: test validations
    }

    /**
     * Lists FirebaseLinks on a property. Properties can have at most one FirebaseLink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesFirebaseLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse response = api.analyticsadminPropertiesFirebaseLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a GoogleAdsLink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesGoogleAdsLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaGoogleAdsLink googleAnalyticsAdminV1alphaGoogleAdsLink = null;
        GoogleAnalyticsAdminV1alphaGoogleAdsLink response = api.analyticsadminPropertiesGoogleAdsLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaGoogleAdsLink);
        // TODO: test validations
    }

    /**
     * Lists GoogleAdsLinks on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesGoogleAdsLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse response = api.analyticsadminPropertiesGoogleAdsLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Returns child Properties under the specified parent Account. Only \&quot;GA4\&quot; properties will be returned. Properties will be excluded if the caller does not have access. Soft-deleted (ie: \&quot;trashed\&quot;) properties are excluded by default. Returns an empty list if no relevant properties are found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        Boolean showDeleted = null;
        GoogleAnalyticsAdminV1alphaListPropertiesResponse response = api.analyticsadminPropertiesList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, showDeleted);
        // TODO: test validations
    }

    /**
     * Lists the connected site tags for a Universal Analytics property. A maximum of 20 connected site tags will be returned. Note: this has no effect on GA4 property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesListConnectedSiteTagsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaListConnectedSiteTagsRequest googleAnalyticsAdminV1alphaListConnectedSiteTagsRequest = null;
        GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse response = api.analyticsadminPropertiesListConnectedSiteTags($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaListConnectedSiteTagsRequest);
        // TODO: test validations
    }

    /**
     * Creates a roll-up property source link. Only roll-up properties can have source links, so this method will throw an error if used on other types of properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesRollupPropertySourceLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaRollupPropertySourceLink googleAnalyticsAdminV1alphaRollupPropertySourceLink = null;
        GoogleAnalyticsAdminV1alphaRollupPropertySourceLink response = api.analyticsadminPropertiesRollupPropertySourceLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaRollupPropertySourceLink);
        // TODO: test validations
    }

    /**
     * Lists roll-up property source Links on a property. Only roll-up properties can have source links, so this method will throw an error if used on other types of properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesRollupPropertySourceLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListRollupPropertySourceLinksResponse response = api.analyticsadminPropertiesRollupPropertySourceLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Returns a customized report of data access records. The report provides records of each time a user reads Google Analytics reporting data. Access records are retained for up to 2 years. Data Access Reports can be requested for a property. Reports may be requested for any property, but dimensions that aren&#39;t related to quota can only be requested on Google Analytics 360 properties. This method is only available to Administrators. These data access records include GA4 UI Reporting, GA4 UI Explorations, GA4 Data API, and other products like Firebase &amp; Admob that can retrieve data from Google Analytics through a linkage. These records don&#39;t include property configuration changes like adding a stream or changing a property&#39;s time zone. For configuration change history, see [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesRunAccessReportTest() throws ApiException {
        String entity = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaRunAccessReportRequest googleAnalyticsAdminV1alphaRunAccessReportRequest = null;
        GoogleAnalyticsAdminV1alphaRunAccessReportResponse response = api.analyticsadminPropertiesRunAccessReport(entity, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaRunAccessReportRequest);
        // TODO: test validations
    }

    /**
     * Creates a SearchAds360Link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSearchAds360LinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaSearchAds360Link googleAnalyticsAdminV1alphaSearchAds360Link = null;
        GoogleAnalyticsAdminV1alphaSearchAds360Link response = api.analyticsadminPropertiesSearchAds360LinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaSearchAds360Link);
        // TODO: test validations
    }

    /**
     * Lists all SearchAds360Links on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSearchAds360LinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListSearchAds360LinksResponse response = api.analyticsadminPropertiesSearchAds360LinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Sets the opt out status for the automated GA4 setup process for a UA property. Note: this has no effect on GA4 property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSetAutomatedGa4ConfigurationOptOutTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest googleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest = null;
        Object response = api.analyticsadminPropertiesSetAutomatedGa4ConfigurationOptOut($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest);
        // TODO: test validations
    }

    /**
     * Creates a subproperty Event Filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSubpropertyEventFiltersCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaSubpropertyEventFilter googleAnalyticsAdminV1alphaSubpropertyEventFilter = null;
        GoogleAnalyticsAdminV1alphaSubpropertyEventFilter response = api.analyticsadminPropertiesSubpropertyEventFiltersCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1alphaSubpropertyEventFilter);
        // TODO: test validations
    }

    /**
     * Deletes a subproperty event filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSubpropertyEventFiltersDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.analyticsadminPropertiesSubpropertyEventFiltersDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lookup for a single subproperty Event Filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSubpropertyEventFiltersGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1alphaSubpropertyEventFilter response = api.analyticsadminPropertiesSubpropertyEventFiltersGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * List all subproperty Event Filters on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSubpropertyEventFiltersListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1alphaListSubpropertyEventFiltersResponse response = api.analyticsadminPropertiesSubpropertyEventFiltersList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a subproperty Event Filter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesSubpropertyEventFiltersPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleAnalyticsAdminV1alphaSubpropertyEventFilter googleAnalyticsAdminV1alphaSubpropertyEventFilter = null;
        GoogleAnalyticsAdminV1alphaSubpropertyEventFilter response = api.analyticsadminPropertiesSubpropertyEventFiltersPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleAnalyticsAdminV1alphaSubpropertyEventFilter);
        // TODO: test validations
    }

}
