/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaAudienceFilterExpression;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A condition that must occur in the specified step order for this user to match the sequence.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep {
  public static final String SERIALIZED_NAME_CONSTRAINT_DURATION = "constraintDuration";
  @SerializedName(SERIALIZED_NAME_CONSTRAINT_DURATION)
  private String constraintDuration;

  public static final String SERIALIZED_NAME_FILTER_EXPRESSION = "filterExpression";
  @SerializedName(SERIALIZED_NAME_FILTER_EXPRESSION)
  private GoogleAnalyticsAdminV1alphaAudienceFilterExpression filterExpression;

  public static final String SERIALIZED_NAME_IMMEDIATELY_FOLLOWS = "immediatelyFollows";
  @SerializedName(SERIALIZED_NAME_IMMEDIATELY_FOLLOWS)
  private Boolean immediatelyFollows;

  /**
   * Required. Immutable. Specifies the scope for this step.
   */
  @JsonAdapter(ScopeEnum.Adapter.class)
  public enum ScopeEnum {
    UNSPECIFIED("AUDIENCE_FILTER_SCOPE_UNSPECIFIED"),
    
    WITHIN_SAME_EVENT("AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT"),
    
    WITHIN_SAME_SESSION("AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION"),
    
    ACROSS_ALL_SESSIONS("AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS");

    private String value;

    ScopeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScopeEnum fromValue(String value) {
      for (ScopeEnum b : ScopeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScopeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScopeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScopeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScopeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ScopeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private ScopeEnum scope;

  public GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep() {
  }

  public GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep constraintDuration(String constraintDuration) {
    this.constraintDuration = constraintDuration;
    return this;
  }

  /**
   * Optional. When set, this step must be satisfied within the constraint_duration of the previous step (For example, t[i] - t[i-1] &lt;&#x3D; constraint_duration). If not set, there is no duration requirement (the duration is effectively unlimited). It is ignored for the first step.
   * @return constraintDuration
   */
  @javax.annotation.Nullable
  public String getConstraintDuration() {
    return constraintDuration;
  }

  public void setConstraintDuration(String constraintDuration) {
    this.constraintDuration = constraintDuration;
  }


  public GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep filterExpression(GoogleAnalyticsAdminV1alphaAudienceFilterExpression filterExpression) {
    this.filterExpression = filterExpression;
    return this;
  }

  /**
   * Get filterExpression
   * @return filterExpression
   */
  @javax.annotation.Nullable
  public GoogleAnalyticsAdminV1alphaAudienceFilterExpression getFilterExpression() {
    return filterExpression;
  }

  public void setFilterExpression(GoogleAnalyticsAdminV1alphaAudienceFilterExpression filterExpression) {
    this.filterExpression = filterExpression;
  }


  public GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep immediatelyFollows(Boolean immediatelyFollows) {
    this.immediatelyFollows = immediatelyFollows;
    return this;
  }

  /**
   * Optional. If true, the event satisfying this step must be the very next event after the event satisfying the last step. If unset or false, this step indirectly follows the prior step; for example, there may be events between the prior step and this step. It is ignored for the first step.
   * @return immediatelyFollows
   */
  @javax.annotation.Nullable
  public Boolean getImmediatelyFollows() {
    return immediatelyFollows;
  }

  public void setImmediatelyFollows(Boolean immediatelyFollows) {
    this.immediatelyFollows = immediatelyFollows;
  }


  public GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep scope(ScopeEnum scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Required. Immutable. Specifies the scope for this step.
   * @return scope
   */
  @javax.annotation.Nullable
  public ScopeEnum getScope() {
    return scope;
  }

  public void setScope(ScopeEnum scope) {
    this.scope = scope;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep googleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep = (GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep) o;
    return Objects.equals(this.constraintDuration, googleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.constraintDuration) &&
        Objects.equals(this.filterExpression, googleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.filterExpression) &&
        Objects.equals(this.immediatelyFollows, googleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.immediatelyFollows) &&
        Objects.equals(this.scope, googleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(constraintDuration, filterExpression, immediatelyFollows, scope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep {\n");
    sb.append("    constraintDuration: ").append(toIndentedString(constraintDuration)).append("\n");
    sb.append("    filterExpression: ").append(toIndentedString(filterExpression)).append("\n");
    sb.append("    immediatelyFollows: ").append(toIndentedString(immediatelyFollows)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("constraintDuration");
    openapiFields.add("filterExpression");
    openapiFields.add("immediatelyFollows");
    openapiFields.add("scope");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("constraintDuration") != null && !jsonObj.get("constraintDuration").isJsonNull()) && !jsonObj.get("constraintDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `constraintDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("constraintDuration").toString()));
      }
      // validate the optional field `filterExpression`
      if (jsonObj.get("filterExpression") != null && !jsonObj.get("filterExpression").isJsonNull()) {
        GoogleAnalyticsAdminV1alphaAudienceFilterExpression.validateJsonElement(jsonObj.get("filterExpression"));
      }
      if ((jsonObj.get("scope") != null && !jsonObj.get("scope").isJsonNull()) && !jsonObj.get("scope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scope").toString()));
      }
      // validate the optional field `scope`
      if (jsonObj.get("scope") != null && !jsonObj.get("scope").isJsonNull()) {
        ScopeEnum.validateJsonElement(jsonObj.get("scope"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep
   */
  public static GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

