/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A proposal for a link between a GA4 property and a Display &amp; Video 360 advertiser. A proposal is converted to a DisplayVideo360AdvertiserLink once approved. Google Analytics admins approve inbound proposals while Display &amp; Video 360 admins approve outbound proposals.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal {
  public static final String SERIALIZED_NAME_ADS_PERSONALIZATION_ENABLED = "adsPersonalizationEnabled";
  @SerializedName(SERIALIZED_NAME_ADS_PERSONALIZATION_ENABLED)
  private Boolean adsPersonalizationEnabled;

  public static final String SERIALIZED_NAME_ADVERTISER_DISPLAY_NAME = "advertiserDisplayName";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_DISPLAY_NAME)
  private String advertiserDisplayName;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_CAMPAIGN_DATA_SHARING_ENABLED = "campaignDataSharingEnabled";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_DATA_SHARING_ENABLED)
  private Boolean campaignDataSharingEnabled;

  public static final String SERIALIZED_NAME_COST_DATA_SHARING_ENABLED = "costDataSharingEnabled";
  @SerializedName(SERIALIZED_NAME_COST_DATA_SHARING_ENABLED)
  private Boolean costDataSharingEnabled;

  public static final String SERIALIZED_NAME_LINK_PROPOSAL_STATUS_DETAILS = "linkProposalStatusDetails";
  @SerializedName(SERIALIZED_NAME_LINK_PROPOSAL_STATUS_DETAILS)
  private GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails linkProposalStatusDetails;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VALIDATION_EMAIL = "validationEmail";
  @SerializedName(SERIALIZED_NAME_VALIDATION_EMAIL)
  private String validationEmail;

  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal() {
  }

  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal(
     String advertiserDisplayName, 
     String name
  ) {
    this();
    this.advertiserDisplayName = advertiserDisplayName;
    this.name = name;
  }

  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal adsPersonalizationEnabled(Boolean adsPersonalizationEnabled) {
    this.adsPersonalizationEnabled = adsPersonalizationEnabled;
    return this;
  }

  /**
   * Immutable. Enables personalized advertising features with this integration. If this field is not set on create, it will be defaulted to true.
   * @return adsPersonalizationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAdsPersonalizationEnabled() {
    return adsPersonalizationEnabled;
  }

  public void setAdsPersonalizationEnabled(Boolean adsPersonalizationEnabled) {
    this.adsPersonalizationEnabled = adsPersonalizationEnabled;
  }


  /**
   * Output only. The display name of the Display &amp; Video Advertiser. Only populated for proposals that originated from Display &amp; Video 360.
   * @return advertiserDisplayName
   */
  @javax.annotation.Nullable
  public String getAdvertiserDisplayName() {
    return advertiserDisplayName;
  }



  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Immutable. The Display &amp; Video 360 Advertiser&#39;s advertiser ID.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal campaignDataSharingEnabled(Boolean campaignDataSharingEnabled) {
    this.campaignDataSharingEnabled = campaignDataSharingEnabled;
    return this;
  }

  /**
   * Immutable. Enables the import of campaign data from Display &amp; Video 360. If this field is not set on create, it will be defaulted to true.
   * @return campaignDataSharingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCampaignDataSharingEnabled() {
    return campaignDataSharingEnabled;
  }

  public void setCampaignDataSharingEnabled(Boolean campaignDataSharingEnabled) {
    this.campaignDataSharingEnabled = campaignDataSharingEnabled;
  }


  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal costDataSharingEnabled(Boolean costDataSharingEnabled) {
    this.costDataSharingEnabled = costDataSharingEnabled;
    return this;
  }

  /**
   * Immutable. Enables the import of cost data from Display &amp; Video 360. This can only be enabled if campaign_data_sharing_enabled is enabled. If this field is not set on create, it will be defaulted to true.
   * @return costDataSharingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCostDataSharingEnabled() {
    return costDataSharingEnabled;
  }

  public void setCostDataSharingEnabled(Boolean costDataSharingEnabled) {
    this.costDataSharingEnabled = costDataSharingEnabled;
  }


  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal linkProposalStatusDetails(GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails linkProposalStatusDetails) {
    this.linkProposalStatusDetails = linkProposalStatusDetails;
    return this;
  }

  /**
   * Get linkProposalStatusDetails
   * @return linkProposalStatusDetails
   */
  @javax.annotation.Nullable
  public GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails getLinkProposalStatusDetails() {
    return linkProposalStatusDetails;
  }

  public void setLinkProposalStatusDetails(GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails linkProposalStatusDetails) {
    this.linkProposalStatusDetails = linkProposalStatusDetails;
  }


  /**
   * Output only. The resource name for this DisplayVideo360AdvertiserLinkProposal resource. Format: properties/{propertyId}/displayVideo360AdvertiserLinkProposals/{proposalId} Note: proposalId is not the Display &amp; Video 360 Advertiser ID
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal validationEmail(String validationEmail) {
    this.validationEmail = validationEmail;
    return this;
  }

  /**
   * Input only. On a proposal being sent to Display &amp; Video 360, this field must be set to the email address of an admin on the target advertiser. This is used to verify that the Google Analytics admin is aware of at least one admin on the Display &amp; Video 360 Advertiser. This does not restrict approval of the proposal to a single user. Any admin on the Display &amp; Video 360 Advertiser may approve the proposal.
   * @return validationEmail
   */
  @javax.annotation.Nullable
  public String getValidationEmail() {
    return validationEmail;
  }

  public void setValidationEmail(String validationEmail) {
    this.validationEmail = validationEmail;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal = (GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal) o;
    return Objects.equals(this.adsPersonalizationEnabled, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.adsPersonalizationEnabled) &&
        Objects.equals(this.advertiserDisplayName, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.advertiserDisplayName) &&
        Objects.equals(this.advertiserId, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.advertiserId) &&
        Objects.equals(this.campaignDataSharingEnabled, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.campaignDataSharingEnabled) &&
        Objects.equals(this.costDataSharingEnabled, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.costDataSharingEnabled) &&
        Objects.equals(this.linkProposalStatusDetails, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.linkProposalStatusDetails) &&
        Objects.equals(this.name, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.name) &&
        Objects.equals(this.validationEmail, googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.validationEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adsPersonalizationEnabled, advertiserDisplayName, advertiserId, campaignDataSharingEnabled, costDataSharingEnabled, linkProposalStatusDetails, name, validationEmail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal {\n");
    sb.append("    adsPersonalizationEnabled: ").append(toIndentedString(adsPersonalizationEnabled)).append("\n");
    sb.append("    advertiserDisplayName: ").append(toIndentedString(advertiserDisplayName)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    campaignDataSharingEnabled: ").append(toIndentedString(campaignDataSharingEnabled)).append("\n");
    sb.append("    costDataSharingEnabled: ").append(toIndentedString(costDataSharingEnabled)).append("\n");
    sb.append("    linkProposalStatusDetails: ").append(toIndentedString(linkProposalStatusDetails)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    validationEmail: ").append(toIndentedString(validationEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adsPersonalizationEnabled");
    openapiFields.add("advertiserDisplayName");
    openapiFields.add("advertiserId");
    openapiFields.add("campaignDataSharingEnabled");
    openapiFields.add("costDataSharingEnabled");
    openapiFields.add("linkProposalStatusDetails");
    openapiFields.add("name");
    openapiFields.add("validationEmail");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("advertiserDisplayName") != null && !jsonObj.get("advertiserDisplayName").isJsonNull()) && !jsonObj.get("advertiserDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserDisplayName").toString()));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `linkProposalStatusDetails`
      if (jsonObj.get("linkProposalStatusDetails") != null && !jsonObj.get("linkProposalStatusDetails").isJsonNull()) {
        GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails.validateJsonElement(jsonObj.get("linkProposalStatusDetails"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("validationEmail") != null && !jsonObj.get("validationEmail").isJsonNull()) && !jsonObj.get("validationEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `validationEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("validationEmail").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal
   */
  public static GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

