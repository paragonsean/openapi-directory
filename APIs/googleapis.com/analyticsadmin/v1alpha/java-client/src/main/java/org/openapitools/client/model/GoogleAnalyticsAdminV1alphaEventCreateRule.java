/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaMatchingCondition;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaParameterMutation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An Event Create Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined. Unlike Event Edit rules, Event Creation Rules have no defined order. They will all be run independently. Event Edit and Event Create rules can&#39;t be used to modify an event created from an Event Create rule.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaEventCreateRule {
  public static final String SERIALIZED_NAME_DESTINATION_EVENT = "destinationEvent";
  @SerializedName(SERIALIZED_NAME_DESTINATION_EVENT)
  private String destinationEvent;

  public static final String SERIALIZED_NAME_EVENT_CONDITIONS = "eventConditions";
  @SerializedName(SERIALIZED_NAME_EVENT_CONDITIONS)
  private List<GoogleAnalyticsAdminV1alphaMatchingCondition> eventConditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARAMETER_MUTATIONS = "parameterMutations";
  @SerializedName(SERIALIZED_NAME_PARAMETER_MUTATIONS)
  private List<GoogleAnalyticsAdminV1alphaParameterMutation> parameterMutations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_COPY_PARAMETERS = "sourceCopyParameters";
  @SerializedName(SERIALIZED_NAME_SOURCE_COPY_PARAMETERS)
  private Boolean sourceCopyParameters;

  public GoogleAnalyticsAdminV1alphaEventCreateRule() {
  }

  public GoogleAnalyticsAdminV1alphaEventCreateRule(
     String name
  ) {
    this();
    this.name = name;
  }

  public GoogleAnalyticsAdminV1alphaEventCreateRule destinationEvent(String destinationEvent) {
    this.destinationEvent = destinationEvent;
    return this;
  }

  /**
   * Required. The name of the new event to be created. This value must: * be less than 40 characters * consist only of letters, digits or _ (underscores) * start with a letter
   * @return destinationEvent
   */
  @javax.annotation.Nullable
  public String getDestinationEvent() {
    return destinationEvent;
  }

  public void setDestinationEvent(String destinationEvent) {
    this.destinationEvent = destinationEvent;
  }


  public GoogleAnalyticsAdminV1alphaEventCreateRule eventConditions(List<GoogleAnalyticsAdminV1alphaMatchingCondition> eventConditions) {
    this.eventConditions = eventConditions;
    return this;
  }

  public GoogleAnalyticsAdminV1alphaEventCreateRule addEventConditionsItem(GoogleAnalyticsAdminV1alphaMatchingCondition eventConditionsItem) {
    if (this.eventConditions == null) {
      this.eventConditions = new ArrayList<>();
    }
    this.eventConditions.add(eventConditionsItem);
    return this;
  }

  /**
   * Required. Must have at least one condition, and can have up to 10 max. Conditions on the source event must match for this rule to be applied.
   * @return eventConditions
   */
  @javax.annotation.Nullable
  public List<GoogleAnalyticsAdminV1alphaMatchingCondition> getEventConditions() {
    return eventConditions;
  }

  public void setEventConditions(List<GoogleAnalyticsAdminV1alphaMatchingCondition> eventConditions) {
    this.eventConditions = eventConditions;
  }


  /**
   * Output only. Resource name for this EventCreateRule resource. Format: properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleAnalyticsAdminV1alphaEventCreateRule parameterMutations(List<GoogleAnalyticsAdminV1alphaParameterMutation> parameterMutations) {
    this.parameterMutations = parameterMutations;
    return this;
  }

  public GoogleAnalyticsAdminV1alphaEventCreateRule addParameterMutationsItem(GoogleAnalyticsAdminV1alphaParameterMutation parameterMutationsItem) {
    if (this.parameterMutations == null) {
      this.parameterMutations = new ArrayList<>();
    }
    this.parameterMutations.add(parameterMutationsItem);
    return this;
  }

  /**
   * Parameter mutations define parameter behavior on the new event, and are applied in order. A maximum of 20 mutations can be applied.
   * @return parameterMutations
   */
  @javax.annotation.Nullable
  public List<GoogleAnalyticsAdminV1alphaParameterMutation> getParameterMutations() {
    return parameterMutations;
  }

  public void setParameterMutations(List<GoogleAnalyticsAdminV1alphaParameterMutation> parameterMutations) {
    this.parameterMutations = parameterMutations;
  }


  public GoogleAnalyticsAdminV1alphaEventCreateRule sourceCopyParameters(Boolean sourceCopyParameters) {
    this.sourceCopyParameters = sourceCopyParameters;
    return this;
  }

  /**
   * If true, the source parameters are copied to the new event. If false, or unset, all non-internal parameters are not copied from the source event. Parameter mutations are applied after the parameters have been copied.
   * @return sourceCopyParameters
   */
  @javax.annotation.Nullable
  public Boolean getSourceCopyParameters() {
    return sourceCopyParameters;
  }

  public void setSourceCopyParameters(Boolean sourceCopyParameters) {
    this.sourceCopyParameters = sourceCopyParameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaEventCreateRule googleAnalyticsAdminV1alphaEventCreateRule = (GoogleAnalyticsAdminV1alphaEventCreateRule) o;
    return Objects.equals(this.destinationEvent, googleAnalyticsAdminV1alphaEventCreateRule.destinationEvent) &&
        Objects.equals(this.eventConditions, googleAnalyticsAdminV1alphaEventCreateRule.eventConditions) &&
        Objects.equals(this.name, googleAnalyticsAdminV1alphaEventCreateRule.name) &&
        Objects.equals(this.parameterMutations, googleAnalyticsAdminV1alphaEventCreateRule.parameterMutations) &&
        Objects.equals(this.sourceCopyParameters, googleAnalyticsAdminV1alphaEventCreateRule.sourceCopyParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationEvent, eventConditions, name, parameterMutations, sourceCopyParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaEventCreateRule {\n");
    sb.append("    destinationEvent: ").append(toIndentedString(destinationEvent)).append("\n");
    sb.append("    eventConditions: ").append(toIndentedString(eventConditions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameterMutations: ").append(toIndentedString(parameterMutations)).append("\n");
    sb.append("    sourceCopyParameters: ").append(toIndentedString(sourceCopyParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("destinationEvent");
    openapiFields.add("eventConditions");
    openapiFields.add("name");
    openapiFields.add("parameterMutations");
    openapiFields.add("sourceCopyParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaEventCreateRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaEventCreateRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaEventCreateRule is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaEventCreateRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaEventCreateRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaEventCreateRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("destinationEvent") != null && !jsonObj.get("destinationEvent").isJsonNull()) && !jsonObj.get("destinationEvent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationEvent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destinationEvent").toString()));
      }
      if (jsonObj.get("eventConditions") != null && !jsonObj.get("eventConditions").isJsonNull()) {
        JsonArray jsonArrayeventConditions = jsonObj.getAsJsonArray("eventConditions");
        if (jsonArrayeventConditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("eventConditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `eventConditions` to be an array in the JSON string but got `%s`", jsonObj.get("eventConditions").toString()));
          }

          // validate the optional field `eventConditions` (array)
          for (int i = 0; i < jsonArrayeventConditions.size(); i++) {
            GoogleAnalyticsAdminV1alphaMatchingCondition.validateJsonElement(jsonArrayeventConditions.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("parameterMutations") != null && !jsonObj.get("parameterMutations").isJsonNull()) {
        JsonArray jsonArrayparameterMutations = jsonObj.getAsJsonArray("parameterMutations");
        if (jsonArrayparameterMutations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("parameterMutations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `parameterMutations` to be an array in the JSON string but got `%s`", jsonObj.get("parameterMutations").toString()));
          }

          // validate the optional field `parameterMutations` (array)
          for (int i = 0; i < jsonArrayparameterMutations.size(); i++) {
            GoogleAnalyticsAdminV1alphaParameterMutation.validateJsonElement(jsonArrayparameterMutations.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaEventCreateRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaEventCreateRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaEventCreateRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaEventCreateRule.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaEventCreateRule>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaEventCreateRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaEventCreateRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaEventCreateRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaEventCreateRule
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaEventCreateRule
   */
  public static GoogleAnalyticsAdminV1alphaEventCreateRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaEventCreateRule.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaEventCreateRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

