/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaConnectedSiteTag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for ListConnectedSiteTags RPC.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse {
  public static final String SERIALIZED_NAME_CONNECTED_SITE_TAGS = "connectedSiteTags";
  @SerializedName(SERIALIZED_NAME_CONNECTED_SITE_TAGS)
  private List<GoogleAnalyticsAdminV1alphaConnectedSiteTag> connectedSiteTags = new ArrayList<>();

  public GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse() {
  }

  public GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse connectedSiteTags(List<GoogleAnalyticsAdminV1alphaConnectedSiteTag> connectedSiteTags) {
    this.connectedSiteTags = connectedSiteTags;
    return this;
  }

  public GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse addConnectedSiteTagsItem(GoogleAnalyticsAdminV1alphaConnectedSiteTag connectedSiteTagsItem) {
    if (this.connectedSiteTags == null) {
      this.connectedSiteTags = new ArrayList<>();
    }
    this.connectedSiteTags.add(connectedSiteTagsItem);
    return this;
  }

  /**
   * The site tags for the Universal Analytics property. A maximum of 20 connected site tags will be returned.
   * @return connectedSiteTags
   */
  @javax.annotation.Nullable
  public List<GoogleAnalyticsAdminV1alphaConnectedSiteTag> getConnectedSiteTags() {
    return connectedSiteTags;
  }

  public void setConnectedSiteTags(List<GoogleAnalyticsAdminV1alphaConnectedSiteTag> connectedSiteTags) {
    this.connectedSiteTags = connectedSiteTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse googleAnalyticsAdminV1alphaListConnectedSiteTagsResponse = (GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse) o;
    return Objects.equals(this.connectedSiteTags, googleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.connectedSiteTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectedSiteTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse {\n");
    sb.append("    connectedSiteTags: ").append(toIndentedString(connectedSiteTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("connectedSiteTags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("connectedSiteTags") != null && !jsonObj.get("connectedSiteTags").isJsonNull()) {
        JsonArray jsonArrayconnectedSiteTags = jsonObj.getAsJsonArray("connectedSiteTags");
        if (jsonArrayconnectedSiteTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("connectedSiteTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `connectedSiteTags` to be an array in the JSON string but got `%s`", jsonObj.get("connectedSiteTags").toString()));
          }

          // validate the optional field `connectedSiteTags` (array)
          for (int i = 0; i < jsonArrayconnectedSiteTags.size(); i++) {
            GoogleAnalyticsAdminV1alphaConnectedSiteTag.validateJsonElement(jsonArrayconnectedSiteTags.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse
   */
  public static GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

