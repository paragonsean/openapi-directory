/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaAudienceEventTrigger;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaAudienceFilterClause;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A resource message representing a GA4 Audience.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaAudience {
  public static final String SERIALIZED_NAME_ADS_PERSONALIZATION_ENABLED = "adsPersonalizationEnabled";
  @SerializedName(SERIALIZED_NAME_ADS_PERSONALIZATION_ENABLED)
  private Boolean adsPersonalizationEnabled;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EVENT_TRIGGER = "eventTrigger";
  @SerializedName(SERIALIZED_NAME_EVENT_TRIGGER)
  private GoogleAnalyticsAdminV1alphaAudienceEventTrigger eventTrigger;

  /**
   * Immutable. Specifies how long an exclusion lasts for users that meet the exclusion filter. It is applied to all EXCLUDE filter clauses and is ignored when there is no EXCLUDE filter clause in the Audience.
   */
  @JsonAdapter(ExclusionDurationModeEnum.Adapter.class)
  public enum ExclusionDurationModeEnum {
    AUDIENCE_EXCLUSION_DURATION_MODE_UNSPECIFIED("AUDIENCE_EXCLUSION_DURATION_MODE_UNSPECIFIED"),
    
    EXCLUDE_TEMPORARILY("EXCLUDE_TEMPORARILY"),
    
    EXCLUDE_PERMANENTLY("EXCLUDE_PERMANENTLY");

    private String value;

    ExclusionDurationModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ExclusionDurationModeEnum fromValue(String value) {
      for (ExclusionDurationModeEnum b : ExclusionDurationModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ExclusionDurationModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ExclusionDurationModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ExclusionDurationModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ExclusionDurationModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ExclusionDurationModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_EXCLUSION_DURATION_MODE = "exclusionDurationMode";
  @SerializedName(SERIALIZED_NAME_EXCLUSION_DURATION_MODE)
  private ExclusionDurationModeEnum exclusionDurationMode;

  public static final String SERIALIZED_NAME_FILTER_CLAUSES = "filterClauses";
  @SerializedName(SERIALIZED_NAME_FILTER_CLAUSES)
  private List<GoogleAnalyticsAdminV1alphaAudienceFilterClause> filterClauses = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEMBERSHIP_DURATION_DAYS = "membershipDurationDays";
  @SerializedName(SERIALIZED_NAME_MEMBERSHIP_DURATION_DAYS)
  private Integer membershipDurationDays;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleAnalyticsAdminV1alphaAudience() {
  }

  public GoogleAnalyticsAdminV1alphaAudience(
     Boolean adsPersonalizationEnabled, 
     String name
  ) {
    this();
    this.adsPersonalizationEnabled = adsPersonalizationEnabled;
    this.name = name;
  }

  /**
   * Output only. It is automatically set by GA to false if this is an NPA Audience and is excluded from ads personalization.
   * @return adsPersonalizationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAdsPersonalizationEnabled() {
    return adsPersonalizationEnabled;
  }



  public GoogleAnalyticsAdminV1alphaAudience description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. The description of the Audience.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleAnalyticsAdminV1alphaAudience displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the Audience.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleAnalyticsAdminV1alphaAudience eventTrigger(GoogleAnalyticsAdminV1alphaAudienceEventTrigger eventTrigger) {
    this.eventTrigger = eventTrigger;
    return this;
  }

  /**
   * Get eventTrigger
   * @return eventTrigger
   */
  @javax.annotation.Nullable
  public GoogleAnalyticsAdminV1alphaAudienceEventTrigger getEventTrigger() {
    return eventTrigger;
  }

  public void setEventTrigger(GoogleAnalyticsAdminV1alphaAudienceEventTrigger eventTrigger) {
    this.eventTrigger = eventTrigger;
  }


  public GoogleAnalyticsAdminV1alphaAudience exclusionDurationMode(ExclusionDurationModeEnum exclusionDurationMode) {
    this.exclusionDurationMode = exclusionDurationMode;
    return this;
  }

  /**
   * Immutable. Specifies how long an exclusion lasts for users that meet the exclusion filter. It is applied to all EXCLUDE filter clauses and is ignored when there is no EXCLUDE filter clause in the Audience.
   * @return exclusionDurationMode
   */
  @javax.annotation.Nullable
  public ExclusionDurationModeEnum getExclusionDurationMode() {
    return exclusionDurationMode;
  }

  public void setExclusionDurationMode(ExclusionDurationModeEnum exclusionDurationMode) {
    this.exclusionDurationMode = exclusionDurationMode;
  }


  public GoogleAnalyticsAdminV1alphaAudience filterClauses(List<GoogleAnalyticsAdminV1alphaAudienceFilterClause> filterClauses) {
    this.filterClauses = filterClauses;
    return this;
  }

  public GoogleAnalyticsAdminV1alphaAudience addFilterClausesItem(GoogleAnalyticsAdminV1alphaAudienceFilterClause filterClausesItem) {
    if (this.filterClauses == null) {
      this.filterClauses = new ArrayList<>();
    }
    this.filterClauses.add(filterClausesItem);
    return this;
  }

  /**
   * Required. Immutable. Unordered list. Filter clauses that define the Audience. All clauses will be ANDâ€™ed together.
   * @return filterClauses
   */
  @javax.annotation.Nullable
  public List<GoogleAnalyticsAdminV1alphaAudienceFilterClause> getFilterClauses() {
    return filterClauses;
  }

  public void setFilterClauses(List<GoogleAnalyticsAdminV1alphaAudienceFilterClause> filterClauses) {
    this.filterClauses = filterClauses;
  }


  public GoogleAnalyticsAdminV1alphaAudience membershipDurationDays(Integer membershipDurationDays) {
    this.membershipDurationDays = membershipDurationDays;
    return this;
  }

  /**
   * Required. Immutable. The duration a user should stay in an Audience. It cannot be set to more than 540 days.
   * @return membershipDurationDays
   */
  @javax.annotation.Nullable
  public Integer getMembershipDurationDays() {
    return membershipDurationDays;
  }

  public void setMembershipDurationDays(Integer membershipDurationDays) {
    this.membershipDurationDays = membershipDurationDays;
  }


  /**
   * Output only. The resource name for this Audience resource. Format: properties/{propertyId}/audiences/{audienceId}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaAudience googleAnalyticsAdminV1alphaAudience = (GoogleAnalyticsAdminV1alphaAudience) o;
    return Objects.equals(this.adsPersonalizationEnabled, googleAnalyticsAdminV1alphaAudience.adsPersonalizationEnabled) &&
        Objects.equals(this.description, googleAnalyticsAdminV1alphaAudience.description) &&
        Objects.equals(this.displayName, googleAnalyticsAdminV1alphaAudience.displayName) &&
        Objects.equals(this.eventTrigger, googleAnalyticsAdminV1alphaAudience.eventTrigger) &&
        Objects.equals(this.exclusionDurationMode, googleAnalyticsAdminV1alphaAudience.exclusionDurationMode) &&
        Objects.equals(this.filterClauses, googleAnalyticsAdminV1alphaAudience.filterClauses) &&
        Objects.equals(this.membershipDurationDays, googleAnalyticsAdminV1alphaAudience.membershipDurationDays) &&
        Objects.equals(this.name, googleAnalyticsAdminV1alphaAudience.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adsPersonalizationEnabled, description, displayName, eventTrigger, exclusionDurationMode, filterClauses, membershipDurationDays, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaAudience {\n");
    sb.append("    adsPersonalizationEnabled: ").append(toIndentedString(adsPersonalizationEnabled)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    eventTrigger: ").append(toIndentedString(eventTrigger)).append("\n");
    sb.append("    exclusionDurationMode: ").append(toIndentedString(exclusionDurationMode)).append("\n");
    sb.append("    filterClauses: ").append(toIndentedString(filterClauses)).append("\n");
    sb.append("    membershipDurationDays: ").append(toIndentedString(membershipDurationDays)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adsPersonalizationEnabled");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("eventTrigger");
    openapiFields.add("exclusionDurationMode");
    openapiFields.add("filterClauses");
    openapiFields.add("membershipDurationDays");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaAudience
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaAudience.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaAudience is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaAudience.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaAudience.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaAudience` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `eventTrigger`
      if (jsonObj.get("eventTrigger") != null && !jsonObj.get("eventTrigger").isJsonNull()) {
        GoogleAnalyticsAdminV1alphaAudienceEventTrigger.validateJsonElement(jsonObj.get("eventTrigger"));
      }
      if ((jsonObj.get("exclusionDurationMode") != null && !jsonObj.get("exclusionDurationMode").isJsonNull()) && !jsonObj.get("exclusionDurationMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exclusionDurationMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exclusionDurationMode").toString()));
      }
      // validate the optional field `exclusionDurationMode`
      if (jsonObj.get("exclusionDurationMode") != null && !jsonObj.get("exclusionDurationMode").isJsonNull()) {
        ExclusionDurationModeEnum.validateJsonElement(jsonObj.get("exclusionDurationMode"));
      }
      if (jsonObj.get("filterClauses") != null && !jsonObj.get("filterClauses").isJsonNull()) {
        JsonArray jsonArrayfilterClauses = jsonObj.getAsJsonArray("filterClauses");
        if (jsonArrayfilterClauses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("filterClauses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `filterClauses` to be an array in the JSON string but got `%s`", jsonObj.get("filterClauses").toString()));
          }

          // validate the optional field `filterClauses` (array)
          for (int i = 0; i < jsonArrayfilterClauses.size(); i++) {
            GoogleAnalyticsAdminV1alphaAudienceFilterClause.validateJsonElement(jsonArrayfilterClauses.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaAudience.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaAudience' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaAudience> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaAudience.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaAudience>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaAudience value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaAudience read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaAudience given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaAudience
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaAudience
   */
  public static GoogleAnalyticsAdminV1alphaAudience fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaAudience.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaAudience to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

