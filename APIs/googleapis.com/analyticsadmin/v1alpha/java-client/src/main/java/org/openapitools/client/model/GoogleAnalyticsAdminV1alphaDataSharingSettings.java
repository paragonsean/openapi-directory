/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A resource message representing data sharing settings of a Google Analytics account.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaDataSharingSettings {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SHARING_WITH_GOOGLE_ANY_SALES_ENABLED = "sharingWithGoogleAnySalesEnabled";
  @SerializedName(SERIALIZED_NAME_SHARING_WITH_GOOGLE_ANY_SALES_ENABLED)
  private Boolean sharingWithGoogleAnySalesEnabled;

  public static final String SERIALIZED_NAME_SHARING_WITH_GOOGLE_ASSIGNED_SALES_ENABLED = "sharingWithGoogleAssignedSalesEnabled";
  @SerializedName(SERIALIZED_NAME_SHARING_WITH_GOOGLE_ASSIGNED_SALES_ENABLED)
  private Boolean sharingWithGoogleAssignedSalesEnabled;

  public static final String SERIALIZED_NAME_SHARING_WITH_GOOGLE_PRODUCTS_ENABLED = "sharingWithGoogleProductsEnabled";
  @SerializedName(SERIALIZED_NAME_SHARING_WITH_GOOGLE_PRODUCTS_ENABLED)
  private Boolean sharingWithGoogleProductsEnabled;

  public static final String SERIALIZED_NAME_SHARING_WITH_GOOGLE_SUPPORT_ENABLED = "sharingWithGoogleSupportEnabled";
  @SerializedName(SERIALIZED_NAME_SHARING_WITH_GOOGLE_SUPPORT_ENABLED)
  private Boolean sharingWithGoogleSupportEnabled;

  public static final String SERIALIZED_NAME_SHARING_WITH_OTHERS_ENABLED = "sharingWithOthersEnabled";
  @SerializedName(SERIALIZED_NAME_SHARING_WITH_OTHERS_ENABLED)
  private Boolean sharingWithOthersEnabled;

  public GoogleAnalyticsAdminV1alphaDataSharingSettings() {
  }

  public GoogleAnalyticsAdminV1alphaDataSharingSettings(
     String name
  ) {
    this();
    this.name = name;
  }

  /**
   * Output only. Resource name. Format: accounts/{account}/dataSharingSettings Example: \&quot;accounts/1000/dataSharingSettings\&quot;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleAnalyticsAdminV1alphaDataSharingSettings sharingWithGoogleAnySalesEnabled(Boolean sharingWithGoogleAnySalesEnabled) {
    this.sharingWithGoogleAnySalesEnabled = sharingWithGoogleAnySalesEnabled;
    return this;
  }

  /**
   * Allows any of Google sales to access the data in order to suggest configuration changes to improve results.
   * @return sharingWithGoogleAnySalesEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSharingWithGoogleAnySalesEnabled() {
    return sharingWithGoogleAnySalesEnabled;
  }

  public void setSharingWithGoogleAnySalesEnabled(Boolean sharingWithGoogleAnySalesEnabled) {
    this.sharingWithGoogleAnySalesEnabled = sharingWithGoogleAnySalesEnabled;
  }


  public GoogleAnalyticsAdminV1alphaDataSharingSettings sharingWithGoogleAssignedSalesEnabled(Boolean sharingWithGoogleAssignedSalesEnabled) {
    this.sharingWithGoogleAssignedSalesEnabled = sharingWithGoogleAssignedSalesEnabled;
    return this;
  }

  /**
   * Allows Google sales teams that are assigned to the customer to access the data in order to suggest configuration changes to improve results. Sales team restrictions still apply when enabled.
   * @return sharingWithGoogleAssignedSalesEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSharingWithGoogleAssignedSalesEnabled() {
    return sharingWithGoogleAssignedSalesEnabled;
  }

  public void setSharingWithGoogleAssignedSalesEnabled(Boolean sharingWithGoogleAssignedSalesEnabled) {
    this.sharingWithGoogleAssignedSalesEnabled = sharingWithGoogleAssignedSalesEnabled;
  }


  public GoogleAnalyticsAdminV1alphaDataSharingSettings sharingWithGoogleProductsEnabled(Boolean sharingWithGoogleProductsEnabled) {
    this.sharingWithGoogleProductsEnabled = sharingWithGoogleProductsEnabled;
    return this;
  }

  /**
   * Allows Google to use the data to improve other Google products or services.
   * @return sharingWithGoogleProductsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSharingWithGoogleProductsEnabled() {
    return sharingWithGoogleProductsEnabled;
  }

  public void setSharingWithGoogleProductsEnabled(Boolean sharingWithGoogleProductsEnabled) {
    this.sharingWithGoogleProductsEnabled = sharingWithGoogleProductsEnabled;
  }


  public GoogleAnalyticsAdminV1alphaDataSharingSettings sharingWithGoogleSupportEnabled(Boolean sharingWithGoogleSupportEnabled) {
    this.sharingWithGoogleSupportEnabled = sharingWithGoogleSupportEnabled;
    return this;
  }

  /**
   * Allows Google support to access the data in order to help troubleshoot issues.
   * @return sharingWithGoogleSupportEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSharingWithGoogleSupportEnabled() {
    return sharingWithGoogleSupportEnabled;
  }

  public void setSharingWithGoogleSupportEnabled(Boolean sharingWithGoogleSupportEnabled) {
    this.sharingWithGoogleSupportEnabled = sharingWithGoogleSupportEnabled;
  }


  public GoogleAnalyticsAdminV1alphaDataSharingSettings sharingWithOthersEnabled(Boolean sharingWithOthersEnabled) {
    this.sharingWithOthersEnabled = sharingWithOthersEnabled;
    return this;
  }

  /**
   * Allows Google to share the data anonymously in aggregate form with others.
   * @return sharingWithOthersEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSharingWithOthersEnabled() {
    return sharingWithOthersEnabled;
  }

  public void setSharingWithOthersEnabled(Boolean sharingWithOthersEnabled) {
    this.sharingWithOthersEnabled = sharingWithOthersEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaDataSharingSettings googleAnalyticsAdminV1alphaDataSharingSettings = (GoogleAnalyticsAdminV1alphaDataSharingSettings) o;
    return Objects.equals(this.name, googleAnalyticsAdminV1alphaDataSharingSettings.name) &&
        Objects.equals(this.sharingWithGoogleAnySalesEnabled, googleAnalyticsAdminV1alphaDataSharingSettings.sharingWithGoogleAnySalesEnabled) &&
        Objects.equals(this.sharingWithGoogleAssignedSalesEnabled, googleAnalyticsAdminV1alphaDataSharingSettings.sharingWithGoogleAssignedSalesEnabled) &&
        Objects.equals(this.sharingWithGoogleProductsEnabled, googleAnalyticsAdminV1alphaDataSharingSettings.sharingWithGoogleProductsEnabled) &&
        Objects.equals(this.sharingWithGoogleSupportEnabled, googleAnalyticsAdminV1alphaDataSharingSettings.sharingWithGoogleSupportEnabled) &&
        Objects.equals(this.sharingWithOthersEnabled, googleAnalyticsAdminV1alphaDataSharingSettings.sharingWithOthersEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, sharingWithGoogleAnySalesEnabled, sharingWithGoogleAssignedSalesEnabled, sharingWithGoogleProductsEnabled, sharingWithGoogleSupportEnabled, sharingWithOthersEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaDataSharingSettings {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sharingWithGoogleAnySalesEnabled: ").append(toIndentedString(sharingWithGoogleAnySalesEnabled)).append("\n");
    sb.append("    sharingWithGoogleAssignedSalesEnabled: ").append(toIndentedString(sharingWithGoogleAssignedSalesEnabled)).append("\n");
    sb.append("    sharingWithGoogleProductsEnabled: ").append(toIndentedString(sharingWithGoogleProductsEnabled)).append("\n");
    sb.append("    sharingWithGoogleSupportEnabled: ").append(toIndentedString(sharingWithGoogleSupportEnabled)).append("\n");
    sb.append("    sharingWithOthersEnabled: ").append(toIndentedString(sharingWithOthersEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("sharingWithGoogleAnySalesEnabled");
    openapiFields.add("sharingWithGoogleAssignedSalesEnabled");
    openapiFields.add("sharingWithGoogleProductsEnabled");
    openapiFields.add("sharingWithGoogleSupportEnabled");
    openapiFields.add("sharingWithOthersEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaDataSharingSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaDataSharingSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaDataSharingSettings is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaDataSharingSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaDataSharingSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaDataSharingSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaDataSharingSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaDataSharingSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaDataSharingSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaDataSharingSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaDataSharingSettings>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaDataSharingSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaDataSharingSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaDataSharingSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaDataSharingSettings
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaDataSharingSettings
   */
  public static GoogleAnalyticsAdminV1alphaDataSharingSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaDataSharingSettings.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaDataSharingSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

