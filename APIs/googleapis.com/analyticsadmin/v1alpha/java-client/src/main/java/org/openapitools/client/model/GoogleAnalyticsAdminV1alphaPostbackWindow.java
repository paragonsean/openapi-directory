/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaConversionValues;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings for a SKAdNetwork conversion postback window.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaPostbackWindow {
  public static final String SERIALIZED_NAME_CONVERSION_VALUES = "conversionValues";
  @SerializedName(SERIALIZED_NAME_CONVERSION_VALUES)
  private List<GoogleAnalyticsAdminV1alphaConversionValues> conversionValues = new ArrayList<>();

  public static final String SERIALIZED_NAME_POSTBACK_WINDOW_SETTINGS_ENABLED = "postbackWindowSettingsEnabled";
  @SerializedName(SERIALIZED_NAME_POSTBACK_WINDOW_SETTINGS_ENABLED)
  private Boolean postbackWindowSettingsEnabled;

  public GoogleAnalyticsAdminV1alphaPostbackWindow() {
  }

  public GoogleAnalyticsAdminV1alphaPostbackWindow conversionValues(List<GoogleAnalyticsAdminV1alphaConversionValues> conversionValues) {
    this.conversionValues = conversionValues;
    return this;
  }

  public GoogleAnalyticsAdminV1alphaPostbackWindow addConversionValuesItem(GoogleAnalyticsAdminV1alphaConversionValues conversionValuesItem) {
    if (this.conversionValues == null) {
      this.conversionValues = new ArrayList<>();
    }
    this.conversionValues.add(conversionValuesItem);
    return this;
  }

  /**
   * Ordering of the repeated field will be used to prioritize the conversion value settings. Lower indexed entries are prioritized higher. The first conversion value setting that evaluates to true will be selected. It must have at least one entry if enable_postback_window_settings is set to true. It can have maximum of 128 entries.
   * @return conversionValues
   */
  @javax.annotation.Nullable
  public List<GoogleAnalyticsAdminV1alphaConversionValues> getConversionValues() {
    return conversionValues;
  }

  public void setConversionValues(List<GoogleAnalyticsAdminV1alphaConversionValues> conversionValues) {
    this.conversionValues = conversionValues;
  }


  public GoogleAnalyticsAdminV1alphaPostbackWindow postbackWindowSettingsEnabled(Boolean postbackWindowSettingsEnabled) {
    this.postbackWindowSettingsEnabled = postbackWindowSettingsEnabled;
    return this;
  }

  /**
   * If enable_postback_window_settings is true, conversion_values must be populated and will be used for determining when and how to set the Conversion Value on a client device and exporting schema to linked Ads accounts. If false, the settings are not used, but are retained in case they may be used in the future. This must always be true for postback_window_one.
   * @return postbackWindowSettingsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getPostbackWindowSettingsEnabled() {
    return postbackWindowSettingsEnabled;
  }

  public void setPostbackWindowSettingsEnabled(Boolean postbackWindowSettingsEnabled) {
    this.postbackWindowSettingsEnabled = postbackWindowSettingsEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaPostbackWindow googleAnalyticsAdminV1alphaPostbackWindow = (GoogleAnalyticsAdminV1alphaPostbackWindow) o;
    return Objects.equals(this.conversionValues, googleAnalyticsAdminV1alphaPostbackWindow.conversionValues) &&
        Objects.equals(this.postbackWindowSettingsEnabled, googleAnalyticsAdminV1alphaPostbackWindow.postbackWindowSettingsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversionValues, postbackWindowSettingsEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaPostbackWindow {\n");
    sb.append("    conversionValues: ").append(toIndentedString(conversionValues)).append("\n");
    sb.append("    postbackWindowSettingsEnabled: ").append(toIndentedString(postbackWindowSettingsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("conversionValues");
    openapiFields.add("postbackWindowSettingsEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaPostbackWindow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaPostbackWindow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaPostbackWindow is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaPostbackWindow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaPostbackWindow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaPostbackWindow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("conversionValues") != null && !jsonObj.get("conversionValues").isJsonNull()) {
        JsonArray jsonArrayconversionValues = jsonObj.getAsJsonArray("conversionValues");
        if (jsonArrayconversionValues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conversionValues").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conversionValues` to be an array in the JSON string but got `%s`", jsonObj.get("conversionValues").toString()));
          }

          // validate the optional field `conversionValues` (array)
          for (int i = 0; i < jsonArrayconversionValues.size(); i++) {
            GoogleAnalyticsAdminV1alphaConversionValues.validateJsonElement(jsonArrayconversionValues.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaPostbackWindow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaPostbackWindow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaPostbackWindow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaPostbackWindow.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaPostbackWindow>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaPostbackWindow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaPostbackWindow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaPostbackWindow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaPostbackWindow
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaPostbackWindow
   */
  public static GoogleAnalyticsAdminV1alphaPostbackWindow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaPostbackWindow.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaPostbackWindow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

