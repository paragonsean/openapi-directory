/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A link between a GA4 Property and an AdSense for Content ad client.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaAdSenseLink {
  public static final String SERIALIZED_NAME_AD_CLIENT_CODE = "adClientCode";
  @SerializedName(SERIALIZED_NAME_AD_CLIENT_CODE)
  private String adClientCode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public GoogleAnalyticsAdminV1alphaAdSenseLink() {
  }

  public GoogleAnalyticsAdminV1alphaAdSenseLink(
     String name
  ) {
    this();
    this.name = name;
  }

  public GoogleAnalyticsAdminV1alphaAdSenseLink adClientCode(String adClientCode) {
    this.adClientCode = adClientCode;
    return this;
  }

  /**
   * Immutable. The AdSense ad client code that the GA4 property is linked to. Example format: \&quot;ca-pub-1234567890\&quot;
   * @return adClientCode
   */
  @javax.annotation.Nullable
  public String getAdClientCode() {
    return adClientCode;
  }

  public void setAdClientCode(String adClientCode) {
    this.adClientCode = adClientCode;
  }


  /**
   * Output only. The resource name for this AdSense Link resource. Format: properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/6789
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaAdSenseLink googleAnalyticsAdminV1alphaAdSenseLink = (GoogleAnalyticsAdminV1alphaAdSenseLink) o;
    return Objects.equals(this.adClientCode, googleAnalyticsAdminV1alphaAdSenseLink.adClientCode) &&
        Objects.equals(this.name, googleAnalyticsAdminV1alphaAdSenseLink.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adClientCode, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaAdSenseLink {\n");
    sb.append("    adClientCode: ").append(toIndentedString(adClientCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adClientCode");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaAdSenseLink
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaAdSenseLink.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaAdSenseLink is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaAdSenseLink.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaAdSenseLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaAdSenseLink` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adClientCode") != null && !jsonObj.get("adClientCode").isJsonNull()) && !jsonObj.get("adClientCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adClientCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adClientCode").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaAdSenseLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaAdSenseLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaAdSenseLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaAdSenseLink.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaAdSenseLink>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaAdSenseLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaAdSenseLink read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaAdSenseLink given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaAdSenseLink
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaAdSenseLink
   */
  public static GoogleAnalyticsAdminV1alphaAdSenseLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaAdSenseLink.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaAdSenseLink to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

