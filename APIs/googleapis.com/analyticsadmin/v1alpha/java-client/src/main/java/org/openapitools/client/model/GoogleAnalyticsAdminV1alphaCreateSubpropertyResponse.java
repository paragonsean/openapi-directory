/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaProperty;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for CreateSubproperty RPC.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse {
  public static final String SERIALIZED_NAME_SUBPROPERTY = "subproperty";
  @SerializedName(SERIALIZED_NAME_SUBPROPERTY)
  private GoogleAnalyticsAdminV1alphaProperty subproperty;

  public static final String SERIALIZED_NAME_SUBPROPERTY_EVENT_FILTER = "subpropertyEventFilter";
  @SerializedName(SERIALIZED_NAME_SUBPROPERTY_EVENT_FILTER)
  private GoogleAnalyticsAdminV1alphaSubpropertyEventFilter subpropertyEventFilter;

  public GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse() {
  }

  public GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse subproperty(GoogleAnalyticsAdminV1alphaProperty subproperty) {
    this.subproperty = subproperty;
    return this;
  }

  /**
   * Get subproperty
   * @return subproperty
   */
  @javax.annotation.Nullable
  public GoogleAnalyticsAdminV1alphaProperty getSubproperty() {
    return subproperty;
  }

  public void setSubproperty(GoogleAnalyticsAdminV1alphaProperty subproperty) {
    this.subproperty = subproperty;
  }


  public GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse subpropertyEventFilter(GoogleAnalyticsAdminV1alphaSubpropertyEventFilter subpropertyEventFilter) {
    this.subpropertyEventFilter = subpropertyEventFilter;
    return this;
  }

  /**
   * Get subpropertyEventFilter
   * @return subpropertyEventFilter
   */
  @javax.annotation.Nullable
  public GoogleAnalyticsAdminV1alphaSubpropertyEventFilter getSubpropertyEventFilter() {
    return subpropertyEventFilter;
  }

  public void setSubpropertyEventFilter(GoogleAnalyticsAdminV1alphaSubpropertyEventFilter subpropertyEventFilter) {
    this.subpropertyEventFilter = subpropertyEventFilter;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse googleAnalyticsAdminV1alphaCreateSubpropertyResponse = (GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse) o;
    return Objects.equals(this.subproperty, googleAnalyticsAdminV1alphaCreateSubpropertyResponse.subproperty) &&
        Objects.equals(this.subpropertyEventFilter, googleAnalyticsAdminV1alphaCreateSubpropertyResponse.subpropertyEventFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subproperty, subpropertyEventFilter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse {\n");
    sb.append("    subproperty: ").append(toIndentedString(subproperty)).append("\n");
    sb.append("    subpropertyEventFilter: ").append(toIndentedString(subpropertyEventFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("subproperty");
    openapiFields.add("subpropertyEventFilter");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `subproperty`
      if (jsonObj.get("subproperty") != null && !jsonObj.get("subproperty").isJsonNull()) {
        GoogleAnalyticsAdminV1alphaProperty.validateJsonElement(jsonObj.get("subproperty"));
      }
      // validate the optional field `subpropertyEventFilter`
      if (jsonObj.get("subpropertyEventFilter") != null && !jsonObj.get("subpropertyEventFilter").isJsonNull()) {
        GoogleAnalyticsAdminV1alphaSubpropertyEventFilter.validateJsonElement(jsonObj.get("subpropertyEventFilter"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse
   */
  public static GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaCreateSubpropertyResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

