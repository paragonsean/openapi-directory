/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A description of a change to a single Google Analytics resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:35.760040-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1alphaChangeHistoryChange {
  /**
   * The type of action that changed this resource.
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    ACTION_TYPE_UNSPECIFIED("ACTION_TYPE_UNSPECIFIED"),
    
    CREATED("CREATED"),
    
    UPDATED("UPDATED"),
    
    DELETED("DELETED");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActionEnum fromValue(String value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ActionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private ActionEnum action;

  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  private String resource;

  public static final String SERIALIZED_NAME_RESOURCE_AFTER_CHANGE = "resourceAfterChange";
  @SerializedName(SERIALIZED_NAME_RESOURCE_AFTER_CHANGE)
  private GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource resourceAfterChange;

  public static final String SERIALIZED_NAME_RESOURCE_BEFORE_CHANGE = "resourceBeforeChange";
  @SerializedName(SERIALIZED_NAME_RESOURCE_BEFORE_CHANGE)
  private GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource resourceBeforeChange;

  public GoogleAnalyticsAdminV1alphaChangeHistoryChange() {
  }

  public GoogleAnalyticsAdminV1alphaChangeHistoryChange action(ActionEnum action) {
    this.action = action;
    return this;
  }

  /**
   * The type of action that changed this resource.
   * @return action
   */
  @javax.annotation.Nullable
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }


  public GoogleAnalyticsAdminV1alphaChangeHistoryChange resource(String resource) {
    this.resource = resource;
    return this;
  }

  /**
   * Resource name of the resource whose changes are described by this entry.
   * @return resource
   */
  @javax.annotation.Nullable
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }


  public GoogleAnalyticsAdminV1alphaChangeHistoryChange resourceAfterChange(GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource resourceAfterChange) {
    this.resourceAfterChange = resourceAfterChange;
    return this;
  }

  /**
   * Get resourceAfterChange
   * @return resourceAfterChange
   */
  @javax.annotation.Nullable
  public GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource getResourceAfterChange() {
    return resourceAfterChange;
  }

  public void setResourceAfterChange(GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource resourceAfterChange) {
    this.resourceAfterChange = resourceAfterChange;
  }


  public GoogleAnalyticsAdminV1alphaChangeHistoryChange resourceBeforeChange(GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource resourceBeforeChange) {
    this.resourceBeforeChange = resourceBeforeChange;
    return this;
  }

  /**
   * Get resourceBeforeChange
   * @return resourceBeforeChange
   */
  @javax.annotation.Nullable
  public GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource getResourceBeforeChange() {
    return resourceBeforeChange;
  }

  public void setResourceBeforeChange(GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource resourceBeforeChange) {
    this.resourceBeforeChange = resourceBeforeChange;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1alphaChangeHistoryChange googleAnalyticsAdminV1alphaChangeHistoryChange = (GoogleAnalyticsAdminV1alphaChangeHistoryChange) o;
    return Objects.equals(this.action, googleAnalyticsAdminV1alphaChangeHistoryChange.action) &&
        Objects.equals(this.resource, googleAnalyticsAdminV1alphaChangeHistoryChange.resource) &&
        Objects.equals(this.resourceAfterChange, googleAnalyticsAdminV1alphaChangeHistoryChange.resourceAfterChange) &&
        Objects.equals(this.resourceBeforeChange, googleAnalyticsAdminV1alphaChangeHistoryChange.resourceBeforeChange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, resource, resourceAfterChange, resourceBeforeChange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1alphaChangeHistoryChange {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    resourceAfterChange: ").append(toIndentedString(resourceAfterChange)).append("\n");
    sb.append("    resourceBeforeChange: ").append(toIndentedString(resourceBeforeChange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("resource");
    openapiFields.add("resourceAfterChange");
    openapiFields.add("resourceBeforeChange");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1alphaChangeHistoryChange
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1alphaChangeHistoryChange.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1alphaChangeHistoryChange is not found in the empty JSON string", GoogleAnalyticsAdminV1alphaChangeHistoryChange.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1alphaChangeHistoryChange.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1alphaChangeHistoryChange` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      // validate the optional field `action`
      if (jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) {
        ActionEnum.validateJsonElement(jsonObj.get("action"));
      }
      if ((jsonObj.get("resource") != null && !jsonObj.get("resource").isJsonNull()) && !jsonObj.get("resource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource").toString()));
      }
      // validate the optional field `resourceAfterChange`
      if (jsonObj.get("resourceAfterChange") != null && !jsonObj.get("resourceAfterChange").isJsonNull()) {
        GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource.validateJsonElement(jsonObj.get("resourceAfterChange"));
      }
      // validate the optional field `resourceBeforeChange`
      if (jsonObj.get("resourceBeforeChange") != null && !jsonObj.get("resourceBeforeChange").isJsonNull()) {
        GoogleAnalyticsAdminV1alphaChangeHistoryChangeChangeHistoryResource.validateJsonElement(jsonObj.get("resourceBeforeChange"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1alphaChangeHistoryChange.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1alphaChangeHistoryChange' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1alphaChangeHistoryChange> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1alphaChangeHistoryChange.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1alphaChangeHistoryChange>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1alphaChangeHistoryChange value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1alphaChangeHistoryChange read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1alphaChangeHistoryChange given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1alphaChangeHistoryChange
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1alphaChangeHistoryChange
   */
  public static GoogleAnalyticsAdminV1alphaChangeHistoryChange fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1alphaChangeHistoryChange.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1alphaChangeHistoryChange to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

