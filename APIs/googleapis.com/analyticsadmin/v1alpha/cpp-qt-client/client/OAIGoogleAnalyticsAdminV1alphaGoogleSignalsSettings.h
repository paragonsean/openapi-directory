/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings.h
 *
 * Settings values for Google Signals. This is a singleton resource.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings_H
#define OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings();
    OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsent() const;
    void setConsent(const QString &consent);
    bool is_consent_Set() const;
    bool is_consent_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consent;
    bool m_consent_isSet;
    bool m_consent_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings)

#endif // OAIGoogleAnalyticsAdminV1alphaGoogleSignalsSettings_H
