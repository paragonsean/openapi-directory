/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::~OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest() {}

void OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::initializeModel() {

    m_connected_site_tag_isSet = false;
    m_connected_site_tag_isValid = false;

    m_property_isSet = false;
    m_property_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::fromJsonObject(QJsonObject json) {

    m_connected_site_tag_isValid = ::OpenAPI::fromJsonValue(m_connected_site_tag, json[QString("connectedSiteTag")]);
    m_connected_site_tag_isSet = !json[QString("connectedSiteTag")].isNull() && m_connected_site_tag_isValid;

    m_property_isValid = ::OpenAPI::fromJsonValue(m_property, json[QString("property")]);
    m_property_isSet = !json[QString("property")].isNull() && m_property_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_connected_site_tag.isSet()) {
        obj.insert(QString("connectedSiteTag"), ::OpenAPI::toJsonValue(m_connected_site_tag));
    }
    if (m_property_isSet) {
        obj.insert(QString("property"), ::OpenAPI::toJsonValue(m_property));
    }
    return obj;
}

OAIGoogleAnalyticsAdminV1alphaConnectedSiteTag OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::getConnectedSiteTag() const {
    return m_connected_site_tag;
}
void OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::setConnectedSiteTag(const OAIGoogleAnalyticsAdminV1alphaConnectedSiteTag &connected_site_tag) {
    m_connected_site_tag = connected_site_tag;
    m_connected_site_tag_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::is_connected_site_tag_Set() const{
    return m_connected_site_tag_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::is_connected_site_tag_Valid() const{
    return m_connected_site_tag_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::getProperty() const {
    return m_property;
}
void OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::setProperty(const QString &property) {
    m_property = property;
    m_property_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::is_property_Set() const{
    return m_property_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::is_property_Valid() const{
    return m_property_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connected_site_tag.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
