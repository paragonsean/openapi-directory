/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaChannelGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaChannelGroup::OAIGoogleAnalyticsAdminV1alphaChannelGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaChannelGroup::OAIGoogleAnalyticsAdminV1alphaChannelGroup() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaChannelGroup::~OAIGoogleAnalyticsAdminV1alphaChannelGroup() {}

void OAIGoogleAnalyticsAdminV1alphaChannelGroup::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_grouping_rule_isSet = false;
    m_grouping_rule_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_system_defined_isSet = false;
    m_system_defined_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaChannelGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaChannelGroup::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_grouping_rule_isValid = ::OpenAPI::fromJsonValue(m_grouping_rule, json[QString("groupingRule")]);
    m_grouping_rule_isSet = !json[QString("groupingRule")].isNull() && m_grouping_rule_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_system_defined_isValid = ::OpenAPI::fromJsonValue(m_system_defined, json[QString("systemDefined")]);
    m_system_defined_isSet = !json[QString("systemDefined")].isNull() && m_system_defined_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaChannelGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaChannelGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_grouping_rule.size() > 0) {
        obj.insert(QString("groupingRule"), ::OpenAPI::toJsonValue(m_grouping_rule));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_system_defined_isSet) {
        obj.insert(QString("systemDefined"), ::OpenAPI::toJsonValue(m_system_defined));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaChannelGroup::getDescription() const {
    return m_description;
}
void OAIGoogleAnalyticsAdminV1alphaChannelGroup::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaChannelGroup::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleAnalyticsAdminV1alphaChannelGroup::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGoogleAnalyticsAdminV1alphaGroupingRule> OAIGoogleAnalyticsAdminV1alphaChannelGroup::getGroupingRule() const {
    return m_grouping_rule;
}
void OAIGoogleAnalyticsAdminV1alphaChannelGroup::setGroupingRule(const QList<OAIGoogleAnalyticsAdminV1alphaGroupingRule> &grouping_rule) {
    m_grouping_rule = grouping_rule;
    m_grouping_rule_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_grouping_rule_Set() const{
    return m_grouping_rule_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_grouping_rule_Valid() const{
    return m_grouping_rule_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaChannelGroup::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1alphaChannelGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::isSystemDefined() const {
    return m_system_defined;
}
void OAIGoogleAnalyticsAdminV1alphaChannelGroup::setSystemDefined(const bool &system_defined) {
    m_system_defined = system_defined;
    m_system_defined_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_system_defined_Set() const{
    return m_system_defined_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::is_system_defined_Valid() const{
    return m_system_defined_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grouping_rule.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_defined_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
