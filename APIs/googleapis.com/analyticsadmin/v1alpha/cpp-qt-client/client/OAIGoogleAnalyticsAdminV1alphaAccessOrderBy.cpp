/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaAccessOrderBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::OAIGoogleAnalyticsAdminV1alphaAccessOrderBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::OAIGoogleAnalyticsAdminV1alphaAccessOrderBy() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::~OAIGoogleAnalyticsAdminV1alphaAccessOrderBy() {}

void OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::initializeModel() {

    m_desc_isSet = false;
    m_desc_isValid = false;

    m_dimension_isSet = false;
    m_dimension_isValid = false;

    m_metric_isSet = false;
    m_metric_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::fromJsonObject(QJsonObject json) {

    m_desc_isValid = ::OpenAPI::fromJsonValue(m_desc, json[QString("desc")]);
    m_desc_isSet = !json[QString("desc")].isNull() && m_desc_isValid;

    m_dimension_isValid = ::OpenAPI::fromJsonValue(m_dimension, json[QString("dimension")]);
    m_dimension_isSet = !json[QString("dimension")].isNull() && m_dimension_isValid;

    m_metric_isValid = ::OpenAPI::fromJsonValue(m_metric, json[QString("metric")]);
    m_metric_isSet = !json[QString("metric")].isNull() && m_metric_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::asJsonObject() const {
    QJsonObject obj;
    if (m_desc_isSet) {
        obj.insert(QString("desc"), ::OpenAPI::toJsonValue(m_desc));
    }
    if (m_dimension.isSet()) {
        obj.insert(QString("dimension"), ::OpenAPI::toJsonValue(m_dimension));
    }
    if (m_metric.isSet()) {
        obj.insert(QString("metric"), ::OpenAPI::toJsonValue(m_metric));
    }
    return obj;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::isDesc() const {
    return m_desc;
}
void OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::setDesc(const bool &desc) {
    m_desc = desc;
    m_desc_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::is_desc_Set() const{
    return m_desc_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::is_desc_Valid() const{
    return m_desc_isValid;
}

OAIGoogleAnalyticsAdminV1alphaAccessOrderByDimensionOrderBy OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::getDimension() const {
    return m_dimension;
}
void OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::setDimension(const OAIGoogleAnalyticsAdminV1alphaAccessOrderByDimensionOrderBy &dimension) {
    m_dimension = dimension;
    m_dimension_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::is_dimension_Set() const{
    return m_dimension_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::is_dimension_Valid() const{
    return m_dimension_isValid;
}

OAIGoogleAnalyticsAdminV1alphaAccessOrderByMetricOrderBy OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::getMetric() const {
    return m_metric;
}
void OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::setMetric(const OAIGoogleAnalyticsAdminV1alphaAccessOrderByMetricOrderBy &metric) {
    m_metric = metric;
    m_metric_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::is_metric_Set() const{
    return m_metric_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::is_metric_Valid() const{
    return m_metric_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessOrderBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
