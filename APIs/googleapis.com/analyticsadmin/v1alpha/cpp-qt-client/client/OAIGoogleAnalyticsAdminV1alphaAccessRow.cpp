/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaAccessRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaAccessRow::OAIGoogleAnalyticsAdminV1alphaAccessRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaAccessRow::OAIGoogleAnalyticsAdminV1alphaAccessRow() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaAccessRow::~OAIGoogleAnalyticsAdminV1alphaAccessRow() {}

void OAIGoogleAnalyticsAdminV1alphaAccessRow::initializeModel() {

    m_dimension_values_isSet = false;
    m_dimension_values_isValid = false;

    m_metric_values_isSet = false;
    m_metric_values_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaAccessRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaAccessRow::fromJsonObject(QJsonObject json) {

    m_dimension_values_isValid = ::OpenAPI::fromJsonValue(m_dimension_values, json[QString("dimensionValues")]);
    m_dimension_values_isSet = !json[QString("dimensionValues")].isNull() && m_dimension_values_isValid;

    m_metric_values_isValid = ::OpenAPI::fromJsonValue(m_metric_values, json[QString("metricValues")]);
    m_metric_values_isSet = !json[QString("metricValues")].isNull() && m_metric_values_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaAccessRow::asJsonObject() const {
    QJsonObject obj;
    if (m_dimension_values.size() > 0) {
        obj.insert(QString("dimensionValues"), ::OpenAPI::toJsonValue(m_dimension_values));
    }
    if (m_metric_values.size() > 0) {
        obj.insert(QString("metricValues"), ::OpenAPI::toJsonValue(m_metric_values));
    }
    return obj;
}

QList<OAIGoogleAnalyticsAdminV1alphaAccessDimensionValue> OAIGoogleAnalyticsAdminV1alphaAccessRow::getDimensionValues() const {
    return m_dimension_values;
}
void OAIGoogleAnalyticsAdminV1alphaAccessRow::setDimensionValues(const QList<OAIGoogleAnalyticsAdminV1alphaAccessDimensionValue> &dimension_values) {
    m_dimension_values = dimension_values;
    m_dimension_values_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessRow::is_dimension_values_Set() const{
    return m_dimension_values_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessRow::is_dimension_values_Valid() const{
    return m_dimension_values_isValid;
}

QList<OAIGoogleAnalyticsAdminV1alphaAccessMetricValue> OAIGoogleAnalyticsAdminV1alphaAccessRow::getMetricValues() const {
    return m_metric_values;
}
void OAIGoogleAnalyticsAdminV1alphaAccessRow::setMetricValues(const QList<OAIGoogleAnalyticsAdminV1alphaAccessMetricValue> &metric_values) {
    m_metric_values = metric_values;
    m_metric_values_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessRow::is_metric_values_Set() const{
    return m_metric_values_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessRow::is_metric_values_Valid() const{
    return m_metric_values_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimension_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
