/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression.h
 *
 * A logical expression of Channel Group dimension filters.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression_H
#define OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1alphaChannelGroupFilter.h"
#include "OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList;
class OAIGoogleAnalyticsAdminV1alphaChannelGroupFilter;

class OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression();
    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList getAndGroup() const;
    void setAndGroup(const OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList &and_group);
    bool is_and_group_Set() const;
    bool is_and_group_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilter getFilter() const;
    void setFilter(const OAIGoogleAnalyticsAdminV1alphaChannelGroupFilter &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression getNotExpression() const;
    void setNotExpression(const OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression &not_expression);
    bool is_not_expression_Set() const;
    bool is_not_expression_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList getOrGroup() const;
    void setOrGroup(const OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList &or_group);
    bool is_or_group_Set() const;
    bool is_or_group_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList m_and_group;
    bool m_and_group_isSet;
    bool m_and_group_isValid;

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilter m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression m_not_expression;
    bool m_not_expression_isSet;
    bool m_not_expression_isValid;

    OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList m_or_group;
    bool m_or_group_isSet;
    bool m_or_group_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression)

#endif // OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterExpression_H
