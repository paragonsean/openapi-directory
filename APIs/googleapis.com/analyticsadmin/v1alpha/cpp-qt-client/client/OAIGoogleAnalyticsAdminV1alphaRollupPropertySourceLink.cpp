/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::~OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink() {}

void OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_property_isSet = false;
    m_source_property_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_source_property_isValid = ::OpenAPI::fromJsonValue(m_source_property, json[QString("sourceProperty")]);
    m_source_property_isSet = !json[QString("sourceProperty")].isNull() && m_source_property_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_property_isSet) {
        obj.insert(QString("sourceProperty"), ::OpenAPI::toJsonValue(m_source_property));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::getSourceProperty() const {
    return m_source_property;
}
void OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::setSourceProperty(const QString &source_property) {
    m_source_property = source_property;
    m_source_property_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::is_source_property_Set() const{
    return m_source_property_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::is_source_property_Valid() const{
    return m_source_property_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_property_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
