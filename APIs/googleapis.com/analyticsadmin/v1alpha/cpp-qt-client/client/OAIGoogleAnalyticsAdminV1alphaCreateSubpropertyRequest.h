/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest.h
 *
 * Request message for CreateSubproperty RPC.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest_H
#define OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1alphaProperty.h"
#include "OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1alphaProperty;
class OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter;

class OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest();
    OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getParent() const;
    void setParent(const QString &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaProperty getSubproperty() const;
    void setSubproperty(const OAIGoogleAnalyticsAdminV1alphaProperty &subproperty);
    bool is_subproperty_Set() const;
    bool is_subproperty_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter getSubpropertyEventFilter() const;
    void setSubpropertyEventFilter(const OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter &subproperty_event_filter);
    bool is_subproperty_event_filter_Set() const;
    bool is_subproperty_event_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    OAIGoogleAnalyticsAdminV1alphaProperty m_subproperty;
    bool m_subproperty_isSet;
    bool m_subproperty_isValid;

    OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter m_subproperty_event_filter;
    bool m_subproperty_event_filter_isSet;
    bool m_subproperty_event_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest)

#endif // OAIGoogleAnalyticsAdminV1alphaCreateSubpropertyRequest_H
