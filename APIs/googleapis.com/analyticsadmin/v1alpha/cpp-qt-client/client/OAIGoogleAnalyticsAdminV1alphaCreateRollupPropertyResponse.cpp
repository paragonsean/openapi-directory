/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::~OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse() {}

void OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::initializeModel() {

    m_rollup_property_isSet = false;
    m_rollup_property_isValid = false;

    m_rollup_property_source_links_isSet = false;
    m_rollup_property_source_links_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::fromJsonObject(QJsonObject json) {

    m_rollup_property_isValid = ::OpenAPI::fromJsonValue(m_rollup_property, json[QString("rollupProperty")]);
    m_rollup_property_isSet = !json[QString("rollupProperty")].isNull() && m_rollup_property_isValid;

    m_rollup_property_source_links_isValid = ::OpenAPI::fromJsonValue(m_rollup_property_source_links, json[QString("rollupPropertySourceLinks")]);
    m_rollup_property_source_links_isSet = !json[QString("rollupPropertySourceLinks")].isNull() && m_rollup_property_source_links_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_rollup_property.isSet()) {
        obj.insert(QString("rollupProperty"), ::OpenAPI::toJsonValue(m_rollup_property));
    }
    if (m_rollup_property_source_links.size() > 0) {
        obj.insert(QString("rollupPropertySourceLinks"), ::OpenAPI::toJsonValue(m_rollup_property_source_links));
    }
    return obj;
}

OAIGoogleAnalyticsAdminV1alphaProperty OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::getRollupProperty() const {
    return m_rollup_property;
}
void OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::setRollupProperty(const OAIGoogleAnalyticsAdminV1alphaProperty &rollup_property) {
    m_rollup_property = rollup_property;
    m_rollup_property_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::is_rollup_property_Set() const{
    return m_rollup_property_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::is_rollup_property_Valid() const{
    return m_rollup_property_isValid;
}

QList<OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink> OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::getRollupPropertySourceLinks() const {
    return m_rollup_property_source_links;
}
void OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::setRollupPropertySourceLinks(const QList<OAIGoogleAnalyticsAdminV1alphaRollupPropertySourceLink> &rollup_property_source_links) {
    m_rollup_property_source_links = rollup_property_source_links;
    m_rollup_property_source_links_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::is_rollup_property_source_links_Set() const{
    return m_rollup_property_source_links_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::is_rollup_property_source_links_Valid() const{
    return m_rollup_property_source_links_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rollup_property.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollup_property_source_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
