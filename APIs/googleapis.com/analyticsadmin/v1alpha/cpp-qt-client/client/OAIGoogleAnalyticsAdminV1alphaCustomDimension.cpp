/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaCustomDimension.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaCustomDimension::OAIGoogleAnalyticsAdminV1alphaCustomDimension(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaCustomDimension::OAIGoogleAnalyticsAdminV1alphaCustomDimension() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaCustomDimension::~OAIGoogleAnalyticsAdminV1alphaCustomDimension() {}

void OAIGoogleAnalyticsAdminV1alphaCustomDimension::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_disallow_ads_personalization_isSet = false;
    m_disallow_ads_personalization_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parameter_name_isSet = false;
    m_parameter_name_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaCustomDimension::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaCustomDimension::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_disallow_ads_personalization_isValid = ::OpenAPI::fromJsonValue(m_disallow_ads_personalization, json[QString("disallowAdsPersonalization")]);
    m_disallow_ads_personalization_isSet = !json[QString("disallowAdsPersonalization")].isNull() && m_disallow_ads_personalization_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parameter_name_isValid = ::OpenAPI::fromJsonValue(m_parameter_name, json[QString("parameterName")]);
    m_parameter_name_isSet = !json[QString("parameterName")].isNull() && m_parameter_name_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCustomDimension::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaCustomDimension::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_disallow_ads_personalization_isSet) {
        obj.insert(QString("disallowAdsPersonalization"), ::OpenAPI::toJsonValue(m_disallow_ads_personalization));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parameter_name_isSet) {
        obj.insert(QString("parameterName"), ::OpenAPI::toJsonValue(m_parameter_name));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaCustomDimension::getDescription() const {
    return m_description;
}
void OAIGoogleAnalyticsAdminV1alphaCustomDimension::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::isDisallowAdsPersonalization() const {
    return m_disallow_ads_personalization;
}
void OAIGoogleAnalyticsAdminV1alphaCustomDimension::setDisallowAdsPersonalization(const bool &disallow_ads_personalization) {
    m_disallow_ads_personalization = disallow_ads_personalization;
    m_disallow_ads_personalization_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_disallow_ads_personalization_Set() const{
    return m_disallow_ads_personalization_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_disallow_ads_personalization_Valid() const{
    return m_disallow_ads_personalization_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCustomDimension::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleAnalyticsAdminV1alphaCustomDimension::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCustomDimension::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1alphaCustomDimension::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCustomDimension::getParameterName() const {
    return m_parameter_name;
}
void OAIGoogleAnalyticsAdminV1alphaCustomDimension::setParameterName(const QString &parameter_name) {
    m_parameter_name = parameter_name;
    m_parameter_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_parameter_name_Set() const{
    return m_parameter_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_parameter_name_Valid() const{
    return m_parameter_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCustomDimension::getScope() const {
    return m_scope;
}
void OAIGoogleAnalyticsAdminV1alphaCustomDimension::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::is_scope_Valid() const{
    return m_scope_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disallow_ads_personalization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaCustomDimension::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
