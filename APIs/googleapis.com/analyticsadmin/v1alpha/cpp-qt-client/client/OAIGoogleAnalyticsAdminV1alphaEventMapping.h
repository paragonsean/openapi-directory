/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaEventMapping.h
 *
 * Event setting conditions to match an event.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaEventMapping_H
#define OAIGoogleAnalyticsAdminV1alphaEventMapping_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleAnalyticsAdminV1alphaEventMapping : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaEventMapping();
    OAIGoogleAnalyticsAdminV1alphaEventMapping(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaEventMapping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getMaxEventCount() const;
    void setMaxEventCount(const QString &max_event_count);
    bool is_max_event_count_Set() const;
    bool is_max_event_count_Valid() const;

    double getMaxEventValue() const;
    void setMaxEventValue(const double &max_event_value);
    bool is_max_event_value_Set() const;
    bool is_max_event_value_Valid() const;

    QString getMinEventCount() const;
    void setMinEventCount(const QString &min_event_count);
    bool is_min_event_count_Set() const;
    bool is_min_event_count_Valid() const;

    double getMinEventValue() const;
    void setMinEventValue(const double &min_event_value);
    bool is_min_event_value_Set() const;
    bool is_min_event_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_max_event_count;
    bool m_max_event_count_isSet;
    bool m_max_event_count_isValid;

    double m_max_event_value;
    bool m_max_event_value_isSet;
    bool m_max_event_value_isValid;

    QString m_min_event_count;
    bool m_min_event_count_isSet;
    bool m_min_event_count_isValid;

    double m_min_event_value;
    bool m_min_event_value_isSet;
    bool m_min_event_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaEventMapping)

#endif // OAIGoogleAnalyticsAdminV1alphaEventMapping_H
