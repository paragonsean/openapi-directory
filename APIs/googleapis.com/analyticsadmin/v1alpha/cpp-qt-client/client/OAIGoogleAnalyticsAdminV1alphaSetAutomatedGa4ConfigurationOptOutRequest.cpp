/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::~OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest() {}

void OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::initializeModel() {

    m_opt_out_isSet = false;
    m_opt_out_isValid = false;

    m_property_isSet = false;
    m_property_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::fromJsonObject(QJsonObject json) {

    m_opt_out_isValid = ::OpenAPI::fromJsonValue(m_opt_out, json[QString("optOut")]);
    m_opt_out_isSet = !json[QString("optOut")].isNull() && m_opt_out_isValid;

    m_property_isValid = ::OpenAPI::fromJsonValue(m_property, json[QString("property")]);
    m_property_isSet = !json[QString("property")].isNull() && m_property_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_opt_out_isSet) {
        obj.insert(QString("optOut"), ::OpenAPI::toJsonValue(m_opt_out));
    }
    if (m_property_isSet) {
        obj.insert(QString("property"), ::OpenAPI::toJsonValue(m_property));
    }
    return obj;
}

bool OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::isOptOut() const {
    return m_opt_out;
}
void OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::setOptOut(const bool &opt_out) {
    m_opt_out = opt_out;
    m_opt_out_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::is_opt_out_Set() const{
    return m_opt_out_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::is_opt_out_Valid() const{
    return m_opt_out_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::getProperty() const {
    return m_property;
}
void OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::setProperty(const QString &property) {
    m_property = property;
    m_property_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::is_property_Set() const{
    return m_property_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::is_property_Valid() const{
    return m_property_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_opt_out_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
