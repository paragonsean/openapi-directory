/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaAccessMetric.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaAccessMetric::OAIGoogleAnalyticsAdminV1alphaAccessMetric(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaAccessMetric::OAIGoogleAnalyticsAdminV1alphaAccessMetric() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaAccessMetric::~OAIGoogleAnalyticsAdminV1alphaAccessMetric() {}

void OAIGoogleAnalyticsAdminV1alphaAccessMetric::initializeModel() {

    m_metric_name_isSet = false;
    m_metric_name_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaAccessMetric::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaAccessMetric::fromJsonObject(QJsonObject json) {

    m_metric_name_isValid = ::OpenAPI::fromJsonValue(m_metric_name, json[QString("metricName")]);
    m_metric_name_isSet = !json[QString("metricName")].isNull() && m_metric_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessMetric::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaAccessMetric::asJsonObject() const {
    QJsonObject obj;
    if (m_metric_name_isSet) {
        obj.insert(QString("metricName"), ::OpenAPI::toJsonValue(m_metric_name));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessMetric::getMetricName() const {
    return m_metric_name;
}
void OAIGoogleAnalyticsAdminV1alphaAccessMetric::setMetricName(const QString &metric_name) {
    m_metric_name = metric_name;
    m_metric_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessMetric::is_metric_name_Set() const{
    return m_metric_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessMetric::is_metric_name_Valid() const{
    return m_metric_name_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessMetric::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessMetric::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
