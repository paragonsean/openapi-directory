/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::~OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings() {}

void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::initializeModel() {

    m_file_downloads_enabled_isSet = false;
    m_file_downloads_enabled_isValid = false;

    m_form_interactions_enabled_isSet = false;
    m_form_interactions_enabled_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_outbound_clicks_enabled_isSet = false;
    m_outbound_clicks_enabled_isValid = false;

    m_page_changes_enabled_isSet = false;
    m_page_changes_enabled_isValid = false;

    m_scrolls_enabled_isSet = false;
    m_scrolls_enabled_isValid = false;

    m_search_query_parameter_isSet = false;
    m_search_query_parameter_isValid = false;

    m_site_search_enabled_isSet = false;
    m_site_search_enabled_isValid = false;

    m_stream_enabled_isSet = false;
    m_stream_enabled_isValid = false;

    m_uri_query_parameter_isSet = false;
    m_uri_query_parameter_isValid = false;

    m_video_engagement_enabled_isSet = false;
    m_video_engagement_enabled_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::fromJsonObject(QJsonObject json) {

    m_file_downloads_enabled_isValid = ::OpenAPI::fromJsonValue(m_file_downloads_enabled, json[QString("fileDownloadsEnabled")]);
    m_file_downloads_enabled_isSet = !json[QString("fileDownloadsEnabled")].isNull() && m_file_downloads_enabled_isValid;

    m_form_interactions_enabled_isValid = ::OpenAPI::fromJsonValue(m_form_interactions_enabled, json[QString("formInteractionsEnabled")]);
    m_form_interactions_enabled_isSet = !json[QString("formInteractionsEnabled")].isNull() && m_form_interactions_enabled_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_outbound_clicks_enabled_isValid = ::OpenAPI::fromJsonValue(m_outbound_clicks_enabled, json[QString("outboundClicksEnabled")]);
    m_outbound_clicks_enabled_isSet = !json[QString("outboundClicksEnabled")].isNull() && m_outbound_clicks_enabled_isValid;

    m_page_changes_enabled_isValid = ::OpenAPI::fromJsonValue(m_page_changes_enabled, json[QString("pageChangesEnabled")]);
    m_page_changes_enabled_isSet = !json[QString("pageChangesEnabled")].isNull() && m_page_changes_enabled_isValid;

    m_scrolls_enabled_isValid = ::OpenAPI::fromJsonValue(m_scrolls_enabled, json[QString("scrollsEnabled")]);
    m_scrolls_enabled_isSet = !json[QString("scrollsEnabled")].isNull() && m_scrolls_enabled_isValid;

    m_search_query_parameter_isValid = ::OpenAPI::fromJsonValue(m_search_query_parameter, json[QString("searchQueryParameter")]);
    m_search_query_parameter_isSet = !json[QString("searchQueryParameter")].isNull() && m_search_query_parameter_isValid;

    m_site_search_enabled_isValid = ::OpenAPI::fromJsonValue(m_site_search_enabled, json[QString("siteSearchEnabled")]);
    m_site_search_enabled_isSet = !json[QString("siteSearchEnabled")].isNull() && m_site_search_enabled_isValid;

    m_stream_enabled_isValid = ::OpenAPI::fromJsonValue(m_stream_enabled, json[QString("streamEnabled")]);
    m_stream_enabled_isSet = !json[QString("streamEnabled")].isNull() && m_stream_enabled_isValid;

    m_uri_query_parameter_isValid = ::OpenAPI::fromJsonValue(m_uri_query_parameter, json[QString("uriQueryParameter")]);
    m_uri_query_parameter_isSet = !json[QString("uriQueryParameter")].isNull() && m_uri_query_parameter_isValid;

    m_video_engagement_enabled_isValid = ::OpenAPI::fromJsonValue(m_video_engagement_enabled, json[QString("videoEngagementEnabled")]);
    m_video_engagement_enabled_isSet = !json[QString("videoEngagementEnabled")].isNull() && m_video_engagement_enabled_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_file_downloads_enabled_isSet) {
        obj.insert(QString("fileDownloadsEnabled"), ::OpenAPI::toJsonValue(m_file_downloads_enabled));
    }
    if (m_form_interactions_enabled_isSet) {
        obj.insert(QString("formInteractionsEnabled"), ::OpenAPI::toJsonValue(m_form_interactions_enabled));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_outbound_clicks_enabled_isSet) {
        obj.insert(QString("outboundClicksEnabled"), ::OpenAPI::toJsonValue(m_outbound_clicks_enabled));
    }
    if (m_page_changes_enabled_isSet) {
        obj.insert(QString("pageChangesEnabled"), ::OpenAPI::toJsonValue(m_page_changes_enabled));
    }
    if (m_scrolls_enabled_isSet) {
        obj.insert(QString("scrollsEnabled"), ::OpenAPI::toJsonValue(m_scrolls_enabled));
    }
    if (m_search_query_parameter_isSet) {
        obj.insert(QString("searchQueryParameter"), ::OpenAPI::toJsonValue(m_search_query_parameter));
    }
    if (m_site_search_enabled_isSet) {
        obj.insert(QString("siteSearchEnabled"), ::OpenAPI::toJsonValue(m_site_search_enabled));
    }
    if (m_stream_enabled_isSet) {
        obj.insert(QString("streamEnabled"), ::OpenAPI::toJsonValue(m_stream_enabled));
    }
    if (m_uri_query_parameter_isSet) {
        obj.insert(QString("uriQueryParameter"), ::OpenAPI::toJsonValue(m_uri_query_parameter));
    }
    if (m_video_engagement_enabled_isSet) {
        obj.insert(QString("videoEngagementEnabled"), ::OpenAPI::toJsonValue(m_video_engagement_enabled));
    }
    return obj;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isFileDownloadsEnabled() const {
    return m_file_downloads_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setFileDownloadsEnabled(const bool &file_downloads_enabled) {
    m_file_downloads_enabled = file_downloads_enabled;
    m_file_downloads_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_file_downloads_enabled_Set() const{
    return m_file_downloads_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_file_downloads_enabled_Valid() const{
    return m_file_downloads_enabled_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isFormInteractionsEnabled() const {
    return m_form_interactions_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setFormInteractionsEnabled(const bool &form_interactions_enabled) {
    m_form_interactions_enabled = form_interactions_enabled;
    m_form_interactions_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_form_interactions_enabled_Set() const{
    return m_form_interactions_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_form_interactions_enabled_Valid() const{
    return m_form_interactions_enabled_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isOutboundClicksEnabled() const {
    return m_outbound_clicks_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setOutboundClicksEnabled(const bool &outbound_clicks_enabled) {
    m_outbound_clicks_enabled = outbound_clicks_enabled;
    m_outbound_clicks_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_outbound_clicks_enabled_Set() const{
    return m_outbound_clicks_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_outbound_clicks_enabled_Valid() const{
    return m_outbound_clicks_enabled_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isPageChangesEnabled() const {
    return m_page_changes_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setPageChangesEnabled(const bool &page_changes_enabled) {
    m_page_changes_enabled = page_changes_enabled;
    m_page_changes_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_page_changes_enabled_Set() const{
    return m_page_changes_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_page_changes_enabled_Valid() const{
    return m_page_changes_enabled_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isScrollsEnabled() const {
    return m_scrolls_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setScrollsEnabled(const bool &scrolls_enabled) {
    m_scrolls_enabled = scrolls_enabled;
    m_scrolls_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_scrolls_enabled_Set() const{
    return m_scrolls_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_scrolls_enabled_Valid() const{
    return m_scrolls_enabled_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::getSearchQueryParameter() const {
    return m_search_query_parameter;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setSearchQueryParameter(const QString &search_query_parameter) {
    m_search_query_parameter = search_query_parameter;
    m_search_query_parameter_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_search_query_parameter_Set() const{
    return m_search_query_parameter_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_search_query_parameter_Valid() const{
    return m_search_query_parameter_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isSiteSearchEnabled() const {
    return m_site_search_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setSiteSearchEnabled(const bool &site_search_enabled) {
    m_site_search_enabled = site_search_enabled;
    m_site_search_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_site_search_enabled_Set() const{
    return m_site_search_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_site_search_enabled_Valid() const{
    return m_site_search_enabled_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isStreamEnabled() const {
    return m_stream_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setStreamEnabled(const bool &stream_enabled) {
    m_stream_enabled = stream_enabled;
    m_stream_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_stream_enabled_Set() const{
    return m_stream_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_stream_enabled_Valid() const{
    return m_stream_enabled_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::getUriQueryParameter() const {
    return m_uri_query_parameter;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setUriQueryParameter(const QString &uri_query_parameter) {
    m_uri_query_parameter = uri_query_parameter;
    m_uri_query_parameter_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_uri_query_parameter_Set() const{
    return m_uri_query_parameter_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_uri_query_parameter_Valid() const{
    return m_uri_query_parameter_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isVideoEngagementEnabled() const {
    return m_video_engagement_enabled;
}
void OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::setVideoEngagementEnabled(const bool &video_engagement_enabled) {
    m_video_engagement_enabled = video_engagement_enabled;
    m_video_engagement_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_video_engagement_enabled_Set() const{
    return m_video_engagement_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::is_video_engagement_enabled_Valid() const{
    return m_video_engagement_enabled_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_downloads_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_interactions_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_clicks_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_changes_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scrolls_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_query_parameter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_search_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_query_parameter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_engagement_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
