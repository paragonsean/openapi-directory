/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::~OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse() {}

void OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::initializeModel() {

    m_display_video360_advertiser_link_isSet = false;
    m_display_video360_advertiser_link_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::fromJsonObject(QJsonObject json) {

    m_display_video360_advertiser_link_isValid = ::OpenAPI::fromJsonValue(m_display_video360_advertiser_link, json[QString("displayVideo360AdvertiserLink")]);
    m_display_video360_advertiser_link_isSet = !json[QString("displayVideo360AdvertiserLink")].isNull() && m_display_video360_advertiser_link_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_display_video360_advertiser_link.isSet()) {
        obj.insert(QString("displayVideo360AdvertiserLink"), ::OpenAPI::toJsonValue(m_display_video360_advertiser_link));
    }
    return obj;
}

OAIGoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::getDisplayVideo360AdvertiserLink() const {
    return m_display_video360_advertiser_link;
}
void OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::setDisplayVideo360AdvertiserLink(const OAIGoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink &display_video360_advertiser_link) {
    m_display_video360_advertiser_link = display_video360_advertiser_link;
    m_display_video360_advertiser_link_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::is_display_video360_advertiser_link_Set() const{
    return m_display_video360_advertiser_link_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::is_display_video360_advertiser_link_Valid() const{
    return m_display_video360_advertiser_link_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_video360_advertiser_link.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
