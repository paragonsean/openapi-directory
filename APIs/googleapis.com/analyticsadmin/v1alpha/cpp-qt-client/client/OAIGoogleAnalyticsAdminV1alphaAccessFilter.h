/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaAccessFilter.h
 *
 * An expression to filter dimension or metric values.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaAccessFilter_H
#define OAIGoogleAnalyticsAdminV1alphaAccessFilter_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1alphaAccessBetweenFilter.h"
#include "OAIGoogleAnalyticsAdminV1alphaAccessInListFilter.h"
#include "OAIGoogleAnalyticsAdminV1alphaAccessNumericFilter.h"
#include "OAIGoogleAnalyticsAdminV1alphaAccessStringFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1alphaAccessBetweenFilter;
class OAIGoogleAnalyticsAdminV1alphaAccessInListFilter;
class OAIGoogleAnalyticsAdminV1alphaAccessNumericFilter;
class OAIGoogleAnalyticsAdminV1alphaAccessStringFilter;

class OAIGoogleAnalyticsAdminV1alphaAccessFilter : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaAccessFilter();
    OAIGoogleAnalyticsAdminV1alphaAccessFilter(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaAccessFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleAnalyticsAdminV1alphaAccessBetweenFilter getBetweenFilter() const;
    void setBetweenFilter(const OAIGoogleAnalyticsAdminV1alphaAccessBetweenFilter &between_filter);
    bool is_between_filter_Set() const;
    bool is_between_filter_Valid() const;

    QString getFieldName() const;
    void setFieldName(const QString &field_name);
    bool is_field_name_Set() const;
    bool is_field_name_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessInListFilter getInListFilter() const;
    void setInListFilter(const OAIGoogleAnalyticsAdminV1alphaAccessInListFilter &in_list_filter);
    bool is_in_list_filter_Set() const;
    bool is_in_list_filter_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessNumericFilter getNumericFilter() const;
    void setNumericFilter(const OAIGoogleAnalyticsAdminV1alphaAccessNumericFilter &numeric_filter);
    bool is_numeric_filter_Set() const;
    bool is_numeric_filter_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessStringFilter getStringFilter() const;
    void setStringFilter(const OAIGoogleAnalyticsAdminV1alphaAccessStringFilter &string_filter);
    bool is_string_filter_Set() const;
    bool is_string_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleAnalyticsAdminV1alphaAccessBetweenFilter m_between_filter;
    bool m_between_filter_isSet;
    bool m_between_filter_isValid;

    QString m_field_name;
    bool m_field_name_isSet;
    bool m_field_name_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessInListFilter m_in_list_filter;
    bool m_in_list_filter_isSet;
    bool m_in_list_filter_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessNumericFilter m_numeric_filter;
    bool m_numeric_filter_isSet;
    bool m_numeric_filter_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessStringFilter m_string_filter;
    bool m_string_filter_isSet;
    bool m_string_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaAccessFilter)

#endif // OAIGoogleAnalyticsAdminV1alphaAccessFilter_H
