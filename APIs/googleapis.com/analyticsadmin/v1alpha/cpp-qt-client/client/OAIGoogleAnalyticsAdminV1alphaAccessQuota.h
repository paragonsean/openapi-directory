/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaAccessQuota.h
 *
 * Current state of all quotas for this Analytics property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaAccessQuota_H
#define OAIGoogleAnalyticsAdminV1alphaAccessQuota_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus;

class OAIGoogleAnalyticsAdminV1alphaAccessQuota : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaAccessQuota();
    OAIGoogleAnalyticsAdminV1alphaAccessQuota(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaAccessQuota() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus getConcurrentRequests() const;
    void setConcurrentRequests(const OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus &concurrent_requests);
    bool is_concurrent_requests_Set() const;
    bool is_concurrent_requests_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus getServerErrorsPerProjectPerHour() const;
    void setServerErrorsPerProjectPerHour(const OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus &server_errors_per_project_per_hour);
    bool is_server_errors_per_project_per_hour_Set() const;
    bool is_server_errors_per_project_per_hour_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus getTokensPerDay() const;
    void setTokensPerDay(const OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus &tokens_per_day);
    bool is_tokens_per_day_Set() const;
    bool is_tokens_per_day_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus getTokensPerHour() const;
    void setTokensPerHour(const OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus &tokens_per_hour);
    bool is_tokens_per_hour_Set() const;
    bool is_tokens_per_hour_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus getTokensPerProjectPerHour() const;
    void setTokensPerProjectPerHour(const OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus &tokens_per_project_per_hour);
    bool is_tokens_per_project_per_hour_Set() const;
    bool is_tokens_per_project_per_hour_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus m_concurrent_requests;
    bool m_concurrent_requests_isSet;
    bool m_concurrent_requests_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus m_server_errors_per_project_per_hour;
    bool m_server_errors_per_project_per_hour_isSet;
    bool m_server_errors_per_project_per_hour_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus m_tokens_per_day;
    bool m_tokens_per_day_isSet;
    bool m_tokens_per_day_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus m_tokens_per_hour;
    bool m_tokens_per_hour_isSet;
    bool m_tokens_per_hour_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus m_tokens_per_project_per_hour;
    bool m_tokens_per_project_per_hour_isSet;
    bool m_tokens_per_project_per_hour_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaAccessQuota)

#endif // OAIGoogleAnalyticsAdminV1alphaAccessQuota_H
