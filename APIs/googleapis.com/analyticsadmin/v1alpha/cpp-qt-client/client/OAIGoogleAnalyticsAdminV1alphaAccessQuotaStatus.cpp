/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::~OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus() {}

void OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::initializeModel() {

    m_consumed_isSet = false;
    m_consumed_isValid = false;

    m_remaining_isSet = false;
    m_remaining_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::fromJsonObject(QJsonObject json) {

    m_consumed_isValid = ::OpenAPI::fromJsonValue(m_consumed, json[QString("consumed")]);
    m_consumed_isSet = !json[QString("consumed")].isNull() && m_consumed_isValid;

    m_remaining_isValid = ::OpenAPI::fromJsonValue(m_remaining, json[QString("remaining")]);
    m_remaining_isSet = !json[QString("remaining")].isNull() && m_remaining_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_consumed_isSet) {
        obj.insert(QString("consumed"), ::OpenAPI::toJsonValue(m_consumed));
    }
    if (m_remaining_isSet) {
        obj.insert(QString("remaining"), ::OpenAPI::toJsonValue(m_remaining));
    }
    return obj;
}

qint32 OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::getConsumed() const {
    return m_consumed;
}
void OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::setConsumed(const qint32 &consumed) {
    m_consumed = consumed;
    m_consumed_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::is_consumed_Set() const{
    return m_consumed_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::is_consumed_Valid() const{
    return m_consumed_isValid;
}

qint32 OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::getRemaining() const {
    return m_remaining;
}
void OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::setRemaining(const qint32 &remaining) {
    m_remaining = remaining;
    m_remaining_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::is_remaining_Set() const{
    return m_remaining_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::is_remaining_Valid() const{
    return m_remaining_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_consumed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remaining_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessQuotaStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
