/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaConversionValues.h
 *
 * Conversion value settings for a postback window for SKAdNetwork conversion value schema.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaConversionValues_H
#define OAIGoogleAnalyticsAdminV1alphaConversionValues_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1alphaEventMapping.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1alphaEventMapping;

class OAIGoogleAnalyticsAdminV1alphaConversionValues : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaConversionValues();
    OAIGoogleAnalyticsAdminV1alphaConversionValues(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaConversionValues() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCoarseValue() const;
    void setCoarseValue(const QString &coarse_value);
    bool is_coarse_value_Set() const;
    bool is_coarse_value_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIGoogleAnalyticsAdminV1alphaEventMapping> getEventMappings() const;
    void setEventMappings(const QList<OAIGoogleAnalyticsAdminV1alphaEventMapping> &event_mappings);
    bool is_event_mappings_Set() const;
    bool is_event_mappings_Valid() const;

    qint32 getFineValue() const;
    void setFineValue(const qint32 &fine_value);
    bool is_fine_value_Set() const;
    bool is_fine_value_Valid() const;

    bool isLockEnabled() const;
    void setLockEnabled(const bool &lock_enabled);
    bool is_lock_enabled_Set() const;
    bool is_lock_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_coarse_value;
    bool m_coarse_value_isSet;
    bool m_coarse_value_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIGoogleAnalyticsAdminV1alphaEventMapping> m_event_mappings;
    bool m_event_mappings_isSet;
    bool m_event_mappings_isValid;

    qint32 m_fine_value;
    bool m_fine_value_isSet;
    bool m_fine_value_isValid;

    bool m_lock_enabled;
    bool m_lock_enabled_isSet;
    bool m_lock_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaConversionValues)

#endif // OAIGoogleAnalyticsAdminV1alphaConversionValues_H
