/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression.h
 *
 * Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression_H
#define OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1alphaAccessFilter.h"
#include "OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1alphaAccessFilter;
class OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList;

class OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression();
    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleAnalyticsAdminV1alphaAccessFilter getAccessFilter() const;
    void setAccessFilter(const OAIGoogleAnalyticsAdminV1alphaAccessFilter &access_filter);
    bool is_access_filter_Set() const;
    bool is_access_filter_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList getAndGroup() const;
    void setAndGroup(const OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList &and_group);
    bool is_and_group_Set() const;
    bool is_and_group_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression getNotExpression() const;
    void setNotExpression(const OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression &not_expression);
    bool is_not_expression_Set() const;
    bool is_not_expression_Valid() const;

    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList getOrGroup() const;
    void setOrGroup(const OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList &or_group);
    bool is_or_group_Set() const;
    bool is_or_group_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleAnalyticsAdminV1alphaAccessFilter m_access_filter;
    bool m_access_filter_isSet;
    bool m_access_filter_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList m_and_group;
    bool m_and_group_isSet;
    bool m_and_group_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression m_not_expression;
    bool m_not_expression_isSet;
    bool m_not_expression_isValid;

    OAIGoogleAnalyticsAdminV1alphaAccessFilterExpressionList m_or_group;
    bool m_or_group_isSet;
    bool m_or_group_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression)

#endif // OAIGoogleAnalyticsAdminV1alphaAccessFilterExpression_H
