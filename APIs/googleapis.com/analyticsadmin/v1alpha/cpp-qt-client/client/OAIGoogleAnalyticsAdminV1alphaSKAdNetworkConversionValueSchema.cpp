/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::~OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema() {}

void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::initializeModel() {

    m_apply_conversion_values_isSet = false;
    m_apply_conversion_values_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_postback_window_one_isSet = false;
    m_postback_window_one_isValid = false;

    m_postback_window_three_isSet = false;
    m_postback_window_three_isValid = false;

    m_postback_window_two_isSet = false;
    m_postback_window_two_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::fromJsonObject(QJsonObject json) {

    m_apply_conversion_values_isValid = ::OpenAPI::fromJsonValue(m_apply_conversion_values, json[QString("applyConversionValues")]);
    m_apply_conversion_values_isSet = !json[QString("applyConversionValues")].isNull() && m_apply_conversion_values_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_postback_window_one_isValid = ::OpenAPI::fromJsonValue(m_postback_window_one, json[QString("postbackWindowOne")]);
    m_postback_window_one_isSet = !json[QString("postbackWindowOne")].isNull() && m_postback_window_one_isValid;

    m_postback_window_three_isValid = ::OpenAPI::fromJsonValue(m_postback_window_three, json[QString("postbackWindowThree")]);
    m_postback_window_three_isSet = !json[QString("postbackWindowThree")].isNull() && m_postback_window_three_isValid;

    m_postback_window_two_isValid = ::OpenAPI::fromJsonValue(m_postback_window_two, json[QString("postbackWindowTwo")]);
    m_postback_window_two_isSet = !json[QString("postbackWindowTwo")].isNull() && m_postback_window_two_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_apply_conversion_values_isSet) {
        obj.insert(QString("applyConversionValues"), ::OpenAPI::toJsonValue(m_apply_conversion_values));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_postback_window_one.isSet()) {
        obj.insert(QString("postbackWindowOne"), ::OpenAPI::toJsonValue(m_postback_window_one));
    }
    if (m_postback_window_three.isSet()) {
        obj.insert(QString("postbackWindowThree"), ::OpenAPI::toJsonValue(m_postback_window_three));
    }
    if (m_postback_window_two.isSet()) {
        obj.insert(QString("postbackWindowTwo"), ::OpenAPI::toJsonValue(m_postback_window_two));
    }
    return obj;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::isApplyConversionValues() const {
    return m_apply_conversion_values;
}
void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::setApplyConversionValues(const bool &apply_conversion_values) {
    m_apply_conversion_values = apply_conversion_values;
    m_apply_conversion_values_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_apply_conversion_values_Set() const{
    return m_apply_conversion_values_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_apply_conversion_values_Valid() const{
    return m_apply_conversion_values_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleAnalyticsAdminV1alphaPostbackWindow OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::getPostbackWindowOne() const {
    return m_postback_window_one;
}
void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::setPostbackWindowOne(const OAIGoogleAnalyticsAdminV1alphaPostbackWindow &postback_window_one) {
    m_postback_window_one = postback_window_one;
    m_postback_window_one_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_postback_window_one_Set() const{
    return m_postback_window_one_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_postback_window_one_Valid() const{
    return m_postback_window_one_isValid;
}

OAIGoogleAnalyticsAdminV1alphaPostbackWindow OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::getPostbackWindowThree() const {
    return m_postback_window_three;
}
void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::setPostbackWindowThree(const OAIGoogleAnalyticsAdminV1alphaPostbackWindow &postback_window_three) {
    m_postback_window_three = postback_window_three;
    m_postback_window_three_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_postback_window_three_Set() const{
    return m_postback_window_three_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_postback_window_three_Valid() const{
    return m_postback_window_three_isValid;
}

OAIGoogleAnalyticsAdminV1alphaPostbackWindow OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::getPostbackWindowTwo() const {
    return m_postback_window_two;
}
void OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::setPostbackWindowTwo(const OAIGoogleAnalyticsAdminV1alphaPostbackWindow &postback_window_two) {
    m_postback_window_two = postback_window_two;
    m_postback_window_two_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_postback_window_two_Set() const{
    return m_postback_window_two_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::is_postback_window_two_Valid() const{
    return m_postback_window_two_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apply_conversion_values_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postback_window_one.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_postback_window_three.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_postback_window_two.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
