/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::~OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest() {}

void OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::initializeModel() {

    m_access_binding_isSet = false;
    m_access_binding_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::fromJsonObject(QJsonObject json) {

    m_access_binding_isValid = ::OpenAPI::fromJsonValue(m_access_binding, json[QString("accessBinding")]);
    m_access_binding_isSet = !json[QString("accessBinding")].isNull() && m_access_binding_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_access_binding.isSet()) {
        obj.insert(QString("accessBinding"), ::OpenAPI::toJsonValue(m_access_binding));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

OAIGoogleAnalyticsAdminV1alphaAccessBinding OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::getAccessBinding() const {
    return m_access_binding;
}
void OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::setAccessBinding(const OAIGoogleAnalyticsAdminV1alphaAccessBinding &access_binding) {
    m_access_binding = access_binding;
    m_access_binding_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::is_access_binding_Set() const{
    return m_access_binding_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::is_access_binding_Valid() const{
    return m_access_binding_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::getParent() const {
    return m_parent;
}
void OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_binding.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaCreateAccessBindingRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
