/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaAccessDateRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaAccessDateRange::OAIGoogleAnalyticsAdminV1alphaAccessDateRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaAccessDateRange::OAIGoogleAnalyticsAdminV1alphaAccessDateRange() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaAccessDateRange::~OAIGoogleAnalyticsAdminV1alphaAccessDateRange() {}

void OAIGoogleAnalyticsAdminV1alphaAccessDateRange::initializeModel() {

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaAccessDateRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaAccessDateRange::fromJsonObject(QJsonObject json) {

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessDateRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaAccessDateRange::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessDateRange::getEndDate() const {
    return m_end_date;
}
void OAIGoogleAnalyticsAdminV1alphaAccessDateRange::setEndDate(const QString &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessDateRange::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessDateRange::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaAccessDateRange::getStartDate() const {
    return m_start_date;
}
void OAIGoogleAnalyticsAdminV1alphaAccessDateRange::setStartDate(const QString &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessDateRange::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessDateRange::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessDateRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaAccessDateRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
