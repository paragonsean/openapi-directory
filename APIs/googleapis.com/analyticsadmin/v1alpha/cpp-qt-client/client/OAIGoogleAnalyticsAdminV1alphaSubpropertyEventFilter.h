/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter.h
 *
 * A resource message representing a GA4 Subproperty event filter.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter_H
#define OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilterClause.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilterClause;

class OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter();
    OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplyToProperty() const;
    void setApplyToProperty(const QString &apply_to_property);
    bool is_apply_to_property_Set() const;
    bool is_apply_to_property_Valid() const;

    QList<OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilterClause> getFilterClauses() const;
    void setFilterClauses(const QList<OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilterClause> &filter_clauses);
    bool is_filter_clauses_Set() const;
    bool is_filter_clauses_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_apply_to_property;
    bool m_apply_to_property_isSet;
    bool m_apply_to_property_isValid;

    QList<OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilterClause> m_filter_clauses;
    bool m_filter_clauses_isSet;
    bool m_filter_clauses_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter)

#endif // OAIGoogleAnalyticsAdminV1alphaSubpropertyEventFilter_H
