/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaExpandedDataSet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::OAIGoogleAnalyticsAdminV1alphaExpandedDataSet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::OAIGoogleAnalyticsAdminV1alphaExpandedDataSet() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::~OAIGoogleAnalyticsAdminV1alphaExpandedDataSet() {}

void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::initializeModel() {

    m_data_collection_start_time_isSet = false;
    m_data_collection_start_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_dimension_filter_expression_isSet = false;
    m_dimension_filter_expression_isValid = false;

    m_dimension_names_isSet = false;
    m_dimension_names_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_metric_names_isSet = false;
    m_metric_names_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::fromJsonObject(QJsonObject json) {

    m_data_collection_start_time_isValid = ::OpenAPI::fromJsonValue(m_data_collection_start_time, json[QString("dataCollectionStartTime")]);
    m_data_collection_start_time_isSet = !json[QString("dataCollectionStartTime")].isNull() && m_data_collection_start_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_dimension_filter_expression_isValid = ::OpenAPI::fromJsonValue(m_dimension_filter_expression, json[QString("dimensionFilterExpression")]);
    m_dimension_filter_expression_isSet = !json[QString("dimensionFilterExpression")].isNull() && m_dimension_filter_expression_isValid;

    m_dimension_names_isValid = ::OpenAPI::fromJsonValue(m_dimension_names, json[QString("dimensionNames")]);
    m_dimension_names_isSet = !json[QString("dimensionNames")].isNull() && m_dimension_names_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_metric_names_isValid = ::OpenAPI::fromJsonValue(m_metric_names, json[QString("metricNames")]);
    m_metric_names_isSet = !json[QString("metricNames")].isNull() && m_metric_names_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::asJsonObject() const {
    QJsonObject obj;
    if (m_data_collection_start_time_isSet) {
        obj.insert(QString("dataCollectionStartTime"), ::OpenAPI::toJsonValue(m_data_collection_start_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_dimension_filter_expression.isSet()) {
        obj.insert(QString("dimensionFilterExpression"), ::OpenAPI::toJsonValue(m_dimension_filter_expression));
    }
    if (m_dimension_names.size() > 0) {
        obj.insert(QString("dimensionNames"), ::OpenAPI::toJsonValue(m_dimension_names));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_metric_names.size() > 0) {
        obj.insert(QString("metricNames"), ::OpenAPI::toJsonValue(m_metric_names));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::getDataCollectionStartTime() const {
    return m_data_collection_start_time;
}
void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::setDataCollectionStartTime(const QString &data_collection_start_time) {
    m_data_collection_start_time = data_collection_start_time;
    m_data_collection_start_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_data_collection_start_time_Set() const{
    return m_data_collection_start_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_data_collection_start_time_Valid() const{
    return m_data_collection_start_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::getDescription() const {
    return m_description;
}
void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_description_Valid() const{
    return m_description_isValid;
}

OAIGoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::getDimensionFilterExpression() const {
    return m_dimension_filter_expression;
}
void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::setDimensionFilterExpression(const OAIGoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression &dimension_filter_expression) {
    m_dimension_filter_expression = dimension_filter_expression;
    m_dimension_filter_expression_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_dimension_filter_expression_Set() const{
    return m_dimension_filter_expression_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_dimension_filter_expression_Valid() const{
    return m_dimension_filter_expression_isValid;
}

QList<QString> OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::getDimensionNames() const {
    return m_dimension_names;
}
void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::setDimensionNames(const QList<QString> &dimension_names) {
    m_dimension_names = dimension_names;
    m_dimension_names_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_dimension_names_Set() const{
    return m_dimension_names_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_dimension_names_Valid() const{
    return m_dimension_names_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<QString> OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::getMetricNames() const {
    return m_metric_names;
}
void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::setMetricNames(const QList<QString> &metric_names) {
    m_metric_names = metric_names;
    m_metric_names_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_metric_names_Set() const{
    return m_metric_names_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_metric_names_Valid() const{
    return m_metric_names_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_collection_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension_filter_expression.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaExpandedDataSet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
