/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::~OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue() {}

void OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

double OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::getValue() const {
    return m_value;
}
void OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaConversionEventDefaultConversionValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
