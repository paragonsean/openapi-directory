/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::~OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse() {}

void OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::initializeModel() {

    m_display_video360_advertiser_link_proposals_isSet = false;
    m_display_video360_advertiser_link_proposals_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::fromJsonObject(QJsonObject json) {

    m_display_video360_advertiser_link_proposals_isValid = ::OpenAPI::fromJsonValue(m_display_video360_advertiser_link_proposals, json[QString("displayVideo360AdvertiserLinkProposals")]);
    m_display_video360_advertiser_link_proposals_isSet = !json[QString("displayVideo360AdvertiserLinkProposals")].isNull() && m_display_video360_advertiser_link_proposals_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_display_video360_advertiser_link_proposals.size() > 0) {
        obj.insert(QString("displayVideo360AdvertiserLinkProposals"), ::OpenAPI::toJsonValue(m_display_video360_advertiser_link_proposals));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal> OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::getDisplayVideo360AdvertiserLinkProposals() const {
    return m_display_video360_advertiser_link_proposals;
}
void OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::setDisplayVideo360AdvertiserLinkProposals(const QList<OAIGoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal> &display_video360_advertiser_link_proposals) {
    m_display_video360_advertiser_link_proposals = display_video360_advertiser_link_proposals;
    m_display_video360_advertiser_link_proposals_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::is_display_video360_advertiser_link_proposals_Set() const{
    return m_display_video360_advertiser_link_proposals_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::is_display_video360_advertiser_link_proposals_Valid() const{
    return m_display_video360_advertiser_link_proposals_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_video360_advertiser_link_proposals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
