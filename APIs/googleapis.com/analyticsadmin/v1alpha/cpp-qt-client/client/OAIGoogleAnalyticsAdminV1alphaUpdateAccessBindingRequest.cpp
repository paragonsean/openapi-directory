/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::~OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest() {}

void OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::initializeModel() {

    m_access_binding_isSet = false;
    m_access_binding_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::fromJsonObject(QJsonObject json) {

    m_access_binding_isValid = ::OpenAPI::fromJsonValue(m_access_binding, json[QString("accessBinding")]);
    m_access_binding_isSet = !json[QString("accessBinding")].isNull() && m_access_binding_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_access_binding.isSet()) {
        obj.insert(QString("accessBinding"), ::OpenAPI::toJsonValue(m_access_binding));
    }
    return obj;
}

OAIGoogleAnalyticsAdminV1alphaAccessBinding OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::getAccessBinding() const {
    return m_access_binding;
}
void OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::setAccessBinding(const OAIGoogleAnalyticsAdminV1alphaAccessBinding &access_binding) {
    m_access_binding = access_binding;
    m_access_binding_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::is_access_binding_Set() const{
    return m_access_binding_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::is_access_binding_Valid() const{
    return m_access_binding_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_binding.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaUpdateAccessBindingRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
