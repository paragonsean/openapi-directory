/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::~OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse() {}

void OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::initializeModel() {

    m_access_bindings_isSet = false;
    m_access_bindings_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::fromJsonObject(QJsonObject json) {

    m_access_bindings_isValid = ::OpenAPI::fromJsonValue(m_access_bindings, json[QString("accessBindings")]);
    m_access_bindings_isSet = !json[QString("accessBindings")].isNull() && m_access_bindings_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_access_bindings.size() > 0) {
        obj.insert(QString("accessBindings"), ::OpenAPI::toJsonValue(m_access_bindings));
    }
    return obj;
}

QList<OAIGoogleAnalyticsAdminV1alphaAccessBinding> OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::getAccessBindings() const {
    return m_access_bindings;
}
void OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::setAccessBindings(const QList<OAIGoogleAnalyticsAdminV1alphaAccessBinding> &access_bindings) {
    m_access_bindings = access_bindings;
    m_access_bindings_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::is_access_bindings_Set() const{
    return m_access_bindings_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::is_access_bindings_Valid() const{
    return m_access_bindings_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_bindings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
