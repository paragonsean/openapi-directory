/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::~OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter() {}

void OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::initializeModel() {

    m_match_type_isSet = false;
    m_match_type_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::fromJsonObject(QJsonObject json) {

    m_match_type_isValid = ::OpenAPI::fromJsonValue(m_match_type, json[QString("matchType")]);
    m_match_type_isSet = !json[QString("matchType")].isNull() && m_match_type_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_match_type_isSet) {
        obj.insert(QString("matchType"), ::OpenAPI::toJsonValue(m_match_type));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::getMatchType() const {
    return m_match_type;
}
void OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::setMatchType(const QString &match_type) {
    m_match_type = match_type;
    m_match_type_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::is_match_type_Set() const{
    return m_match_type_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::is_match_type_Valid() const{
    return m_match_type_isValid;
}

QString OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::getValue() const {
    return m_value;
}
void OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1alphaChannelGroupFilterStringFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
