/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails.h
 *
 * Status information for a link proposal.
 */

#ifndef OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails_H
#define OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails();
    OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails(QString json);
    ~OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLinkProposalInitiatingProduct() const;
    void setLinkProposalInitiatingProduct(const QString &link_proposal_initiating_product);
    bool is_link_proposal_initiating_product_Set() const;
    bool is_link_proposal_initiating_product_Valid() const;

    QString getLinkProposalState() const;
    void setLinkProposalState(const QString &link_proposal_state);
    bool is_link_proposal_state_Set() const;
    bool is_link_proposal_state_Valid() const;

    QString getRequestorEmail() const;
    void setRequestorEmail(const QString &requestor_email);
    bool is_requestor_email_Set() const;
    bool is_requestor_email_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_link_proposal_initiating_product;
    bool m_link_proposal_initiating_product_isSet;
    bool m_link_proposal_initiating_product_isValid;

    QString m_link_proposal_state;
    bool m_link_proposal_state_isSet;
    bool m_link_proposal_state_isValid;

    QString m_requestor_email;
    bool m_requestor_email_isSet;
    bool m_requestor_email_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails)

#endif // OAIGoogleAnalyticsAdminV1alphaLinkProposalStatusDetails_H
