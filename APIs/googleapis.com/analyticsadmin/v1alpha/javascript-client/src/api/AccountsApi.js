/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleAnalyticsAdminV1alphaListAccountsResponse from '../model/GoogleAnalyticsAdminV1alphaListAccountsResponse';
import GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest from '../model/GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest';
import GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse from '../model/GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse';
import GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest from '../model/GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest';
import GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsResponse from '../model/GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsResponse';

/**
* Accounts service.
* @module api/AccountsApi
* @version v1alpha
*/
export default class AccountsApi {

    /**
    * Constructs a new AccountsApi. 
    * @alias module:api/AccountsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the analyticsadminAccountsList operation.
     * @callback module:api/AccountsApi~analyticsadminAccountsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAnalyticsAdminV1alphaListAccountsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all accounts accessible by the caller. Note that these accounts might not currently have GA4 properties. Soft-deleted (ie: \"trashed\") accounts are excluded by default. Returns an empty list if no relevant accounts are found.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of resources to return. The service may return fewer than this value, even if there are additional pages. If unspecified, at most 50 resources will be returned. The maximum value is 200; (higher values will be coerced to the maximum)
     * @param {String} [pageToken] A page token, received from a previous `ListAccounts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAccounts` must match the call that provided the page token.
     * @param {Boolean} [showDeleted] Whether to include soft-deleted (ie: \"trashed\") Accounts in the results. Accounts can be inspected to determine whether they are deleted or not.
     * @param {module:api/AccountsApi~analyticsadminAccountsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAnalyticsAdminV1alphaListAccountsResponse}
     */
    analyticsadminAccountsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'showDeleted': opts['showDeleted']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleAnalyticsAdminV1alphaListAccountsResponse;
      return this.apiClient.callApi(
        '/v1alpha/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsadminAccountsProvisionAccountTicket operation.
     * @callback module:api/AccountsApi~analyticsadminAccountsProvisionAccountTicketCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Requests a ticket for creating an account.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest} [googleAnalyticsAdminV1alphaProvisionAccountTicketRequest] 
     * @param {module:api/AccountsApi~analyticsadminAccountsProvisionAccountTicketCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse}
     */
    analyticsadminAccountsProvisionAccountTicket(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAnalyticsAdminV1alphaProvisionAccountTicketRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse;
      return this.apiClient.callApi(
        '/v1alpha/accounts:provisionAccountTicket', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsadminAccountsSearchChangeHistoryEvents operation.
     * @callback module:api/AccountsApi~analyticsadminAccountsSearchChangeHistoryEventsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches through all changes to an account or its children given the specified set of filters.
     * @param {String} account Required. The account resource for which to return change history resources. Format: accounts/{account} Example: \"accounts/100\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest} [googleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest] 
     * @param {module:api/AccountsApi~analyticsadminAccountsSearchChangeHistoryEventsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsResponse}
     */
    analyticsadminAccountsSearchChangeHistoryEvents(account, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest'];
      // verify the required parameter 'account' is set
      if (account === undefined || account === null) {
        throw new Error("Missing the required parameter 'account' when calling analyticsadminAccountsSearchChangeHistoryEvents");
      }

      let pathParams = {
        'account': account
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsResponse;
      return this.apiClient.callApi(
        '/v1alpha/{account}:searchChangeHistoryEvents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
