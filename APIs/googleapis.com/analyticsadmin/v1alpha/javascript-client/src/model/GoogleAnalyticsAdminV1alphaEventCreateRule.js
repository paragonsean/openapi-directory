/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAnalyticsAdminV1alphaMatchingCondition from './GoogleAnalyticsAdminV1alphaMatchingCondition';
import GoogleAnalyticsAdminV1alphaParameterMutation from './GoogleAnalyticsAdminV1alphaParameterMutation';

/**
 * The GoogleAnalyticsAdminV1alphaEventCreateRule model module.
 * @module model/GoogleAnalyticsAdminV1alphaEventCreateRule
 * @version v1alpha
 */
class GoogleAnalyticsAdminV1alphaEventCreateRule {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1alphaEventCreateRule</code>.
     * An Event Create Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined. Unlike Event Edit rules, Event Creation Rules have no defined order. They will all be run independently. Event Edit and Event Create rules can&#39;t be used to modify an event created from an Event Create rule.
     * @alias module:model/GoogleAnalyticsAdminV1alphaEventCreateRule
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1alphaEventCreateRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1alphaEventCreateRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1alphaEventCreateRule} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1alphaEventCreateRule} The populated <code>GoogleAnalyticsAdminV1alphaEventCreateRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1alphaEventCreateRule();

            if (data.hasOwnProperty('destinationEvent')) {
                obj['destinationEvent'] = ApiClient.convertToType(data['destinationEvent'], 'String');
            }
            if (data.hasOwnProperty('eventConditions')) {
                obj['eventConditions'] = ApiClient.convertToType(data['eventConditions'], [GoogleAnalyticsAdminV1alphaMatchingCondition]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parameterMutations')) {
                obj['parameterMutations'] = ApiClient.convertToType(data['parameterMutations'], [GoogleAnalyticsAdminV1alphaParameterMutation]);
            }
            if (data.hasOwnProperty('sourceCopyParameters')) {
                obj['sourceCopyParameters'] = ApiClient.convertToType(data['sourceCopyParameters'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1alphaEventCreateRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1alphaEventCreateRule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['destinationEvent'] && !(typeof data['destinationEvent'] === 'string' || data['destinationEvent'] instanceof String)) {
            throw new Error("Expected the field `destinationEvent` to be a primitive type in the JSON string but got " + data['destinationEvent']);
        }
        if (data['eventConditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['eventConditions'])) {
                throw new Error("Expected the field `eventConditions` to be an array in the JSON data but got " + data['eventConditions']);
            }
            // validate the optional field `eventConditions` (array)
            for (const item of data['eventConditions']) {
                GoogleAnalyticsAdminV1alphaMatchingCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['parameterMutations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameterMutations'])) {
                throw new Error("Expected the field `parameterMutations` to be an array in the JSON data but got " + data['parameterMutations']);
            }
            // validate the optional field `parameterMutations` (array)
            for (const item of data['parameterMutations']) {
                GoogleAnalyticsAdminV1alphaParameterMutation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. The name of the new event to be created. This value must: * be less than 40 characters * consist only of letters, digits or _ (underscores) * start with a letter
 * @member {String} destinationEvent
 */
GoogleAnalyticsAdminV1alphaEventCreateRule.prototype['destinationEvent'] = undefined;

/**
 * Required. Must have at least one condition, and can have up to 10 max. Conditions on the source event must match for this rule to be applied.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1alphaMatchingCondition>} eventConditions
 */
GoogleAnalyticsAdminV1alphaEventCreateRule.prototype['eventConditions'] = undefined;

/**
 * Output only. Resource name for this EventCreateRule resource. Format: properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}
 * @member {String} name
 */
GoogleAnalyticsAdminV1alphaEventCreateRule.prototype['name'] = undefined;

/**
 * Parameter mutations define parameter behavior on the new event, and are applied in order. A maximum of 20 mutations can be applied.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1alphaParameterMutation>} parameterMutations
 */
GoogleAnalyticsAdminV1alphaEventCreateRule.prototype['parameterMutations'] = undefined;

/**
 * If true, the source parameters are copied to the new event. If false, or unset, all non-internal parameters are not copied from the source event. Parameter mutations are applied after the parameters have been copied.
 * @member {Boolean} sourceCopyParameters
 */
GoogleAnalyticsAdminV1alphaEventCreateRule.prototype['sourceCopyParameters'] = undefined;






export default GoogleAnalyticsAdminV1alphaEventCreateRule;

