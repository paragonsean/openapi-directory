/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAnalyticsAdminV1alphaEventMapping model module.
 * @module model/GoogleAnalyticsAdminV1alphaEventMapping
 * @version v1alpha
 */
class GoogleAnalyticsAdminV1alphaEventMapping {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1alphaEventMapping</code>.
     * Event setting conditions to match an event.
     * @alias module:model/GoogleAnalyticsAdminV1alphaEventMapping
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1alphaEventMapping.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1alphaEventMapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1alphaEventMapping} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1alphaEventMapping} The populated <code>GoogleAnalyticsAdminV1alphaEventMapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1alphaEventMapping();

            if (data.hasOwnProperty('eventName')) {
                obj['eventName'] = ApiClient.convertToType(data['eventName'], 'String');
            }
            if (data.hasOwnProperty('maxEventCount')) {
                obj['maxEventCount'] = ApiClient.convertToType(data['maxEventCount'], 'String');
            }
            if (data.hasOwnProperty('maxEventValue')) {
                obj['maxEventValue'] = ApiClient.convertToType(data['maxEventValue'], 'Number');
            }
            if (data.hasOwnProperty('minEventCount')) {
                obj['minEventCount'] = ApiClient.convertToType(data['minEventCount'], 'String');
            }
            if (data.hasOwnProperty('minEventValue')) {
                obj['minEventValue'] = ApiClient.convertToType(data['minEventValue'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1alphaEventMapping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1alphaEventMapping</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['eventName'] && !(typeof data['eventName'] === 'string' || data['eventName'] instanceof String)) {
            throw new Error("Expected the field `eventName` to be a primitive type in the JSON string but got " + data['eventName']);
        }
        // ensure the json data is a string
        if (data['maxEventCount'] && !(typeof data['maxEventCount'] === 'string' || data['maxEventCount'] instanceof String)) {
            throw new Error("Expected the field `maxEventCount` to be a primitive type in the JSON string but got " + data['maxEventCount']);
        }
        // ensure the json data is a string
        if (data['minEventCount'] && !(typeof data['minEventCount'] === 'string' || data['minEventCount'] instanceof String)) {
            throw new Error("Expected the field `minEventCount` to be a primitive type in the JSON string but got " + data['minEventCount']);
        }

        return true;
    }


}



/**
 * Required. Name of the GA4 event. It must always be set. The max allowed display name length is 40 UTF-16 code units.
 * @member {String} eventName
 */
GoogleAnalyticsAdminV1alphaEventMapping.prototype['eventName'] = undefined;

/**
 * The maximum number of times the event occurred. If not set, maximum event count won't be checked.
 * @member {String} maxEventCount
 */
GoogleAnalyticsAdminV1alphaEventMapping.prototype['maxEventCount'] = undefined;

/**
 * The maximum revenue generated due to the event. Revenue currency will be defined at the property level. If not set, maximum event value won't be checked.
 * @member {Number} maxEventValue
 */
GoogleAnalyticsAdminV1alphaEventMapping.prototype['maxEventValue'] = undefined;

/**
 * At least one of the following four min/max values must be set. The values set will be ANDed together to qualify an event. The minimum number of times the event occurred. If not set, minimum event count won't be checked.
 * @member {String} minEventCount
 */
GoogleAnalyticsAdminV1alphaEventMapping.prototype['minEventCount'] = undefined;

/**
 * The minimum revenue generated due to the event. Revenue currency will be defined at the property level. If not set, minimum event value won't be checked.
 * @member {Number} minEventValue
 */
GoogleAnalyticsAdminV1alphaEventMapping.prototype['minEventValue'] = undefined;






export default GoogleAnalyticsAdminV1alphaEventMapping;

