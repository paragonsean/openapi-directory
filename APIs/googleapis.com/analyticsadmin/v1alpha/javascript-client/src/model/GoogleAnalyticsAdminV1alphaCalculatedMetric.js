/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAnalyticsAdminV1alphaCalculatedMetric model module.
 * @module model/GoogleAnalyticsAdminV1alphaCalculatedMetric
 * @version v1alpha
 */
class GoogleAnalyticsAdminV1alphaCalculatedMetric {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1alphaCalculatedMetric</code>.
     * A definition for a calculated metric.
     * @alias module:model/GoogleAnalyticsAdminV1alphaCalculatedMetric
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1alphaCalculatedMetric.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1alphaCalculatedMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1alphaCalculatedMetric} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1alphaCalculatedMetric} The populated <code>GoogleAnalyticsAdminV1alphaCalculatedMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1alphaCalculatedMetric();

            if (data.hasOwnProperty('calculatedMetricId')) {
                obj['calculatedMetricId'] = ApiClient.convertToType(data['calculatedMetricId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('formula')) {
                obj['formula'] = ApiClient.convertToType(data['formula'], 'String');
            }
            if (data.hasOwnProperty('invalidMetricReference')) {
                obj['invalidMetricReference'] = ApiClient.convertToType(data['invalidMetricReference'], 'Boolean');
            }
            if (data.hasOwnProperty('metricUnit')) {
                obj['metricUnit'] = ApiClient.convertToType(data['metricUnit'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('restrictedMetricType')) {
                obj['restrictedMetricType'] = ApiClient.convertToType(data['restrictedMetricType'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1alphaCalculatedMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1alphaCalculatedMetric</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['calculatedMetricId'] && !(typeof data['calculatedMetricId'] === 'string' || data['calculatedMetricId'] instanceof String)) {
            throw new Error("Expected the field `calculatedMetricId` to be a primitive type in the JSON string but got " + data['calculatedMetricId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['formula'] && !(typeof data['formula'] === 'string' || data['formula'] instanceof String)) {
            throw new Error("Expected the field `formula` to be a primitive type in the JSON string but got " + data['formula']);
        }
        // ensure the json data is a string
        if (data['metricUnit'] && !(typeof data['metricUnit'] === 'string' || data['metricUnit'] instanceof String)) {
            throw new Error("Expected the field `metricUnit` to be a primitive type in the JSON string but got " + data['metricUnit']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['restrictedMetricType'])) {
            throw new Error("Expected the field `restrictedMetricType` to be an array in the JSON data but got " + data['restrictedMetricType']);
        }

        return true;
    }


}



/**
 * Output only. The ID to use for the calculated metric. In the UI, this is referred to as the \"API name.\" The calculated_metric_id is used when referencing this calculated metric from external APIs. For example, \"calcMetric:{calculated_metric_id}\".
 * @member {String} calculatedMetricId
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['calculatedMetricId'] = undefined;

/**
 * Optional. Description for this calculated metric. Max length of 4096 characters.
 * @member {String} description
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['description'] = undefined;

/**
 * Required. Display name for this calculated metric as shown in the Google Analytics UI. Max length 82 characters.
 * @member {String} displayName
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['displayName'] = undefined;

/**
 * Required. The calculated metric's definition. Maximum number of unique referenced custom metrics is 5. Formulas supports the following operations: + (addition), - (subtraction), - (negative), * (multiplication), / (division), () (parenthesis). Any valid real numbers are acceptable that fit in a Long (64bit integer) or a Double (64 bit floating point number). Example formula: \"( customEvent:parameter_name + cartPurchaseQuantity ) / 2.0\"
 * @member {String} formula
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['formula'] = undefined;

/**
 * Output only. If true, this calculated metric has a invalid metric reference. Anything using a calculated metric with invalid_metric_reference set to true may fail, produce warnings, or produce unexpected results.
 * @member {Boolean} invalidMetricReference
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['invalidMetricReference'] = undefined;

/**
 * Required. The type for the calculated metric's value.
 * @member {module:model/GoogleAnalyticsAdminV1alphaCalculatedMetric.MetricUnitEnum} metricUnit
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['metricUnit'] = undefined;

/**
 * Output only. Resource name for this CalculatedMetric. Format: 'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
 * @member {String} name
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['name'] = undefined;

/**
 * Output only. Types of restricted data that this metric contains.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1alphaCalculatedMetric.RestrictedMetricTypeEnum>} restrictedMetricType
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric.prototype['restrictedMetricType'] = undefined;





/**
 * Allowed values for the <code>metricUnit</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric['MetricUnitEnum'] = {

    /**
     * value: "METRIC_UNIT_UNSPECIFIED"
     * @const
     */
    "METRIC_UNIT_UNSPECIFIED": "METRIC_UNIT_UNSPECIFIED",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "CURRENCY"
     * @const
     */
    "CURRENCY": "CURRENCY",

    /**
     * value: "FEET"
     * @const
     */
    "FEET": "FEET",

    /**
     * value: "MILES"
     * @const
     */
    "MILES": "MILES",

    /**
     * value: "METERS"
     * @const
     */
    "METERS": "METERS",

    /**
     * value: "KILOMETERS"
     * @const
     */
    "KILOMETERS": "KILOMETERS",

    /**
     * value: "MILLISECONDS"
     * @const
     */
    "MILLISECONDS": "MILLISECONDS",

    /**
     * value: "SECONDS"
     * @const
     */
    "SECONDS": "SECONDS",

    /**
     * value: "MINUTES"
     * @const
     */
    "MINUTES": "MINUTES",

    /**
     * value: "HOURS"
     * @const
     */
    "HOURS": "HOURS"
};


/**
 * Allowed values for the <code>restrictedMetricType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaCalculatedMetric['RestrictedMetricTypeEnum'] = {

    /**
     * value: "RESTRICTED_METRIC_TYPE_UNSPECIFIED"
     * @const
     */
    "RESTRICTED_METRIC_TYPE_UNSPECIFIED": "RESTRICTED_METRIC_TYPE_UNSPECIFIED",

    /**
     * value: "COST_DATA"
     * @const
     */
    "COST_DATA": "COST_DATA",

    /**
     * value: "REVENUE_DATA"
     * @const
     */
    "REVENUE_DATA": "REVENUE_DATA"
};



export default GoogleAnalyticsAdminV1alphaCalculatedMetric;

