/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAnalyticsAdminV1alphaDataStreamAndroidAppStreamData from './GoogleAnalyticsAdminV1alphaDataStreamAndroidAppStreamData';
import GoogleAnalyticsAdminV1alphaDataStreamIosAppStreamData from './GoogleAnalyticsAdminV1alphaDataStreamIosAppStreamData';
import GoogleAnalyticsAdminV1alphaDataStreamWebStreamData from './GoogleAnalyticsAdminV1alphaDataStreamWebStreamData';

/**
 * The GoogleAnalyticsAdminV1alphaDataStream model module.
 * @module model/GoogleAnalyticsAdminV1alphaDataStream
 * @version v1alpha
 */
class GoogleAnalyticsAdminV1alphaDataStream {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1alphaDataStream</code>.
     * A resource message representing a data stream.
     * @alias module:model/GoogleAnalyticsAdminV1alphaDataStream
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1alphaDataStream.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1alphaDataStream</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1alphaDataStream} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1alphaDataStream} The populated <code>GoogleAnalyticsAdminV1alphaDataStream</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1alphaDataStream();

            if (data.hasOwnProperty('androidAppStreamData')) {
                obj['androidAppStreamData'] = GoogleAnalyticsAdminV1alphaDataStreamAndroidAppStreamData.constructFromObject(data['androidAppStreamData']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('iosAppStreamData')) {
                obj['iosAppStreamData'] = GoogleAnalyticsAdminV1alphaDataStreamIosAppStreamData.constructFromObject(data['iosAppStreamData']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('webStreamData')) {
                obj['webStreamData'] = GoogleAnalyticsAdminV1alphaDataStreamWebStreamData.constructFromObject(data['webStreamData']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1alphaDataStream</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1alphaDataStream</code>.
     */
    static validateJSON(data) {
        // validate the optional field `androidAppStreamData`
        if (data['androidAppStreamData']) { // data not null
          GoogleAnalyticsAdminV1alphaDataStreamAndroidAppStreamData.validateJSON(data['androidAppStreamData']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `iosAppStreamData`
        if (data['iosAppStreamData']) { // data not null
          GoogleAnalyticsAdminV1alphaDataStreamIosAppStreamData.validateJSON(data['iosAppStreamData']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `webStreamData`
        if (data['webStreamData']) { // data not null
          GoogleAnalyticsAdminV1alphaDataStreamWebStreamData.validateJSON(data['webStreamData']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleAnalyticsAdminV1alphaDataStreamAndroidAppStreamData} androidAppStreamData
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['androidAppStreamData'] = undefined;

/**
 * Output only. Time when this stream was originally created.
 * @member {String} createTime
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['createTime'] = undefined;

/**
 * Human-readable display name for the Data Stream. Required for web data streams. The max allowed display name length is 255 UTF-16 code units.
 * @member {String} displayName
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleAnalyticsAdminV1alphaDataStreamIosAppStreamData} iosAppStreamData
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['iosAppStreamData'] = undefined;

/**
 * Output only. Resource name of this Data Stream. Format: properties/{property_id}/dataStreams/{stream_id} Example: \"properties/1000/dataStreams/2000\"
 * @member {String} name
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['name'] = undefined;

/**
 * Required. Immutable. The type of this DataStream resource.
 * @member {module:model/GoogleAnalyticsAdminV1alphaDataStream.TypeEnum} type
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['type'] = undefined;

/**
 * Output only. Time when stream payload fields were last updated.
 * @member {String} updateTime
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['updateTime'] = undefined;

/**
 * @member {module:model/GoogleAnalyticsAdminV1alphaDataStreamWebStreamData} webStreamData
 */
GoogleAnalyticsAdminV1alphaDataStream.prototype['webStreamData'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaDataStream['TypeEnum'] = {

    /**
     * value: "DATA_STREAM_TYPE_UNSPECIFIED"
     * @const
     */
    "DATA_STREAM_TYPE_UNSPECIFIED": "DATA_STREAM_TYPE_UNSPECIFIED",

    /**
     * value: "WEB_DATA_STREAM"
     * @const
     */
    "WEB_DATA_STREAM": "WEB_DATA_STREAM",

    /**
     * value: "ANDROID_APP_DATA_STREAM"
     * @const
     */
    "ANDROID_APP_DATA_STREAM": "ANDROID_APP_DATA_STREAM",

    /**
     * value: "IOS_APP_DATA_STREAM"
     * @const
     */
    "IOS_APP_DATA_STREAM": "IOS_APP_DATA_STREAM"
};



export default GoogleAnalyticsAdminV1alphaDataStream;

