/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAnalyticsAdminV1alphaEventMapping from './GoogleAnalyticsAdminV1alphaEventMapping';

/**
 * The GoogleAnalyticsAdminV1alphaConversionValues model module.
 * @module model/GoogleAnalyticsAdminV1alphaConversionValues
 * @version v1alpha
 */
class GoogleAnalyticsAdminV1alphaConversionValues {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1alphaConversionValues</code>.
     * Conversion value settings for a postback window for SKAdNetwork conversion value schema.
     * @alias module:model/GoogleAnalyticsAdminV1alphaConversionValues
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1alphaConversionValues.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1alphaConversionValues</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1alphaConversionValues} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1alphaConversionValues} The populated <code>GoogleAnalyticsAdminV1alphaConversionValues</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1alphaConversionValues();

            if (data.hasOwnProperty('coarseValue')) {
                obj['coarseValue'] = ApiClient.convertToType(data['coarseValue'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('eventMappings')) {
                obj['eventMappings'] = ApiClient.convertToType(data['eventMappings'], [GoogleAnalyticsAdminV1alphaEventMapping]);
            }
            if (data.hasOwnProperty('fineValue')) {
                obj['fineValue'] = ApiClient.convertToType(data['fineValue'], 'Number');
            }
            if (data.hasOwnProperty('lockEnabled')) {
                obj['lockEnabled'] = ApiClient.convertToType(data['lockEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1alphaConversionValues</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1alphaConversionValues</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['coarseValue'] && !(typeof data['coarseValue'] === 'string' || data['coarseValue'] instanceof String)) {
            throw new Error("Expected the field `coarseValue` to be a primitive type in the JSON string but got " + data['coarseValue']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        if (data['eventMappings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['eventMappings'])) {
                throw new Error("Expected the field `eventMappings` to be an array in the JSON data but got " + data['eventMappings']);
            }
            // validate the optional field `eventMappings` (array)
            for (const item of data['eventMappings']) {
                GoogleAnalyticsAdminV1alphaEventMapping.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. A coarse grained conversion value. This value is not guaranteed to be unique.
 * @member {module:model/GoogleAnalyticsAdminV1alphaConversionValues.CoarseValueEnum} coarseValue
 */
GoogleAnalyticsAdminV1alphaConversionValues.prototype['coarseValue'] = undefined;

/**
 * Display name of the SKAdNetwork conversion value. The max allowed display name length is 50 UTF-16 code units.
 * @member {String} displayName
 */
GoogleAnalyticsAdminV1alphaConversionValues.prototype['displayName'] = undefined;

/**
 * Event conditions that must be met for this Conversion Value to be achieved. The conditions in this list are ANDed together. It must have minimum of 1 entry and maximum of 3 entries, if the postback window is enabled.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1alphaEventMapping>} eventMappings
 */
GoogleAnalyticsAdminV1alphaConversionValues.prototype['eventMappings'] = undefined;

/**
 * The fine-grained conversion value. This is applicable only to the first postback window. Its valid values are [0,63], both inclusive. It must be set for postback window 1, and must not be set for postback window 2 & 3. This value is not guaranteed to be unique. If the configuration for the first postback window is re-used for second or third postback windows this field has no effect.
 * @member {Number} fineValue
 */
GoogleAnalyticsAdminV1alphaConversionValues.prototype['fineValue'] = undefined;

/**
 * If true, the SDK should lock to this conversion value for the current postback window.
 * @member {Boolean} lockEnabled
 */
GoogleAnalyticsAdminV1alphaConversionValues.prototype['lockEnabled'] = undefined;





/**
 * Allowed values for the <code>coarseValue</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaConversionValues['CoarseValueEnum'] = {

    /**
     * value: "COARSE_VALUE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "COARSE_VALUE_UNSPECIFIED",

    /**
     * value: "COARSE_VALUE_LOW"
     * @const
     */
    "LOW": "COARSE_VALUE_LOW",

    /**
     * value: "COARSE_VALUE_MEDIUM"
     * @const
     */
    "MEDIUM": "COARSE_VALUE_MEDIUM",

    /**
     * value: "COARSE_VALUE_HIGH"
     * @const
     */
    "HIGH": "COARSE_VALUE_HIGH"
};



export default GoogleAnalyticsAdminV1alphaConversionValues;

