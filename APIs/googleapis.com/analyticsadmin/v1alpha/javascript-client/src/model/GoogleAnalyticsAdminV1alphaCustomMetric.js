/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAnalyticsAdminV1alphaCustomMetric model module.
 * @module model/GoogleAnalyticsAdminV1alphaCustomMetric
 * @version v1alpha
 */
class GoogleAnalyticsAdminV1alphaCustomMetric {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1alphaCustomMetric</code>.
     * A definition for a custom metric.
     * @alias module:model/GoogleAnalyticsAdminV1alphaCustomMetric
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1alphaCustomMetric.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1alphaCustomMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1alphaCustomMetric} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1alphaCustomMetric} The populated <code>GoogleAnalyticsAdminV1alphaCustomMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1alphaCustomMetric();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('measurementUnit')) {
                obj['measurementUnit'] = ApiClient.convertToType(data['measurementUnit'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parameterName')) {
                obj['parameterName'] = ApiClient.convertToType(data['parameterName'], 'String');
            }
            if (data.hasOwnProperty('restrictedMetricType')) {
                obj['restrictedMetricType'] = ApiClient.convertToType(data['restrictedMetricType'], ['String']);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1alphaCustomMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1alphaCustomMetric</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['measurementUnit'] && !(typeof data['measurementUnit'] === 'string' || data['measurementUnit'] instanceof String)) {
            throw new Error("Expected the field `measurementUnit` to be a primitive type in the JSON string but got " + data['measurementUnit']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parameterName'] && !(typeof data['parameterName'] === 'string' || data['parameterName'] instanceof String)) {
            throw new Error("Expected the field `parameterName` to be a primitive type in the JSON string but got " + data['parameterName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['restrictedMetricType'])) {
            throw new Error("Expected the field `restrictedMetricType` to be an array in the JSON data but got " + data['restrictedMetricType']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }

        return true;
    }


}



/**
 * Optional. Description for this custom dimension. Max length of 150 characters.
 * @member {String} description
 */
GoogleAnalyticsAdminV1alphaCustomMetric.prototype['description'] = undefined;

/**
 * Required. Display name for this custom metric as shown in the Analytics UI. Max length of 82 characters, alphanumeric plus space and underscore starting with a letter. Legacy system-generated display names may contain square brackets, but updates to this field will never permit square brackets.
 * @member {String} displayName
 */
GoogleAnalyticsAdminV1alphaCustomMetric.prototype['displayName'] = undefined;

/**
 * Required. The type for the custom metric's value.
 * @member {module:model/GoogleAnalyticsAdminV1alphaCustomMetric.MeasurementUnitEnum} measurementUnit
 */
GoogleAnalyticsAdminV1alphaCustomMetric.prototype['measurementUnit'] = undefined;

/**
 * Output only. Resource name for this CustomMetric resource. Format: properties/{property}/customMetrics/{customMetric}
 * @member {String} name
 */
GoogleAnalyticsAdminV1alphaCustomMetric.prototype['name'] = undefined;

/**
 * Required. Immutable. Tagging name for this custom metric. If this is an event-scoped metric, then this is the event parameter name. May only contain alphanumeric and underscore charactes, starting with a letter. Max length of 40 characters for event-scoped metrics.
 * @member {String} parameterName
 */
GoogleAnalyticsAdminV1alphaCustomMetric.prototype['parameterName'] = undefined;

/**
 * Optional. Types of restricted data that this metric may contain. Required for metrics with CURRENCY measurement unit. Must be empty for metrics with a non-CURRENCY measurement unit.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1alphaCustomMetric.RestrictedMetricTypeEnum>} restrictedMetricType
 */
GoogleAnalyticsAdminV1alphaCustomMetric.prototype['restrictedMetricType'] = undefined;

/**
 * Required. Immutable. The scope of this custom metric.
 * @member {module:model/GoogleAnalyticsAdminV1alphaCustomMetric.ScopeEnum} scope
 */
GoogleAnalyticsAdminV1alphaCustomMetric.prototype['scope'] = undefined;





/**
 * Allowed values for the <code>measurementUnit</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaCustomMetric['MeasurementUnitEnum'] = {

    /**
     * value: "MEASUREMENT_UNIT_UNSPECIFIED"
     * @const
     */
    "MEASUREMENT_UNIT_UNSPECIFIED": "MEASUREMENT_UNIT_UNSPECIFIED",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD",

    /**
     * value: "CURRENCY"
     * @const
     */
    "CURRENCY": "CURRENCY",

    /**
     * value: "FEET"
     * @const
     */
    "FEET": "FEET",

    /**
     * value: "METERS"
     * @const
     */
    "METERS": "METERS",

    /**
     * value: "KILOMETERS"
     * @const
     */
    "KILOMETERS": "KILOMETERS",

    /**
     * value: "MILES"
     * @const
     */
    "MILES": "MILES",

    /**
     * value: "MILLISECONDS"
     * @const
     */
    "MILLISECONDS": "MILLISECONDS",

    /**
     * value: "SECONDS"
     * @const
     */
    "SECONDS": "SECONDS",

    /**
     * value: "MINUTES"
     * @const
     */
    "MINUTES": "MINUTES",

    /**
     * value: "HOURS"
     * @const
     */
    "HOURS": "HOURS"
};


/**
 * Allowed values for the <code>restrictedMetricType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaCustomMetric['RestrictedMetricTypeEnum'] = {

    /**
     * value: "RESTRICTED_METRIC_TYPE_UNSPECIFIED"
     * @const
     */
    "RESTRICTED_METRIC_TYPE_UNSPECIFIED": "RESTRICTED_METRIC_TYPE_UNSPECIFIED",

    /**
     * value: "COST_DATA"
     * @const
     */
    "COST_DATA": "COST_DATA",

    /**
     * value: "REVENUE_DATA"
     * @const
     */
    "REVENUE_DATA": "REVENUE_DATA"
};


/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaCustomMetric['ScopeEnum'] = {

    /**
     * value: "METRIC_SCOPE_UNSPECIFIED"
     * @const
     */
    "METRIC_SCOPE_UNSPECIFIED": "METRIC_SCOPE_UNSPECIFIED",

    /**
     * value: "EVENT"
     * @const
     */
    "EVENT": "EVENT"
};



export default GoogleAnalyticsAdminV1alphaCustomMetric;

