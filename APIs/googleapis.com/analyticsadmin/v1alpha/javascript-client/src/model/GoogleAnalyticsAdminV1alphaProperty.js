/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleAnalyticsAdminV1alphaProperty model module.
 * @module model/GoogleAnalyticsAdminV1alphaProperty
 * @version v1alpha
 */
class GoogleAnalyticsAdminV1alphaProperty {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1alphaProperty</code>.
     * A resource message representing a Google Analytics GA4 property.
     * @alias module:model/GoogleAnalyticsAdminV1alphaProperty
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1alphaProperty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1alphaProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1alphaProperty} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1alphaProperty} The populated <code>GoogleAnalyticsAdminV1alphaProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1alphaProperty();

            if (data.hasOwnProperty('account')) {
                obj['account'] = ApiClient.convertToType(data['account'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('deleteTime')) {
                obj['deleteTime'] = ApiClient.convertToType(data['deleteTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('industryCategory')) {
                obj['industryCategory'] = ApiClient.convertToType(data['industryCategory'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
            if (data.hasOwnProperty('propertyType')) {
                obj['propertyType'] = ApiClient.convertToType(data['propertyType'], 'String');
            }
            if (data.hasOwnProperty('serviceLevel')) {
                obj['serviceLevel'] = ApiClient.convertToType(data['serviceLevel'], 'String');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1alphaProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1alphaProperty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account'] && !(typeof data['account'] === 'string' || data['account'] instanceof String)) {
            throw new Error("Expected the field `account` to be a primitive type in the JSON string but got " + data['account']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['deleteTime'] && !(typeof data['deleteTime'] === 'string' || data['deleteTime'] instanceof String)) {
            throw new Error("Expected the field `deleteTime` to be a primitive type in the JSON string but got " + data['deleteTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['industryCategory'] && !(typeof data['industryCategory'] === 'string' || data['industryCategory'] instanceof String)) {
            throw new Error("Expected the field `industryCategory` to be a primitive type in the JSON string but got " + data['industryCategory']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }
        // ensure the json data is a string
        if (data['propertyType'] && !(typeof data['propertyType'] === 'string' || data['propertyType'] instanceof String)) {
            throw new Error("Expected the field `propertyType` to be a primitive type in the JSON string but got " + data['propertyType']);
        }
        // ensure the json data is a string
        if (data['serviceLevel'] && !(typeof data['serviceLevel'] === 'string' || data['serviceLevel'] instanceof String)) {
            throw new Error("Expected the field `serviceLevel` to be a primitive type in the JSON string but got " + data['serviceLevel']);
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Immutable. The resource name of the parent account Format: accounts/{account_id} Example: \"accounts/123\"
 * @member {String} account
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['account'] = undefined;

/**
 * Output only. Time when the entity was originally created.
 * @member {String} createTime
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['createTime'] = undefined;

/**
 * The currency type used in reports involving monetary values. Format: https://en.wikipedia.org/wiki/ISO_4217 Examples: \"USD\", \"EUR\", \"JPY\"
 * @member {String} currencyCode
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['currencyCode'] = undefined;

/**
 * Output only. If set, the time at which this property was trashed. If not set, then this property is not currently in the trash can.
 * @member {String} deleteTime
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['deleteTime'] = undefined;

/**
 * Required. Human-readable display name for this property. The max allowed display name length is 100 UTF-16 code units.
 * @member {String} displayName
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['displayName'] = undefined;

/**
 * Output only. If set, the time at which this trashed property will be permanently deleted. If not set, then this property is not currently in the trash can and is not slated to be deleted.
 * @member {String} expireTime
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['expireTime'] = undefined;

/**
 * Industry associated with this property Example: AUTOMOTIVE, FOOD_AND_DRINK
 * @member {module:model/GoogleAnalyticsAdminV1alphaProperty.IndustryCategoryEnum} industryCategory
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['industryCategory'] = undefined;

/**
 * Output only. Resource name of this property. Format: properties/{property_id} Example: \"properties/1000\"
 * @member {String} name
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['name'] = undefined;

/**
 * Immutable. Resource name of this property's logical parent. Note: The Property-Moving UI can be used to change the parent. Format: accounts/{account}, properties/{property} Example: \"accounts/100\", \"properties/101\"
 * @member {String} parent
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['parent'] = undefined;

/**
 * Immutable. The property type for this Property resource. When creating a property, if the type is \"PROPERTY_TYPE_UNSPECIFIED\", then \"ORDINARY_PROPERTY\" will be implied.
 * @member {module:model/GoogleAnalyticsAdminV1alphaProperty.PropertyTypeEnum} propertyType
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['propertyType'] = undefined;

/**
 * Output only. The Google Analytics service level that applies to this property.
 * @member {module:model/GoogleAnalyticsAdminV1alphaProperty.ServiceLevelEnum} serviceLevel
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['serviceLevel'] = undefined;

/**
 * Required. Reporting Time Zone, used as the day boundary for reports, regardless of where the data originates. If the time zone honors DST, Analytics will automatically adjust for the changes. NOTE: Changing the time zone only affects data going forward, and is not applied retroactively. Format: https://www.iana.org/time-zones Example: \"America/Los_Angeles\"
 * @member {String} timeZone
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['timeZone'] = undefined;

/**
 * Output only. Time when entity payload fields were last updated.
 * @member {String} updateTime
 */
GoogleAnalyticsAdminV1alphaProperty.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>industryCategory</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaProperty['IndustryCategoryEnum'] = {

    /**
     * value: "INDUSTRY_CATEGORY_UNSPECIFIED"
     * @const
     */
    "INDUSTRY_CATEGORY_UNSPECIFIED": "INDUSTRY_CATEGORY_UNSPECIFIED",

    /**
     * value: "AUTOMOTIVE"
     * @const
     */
    "AUTOMOTIVE": "AUTOMOTIVE",

    /**
     * value: "BUSINESS_AND_INDUSTRIAL_MARKETS"
     * @const
     */
    "BUSINESS_AND_INDUSTRIAL_MARKETS": "BUSINESS_AND_INDUSTRIAL_MARKETS",

    /**
     * value: "FINANCE"
     * @const
     */
    "FINANCE": "FINANCE",

    /**
     * value: "HEALTHCARE"
     * @const
     */
    "HEALTHCARE": "HEALTHCARE",

    /**
     * value: "TECHNOLOGY"
     * @const
     */
    "TECHNOLOGY": "TECHNOLOGY",

    /**
     * value: "TRAVEL"
     * @const
     */
    "TRAVEL": "TRAVEL",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER",

    /**
     * value: "ARTS_AND_ENTERTAINMENT"
     * @const
     */
    "ARTS_AND_ENTERTAINMENT": "ARTS_AND_ENTERTAINMENT",

    /**
     * value: "BEAUTY_AND_FITNESS"
     * @const
     */
    "BEAUTY_AND_FITNESS": "BEAUTY_AND_FITNESS",

    /**
     * value: "BOOKS_AND_LITERATURE"
     * @const
     */
    "BOOKS_AND_LITERATURE": "BOOKS_AND_LITERATURE",

    /**
     * value: "FOOD_AND_DRINK"
     * @const
     */
    "FOOD_AND_DRINK": "FOOD_AND_DRINK",

    /**
     * value: "GAMES"
     * @const
     */
    "GAMES": "GAMES",

    /**
     * value: "HOBBIES_AND_LEISURE"
     * @const
     */
    "HOBBIES_AND_LEISURE": "HOBBIES_AND_LEISURE",

    /**
     * value: "HOME_AND_GARDEN"
     * @const
     */
    "HOME_AND_GARDEN": "HOME_AND_GARDEN",

    /**
     * value: "INTERNET_AND_TELECOM"
     * @const
     */
    "INTERNET_AND_TELECOM": "INTERNET_AND_TELECOM",

    /**
     * value: "LAW_AND_GOVERNMENT"
     * @const
     */
    "LAW_AND_GOVERNMENT": "LAW_AND_GOVERNMENT",

    /**
     * value: "NEWS"
     * @const
     */
    "NEWS": "NEWS",

    /**
     * value: "ONLINE_COMMUNITIES"
     * @const
     */
    "ONLINE_COMMUNITIES": "ONLINE_COMMUNITIES",

    /**
     * value: "PEOPLE_AND_SOCIETY"
     * @const
     */
    "PEOPLE_AND_SOCIETY": "PEOPLE_AND_SOCIETY",

    /**
     * value: "PETS_AND_ANIMALS"
     * @const
     */
    "PETS_AND_ANIMALS": "PETS_AND_ANIMALS",

    /**
     * value: "REAL_ESTATE"
     * @const
     */
    "REAL_ESTATE": "REAL_ESTATE",

    /**
     * value: "REFERENCE"
     * @const
     */
    "REFERENCE": "REFERENCE",

    /**
     * value: "SCIENCE"
     * @const
     */
    "SCIENCE": "SCIENCE",

    /**
     * value: "SPORTS"
     * @const
     */
    "SPORTS": "SPORTS",

    /**
     * value: "JOBS_AND_EDUCATION"
     * @const
     */
    "JOBS_AND_EDUCATION": "JOBS_AND_EDUCATION",

    /**
     * value: "SHOPPING"
     * @const
     */
    "SHOPPING": "SHOPPING"
};


/**
 * Allowed values for the <code>propertyType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaProperty['PropertyTypeEnum'] = {

    /**
     * value: "PROPERTY_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PROPERTY_TYPE_UNSPECIFIED",

    /**
     * value: "PROPERTY_TYPE_ORDINARY"
     * @const
     */
    "ORDINARY": "PROPERTY_TYPE_ORDINARY",

    /**
     * value: "PROPERTY_TYPE_SUBPROPERTY"
     * @const
     */
    "SUBPROPERTY": "PROPERTY_TYPE_SUBPROPERTY",

    /**
     * value: "PROPERTY_TYPE_ROLLUP"
     * @const
     */
    "ROLLUP": "PROPERTY_TYPE_ROLLUP"
};


/**
 * Allowed values for the <code>serviceLevel</code> property.
 * @enum {String}
 * @readonly
 */
GoogleAnalyticsAdminV1alphaProperty['ServiceLevelEnum'] = {

    /**
     * value: "SERVICE_LEVEL_UNSPECIFIED"
     * @const
     */
    "SERVICE_LEVEL_UNSPECIFIED": "SERVICE_LEVEL_UNSPECIFIED",

    /**
     * value: "GOOGLE_ANALYTICS_STANDARD"
     * @const
     */
    "GOOGLE_ANALYTICS_STANDARD": "GOOGLE_ANALYTICS_STANDARD",

    /**
     * value: "GOOGLE_ANALYTICS_360"
     * @const
     */
    "GOOGLE_ANALYTICS_360": "GOOGLE_ANALYTICS_360"
};



export default GoogleAnalyticsAdminV1alphaProperty;

