/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleAnalyticsAdminApi);
  }
}(this, function(expect, GoogleAnalyticsAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleAnalyticsAdminV1alphaChannelGroup', function() {
    it('should create an instance of GoogleAnalyticsAdminV1alphaChannelGroup', function() {
      // uncomment below and update the code to test GoogleAnalyticsAdminV1alphaChannelGroup
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup();
      //expect(instance).to.be.a(GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup);
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup();
      //expect(instance).to.be();
    });

    it('should have the property groupingRule (base name: "groupingRule")', function() {
      // uncomment below and update the code to test the property groupingRule
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup();
      //expect(instance).to.be();
    });

    it('should have the property systemDefined (base name: "systemDefined")', function() {
      // uncomment below and update the code to test the property systemDefined
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaChannelGroup();
      //expect(instance).to.be();
    });

  });

}));
