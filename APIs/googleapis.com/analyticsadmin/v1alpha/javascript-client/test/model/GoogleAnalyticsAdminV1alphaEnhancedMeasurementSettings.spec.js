/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleAnalyticsAdminApi);
  }
}(this, function(expect, GoogleAnalyticsAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings', function() {
    it('should create an instance of GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings', function() {
      // uncomment below and update the code to test GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be.a(GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings);
    });

    it('should have the property fileDownloadsEnabled (base name: "fileDownloadsEnabled")', function() {
      // uncomment below and update the code to test the property fileDownloadsEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property formInteractionsEnabled (base name: "formInteractionsEnabled")', function() {
      // uncomment below and update the code to test the property formInteractionsEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property outboundClicksEnabled (base name: "outboundClicksEnabled")', function() {
      // uncomment below and update the code to test the property outboundClicksEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property pageChangesEnabled (base name: "pageChangesEnabled")', function() {
      // uncomment below and update the code to test the property pageChangesEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property scrollsEnabled (base name: "scrollsEnabled")', function() {
      // uncomment below and update the code to test the property scrollsEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property searchQueryParameter (base name: "searchQueryParameter")', function() {
      // uncomment below and update the code to test the property searchQueryParameter
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property siteSearchEnabled (base name: "siteSearchEnabled")', function() {
      // uncomment below and update the code to test the property siteSearchEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property streamEnabled (base name: "streamEnabled")', function() {
      // uncomment below and update the code to test the property streamEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property uriQueryParameter (base name: "uriQueryParameter")', function() {
      // uncomment below and update the code to test the property uriQueryParameter
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

    it('should have the property videoEngagementEnabled (base name: "videoEngagementEnabled")', function() {
      // uncomment below and update the code to test the property videoEngagementEnabled
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings();
      //expect(instance).to.be();
    });

  });

}));
