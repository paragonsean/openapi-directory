# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_analytics_admin_v1alpha_audience_event_trigger import GoogleAnalyticsAdminV1alphaAudienceEventTrigger
from openapi_server.models.google_analytics_admin_v1alpha_audience_filter_clause import GoogleAnalyticsAdminV1alphaAudienceFilterClause
from openapi_server import util


class GoogleAnalyticsAdminV1alphaAudience(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ads_personalization_enabled: bool=None, description: str=None, display_name: str=None, event_trigger: GoogleAnalyticsAdminV1alphaAudienceEventTrigger=None, exclusion_duration_mode: str=None, filter_clauses: List[GoogleAnalyticsAdminV1alphaAudienceFilterClause]=None, membership_duration_days: int=None, name: str=None):
        """GoogleAnalyticsAdminV1alphaAudience - a model defined in OpenAPI

        :param ads_personalization_enabled: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaAudience.
        :param description: The description of this GoogleAnalyticsAdminV1alphaAudience.
        :param display_name: The display_name of this GoogleAnalyticsAdminV1alphaAudience.
        :param event_trigger: The event_trigger of this GoogleAnalyticsAdminV1alphaAudience.
        :param exclusion_duration_mode: The exclusion_duration_mode of this GoogleAnalyticsAdminV1alphaAudience.
        :param filter_clauses: The filter_clauses of this GoogleAnalyticsAdminV1alphaAudience.
        :param membership_duration_days: The membership_duration_days of this GoogleAnalyticsAdminV1alphaAudience.
        :param name: The name of this GoogleAnalyticsAdminV1alphaAudience.
        """
        self.openapi_types = {
            'ads_personalization_enabled': bool,
            'description': str,
            'display_name': str,
            'event_trigger': GoogleAnalyticsAdminV1alphaAudienceEventTrigger,
            'exclusion_duration_mode': str,
            'filter_clauses': List[GoogleAnalyticsAdminV1alphaAudienceFilterClause],
            'membership_duration_days': int,
            'name': str
        }

        self.attribute_map = {
            'ads_personalization_enabled': 'adsPersonalizationEnabled',
            'description': 'description',
            'display_name': 'displayName',
            'event_trigger': 'eventTrigger',
            'exclusion_duration_mode': 'exclusionDurationMode',
            'filter_clauses': 'filterClauses',
            'membership_duration_days': 'membershipDurationDays',
            'name': 'name'
        }

        self._ads_personalization_enabled = ads_personalization_enabled
        self._description = description
        self._display_name = display_name
        self._event_trigger = event_trigger
        self._exclusion_duration_mode = exclusion_duration_mode
        self._filter_clauses = filter_clauses
        self._membership_duration_days = membership_duration_days
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaAudience':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaAudience of this GoogleAnalyticsAdminV1alphaAudience.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ads_personalization_enabled(self):
        """Gets the ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaAudience.

        Output only. It is automatically set by GA to false if this is an NPA Audience and is excluded from ads personalization.

        :return: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: bool
        """
        return self._ads_personalization_enabled

    @ads_personalization_enabled.setter
    def ads_personalization_enabled(self, ads_personalization_enabled):
        """Sets the ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaAudience.

        Output only. It is automatically set by GA to false if this is an NPA Audience and is excluded from ads personalization.

        :param ads_personalization_enabled: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaAudience.
        :type ads_personalization_enabled: bool
        """

        self._ads_personalization_enabled = ads_personalization_enabled

    @property
    def description(self):
        """Gets the description of this GoogleAnalyticsAdminV1alphaAudience.

        Required. The description of the Audience.

        :return: The description of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleAnalyticsAdminV1alphaAudience.

        Required. The description of the Audience.

        :param description: The description of this GoogleAnalyticsAdminV1alphaAudience.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleAnalyticsAdminV1alphaAudience.

        Required. The display name of the Audience.

        :return: The display_name of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleAnalyticsAdminV1alphaAudience.

        Required. The display name of the Audience.

        :param display_name: The display_name of this GoogleAnalyticsAdminV1alphaAudience.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def event_trigger(self):
        """Gets the event_trigger of this GoogleAnalyticsAdminV1alphaAudience.


        :return: The event_trigger of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceEventTrigger
        """
        return self._event_trigger

    @event_trigger.setter
    def event_trigger(self, event_trigger):
        """Sets the event_trigger of this GoogleAnalyticsAdminV1alphaAudience.


        :param event_trigger: The event_trigger of this GoogleAnalyticsAdminV1alphaAudience.
        :type event_trigger: GoogleAnalyticsAdminV1alphaAudienceEventTrigger
        """

        self._event_trigger = event_trigger

    @property
    def exclusion_duration_mode(self):
        """Gets the exclusion_duration_mode of this GoogleAnalyticsAdminV1alphaAudience.

        Immutable. Specifies how long an exclusion lasts for users that meet the exclusion filter. It is applied to all EXCLUDE filter clauses and is ignored when there is no EXCLUDE filter clause in the Audience.

        :return: The exclusion_duration_mode of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: str
        """
        return self._exclusion_duration_mode

    @exclusion_duration_mode.setter
    def exclusion_duration_mode(self, exclusion_duration_mode):
        """Sets the exclusion_duration_mode of this GoogleAnalyticsAdminV1alphaAudience.

        Immutable. Specifies how long an exclusion lasts for users that meet the exclusion filter. It is applied to all EXCLUDE filter clauses and is ignored when there is no EXCLUDE filter clause in the Audience.

        :param exclusion_duration_mode: The exclusion_duration_mode of this GoogleAnalyticsAdminV1alphaAudience.
        :type exclusion_duration_mode: str
        """
        allowed_values = ["AUDIENCE_EXCLUSION_DURATION_MODE_UNSPECIFIED", "EXCLUDE_TEMPORARILY", "EXCLUDE_PERMANENTLY"]  # noqa: E501
        if exclusion_duration_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `exclusion_duration_mode` ({0}), must be one of {1}"
                .format(exclusion_duration_mode, allowed_values)
            )

        self._exclusion_duration_mode = exclusion_duration_mode

    @property
    def filter_clauses(self):
        """Gets the filter_clauses of this GoogleAnalyticsAdminV1alphaAudience.

        Required. Immutable. Unordered list. Filter clauses that define the Audience. All clauses will be AND’ed together.

        :return: The filter_clauses of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: List[GoogleAnalyticsAdminV1alphaAudienceFilterClause]
        """
        return self._filter_clauses

    @filter_clauses.setter
    def filter_clauses(self, filter_clauses):
        """Sets the filter_clauses of this GoogleAnalyticsAdminV1alphaAudience.

        Required. Immutable. Unordered list. Filter clauses that define the Audience. All clauses will be AND’ed together.

        :param filter_clauses: The filter_clauses of this GoogleAnalyticsAdminV1alphaAudience.
        :type filter_clauses: List[GoogleAnalyticsAdminV1alphaAudienceFilterClause]
        """

        self._filter_clauses = filter_clauses

    @property
    def membership_duration_days(self):
        """Gets the membership_duration_days of this GoogleAnalyticsAdminV1alphaAudience.

        Required. Immutable. The duration a user should stay in an Audience. It cannot be set to more than 540 days.

        :return: The membership_duration_days of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: int
        """
        return self._membership_duration_days

    @membership_duration_days.setter
    def membership_duration_days(self, membership_duration_days):
        """Sets the membership_duration_days of this GoogleAnalyticsAdminV1alphaAudience.

        Required. Immutable. The duration a user should stay in an Audience. It cannot be set to more than 540 days.

        :param membership_duration_days: The membership_duration_days of this GoogleAnalyticsAdminV1alphaAudience.
        :type membership_duration_days: int
        """

        self._membership_duration_days = membership_duration_days

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1alphaAudience.

        Output only. The resource name for this Audience resource. Format: properties/{propertyId}/audiences/{audienceId}

        :return: The name of this GoogleAnalyticsAdminV1alphaAudience.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1alphaAudience.

        Output only. The resource name for this Audience resource. Format: properties/{propertyId}/audiences/{audienceId}

        :param name: The name of this GoogleAnalyticsAdminV1alphaAudience.
        :type name: str
        """

        self._name = name
