# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_analytics_admin_v1alpha_subproperty_event_filter_condition_string_filter import GoogleAnalyticsAdminV1alphaSubpropertyEventFilterConditionStringFilter
from openapi_server import util


class GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_name: str=None, null_filter: bool=None, string_filter: GoogleAnalyticsAdminV1alphaSubpropertyEventFilterConditionStringFilter=None):
        """GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition - a model defined in OpenAPI

        :param field_name: The field_name of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :param null_filter: The null_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :param string_filter: The string_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        """
        self.openapi_types = {
            'field_name': str,
            'null_filter': bool,
            'string_filter': GoogleAnalyticsAdminV1alphaSubpropertyEventFilterConditionStringFilter
        }

        self.attribute_map = {
            'field_name': 'fieldName',
            'null_filter': 'nullFilter',
            'string_filter': 'stringFilter'
        }

        self._field_name = field_name
        self._null_filter = null_filter
        self._string_filter = string_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_name(self):
        """Gets the field_name of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.

        Required. The field that is being filtered.

        :return: The field_name of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.

        Required. The field that is being filtered.

        :param field_name: The field_name of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def null_filter(self):
        """Gets the null_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.

        A filter for null values.

        :return: The null_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :rtype: bool
        """
        return self._null_filter

    @null_filter.setter
    def null_filter(self, null_filter):
        """Sets the null_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.

        A filter for null values.

        :param null_filter: The null_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :type null_filter: bool
        """

        self._null_filter = null_filter

    @property
    def string_filter(self):
        """Gets the string_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.


        :return: The string_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :rtype: GoogleAnalyticsAdminV1alphaSubpropertyEventFilterConditionStringFilter
        """
        return self._string_filter

    @string_filter.setter
    def string_filter(self, string_filter):
        """Sets the string_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.


        :param string_filter: The string_filter of this GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition.
        :type string_filter: GoogleAnalyticsAdminV1alphaSubpropertyEventFilterConditionStringFilter
        """

        self._string_filter = string_filter
