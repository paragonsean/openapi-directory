# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_analytics_admin_v1alpha_audience_sequence_filter import GoogleAnalyticsAdminV1alphaAudienceSequenceFilter
from openapi_server.models.google_analytics_admin_v1alpha_audience_simple_filter import GoogleAnalyticsAdminV1alphaAudienceSimpleFilter
from openapi_server import util


class GoogleAnalyticsAdminV1alphaAudienceFilterClause(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clause_type: str=None, sequence_filter: GoogleAnalyticsAdminV1alphaAudienceSequenceFilter=None, simple_filter: GoogleAnalyticsAdminV1alphaAudienceSimpleFilter=None):
        """GoogleAnalyticsAdminV1alphaAudienceFilterClause - a model defined in OpenAPI

        :param clause_type: The clause_type of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :param sequence_filter: The sequence_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :param simple_filter: The simple_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        """
        self.openapi_types = {
            'clause_type': str,
            'sequence_filter': GoogleAnalyticsAdminV1alphaAudienceSequenceFilter,
            'simple_filter': GoogleAnalyticsAdminV1alphaAudienceSimpleFilter
        }

        self.attribute_map = {
            'clause_type': 'clauseType',
            'sequence_filter': 'sequenceFilter',
            'simple_filter': 'simpleFilter'
        }

        self._clause_type = clause_type
        self._sequence_filter = sequence_filter
        self._simple_filter = simple_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaAudienceFilterClause':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaAudienceFilterClause of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clause_type(self):
        """Gets the clause_type of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.

        Required. Specifies whether this is an include or exclude filter clause.

        :return: The clause_type of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :rtype: str
        """
        return self._clause_type

    @clause_type.setter
    def clause_type(self, clause_type):
        """Sets the clause_type of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.

        Required. Specifies whether this is an include or exclude filter clause.

        :param clause_type: The clause_type of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :type clause_type: str
        """
        allowed_values = ["AUDIENCE_CLAUSE_TYPE_UNSPECIFIED", "INCLUDE", "EXCLUDE"]  # noqa: E501
        if clause_type not in allowed_values:
            raise ValueError(
                "Invalid value for `clause_type` ({0}), must be one of {1}"
                .format(clause_type, allowed_values)
            )

        self._clause_type = clause_type

    @property
    def sequence_filter(self):
        """Gets the sequence_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.


        :return: The sequence_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceSequenceFilter
        """
        return self._sequence_filter

    @sequence_filter.setter
    def sequence_filter(self, sequence_filter):
        """Sets the sequence_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.


        :param sequence_filter: The sequence_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :type sequence_filter: GoogleAnalyticsAdminV1alphaAudienceSequenceFilter
        """

        self._sequence_filter = sequence_filter

    @property
    def simple_filter(self):
        """Gets the simple_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.


        :return: The simple_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceSimpleFilter
        """
        return self._simple_filter

    @simple_filter.setter
    def simple_filter(self, simple_filter):
        """Sets the simple_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.


        :param simple_filter: The simple_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterClause.
        :type simple_filter: GoogleAnalyticsAdminV1alphaAudienceSimpleFilter
        """

        self._simple_filter = simple_filter
