# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1alphaDataRedactionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_redaction_enabled: bool=None, name: str=None, query_parameter_keys: List[str]=None, query_parameter_redaction_enabled: bool=None):
        """GoogleAnalyticsAdminV1alphaDataRedactionSettings - a model defined in OpenAPI

        :param email_redaction_enabled: The email_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :param name: The name of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :param query_parameter_keys: The query_parameter_keys of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :param query_parameter_redaction_enabled: The query_parameter_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        """
        self.openapi_types = {
            'email_redaction_enabled': bool,
            'name': str,
            'query_parameter_keys': List[str],
            'query_parameter_redaction_enabled': bool
        }

        self.attribute_map = {
            'email_redaction_enabled': 'emailRedactionEnabled',
            'name': 'name',
            'query_parameter_keys': 'queryParameterKeys',
            'query_parameter_redaction_enabled': 'queryParameterRedactionEnabled'
        }

        self._email_redaction_enabled = email_redaction_enabled
        self._name = name
        self._query_parameter_keys = query_parameter_keys
        self._query_parameter_redaction_enabled = query_parameter_redaction_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaDataRedactionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaDataRedactionSettings of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_redaction_enabled(self):
        """Gets the email_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        If enabled, any event parameter or user property values that look like an email will be redacted.

        :return: The email_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :rtype: bool
        """
        return self._email_redaction_enabled

    @email_redaction_enabled.setter
    def email_redaction_enabled(self, email_redaction_enabled):
        """Sets the email_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        If enabled, any event parameter or user property values that look like an email will be redacted.

        :param email_redaction_enabled: The email_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :type email_redaction_enabled: bool
        """

        self._email_redaction_enabled = email_redaction_enabled

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        Output only. Name of this Data Redaction Settings resource. Format: properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example: \"properties/1000/dataStreams/2000/dataRedactionSettings\"

        :return: The name of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        Output only. Name of this Data Redaction Settings resource. Format: properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example: \"properties/1000/dataStreams/2000/dataRedactionSettings\"

        :param name: The name of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :type name: str
        """

        self._name = name

    @property
    def query_parameter_keys(self):
        """Gets the query_parameter_keys of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        The query parameter keys to apply redaction logic to if present in the URL. Query parameter matching is case-insensitive. Must contain at least one element if query_parameter_replacement_enabled is true. Keys cannot contain commas.

        :return: The query_parameter_keys of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :rtype: List[str]
        """
        return self._query_parameter_keys

    @query_parameter_keys.setter
    def query_parameter_keys(self, query_parameter_keys):
        """Sets the query_parameter_keys of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        The query parameter keys to apply redaction logic to if present in the URL. Query parameter matching is case-insensitive. Must contain at least one element if query_parameter_replacement_enabled is true. Keys cannot contain commas.

        :param query_parameter_keys: The query_parameter_keys of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :type query_parameter_keys: List[str]
        """

        self._query_parameter_keys = query_parameter_keys

    @property
    def query_parameter_redaction_enabled(self):
        """Gets the query_parameter_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        Query Parameter redaction removes the key and value portions of a query parameter if it is in the configured set of query parameters. If enabled, URL query replacement logic will be run for the Stream. Any query parameters defined in query_parameter_keys will be redacted.

        :return: The query_parameter_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :rtype: bool
        """
        return self._query_parameter_redaction_enabled

    @query_parameter_redaction_enabled.setter
    def query_parameter_redaction_enabled(self, query_parameter_redaction_enabled):
        """Sets the query_parameter_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.

        Query Parameter redaction removes the key and value portions of a query parameter if it is in the configured set of query parameters. If enabled, URL query replacement logic will be run for the Stream. Any query parameters defined in query_parameter_keys will be redacted.

        :param query_parameter_redaction_enabled: The query_parameter_redaction_enabled of this GoogleAnalyticsAdminV1alphaDataRedactionSettings.
        :type query_parameter_redaction_enabled: bool
        """

        self._query_parameter_redaction_enabled = query_parameter_redaction_enabled
