# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ads_personalization_enabled: bool=None, advertiser_display_name: str=None, advertiser_id: str=None, campaign_data_sharing_enabled: bool=None, cost_data_sharing_enabled: bool=None, name: str=None):
        """GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink - a model defined in OpenAPI

        :param ads_personalization_enabled: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :param advertiser_display_name: The advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :param advertiser_id: The advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :param campaign_data_sharing_enabled: The campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :param cost_data_sharing_enabled: The cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :param name: The name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        """
        self.openapi_types = {
            'ads_personalization_enabled': bool,
            'advertiser_display_name': str,
            'advertiser_id': str,
            'campaign_data_sharing_enabled': bool,
            'cost_data_sharing_enabled': bool,
            'name': str
        }

        self.attribute_map = {
            'ads_personalization_enabled': 'adsPersonalizationEnabled',
            'advertiser_display_name': 'advertiserDisplayName',
            'advertiser_id': 'advertiserId',
            'campaign_data_sharing_enabled': 'campaignDataSharingEnabled',
            'cost_data_sharing_enabled': 'costDataSharingEnabled',
            'name': 'name'
        }

        self._ads_personalization_enabled = ads_personalization_enabled
        self._advertiser_display_name = advertiser_display_name
        self._advertiser_id = advertiser_id
        self._campaign_data_sharing_enabled = campaign_data_sharing_enabled
        self._cost_data_sharing_enabled = cost_data_sharing_enabled
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ads_personalization_enabled(self):
        """Gets the ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Enables personalized advertising features with this integration. If this field is not set on create/update, it will be defaulted to true.

        :return: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :rtype: bool
        """
        return self._ads_personalization_enabled

    @ads_personalization_enabled.setter
    def ads_personalization_enabled(self, ads_personalization_enabled):
        """Sets the ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Enables personalized advertising features with this integration. If this field is not set on create/update, it will be defaulted to true.

        :param ads_personalization_enabled: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :type ads_personalization_enabled: bool
        """

        self._ads_personalization_enabled = ads_personalization_enabled

    @property
    def advertiser_display_name(self):
        """Gets the advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Output only. The display name of the Display & Video 360 Advertiser.

        :return: The advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :rtype: str
        """
        return self._advertiser_display_name

    @advertiser_display_name.setter
    def advertiser_display_name(self, advertiser_display_name):
        """Sets the advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Output only. The display name of the Display & Video 360 Advertiser.

        :param advertiser_display_name: The advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :type advertiser_display_name: str
        """

        self._advertiser_display_name = advertiser_display_name

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Immutable. The Display & Video 360 Advertiser's advertiser ID.

        :return: The advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Immutable. The Display & Video 360 Advertiser's advertiser ID.

        :param advertiser_id: The advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def campaign_data_sharing_enabled(self):
        """Gets the campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Immutable. Enables the import of campaign data from Display & Video 360 into the GA4 property. After link creation, this can only be updated from the Display & Video 360 product. If this field is not set on create, it will be defaulted to true.

        :return: The campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :rtype: bool
        """
        return self._campaign_data_sharing_enabled

    @campaign_data_sharing_enabled.setter
    def campaign_data_sharing_enabled(self, campaign_data_sharing_enabled):
        """Sets the campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Immutable. Enables the import of campaign data from Display & Video 360 into the GA4 property. After link creation, this can only be updated from the Display & Video 360 product. If this field is not set on create, it will be defaulted to true.

        :param campaign_data_sharing_enabled: The campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :type campaign_data_sharing_enabled: bool
        """

        self._campaign_data_sharing_enabled = campaign_data_sharing_enabled

    @property
    def cost_data_sharing_enabled(self):
        """Gets the cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Immutable. Enables the import of cost data from Display & Video 360 into the GA4 property. This can only be enabled if campaign_data_sharing_enabled is enabled. After link creation, this can only be updated from the Display & Video 360 product. If this field is not set on create, it will be defaulted to true.

        :return: The cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :rtype: bool
        """
        return self._cost_data_sharing_enabled

    @cost_data_sharing_enabled.setter
    def cost_data_sharing_enabled(self, cost_data_sharing_enabled):
        """Sets the cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Immutable. Enables the import of cost data from Display & Video 360 into the GA4 property. This can only be enabled if campaign_data_sharing_enabled is enabled. After link creation, this can only be updated from the Display & Video 360 product. If this field is not set on create, it will be defaulted to true.

        :param cost_data_sharing_enabled: The cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :type cost_data_sharing_enabled: bool
        """

        self._cost_data_sharing_enabled = cost_data_sharing_enabled

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Output only. The resource name for this DisplayVideo360AdvertiserLink resource. Format: properties/{propertyId}/displayVideo360AdvertiserLinks/{linkId} Note: linkId is not the Display & Video 360 Advertiser ID

        :return: The name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.

        Output only. The resource name for this DisplayVideo360AdvertiserLink resource. Format: properties/{propertyId}/displayVideo360AdvertiserLinks/{linkId} Note: linkId is not the Display & Video 360 Advertiser ID

        :param name: The name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.
        :type name: str
        """

        self._name = name
