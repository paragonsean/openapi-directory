# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1alphaBigQueryLink(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, daily_export_enabled: bool=None, excluded_events: List[str]=None, export_streams: List[str]=None, fresh_daily_export_enabled: bool=None, include_advertising_id: bool=None, name: str=None, project: str=None, streaming_export_enabled: bool=None):
        """GoogleAnalyticsAdminV1alphaBigQueryLink - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param daily_export_enabled: The daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param excluded_events: The excluded_events of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param export_streams: The export_streams of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param fresh_daily_export_enabled: The fresh_daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param include_advertising_id: The include_advertising_id of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param name: The name of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param project: The project of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :param streaming_export_enabled: The streaming_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        """
        self.openapi_types = {
            'create_time': str,
            'daily_export_enabled': bool,
            'excluded_events': List[str],
            'export_streams': List[str],
            'fresh_daily_export_enabled': bool,
            'include_advertising_id': bool,
            'name': str,
            'project': str,
            'streaming_export_enabled': bool
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'daily_export_enabled': 'dailyExportEnabled',
            'excluded_events': 'excludedEvents',
            'export_streams': 'exportStreams',
            'fresh_daily_export_enabled': 'freshDailyExportEnabled',
            'include_advertising_id': 'includeAdvertisingId',
            'name': 'name',
            'project': 'project',
            'streaming_export_enabled': 'streamingExportEnabled'
        }

        self._create_time = create_time
        self._daily_export_enabled = daily_export_enabled
        self._excluded_events = excluded_events
        self._export_streams = export_streams
        self._fresh_daily_export_enabled = fresh_daily_export_enabled
        self._include_advertising_id = include_advertising_id
        self._name = name
        self._project = project
        self._streaming_export_enabled = streaming_export_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaBigQueryLink':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaBigQueryLink of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        Output only. Time when the link was created.

        :return: The create_time of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        Output only. Time when the link was created.

        :param create_time: The create_time of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def daily_export_enabled(self):
        """Gets the daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, enables daily data export to the linked Google Cloud project.

        :return: The daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: bool
        """
        return self._daily_export_enabled

    @daily_export_enabled.setter
    def daily_export_enabled(self, daily_export_enabled):
        """Sets the daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, enables daily data export to the linked Google Cloud project.

        :param daily_export_enabled: The daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type daily_export_enabled: bool
        """

        self._daily_export_enabled = daily_export_enabled

    @property
    def excluded_events(self):
        """Gets the excluded_events of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        The list of event names that will be excluded from exports.

        :return: The excluded_events of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: List[str]
        """
        return self._excluded_events

    @excluded_events.setter
    def excluded_events(self, excluded_events):
        """Sets the excluded_events of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        The list of event names that will be excluded from exports.

        :param excluded_events: The excluded_events of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type excluded_events: List[str]
        """

        self._excluded_events = excluded_events

    @property
    def export_streams(self):
        """Gets the export_streams of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        The list of streams under the parent property for which data will be exported. Format: properties/{property_id}/dataStreams/{stream_id} Example: ['properties/1000/dataStreams/2000']

        :return: The export_streams of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: List[str]
        """
        return self._export_streams

    @export_streams.setter
    def export_streams(self, export_streams):
        """Sets the export_streams of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        The list of streams under the parent property for which data will be exported. Format: properties/{property_id}/dataStreams/{stream_id} Example: ['properties/1000/dataStreams/2000']

        :param export_streams: The export_streams of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type export_streams: List[str]
        """

        self._export_streams = export_streams

    @property
    def fresh_daily_export_enabled(self):
        """Gets the fresh_daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, enables fresh daily export to the linked Google Cloud project.

        :return: The fresh_daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: bool
        """
        return self._fresh_daily_export_enabled

    @fresh_daily_export_enabled.setter
    def fresh_daily_export_enabled(self, fresh_daily_export_enabled):
        """Sets the fresh_daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, enables fresh daily export to the linked Google Cloud project.

        :param fresh_daily_export_enabled: The fresh_daily_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type fresh_daily_export_enabled: bool
        """

        self._fresh_daily_export_enabled = fresh_daily_export_enabled

    @property
    def include_advertising_id(self):
        """Gets the include_advertising_id of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, exported data will include advertising identifiers for mobile app streams.

        :return: The include_advertising_id of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: bool
        """
        return self._include_advertising_id

    @include_advertising_id.setter
    def include_advertising_id(self, include_advertising_id):
        """Sets the include_advertising_id of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, exported data will include advertising identifiers for mobile app streams.

        :param include_advertising_id: The include_advertising_id of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type include_advertising_id: bool
        """

        self._include_advertising_id = include_advertising_id

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        Output only. Resource name of this BigQuery link. Format: 'properties/{property_id}/bigQueryLinks/{bigquery_link_id}' Format: 'properties/1234/bigQueryLinks/abc567'

        :return: The name of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        Output only. Resource name of this BigQuery link. Format: 'properties/{property_id}/bigQueryLinks/{bigquery_link_id}' Format: 'properties/1234/bigQueryLinks/abc567'

        :param name: The name of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type name: str
        """

        self._name = name

    @property
    def project(self):
        """Gets the project of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        Immutable. The linked Google Cloud project. When creating a BigQueryLink, you may provide this resource name using either a project number or project ID. Once this resource has been created, the returned project will always have a project that contains a project number. Format: 'projects/{project number}' Example: 'projects/1234'

        :return: The project of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        Immutable. The linked Google Cloud project. When creating a BigQueryLink, you may provide this resource name using either a project number or project ID. Once this resource has been created, the returned project will always have a project that contains a project number. Format: 'projects/{project number}' Example: 'projects/1234'

        :param project: The project of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type project: str
        """

        self._project = project

    @property
    def streaming_export_enabled(self):
        """Gets the streaming_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, enables streaming export to the linked Google Cloud project.

        :return: The streaming_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :rtype: bool
        """
        return self._streaming_export_enabled

    @streaming_export_enabled.setter
    def streaming_export_enabled(self, streaming_export_enabled):
        """Sets the streaming_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.

        If set true, enables streaming export to the linked Google Cloud project.

        :param streaming_export_enabled: The streaming_export_enabled of this GoogleAnalyticsAdminV1alphaBigQueryLink.
        :type streaming_export_enabled: bool
        """

        self._streaming_export_enabled = streaming_export_enabled
