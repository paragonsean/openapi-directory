# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1alphaParameterMutation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameter: str=None, parameter_value: str=None):
        """GoogleAnalyticsAdminV1alphaParameterMutation - a model defined in OpenAPI

        :param parameter: The parameter of this GoogleAnalyticsAdminV1alphaParameterMutation.
        :param parameter_value: The parameter_value of this GoogleAnalyticsAdminV1alphaParameterMutation.
        """
        self.openapi_types = {
            'parameter': str,
            'parameter_value': str
        }

        self.attribute_map = {
            'parameter': 'parameter',
            'parameter_value': 'parameterValue'
        }

        self._parameter = parameter
        self._parameter_value = parameter_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaParameterMutation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaParameterMutation of this GoogleAnalyticsAdminV1alphaParameterMutation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameter(self):
        """Gets the parameter of this GoogleAnalyticsAdminV1alphaParameterMutation.

        Required. The name of the parameter to mutate. This value must: * be less than 40 characters. * be unique across across all mutations within the rule * consist only of letters, digits or _ (underscores) For event edit rules, the name may also be set to 'event_name' to modify the event_name in place.

        :return: The parameter of this GoogleAnalyticsAdminV1alphaParameterMutation.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter):
        """Sets the parameter of this GoogleAnalyticsAdminV1alphaParameterMutation.

        Required. The name of the parameter to mutate. This value must: * be less than 40 characters. * be unique across across all mutations within the rule * consist only of letters, digits or _ (underscores) For event edit rules, the name may also be set to 'event_name' to modify the event_name in place.

        :param parameter: The parameter of this GoogleAnalyticsAdminV1alphaParameterMutation.
        :type parameter: str
        """

        self._parameter = parameter

    @property
    def parameter_value(self):
        """Gets the parameter_value of this GoogleAnalyticsAdminV1alphaParameterMutation.

        Required. The value mutation to perform. * Must be less than 100 characters. * To specify a constant value for the param, use the value's string. * To copy value from another parameter, use syntax like \"[[other_parameter]]\" For more details, see this [help center article](https://support.google.com/analytics/answer/10085872#modify-an-event&zippy=%2Cin-this-article%2Cmodify-parameters).

        :return: The parameter_value of this GoogleAnalyticsAdminV1alphaParameterMutation.
        :rtype: str
        """
        return self._parameter_value

    @parameter_value.setter
    def parameter_value(self, parameter_value):
        """Sets the parameter_value of this GoogleAnalyticsAdminV1alphaParameterMutation.

        Required. The value mutation to perform. * Must be less than 100 characters. * To specify a constant value for the param, use the value's string. * To copy value from another parameter, use syntax like \"[[other_parameter]]\" For more details, see this [help center article](https://support.google.com/analytics/answer/10085872#modify-an-event&zippy=%2Cin-this-article%2Cmodify-parameters).

        :param parameter_value: The parameter_value of this GoogleAnalyticsAdminV1alphaParameterMutation.
        :type parameter_value: str
        """

        self._parameter_value = parameter_value
