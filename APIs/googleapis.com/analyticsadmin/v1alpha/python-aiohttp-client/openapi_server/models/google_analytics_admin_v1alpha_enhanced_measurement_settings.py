# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_downloads_enabled: bool=None, form_interactions_enabled: bool=None, name: str=None, outbound_clicks_enabled: bool=None, page_changes_enabled: bool=None, scrolls_enabled: bool=None, search_query_parameter: str=None, site_search_enabled: bool=None, stream_enabled: bool=None, uri_query_parameter: str=None, video_engagement_enabled: bool=None):
        """GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings - a model defined in OpenAPI

        :param file_downloads_enabled: The file_downloads_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param form_interactions_enabled: The form_interactions_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param name: The name of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param outbound_clicks_enabled: The outbound_clicks_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param page_changes_enabled: The page_changes_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param scrolls_enabled: The scrolls_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param search_query_parameter: The search_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param site_search_enabled: The site_search_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param stream_enabled: The stream_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param uri_query_parameter: The uri_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :param video_engagement_enabled: The video_engagement_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        """
        self.openapi_types = {
            'file_downloads_enabled': bool,
            'form_interactions_enabled': bool,
            'name': str,
            'outbound_clicks_enabled': bool,
            'page_changes_enabled': bool,
            'scrolls_enabled': bool,
            'search_query_parameter': str,
            'site_search_enabled': bool,
            'stream_enabled': bool,
            'uri_query_parameter': str,
            'video_engagement_enabled': bool
        }

        self.attribute_map = {
            'file_downloads_enabled': 'fileDownloadsEnabled',
            'form_interactions_enabled': 'formInteractionsEnabled',
            'name': 'name',
            'outbound_clicks_enabled': 'outboundClicksEnabled',
            'page_changes_enabled': 'pageChangesEnabled',
            'scrolls_enabled': 'scrollsEnabled',
            'search_query_parameter': 'searchQueryParameter',
            'site_search_enabled': 'siteSearchEnabled',
            'stream_enabled': 'streamEnabled',
            'uri_query_parameter': 'uriQueryParameter',
            'video_engagement_enabled': 'videoEngagementEnabled'
        }

        self._file_downloads_enabled = file_downloads_enabled
        self._form_interactions_enabled = form_interactions_enabled
        self._name = name
        self._outbound_clicks_enabled = outbound_clicks_enabled
        self._page_changes_enabled = page_changes_enabled
        self._scrolls_enabled = scrolls_enabled
        self._search_query_parameter = search_query_parameter
        self._site_search_enabled = site_search_enabled
        self._stream_enabled = stream_enabled
        self._uri_query_parameter = uri_query_parameter
        self._video_engagement_enabled = video_engagement_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_downloads_enabled(self):
        """Gets the file_downloads_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a file download event each time a link is clicked with a common document, compressed file, application, video, or audio extension.

        :return: The file_downloads_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._file_downloads_enabled

    @file_downloads_enabled.setter
    def file_downloads_enabled(self, file_downloads_enabled):
        """Sets the file_downloads_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a file download event each time a link is clicked with a common document, compressed file, application, video, or audio extension.

        :param file_downloads_enabled: The file_downloads_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type file_downloads_enabled: bool
        """

        self._file_downloads_enabled = file_downloads_enabled

    @property
    def form_interactions_enabled(self):
        """Gets the form_interactions_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a form interaction event each time a visitor interacts with a form on your website. False by default.

        :return: The form_interactions_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._form_interactions_enabled

    @form_interactions_enabled.setter
    def form_interactions_enabled(self, form_interactions_enabled):
        """Sets the form_interactions_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a form interaction event each time a visitor interacts with a form on your website. False by default.

        :param form_interactions_enabled: The form_interactions_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type form_interactions_enabled: bool
        """

        self._form_interactions_enabled = form_interactions_enabled

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Output only. Resource name of the Enhanced Measurement Settings. Format: properties/{property_id}/dataStreams/{data_stream}/enhancedMeasurementSettings Example: \"properties/1000/dataStreams/2000/enhancedMeasurementSettings\"

        :return: The name of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Output only. Resource name of the Enhanced Measurement Settings. Format: properties/{property_id}/dataStreams/{data_stream}/enhancedMeasurementSettings Example: \"properties/1000/dataStreams/2000/enhancedMeasurementSettings\"

        :param name: The name of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type name: str
        """

        self._name = name

    @property
    def outbound_clicks_enabled(self):
        """Gets the outbound_clicks_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture an outbound click event each time a visitor clicks a link that leads them away from your domain.

        :return: The outbound_clicks_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._outbound_clicks_enabled

    @outbound_clicks_enabled.setter
    def outbound_clicks_enabled(self, outbound_clicks_enabled):
        """Sets the outbound_clicks_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture an outbound click event each time a visitor clicks a link that leads them away from your domain.

        :param outbound_clicks_enabled: The outbound_clicks_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type outbound_clicks_enabled: bool
        """

        self._outbound_clicks_enabled = outbound_clicks_enabled

    @property
    def page_changes_enabled(self):
        """Gets the page_changes_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a page view event each time the website changes the browser history state.

        :return: The page_changes_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._page_changes_enabled

    @page_changes_enabled.setter
    def page_changes_enabled(self, page_changes_enabled):
        """Sets the page_changes_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a page view event each time the website changes the browser history state.

        :param page_changes_enabled: The page_changes_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type page_changes_enabled: bool
        """

        self._page_changes_enabled = page_changes_enabled

    @property
    def scrolls_enabled(self):
        """Gets the scrolls_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture scroll events each time a visitor gets to the bottom of a page.

        :return: The scrolls_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._scrolls_enabled

    @scrolls_enabled.setter
    def scrolls_enabled(self, scrolls_enabled):
        """Sets the scrolls_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture scroll events each time a visitor gets to the bottom of a page.

        :param scrolls_enabled: The scrolls_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type scrolls_enabled: bool
        """

        self._scrolls_enabled = scrolls_enabled

    @property
    def search_query_parameter(self):
        """Gets the search_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Required. URL query parameters to interpret as site search parameters. Max length is 1024 characters. Must not be empty.

        :return: The search_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: str
        """
        return self._search_query_parameter

    @search_query_parameter.setter
    def search_query_parameter(self, search_query_parameter):
        """Sets the search_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Required. URL query parameters to interpret as site search parameters. Max length is 1024 characters. Must not be empty.

        :param search_query_parameter: The search_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type search_query_parameter: str
        """

        self._search_query_parameter = search_query_parameter

    @property
    def site_search_enabled(self):
        """Gets the site_search_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a view search results event each time a visitor performs a search on your site (based on a query parameter).

        :return: The site_search_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._site_search_enabled

    @site_search_enabled.setter
    def site_search_enabled(self, site_search_enabled):
        """Sets the site_search_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture a view search results event each time a visitor performs a search on your site (based on a query parameter).

        :param site_search_enabled: The site_search_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type site_search_enabled: bool
        """

        self._site_search_enabled = site_search_enabled

    @property
    def stream_enabled(self):
        """Gets the stream_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Indicates whether Enhanced Measurement Settings will be used to automatically measure interactions and content on this web stream. Changing this value does not affect the settings themselves, but determines whether they are respected.

        :return: The stream_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._stream_enabled

    @stream_enabled.setter
    def stream_enabled(self, stream_enabled):
        """Sets the stream_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Indicates whether Enhanced Measurement Settings will be used to automatically measure interactions and content on this web stream. Changing this value does not affect the settings themselves, but determines whether they are respected.

        :param stream_enabled: The stream_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type stream_enabled: bool
        """

        self._stream_enabled = stream_enabled

    @property
    def uri_query_parameter(self):
        """Gets the uri_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Additional URL query parameters. Max length is 1024 characters.

        :return: The uri_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: str
        """
        return self._uri_query_parameter

    @uri_query_parameter.setter
    def uri_query_parameter(self, uri_query_parameter):
        """Sets the uri_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        Additional URL query parameters. Max length is 1024 characters.

        :param uri_query_parameter: The uri_query_parameter of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type uri_query_parameter: str
        """

        self._uri_query_parameter = uri_query_parameter

    @property
    def video_engagement_enabled(self):
        """Gets the video_engagement_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture video play, progress, and complete events as visitors view embedded videos on your site.

        :return: The video_engagement_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :rtype: bool
        """
        return self._video_engagement_enabled

    @video_engagement_enabled.setter
    def video_engagement_enabled(self, video_engagement_enabled):
        """Sets the video_engagement_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.

        If enabled, capture video play, progress, and complete events as visitors view embedded videos on your site.

        :param video_engagement_enabled: The video_engagement_enabled of this GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.
        :type video_engagement_enabled: bool
        """

        self._video_engagement_enabled = video_engagement_enabled
