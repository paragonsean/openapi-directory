# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_analytics_admin_v1alpha_audience_dimension_or_metric_filter import GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter
from openapi_server.models.google_analytics_admin_v1alpha_audience_event_filter import GoogleAnalyticsAdminV1alphaAudienceEventFilter
from openapi_server.models.google_analytics_admin_v1alpha_audience_filter_expression_list import GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList
from openapi_server import util


class GoogleAnalyticsAdminV1alphaAudienceFilterExpression(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, and_group: GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList=None, dimension_or_metric_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter=None, event_filter: GoogleAnalyticsAdminV1alphaAudienceEventFilter=None, not_expression: GoogleAnalyticsAdminV1alphaAudienceFilterExpression=None, or_group: GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList=None):
        """GoogleAnalyticsAdminV1alphaAudienceFilterExpression - a model defined in OpenAPI

        :param and_group: The and_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :param dimension_or_metric_filter: The dimension_or_metric_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :param event_filter: The event_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :param not_expression: The not_expression of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :param or_group: The or_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        """
        self.openapi_types = {
            'and_group': GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList,
            'dimension_or_metric_filter': GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter,
            'event_filter': GoogleAnalyticsAdminV1alphaAudienceEventFilter,
            'not_expression': GoogleAnalyticsAdminV1alphaAudienceFilterExpression,
            'or_group': GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList
        }

        self.attribute_map = {
            'and_group': 'andGroup',
            'dimension_or_metric_filter': 'dimensionOrMetricFilter',
            'event_filter': 'eventFilter',
            'not_expression': 'notExpression',
            'or_group': 'orGroup'
        }

        self._and_group = and_group
        self._dimension_or_metric_filter = dimension_or_metric_filter
        self._event_filter = event_filter
        self._not_expression = not_expression
        self._or_group = or_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaAudienceFilterExpression':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaAudienceFilterExpression of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def and_group(self):
        """Gets the and_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :return: The and_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList
        """
        return self._and_group

    @and_group.setter
    def and_group(self, and_group):
        """Sets the and_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :param and_group: The and_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :type and_group: GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList
        """

        self._and_group = and_group

    @property
    def dimension_or_metric_filter(self):
        """Gets the dimension_or_metric_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :return: The dimension_or_metric_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter
        """
        return self._dimension_or_metric_filter

    @dimension_or_metric_filter.setter
    def dimension_or_metric_filter(self, dimension_or_metric_filter):
        """Sets the dimension_or_metric_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :param dimension_or_metric_filter: The dimension_or_metric_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :type dimension_or_metric_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter
        """

        self._dimension_or_metric_filter = dimension_or_metric_filter

    @property
    def event_filter(self):
        """Gets the event_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :return: The event_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceEventFilter
        """
        return self._event_filter

    @event_filter.setter
    def event_filter(self, event_filter):
        """Sets the event_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :param event_filter: The event_filter of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :type event_filter: GoogleAnalyticsAdminV1alphaAudienceEventFilter
        """

        self._event_filter = event_filter

    @property
    def not_expression(self):
        """Gets the not_expression of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :return: The not_expression of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceFilterExpression
        """
        return self._not_expression

    @not_expression.setter
    def not_expression(self, not_expression):
        """Sets the not_expression of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :param not_expression: The not_expression of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :type not_expression: GoogleAnalyticsAdminV1alphaAudienceFilterExpression
        """

        self._not_expression = not_expression

    @property
    def or_group(self):
        """Gets the or_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :return: The or_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList
        """
        return self._or_group

    @or_group.setter
    def or_group(self, or_group):
        """Sets the or_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.


        :param or_group: The or_group of this GoogleAnalyticsAdminV1alphaAudienceFilterExpression.
        :type or_group: GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList
        """

        self._or_group = or_group
