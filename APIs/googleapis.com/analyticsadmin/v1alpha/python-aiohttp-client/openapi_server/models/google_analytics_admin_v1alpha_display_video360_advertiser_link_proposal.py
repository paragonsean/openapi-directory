# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_analytics_admin_v1alpha_link_proposal_status_details import GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails
from openapi_server import util


class GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ads_personalization_enabled: bool=None, advertiser_display_name: str=None, advertiser_id: str=None, campaign_data_sharing_enabled: bool=None, cost_data_sharing_enabled: bool=None, link_proposal_status_details: GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails=None, name: str=None, validation_email: str=None):
        """GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal - a model defined in OpenAPI

        :param ads_personalization_enabled: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :param advertiser_display_name: The advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :param advertiser_id: The advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :param campaign_data_sharing_enabled: The campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :param cost_data_sharing_enabled: The cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :param link_proposal_status_details: The link_proposal_status_details of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :param name: The name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :param validation_email: The validation_email of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        """
        self.openapi_types = {
            'ads_personalization_enabled': bool,
            'advertiser_display_name': str,
            'advertiser_id': str,
            'campaign_data_sharing_enabled': bool,
            'cost_data_sharing_enabled': bool,
            'link_proposal_status_details': GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails,
            'name': str,
            'validation_email': str
        }

        self.attribute_map = {
            'ads_personalization_enabled': 'adsPersonalizationEnabled',
            'advertiser_display_name': 'advertiserDisplayName',
            'advertiser_id': 'advertiserId',
            'campaign_data_sharing_enabled': 'campaignDataSharingEnabled',
            'cost_data_sharing_enabled': 'costDataSharingEnabled',
            'link_proposal_status_details': 'linkProposalStatusDetails',
            'name': 'name',
            'validation_email': 'validationEmail'
        }

        self._ads_personalization_enabled = ads_personalization_enabled
        self._advertiser_display_name = advertiser_display_name
        self._advertiser_id = advertiser_id
        self._campaign_data_sharing_enabled = campaign_data_sharing_enabled
        self._cost_data_sharing_enabled = cost_data_sharing_enabled
        self._link_proposal_status_details = link_proposal_status_details
        self._name = name
        self._validation_email = validation_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ads_personalization_enabled(self):
        """Gets the ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. Enables personalized advertising features with this integration. If this field is not set on create, it will be defaulted to true.

        :return: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: bool
        """
        return self._ads_personalization_enabled

    @ads_personalization_enabled.setter
    def ads_personalization_enabled(self, ads_personalization_enabled):
        """Sets the ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. Enables personalized advertising features with this integration. If this field is not set on create, it will be defaulted to true.

        :param ads_personalization_enabled: The ads_personalization_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type ads_personalization_enabled: bool
        """

        self._ads_personalization_enabled = ads_personalization_enabled

    @property
    def advertiser_display_name(self):
        """Gets the advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Output only. The display name of the Display & Video Advertiser. Only populated for proposals that originated from Display & Video 360.

        :return: The advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: str
        """
        return self._advertiser_display_name

    @advertiser_display_name.setter
    def advertiser_display_name(self, advertiser_display_name):
        """Sets the advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Output only. The display name of the Display & Video Advertiser. Only populated for proposals that originated from Display & Video 360.

        :param advertiser_display_name: The advertiser_display_name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type advertiser_display_name: str
        """

        self._advertiser_display_name = advertiser_display_name

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. The Display & Video 360 Advertiser's advertiser ID.

        :return: The advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. The Display & Video 360 Advertiser's advertiser ID.

        :param advertiser_id: The advertiser_id of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def campaign_data_sharing_enabled(self):
        """Gets the campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. Enables the import of campaign data from Display & Video 360. If this field is not set on create, it will be defaulted to true.

        :return: The campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: bool
        """
        return self._campaign_data_sharing_enabled

    @campaign_data_sharing_enabled.setter
    def campaign_data_sharing_enabled(self, campaign_data_sharing_enabled):
        """Sets the campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. Enables the import of campaign data from Display & Video 360. If this field is not set on create, it will be defaulted to true.

        :param campaign_data_sharing_enabled: The campaign_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type campaign_data_sharing_enabled: bool
        """

        self._campaign_data_sharing_enabled = campaign_data_sharing_enabled

    @property
    def cost_data_sharing_enabled(self):
        """Gets the cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. Enables the import of cost data from Display & Video 360. This can only be enabled if campaign_data_sharing_enabled is enabled. If this field is not set on create, it will be defaulted to true.

        :return: The cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: bool
        """
        return self._cost_data_sharing_enabled

    @cost_data_sharing_enabled.setter
    def cost_data_sharing_enabled(self, cost_data_sharing_enabled):
        """Sets the cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Immutable. Enables the import of cost data from Display & Video 360. This can only be enabled if campaign_data_sharing_enabled is enabled. If this field is not set on create, it will be defaulted to true.

        :param cost_data_sharing_enabled: The cost_data_sharing_enabled of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type cost_data_sharing_enabled: bool
        """

        self._cost_data_sharing_enabled = cost_data_sharing_enabled

    @property
    def link_proposal_status_details(self):
        """Gets the link_proposal_status_details of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.


        :return: The link_proposal_status_details of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails
        """
        return self._link_proposal_status_details

    @link_proposal_status_details.setter
    def link_proposal_status_details(self, link_proposal_status_details):
        """Sets the link_proposal_status_details of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.


        :param link_proposal_status_details: The link_proposal_status_details of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type link_proposal_status_details: GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails
        """

        self._link_proposal_status_details = link_proposal_status_details

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Output only. The resource name for this DisplayVideo360AdvertiserLinkProposal resource. Format: properties/{propertyId}/displayVideo360AdvertiserLinkProposals/{proposalId} Note: proposalId is not the Display & Video 360 Advertiser ID

        :return: The name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Output only. The resource name for this DisplayVideo360AdvertiserLinkProposal resource. Format: properties/{propertyId}/displayVideo360AdvertiserLinkProposals/{proposalId} Note: proposalId is not the Display & Video 360 Advertiser ID

        :param name: The name of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type name: str
        """

        self._name = name

    @property
    def validation_email(self):
        """Gets the validation_email of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Input only. On a proposal being sent to Display & Video 360, this field must be set to the email address of an admin on the target advertiser. This is used to verify that the Google Analytics admin is aware of at least one admin on the Display & Video 360 Advertiser. This does not restrict approval of the proposal to a single user. Any admin on the Display & Video 360 Advertiser may approve the proposal.

        :return: The validation_email of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :rtype: str
        """
        return self._validation_email

    @validation_email.setter
    def validation_email(self, validation_email):
        """Sets the validation_email of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.

        Input only. On a proposal being sent to Display & Video 360, this field must be set to the email address of an admin on the target advertiser. This is used to verify that the Google Analytics admin is aware of at least one admin on the Display & Video 360 Advertiser. This does not restrict approval of the proposal to a single user. Any admin on the Display & Video 360 Advertiser may approve the proposal.

        :param validation_email: The validation_email of this GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.
        :type validation_email: str
        """

        self._validation_email = validation_email
