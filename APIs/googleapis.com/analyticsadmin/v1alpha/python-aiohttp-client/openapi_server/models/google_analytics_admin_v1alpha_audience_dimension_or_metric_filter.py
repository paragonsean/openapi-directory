# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_analytics_admin_v1alpha_audience_dimension_or_metric_filter_between_filter import GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterBetweenFilter
from openapi_server.models.google_analytics_admin_v1alpha_audience_dimension_or_metric_filter_in_list_filter import GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterInListFilter
from openapi_server.models.google_analytics_admin_v1alpha_audience_dimension_or_metric_filter_numeric_filter import GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericFilter
from openapi_server.models.google_analytics_admin_v1alpha_audience_dimension_or_metric_filter_string_filter import GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterStringFilter
from openapi_server import util


class GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, at_any_point_in_time: bool=None, between_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterBetweenFilter=None, field_name: str=None, in_any_n_day_period: int=None, in_list_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterInListFilter=None, numeric_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericFilter=None, string_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterStringFilter=None):
        """GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter - a model defined in OpenAPI

        :param at_any_point_in_time: The at_any_point_in_time of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :param between_filter: The between_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :param field_name: The field_name of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :param in_any_n_day_period: The in_any_n_day_period of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :param in_list_filter: The in_list_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :param numeric_filter: The numeric_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :param string_filter: The string_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        """
        self.openapi_types = {
            'at_any_point_in_time': bool,
            'between_filter': GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterBetweenFilter,
            'field_name': str,
            'in_any_n_day_period': int,
            'in_list_filter': GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterInListFilter,
            'numeric_filter': GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericFilter,
            'string_filter': GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterStringFilter
        }

        self.attribute_map = {
            'at_any_point_in_time': 'atAnyPointInTime',
            'between_filter': 'betweenFilter',
            'field_name': 'fieldName',
            'in_any_n_day_period': 'inAnyNDayPeriod',
            'in_list_filter': 'inListFilter',
            'numeric_filter': 'numericFilter',
            'string_filter': 'stringFilter'
        }

        self._at_any_point_in_time = at_any_point_in_time
        self._between_filter = between_filter
        self._field_name = field_name
        self._in_any_n_day_period = in_any_n_day_period
        self._in_list_filter = in_list_filter
        self._numeric_filter = numeric_filter
        self._string_filter = string_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def at_any_point_in_time(self):
        """Gets the at_any_point_in_time of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.

        Optional. Indicates whether this filter needs dynamic evaluation or not. If set to true, users join the Audience if they ever met the condition (static evaluation). If unset or set to false, user evaluation for an Audience is dynamic; users are added to an Audience when they meet the conditions and then removed when they no longer meet them. This can only be set when Audience scope is ACROSS_ALL_SESSIONS.

        :return: The at_any_point_in_time of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :rtype: bool
        """
        return self._at_any_point_in_time

    @at_any_point_in_time.setter
    def at_any_point_in_time(self, at_any_point_in_time):
        """Sets the at_any_point_in_time of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.

        Optional. Indicates whether this filter needs dynamic evaluation or not. If set to true, users join the Audience if they ever met the condition (static evaluation). If unset or set to false, user evaluation for an Audience is dynamic; users are added to an Audience when they meet the conditions and then removed when they no longer meet them. This can only be set when Audience scope is ACROSS_ALL_SESSIONS.

        :param at_any_point_in_time: The at_any_point_in_time of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :type at_any_point_in_time: bool
        """

        self._at_any_point_in_time = at_any_point_in_time

    @property
    def between_filter(self):
        """Gets the between_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :return: The between_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterBetweenFilter
        """
        return self._between_filter

    @between_filter.setter
    def between_filter(self, between_filter):
        """Sets the between_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :param between_filter: The between_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :type between_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterBetweenFilter
        """

        self._between_filter = between_filter

    @property
    def field_name(self):
        """Gets the field_name of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.

        Required. Immutable. The dimension name or metric name to filter. If the field name refers to a custom dimension or metric, a scope prefix will be added to the front of the custom dimensions or metric name. For more on scope prefixes or custom dimensions/metrics, reference the [Google Analytics Data API documentation] (https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#custom_dimensions).

        :return: The field_name of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.

        Required. Immutable. The dimension name or metric name to filter. If the field name refers to a custom dimension or metric, a scope prefix will be added to the front of the custom dimensions or metric name. For more on scope prefixes or custom dimensions/metrics, reference the [Google Analytics Data API documentation] (https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#custom_dimensions).

        :param field_name: The field_name of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def in_any_n_day_period(self):
        """Gets the in_any_n_day_period of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.

        Optional. If set, specifies the time window for which to evaluate data in number of days. If not set, then audience data is evaluated against lifetime data (For example, infinite time window). For example, if set to 1 day, only the current day's data is evaluated. The reference point is the current day when at_any_point_in_time is unset or false. It can only be set when Audience scope is ACROSS_ALL_SESSIONS and cannot be greater than 60 days.

        :return: The in_any_n_day_period of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :rtype: int
        """
        return self._in_any_n_day_period

    @in_any_n_day_period.setter
    def in_any_n_day_period(self, in_any_n_day_period):
        """Sets the in_any_n_day_period of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.

        Optional. If set, specifies the time window for which to evaluate data in number of days. If not set, then audience data is evaluated against lifetime data (For example, infinite time window). For example, if set to 1 day, only the current day's data is evaluated. The reference point is the current day when at_any_point_in_time is unset or false. It can only be set when Audience scope is ACROSS_ALL_SESSIONS and cannot be greater than 60 days.

        :param in_any_n_day_period: The in_any_n_day_period of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :type in_any_n_day_period: int
        """

        self._in_any_n_day_period = in_any_n_day_period

    @property
    def in_list_filter(self):
        """Gets the in_list_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :return: The in_list_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterInListFilter
        """
        return self._in_list_filter

    @in_list_filter.setter
    def in_list_filter(self, in_list_filter):
        """Sets the in_list_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :param in_list_filter: The in_list_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :type in_list_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterInListFilter
        """

        self._in_list_filter = in_list_filter

    @property
    def numeric_filter(self):
        """Gets the numeric_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :return: The numeric_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericFilter
        """
        return self._numeric_filter

    @numeric_filter.setter
    def numeric_filter(self, numeric_filter):
        """Sets the numeric_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :param numeric_filter: The numeric_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :type numeric_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericFilter
        """

        self._numeric_filter = numeric_filter

    @property
    def string_filter(self):
        """Gets the string_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :return: The string_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :rtype: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterStringFilter
        """
        return self._string_filter

    @string_filter.setter
    def string_filter(self, string_filter):
        """Sets the string_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.


        :param string_filter: The string_filter of this GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter.
        :type string_filter: GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterStringFilter
        """

        self._string_filter = string_filter
