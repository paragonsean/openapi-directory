/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1betaNumericValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1betaNumericValue::OAIGoogleAnalyticsAdminV1betaNumericValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1betaNumericValue::OAIGoogleAnalyticsAdminV1betaNumericValue() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1betaNumericValue::~OAIGoogleAnalyticsAdminV1betaNumericValue() {}

void OAIGoogleAnalyticsAdminV1betaNumericValue::initializeModel() {

    m_double_value_isSet = false;
    m_double_value_isValid = false;

    m_int64_value_isSet = false;
    m_int64_value_isValid = false;
}

void OAIGoogleAnalyticsAdminV1betaNumericValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1betaNumericValue::fromJsonObject(QJsonObject json) {

    m_double_value_isValid = ::OpenAPI::fromJsonValue(m_double_value, json[QString("doubleValue")]);
    m_double_value_isSet = !json[QString("doubleValue")].isNull() && m_double_value_isValid;

    m_int64_value_isValid = ::OpenAPI::fromJsonValue(m_int64_value, json[QString("int64Value")]);
    m_int64_value_isSet = !json[QString("int64Value")].isNull() && m_int64_value_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaNumericValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1betaNumericValue::asJsonObject() const {
    QJsonObject obj;
    if (m_double_value_isSet) {
        obj.insert(QString("doubleValue"), ::OpenAPI::toJsonValue(m_double_value));
    }
    if (m_int64_value_isSet) {
        obj.insert(QString("int64Value"), ::OpenAPI::toJsonValue(m_int64_value));
    }
    return obj;
}

double OAIGoogleAnalyticsAdminV1betaNumericValue::getDoubleValue() const {
    return m_double_value;
}
void OAIGoogleAnalyticsAdminV1betaNumericValue::setDoubleValue(const double &double_value) {
    m_double_value = double_value;
    m_double_value_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaNumericValue::is_double_value_Set() const{
    return m_double_value_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaNumericValue::is_double_value_Valid() const{
    return m_double_value_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaNumericValue::getInt64Value() const {
    return m_int64_value;
}
void OAIGoogleAnalyticsAdminV1betaNumericValue::setInt64Value(const QString &int64_value) {
    m_int64_value = int64_value;
    m_int64_value_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaNumericValue::is_int64_value_Set() const{
    return m_int64_value_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaNumericValue::is_int64_value_Valid() const{
    return m_int64_value_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaNumericValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_double_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_int64_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1betaNumericValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
