/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::~OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource() {}

void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_conversion_event_isSet = false;
    m_conversion_event_isValid = false;

    m_data_retention_settings_isSet = false;
    m_data_retention_settings_isValid = false;

    m_data_stream_isSet = false;
    m_data_stream_isValid = false;

    m_firebase_link_isSet = false;
    m_firebase_link_isValid = false;

    m_google_ads_link_isSet = false;
    m_google_ads_link_isValid = false;

    m_measurement_protocol_secret_isSet = false;
    m_measurement_protocol_secret_isValid = false;

    m_property_isSet = false;
    m_property_isValid = false;
}

void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_conversion_event_isValid = ::OpenAPI::fromJsonValue(m_conversion_event, json[QString("conversionEvent")]);
    m_conversion_event_isSet = !json[QString("conversionEvent")].isNull() && m_conversion_event_isValid;

    m_data_retention_settings_isValid = ::OpenAPI::fromJsonValue(m_data_retention_settings, json[QString("dataRetentionSettings")]);
    m_data_retention_settings_isSet = !json[QString("dataRetentionSettings")].isNull() && m_data_retention_settings_isValid;

    m_data_stream_isValid = ::OpenAPI::fromJsonValue(m_data_stream, json[QString("dataStream")]);
    m_data_stream_isSet = !json[QString("dataStream")].isNull() && m_data_stream_isValid;

    m_firebase_link_isValid = ::OpenAPI::fromJsonValue(m_firebase_link, json[QString("firebaseLink")]);
    m_firebase_link_isSet = !json[QString("firebaseLink")].isNull() && m_firebase_link_isValid;

    m_google_ads_link_isValid = ::OpenAPI::fromJsonValue(m_google_ads_link, json[QString("googleAdsLink")]);
    m_google_ads_link_isSet = !json[QString("googleAdsLink")].isNull() && m_google_ads_link_isValid;

    m_measurement_protocol_secret_isValid = ::OpenAPI::fromJsonValue(m_measurement_protocol_secret, json[QString("measurementProtocolSecret")]);
    m_measurement_protocol_secret_isSet = !json[QString("measurementProtocolSecret")].isNull() && m_measurement_protocol_secret_isValid;

    m_property_isValid = ::OpenAPI::fromJsonValue(m_property, json[QString("property")]);
    m_property_isSet = !json[QString("property")].isNull() && m_property_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::asJsonObject() const {
    QJsonObject obj;
    if (m_account.isSet()) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_conversion_event.isSet()) {
        obj.insert(QString("conversionEvent"), ::OpenAPI::toJsonValue(m_conversion_event));
    }
    if (m_data_retention_settings.isSet()) {
        obj.insert(QString("dataRetentionSettings"), ::OpenAPI::toJsonValue(m_data_retention_settings));
    }
    if (m_data_stream.isSet()) {
        obj.insert(QString("dataStream"), ::OpenAPI::toJsonValue(m_data_stream));
    }
    if (m_firebase_link.isSet()) {
        obj.insert(QString("firebaseLink"), ::OpenAPI::toJsonValue(m_firebase_link));
    }
    if (m_google_ads_link.isSet()) {
        obj.insert(QString("googleAdsLink"), ::OpenAPI::toJsonValue(m_google_ads_link));
    }
    if (m_measurement_protocol_secret.isSet()) {
        obj.insert(QString("measurementProtocolSecret"), ::OpenAPI::toJsonValue(m_measurement_protocol_secret));
    }
    if (m_property.isSet()) {
        obj.insert(QString("property"), ::OpenAPI::toJsonValue(m_property));
    }
    return obj;
}

OAIGoogleAnalyticsAdminV1betaAccount OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getAccount() const {
    return m_account;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setAccount(const OAIGoogleAnalyticsAdminV1betaAccount &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_account_Set() const{
    return m_account_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_account_Valid() const{
    return m_account_isValid;
}

OAIGoogleAnalyticsAdminV1betaConversionEvent OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getConversionEvent() const {
    return m_conversion_event;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setConversionEvent(const OAIGoogleAnalyticsAdminV1betaConversionEvent &conversion_event) {
    m_conversion_event = conversion_event;
    m_conversion_event_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_conversion_event_Set() const{
    return m_conversion_event_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_conversion_event_Valid() const{
    return m_conversion_event_isValid;
}

OAIGoogleAnalyticsAdminV1betaDataRetentionSettings OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getDataRetentionSettings() const {
    return m_data_retention_settings;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setDataRetentionSettings(const OAIGoogleAnalyticsAdminV1betaDataRetentionSettings &data_retention_settings) {
    m_data_retention_settings = data_retention_settings;
    m_data_retention_settings_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_data_retention_settings_Set() const{
    return m_data_retention_settings_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_data_retention_settings_Valid() const{
    return m_data_retention_settings_isValid;
}

OAIGoogleAnalyticsAdminV1betaDataStream OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getDataStream() const {
    return m_data_stream;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setDataStream(const OAIGoogleAnalyticsAdminV1betaDataStream &data_stream) {
    m_data_stream = data_stream;
    m_data_stream_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_data_stream_Set() const{
    return m_data_stream_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_data_stream_Valid() const{
    return m_data_stream_isValid;
}

OAIGoogleAnalyticsAdminV1betaFirebaseLink OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getFirebaseLink() const {
    return m_firebase_link;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setFirebaseLink(const OAIGoogleAnalyticsAdminV1betaFirebaseLink &firebase_link) {
    m_firebase_link = firebase_link;
    m_firebase_link_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_firebase_link_Set() const{
    return m_firebase_link_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_firebase_link_Valid() const{
    return m_firebase_link_isValid;
}

OAIGoogleAnalyticsAdminV1betaGoogleAdsLink OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getGoogleAdsLink() const {
    return m_google_ads_link;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setGoogleAdsLink(const OAIGoogleAnalyticsAdminV1betaGoogleAdsLink &google_ads_link) {
    m_google_ads_link = google_ads_link;
    m_google_ads_link_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_google_ads_link_Set() const{
    return m_google_ads_link_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_google_ads_link_Valid() const{
    return m_google_ads_link_isValid;
}

OAIGoogleAnalyticsAdminV1betaMeasurementProtocolSecret OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getMeasurementProtocolSecret() const {
    return m_measurement_protocol_secret;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setMeasurementProtocolSecret(const OAIGoogleAnalyticsAdminV1betaMeasurementProtocolSecret &measurement_protocol_secret) {
    m_measurement_protocol_secret = measurement_protocol_secret;
    m_measurement_protocol_secret_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_measurement_protocol_secret_Set() const{
    return m_measurement_protocol_secret_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_measurement_protocol_secret_Valid() const{
    return m_measurement_protocol_secret_isValid;
}

OAIGoogleAnalyticsAdminV1betaProperty OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::getProperty() const {
    return m_property;
}
void OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::setProperty(const OAIGoogleAnalyticsAdminV1betaProperty &property) {
    m_property = property;
    m_property_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_property_Set() const{
    return m_property_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::is_property_Valid() const{
    return m_property_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversion_event.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_retention_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_stream.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_firebase_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_ads_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_measurement_protocol_secret.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_property.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
