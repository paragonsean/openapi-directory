/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1betaProperty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1betaProperty::OAIGoogleAnalyticsAdminV1betaProperty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1betaProperty::OAIGoogleAnalyticsAdminV1betaProperty() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1betaProperty::~OAIGoogleAnalyticsAdminV1betaProperty() {}

void OAIGoogleAnalyticsAdminV1betaProperty::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_delete_time_isSet = false;
    m_delete_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_expire_time_isSet = false;
    m_expire_time_isValid = false;

    m_industry_category_isSet = false;
    m_industry_category_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_property_type_isSet = false;
    m_property_type_isValid = false;

    m_service_level_isSet = false;
    m_service_level_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleAnalyticsAdminV1betaProperty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1betaProperty::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_delete_time_isValid = ::OpenAPI::fromJsonValue(m_delete_time, json[QString("deleteTime")]);
    m_delete_time_isSet = !json[QString("deleteTime")].isNull() && m_delete_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_expire_time_isValid = ::OpenAPI::fromJsonValue(m_expire_time, json[QString("expireTime")]);
    m_expire_time_isSet = !json[QString("expireTime")].isNull() && m_expire_time_isValid;

    m_industry_category_isValid = ::OpenAPI::fromJsonValue(m_industry_category, json[QString("industryCategory")]);
    m_industry_category_isSet = !json[QString("industryCategory")].isNull() && m_industry_category_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_property_type_isValid = ::OpenAPI::fromJsonValue(m_property_type, json[QString("propertyType")]);
    m_property_type_isSet = !json[QString("propertyType")].isNull() && m_property_type_isValid;

    m_service_level_isValid = ::OpenAPI::fromJsonValue(m_service_level, json[QString("serviceLevel")]);
    m_service_level_isSet = !json[QString("serviceLevel")].isNull() && m_service_level_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1betaProperty::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_delete_time_isSet) {
        obj.insert(QString("deleteTime"), ::OpenAPI::toJsonValue(m_delete_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_expire_time_isSet) {
        obj.insert(QString("expireTime"), ::OpenAPI::toJsonValue(m_expire_time));
    }
    if (m_industry_category_isSet) {
        obj.insert(QString("industryCategory"), ::OpenAPI::toJsonValue(m_industry_category));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_property_type_isSet) {
        obj.insert(QString("propertyType"), ::OpenAPI::toJsonValue(m_property_type));
    }
    if (m_service_level_isSet) {
        obj.insert(QString("serviceLevel"), ::OpenAPI::toJsonValue(m_service_level));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getAccount() const {
    return m_account;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_account_Set() const{
    return m_account_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getDeleteTime() const {
    return m_delete_time;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setDeleteTime(const QString &delete_time) {
    m_delete_time = delete_time;
    m_delete_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_delete_time_Set() const{
    return m_delete_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_delete_time_Valid() const{
    return m_delete_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getExpireTime() const {
    return m_expire_time;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setExpireTime(const QString &expire_time) {
    m_expire_time = expire_time;
    m_expire_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_expire_time_Set() const{
    return m_expire_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_expire_time_Valid() const{
    return m_expire_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getIndustryCategory() const {
    return m_industry_category;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setIndustryCategory(const QString &industry_category) {
    m_industry_category = industry_category;
    m_industry_category_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_industry_category_Set() const{
    return m_industry_category_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_industry_category_Valid() const{
    return m_industry_category_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getParent() const {
    return m_parent;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_parent_Valid() const{
    return m_parent_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getPropertyType() const {
    return m_property_type;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setPropertyType(const QString &property_type) {
    m_property_type = property_type;
    m_property_type_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_property_type_Set() const{
    return m_property_type_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_property_type_Valid() const{
    return m_property_type_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getServiceLevel() const {
    return m_service_level;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setServiceLevel(const QString &service_level) {
    m_service_level = service_level;
    m_service_level_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_service_level_Set() const{
    return m_service_level_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_service_level_Valid() const{
    return m_service_level_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getTimeZone() const {
    return m_time_zone;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaProperty::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleAnalyticsAdminV1betaProperty::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delete_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1betaProperty::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
