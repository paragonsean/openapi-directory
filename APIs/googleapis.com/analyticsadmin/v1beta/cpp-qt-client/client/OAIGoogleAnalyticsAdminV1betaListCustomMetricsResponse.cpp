/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::~OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse() {}

void OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::initializeModel() {

    m_custom_metrics_isSet = false;
    m_custom_metrics_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::fromJsonObject(QJsonObject json) {

    m_custom_metrics_isValid = ::OpenAPI::fromJsonValue(m_custom_metrics, json[QString("customMetrics")]);
    m_custom_metrics_isSet = !json[QString("customMetrics")].isNull() && m_custom_metrics_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_metrics.size() > 0) {
        obj.insert(QString("customMetrics"), ::OpenAPI::toJsonValue(m_custom_metrics));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIGoogleAnalyticsAdminV1betaCustomMetric> OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::getCustomMetrics() const {
    return m_custom_metrics;
}
void OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::setCustomMetrics(const QList<OAIGoogleAnalyticsAdminV1betaCustomMetric> &custom_metrics) {
    m_custom_metrics = custom_metrics;
    m_custom_metrics_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::is_custom_metrics_Set() const{
    return m_custom_metrics_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::is_custom_metrics_Valid() const{
    return m_custom_metrics_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1betaListCustomMetricsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
