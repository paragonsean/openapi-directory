/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent.h
 *
 * A set of changes within a Google Analytics account or its child properties that resulted from the same cause. Common causes would be updates made in the Google Analytics UI, changes from customer support, or automatic Google Analytics system changes.
 */

#ifndef OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent_H
#define OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1betaChangeHistoryChange.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1betaChangeHistoryChange;

class OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent();
    OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent(QString json);
    ~OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActorType() const;
    void setActorType(const QString &actor_type);
    bool is_actor_type_Set() const;
    bool is_actor_type_Valid() const;

    QString getChangeTime() const;
    void setChangeTime(const QString &change_time);
    bool is_change_time_Set() const;
    bool is_change_time_Valid() const;

    QList<OAIGoogleAnalyticsAdminV1betaChangeHistoryChange> getChanges() const;
    void setChanges(const QList<OAIGoogleAnalyticsAdminV1betaChangeHistoryChange> &changes);
    bool is_changes_Set() const;
    bool is_changes_Valid() const;

    bool isChangesFiltered() const;
    void setChangesFiltered(const bool &changes_filtered);
    bool is_changes_filtered_Set() const;
    bool is_changes_filtered_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getUserActorEmail() const;
    void setUserActorEmail(const QString &user_actor_email);
    bool is_user_actor_email_Set() const;
    bool is_user_actor_email_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_actor_type;
    bool m_actor_type_isSet;
    bool m_actor_type_isValid;

    QString m_change_time;
    bool m_change_time_isSet;
    bool m_change_time_isValid;

    QList<OAIGoogleAnalyticsAdminV1betaChangeHistoryChange> m_changes;
    bool m_changes_isSet;
    bool m_changes_isValid;

    bool m_changes_filtered;
    bool m_changes_filtered_isSet;
    bool m_changes_filtered_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_user_actor_email;
    bool m_user_actor_email_isSet;
    bool m_user_actor_email_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent)

#endif // OAIGoogleAnalyticsAdminV1betaChangeHistoryEvent_H
