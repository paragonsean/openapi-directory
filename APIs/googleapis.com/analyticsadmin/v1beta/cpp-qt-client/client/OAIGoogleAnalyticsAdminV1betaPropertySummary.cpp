/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1betaPropertySummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1betaPropertySummary::OAIGoogleAnalyticsAdminV1betaPropertySummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1betaPropertySummary::OAIGoogleAnalyticsAdminV1betaPropertySummary() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1betaPropertySummary::~OAIGoogleAnalyticsAdminV1betaPropertySummary() {}

void OAIGoogleAnalyticsAdminV1betaPropertySummary::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_property_isSet = false;
    m_property_isValid = false;

    m_property_type_isSet = false;
    m_property_type_isValid = false;
}

void OAIGoogleAnalyticsAdminV1betaPropertySummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1betaPropertySummary::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_property_isValid = ::OpenAPI::fromJsonValue(m_property, json[QString("property")]);
    m_property_isSet = !json[QString("property")].isNull() && m_property_isValid;

    m_property_type_isValid = ::OpenAPI::fromJsonValue(m_property_type, json[QString("propertyType")]);
    m_property_type_isSet = !json[QString("propertyType")].isNull() && m_property_type_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaPropertySummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1betaPropertySummary::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_property_isSet) {
        obj.insert(QString("property"), ::OpenAPI::toJsonValue(m_property));
    }
    if (m_property_type_isSet) {
        obj.insert(QString("propertyType"), ::OpenAPI::toJsonValue(m_property_type));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1betaPropertySummary::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleAnalyticsAdminV1betaPropertySummary::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaPropertySummary::getParent() const {
    return m_parent;
}
void OAIGoogleAnalyticsAdminV1betaPropertySummary::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_parent_Valid() const{
    return m_parent_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaPropertySummary::getProperty() const {
    return m_property;
}
void OAIGoogleAnalyticsAdminV1betaPropertySummary::setProperty(const QString &property) {
    m_property = property;
    m_property_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_property_Set() const{
    return m_property_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_property_Valid() const{
    return m_property_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaPropertySummary::getPropertyType() const {
    return m_property_type;
}
void OAIGoogleAnalyticsAdminV1betaPropertySummary::setPropertyType(const QString &property_type) {
    m_property_type = property_type;
    m_property_type_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_property_type_Set() const{
    return m_property_type_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::is_property_type_Valid() const{
    return m_property_type_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1betaPropertySummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
