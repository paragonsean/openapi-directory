/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleAnalyticsAdminV1betaAccessFilter.h
 *
 * An expression to filter dimension or metric values.
 */

#ifndef OAIGoogleAnalyticsAdminV1betaAccessFilter_H
#define OAIGoogleAnalyticsAdminV1betaAccessFilter_H

#include <QJsonObject>

#include "OAIGoogleAnalyticsAdminV1betaAccessBetweenFilter.h"
#include "OAIGoogleAnalyticsAdminV1betaAccessInListFilter.h"
#include "OAIGoogleAnalyticsAdminV1betaAccessNumericFilter.h"
#include "OAIGoogleAnalyticsAdminV1betaAccessStringFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalyticsAdminV1betaAccessBetweenFilter;
class OAIGoogleAnalyticsAdminV1betaAccessInListFilter;
class OAIGoogleAnalyticsAdminV1betaAccessNumericFilter;
class OAIGoogleAnalyticsAdminV1betaAccessStringFilter;

class OAIGoogleAnalyticsAdminV1betaAccessFilter : public OAIObject {
public:
    OAIGoogleAnalyticsAdminV1betaAccessFilter();
    OAIGoogleAnalyticsAdminV1betaAccessFilter(QString json);
    ~OAIGoogleAnalyticsAdminV1betaAccessFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleAnalyticsAdminV1betaAccessBetweenFilter getBetweenFilter() const;
    void setBetweenFilter(const OAIGoogleAnalyticsAdminV1betaAccessBetweenFilter &between_filter);
    bool is_between_filter_Set() const;
    bool is_between_filter_Valid() const;

    QString getFieldName() const;
    void setFieldName(const QString &field_name);
    bool is_field_name_Set() const;
    bool is_field_name_Valid() const;

    OAIGoogleAnalyticsAdminV1betaAccessInListFilter getInListFilter() const;
    void setInListFilter(const OAIGoogleAnalyticsAdminV1betaAccessInListFilter &in_list_filter);
    bool is_in_list_filter_Set() const;
    bool is_in_list_filter_Valid() const;

    OAIGoogleAnalyticsAdminV1betaAccessNumericFilter getNumericFilter() const;
    void setNumericFilter(const OAIGoogleAnalyticsAdminV1betaAccessNumericFilter &numeric_filter);
    bool is_numeric_filter_Set() const;
    bool is_numeric_filter_Valid() const;

    OAIGoogleAnalyticsAdminV1betaAccessStringFilter getStringFilter() const;
    void setStringFilter(const OAIGoogleAnalyticsAdminV1betaAccessStringFilter &string_filter);
    bool is_string_filter_Set() const;
    bool is_string_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleAnalyticsAdminV1betaAccessBetweenFilter m_between_filter;
    bool m_between_filter_isSet;
    bool m_between_filter_isValid;

    QString m_field_name;
    bool m_field_name_isSet;
    bool m_field_name_isValid;

    OAIGoogleAnalyticsAdminV1betaAccessInListFilter m_in_list_filter;
    bool m_in_list_filter_isSet;
    bool m_in_list_filter_isValid;

    OAIGoogleAnalyticsAdminV1betaAccessNumericFilter m_numeric_filter;
    bool m_numeric_filter_isSet;
    bool m_numeric_filter_isValid;

    OAIGoogleAnalyticsAdminV1betaAccessStringFilter m_string_filter;
    bool m_string_filter_isSet;
    bool m_string_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleAnalyticsAdminV1betaAccessFilter)

#endif // OAIGoogleAnalyticsAdminV1betaAccessFilter_H
