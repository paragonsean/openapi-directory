/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1betaGoogleAdsLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::OAIGoogleAnalyticsAdminV1betaGoogleAdsLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::OAIGoogleAnalyticsAdminV1betaGoogleAdsLink() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::~OAIGoogleAnalyticsAdminV1betaGoogleAdsLink() {}

void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::initializeModel() {

    m_ads_personalization_enabled_isSet = false;
    m_ads_personalization_enabled_isValid = false;

    m_can_manage_clients_isSet = false;
    m_can_manage_clients_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_creator_email_address_isSet = false;
    m_creator_email_address_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::fromJsonObject(QJsonObject json) {

    m_ads_personalization_enabled_isValid = ::OpenAPI::fromJsonValue(m_ads_personalization_enabled, json[QString("adsPersonalizationEnabled")]);
    m_ads_personalization_enabled_isSet = !json[QString("adsPersonalizationEnabled")].isNull() && m_ads_personalization_enabled_isValid;

    m_can_manage_clients_isValid = ::OpenAPI::fromJsonValue(m_can_manage_clients, json[QString("canManageClients")]);
    m_can_manage_clients_isSet = !json[QString("canManageClients")].isNull() && m_can_manage_clients_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_creator_email_address_isValid = ::OpenAPI::fromJsonValue(m_creator_email_address, json[QString("creatorEmailAddress")]);
    m_creator_email_address_isSet = !json[QString("creatorEmailAddress")].isNull() && m_creator_email_address_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customerId")]);
    m_customer_id_isSet = !json[QString("customerId")].isNull() && m_customer_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::asJsonObject() const {
    QJsonObject obj;
    if (m_ads_personalization_enabled_isSet) {
        obj.insert(QString("adsPersonalizationEnabled"), ::OpenAPI::toJsonValue(m_ads_personalization_enabled));
    }
    if (m_can_manage_clients_isSet) {
        obj.insert(QString("canManageClients"), ::OpenAPI::toJsonValue(m_can_manage_clients));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_creator_email_address_isSet) {
        obj.insert(QString("creatorEmailAddress"), ::OpenAPI::toJsonValue(m_creator_email_address));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customerId"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::isAdsPersonalizationEnabled() const {
    return m_ads_personalization_enabled;
}
void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::setAdsPersonalizationEnabled(const bool &ads_personalization_enabled) {
    m_ads_personalization_enabled = ads_personalization_enabled;
    m_ads_personalization_enabled_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_ads_personalization_enabled_Set() const{
    return m_ads_personalization_enabled_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_ads_personalization_enabled_Valid() const{
    return m_ads_personalization_enabled_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::isCanManageClients() const {
    return m_can_manage_clients;
}
void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::setCanManageClients(const bool &can_manage_clients) {
    m_can_manage_clients = can_manage_clients;
    m_can_manage_clients_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_can_manage_clients_Set() const{
    return m_can_manage_clients_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_can_manage_clients_Valid() const{
    return m_can_manage_clients_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::getCreatorEmailAddress() const {
    return m_creator_email_address;
}
void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::setCreatorEmailAddress(const QString &creator_email_address) {
    m_creator_email_address = creator_email_address;
    m_creator_email_address_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_creator_email_address_Set() const{
    return m_creator_email_address_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_creator_email_address_Valid() const{
    return m_creator_email_address_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::getCustomerId() const {
    return m_customer_id;
}
void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ads_personalization_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_manage_clients_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1betaGoogleAdsLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
