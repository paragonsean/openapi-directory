/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleAnalyticsAdminV1betaFirebaseLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleAnalyticsAdminV1betaFirebaseLink::OAIGoogleAnalyticsAdminV1betaFirebaseLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleAnalyticsAdminV1betaFirebaseLink::OAIGoogleAnalyticsAdminV1betaFirebaseLink() {
    this->initializeModel();
}

OAIGoogleAnalyticsAdminV1betaFirebaseLink::~OAIGoogleAnalyticsAdminV1betaFirebaseLink() {}

void OAIGoogleAnalyticsAdminV1betaFirebaseLink::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;
}

void OAIGoogleAnalyticsAdminV1betaFirebaseLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleAnalyticsAdminV1betaFirebaseLink::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaFirebaseLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleAnalyticsAdminV1betaFirebaseLink::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    return obj;
}

QString OAIGoogleAnalyticsAdminV1betaFirebaseLink::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleAnalyticsAdminV1betaFirebaseLink::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaFirebaseLink::getName() const {
    return m_name;
}
void OAIGoogleAnalyticsAdminV1betaFirebaseLink::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleAnalyticsAdminV1betaFirebaseLink::getProject() const {
    return m_project;
}
void OAIGoogleAnalyticsAdminV1betaFirebaseLink::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::is_project_Set() const{
    return m_project_isSet;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::is_project_Valid() const{
    return m_project_isValid;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleAnalyticsAdminV1betaFirebaseLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
