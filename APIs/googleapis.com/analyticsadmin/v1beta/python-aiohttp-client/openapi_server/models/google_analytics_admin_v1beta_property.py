# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1betaProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: str=None, create_time: str=None, currency_code: str=None, delete_time: str=None, display_name: str=None, expire_time: str=None, industry_category: str=None, name: str=None, parent: str=None, property_type: str=None, service_level: str=None, time_zone: str=None, update_time: str=None):
        """GoogleAnalyticsAdminV1betaProperty - a model defined in OpenAPI

        :param account: The account of this GoogleAnalyticsAdminV1betaProperty.
        :param create_time: The create_time of this GoogleAnalyticsAdminV1betaProperty.
        :param currency_code: The currency_code of this GoogleAnalyticsAdminV1betaProperty.
        :param delete_time: The delete_time of this GoogleAnalyticsAdminV1betaProperty.
        :param display_name: The display_name of this GoogleAnalyticsAdminV1betaProperty.
        :param expire_time: The expire_time of this GoogleAnalyticsAdminV1betaProperty.
        :param industry_category: The industry_category of this GoogleAnalyticsAdminV1betaProperty.
        :param name: The name of this GoogleAnalyticsAdminV1betaProperty.
        :param parent: The parent of this GoogleAnalyticsAdminV1betaProperty.
        :param property_type: The property_type of this GoogleAnalyticsAdminV1betaProperty.
        :param service_level: The service_level of this GoogleAnalyticsAdminV1betaProperty.
        :param time_zone: The time_zone of this GoogleAnalyticsAdminV1betaProperty.
        :param update_time: The update_time of this GoogleAnalyticsAdminV1betaProperty.
        """
        self.openapi_types = {
            'account': str,
            'create_time': str,
            'currency_code': str,
            'delete_time': str,
            'display_name': str,
            'expire_time': str,
            'industry_category': str,
            'name': str,
            'parent': str,
            'property_type': str,
            'service_level': str,
            'time_zone': str,
            'update_time': str
        }

        self.attribute_map = {
            'account': 'account',
            'create_time': 'createTime',
            'currency_code': 'currencyCode',
            'delete_time': 'deleteTime',
            'display_name': 'displayName',
            'expire_time': 'expireTime',
            'industry_category': 'industryCategory',
            'name': 'name',
            'parent': 'parent',
            'property_type': 'propertyType',
            'service_level': 'serviceLevel',
            'time_zone': 'timeZone',
            'update_time': 'updateTime'
        }

        self._account = account
        self._create_time = create_time
        self._currency_code = currency_code
        self._delete_time = delete_time
        self._display_name = display_name
        self._expire_time = expire_time
        self._industry_category = industry_category
        self._name = name
        self._parent = parent
        self._property_type = property_type
        self._service_level = service_level
        self._time_zone = time_zone
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1betaProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1betaProperty of this GoogleAnalyticsAdminV1betaProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this GoogleAnalyticsAdminV1betaProperty.

        Immutable. The resource name of the parent account Format: accounts/{account_id} Example: \"accounts/123\"

        :return: The account of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this GoogleAnalyticsAdminV1betaProperty.

        Immutable. The resource name of the parent account Format: accounts/{account_id} Example: \"accounts/123\"

        :param account: The account of this GoogleAnalyticsAdminV1betaProperty.
        :type account: str
        """

        self._account = account

    @property
    def create_time(self):
        """Gets the create_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. Time when the entity was originally created.

        :return: The create_time of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. Time when the entity was originally created.

        :param create_time: The create_time of this GoogleAnalyticsAdminV1betaProperty.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def currency_code(self):
        """Gets the currency_code of this GoogleAnalyticsAdminV1betaProperty.

        The currency type used in reports involving monetary values. Format: https://en.wikipedia.org/wiki/ISO_4217 Examples: \"USD\", \"EUR\", \"JPY\"

        :return: The currency_code of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this GoogleAnalyticsAdminV1betaProperty.

        The currency type used in reports involving monetary values. Format: https://en.wikipedia.org/wiki/ISO_4217 Examples: \"USD\", \"EUR\", \"JPY\"

        :param currency_code: The currency_code of this GoogleAnalyticsAdminV1betaProperty.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def delete_time(self):
        """Gets the delete_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. If set, the time at which this property was trashed. If not set, then this property is not currently in the trash can.

        :return: The delete_time of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._delete_time

    @delete_time.setter
    def delete_time(self, delete_time):
        """Sets the delete_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. If set, the time at which this property was trashed. If not set, then this property is not currently in the trash can.

        :param delete_time: The delete_time of this GoogleAnalyticsAdminV1betaProperty.
        :type delete_time: str
        """

        self._delete_time = delete_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleAnalyticsAdminV1betaProperty.

        Required. Human-readable display name for this property. The max allowed display name length is 100 UTF-16 code units.

        :return: The display_name of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleAnalyticsAdminV1betaProperty.

        Required. Human-readable display name for this property. The max allowed display name length is 100 UTF-16 code units.

        :param display_name: The display_name of this GoogleAnalyticsAdminV1betaProperty.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def expire_time(self):
        """Gets the expire_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. If set, the time at which this trashed property will be permanently deleted. If not set, then this property is not currently in the trash can and is not slated to be deleted.

        :return: The expire_time of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. If set, the time at which this trashed property will be permanently deleted. If not set, then this property is not currently in the trash can and is not slated to be deleted.

        :param expire_time: The expire_time of this GoogleAnalyticsAdminV1betaProperty.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def industry_category(self):
        """Gets the industry_category of this GoogleAnalyticsAdminV1betaProperty.

        Industry associated with this property Example: AUTOMOTIVE, FOOD_AND_DRINK

        :return: The industry_category of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._industry_category

    @industry_category.setter
    def industry_category(self, industry_category):
        """Sets the industry_category of this GoogleAnalyticsAdminV1betaProperty.

        Industry associated with this property Example: AUTOMOTIVE, FOOD_AND_DRINK

        :param industry_category: The industry_category of this GoogleAnalyticsAdminV1betaProperty.
        :type industry_category: str
        """
        allowed_values = ["INDUSTRY_CATEGORY_UNSPECIFIED", "AUTOMOTIVE", "BUSINESS_AND_INDUSTRIAL_MARKETS", "FINANCE", "HEALTHCARE", "TECHNOLOGY", "TRAVEL", "OTHER", "ARTS_AND_ENTERTAINMENT", "BEAUTY_AND_FITNESS", "BOOKS_AND_LITERATURE", "FOOD_AND_DRINK", "GAMES", "HOBBIES_AND_LEISURE", "HOME_AND_GARDEN", "INTERNET_AND_TELECOM", "LAW_AND_GOVERNMENT", "NEWS", "ONLINE_COMMUNITIES", "PEOPLE_AND_SOCIETY", "PETS_AND_ANIMALS", "REAL_ESTATE", "REFERENCE", "SCIENCE", "SPORTS", "JOBS_AND_EDUCATION", "SHOPPING"]  # noqa: E501
        if industry_category not in allowed_values:
            raise ValueError(
                "Invalid value for `industry_category` ({0}), must be one of {1}"
                .format(industry_category, allowed_values)
            )

        self._industry_category = industry_category

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1betaProperty.

        Output only. Resource name of this property. Format: properties/{property_id} Example: \"properties/1000\"

        :return: The name of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1betaProperty.

        Output only. Resource name of this property. Format: properties/{property_id} Example: \"properties/1000\"

        :param name: The name of this GoogleAnalyticsAdminV1betaProperty.
        :type name: str
        """

        self._name = name

    @property
    def parent(self):
        """Gets the parent of this GoogleAnalyticsAdminV1betaProperty.

        Immutable. Resource name of this property's logical parent. Note: The Property-Moving UI can be used to change the parent. Format: accounts/{account}, properties/{property} Example: \"accounts/100\", \"properties/101\"

        :return: The parent of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this GoogleAnalyticsAdminV1betaProperty.

        Immutable. Resource name of this property's logical parent. Note: The Property-Moving UI can be used to change the parent. Format: accounts/{account}, properties/{property} Example: \"accounts/100\", \"properties/101\"

        :param parent: The parent of this GoogleAnalyticsAdminV1betaProperty.
        :type parent: str
        """

        self._parent = parent

    @property
    def property_type(self):
        """Gets the property_type of this GoogleAnalyticsAdminV1betaProperty.

        Immutable. The property type for this Property resource. When creating a property, if the type is \"PROPERTY_TYPE_UNSPECIFIED\", then \"ORDINARY_PROPERTY\" will be implied.

        :return: The property_type of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._property_type

    @property_type.setter
    def property_type(self, property_type):
        """Sets the property_type of this GoogleAnalyticsAdminV1betaProperty.

        Immutable. The property type for this Property resource. When creating a property, if the type is \"PROPERTY_TYPE_UNSPECIFIED\", then \"ORDINARY_PROPERTY\" will be implied.

        :param property_type: The property_type of this GoogleAnalyticsAdminV1betaProperty.
        :type property_type: str
        """
        allowed_values = ["PROPERTY_TYPE_UNSPECIFIED", "PROPERTY_TYPE_ORDINARY", "PROPERTY_TYPE_SUBPROPERTY", "PROPERTY_TYPE_ROLLUP"]  # noqa: E501
        if property_type not in allowed_values:
            raise ValueError(
                "Invalid value for `property_type` ({0}), must be one of {1}"
                .format(property_type, allowed_values)
            )

        self._property_type = property_type

    @property
    def service_level(self):
        """Gets the service_level of this GoogleAnalyticsAdminV1betaProperty.

        Output only. The Google Analytics service level that applies to this property.

        :return: The service_level of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._service_level

    @service_level.setter
    def service_level(self, service_level):
        """Sets the service_level of this GoogleAnalyticsAdminV1betaProperty.

        Output only. The Google Analytics service level that applies to this property.

        :param service_level: The service_level of this GoogleAnalyticsAdminV1betaProperty.
        :type service_level: str
        """
        allowed_values = ["SERVICE_LEVEL_UNSPECIFIED", "GOOGLE_ANALYTICS_STANDARD", "GOOGLE_ANALYTICS_360"]  # noqa: E501
        if service_level not in allowed_values:
            raise ValueError(
                "Invalid value for `service_level` ({0}), must be one of {1}"
                .format(service_level, allowed_values)
            )

        self._service_level = service_level

    @property
    def time_zone(self):
        """Gets the time_zone of this GoogleAnalyticsAdminV1betaProperty.

        Required. Reporting Time Zone, used as the day boundary for reports, regardless of where the data originates. If the time zone honors DST, Analytics will automatically adjust for the changes. NOTE: Changing the time zone only affects data going forward, and is not applied retroactively. Format: https://www.iana.org/time-zones Example: \"America/Los_Angeles\"

        :return: The time_zone of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this GoogleAnalyticsAdminV1betaProperty.

        Required. Reporting Time Zone, used as the day boundary for reports, regardless of where the data originates. If the time zone honors DST, Analytics will automatically adjust for the changes. NOTE: Changing the time zone only affects data going forward, and is not applied retroactively. Format: https://www.iana.org/time-zones Example: \"America/Los_Angeles\"

        :param time_zone: The time_zone of this GoogleAnalyticsAdminV1betaProperty.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def update_time(self):
        """Gets the update_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. Time when entity payload fields were last updated.

        :return: The update_time of this GoogleAnalyticsAdminV1betaProperty.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleAnalyticsAdminV1betaProperty.

        Output only. Time when entity payload fields were last updated.

        :param update_time: The update_time of this GoogleAnalyticsAdminV1betaProperty.
        :type update_time: str
        """

        self._update_time = update_time
