# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1betaAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, deleted: bool=None, display_name: str=None, name: str=None, region_code: str=None, update_time: str=None):
        """GoogleAnalyticsAdminV1betaAccount - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleAnalyticsAdminV1betaAccount.
        :param deleted: The deleted of this GoogleAnalyticsAdminV1betaAccount.
        :param display_name: The display_name of this GoogleAnalyticsAdminV1betaAccount.
        :param name: The name of this GoogleAnalyticsAdminV1betaAccount.
        :param region_code: The region_code of this GoogleAnalyticsAdminV1betaAccount.
        :param update_time: The update_time of this GoogleAnalyticsAdminV1betaAccount.
        """
        self.openapi_types = {
            'create_time': str,
            'deleted': bool,
            'display_name': str,
            'name': str,
            'region_code': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'deleted': 'deleted',
            'display_name': 'displayName',
            'name': 'name',
            'region_code': 'regionCode',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._deleted = deleted
        self._display_name = display_name
        self._name = name
        self._region_code = region_code
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1betaAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1betaAccount of this GoogleAnalyticsAdminV1betaAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Time when this account was originally created.

        :return: The create_time of this GoogleAnalyticsAdminV1betaAccount.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Time when this account was originally created.

        :param create_time: The create_time of this GoogleAnalyticsAdminV1betaAccount.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def deleted(self):
        """Gets the deleted of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Indicates whether this Account is soft-deleted or not. Deleted accounts are excluded from List results unless specifically requested.

        :return: The deleted of this GoogleAnalyticsAdminV1betaAccount.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Indicates whether this Account is soft-deleted or not. Deleted accounts are excluded from List results unless specifically requested.

        :param deleted: The deleted of this GoogleAnalyticsAdminV1betaAccount.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def display_name(self):
        """Gets the display_name of this GoogleAnalyticsAdminV1betaAccount.

        Required. Human-readable display name for this account.

        :return: The display_name of this GoogleAnalyticsAdminV1betaAccount.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleAnalyticsAdminV1betaAccount.

        Required. Human-readable display name for this account.

        :param display_name: The display_name of this GoogleAnalyticsAdminV1betaAccount.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Resource name of this account. Format: accounts/{account} Example: \"accounts/100\"

        :return: The name of this GoogleAnalyticsAdminV1betaAccount.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Resource name of this account. Format: accounts/{account} Example: \"accounts/100\"

        :param name: The name of this GoogleAnalyticsAdminV1betaAccount.
        :type name: str
        """

        self._name = name

    @property
    def region_code(self):
        """Gets the region_code of this GoogleAnalyticsAdminV1betaAccount.

        Country of business. Must be a Unicode CLDR region code.

        :return: The region_code of this GoogleAnalyticsAdminV1betaAccount.
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this GoogleAnalyticsAdminV1betaAccount.

        Country of business. Must be a Unicode CLDR region code.

        :param region_code: The region_code of this GoogleAnalyticsAdminV1betaAccount.
        :type region_code: str
        """

        self._region_code = region_code

    @property
    def update_time(self):
        """Gets the update_time of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Time when account payload fields were last updated.

        :return: The update_time of this GoogleAnalyticsAdminV1betaAccount.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleAnalyticsAdminV1betaAccount.

        Output only. Time when account payload fields were last updated.

        :param update_time: The update_time of this GoogleAnalyticsAdminV1betaAccount.
        :type update_time: str
        """

        self._update_time = update_time
