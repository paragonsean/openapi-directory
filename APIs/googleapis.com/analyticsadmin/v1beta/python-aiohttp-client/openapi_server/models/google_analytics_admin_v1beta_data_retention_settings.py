# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalyticsAdminV1betaDataRetentionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_data_retention: str=None, name: str=None, reset_user_data_on_new_activity: bool=None):
        """GoogleAnalyticsAdminV1betaDataRetentionSettings - a model defined in OpenAPI

        :param event_data_retention: The event_data_retention of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :param name: The name of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :param reset_user_data_on_new_activity: The reset_user_data_on_new_activity of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        """
        self.openapi_types = {
            'event_data_retention': str,
            'name': str,
            'reset_user_data_on_new_activity': bool
        }

        self.attribute_map = {
            'event_data_retention': 'eventDataRetention',
            'name': 'name',
            'reset_user_data_on_new_activity': 'resetUserDataOnNewActivity'
        }

        self._event_data_retention = event_data_retention
        self._name = name
        self._reset_user_data_on_new_activity = reset_user_data_on_new_activity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1betaDataRetentionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1betaDataRetentionSettings of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_data_retention(self):
        """Gets the event_data_retention of this GoogleAnalyticsAdminV1betaDataRetentionSettings.

        The length of time that event-level data is retained.

        :return: The event_data_retention of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :rtype: str
        """
        return self._event_data_retention

    @event_data_retention.setter
    def event_data_retention(self, event_data_retention):
        """Sets the event_data_retention of this GoogleAnalyticsAdminV1betaDataRetentionSettings.

        The length of time that event-level data is retained.

        :param event_data_retention: The event_data_retention of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :type event_data_retention: str
        """
        allowed_values = ["RETENTION_DURATION_UNSPECIFIED", "TWO_MONTHS", "FOURTEEN_MONTHS", "TWENTY_SIX_MONTHS", "THIRTY_EIGHT_MONTHS", "FIFTY_MONTHS"]  # noqa: E501
        if event_data_retention not in allowed_values:
            raise ValueError(
                "Invalid value for `event_data_retention` ({0}), must be one of {1}"
                .format(event_data_retention, allowed_values)
            )

        self._event_data_retention = event_data_retention

    @property
    def name(self):
        """Gets the name of this GoogleAnalyticsAdminV1betaDataRetentionSettings.

        Output only. Resource name for this DataRetentionSetting resource. Format: properties/{property}/dataRetentionSettings

        :return: The name of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleAnalyticsAdminV1betaDataRetentionSettings.

        Output only. Resource name for this DataRetentionSetting resource. Format: properties/{property}/dataRetentionSettings

        :param name: The name of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :type name: str
        """

        self._name = name

    @property
    def reset_user_data_on_new_activity(self):
        """Gets the reset_user_data_on_new_activity of this GoogleAnalyticsAdminV1betaDataRetentionSettings.

        If true, reset the retention period for the user identifier with every event from that user.

        :return: The reset_user_data_on_new_activity of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :rtype: bool
        """
        return self._reset_user_data_on_new_activity

    @reset_user_data_on_new_activity.setter
    def reset_user_data_on_new_activity(self, reset_user_data_on_new_activity):
        """Sets the reset_user_data_on_new_activity of this GoogleAnalyticsAdminV1betaDataRetentionSettings.

        If true, reset the retention period for the user identifier with every event from that user.

        :param reset_user_data_on_new_activity: The reset_user_data_on_new_activity of this GoogleAnalyticsAdminV1betaDataRetentionSettings.
        :type reset_user_data_on_new_activity: bool
        """

        self._reset_user_data_on_new_activity = reset_user_data_on_new_activity
