# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_analytics_admin_v1beta_firebase_link import GoogleAnalyticsAdminV1betaFirebaseLink
from openapi_server import util


class GoogleAnalyticsAdminV1betaListFirebaseLinksResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firebase_links: List[GoogleAnalyticsAdminV1betaFirebaseLink]=None, next_page_token: str=None):
        """GoogleAnalyticsAdminV1betaListFirebaseLinksResponse - a model defined in OpenAPI

        :param firebase_links: The firebase_links of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.
        :param next_page_token: The next_page_token of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.
        """
        self.openapi_types = {
            'firebase_links': List[GoogleAnalyticsAdminV1betaFirebaseLink],
            'next_page_token': str
        }

        self.attribute_map = {
            'firebase_links': 'firebaseLinks',
            'next_page_token': 'nextPageToken'
        }

        self._firebase_links = firebase_links
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalyticsAdminV1betaListFirebaseLinksResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalyticsAdminV1betaListFirebaseLinksResponse of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firebase_links(self):
        """Gets the firebase_links of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.

        List of FirebaseLinks. This will have at most one value.

        :return: The firebase_links of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.
        :rtype: List[GoogleAnalyticsAdminV1betaFirebaseLink]
        """
        return self._firebase_links

    @firebase_links.setter
    def firebase_links(self, firebase_links):
        """Sets the firebase_links of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.

        List of FirebaseLinks. This will have at most one value.

        :param firebase_links: The firebase_links of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.
        :type firebase_links: List[GoogleAnalyticsAdminV1betaFirebaseLink]
        """

        self._firebase_links = firebase_links

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. Currently, Google Analytics supports only one FirebaseLink per property, so this will never be populated.

        :return: The next_page_token of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. Currently, Google Analytics supports only one FirebaseLink per property, so this will never be populated.

        :param next_page_token: The next_page_token of this GoogleAnalyticsAdminV1betaListFirebaseLinksResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
