/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAnalyticsAdminV1betaAccessDateRange from './GoogleAnalyticsAdminV1betaAccessDateRange';
import GoogleAnalyticsAdminV1betaAccessDimension from './GoogleAnalyticsAdminV1betaAccessDimension';
import GoogleAnalyticsAdminV1betaAccessFilterExpression from './GoogleAnalyticsAdminV1betaAccessFilterExpression';
import GoogleAnalyticsAdminV1betaAccessMetric from './GoogleAnalyticsAdminV1betaAccessMetric';
import GoogleAnalyticsAdminV1betaAccessOrderBy from './GoogleAnalyticsAdminV1betaAccessOrderBy';

/**
 * The GoogleAnalyticsAdminV1betaRunAccessReportRequest model module.
 * @module model/GoogleAnalyticsAdminV1betaRunAccessReportRequest
 * @version v1beta
 */
class GoogleAnalyticsAdminV1betaRunAccessReportRequest {
    /**
     * Constructs a new <code>GoogleAnalyticsAdminV1betaRunAccessReportRequest</code>.
     * The request for a Data Access Record Report.
     * @alias module:model/GoogleAnalyticsAdminV1betaRunAccessReportRequest
     */
    constructor() { 
        
        GoogleAnalyticsAdminV1betaRunAccessReportRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleAnalyticsAdminV1betaRunAccessReportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleAnalyticsAdminV1betaRunAccessReportRequest} obj Optional instance to populate.
     * @return {module:model/GoogleAnalyticsAdminV1betaRunAccessReportRequest} The populated <code>GoogleAnalyticsAdminV1betaRunAccessReportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleAnalyticsAdminV1betaRunAccessReportRequest();

            if (data.hasOwnProperty('dateRanges')) {
                obj['dateRanges'] = ApiClient.convertToType(data['dateRanges'], [GoogleAnalyticsAdminV1betaAccessDateRange]);
            }
            if (data.hasOwnProperty('dimensionFilter')) {
                obj['dimensionFilter'] = GoogleAnalyticsAdminV1betaAccessFilterExpression.constructFromObject(data['dimensionFilter']);
            }
            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = ApiClient.convertToType(data['dimensions'], [GoogleAnalyticsAdminV1betaAccessDimension]);
            }
            if (data.hasOwnProperty('expandGroups')) {
                obj['expandGroups'] = ApiClient.convertToType(data['expandGroups'], 'Boolean');
            }
            if (data.hasOwnProperty('includeAllUsers')) {
                obj['includeAllUsers'] = ApiClient.convertToType(data['includeAllUsers'], 'Boolean');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'String');
            }
            if (data.hasOwnProperty('metricFilter')) {
                obj['metricFilter'] = GoogleAnalyticsAdminV1betaAccessFilterExpression.constructFromObject(data['metricFilter']);
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [GoogleAnalyticsAdminV1betaAccessMetric]);
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'String');
            }
            if (data.hasOwnProperty('orderBys')) {
                obj['orderBys'] = ApiClient.convertToType(data['orderBys'], [GoogleAnalyticsAdminV1betaAccessOrderBy]);
            }
            if (data.hasOwnProperty('returnEntityQuota')) {
                obj['returnEntityQuota'] = ApiClient.convertToType(data['returnEntityQuota'], 'Boolean');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleAnalyticsAdminV1betaRunAccessReportRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleAnalyticsAdminV1betaRunAccessReportRequest</code>.
     */
    static validateJSON(data) {
        if (data['dateRanges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dateRanges'])) {
                throw new Error("Expected the field `dateRanges` to be an array in the JSON data but got " + data['dateRanges']);
            }
            // validate the optional field `dateRanges` (array)
            for (const item of data['dateRanges']) {
                GoogleAnalyticsAdminV1betaAccessDateRange.validateJSON(item);
            };
        }
        // validate the optional field `dimensionFilter`
        if (data['dimensionFilter']) { // data not null
          GoogleAnalyticsAdminV1betaAccessFilterExpression.validateJSON(data['dimensionFilter']);
        }
        if (data['dimensions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dimensions'])) {
                throw new Error("Expected the field `dimensions` to be an array in the JSON data but got " + data['dimensions']);
            }
            // validate the optional field `dimensions` (array)
            for (const item of data['dimensions']) {
                GoogleAnalyticsAdminV1betaAccessDimension.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['limit'] && !(typeof data['limit'] === 'string' || data['limit'] instanceof String)) {
            throw new Error("Expected the field `limit` to be a primitive type in the JSON string but got " + data['limit']);
        }
        // validate the optional field `metricFilter`
        if (data['metricFilter']) { // data not null
          GoogleAnalyticsAdminV1betaAccessFilterExpression.validateJSON(data['metricFilter']);
        }
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                GoogleAnalyticsAdminV1betaAccessMetric.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['offset'] && !(typeof data['offset'] === 'string' || data['offset'] instanceof String)) {
            throw new Error("Expected the field `offset` to be a primitive type in the JSON string but got " + data['offset']);
        }
        if (data['orderBys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['orderBys'])) {
                throw new Error("Expected the field `orderBys` to be an array in the JSON data but got " + data['orderBys']);
            }
            // validate the optional field `orderBys` (array)
            for (const item of data['orderBys']) {
                GoogleAnalyticsAdminV1betaAccessOrderBy.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * Date ranges of access records to read. If multiple date ranges are requested, each response row will contain a zero based date range index. If two date ranges overlap, the access records for the overlapping days is included in the response rows for both date ranges. Requests are allowed up to 2 date ranges.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1betaAccessDateRange>} dateRanges
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['dateRanges'] = undefined;

/**
 * @member {module:model/GoogleAnalyticsAdminV1betaAccessFilterExpression} dimensionFilter
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['dimensionFilter'] = undefined;

/**
 * The dimensions requested and displayed in the response. Requests are allowed up to 9 dimensions.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1betaAccessDimension>} dimensions
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['dimensions'] = undefined;

/**
 * Optional. Decides whether to return the users within user groups. This field works only when include_all_users is set to true. If true, it will return all users with access to the specified property or account. If false, only the users with direct access will be returned.
 * @member {Boolean} expandGroups
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['expandGroups'] = undefined;

/**
 * Optional. Determines whether to include users who have never made an API call in the response. If true, all users with access to the specified property or account are included in the response, regardless of whether they have made an API call or not. If false, only the users who have made an API call will be included.
 * @member {Boolean} includeAllUsers
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['includeAllUsers'] = undefined;

/**
 * The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 100,000 rows per request, no matter how many you ask for. `limit` must be positive. The API may return fewer rows than the requested `limit`, if there aren't as many remaining rows as the `limit`. For instance, there are fewer than 300 possible values for the dimension `country`, so when reporting on only `country`, you can't get more than 300 rows, even if you set `limit` to a higher value. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
 * @member {String} limit
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['limit'] = undefined;

/**
 * @member {module:model/GoogleAnalyticsAdminV1betaAccessFilterExpression} metricFilter
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['metricFilter'] = undefined;

/**
 * The metrics requested and displayed in the response. Requests are allowed up to 10 metrics.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1betaAccessMetric>} metrics
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['metrics'] = undefined;

/**
 * The row count of the start row. The first row is counted as row 0. If offset is unspecified, it is treated as 0. If offset is zero, then this method will return the first page of results with `limit` entries. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
 * @member {String} offset
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['offset'] = undefined;

/**
 * Specifies how rows are ordered in the response.
 * @member {Array.<module:model/GoogleAnalyticsAdminV1betaAccessOrderBy>} orderBys
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['orderBys'] = undefined;

/**
 * Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [AccessQuota](#AccessQuota). For account-level requests, this field must be false.
 * @member {Boolean} returnEntityQuota
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['returnEntityQuota'] = undefined;

/**
 * This request's time zone if specified. If unspecified, the property's time zone is used. The request's time zone is used to interpret the start & end dates of the report. Formatted as strings from the IANA Time Zone database (https://www.iana.org/time-zones); for example \"America/New_York\" or \"Asia/Tokyo\".
 * @member {String} timeZone
 */
GoogleAnalyticsAdminV1betaRunAccessReportRequest.prototype['timeZone'] = undefined;






export default GoogleAnalyticsAdminV1betaRunAccessReportRequest;

