/**
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleAnalyticsAdminApi);
  }
}(this, function(expect, GoogleAnalyticsAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource', function() {
    it('should create an instance of GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource', function() {
      // uncomment below and update the code to test GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be.a(GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource);
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

    it('should have the property conversionEvent (base name: "conversionEvent")', function() {
      // uncomment below and update the code to test the property conversionEvent
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

    it('should have the property dataRetentionSettings (base name: "dataRetentionSettings")', function() {
      // uncomment below and update the code to test the property dataRetentionSettings
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

    it('should have the property dataStream (base name: "dataStream")', function() {
      // uncomment below and update the code to test the property dataStream
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

    it('should have the property firebaseLink (base name: "firebaseLink")', function() {
      // uncomment below and update the code to test the property firebaseLink
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

    it('should have the property googleAdsLink (base name: "googleAdsLink")', function() {
      // uncomment below and update the code to test the property googleAdsLink
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

    it('should have the property measurementProtocolSecret (base name: "measurementProtocolSecret")', function() {
      // uncomment below and update the code to test the property measurementProtocolSecret
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

    it('should have the property property (base name: "property")', function() {
      // uncomment below and update the code to test the property property
      //var instance = new GoogleAnalyticsAdminApi.GoogleAnalyticsAdminV1betaChangeHistoryChangeChangeHistoryResource();
      //expect(instance).to.be();
    });

  });

}));
