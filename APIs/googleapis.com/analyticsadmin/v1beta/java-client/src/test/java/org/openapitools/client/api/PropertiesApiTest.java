/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaAcknowledgeUserDataCollectionRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaConversionEvent;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaCustomDimension;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaCustomMetric;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaDataStream;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaFirebaseLink;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaGoogleAdsLink;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListConversionEventsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListCustomDimensionsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListCustomMetricsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListDataStreamsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListFirebaseLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListGoogleAdsLinksResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListMeasurementProtocolSecretsResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaListPropertiesResponse;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaMeasurementProtocolSecret;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaProperty;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaRunAccessReportRequest;
import org.openapitools.client.model.GoogleAnalyticsAdminV1betaRunAccessReportResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PropertiesApi
 */
@Disabled
public class PropertiesApiTest {

    private final PropertiesApi api = new PropertiesApi();

    /**
     * Acknowledges the terms of user data collection for the specified property. This acknowledgement must be completed (either in the Google Analytics UI or through this API) before MeasurementProtocolSecret resources may be created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesAcknowledgeUserDataCollectionTest() throws ApiException {
        String property = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaAcknowledgeUserDataCollectionRequest googleAnalyticsAdminV1betaAcknowledgeUserDataCollectionRequest = null;
        Object response = api.analyticsadminPropertiesAcknowledgeUserDataCollection(property, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaAcknowledgeUserDataCollectionRequest);
        // TODO: test validations
    }

    /**
     * Creates a conversion event with the specified attributes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesConversionEventsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaConversionEvent googleAnalyticsAdminV1betaConversionEvent = null;
        GoogleAnalyticsAdminV1betaConversionEvent response = api.analyticsadminPropertiesConversionEventsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaConversionEvent);
        // TODO: test validations
    }

    /**
     * Returns a list of conversion events in the specified parent property. Returns an empty list if no conversion events are found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesConversionEventsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1betaListConversionEventsResponse response = api.analyticsadminPropertiesConversionEventsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates an \&quot;GA4\&quot; property with the specified location and attributes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaProperty googleAnalyticsAdminV1betaProperty = null;
        GoogleAnalyticsAdminV1betaProperty response = api.analyticsadminPropertiesCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaProperty);
        // TODO: test validations
    }

    /**
     * Creates a CustomDimension.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomDimensionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaCustomDimension googleAnalyticsAdminV1betaCustomDimension = null;
        GoogleAnalyticsAdminV1betaCustomDimension response = api.analyticsadminPropertiesCustomDimensionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaCustomDimension);
        // TODO: test validations
    }

    /**
     * Lists CustomDimensions on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomDimensionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1betaListCustomDimensionsResponse response = api.analyticsadminPropertiesCustomDimensionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Archives a CustomMetric on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomMetricsArchiveTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.analyticsadminPropertiesCustomMetricsArchive(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Creates a CustomMetric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomMetricsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaCustomMetric googleAnalyticsAdminV1betaCustomMetric = null;
        GoogleAnalyticsAdminV1betaCustomMetric response = api.analyticsadminPropertiesCustomMetricsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaCustomMetric);
        // TODO: test validations
    }

    /**
     * Lists CustomMetrics on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesCustomMetricsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1betaListCustomMetricsResponse response = api.analyticsadminPropertiesCustomMetricsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a DataStream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaDataStream googleAnalyticsAdminV1betaDataStream = null;
        GoogleAnalyticsAdminV1betaDataStream response = api.analyticsadminPropertiesDataStreamsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaDataStream);
        // TODO: test validations
    }

    /**
     * Lists DataStreams on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1betaListDataStreamsResponse response = api.analyticsadminPropertiesDataStreamsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a measurement protocol secret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaMeasurementProtocolSecret googleAnalyticsAdminV1betaMeasurementProtocolSecret = null;
        GoogleAnalyticsAdminV1betaMeasurementProtocolSecret response = api.analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaMeasurementProtocolSecret);
        // TODO: test validations
    }

    /**
     * Lookup for a single \&quot;GA4\&quot; MeasurementProtocolSecret.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaMeasurementProtocolSecret response = api.analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Returns child MeasurementProtocolSecrets under the specified parent Property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1betaListMeasurementProtocolSecretsResponse response = api.analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a FirebaseLink. Properties can have at most one FirebaseLink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesFirebaseLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaFirebaseLink googleAnalyticsAdminV1betaFirebaseLink = null;
        GoogleAnalyticsAdminV1betaFirebaseLink response = api.analyticsadminPropertiesFirebaseLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaFirebaseLink);
        // TODO: test validations
    }

    /**
     * Lists FirebaseLinks on a property. Properties can have at most one FirebaseLink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesFirebaseLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1betaListFirebaseLinksResponse response = api.analyticsadminPropertiesFirebaseLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a GoogleAdsLink.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesGoogleAdsLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaGoogleAdsLink googleAnalyticsAdminV1betaGoogleAdsLink = null;
        GoogleAnalyticsAdminV1betaGoogleAdsLink response = api.analyticsadminPropertiesGoogleAdsLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaGoogleAdsLink);
        // TODO: test validations
    }

    /**
     * Deletes a GoogleAdsLink on a property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesGoogleAdsLinksDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.analyticsadminPropertiesGoogleAdsLinksDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists GoogleAdsLinks on a property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesGoogleAdsLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleAnalyticsAdminV1betaListGoogleAdsLinksResponse response = api.analyticsadminPropertiesGoogleAdsLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a GoogleAdsLink on a property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesGoogleAdsLinksPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleAnalyticsAdminV1betaGoogleAdsLink googleAnalyticsAdminV1betaGoogleAdsLink = null;
        GoogleAnalyticsAdminV1betaGoogleAdsLink response = api.analyticsadminPropertiesGoogleAdsLinksPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleAnalyticsAdminV1betaGoogleAdsLink);
        // TODO: test validations
    }

    /**
     * Returns child Properties under the specified parent Account. Only \&quot;GA4\&quot; properties will be returned. Properties will be excluded if the caller does not have access. Soft-deleted (ie: \&quot;trashed\&quot;) properties are excluded by default. Returns an empty list if no relevant properties are found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        Boolean showDeleted = null;
        GoogleAnalyticsAdminV1betaListPropertiesResponse response = api.analyticsadminPropertiesList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, showDeleted);
        // TODO: test validations
    }

    /**
     * Returns a customized report of data access records. The report provides records of each time a user reads Google Analytics reporting data. Access records are retained for up to 2 years. Data Access Reports can be requested for a property. Reports may be requested for any property, but dimensions that aren&#39;t related to quota can only be requested on Google Analytics 360 properties. This method is only available to Administrators. These data access records include GA4 UI Reporting, GA4 UI Explorations, GA4 Data API, and other products like Firebase &amp; Admob that can retrieve data from Google Analytics through a linkage. These records don&#39;t include property configuration changes like adding a stream or changing a property&#39;s time zone. For configuration change history, see [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void analyticsadminPropertiesRunAccessReportTest() throws ApiException {
        String entity = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleAnalyticsAdminV1betaRunAccessReportRequest googleAnalyticsAdminV1betaRunAccessReportRequest = null;
        GoogleAnalyticsAdminV1betaRunAccessReportResponse response = api.analyticsadminPropertiesRunAccessReport(entity, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleAnalyticsAdminV1betaRunAccessReportRequest);
        // TODO: test validations
    }

}
