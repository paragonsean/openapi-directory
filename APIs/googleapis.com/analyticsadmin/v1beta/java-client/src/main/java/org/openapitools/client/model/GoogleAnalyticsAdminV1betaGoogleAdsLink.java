/*
 * Google Analytics Admin API
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A link between a GA4 property and a Google Ads account.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:28.359351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleAnalyticsAdminV1betaGoogleAdsLink {
  public static final String SERIALIZED_NAME_ADS_PERSONALIZATION_ENABLED = "adsPersonalizationEnabled";
  @SerializedName(SERIALIZED_NAME_ADS_PERSONALIZATION_ENABLED)
  private Boolean adsPersonalizationEnabled;

  public static final String SERIALIZED_NAME_CAN_MANAGE_CLIENTS = "canManageClients";
  @SerializedName(SERIALIZED_NAME_CAN_MANAGE_CLIENTS)
  private Boolean canManageClients;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CREATOR_EMAIL_ADDRESS = "creatorEmailAddress";
  @SerializedName(SERIALIZED_NAME_CREATOR_EMAIL_ADDRESS)
  private String creatorEmailAddress;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleAnalyticsAdminV1betaGoogleAdsLink() {
  }

  public GoogleAnalyticsAdminV1betaGoogleAdsLink(
     Boolean canManageClients, 
     String createTime, 
     String creatorEmailAddress, 
     String name, 
     String updateTime
  ) {
    this();
    this.canManageClients = canManageClients;
    this.createTime = createTime;
    this.creatorEmailAddress = creatorEmailAddress;
    this.name = name;
    this.updateTime = updateTime;
  }

  public GoogleAnalyticsAdminV1betaGoogleAdsLink adsPersonalizationEnabled(Boolean adsPersonalizationEnabled) {
    this.adsPersonalizationEnabled = adsPersonalizationEnabled;
    return this;
  }

  /**
   * Enable personalized advertising features with this integration. Automatically publish my Google Analytics audience lists and Google Analytics remarketing events/parameters to the linked Google Ads account. If this field is not set on create/update, it will be defaulted to true.
   * @return adsPersonalizationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAdsPersonalizationEnabled() {
    return adsPersonalizationEnabled;
  }

  public void setAdsPersonalizationEnabled(Boolean adsPersonalizationEnabled) {
    this.adsPersonalizationEnabled = adsPersonalizationEnabled;
  }


  /**
   * Output only. If true, this link is for a Google Ads manager account.
   * @return canManageClients
   */
  @javax.annotation.Nullable
  public Boolean getCanManageClients() {
    return canManageClients;
  }



  /**
   * Output only. Time when this link was originally created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. Email address of the user that created the link. An empty string will be returned if the email address can&#39;t be retrieved.
   * @return creatorEmailAddress
   */
  @javax.annotation.Nullable
  public String getCreatorEmailAddress() {
    return creatorEmailAddress;
  }



  public GoogleAnalyticsAdminV1betaGoogleAdsLink customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

  /**
   * Immutable. Google Ads customer ID.
   * @return customerId
   */
  @javax.annotation.Nullable
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  /**
   * Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note: googleAdsLinkId is not the Google Ads customer ID.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Time when this link was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleAnalyticsAdminV1betaGoogleAdsLink googleAnalyticsAdminV1betaGoogleAdsLink = (GoogleAnalyticsAdminV1betaGoogleAdsLink) o;
    return Objects.equals(this.adsPersonalizationEnabled, googleAnalyticsAdminV1betaGoogleAdsLink.adsPersonalizationEnabled) &&
        Objects.equals(this.canManageClients, googleAnalyticsAdminV1betaGoogleAdsLink.canManageClients) &&
        Objects.equals(this.createTime, googleAnalyticsAdminV1betaGoogleAdsLink.createTime) &&
        Objects.equals(this.creatorEmailAddress, googleAnalyticsAdminV1betaGoogleAdsLink.creatorEmailAddress) &&
        Objects.equals(this.customerId, googleAnalyticsAdminV1betaGoogleAdsLink.customerId) &&
        Objects.equals(this.name, googleAnalyticsAdminV1betaGoogleAdsLink.name) &&
        Objects.equals(this.updateTime, googleAnalyticsAdminV1betaGoogleAdsLink.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adsPersonalizationEnabled, canManageClients, createTime, creatorEmailAddress, customerId, name, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleAnalyticsAdminV1betaGoogleAdsLink {\n");
    sb.append("    adsPersonalizationEnabled: ").append(toIndentedString(adsPersonalizationEnabled)).append("\n");
    sb.append("    canManageClients: ").append(toIndentedString(canManageClients)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    creatorEmailAddress: ").append(toIndentedString(creatorEmailAddress)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adsPersonalizationEnabled");
    openapiFields.add("canManageClients");
    openapiFields.add("createTime");
    openapiFields.add("creatorEmailAddress");
    openapiFields.add("customerId");
    openapiFields.add("name");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleAnalyticsAdminV1betaGoogleAdsLink
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleAnalyticsAdminV1betaGoogleAdsLink.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleAnalyticsAdminV1betaGoogleAdsLink is not found in the empty JSON string", GoogleAnalyticsAdminV1betaGoogleAdsLink.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleAnalyticsAdminV1betaGoogleAdsLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleAnalyticsAdminV1betaGoogleAdsLink` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("creatorEmailAddress") != null && !jsonObj.get("creatorEmailAddress").isJsonNull()) && !jsonObj.get("creatorEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creatorEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creatorEmailAddress").toString()));
      }
      if ((jsonObj.get("customerId") != null && !jsonObj.get("customerId").isJsonNull()) && !jsonObj.get("customerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleAnalyticsAdminV1betaGoogleAdsLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleAnalyticsAdminV1betaGoogleAdsLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleAnalyticsAdminV1betaGoogleAdsLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleAnalyticsAdminV1betaGoogleAdsLink.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleAnalyticsAdminV1betaGoogleAdsLink>() {
           @Override
           public void write(JsonWriter out, GoogleAnalyticsAdminV1betaGoogleAdsLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleAnalyticsAdminV1betaGoogleAdsLink read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleAnalyticsAdminV1betaGoogleAdsLink given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleAnalyticsAdminV1betaGoogleAdsLink
   * @throws IOException if the JSON string is invalid with respect to GoogleAnalyticsAdminV1betaGoogleAdsLink
   */
  public static GoogleAnalyticsAdminV1betaGoogleAdsLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleAnalyticsAdminV1betaGoogleAdsLink.class);
  }

  /**
   * Convert an instance of GoogleAnalyticsAdminV1betaGoogleAdsLink to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

