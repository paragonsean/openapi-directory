/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleIdentityToolkitApi);
  }
}(this, function(expect, GoogleIdentityToolkitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VerifyAssertionResponse', function() {
    it('should create an instance of VerifyAssertionResponse', function() {
      // uncomment below and update the code to test VerifyAssertionResponse
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be.a(GoogleIdentityToolkitApi.VerifyAssertionResponse);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property appInstallationUrl (base name: "appInstallationUrl")', function() {
      // uncomment below and update the code to test the property appInstallationUrl
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property appScheme (base name: "appScheme")', function() {
      // uncomment below and update the code to test the property appScheme
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property context (base name: "context")', function() {
      // uncomment below and update the code to test the property context
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "dateOfBirth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property emailRecycled (base name: "emailRecycled")', function() {
      // uncomment below and update the code to test the property emailRecycled
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property emailVerified (base name: "emailVerified")', function() {
      // uncomment below and update the code to test the property emailVerified
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property errorMessage (base name: "errorMessage")', function() {
      // uncomment below and update the code to test the property errorMessage
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property expiresIn (base name: "expiresIn")', function() {
      // uncomment below and update the code to test the property expiresIn
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property federatedId (base name: "federatedId")', function() {
      // uncomment below and update the code to test the property federatedId
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "fullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property idToken (base name: "idToken")', function() {
      // uncomment below and update the code to test the property idToken
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property inputEmail (base name: "inputEmail")', function() {
      // uncomment below and update the code to test the property inputEmail
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property isNewUser (base name: "isNewUser")', function() {
      // uncomment below and update the code to test the property isNewUser
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property localId (base name: "localId")', function() {
      // uncomment below and update the code to test the property localId
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property needConfirmation (base name: "needConfirmation")', function() {
      // uncomment below and update the code to test the property needConfirmation
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property needEmail (base name: "needEmail")', function() {
      // uncomment below and update the code to test the property needEmail
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property nickName (base name: "nickName")', function() {
      // uncomment below and update the code to test the property nickName
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthAccessToken (base name: "oauthAccessToken")', function() {
      // uncomment below and update the code to test the property oauthAccessToken
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthAuthorizationCode (base name: "oauthAuthorizationCode")', function() {
      // uncomment below and update the code to test the property oauthAuthorizationCode
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthExpireIn (base name: "oauthExpireIn")', function() {
      // uncomment below and update the code to test the property oauthExpireIn
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthIdToken (base name: "oauthIdToken")', function() {
      // uncomment below and update the code to test the property oauthIdToken
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthRequestToken (base name: "oauthRequestToken")', function() {
      // uncomment below and update the code to test the property oauthRequestToken
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthScope (base name: "oauthScope")', function() {
      // uncomment below and update the code to test the property oauthScope
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property oauthTokenSecret (base name: "oauthTokenSecret")', function() {
      // uncomment below and update the code to test the property oauthTokenSecret
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property originalEmail (base name: "originalEmail")', function() {
      // uncomment below and update the code to test the property originalEmail
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property photoUrl (base name: "photoUrl")', function() {
      // uncomment below and update the code to test the property photoUrl
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property providerId (base name: "providerId")', function() {
      // uncomment below and update the code to test the property providerId
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property rawUserInfo (base name: "rawUserInfo")', function() {
      // uncomment below and update the code to test the property rawUserInfo
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property refreshToken (base name: "refreshToken")', function() {
      // uncomment below and update the code to test the property refreshToken
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property screenName (base name: "screenName")', function() {
      // uncomment below and update the code to test the property screenName
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

    it('should have the property verifiedProvider (base name: "verifiedProvider")', function() {
      // uncomment below and update the code to test the property verifiedProvider
      //var instance = new GoogleIdentityToolkitApi.VerifyAssertionResponse();
      //expect(instance).to.be();
    });

  });

}));
