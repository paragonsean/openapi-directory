/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleIdentityToolkitApi);
  }
}(this, function(expect, GoogleIdentityToolkitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IdentitytoolkitRelyingpartyCreateAuthUriRequest', function() {
    it('should create an instance of IdentitytoolkitRelyingpartyCreateAuthUriRequest', function() {
      // uncomment below and update the code to test IdentitytoolkitRelyingpartyCreateAuthUriRequest
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be.a(GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest);
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property authFlowType (base name: "authFlowType")', function() {
      // uncomment below and update the code to test the property authFlowType
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property context (base name: "context")', function() {
      // uncomment below and update the code to test the property context
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property continueUri (base name: "continueUri")', function() {
      // uncomment below and update the code to test the property continueUri
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property customParameter (base name: "customParameter")', function() {
      // uncomment below and update the code to test the property customParameter
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property hostedDomain (base name: "hostedDomain")', function() {
      // uncomment below and update the code to test the property hostedDomain
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property oauthConsumerKey (base name: "oauthConsumerKey")', function() {
      // uncomment below and update the code to test the property oauthConsumerKey
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property oauthScope (base name: "oauthScope")', function() {
      // uncomment below and update the code to test the property oauthScope
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property openidRealm (base name: "openidRealm")', function() {
      // uncomment below and update the code to test the property openidRealm
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property otaApp (base name: "otaApp")', function() {
      // uncomment below and update the code to test the property otaApp
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property providerId (base name: "providerId")', function() {
      // uncomment below and update the code to test the property providerId
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property sessionId (base name: "sessionId")', function() {
      // uncomment below and update the code to test the property sessionId
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property tenantId (base name: "tenantId")', function() {
      // uncomment below and update the code to test the property tenantId
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

    it('should have the property tenantProjectNumber (base name: "tenantProjectNumber")', function() {
      // uncomment below and update the code to test the property tenantProjectNumber
      //var instance = new GoogleIdentityToolkitApi.IdentitytoolkitRelyingpartyCreateAuthUriRequest();
      //expect(instance).to.be();
    });

  });

}));
