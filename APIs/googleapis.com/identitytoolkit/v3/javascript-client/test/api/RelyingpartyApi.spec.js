/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleIdentityToolkitApi);
  }
}(this, function(expect, GoogleIdentityToolkitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleIdentityToolkitApi.RelyingpartyApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RelyingpartyApi', function() {
    describe('identitytoolkitRelyingpartyCreateAuthUri', function() {
      it('should call identitytoolkitRelyingpartyCreateAuthUri successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyCreateAuthUri
        //instance.identitytoolkitRelyingpartyCreateAuthUri(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyDeleteAccount', function() {
      it('should call identitytoolkitRelyingpartyDeleteAccount successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyDeleteAccount
        //instance.identitytoolkitRelyingpartyDeleteAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyDownloadAccount', function() {
      it('should call identitytoolkitRelyingpartyDownloadAccount successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyDownloadAccount
        //instance.identitytoolkitRelyingpartyDownloadAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyEmailLinkSignin', function() {
      it('should call identitytoolkitRelyingpartyEmailLinkSignin successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyEmailLinkSignin
        //instance.identitytoolkitRelyingpartyEmailLinkSignin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyGetAccountInfo', function() {
      it('should call identitytoolkitRelyingpartyGetAccountInfo successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyGetAccountInfo
        //instance.identitytoolkitRelyingpartyGetAccountInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyGetOobConfirmationCode', function() {
      it('should call identitytoolkitRelyingpartyGetOobConfirmationCode successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyGetOobConfirmationCode
        //instance.identitytoolkitRelyingpartyGetOobConfirmationCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyGetProjectConfig', function() {
      it('should call identitytoolkitRelyingpartyGetProjectConfig successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyGetProjectConfig
        //instance.identitytoolkitRelyingpartyGetProjectConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyGetPublicKeys', function() {
      it('should call identitytoolkitRelyingpartyGetPublicKeys successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyGetPublicKeys
        //instance.identitytoolkitRelyingpartyGetPublicKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyGetRecaptchaParam', function() {
      it('should call identitytoolkitRelyingpartyGetRecaptchaParam successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyGetRecaptchaParam
        //instance.identitytoolkitRelyingpartyGetRecaptchaParam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyResetPassword', function() {
      it('should call identitytoolkitRelyingpartyResetPassword successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyResetPassword
        //instance.identitytoolkitRelyingpartyResetPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartySendVerificationCode', function() {
      it('should call identitytoolkitRelyingpartySendVerificationCode successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartySendVerificationCode
        //instance.identitytoolkitRelyingpartySendVerificationCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartySetAccountInfo', function() {
      it('should call identitytoolkitRelyingpartySetAccountInfo successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartySetAccountInfo
        //instance.identitytoolkitRelyingpartySetAccountInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartySetProjectConfig', function() {
      it('should call identitytoolkitRelyingpartySetProjectConfig successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartySetProjectConfig
        //instance.identitytoolkitRelyingpartySetProjectConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartySignOutUser', function() {
      it('should call identitytoolkitRelyingpartySignOutUser successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartySignOutUser
        //instance.identitytoolkitRelyingpartySignOutUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartySignupNewUser', function() {
      it('should call identitytoolkitRelyingpartySignupNewUser successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartySignupNewUser
        //instance.identitytoolkitRelyingpartySignupNewUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyUploadAccount', function() {
      it('should call identitytoolkitRelyingpartyUploadAccount successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyUploadAccount
        //instance.identitytoolkitRelyingpartyUploadAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyVerifyAssertion', function() {
      it('should call identitytoolkitRelyingpartyVerifyAssertion successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyVerifyAssertion
        //instance.identitytoolkitRelyingpartyVerifyAssertion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyVerifyCustomToken', function() {
      it('should call identitytoolkitRelyingpartyVerifyCustomToken successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyVerifyCustomToken
        //instance.identitytoolkitRelyingpartyVerifyCustomToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyVerifyPassword', function() {
      it('should call identitytoolkitRelyingpartyVerifyPassword successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyVerifyPassword
        //instance.identitytoolkitRelyingpartyVerifyPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitRelyingpartyVerifyPhoneNumber', function() {
      it('should call identitytoolkitRelyingpartyVerifyPhoneNumber successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitRelyingpartyVerifyPhoneNumber
        //instance.identitytoolkitRelyingpartyVerifyPhoneNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
