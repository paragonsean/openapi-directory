/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentitytoolkitRelyingpartySetAccountInfoRequest model module.
 * @module model/IdentitytoolkitRelyingpartySetAccountInfoRequest
 * @version v3
 */
class IdentitytoolkitRelyingpartySetAccountInfoRequest {
    /**
     * Constructs a new <code>IdentitytoolkitRelyingpartySetAccountInfoRequest</code>.
     * Request to set the account information.
     * @alias module:model/IdentitytoolkitRelyingpartySetAccountInfoRequest
     */
    constructor() { 
        
        IdentitytoolkitRelyingpartySetAccountInfoRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentitytoolkitRelyingpartySetAccountInfoRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentitytoolkitRelyingpartySetAccountInfoRequest} obj Optional instance to populate.
     * @return {module:model/IdentitytoolkitRelyingpartySetAccountInfoRequest} The populated <code>IdentitytoolkitRelyingpartySetAccountInfoRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentitytoolkitRelyingpartySetAccountInfoRequest();

            if (data.hasOwnProperty('captchaChallenge')) {
                obj['captchaChallenge'] = ApiClient.convertToType(data['captchaChallenge'], 'String');
            }
            if (data.hasOwnProperty('captchaResponse')) {
                obj['captchaResponse'] = ApiClient.convertToType(data['captchaResponse'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('customAttributes')) {
                obj['customAttributes'] = ApiClient.convertToType(data['customAttributes'], 'String');
            }
            if (data.hasOwnProperty('delegatedProjectNumber')) {
                obj['delegatedProjectNumber'] = ApiClient.convertToType(data['delegatedProjectNumber'], 'String');
            }
            if (data.hasOwnProperty('deleteAttribute')) {
                obj['deleteAttribute'] = ApiClient.convertToType(data['deleteAttribute'], ['String']);
            }
            if (data.hasOwnProperty('deleteProvider')) {
                obj['deleteProvider'] = ApiClient.convertToType(data['deleteProvider'], ['String']);
            }
            if (data.hasOwnProperty('disableUser')) {
                obj['disableUser'] = ApiClient.convertToType(data['disableUser'], 'Boolean');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('emailVerified')) {
                obj['emailVerified'] = ApiClient.convertToType(data['emailVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('idToken')) {
                obj['idToken'] = ApiClient.convertToType(data['idToken'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('lastLoginAt')) {
                obj['lastLoginAt'] = ApiClient.convertToType(data['lastLoginAt'], 'String');
            }
            if (data.hasOwnProperty('localId')) {
                obj['localId'] = ApiClient.convertToType(data['localId'], 'String');
            }
            if (data.hasOwnProperty('oobCode')) {
                obj['oobCode'] = ApiClient.convertToType(data['oobCode'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('photoUrl')) {
                obj['photoUrl'] = ApiClient.convertToType(data['photoUrl'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], ['String']);
            }
            if (data.hasOwnProperty('returnSecureToken')) {
                obj['returnSecureToken'] = ApiClient.convertToType(data['returnSecureToken'], 'Boolean');
            }
            if (data.hasOwnProperty('upgradeToFederatedLogin')) {
                obj['upgradeToFederatedLogin'] = ApiClient.convertToType(data['upgradeToFederatedLogin'], 'Boolean');
            }
            if (data.hasOwnProperty('validSince')) {
                obj['validSince'] = ApiClient.convertToType(data['validSince'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentitytoolkitRelyingpartySetAccountInfoRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentitytoolkitRelyingpartySetAccountInfoRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['captchaChallenge'] && !(typeof data['captchaChallenge'] === 'string' || data['captchaChallenge'] instanceof String)) {
            throw new Error("Expected the field `captchaChallenge` to be a primitive type in the JSON string but got " + data['captchaChallenge']);
        }
        // ensure the json data is a string
        if (data['captchaResponse'] && !(typeof data['captchaResponse'] === 'string' || data['captchaResponse'] instanceof String)) {
            throw new Error("Expected the field `captchaResponse` to be a primitive type in the JSON string but got " + data['captchaResponse']);
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['customAttributes'] && !(typeof data['customAttributes'] === 'string' || data['customAttributes'] instanceof String)) {
            throw new Error("Expected the field `customAttributes` to be a primitive type in the JSON string but got " + data['customAttributes']);
        }
        // ensure the json data is a string
        if (data['delegatedProjectNumber'] && !(typeof data['delegatedProjectNumber'] === 'string' || data['delegatedProjectNumber'] instanceof String)) {
            throw new Error("Expected the field `delegatedProjectNumber` to be a primitive type in the JSON string but got " + data['delegatedProjectNumber']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['deleteAttribute'])) {
            throw new Error("Expected the field `deleteAttribute` to be an array in the JSON data but got " + data['deleteAttribute']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['deleteProvider'])) {
            throw new Error("Expected the field `deleteProvider` to be an array in the JSON data but got " + data['deleteProvider']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['idToken'] && !(typeof data['idToken'] === 'string' || data['idToken'] instanceof String)) {
            throw new Error("Expected the field `idToken` to be a primitive type in the JSON string but got " + data['idToken']);
        }
        // ensure the json data is a string
        if (data['instanceId'] && !(typeof data['instanceId'] === 'string' || data['instanceId'] instanceof String)) {
            throw new Error("Expected the field `instanceId` to be a primitive type in the JSON string but got " + data['instanceId']);
        }
        // ensure the json data is a string
        if (data['lastLoginAt'] && !(typeof data['lastLoginAt'] === 'string' || data['lastLoginAt'] instanceof String)) {
            throw new Error("Expected the field `lastLoginAt` to be a primitive type in the JSON string but got " + data['lastLoginAt']);
        }
        // ensure the json data is a string
        if (data['localId'] && !(typeof data['localId'] === 'string' || data['localId'] instanceof String)) {
            throw new Error("Expected the field `localId` to be a primitive type in the JSON string but got " + data['localId']);
        }
        // ensure the json data is a string
        if (data['oobCode'] && !(typeof data['oobCode'] === 'string' || data['oobCode'] instanceof String)) {
            throw new Error("Expected the field `oobCode` to be a primitive type in the JSON string but got " + data['oobCode']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['photoUrl'] && !(typeof data['photoUrl'] === 'string' || data['photoUrl'] instanceof String)) {
            throw new Error("Expected the field `photoUrl` to be a primitive type in the JSON string but got " + data['photoUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['provider'])) {
            throw new Error("Expected the field `provider` to be an array in the JSON data but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['validSince'] && !(typeof data['validSince'] === 'string' || data['validSince'] instanceof String)) {
            throw new Error("Expected the field `validSince` to be a primitive type in the JSON string but got " + data['validSince']);
        }

        return true;
    }


}



/**
 * The captcha challenge.
 * @member {String} captchaChallenge
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['captchaChallenge'] = undefined;

/**
 * Response to the captcha.
 * @member {String} captchaResponse
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['captchaResponse'] = undefined;

/**
 * The timestamp when the account is created.
 * @member {String} createdAt
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['createdAt'] = undefined;

/**
 * The custom attributes to be set in the user's id token.
 * @member {String} customAttributes
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['customAttributes'] = undefined;

/**
 * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
 * @member {String} delegatedProjectNumber
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['delegatedProjectNumber'] = undefined;

/**
 * The attributes users request to delete.
 * @member {Array.<String>} deleteAttribute
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['deleteAttribute'] = undefined;

/**
 * The IDPs the user request to delete.
 * @member {Array.<String>} deleteProvider
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['deleteProvider'] = undefined;

/**
 * Whether to disable the user.
 * @member {Boolean} disableUser
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['disableUser'] = undefined;

/**
 * The name of the user.
 * @member {String} displayName
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['displayName'] = undefined;

/**
 * The email of the user.
 * @member {String} email
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['email'] = undefined;

/**
 * Mark the email as verified or not.
 * @member {Boolean} emailVerified
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['emailVerified'] = undefined;

/**
 * The GITKit token of the authenticated user.
 * @member {String} idToken
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['idToken'] = undefined;

/**
 * Instance id token of the app.
 * @member {String} instanceId
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['instanceId'] = undefined;

/**
 * Last login timestamp.
 * @member {String} lastLoginAt
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['lastLoginAt'] = undefined;

/**
 * The local ID of the user.
 * @member {String} localId
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['localId'] = undefined;

/**
 * The out-of-band code of the change email request.
 * @member {String} oobCode
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['oobCode'] = undefined;

/**
 * The new password of the user.
 * @member {String} password
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['password'] = undefined;

/**
 * Privileged caller can update user with specified phone number.
 * @member {String} phoneNumber
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['phoneNumber'] = undefined;

/**
 * The photo url of the user.
 * @member {String} photoUrl
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['photoUrl'] = undefined;

/**
 * The associated IDPs of the user.
 * @member {Array.<String>} provider
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['provider'] = undefined;

/**
 * Whether return sts id token and refresh token instead of gitkit token.
 * @member {Boolean} returnSecureToken
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['returnSecureToken'] = undefined;

/**
 * Mark the user to upgrade to federated login.
 * @member {Boolean} upgradeToFederatedLogin
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['upgradeToFederatedLogin'] = undefined;

/**
 * Timestamp in seconds for valid login token.
 * @member {String} validSince
 */
IdentitytoolkitRelyingpartySetAccountInfoRequest.prototype['validSince'] = undefined;






export default IdentitytoolkitRelyingpartySetAccountInfoRequest;

