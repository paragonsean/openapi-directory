/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SetAccountInfoResponseProviderUserInfoInner model module.
 * @module model/SetAccountInfoResponseProviderUserInfoInner
 * @version v3
 */
class SetAccountInfoResponseProviderUserInfoInner {
    /**
     * Constructs a new <code>SetAccountInfoResponseProviderUserInfoInner</code>.
     * @alias module:model/SetAccountInfoResponseProviderUserInfoInner
     */
    constructor() { 
        
        SetAccountInfoResponseProviderUserInfoInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SetAccountInfoResponseProviderUserInfoInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetAccountInfoResponseProviderUserInfoInner} obj Optional instance to populate.
     * @return {module:model/SetAccountInfoResponseProviderUserInfoInner} The populated <code>SetAccountInfoResponseProviderUserInfoInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetAccountInfoResponseProviderUserInfoInner();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('federatedId')) {
                obj['federatedId'] = ApiClient.convertToType(data['federatedId'], 'String');
            }
            if (data.hasOwnProperty('photoUrl')) {
                obj['photoUrl'] = ApiClient.convertToType(data['photoUrl'], 'String');
            }
            if (data.hasOwnProperty('providerId')) {
                obj['providerId'] = ApiClient.convertToType(data['providerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SetAccountInfoResponseProviderUserInfoInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SetAccountInfoResponseProviderUserInfoInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['federatedId'] && !(typeof data['federatedId'] === 'string' || data['federatedId'] instanceof String)) {
            throw new Error("Expected the field `federatedId` to be a primitive type in the JSON string but got " + data['federatedId']);
        }
        // ensure the json data is a string
        if (data['photoUrl'] && !(typeof data['photoUrl'] === 'string' || data['photoUrl'] instanceof String)) {
            throw new Error("Expected the field `photoUrl` to be a primitive type in the JSON string but got " + data['photoUrl']);
        }
        // ensure the json data is a string
        if (data['providerId'] && !(typeof data['providerId'] === 'string' || data['providerId'] instanceof String)) {
            throw new Error("Expected the field `providerId` to be a primitive type in the JSON string but got " + data['providerId']);
        }

        return true;
    }


}



/**
 * The user's display name at the IDP.
 * @member {String} displayName
 */
SetAccountInfoResponseProviderUserInfoInner.prototype['displayName'] = undefined;

/**
 * User's identifier at IDP.
 * @member {String} federatedId
 */
SetAccountInfoResponseProviderUserInfoInner.prototype['federatedId'] = undefined;

/**
 * The user's photo url at the IDP.
 * @member {String} photoUrl
 */
SetAccountInfoResponseProviderUserInfoInner.prototype['photoUrl'] = undefined;

/**
 * The IdP ID. For whitelisted IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
 * @member {String} providerId
 */
SetAccountInfoResponseProviderUserInfoInner.prototype['providerId'] = undefined;






export default SetAccountInfoResponseProviderUserInfoInner;

