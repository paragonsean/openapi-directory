/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmailTemplate from './EmailTemplate';
import IdpConfig from './IdpConfig';

/**
 * The IdentitytoolkitRelyingpartyGetProjectConfigResponse model module.
 * @module model/IdentitytoolkitRelyingpartyGetProjectConfigResponse
 * @version v3
 */
class IdentitytoolkitRelyingpartyGetProjectConfigResponse {
    /**
     * Constructs a new <code>IdentitytoolkitRelyingpartyGetProjectConfigResponse</code>.
     * Response of getting the project configuration.
     * @alias module:model/IdentitytoolkitRelyingpartyGetProjectConfigResponse
     */
    constructor() { 
        
        IdentitytoolkitRelyingpartyGetProjectConfigResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentitytoolkitRelyingpartyGetProjectConfigResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentitytoolkitRelyingpartyGetProjectConfigResponse} obj Optional instance to populate.
     * @return {module:model/IdentitytoolkitRelyingpartyGetProjectConfigResponse} The populated <code>IdentitytoolkitRelyingpartyGetProjectConfigResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentitytoolkitRelyingpartyGetProjectConfigResponse();

            if (data.hasOwnProperty('allowPasswordUser')) {
                obj['allowPasswordUser'] = ApiClient.convertToType(data['allowPasswordUser'], 'Boolean');
            }
            if (data.hasOwnProperty('apiKey')) {
                obj['apiKey'] = ApiClient.convertToType(data['apiKey'], 'String');
            }
            if (data.hasOwnProperty('authorizedDomains')) {
                obj['authorizedDomains'] = ApiClient.convertToType(data['authorizedDomains'], ['String']);
            }
            if (data.hasOwnProperty('changeEmailTemplate')) {
                obj['changeEmailTemplate'] = EmailTemplate.constructFromObject(data['changeEmailTemplate']);
            }
            if (data.hasOwnProperty('dynamicLinksDomain')) {
                obj['dynamicLinksDomain'] = ApiClient.convertToType(data['dynamicLinksDomain'], 'String');
            }
            if (data.hasOwnProperty('enableAnonymousUser')) {
                obj['enableAnonymousUser'] = ApiClient.convertToType(data['enableAnonymousUser'], 'Boolean');
            }
            if (data.hasOwnProperty('idpConfig')) {
                obj['idpConfig'] = ApiClient.convertToType(data['idpConfig'], [IdpConfig]);
            }
            if (data.hasOwnProperty('legacyResetPasswordTemplate')) {
                obj['legacyResetPasswordTemplate'] = EmailTemplate.constructFromObject(data['legacyResetPasswordTemplate']);
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('resetPasswordTemplate')) {
                obj['resetPasswordTemplate'] = EmailTemplate.constructFromObject(data['resetPasswordTemplate']);
            }
            if (data.hasOwnProperty('useEmailSending')) {
                obj['useEmailSending'] = ApiClient.convertToType(data['useEmailSending'], 'Boolean');
            }
            if (data.hasOwnProperty('verifyEmailTemplate')) {
                obj['verifyEmailTemplate'] = EmailTemplate.constructFromObject(data['verifyEmailTemplate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentitytoolkitRelyingpartyGetProjectConfigResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentitytoolkitRelyingpartyGetProjectConfigResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiKey'] && !(typeof data['apiKey'] === 'string' || data['apiKey'] instanceof String)) {
            throw new Error("Expected the field `apiKey` to be a primitive type in the JSON string but got " + data['apiKey']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['authorizedDomains'])) {
            throw new Error("Expected the field `authorizedDomains` to be an array in the JSON data but got " + data['authorizedDomains']);
        }
        // validate the optional field `changeEmailTemplate`
        if (data['changeEmailTemplate']) { // data not null
          EmailTemplate.validateJSON(data['changeEmailTemplate']);
        }
        // ensure the json data is a string
        if (data['dynamicLinksDomain'] && !(typeof data['dynamicLinksDomain'] === 'string' || data['dynamicLinksDomain'] instanceof String)) {
            throw new Error("Expected the field `dynamicLinksDomain` to be a primitive type in the JSON string but got " + data['dynamicLinksDomain']);
        }
        if (data['idpConfig']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['idpConfig'])) {
                throw new Error("Expected the field `idpConfig` to be an array in the JSON data but got " + data['idpConfig']);
            }
            // validate the optional field `idpConfig` (array)
            for (const item of data['idpConfig']) {
                IdpConfig.validateJSON(item);
            };
        }
        // validate the optional field `legacyResetPasswordTemplate`
        if (data['legacyResetPasswordTemplate']) { // data not null
          EmailTemplate.validateJSON(data['legacyResetPasswordTemplate']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }
        // validate the optional field `resetPasswordTemplate`
        if (data['resetPasswordTemplate']) { // data not null
          EmailTemplate.validateJSON(data['resetPasswordTemplate']);
        }
        // validate the optional field `verifyEmailTemplate`
        if (data['verifyEmailTemplate']) { // data not null
          EmailTemplate.validateJSON(data['verifyEmailTemplate']);
        }

        return true;
    }


}



/**
 * Whether to allow password user sign in or sign up.
 * @member {Boolean} allowPasswordUser
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['allowPasswordUser'] = undefined;

/**
 * Browser API key, needed when making http request to Apiary.
 * @member {String} apiKey
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['apiKey'] = undefined;

/**
 * Authorized domains.
 * @member {Array.<String>} authorizedDomains
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['authorizedDomains'] = undefined;

/**
 * @member {module:model/EmailTemplate} changeEmailTemplate
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['changeEmailTemplate'] = undefined;

/**
 * @member {String} dynamicLinksDomain
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['dynamicLinksDomain'] = undefined;

/**
 * Whether anonymous user is enabled.
 * @member {Boolean} enableAnonymousUser
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['enableAnonymousUser'] = undefined;

/**
 * OAuth2 provider configuration.
 * @member {Array.<module:model/IdpConfig>} idpConfig
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['idpConfig'] = undefined;

/**
 * @member {module:model/EmailTemplate} legacyResetPasswordTemplate
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['legacyResetPasswordTemplate'] = undefined;

/**
 * Project ID of the relying party.
 * @member {String} projectId
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['projectId'] = undefined;

/**
 * @member {module:model/EmailTemplate} resetPasswordTemplate
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['resetPasswordTemplate'] = undefined;

/**
 * Whether to use email sending provided by Firebear.
 * @member {Boolean} useEmailSending
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['useEmailSending'] = undefined;

/**
 * @member {module:model/EmailTemplate} verifyEmailTemplate
 */
IdentitytoolkitRelyingpartyGetProjectConfigResponse.prototype['verifyEmailTemplate'] = undefined;






export default IdentitytoolkitRelyingpartyGetProjectConfigResponse;

