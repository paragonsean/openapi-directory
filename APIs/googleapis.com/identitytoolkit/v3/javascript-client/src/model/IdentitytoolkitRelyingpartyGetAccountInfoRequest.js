/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentitytoolkitRelyingpartyGetAccountInfoRequest model module.
 * @module model/IdentitytoolkitRelyingpartyGetAccountInfoRequest
 * @version v3
 */
class IdentitytoolkitRelyingpartyGetAccountInfoRequest {
    /**
     * Constructs a new <code>IdentitytoolkitRelyingpartyGetAccountInfoRequest</code>.
     * Request to get the account information.
     * @alias module:model/IdentitytoolkitRelyingpartyGetAccountInfoRequest
     */
    constructor() { 
        
        IdentitytoolkitRelyingpartyGetAccountInfoRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdentitytoolkitRelyingpartyGetAccountInfoRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentitytoolkitRelyingpartyGetAccountInfoRequest} obj Optional instance to populate.
     * @return {module:model/IdentitytoolkitRelyingpartyGetAccountInfoRequest} The populated <code>IdentitytoolkitRelyingpartyGetAccountInfoRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentitytoolkitRelyingpartyGetAccountInfoRequest();

            if (data.hasOwnProperty('delegatedProjectNumber')) {
                obj['delegatedProjectNumber'] = ApiClient.convertToType(data['delegatedProjectNumber'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], ['String']);
            }
            if (data.hasOwnProperty('idToken')) {
                obj['idToken'] = ApiClient.convertToType(data['idToken'], 'String');
            }
            if (data.hasOwnProperty('localId')) {
                obj['localId'] = ApiClient.convertToType(data['localId'], ['String']);
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentitytoolkitRelyingpartyGetAccountInfoRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentitytoolkitRelyingpartyGetAccountInfoRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['delegatedProjectNumber'] && !(typeof data['delegatedProjectNumber'] === 'string' || data['delegatedProjectNumber'] instanceof String)) {
            throw new Error("Expected the field `delegatedProjectNumber` to be a primitive type in the JSON string but got " + data['delegatedProjectNumber']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['email'])) {
            throw new Error("Expected the field `email` to be an array in the JSON data but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['idToken'] && !(typeof data['idToken'] === 'string' || data['idToken'] instanceof String)) {
            throw new Error("Expected the field `idToken` to be a primitive type in the JSON string but got " + data['idToken']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['localId'])) {
            throw new Error("Expected the field `localId` to be an array in the JSON data but got " + data['localId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['phoneNumber'])) {
            throw new Error("Expected the field `phoneNumber` to be an array in the JSON data but got " + data['phoneNumber']);
        }

        return true;
    }


}



/**
 * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
 * @member {String} delegatedProjectNumber
 */
IdentitytoolkitRelyingpartyGetAccountInfoRequest.prototype['delegatedProjectNumber'] = undefined;

/**
 * The list of emails of the users to inquiry.
 * @member {Array.<String>} email
 */
IdentitytoolkitRelyingpartyGetAccountInfoRequest.prototype['email'] = undefined;

/**
 * The GITKit token of the authenticated user.
 * @member {String} idToken
 */
IdentitytoolkitRelyingpartyGetAccountInfoRequest.prototype['idToken'] = undefined;

/**
 * The list of local ID's of the users to inquiry.
 * @member {Array.<String>} localId
 */
IdentitytoolkitRelyingpartyGetAccountInfoRequest.prototype['localId'] = undefined;

/**
 * Privileged caller can query users by specified phone number.
 * @member {Array.<String>} phoneNumber
 */
IdentitytoolkitRelyingpartyGetAccountInfoRequest.prototype['phoneNumber'] = undefined;






export default IdentitytoolkitRelyingpartyGetAccountInfoRequest;

