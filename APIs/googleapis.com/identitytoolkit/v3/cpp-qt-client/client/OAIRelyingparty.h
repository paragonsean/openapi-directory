/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelyingparty.h
 *
 * Request of getting a code for user confirmation (reset password, change email etc.)
 */

#ifndef OAIRelyingparty_H
#define OAIRelyingparty_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRelyingparty : public OAIObject {
public:
    OAIRelyingparty();
    OAIRelyingparty(QString json);
    ~OAIRelyingparty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAndroidInstallApp() const;
    void setAndroidInstallApp(const bool &android_install_app);
    bool is_android_install_app_Set() const;
    bool is_android_install_app_Valid() const;

    QString getAndroidMinimumVersion() const;
    void setAndroidMinimumVersion(const QString &android_minimum_version);
    bool is_android_minimum_version_Set() const;
    bool is_android_minimum_version_Valid() const;

    QString getAndroidPackageName() const;
    void setAndroidPackageName(const QString &android_package_name);
    bool is_android_package_name_Set() const;
    bool is_android_package_name_Valid() const;

    bool isCanHandleCodeInApp() const;
    void setCanHandleCodeInApp(const bool &can_handle_code_in_app);
    bool is_can_handle_code_in_app_Set() const;
    bool is_can_handle_code_in_app_Valid() const;

    QString getCaptchaResp() const;
    void setCaptchaResp(const QString &captcha_resp);
    bool is_captcha_resp_Set() const;
    bool is_captcha_resp_Valid() const;

    QString getChallenge() const;
    void setChallenge(const QString &challenge);
    bool is_challenge_Set() const;
    bool is_challenge_Valid() const;

    QString getContinueUrl() const;
    void setContinueUrl(const QString &continue_url);
    bool is_continue_url_Set() const;
    bool is_continue_url_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getIOsAppStoreId() const;
    void setIOsAppStoreId(const QString &i_os_app_store_id);
    bool is_i_os_app_store_id_Set() const;
    bool is_i_os_app_store_id_Valid() const;

    QString getIOsBundleId() const;
    void setIOsBundleId(const QString &i_os_bundle_id);
    bool is_i_os_bundle_id_Set() const;
    bool is_i_os_bundle_id_Valid() const;

    QString getIdToken() const;
    void setIdToken(const QString &id_token);
    bool is_id_token_Set() const;
    bool is_id_token_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getNewEmail() const;
    void setNewEmail(const QString &new_email);
    bool is_new_email_Set() const;
    bool is_new_email_Valid() const;

    QString getRequestType() const;
    void setRequestType(const QString &request_type);
    bool is_request_type_Set() const;
    bool is_request_type_Valid() const;

    QString getUserIp() const;
    void setUserIp(const QString &user_ip);
    bool is_user_ip_Set() const;
    bool is_user_ip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_android_install_app;
    bool m_android_install_app_isSet;
    bool m_android_install_app_isValid;

    QString m_android_minimum_version;
    bool m_android_minimum_version_isSet;
    bool m_android_minimum_version_isValid;

    QString m_android_package_name;
    bool m_android_package_name_isSet;
    bool m_android_package_name_isValid;

    bool m_can_handle_code_in_app;
    bool m_can_handle_code_in_app_isSet;
    bool m_can_handle_code_in_app_isValid;

    QString m_captcha_resp;
    bool m_captcha_resp_isSet;
    bool m_captcha_resp_isValid;

    QString m_challenge;
    bool m_challenge_isSet;
    bool m_challenge_isValid;

    QString m_continue_url;
    bool m_continue_url_isSet;
    bool m_continue_url_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_i_os_app_store_id;
    bool m_i_os_app_store_id_isSet;
    bool m_i_os_app_store_id_isValid;

    QString m_i_os_bundle_id;
    bool m_i_os_bundle_id_isSet;
    bool m_i_os_bundle_id_isValid;

    QString m_id_token;
    bool m_id_token_isSet;
    bool m_id_token_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_new_email;
    bool m_new_email_isSet;
    bool m_new_email_isValid;

    QString m_request_type;
    bool m_request_type_isSet;
    bool m_request_type_isValid;

    QString m_user_ip;
    bool m_user_ip_isSet;
    bool m_user_ip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelyingparty)

#endif // OAIRelyingparty_H
