/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest.h
 *
 * Request to verify the IDP assertion.
 */

#ifndef OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest_H
#define OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest : public OAIObject {
public:
    OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest();
    OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest(QString json);
    ~OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoCreate() const;
    void setAutoCreate(const bool &auto_create);
    bool is_auto_create_Set() const;
    bool is_auto_create_Valid() const;

    QString getDelegatedProjectNumber() const;
    void setDelegatedProjectNumber(const QString &delegated_project_number);
    bool is_delegated_project_number_Set() const;
    bool is_delegated_project_number_Valid() const;

    QString getIdToken() const;
    void setIdToken(const QString &id_token);
    bool is_id_token_Set() const;
    bool is_id_token_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getPendingIdToken() const;
    void setPendingIdToken(const QString &pending_id_token);
    bool is_pending_id_token_Set() const;
    bool is_pending_id_token_Valid() const;

    QString getPostBody() const;
    void setPostBody(const QString &post_body);
    bool is_post_body_Set() const;
    bool is_post_body_Valid() const;

    QString getRequestUri() const;
    void setRequestUri(const QString &request_uri);
    bool is_request_uri_Set() const;
    bool is_request_uri_Valid() const;

    bool isReturnIdpCredential() const;
    void setReturnIdpCredential(const bool &return_idp_credential);
    bool is_return_idp_credential_Set() const;
    bool is_return_idp_credential_Valid() const;

    bool isReturnRefreshToken() const;
    void setReturnRefreshToken(const bool &return_refresh_token);
    bool is_return_refresh_token_Set() const;
    bool is_return_refresh_token_Valid() const;

    bool isReturnSecureToken() const;
    void setReturnSecureToken(const bool &return_secure_token);
    bool is_return_secure_token_Set() const;
    bool is_return_secure_token_Valid() const;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    QString getTenantProjectNumber() const;
    void setTenantProjectNumber(const QString &tenant_project_number);
    bool is_tenant_project_number_Set() const;
    bool is_tenant_project_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_create;
    bool m_auto_create_isSet;
    bool m_auto_create_isValid;

    QString m_delegated_project_number;
    bool m_delegated_project_number_isSet;
    bool m_delegated_project_number_isValid;

    QString m_id_token;
    bool m_id_token_isSet;
    bool m_id_token_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_pending_id_token;
    bool m_pending_id_token_isSet;
    bool m_pending_id_token_isValid;

    QString m_post_body;
    bool m_post_body_isSet;
    bool m_post_body_isValid;

    QString m_request_uri;
    bool m_request_uri_isSet;
    bool m_request_uri_isValid;

    bool m_return_idp_credential;
    bool m_return_idp_credential_isSet;
    bool m_return_idp_credential_isValid;

    bool m_return_refresh_token;
    bool m_return_refresh_token_isSet;
    bool m_return_refresh_token_isValid;

    bool m_return_secure_token;
    bool m_return_secure_token_isSet;
    bool m_return_secure_token_isValid;

    QString m_session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    QString m_tenant_project_number;
    bool m_tenant_project_number_isSet;
    bool m_tenant_project_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest)

#endif // OAIIdentitytoolkitRelyingpartyVerifyAssertionRequest_H
