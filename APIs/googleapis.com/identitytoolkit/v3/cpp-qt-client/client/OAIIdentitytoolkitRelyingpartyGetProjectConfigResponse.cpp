/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse() {
    this->initializeModel();
}

OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::~OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse() {}

void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::initializeModel() {

    m_allow_password_user_isSet = false;
    m_allow_password_user_isValid = false;

    m_api_key_isSet = false;
    m_api_key_isValid = false;

    m_authorized_domains_isSet = false;
    m_authorized_domains_isValid = false;

    m_change_email_template_isSet = false;
    m_change_email_template_isValid = false;

    m_dynamic_links_domain_isSet = false;
    m_dynamic_links_domain_isValid = false;

    m_enable_anonymous_user_isSet = false;
    m_enable_anonymous_user_isValid = false;

    m_idp_config_isSet = false;
    m_idp_config_isValid = false;

    m_legacy_reset_password_template_isSet = false;
    m_legacy_reset_password_template_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_reset_password_template_isSet = false;
    m_reset_password_template_isValid = false;

    m_use_email_sending_isSet = false;
    m_use_email_sending_isValid = false;

    m_verify_email_template_isSet = false;
    m_verify_email_template_isValid = false;
}

void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::fromJsonObject(QJsonObject json) {

    m_allow_password_user_isValid = ::OpenAPI::fromJsonValue(m_allow_password_user, json[QString("allowPasswordUser")]);
    m_allow_password_user_isSet = !json[QString("allowPasswordUser")].isNull() && m_allow_password_user_isValid;

    m_api_key_isValid = ::OpenAPI::fromJsonValue(m_api_key, json[QString("apiKey")]);
    m_api_key_isSet = !json[QString("apiKey")].isNull() && m_api_key_isValid;

    m_authorized_domains_isValid = ::OpenAPI::fromJsonValue(m_authorized_domains, json[QString("authorizedDomains")]);
    m_authorized_domains_isSet = !json[QString("authorizedDomains")].isNull() && m_authorized_domains_isValid;

    m_change_email_template_isValid = ::OpenAPI::fromJsonValue(m_change_email_template, json[QString("changeEmailTemplate")]);
    m_change_email_template_isSet = !json[QString("changeEmailTemplate")].isNull() && m_change_email_template_isValid;

    m_dynamic_links_domain_isValid = ::OpenAPI::fromJsonValue(m_dynamic_links_domain, json[QString("dynamicLinksDomain")]);
    m_dynamic_links_domain_isSet = !json[QString("dynamicLinksDomain")].isNull() && m_dynamic_links_domain_isValid;

    m_enable_anonymous_user_isValid = ::OpenAPI::fromJsonValue(m_enable_anonymous_user, json[QString("enableAnonymousUser")]);
    m_enable_anonymous_user_isSet = !json[QString("enableAnonymousUser")].isNull() && m_enable_anonymous_user_isValid;

    m_idp_config_isValid = ::OpenAPI::fromJsonValue(m_idp_config, json[QString("idpConfig")]);
    m_idp_config_isSet = !json[QString("idpConfig")].isNull() && m_idp_config_isValid;

    m_legacy_reset_password_template_isValid = ::OpenAPI::fromJsonValue(m_legacy_reset_password_template, json[QString("legacyResetPasswordTemplate")]);
    m_legacy_reset_password_template_isSet = !json[QString("legacyResetPasswordTemplate")].isNull() && m_legacy_reset_password_template_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_reset_password_template_isValid = ::OpenAPI::fromJsonValue(m_reset_password_template, json[QString("resetPasswordTemplate")]);
    m_reset_password_template_isSet = !json[QString("resetPasswordTemplate")].isNull() && m_reset_password_template_isValid;

    m_use_email_sending_isValid = ::OpenAPI::fromJsonValue(m_use_email_sending, json[QString("useEmailSending")]);
    m_use_email_sending_isSet = !json[QString("useEmailSending")].isNull() && m_use_email_sending_isValid;

    m_verify_email_template_isValid = ::OpenAPI::fromJsonValue(m_verify_email_template, json[QString("verifyEmailTemplate")]);
    m_verify_email_template_isSet = !json[QString("verifyEmailTemplate")].isNull() && m_verify_email_template_isValid;
}

QString OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_password_user_isSet) {
        obj.insert(QString("allowPasswordUser"), ::OpenAPI::toJsonValue(m_allow_password_user));
    }
    if (m_api_key_isSet) {
        obj.insert(QString("apiKey"), ::OpenAPI::toJsonValue(m_api_key));
    }
    if (m_authorized_domains.size() > 0) {
        obj.insert(QString("authorizedDomains"), ::OpenAPI::toJsonValue(m_authorized_domains));
    }
    if (m_change_email_template.isSet()) {
        obj.insert(QString("changeEmailTemplate"), ::OpenAPI::toJsonValue(m_change_email_template));
    }
    if (m_dynamic_links_domain_isSet) {
        obj.insert(QString("dynamicLinksDomain"), ::OpenAPI::toJsonValue(m_dynamic_links_domain));
    }
    if (m_enable_anonymous_user_isSet) {
        obj.insert(QString("enableAnonymousUser"), ::OpenAPI::toJsonValue(m_enable_anonymous_user));
    }
    if (m_idp_config.size() > 0) {
        obj.insert(QString("idpConfig"), ::OpenAPI::toJsonValue(m_idp_config));
    }
    if (m_legacy_reset_password_template.isSet()) {
        obj.insert(QString("legacyResetPasswordTemplate"), ::OpenAPI::toJsonValue(m_legacy_reset_password_template));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_reset_password_template.isSet()) {
        obj.insert(QString("resetPasswordTemplate"), ::OpenAPI::toJsonValue(m_reset_password_template));
    }
    if (m_use_email_sending_isSet) {
        obj.insert(QString("useEmailSending"), ::OpenAPI::toJsonValue(m_use_email_sending));
    }
    if (m_verify_email_template.isSet()) {
        obj.insert(QString("verifyEmailTemplate"), ::OpenAPI::toJsonValue(m_verify_email_template));
    }
    return obj;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::isAllowPasswordUser() const {
    return m_allow_password_user;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setAllowPasswordUser(const bool &allow_password_user) {
    m_allow_password_user = allow_password_user;
    m_allow_password_user_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_allow_password_user_Set() const{
    return m_allow_password_user_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_allow_password_user_Valid() const{
    return m_allow_password_user_isValid;
}

QString OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getApiKey() const {
    return m_api_key;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setApiKey(const QString &api_key) {
    m_api_key = api_key;
    m_api_key_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_api_key_Set() const{
    return m_api_key_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_api_key_Valid() const{
    return m_api_key_isValid;
}

QList<QString> OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getAuthorizedDomains() const {
    return m_authorized_domains;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setAuthorizedDomains(const QList<QString> &authorized_domains) {
    m_authorized_domains = authorized_domains;
    m_authorized_domains_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_authorized_domains_Set() const{
    return m_authorized_domains_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_authorized_domains_Valid() const{
    return m_authorized_domains_isValid;
}

OAIEmailTemplate OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getChangeEmailTemplate() const {
    return m_change_email_template;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setChangeEmailTemplate(const OAIEmailTemplate &change_email_template) {
    m_change_email_template = change_email_template;
    m_change_email_template_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_change_email_template_Set() const{
    return m_change_email_template_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_change_email_template_Valid() const{
    return m_change_email_template_isValid;
}

QString OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getDynamicLinksDomain() const {
    return m_dynamic_links_domain;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setDynamicLinksDomain(const QString &dynamic_links_domain) {
    m_dynamic_links_domain = dynamic_links_domain;
    m_dynamic_links_domain_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_dynamic_links_domain_Set() const{
    return m_dynamic_links_domain_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_dynamic_links_domain_Valid() const{
    return m_dynamic_links_domain_isValid;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::isEnableAnonymousUser() const {
    return m_enable_anonymous_user;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setEnableAnonymousUser(const bool &enable_anonymous_user) {
    m_enable_anonymous_user = enable_anonymous_user;
    m_enable_anonymous_user_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_enable_anonymous_user_Set() const{
    return m_enable_anonymous_user_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_enable_anonymous_user_Valid() const{
    return m_enable_anonymous_user_isValid;
}

QList<OAIIdpConfig> OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getIdpConfig() const {
    return m_idp_config;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setIdpConfig(const QList<OAIIdpConfig> &idp_config) {
    m_idp_config = idp_config;
    m_idp_config_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_idp_config_Set() const{
    return m_idp_config_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_idp_config_Valid() const{
    return m_idp_config_isValid;
}

OAIEmailTemplate OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getLegacyResetPasswordTemplate() const {
    return m_legacy_reset_password_template;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setLegacyResetPasswordTemplate(const OAIEmailTemplate &legacy_reset_password_template) {
    m_legacy_reset_password_template = legacy_reset_password_template;
    m_legacy_reset_password_template_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_legacy_reset_password_template_Set() const{
    return m_legacy_reset_password_template_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_legacy_reset_password_template_Valid() const{
    return m_legacy_reset_password_template_isValid;
}

QString OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getProjectId() const {
    return m_project_id;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_project_id_Valid() const{
    return m_project_id_isValid;
}

OAIEmailTemplate OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getResetPasswordTemplate() const {
    return m_reset_password_template;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setResetPasswordTemplate(const OAIEmailTemplate &reset_password_template) {
    m_reset_password_template = reset_password_template;
    m_reset_password_template_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_reset_password_template_Set() const{
    return m_reset_password_template_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_reset_password_template_Valid() const{
    return m_reset_password_template_isValid;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::isUseEmailSending() const {
    return m_use_email_sending;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setUseEmailSending(const bool &use_email_sending) {
    m_use_email_sending = use_email_sending;
    m_use_email_sending_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_use_email_sending_Set() const{
    return m_use_email_sending_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_use_email_sending_Valid() const{
    return m_use_email_sending_isValid;
}

OAIEmailTemplate OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::getVerifyEmailTemplate() const {
    return m_verify_email_template;
}
void OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::setVerifyEmailTemplate(const OAIEmailTemplate &verify_email_template) {
    m_verify_email_template = verify_email_template;
    m_verify_email_template_isSet = true;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_verify_email_template_Set() const{
    return m_verify_email_template_isSet;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::is_verify_email_template_Valid() const{
    return m_verify_email_template_isValid;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_password_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorized_domains.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_email_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dynamic_links_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_anonymous_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_idp_config.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_legacy_reset_password_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reset_password_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_email_sending_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verify_email_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIdentitytoolkitRelyingpartyGetProjectConfigResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
