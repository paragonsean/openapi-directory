/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentitytoolkitRelyingpartyResetPasswordRequest.h
 *
 * Request to reset the password.
 */

#ifndef OAIIdentitytoolkitRelyingpartyResetPasswordRequest_H
#define OAIIdentitytoolkitRelyingpartyResetPasswordRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentitytoolkitRelyingpartyResetPasswordRequest : public OAIObject {
public:
    OAIIdentitytoolkitRelyingpartyResetPasswordRequest();
    OAIIdentitytoolkitRelyingpartyResetPasswordRequest(QString json);
    ~OAIIdentitytoolkitRelyingpartyResetPasswordRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getNewPassword() const;
    void setNewPassword(const QString &new_password);
    bool is_new_password_Set() const;
    bool is_new_password_Valid() const;

    QString getOldPassword() const;
    void setOldPassword(const QString &old_password);
    bool is_old_password_Set() const;
    bool is_old_password_Valid() const;

    QString getOobCode() const;
    void setOobCode(const QString &oob_code);
    bool is_oob_code_Set() const;
    bool is_oob_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_new_password;
    bool m_new_password_isSet;
    bool m_new_password_isValid;

    QString m_old_password;
    bool m_old_password_isSet;
    bool m_old_password_isValid;

    QString m_oob_code;
    bool m_oob_code_isSet;
    bool m_oob_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentitytoolkitRelyingpartyResetPasswordRequest)

#endif // OAIIdentitytoolkitRelyingpartyResetPasswordRequest_H
