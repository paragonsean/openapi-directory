/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserInfo_providerUserInfo_inner.h
 *
 * 
 */

#ifndef OAIUserInfo_providerUserInfo_inner_H
#define OAIUserInfo_providerUserInfo_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserInfo_providerUserInfo_inner : public OAIObject {
public:
    OAIUserInfo_providerUserInfo_inner();
    OAIUserInfo_providerUserInfo_inner(QString json);
    ~OAIUserInfo_providerUserInfo_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFederatedId() const;
    void setFederatedId(const QString &federated_id);
    bool is_federated_id_Set() const;
    bool is_federated_id_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    QString getProviderId() const;
    void setProviderId(const QString &provider_id);
    bool is_provider_id_Set() const;
    bool is_provider_id_Valid() const;

    QString getRawId() const;
    void setRawId(const QString &raw_id);
    bool is_raw_id_Set() const;
    bool is_raw_id_Valid() const;

    QString getScreenName() const;
    void setScreenName(const QString &screen_name);
    bool is_screen_name_Set() const;
    bool is_screen_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_federated_id;
    bool m_federated_id_isSet;
    bool m_federated_id_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;

    QString m_provider_id;
    bool m_provider_id_isSet;
    bool m_provider_id_isValid;

    QString m_raw_id;
    bool m_raw_id_isSet;
    bool m_raw_id_isValid;

    QString m_screen_name;
    bool m_screen_name_isSet;
    bool m_screen_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserInfo_providerUserInfo_inner)

#endif // OAIUserInfo_providerUserInfo_inner_H
