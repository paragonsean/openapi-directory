/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetAccountInfoResponse.h
 *
 * Respone of setting the account information.
 */

#ifndef OAISetAccountInfoResponse_H
#define OAISetAccountInfoResponse_H

#include <QJsonObject>

#include "OAISetAccountInfoResponse_providerUserInfo_inner.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISetAccountInfoResponse_providerUserInfo_inner;

class OAISetAccountInfoResponse : public OAIObject {
public:
    OAISetAccountInfoResponse();
    OAISetAccountInfoResponse(QString json);
    ~OAISetAccountInfoResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isEmailVerified() const;
    void setEmailVerified(const bool &email_verified);
    bool is_email_verified_Set() const;
    bool is_email_verified_Valid() const;

    QString getExpiresIn() const;
    void setExpiresIn(const QString &expires_in);
    bool is_expires_in_Set() const;
    bool is_expires_in_Valid() const;

    QString getIdToken() const;
    void setIdToken(const QString &id_token);
    bool is_id_token_Set() const;
    bool is_id_token_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLocalId() const;
    void setLocalId(const QString &local_id);
    bool is_local_id_Set() const;
    bool is_local_id_Valid() const;

    QString getNewEmail() const;
    void setNewEmail(const QString &new_email);
    bool is_new_email_Set() const;
    bool is_new_email_Valid() const;

    QByteArray getPasswordHash() const;
    void setPasswordHash(const QByteArray &password_hash);
    bool is_password_hash_Set() const;
    bool is_password_hash_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    QList<OAISetAccountInfoResponse_providerUserInfo_inner> getProviderUserInfo() const;
    void setProviderUserInfo(const QList<OAISetAccountInfoResponse_providerUserInfo_inner> &provider_user_info);
    bool is_provider_user_info_Set() const;
    bool is_provider_user_info_Valid() const;

    QString getRefreshToken() const;
    void setRefreshToken(const QString &refresh_token);
    bool is_refresh_token_Set() const;
    bool is_refresh_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_email_verified;
    bool m_email_verified_isSet;
    bool m_email_verified_isValid;

    QString m_expires_in;
    bool m_expires_in_isSet;
    bool m_expires_in_isValid;

    QString m_id_token;
    bool m_id_token_isSet;
    bool m_id_token_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_local_id;
    bool m_local_id_isSet;
    bool m_local_id_isValid;

    QString m_new_email;
    bool m_new_email_isSet;
    bool m_new_email_isValid;

    QByteArray m_password_hash;
    bool m_password_hash_isSet;
    bool m_password_hash_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;

    QList<OAISetAccountInfoResponse_providerUserInfo_inner> m_provider_user_info;
    bool m_provider_user_info_isSet;
    bool m_provider_user_info_isValid;

    QString m_refresh_token;
    bool m_refresh_token_isSet;
    bool m_refresh_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetAccountInfoResponse)

#endif // OAISetAccountInfoResponse_H
