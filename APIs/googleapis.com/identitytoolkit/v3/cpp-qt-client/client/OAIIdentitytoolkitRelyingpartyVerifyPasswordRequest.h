/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest.h
 *
 * Request to verify the password.
 */

#ifndef OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest_H
#define OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest : public OAIObject {
public:
    OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest();
    OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest(QString json);
    ~OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCaptchaChallenge() const;
    void setCaptchaChallenge(const QString &captcha_challenge);
    bool is_captcha_challenge_Set() const;
    bool is_captcha_challenge_Valid() const;

    QString getCaptchaResponse() const;
    void setCaptchaResponse(const QString &captcha_response);
    bool is_captcha_response_Set() const;
    bool is_captcha_response_Valid() const;

    QString getDelegatedProjectNumber() const;
    void setDelegatedProjectNumber(const QString &delegated_project_number);
    bool is_delegated_project_number_Set() const;
    bool is_delegated_project_number_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getIdToken() const;
    void setIdToken(const QString &id_token);
    bool is_id_token_Set() const;
    bool is_id_token_Valid() const;

    QString getInstanceId() const;
    void setInstanceId(const QString &instance_id);
    bool is_instance_id_Set() const;
    bool is_instance_id_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPendingIdToken() const;
    void setPendingIdToken(const QString &pending_id_token);
    bool is_pending_id_token_Set() const;
    bool is_pending_id_token_Valid() const;

    bool isReturnSecureToken() const;
    void setReturnSecureToken(const bool &return_secure_token);
    bool is_return_secure_token_Set() const;
    bool is_return_secure_token_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    QString getTenantProjectNumber() const;
    void setTenantProjectNumber(const QString &tenant_project_number);
    bool is_tenant_project_number_Set() const;
    bool is_tenant_project_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_captcha_challenge;
    bool m_captcha_challenge_isSet;
    bool m_captcha_challenge_isValid;

    QString m_captcha_response;
    bool m_captcha_response_isSet;
    bool m_captcha_response_isValid;

    QString m_delegated_project_number;
    bool m_delegated_project_number_isSet;
    bool m_delegated_project_number_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_id_token;
    bool m_id_token_isSet;
    bool m_id_token_isValid;

    QString m_instance_id;
    bool m_instance_id_isSet;
    bool m_instance_id_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_pending_id_token;
    bool m_pending_id_token_isSet;
    bool m_pending_id_token_isValid;

    bool m_return_secure_token;
    bool m_return_secure_token_isSet;
    bool m_return_secure_token_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    QString m_tenant_project_number;
    bool m_tenant_project_number_isSet;
    bool m_tenant_project_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest)

#endif // OAIIdentitytoolkitRelyingpartyVerifyPasswordRequest_H
