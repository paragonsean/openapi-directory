/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserInfo.h
 *
 * Template for an individual account info.
 */

#ifndef OAIUserInfo_H
#define OAIUserInfo_H

#include <QJsonObject>

#include "OAIUserInfo_providerUserInfo_inner.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserInfo_providerUserInfo_inner;

class OAIUserInfo : public OAIObject {
public:
    OAIUserInfo();
    OAIUserInfo(QString json);
    ~OAIUserInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCustomAttributes() const;
    void setCustomAttributes(const QString &custom_attributes);
    bool is_custom_attributes_Set() const;
    bool is_custom_attributes_Valid() const;

    bool isCustomAuth() const;
    void setCustomAuth(const bool &custom_auth);
    bool is_custom_auth_Set() const;
    bool is_custom_auth_Valid() const;

    bool isDisabled() const;
    void setDisabled(const bool &disabled);
    bool is_disabled_Set() const;
    bool is_disabled_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isEmailVerified() const;
    void setEmailVerified(const bool &email_verified);
    bool is_email_verified_Set() const;
    bool is_email_verified_Valid() const;

    QString getLastLoginAt() const;
    void setLastLoginAt(const QString &last_login_at);
    bool is_last_login_at_Set() const;
    bool is_last_login_at_Valid() const;

    QString getLocalId() const;
    void setLocalId(const QString &local_id);
    bool is_local_id_Set() const;
    bool is_local_id_Valid() const;

    QByteArray getPasswordHash() const;
    void setPasswordHash(const QByteArray &password_hash);
    bool is_password_hash_Set() const;
    bool is_password_hash_Valid() const;

    double getPasswordUpdatedAt() const;
    void setPasswordUpdatedAt(const double &password_updated_at);
    bool is_password_updated_at_Set() const;
    bool is_password_updated_at_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    QList<OAIUserInfo_providerUserInfo_inner> getProviderUserInfo() const;
    void setProviderUserInfo(const QList<OAIUserInfo_providerUserInfo_inner> &provider_user_info);
    bool is_provider_user_info_Set() const;
    bool is_provider_user_info_Valid() const;

    QString getRawPassword() const;
    void setRawPassword(const QString &raw_password);
    bool is_raw_password_Set() const;
    bool is_raw_password_Valid() const;

    QByteArray getSalt() const;
    void setSalt(const QByteArray &salt);
    bool is_salt_Set() const;
    bool is_salt_Valid() const;

    QString getScreenName() const;
    void setScreenName(const QString &screen_name);
    bool is_screen_name_Set() const;
    bool is_screen_name_Valid() const;

    QString getValidSince() const;
    void setValidSince(const QString &valid_since);
    bool is_valid_since_Set() const;
    bool is_valid_since_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_custom_attributes;
    bool m_custom_attributes_isSet;
    bool m_custom_attributes_isValid;

    bool m_custom_auth;
    bool m_custom_auth_isSet;
    bool m_custom_auth_isValid;

    bool m_disabled;
    bool m_disabled_isSet;
    bool m_disabled_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_email_verified;
    bool m_email_verified_isSet;
    bool m_email_verified_isValid;

    QString m_last_login_at;
    bool m_last_login_at_isSet;
    bool m_last_login_at_isValid;

    QString m_local_id;
    bool m_local_id_isSet;
    bool m_local_id_isValid;

    QByteArray m_password_hash;
    bool m_password_hash_isSet;
    bool m_password_hash_isValid;

    double m_password_updated_at;
    bool m_password_updated_at_isSet;
    bool m_password_updated_at_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;

    QList<OAIUserInfo_providerUserInfo_inner> m_provider_user_info;
    bool m_provider_user_info_isSet;
    bool m_provider_user_info_isValid;

    QString m_raw_password;
    bool m_raw_password_isSet;
    bool m_raw_password_isValid;

    QByteArray m_salt;
    bool m_salt_isSet;
    bool m_salt_isValid;

    QString m_screen_name;
    bool m_screen_name_isSet;
    bool m_screen_name_isValid;

    QString m_valid_since;
    bool m_valid_since_isSet;
    bool m_valid_since_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserInfo)

#endif // OAIUserInfo_H
