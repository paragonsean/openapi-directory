/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerifyCustomTokenResponse.h
 *
 * Response from verifying a custom token
 */

#ifndef OAIVerifyCustomTokenResponse_H
#define OAIVerifyCustomTokenResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVerifyCustomTokenResponse : public OAIObject {
public:
    OAIVerifyCustomTokenResponse();
    OAIVerifyCustomTokenResponse(QString json);
    ~OAIVerifyCustomTokenResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpiresIn() const;
    void setExpiresIn(const QString &expires_in);
    bool is_expires_in_Set() const;
    bool is_expires_in_Valid() const;

    QString getIdToken() const;
    void setIdToken(const QString &id_token);
    bool is_id_token_Set() const;
    bool is_id_token_Valid() const;

    bool isIsNewUser() const;
    void setIsNewUser(const bool &is_new_user);
    bool is_is_new_user_Set() const;
    bool is_is_new_user_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getRefreshToken() const;
    void setRefreshToken(const QString &refresh_token);
    bool is_refresh_token_Set() const;
    bool is_refresh_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expires_in;
    bool m_expires_in_isSet;
    bool m_expires_in_isValid;

    QString m_id_token;
    bool m_id_token_isSet;
    bool m_id_token_isValid;

    bool m_is_new_user;
    bool m_is_new_user_isSet;
    bool m_is_new_user_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_refresh_token;
    bool m_refresh_token_isSet;
    bool m_refresh_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerifyCustomTokenResponse)

#endif // OAIVerifyCustomTokenResponse_H
