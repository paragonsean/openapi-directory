/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentitytoolkitRelyingpartySetProjectConfigRequest.h
 *
 * Request to set the project configuration.
 */

#ifndef OAIIdentitytoolkitRelyingpartySetProjectConfigRequest_H
#define OAIIdentitytoolkitRelyingpartySetProjectConfigRequest_H

#include <QJsonObject>

#include "OAIEmailTemplate.h"
#include "OAIIdpConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmailTemplate;
class OAIIdpConfig;

class OAIIdentitytoolkitRelyingpartySetProjectConfigRequest : public OAIObject {
public:
    OAIIdentitytoolkitRelyingpartySetProjectConfigRequest();
    OAIIdentitytoolkitRelyingpartySetProjectConfigRequest(QString json);
    ~OAIIdentitytoolkitRelyingpartySetProjectConfigRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowPasswordUser() const;
    void setAllowPasswordUser(const bool &allow_password_user);
    bool is_allow_password_user_Set() const;
    bool is_allow_password_user_Valid() const;

    QString getApiKey() const;
    void setApiKey(const QString &api_key);
    bool is_api_key_Set() const;
    bool is_api_key_Valid() const;

    QList<QString> getAuthorizedDomains() const;
    void setAuthorizedDomains(const QList<QString> &authorized_domains);
    bool is_authorized_domains_Set() const;
    bool is_authorized_domains_Valid() const;

    OAIEmailTemplate getChangeEmailTemplate() const;
    void setChangeEmailTemplate(const OAIEmailTemplate &change_email_template);
    bool is_change_email_template_Set() const;
    bool is_change_email_template_Valid() const;

    QString getDelegatedProjectNumber() const;
    void setDelegatedProjectNumber(const QString &delegated_project_number);
    bool is_delegated_project_number_Set() const;
    bool is_delegated_project_number_Valid() const;

    bool isEnableAnonymousUser() const;
    void setEnableAnonymousUser(const bool &enable_anonymous_user);
    bool is_enable_anonymous_user_Set() const;
    bool is_enable_anonymous_user_Valid() const;

    QList<OAIIdpConfig> getIdpConfig() const;
    void setIdpConfig(const QList<OAIIdpConfig> &idp_config);
    bool is_idp_config_Set() const;
    bool is_idp_config_Valid() const;

    OAIEmailTemplate getLegacyResetPasswordTemplate() const;
    void setLegacyResetPasswordTemplate(const OAIEmailTemplate &legacy_reset_password_template);
    bool is_legacy_reset_password_template_Set() const;
    bool is_legacy_reset_password_template_Valid() const;

    OAIEmailTemplate getResetPasswordTemplate() const;
    void setResetPasswordTemplate(const OAIEmailTemplate &reset_password_template);
    bool is_reset_password_template_Set() const;
    bool is_reset_password_template_Valid() const;

    bool isUseEmailSending() const;
    void setUseEmailSending(const bool &use_email_sending);
    bool is_use_email_sending_Set() const;
    bool is_use_email_sending_Valid() const;

    OAIEmailTemplate getVerifyEmailTemplate() const;
    void setVerifyEmailTemplate(const OAIEmailTemplate &verify_email_template);
    bool is_verify_email_template_Set() const;
    bool is_verify_email_template_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_password_user;
    bool m_allow_password_user_isSet;
    bool m_allow_password_user_isValid;

    QString m_api_key;
    bool m_api_key_isSet;
    bool m_api_key_isValid;

    QList<QString> m_authorized_domains;
    bool m_authorized_domains_isSet;
    bool m_authorized_domains_isValid;

    OAIEmailTemplate m_change_email_template;
    bool m_change_email_template_isSet;
    bool m_change_email_template_isValid;

    QString m_delegated_project_number;
    bool m_delegated_project_number_isSet;
    bool m_delegated_project_number_isValid;

    bool m_enable_anonymous_user;
    bool m_enable_anonymous_user_isSet;
    bool m_enable_anonymous_user_isValid;

    QList<OAIIdpConfig> m_idp_config;
    bool m_idp_config_isSet;
    bool m_idp_config_isValid;

    OAIEmailTemplate m_legacy_reset_password_template;
    bool m_legacy_reset_password_template_isSet;
    bool m_legacy_reset_password_template_isValid;

    OAIEmailTemplate m_reset_password_template;
    bool m_reset_password_template_isSet;
    bool m_reset_password_template_isValid;

    bool m_use_email_sending;
    bool m_use_email_sending_isSet;
    bool m_use_email_sending_isValid;

    OAIEmailTemplate m_verify_email_template;
    bool m_verify_email_template_isSet;
    bool m_verify_email_template_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentitytoolkitRelyingpartySetProjectConfigRequest)

#endif // OAIIdentitytoolkitRelyingpartySetProjectConfigRequest_H
