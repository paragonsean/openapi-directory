/**
 * Google Identity Toolkit API
 * Help the third party sites to implement federated login.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdpConfig.h
 *
 * Template for a single idp configuration.
 */

#ifndef OAIIdpConfig_H
#define OAIIdpConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdpConfig : public OAIObject {
public:
    OAIIdpConfig();
    OAIIdpConfig(QString json);
    ~OAIIdpConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    qint32 getExperimentPercent() const;
    void setExperimentPercent(const qint32 &experiment_percent);
    bool is_experiment_percent_Set() const;
    bool is_experiment_percent_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    QList<QString> getWhitelistedAudiences() const;
    void setWhitelistedAudiences(const QList<QString> &whitelisted_audiences);
    bool is_whitelisted_audiences_Set() const;
    bool is_whitelisted_audiences_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    qint32 m_experiment_percent;
    bool m_experiment_percent_isSet;
    bool m_experiment_percent_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    QList<QString> m_whitelisted_audiences;
    bool m_whitelisted_audiences_isSet;
    bool m_whitelisted_audiences_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdpConfig)

#endif // OAIIdpConfig_H
