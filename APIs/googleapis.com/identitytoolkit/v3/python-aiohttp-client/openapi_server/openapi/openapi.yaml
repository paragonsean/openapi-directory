openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Help the third party sites to implement federated login.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Identity Toolkit API
  version: v3
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: google
    url: https://identitytoolkit.googleapis.com/$discovery/rest?version=v3
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: identitytoolkit
externalDocs:
  url: https://developers.google.com/identity-toolkit/v3/
servers:
- url: https://www.googleapis.com/identitytoolkit/v3/relyingparty
tags:
- name: relyingparty
paths:
  /createAuthUri:
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit_relyingparty_create_auth_uri
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /deleteAccount:
    post:
      description: Delete user account.
      operationId: identitytoolkit_relyingparty_delete_account
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /downloadAccount:
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit_relyingparty_download_account
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /emailLinkSignin:
    post:
      description: Reset password for a user.
      operationId: identitytoolkit_relyingparty_email_link_signin
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /getAccountInfo:
    post:
      description: Returns the account info.
      operationId: identitytoolkit_relyingparty_get_account_info
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /getOobConfirmationCode:
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit_relyingparty_get_oob_confirmation_code
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /getProjectConfig:
    get:
      description: Get project configuration.
      operationId: identitytoolkit_relyingparty_get_project_config
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: Delegated GCP project number of the request.
        explode: true
        in: query
        name: delegatedProjectNumber
        required: false
        schema:
          type: string
        style: form
      - description: GCP project number of the request.
        explode: true
        in: query
        name: projectNumber
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
  /getRecaptchaParam:
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit_relyingparty_get_recaptcha_param
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
  /publicKeys:
    get:
      description: Get token signing public key.
      operationId: identitytoolkit_relyingparty_get_public_keys
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
  /resetPassword:
    post:
      description: Reset password for a user.
      operationId: identitytoolkit_relyingparty_reset_password
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /sendVerificationCode:
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit_relyingparty_send_verification_code
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /setAccountInfo:
    post:
      description: Set account info for a user.
      operationId: identitytoolkit_relyingparty_set_account_info
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /setProjectConfig:
    post:
      description: Set project configuration.
      operationId: identitytoolkit_relyingparty_set_project_config
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /signOutUser:
    post:
      description: Sign out user.
      operationId: identitytoolkit_relyingparty_sign_out_user
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /signupNewUser:
    post:
      description: Signup new user.
      operationId: identitytoolkit_relyingparty_signup_new_user
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /uploadAccount:
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit_relyingparty_upload_account
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /verifyAssertion:
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit_relyingparty_verify_assertion
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /verifyCustomToken:
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit_relyingparty_verify_custom_token
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /verifyPassword:
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit_relyingparty_verify_password
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
  /verifyPhoneNumber:
    post:
      description: Verifies ownership of a phone number and creates/updates the user
        account accordingly.
      operationId: identitytoolkit_relyingparty_verify_phone_number
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - relyingparty
      x-openapi-router-controller: openapi_server.controllers.relyingparty_controller
      x-codegen-request-body-name: body
components:
  parameters:
    alt:
      description: Data format for the response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must
        not exceed 40 characters.
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    userIp:
      description: Deprecated. Please use quotaUser instead.
      explode: true
      in: query
      name: userIp
      required: false
      schema:
        type: string
      style: form
  schemas:
    CreateAuthUriResponse:
      description: Response of creating the IDP authentication URL.
      example:
        authUri: authUri
        allProviders:
        - allProviders
        - allProviders
        kind: identitytoolkit#CreateAuthUriResponse
        providerId: providerId
        registered: true
        signinMethods:
        - signinMethods
        - signinMethods
        sessionId: sessionId
        captchaRequired: true
        forExistingProvider: true
      properties:
        allProviders:
          description: all providers the user has once used to do federated login
          items:
            type: string
          title: allProviders
          type: array
        authUri:
          description: The URI used by the IDP to authenticate the user.
          title: authUri
          type: string
        captchaRequired:
          description: True if captcha is required.
          title: captchaRequired
          type: boolean
        forExistingProvider:
          description: True if the authUri is for user's existing provider.
          title: forExistingProvider
          type: boolean
        kind:
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          title: kind
          type: string
        providerId:
          description: The provider ID of the auth URI.
          title: providerId
          type: string
        registered:
          description: Whether the user is registered if the identifier is an email.
          title: registered
          type: boolean
        sessionId:
          description: Session ID which should be passed in the following verifyAssertion
            request.
          title: sessionId
          type: string
        signinMethods:
          description: All sign-in methods this user has used.
          items:
            type: string
          title: signinMethods
          type: array
      title: CreateAuthUriResponse
      type: object
    DeleteAccountResponse:
      description: Respone of deleting account.
      example:
        kind: identitytoolkit#DeleteAccountResponse
      properties:
        kind:
          default: identitytoolkit#DeleteAccountResponse
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
          title: kind
          type: string
      title: DeleteAccountResponse
      type: object
    DownloadAccountResponse:
      description: Response of downloading accounts in batch.
      example:
        kind: identitytoolkit#DownloadAccountResponse
        nextPageToken: nextPageToken
        users:
        - salt: salt
          validSince: validSince
          providerUserInfo:
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          displayName: displayName
          customAuth: true
          screenName: screenName
          localId: localId
          version: 6
          passwordHash: passwordHash
          createdAt: createdAt
          emailVerified: true
          passwordUpdatedAt: 0.8008281904610115
          photoUrl: photoUrl
          lastLoginAt: lastLoginAt
          phoneNumber: phoneNumber
          disabled: true
          rawPassword: rawPassword
          email: email
          customAttributes: customAttributes
        - salt: salt
          validSince: validSince
          providerUserInfo:
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          displayName: displayName
          customAuth: true
          screenName: screenName
          localId: localId
          version: 6
          passwordHash: passwordHash
          createdAt: createdAt
          emailVerified: true
          passwordUpdatedAt: 0.8008281904610115
          photoUrl: photoUrl
          lastLoginAt: lastLoginAt
          phoneNumber: phoneNumber
          disabled: true
          rawPassword: rawPassword
          email: email
          customAttributes: customAttributes
      properties:
        kind:
          default: identitytoolkit#DownloadAccountResponse
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          title: kind
          type: string
        nextPageToken:
          description: The next page token. To be used in a subsequent request to
            return the next page of results.
          title: nextPageToken
          type: string
        users:
          description: The user accounts data.
          items:
            $ref: '#/components/schemas/UserInfo'
          title: users
          type: array
      title: DownloadAccountResponse
      type: object
    EmailLinkSigninResponse:
      description: Response of email signIn.
      example:
        expiresIn: expiresIn
        kind: identitytoolkit#EmailLinkSigninResponse
        idToken: idToken
        isNewUser: true
        localId: localId
        email: email
        refreshToken: refreshToken
      properties:
        email:
          description: The user's email.
          title: email
          type: string
        expiresIn:
          description: Expiration time of STS id token in seconds.
          format: int64
          title: expiresIn
          type: string
        idToken:
          description: The STS id token to login the newly signed in user.
          title: idToken
          type: string
        isNewUser:
          description: Whether the user is new.
          title: isNewUser
          type: boolean
        kind:
          default: identitytoolkit#EmailLinkSigninResponse
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          title: kind
          type: string
        localId:
          description: The RP local ID of the user.
          title: localId
          type: string
        refreshToken:
          description: The refresh token for the signed in user.
          title: refreshToken
          type: string
      title: EmailLinkSigninResponse
      type: object
    EmailTemplate:
      description: Template for an email template.
      example:
        subject: subject
        format: format
        replyTo: replyTo
        from: from
        fromDisplayName: fromDisplayName
        body: body
      properties:
        body:
          description: Email body.
          title: body
          type: string
        format:
          description: Email body format.
          title: format
          type: string
        from:
          description: From address of the email.
          title: from
          type: string
        fromDisplayName:
          description: From display name.
          title: fromDisplayName
          type: string
        replyTo:
          description: Reply-to address.
          title: replyTo
          type: string
        subject:
          description: Subject of the email.
          title: subject
          type: string
      title: EmailTemplate
      type: object
    GetAccountInfoResponse:
      description: Response of getting account information.
      example:
        kind: identitytoolkit#GetAccountInfoResponse
        users:
        - salt: salt
          validSince: validSince
          providerUserInfo:
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          displayName: displayName
          customAuth: true
          screenName: screenName
          localId: localId
          version: 6
          passwordHash: passwordHash
          createdAt: createdAt
          emailVerified: true
          passwordUpdatedAt: 0.8008281904610115
          photoUrl: photoUrl
          lastLoginAt: lastLoginAt
          phoneNumber: phoneNumber
          disabled: true
          rawPassword: rawPassword
          email: email
          customAttributes: customAttributes
        - salt: salt
          validSince: validSince
          providerUserInfo:
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          displayName: displayName
          customAuth: true
          screenName: screenName
          localId: localId
          version: 6
          passwordHash: passwordHash
          createdAt: createdAt
          emailVerified: true
          passwordUpdatedAt: 0.8008281904610115
          photoUrl: photoUrl
          lastLoginAt: lastLoginAt
          phoneNumber: phoneNumber
          disabled: true
          rawPassword: rawPassword
          email: email
          customAttributes: customAttributes
      properties:
        kind:
          default: identitytoolkit#GetAccountInfoResponse
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          title: kind
          type: string
        users:
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
          title: users
          type: array
      title: GetAccountInfoResponse
      type: object
    GetOobConfirmationCodeResponse:
      description: "Response of getting a code for user confirmation (reset password,\
        \ change email etc.)."
      example:
        kind: identitytoolkit#GetOobConfirmationCodeResponse
        oobCode: oobCode
        email: email
      properties:
        email:
          description: The email address that the email is sent to.
          title: email
          type: string
        kind:
          default: identitytoolkit#GetOobConfirmationCodeResponse
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
          title: kind
          type: string
        oobCode:
          description: The code to be send to the user.
          title: oobCode
          type: string
      title: GetOobConfirmationCodeResponse
      type: object
    GetRecaptchaParamResponse:
      description: Response of getting recaptcha param.
      example:
        recaptchaStoken: recaptchaStoken
        recaptchaSiteKey: recaptchaSiteKey
        kind: identitytoolkit#GetRecaptchaParamResponse
      properties:
        kind:
          default: identitytoolkit#GetRecaptchaParamResponse
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          title: kind
          type: string
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          title: recaptchaSiteKey
          type: string
        recaptchaStoken:
          description: "The stoken field for the recaptcha widget, used to request\
            \ captcha challenge."
          title: recaptchaStoken
          type: string
      title: GetRecaptchaParamResponse
      type: object
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      description: Request to get the IDP authentication URL.
      example:
        identifier: identifier
        clientId: clientId
        oauthScope: oauthScope
        tenantProjectNumber: tenantProjectNumber
        customParameter:
          key: customParameter
        authFlowType: authFlowType
        sessionId: sessionId
        providerId: providerId
        appId: appId
        context: context
        hostedDomain: hostedDomain
        tenantId: tenantId
        continueUri: continueUri
        oauthConsumerKey: oauthConsumerKey
        openidRealm: openidRealm
        otaApp: otaApp
      properties:
        appId:
          description: "The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME\
            \ for Android, BUNDLE_ID for iOS."
          title: appId
          type: string
        authFlowType:
          description: Explicitly specify the auth flow type. Currently only support
            "CODE_FLOW" type. The field is only used for Google provider.
          title: authFlowType
          type: string
        clientId:
          description: The relying party OAuth client ID.
          title: clientId
          type: string
        context:
          description: The opaque value used by the client to maintain context info
            between the authentication request and the IDP callback.
          title: context
          type: string
        continueUri:
          description: The URI to which the IDP redirects the user after the federated
            login flow.
          title: continueUri
          type: string
        customParameter:
          additionalProperties:
            description: The customized query parameter.
            type: string
          description: "The query parameter that client can customize by themselves\
            \ in auth url. The following parameters are reserved for server so that\
            \ they cannot be customized by clients: client_id, response_type, scope,\
            \ redirect_uri, state, oauth_token."
          title: customParameter
          type: object
        hostedDomain:
          description: The hosted domain to restrict sign-in to accounts at that domain
            for Google Apps hosted accounts.
          title: hostedDomain
          type: string
        identifier:
          description: The email or federated ID of the user.
          title: identifier
          type: string
        oauthConsumerKey:
          description: The developer's consumer key for OpenId OAuth Extension
          title: oauthConsumerKey
          type: string
        oauthScope:
          description: "Additional oauth scopes, beyond the basid user profile, that\
            \ the user would be prompted to grant"
          title: oauthScope
          type: string
        openidRealm:
          description: Optional realm for OpenID protocol. The sub string "scheme://domain:port"
            of the param "continueUri" is used if this is not set.
          title: openidRealm
          type: string
        otaApp:
          description: The native app package for OTA installation.
          title: otaApp
          type: string
        providerId:
          description: "The IdP ID. For white listed IdPs it's a short domain name\
            \ e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs\
            \ it's the OP identifier."
          title: providerId
          type: string
        sessionId:
          description: The session_id passed by client.
          title: sessionId
          type: string
        tenantId:
          description: "For multi-tenant use cases, in order to construct sign-in\
            \ URL with the correct IDP parameters, Firebear needs to know which Tenant\
            \ to retrieve IDP configs from."
          title: tenantId
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          format: uint64
          title: tenantProjectNumber
          type: string
      title: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      type: object
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      description: Request to delete account.
      example:
        delegatedProjectNumber: delegatedProjectNumber
        idToken: idToken
        localId: localId
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          title: idToken
          type: string
        localId:
          description: The local ID of the user.
          title: localId
          type: string
      title: IdentitytoolkitRelyingpartyDeleteAccountRequest
      type: object
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      description: Request to download user account in batch.
      example:
        maxResults: 0
        nextPageToken: nextPageToken
        targetProjectId: targetProjectId
        delegatedProjectNumber: delegatedProjectNumber
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        maxResults:
          description: The max number of results to return in the response.
          format: uint32
          title: maxResults
          type: integer
        nextPageToken:
          description: The token for the next page. This should be taken from the
            previous response.
          title: nextPageToken
          type: string
        targetProjectId:
          description: Specify which project (field value is actually project id)
            to operate. Only used when provided credential.
          title: targetProjectId
          type: string
      title: IdentitytoolkitRelyingpartyDownloadAccountRequest
      type: object
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      description: Request to sign in with email.
      example:
        idToken: idToken
        oobCode: oobCode
        email: email
      properties:
        email:
          description: The email address of the user.
          title: email
          type: string
        idToken:
          description: Token for linking flow.
          title: idToken
          type: string
        oobCode:
          description: The confirmation code.
          title: oobCode
          type: string
      title: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      type: object
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      description: Request to get the account information.
      example:
        phoneNumber:
        - phoneNumber
        - phoneNumber
        delegatedProjectNumber: delegatedProjectNumber
        idToken: idToken
        localId:
        - localId
        - localId
        email:
        - email
        - email
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        email:
          description: The list of emails of the users to inquiry.
          items:
            type: string
          title: email
          type: array
        idToken:
          description: The GITKit token of the authenticated user.
          title: idToken
          type: string
        localId:
          description: The list of local ID's of the users to inquiry.
          items:
            type: string
          title: localId
          type: array
        phoneNumber:
          description: Privileged caller can query users by specified phone number.
          items:
            type: string
          title: phoneNumber
          type: array
      title: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      type: object
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      description: Response of getting the project configuration.
      example:
        legacyResetPasswordTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
        idpConfig:
        - clientId: clientId
          provider: provider
          whitelistedAudiences:
          - whitelistedAudiences
          - whitelistedAudiences
          secret: secret
          experimentPercent: 0
          enabled: true
        - clientId: clientId
          provider: provider
          whitelistedAudiences:
          - whitelistedAudiences
          - whitelistedAudiences
          secret: secret
          experimentPercent: 0
          enabled: true
        apiKey: apiKey
        resetPasswordTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
        useEmailSending: true
        enableAnonymousUser: true
        dynamicLinksDomain: dynamicLinksDomain
        allowPasswordUser: true
        projectId: projectId
        verifyEmailTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
        authorizedDomains:
        - authorizedDomains
        - authorizedDomains
        changeEmailTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
      properties:
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          title: allowPasswordUser
          type: boolean
        apiKey:
          description: "Browser API key, needed when making http request to Apiary."
          title: apiKey
          type: string
        authorizedDomains:
          description: Authorized domains.
          items:
            type: string
          title: authorizedDomains
          type: array
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
        dynamicLinksDomain:
          title: dynamicLinksDomain
          type: string
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          title: enableAnonymousUser
          type: boolean
        idpConfig:
          description: OAuth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
          title: idpConfig
          type: array
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
        projectId:
          description: Project ID of the relying party.
          title: projectId
          type: string
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          title: useEmailSending
          type: boolean
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
      title: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      type: object
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      additionalProperties:
        type: string
      description: Respone of getting public keys.
      type: object
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      description: Request to reset the password.
      example:
        oldPassword: oldPassword
        newPassword: newPassword
        oobCode: oobCode
        email: email
      properties:
        email:
          description: The email address of the user.
          title: email
          type: string
        newPassword:
          description: The new password inputted by the user.
          title: newPassword
          type: string
        oldPassword:
          description: The old password inputted by the user.
          title: oldPassword
          type: string
        oobCode:
          description: The confirmation code.
          title: oobCode
          type: string
      title: IdentitytoolkitRelyingpartyResetPasswordRequest
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      description: Request for Identitytoolkit-SendVerificationCode
      example:
        phoneNumber: phoneNumber
        iosReceipt: iosReceipt
        recaptchaToken: recaptchaToken
        iosSecret: iosSecret
      properties:
        iosReceipt:
          description: Receipt of successful app token validation with APNS.
          title: iosReceipt
          type: string
        iosSecret:
          description: Secret delivered to iOS app via APNS.
          title: iosSecret
          type: string
        phoneNumber:
          description: The phone number to send the verification code to in E.164
            format.
          title: phoneNumber
          type: string
        recaptchaToken:
          description: Recaptcha solution.
          title: recaptchaToken
          type: string
      title: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      description: Response for Identitytoolkit-SendVerificationCode
      example:
        sessionInfo: sessionInfo
      properties:
        sessionInfo:
          description: Encrypted session information
          title: sessionInfo
          type: string
      title: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      type: object
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      description: Request to set the account information.
      example:
        captchaResponse: captchaResponse
        validSince: validSince
        captchaChallenge: captchaChallenge
        displayName: displayName
        upgradeToFederatedLogin: true
        localId: localId
        oobCode: oobCode
        returnSecureToken: true
        createdAt: createdAt
        emailVerified: true
        photoUrl: photoUrl
        password: password
        instanceId: instanceId
        lastLoginAt: lastLoginAt
        phoneNumber: phoneNumber
        provider:
        - provider
        - provider
        deleteAttribute:
        - deleteAttribute
        - deleteAttribute
        delegatedProjectNumber: delegatedProjectNumber
        idToken: idToken
        disableUser: true
        deleteProvider:
        - deleteProvider
        - deleteProvider
        email: email
        customAttributes: customAttributes
      properties:
        captchaChallenge:
          description: The captcha challenge.
          title: captchaChallenge
          type: string
        captchaResponse:
          description: Response to the captcha.
          title: captchaResponse
          type: string
        createdAt:
          description: The timestamp when the account is created.
          format: int64
          title: createdAt
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          title: customAttributes
          type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        deleteAttribute:
          description: The attributes users request to delete.
          items:
            type: string
          title: deleteAttribute
          type: array
        deleteProvider:
          description: The IDPs the user request to delete.
          items:
            type: string
          title: deleteProvider
          type: array
        disableUser:
          description: Whether to disable the user.
          title: disableUser
          type: boolean
        displayName:
          description: The name of the user.
          title: displayName
          type: string
        email:
          description: The email of the user.
          title: email
          type: string
        emailVerified:
          description: Mark the email as verified or not.
          title: emailVerified
          type: boolean
        idToken:
          description: The GITKit token of the authenticated user.
          title: idToken
          type: string
        instanceId:
          description: Instance id token of the app.
          title: instanceId
          type: string
        lastLoginAt:
          description: Last login timestamp.
          format: int64
          title: lastLoginAt
          type: string
        localId:
          description: The local ID of the user.
          title: localId
          type: string
        oobCode:
          description: The out-of-band code of the change email request.
          title: oobCode
          type: string
        password:
          description: The new password of the user.
          title: password
          type: string
        phoneNumber:
          description: Privileged caller can update user with specified phone number.
          title: phoneNumber
          type: string
        photoUrl:
          description: The photo url of the user.
          title: photoUrl
          type: string
        provider:
          description: The associated IDPs of the user.
          items:
            type: string
          title: provider
          type: array
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit
            token.
          title: returnSecureToken
          type: boolean
        upgradeToFederatedLogin:
          description: Mark the user to upgrade to federated login.
          title: upgradeToFederatedLogin
          type: boolean
        validSince:
          description: Timestamp in seconds for valid login token.
          format: int64
          title: validSince
          type: string
      title: IdentitytoolkitRelyingpartySetAccountInfoRequest
      type: object
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      description: Request to set the project configuration.
      example:
        legacyResetPasswordTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
        idpConfig:
        - clientId: clientId
          provider: provider
          whitelistedAudiences:
          - whitelistedAudiences
          - whitelistedAudiences
          secret: secret
          experimentPercent: 0
          enabled: true
        - clientId: clientId
          provider: provider
          whitelistedAudiences:
          - whitelistedAudiences
          - whitelistedAudiences
          secret: secret
          experimentPercent: 0
          enabled: true
        apiKey: apiKey
        resetPasswordTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
        delegatedProjectNumber: delegatedProjectNumber
        useEmailSending: true
        enableAnonymousUser: true
        allowPasswordUser: true
        verifyEmailTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
        authorizedDomains:
        - authorizedDomains
        - authorizedDomains
        changeEmailTemplate:
          subject: subject
          format: format
          replyTo: replyTo
          from: from
          fromDisplayName: fromDisplayName
          body: body
      properties:
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          title: allowPasswordUser
          type: boolean
        apiKey:
          description: "Browser API key, needed when making http request to Apiary."
          title: apiKey
          type: string
        authorizedDomains:
          description: Authorized domains for widget redirect.
          items:
            type: string
          title: authorizedDomains
          type: array
        changeEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        enableAnonymousUser:
          description: Whether to enable anonymous user.
          title: enableAnonymousUser
          type: boolean
        idpConfig:
          description: Oauth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
          title: idpConfig
          type: array
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          title: useEmailSending
          type: boolean
        verifyEmailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
      title: IdentitytoolkitRelyingpartySetProjectConfigRequest
      type: object
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      description: Response of setting the project configuration.
      example:
        projectId: projectId
      properties:
        projectId:
          description: Project ID of the relying party.
          title: projectId
          type: string
      title: IdentitytoolkitRelyingpartySetProjectConfigResponse
      type: object
    IdentitytoolkitRelyingpartySignOutUserRequest:
      description: Request to sign out user.
      example:
        instanceId: instanceId
        localId: localId
      properties:
        instanceId:
          description: Instance id token of the app.
          title: instanceId
          type: string
        localId:
          description: The local ID of the user.
          title: localId
          type: string
      title: IdentitytoolkitRelyingpartySignOutUserRequest
      type: object
    IdentitytoolkitRelyingpartySignOutUserResponse:
      description: Response of signing out user.
      example:
        localId: localId
      properties:
        localId:
          description: The local ID of the user.
          title: localId
          type: string
      title: IdentitytoolkitRelyingpartySignOutUserResponse
      type: object
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      description: "Request to signup new user, create anonymous user or anonymous\
        \ user reauth."
      example:
        captchaResponse: captchaResponse
        captchaChallenge: captchaChallenge
        displayName: displayName
        tenantProjectNumber: tenantProjectNumber
        localId: localId
        emailVerified: true
        photoUrl: photoUrl
        password: password
        instanceId: instanceId
        phoneNumber: phoneNumber
        idToken: idToken
        tenantId: tenantId
        disabled: true
        email: email
      properties:
        captchaChallenge:
          description: The captcha challenge.
          title: captchaChallenge
          type: string
        captchaResponse:
          description: Response to the captcha.
          title: captchaResponse
          type: string
        disabled:
          description: Whether to disable the user. Only can be used by service account.
          title: disabled
          type: boolean
        displayName:
          description: The name of the user.
          title: displayName
          type: string
        email:
          description: The email of the user.
          title: email
          type: string
        emailVerified:
          description: Mark the email as verified or not. Only can be used by service
            account.
          title: emailVerified
          type: boolean
        idToken:
          description: The GITKit token of the authenticated user.
          title: idToken
          type: string
        instanceId:
          description: Instance id token of the app.
          title: instanceId
          type: string
        localId:
          description: Privileged caller can create user with specified user id.
          title: localId
          type: string
        password:
          description: The new password of the user.
          title: password
          type: string
        phoneNumber:
          description: Privileged caller can create user with specified phone number.
          title: phoneNumber
          type: string
        photoUrl:
          description: The photo url of the user.
          title: photoUrl
          type: string
        tenantId:
          description: "For multi-tenant use cases, in order to construct sign-in\
            \ URL with the correct IDP parameters, Firebear needs to know which Tenant\
            \ to retrieve IDP configs from."
          title: tenantId
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          format: uint64
          title: tenantProjectNumber
          type: string
      title: IdentitytoolkitRelyingpartySignupNewUserRequest
      type: object
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      description: Request to upload user account in batch.
      example:
        cpuMemCost: 6
        signerKey: signerKey
        memoryCost: 5
        saltSeparator: saltSeparator
        targetProjectId: targetProjectId
        parallelization: 5
        blockSize: 0
        users:
        - salt: salt
          validSince: validSince
          providerUserInfo:
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          displayName: displayName
          customAuth: true
          screenName: screenName
          localId: localId
          version: 6
          passwordHash: passwordHash
          createdAt: createdAt
          emailVerified: true
          passwordUpdatedAt: 0.8008281904610115
          photoUrl: photoUrl
          lastLoginAt: lastLoginAt
          phoneNumber: phoneNumber
          disabled: true
          rawPassword: rawPassword
          email: email
          customAttributes: customAttributes
        - salt: salt
          validSince: validSince
          providerUserInfo:
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          - photoUrl: photoUrl
            phoneNumber: phoneNumber
            displayName: displayName
            federatedId: federatedId
            providerId: providerId
            rawId: rawId
            screenName: screenName
            email: email
          displayName: displayName
          customAuth: true
          screenName: screenName
          localId: localId
          version: 6
          passwordHash: passwordHash
          createdAt: createdAt
          emailVerified: true
          passwordUpdatedAt: 0.8008281904610115
          photoUrl: photoUrl
          lastLoginAt: lastLoginAt
          phoneNumber: phoneNumber
          disabled: true
          rawPassword: rawPassword
          email: email
          customAttributes: customAttributes
        delegatedProjectNumber: delegatedProjectNumber
        allowOverwrite: true
        sanityCheck: true
        dkLen: 1
        hashAlgorithm: hashAlgorithm
        rounds: 2
      properties:
        allowOverwrite:
          description: Whether allow overwrite existing account when user local_id
            exists.
          title: allowOverwrite
          type: boolean
        blockSize:
          format: int32
          title: blockSize
          type: integer
        cpuMemCost:
          description: The following 4 fields are for standard scrypt algorithm.
          format: int32
          title: cpuMemCost
          type: integer
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        dkLen:
          format: int32
          title: dkLen
          type: integer
        hashAlgorithm:
          description: The password hash algorithm.
          title: hashAlgorithm
          type: string
        memoryCost:
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
          format: int32
          title: memoryCost
          type: integer
        parallelization:
          format: int32
          title: parallelization
          type: integer
        rounds:
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          format: int32
          title: rounds
          type: integer
        saltSeparator:
          description: The salt separator.
          format: byte
          title: saltSeparator
          type: string
        sanityCheck:
          description: "If true, backend will do sanity check(including duplicate\
            \ email and federated id) when uploading account."
          title: sanityCheck
          type: boolean
        signerKey:
          description: The key for to hash the password.
          format: byte
          title: signerKey
          type: string
        targetProjectId:
          description: Specify which project (field value is actually project id)
            to operate. Only used when provided credential.
          title: targetProjectId
          type: string
        users:
          description: The account info to be stored.
          items:
            $ref: '#/components/schemas/UserInfo'
          title: users
          type: array
      title: IdentitytoolkitRelyingpartyUploadAccountRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      description: Request to verify the IDP assertion.
      example:
        pendingIdToken: pendingIdToken
        returnIdpCredential: true
        tenantProjectNumber: tenantProjectNumber
        autoCreate: true
        requestUri: requestUri
        sessionId: sessionId
        returnSecureToken: true
        instanceId: instanceId
        postBody: postBody
        delegatedProjectNumber: delegatedProjectNumber
        returnRefreshToken: true
        idToken: idToken
        tenantId: tenantId
      properties:
        autoCreate:
          description: "When it's true, automatically creates a new account if the\
            \ user doesn't exist. When it's false, allows existing user to sign in\
            \ normally and throws exception if the user doesn't exist."
          title: autoCreate
          type: boolean
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          title: idToken
          type: string
        instanceId:
          description: Instance id token of the app.
          title: instanceId
          type: string
        pendingIdToken:
          description: The GITKit token for the non-trusted IDP pending to be confirmed
            by the user.
          title: pendingIdToken
          type: string
        postBody:
          description: The post body if the request is a HTTP POST.
          title: postBody
          type: string
        requestUri:
          description: The URI to which the IDP redirects the user back. It may contain
            federated login result params added by the IDP.
          title: requestUri
          type: string
        returnIdpCredential:
          description: Whether return 200 and IDP credential rather than throw exception
            when federated id is already linked.
          title: returnIdpCredential
          type: boolean
        returnRefreshToken:
          description: Whether to return refresh tokens.
          title: returnRefreshToken
          type: boolean
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit
            token.
          title: returnSecureToken
          type: boolean
        sessionId:
          description: "Session ID, which should match the one in previous createAuthUri\
            \ request."
          title: sessionId
          type: string
        tenantId:
          description: "For multi-tenant use cases, in order to construct sign-in\
            \ URL with the correct IDP parameters, Firebear needs to know which Tenant\
            \ to retrieve IDP configs from."
          title: tenantId
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          format: uint64
          title: tenantProjectNumber
          type: string
      title: IdentitytoolkitRelyingpartyVerifyAssertionRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      description: Request to verify a custom token
      example:
        instanceId: instanceId
        delegatedProjectNumber: delegatedProjectNumber
        returnSecureToken: true
        token: token
      properties:
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        instanceId:
          description: Instance id token of the app.
          title: instanceId
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit
            token.
          title: returnSecureToken
          type: boolean
        token:
          description: The custom token to verify
          title: token
          type: string
      title: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      description: Request to verify the password.
      example:
        captchaResponse: captchaResponse
        password: password
        instanceId: instanceId
        pendingIdToken: pendingIdToken
        captchaChallenge: captchaChallenge
        delegatedProjectNumber: delegatedProjectNumber
        idToken: idToken
        tenantId: tenantId
        tenantProjectNumber: tenantProjectNumber
        email: email
        returnSecureToken: true
      properties:
        captchaChallenge:
          description: The captcha challenge.
          title: captchaChallenge
          type: string
        captchaResponse:
          description: Response to the captcha.
          title: captchaResponse
          type: string
        delegatedProjectNumber:
          description: GCP project number of the requesting delegated app. Currently
            only intended for Firebase V1 migration.
          format: int64
          title: delegatedProjectNumber
          type: string
        email:
          description: The email of the user.
          title: email
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          title: idToken
          type: string
        instanceId:
          description: Instance id token of the app.
          title: instanceId
          type: string
        password:
          description: The password inputed by the user.
          title: password
          type: string
        pendingIdToken:
          description: "The GITKit token for the non-trusted IDP, which is to be confirmed\
            \ by the user."
          title: pendingIdToken
          type: string
        returnSecureToken:
          description: Whether return sts id token and refresh token instead of gitkit
            token.
          title: returnSecureToken
          type: boolean
        tenantId:
          description: "For multi-tenant use cases, in order to construct sign-in\
            \ URL with the correct IDP parameters, Firebear needs to know which Tenant\
            \ to retrieve IDP configs from."
          title: tenantId
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          format: uint64
          title: tenantProjectNumber
          type: string
      title: IdentitytoolkitRelyingpartyVerifyPasswordRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      description: Request for Identitytoolkit-VerifyPhoneNumber
      example:
        sessionInfo: sessionInfo
        temporaryProof: temporaryProof
        code: code
        phoneNumber: phoneNumber
        verificationProof: verificationProof
        idToken: idToken
        operation: operation
      properties:
        code:
          title: code
          type: string
        idToken:
          title: idToken
          type: string
        operation:
          title: operation
          type: string
        phoneNumber:
          title: phoneNumber
          type: string
        sessionInfo:
          description: The session info previously returned by IdentityToolkit-SendVerificationCode.
          title: sessionInfo
          type: string
        temporaryProof:
          title: temporaryProof
          type: string
        verificationProof:
          title: verificationProof
          type: string
      title: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      description: Response for Identitytoolkit-VerifyPhoneNumber
      example:
        expiresIn: expiresIn
        temporaryProof: temporaryProof
        verificationProofExpiresIn: verificationProofExpiresIn
        phoneNumber: phoneNumber
        verificationProof: verificationProof
        idToken: idToken
        temporaryProofExpiresIn: temporaryProofExpiresIn
        isNewUser: true
        localId: localId
        refreshToken: refreshToken
      properties:
        expiresIn:
          format: int64
          title: expiresIn
          type: string
        idToken:
          title: idToken
          type: string
        isNewUser:
          title: isNewUser
          type: boolean
        localId:
          title: localId
          type: string
        phoneNumber:
          title: phoneNumber
          type: string
        refreshToken:
          title: refreshToken
          type: string
        temporaryProof:
          title: temporaryProof
          type: string
        temporaryProofExpiresIn:
          format: int64
          title: temporaryProofExpiresIn
          type: string
        verificationProof:
          title: verificationProof
          type: string
        verificationProofExpiresIn:
          format: int64
          title: verificationProofExpiresIn
          type: string
      title: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      type: object
    IdpConfig:
      description: Template for a single idp configuration.
      example:
        clientId: clientId
        provider: provider
        whitelistedAudiences:
        - whitelistedAudiences
        - whitelistedAudiences
        secret: secret
        experimentPercent: 0
        enabled: true
      properties:
        clientId:
          description: OAuth2 client ID.
          title: clientId
          type: string
        enabled:
          description: Whether this IDP is enabled.
          title: enabled
          type: boolean
        experimentPercent:
          description: Percent of users who will be prompted/redirected federated
            login for this IDP.
          format: int32
          title: experimentPercent
          type: integer
        provider:
          description: OAuth2 provider.
          title: provider
          type: string
        secret:
          description: OAuth2 client secret.
          title: secret
          type: string
        whitelistedAudiences:
          description: Whitelisted client IDs for audience check.
          items:
            type: string
          title: whitelistedAudiences
          type: array
      title: IdpConfig
      type: object
    Relyingparty:
      description: "Request of getting a code for user confirmation (reset password,\
        \ change email etc.)"
      example:
        requestType: requestType
        kind: identitytoolkit#relyingparty
        iOSAppStoreId: iOSAppStoreId
        canHandleCodeInApp: true
        continueUrl: continueUrl
        androidInstallApp: true
        androidPackageName: androidPackageName
        captchaResp: captchaResp
        idToken: idToken
        challenge: challenge
        userIp: userIp
        newEmail: newEmail
        iOSBundleId: iOSBundleId
        androidMinimumVersion: androidMinimumVersion
        email: email
      properties:
        androidInstallApp:
          description: whether or not to install the android app on the device where
            the link is opened
          title: androidInstallApp
          type: boolean
        androidMinimumVersion:
          description: minimum version of the app. if the version on the device is
            lower than this version then the user is taken to the play store to upgrade
            the app
          title: androidMinimumVersion
          type: string
        androidPackageName:
          description: android package name of the android app to handle the action
            code
          title: androidPackageName
          type: string
        canHandleCodeInApp:
          description: whether or not the app can handle the oob code without first
            going to web
          title: canHandleCodeInApp
          type: boolean
        captchaResp:
          description: The recaptcha response from the user.
          title: captchaResp
          type: string
        challenge:
          description: The recaptcha challenge presented to the user.
          title: challenge
          type: string
        continueUrl:
          description: The url to continue to the Gitkit app
          title: continueUrl
          type: string
        email:
          description: The email of the user.
          title: email
          type: string
        iOSAppStoreId:
          description: iOS app store id to download the app if it's not already installed
          title: iOSAppStoreId
          type: string
        iOSBundleId:
          description: the iOS bundle id of iOS app to handle the action code
          title: iOSBundleId
          type: string
        idToken:
          description: The user's Gitkit login token for email change.
          title: idToken
          type: string
        kind:
          default: identitytoolkit#relyingparty
          description: The fixed string "identitytoolkit#relyingparty".
          title: kind
          type: string
        newEmail:
          description: The new email if the code is for email change.
          title: newEmail
          type: string
        requestType:
          description: The request type.
          title: requestType
          type: string
        userIp:
          description: The IP address of the user.
          title: userIp
          type: string
      title: Relyingparty
      type: object
    ResetPasswordResponse:
      description: Response of resetting the password.
      example:
        requestType: requestType
        kind: identitytoolkit#ResetPasswordResponse
        newEmail: newEmail
        email: email
      properties:
        email:
          description: "The user's email. If the out-of-band code is for email recovery,\
            \ the user's original email."
          title: email
          type: string
        kind:
          default: identitytoolkit#ResetPasswordResponse
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          title: kind
          type: string
        newEmail:
          description: "If the out-of-band code is for email recovery, the user's\
            \ new email."
          title: newEmail
          type: string
        requestType:
          description: The request type.
          title: requestType
          type: string
      title: ResetPasswordResponse
      type: object
    SetAccountInfoResponse:
      description: Respone of setting the account information.
      example:
        expiresIn: expiresIn
        emailVerified: true
        photoUrl: photoUrl
        providerUserInfo:
        - photoUrl: photoUrl
          displayName: displayName
          federatedId: federatedId
          providerId: providerId
        - photoUrl: photoUrl
          displayName: displayName
          federatedId: federatedId
          providerId: providerId
        displayName: displayName
        kind: identitytoolkit#SetAccountInfoResponse
        idToken: idToken
        newEmail: newEmail
        localId: localId
        email: email
        passwordHash: passwordHash
        refreshToken: refreshToken
      properties:
        displayName:
          description: The name of the user.
          title: displayName
          type: string
        email:
          description: The email of the user.
          title: email
          type: string
        emailVerified:
          description: If email has been verified.
          title: emailVerified
          type: boolean
        expiresIn:
          description: "If idToken is STS id token, then this field will be expiration\
            \ time of STS id token in seconds."
          format: int64
          title: expiresIn
          type: string
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          title: idToken
          type: string
        kind:
          default: identitytoolkit#SetAccountInfoResponse
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          title: kind
          type: string
        localId:
          description: The local ID of the user.
          title: localId
          type: string
        newEmail:
          description: The new email the user attempts to change to.
          title: newEmail
          type: string
        passwordHash:
          description: The user's hashed password.
          format: byte
          title: passwordHash
          type: string
        photoUrl:
          description: The photo url of the user.
          title: photoUrl
          type: string
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          items:
            $ref: '#/components/schemas/SetAccountInfoResponse_providerUserInfo_inner'
          title: providerUserInfo
          type: array
        refreshToken:
          description: "If idToken is STS id token, then this field will be refresh\
            \ token."
          title: refreshToken
          type: string
      title: SetAccountInfoResponse
      type: object
    SignupNewUserResponse:
      description: "Response of signing up new user, creating anonymous user or anonymous\
        \ user reauth."
      example:
        expiresIn: expiresIn
        displayName: displayName
        kind: identitytoolkit#SignupNewUserResponse
        idToken: idToken
        localId: localId
        email: email
        refreshToken: refreshToken
      properties:
        displayName:
          description: The name of the user.
          title: displayName
          type: string
        email:
          description: The email of the user.
          title: email
          type: string
        expiresIn:
          description: "If idToken is STS id token, then this field will be expiration\
            \ time of STS id token in seconds."
          format: int64
          title: expiresIn
          type: string
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          title: idToken
          type: string
        kind:
          default: identitytoolkit#SignupNewUserResponse
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
          title: kind
          type: string
        localId:
          description: The RP local ID of the user.
          title: localId
          type: string
        refreshToken:
          description: "If idToken is STS id token, then this field will be refresh\
            \ token."
          title: refreshToken
          type: string
      title: SignupNewUserResponse
      type: object
    UploadAccountResponse:
      description: Respone of uploading accounts in batch.
      example:
        kind: identitytoolkit#UploadAccountResponse
        error:
        - index: 0
          message: message
        - index: 0
          message: message
      properties:
        error:
          description: The error encountered while processing the account info.
          items:
            $ref: '#/components/schemas/UploadAccountResponse_error_inner'
          title: error
          type: array
        kind:
          default: identitytoolkit#UploadAccountResponse
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          title: kind
          type: string
      title: UploadAccountResponse
      type: object
    UserInfo:
      description: Template for an individual account info.
      example:
        salt: salt
        validSince: validSince
        providerUserInfo:
        - photoUrl: photoUrl
          phoneNumber: phoneNumber
          displayName: displayName
          federatedId: federatedId
          providerId: providerId
          rawId: rawId
          screenName: screenName
          email: email
        - photoUrl: photoUrl
          phoneNumber: phoneNumber
          displayName: displayName
          federatedId: federatedId
          providerId: providerId
          rawId: rawId
          screenName: screenName
          email: email
        displayName: displayName
        customAuth: true
        screenName: screenName
        localId: localId
        version: 6
        passwordHash: passwordHash
        createdAt: createdAt
        emailVerified: true
        passwordUpdatedAt: 0.8008281904610115
        photoUrl: photoUrl
        lastLoginAt: lastLoginAt
        phoneNumber: phoneNumber
        disabled: true
        rawPassword: rawPassword
        email: email
        customAttributes: customAttributes
      properties:
        createdAt:
          description: User creation timestamp.
          format: int64
          title: createdAt
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          title: customAttributes
          type: string
        customAuth:
          description: Whether the user is authenticated by the developer.
          title: customAuth
          type: boolean
        disabled:
          description: Whether the user is disabled.
          title: disabled
          type: boolean
        displayName:
          description: The name of the user.
          title: displayName
          type: string
        email:
          description: The email of the user.
          title: email
          type: string
        emailVerified:
          description: Whether the email has been verified.
          title: emailVerified
          type: boolean
        lastLoginAt:
          description: last login timestamp.
          format: int64
          title: lastLoginAt
          type: string
        localId:
          description: The local ID of the user.
          title: localId
          type: string
        passwordHash:
          description: The user's hashed password.
          format: byte
          title: passwordHash
          type: string
        passwordUpdatedAt:
          description: The timestamp when the password was last updated.
          format: double
          title: passwordUpdatedAt
          type: number
        phoneNumber:
          description: User's phone number.
          title: phoneNumber
          type: string
        photoUrl:
          description: The URL of the user profile photo.
          title: photoUrl
          type: string
        providerUserInfo:
          description: The IDP of the user.
          items:
            $ref: '#/components/schemas/UserInfo_providerUserInfo_inner'
          title: providerUserInfo
          type: array
        rawPassword:
          description: The user's plain text password.
          title: rawPassword
          type: string
        salt:
          description: The user's password salt.
          format: byte
          title: salt
          type: string
        screenName:
          description: User's screen name at Twitter or login name at Github.
          title: screenName
          type: string
        validSince:
          description: Timestamp in seconds for valid login token.
          format: int64
          title: validSince
          type: string
        version:
          description: Version of the user's password.
          format: int32
          title: version
          type: integer
      title: UserInfo
      type: object
    VerifyAssertionResponse:
      description: Response of verifying the IDP assertion.
      example:
        lastName: lastName
        displayName: displayName
        inputEmail: inputEmail
        oauthScope: oauthScope
        oauthAuthorizationCode: oauthAuthorizationCode
        language: language
        screenName: screenName
        localId: localId
        verifiedProvider:
        - verifiedProvider
        - verifiedProvider
        rawUserInfo: rawUserInfo
        expiresIn: expiresIn
        needEmail: true
        photoUrl: photoUrl
        oauthAccessToken: oauthAccessToken
        originalEmail: originalEmail
        emailRecycled: true
        providerId: providerId
        appScheme: appScheme
        context: context
        action: action
        oauthTokenSecret: oauthTokenSecret
        oauthIdToken: oauthIdToken
        email: email
        kind: identitytoolkit#VerifyAssertionResponse
        nickName: nickName
        errorMessage: errorMessage
        fullName: fullName
        oauthExpireIn: 0
        timeZone: timeZone
        dateOfBirth: dateOfBirth
        oauthRequestToken: oauthRequestToken
        isNewUser: true
        appInstallationUrl: appInstallationUrl
        emailVerified: true
        firstName: firstName
        federatedId: federatedId
        idToken: idToken
        needConfirmation: true
        refreshToken: refreshToken
      properties:
        action:
          description: The action code.
          title: action
          type: string
        appInstallationUrl:
          description: URL for OTA app installation.
          title: appInstallationUrl
          type: string
        appScheme:
          description: The custom scheme used by mobile app.
          title: appScheme
          type: string
        context:
          description: The opaque value used by the client to maintain context info
            between the authentication request and the IDP callback.
          title: context
          type: string
        dateOfBirth:
          description: The birth date of the IdP account.
          title: dateOfBirth
          type: string
        displayName:
          description: The display name of the user.
          title: displayName
          type: string
        email:
          description: "The email returned by the IdP. NOTE: The federated login user\
            \ may not own the email."
          title: email
          type: string
        emailRecycled:
          description: It's true if the email is recycled.
          title: emailRecycled
          type: boolean
        emailVerified:
          description: The value is true if the IDP is also the email provider. It
            means the user owns the email.
          title: emailVerified
          type: boolean
        errorMessage:
          description: Client error code.
          title: errorMessage
          type: string
        expiresIn:
          description: "If idToken is STS id token, then this field will be expiration\
            \ time of STS id token in seconds."
          format: int64
          title: expiresIn
          type: string
        federatedId:
          description: The unique ID identifies the IdP account.
          title: federatedId
          type: string
        firstName:
          description: The first name of the user.
          title: firstName
          type: string
        fullName:
          description: The full name of the user.
          title: fullName
          type: string
        idToken:
          description: The ID token.
          title: idToken
          type: string
        inputEmail:
          description: It's the identifier param in the createAuthUri request if the
            identifier is an email. It can be used to check whether the user input
            email is different from the asserted email.
          title: inputEmail
          type: string
        isNewUser:
          description: "True if it's a new user sign-in, false if it's a returning\
            \ user."
          title: isNewUser
          type: boolean
        kind:
          default: identitytoolkit#VerifyAssertionResponse
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          title: kind
          type: string
        language:
          description: The language preference of the user.
          title: language
          type: string
        lastName:
          description: The last name of the user.
          title: lastName
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account
            identified by the federated ID.
          title: localId
          type: string
        needConfirmation:
          description: Whether the assertion is from a non-trusted IDP and need account
            linking confirmation.
          title: needConfirmation
          type: boolean
        needEmail:
          description: Whether need client to supply email to complete the federated
            login flow.
          title: needEmail
          type: boolean
        nickName:
          description: The nick name of the user.
          title: nickName
          type: string
        oauthAccessToken:
          description: The OAuth2 access token.
          title: oauthAccessToken
          type: string
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          title: oauthAuthorizationCode
          type: string
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
          title: oauthExpireIn
          type: integer
        oauthIdToken:
          description: The OIDC id token.
          title: oauthIdToken
          type: string
        oauthRequestToken:
          description: The user approved request token for the OpenID OAuth extension.
          title: oauthRequestToken
          type: string
        oauthScope:
          description: The scope for the OpenID OAuth extension.
          title: oauthScope
          type: string
        oauthTokenSecret:
          description: The OAuth1 access token secret.
          title: oauthTokenSecret
          type: string
        originalEmail:
          description: The original email stored in the mapping storage. It's returned
            when the federated ID is associated to a different email.
          title: originalEmail
          type: string
        photoUrl:
          description: The URI of the public accessible profiel picture.
          title: photoUrl
          type: string
        providerId:
          description: "The IdP ID. For white listed IdPs it's a short domain name\
            \ e.g. google.com, aol.com, live.net and yahoo.com. If the \"providerId\"\
            \ param is set to OpenID OP identifer other than the whilte listed IdPs\
            \ the OP identifier is returned. If the \"identifier\" param is federated\
            \ ID in the createAuthUri request. The domain part of the federated ID\
            \ is returned."
          title: providerId
          type: string
        rawUserInfo:
          description: Raw IDP-returned user info.
          title: rawUserInfo
          type: string
        refreshToken:
          description: "If idToken is STS id token, then this field will be refresh\
            \ token."
          title: refreshToken
          type: string
        screenName:
          description: The screen_name of a Twitter user or the login name at Github.
          title: screenName
          type: string
        timeZone:
          description: The timezone of the user.
          title: timeZone
          type: string
        verifiedProvider:
          description: "When action is 'map', contains the idps which can be used\
            \ for confirmation."
          items:
            type: string
          title: verifiedProvider
          type: array
      title: VerifyAssertionResponse
      type: object
    VerifyCustomTokenResponse:
      description: Response from verifying a custom token
      example:
        expiresIn: expiresIn
        kind: identitytoolkit#VerifyCustomTokenResponse
        idToken: idToken
        isNewUser: true
        refreshToken: refreshToken
      properties:
        expiresIn:
          description: "If idToken is STS id token, then this field will be expiration\
            \ time of STS id token in seconds."
          format: int64
          title: expiresIn
          type: string
        idToken:
          description: The GITKit token for authenticated user.
          title: idToken
          type: string
        isNewUser:
          description: "True if it's a new user sign-in, false if it's a returning\
            \ user."
          title: isNewUser
          type: boolean
        kind:
          default: identitytoolkit#VerifyCustomTokenResponse
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          title: kind
          type: string
        refreshToken:
          description: "If idToken is STS id token, then this field will be refresh\
            \ token."
          title: refreshToken
          type: string
      title: VerifyCustomTokenResponse
      type: object
    VerifyPasswordResponse:
      description: Request of verifying the password.
      example:
        expiresIn: expiresIn
        photoUrl: photoUrl
        oauthAccessToken: oauthAccessToken
        displayName: displayName
        kind: identitytoolkit#VerifyPasswordResponse
        idToken: idToken
        oauthAuthorizationCode: oauthAuthorizationCode
        oauthExpireIn: 0
        registered: true
        localId: localId
        email: email
        refreshToken: refreshToken
      properties:
        displayName:
          description: The name of the user.
          title: displayName
          type: string
        email:
          description: "The email returned by the IdP. NOTE: The federated login user\
            \ may not own the email."
          title: email
          type: string
        expiresIn:
          description: "If idToken is STS id token, then this field will be expiration\
            \ time of STS id token in seconds."
          format: int64
          title: expiresIn
          type: string
        idToken:
          description: The GITKit token for authenticated user.
          title: idToken
          type: string
        kind:
          default: identitytoolkit#VerifyPasswordResponse
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          title: kind
          type: string
        localId:
          description: The RP local ID if it's already been mapped to the IdP account
            identified by the federated ID.
          title: localId
          type: string
        oauthAccessToken:
          description: The OAuth2 access token.
          title: oauthAccessToken
          type: string
        oauthAuthorizationCode:
          description: The OAuth2 authorization code.
          title: oauthAuthorizationCode
          type: string
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          format: int32
          title: oauthExpireIn
          type: integer
        photoUrl:
          description: The URI of the user's photo at IdP
          title: photoUrl
          type: string
        refreshToken:
          description: "If idToken is STS id token, then this field will be refresh\
            \ token."
          title: refreshToken
          type: string
        registered:
          description: Whether the email is registered.
          title: registered
          type: boolean
      title: VerifyPasswordResponse
      type: object
    SetAccountInfoResponse_providerUserInfo_inner:
      example:
        photoUrl: photoUrl
        displayName: displayName
        federatedId: federatedId
        providerId: providerId
      properties:
        displayName:
          description: The user's display name at the IDP.
          title: displayName
          type: string
        federatedId:
          description: User's identifier at IDP.
          title: federatedId
          type: string
        photoUrl:
          description: The user's photo url at the IDP.
          title: photoUrl
          type: string
        providerId:
          description: "The IdP ID. For whitelisted IdPs it's a short domain name,\
            \ e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID\
            \ IdPs it's the OP identifier."
          title: providerId
          type: string
      title: SetAccountInfoResponse_providerUserInfo_inner
      type: object
    UploadAccountResponse_error_inner:
      example:
        index: 0
        message: message
      properties:
        index:
          description: "The index of the malformed account, starting from 0."
          format: int32
          title: index
          type: integer
        message:
          description: Detailed error message for the account info.
          title: message
          type: string
      title: UploadAccountResponse_error_inner
      type: object
    UserInfo_providerUserInfo_inner:
      example:
        photoUrl: photoUrl
        phoneNumber: phoneNumber
        displayName: displayName
        federatedId: federatedId
        providerId: providerId
        rawId: rawId
        screenName: screenName
        email: email
      properties:
        displayName:
          description: The user's display name at the IDP.
          title: displayName
          type: string
        email:
          description: User's email at IDP.
          title: email
          type: string
        federatedId:
          description: User's identifier at IDP.
          title: federatedId
          type: string
        phoneNumber:
          description: User's phone number.
          title: phoneNumber
          type: string
        photoUrl:
          description: The user's photo url at the IDP.
          title: photoUrl
          type: string
        providerId:
          description: "The IdP ID. For white listed IdPs it's a short domain name,\
            \ e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID\
            \ IdPs it's the OP identifier."
          title: providerId
          type: string
        rawId:
          description: User's raw identifier directly returned from IDP.
          title: rawId
          type: string
        screenName:
          description: User's screen name at Twitter or login name at Github.
          title: screenName
          type: string
      title: UserInfo_providerUserInfo_inner
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data
              across Google Cloud Platform services
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data
              across Google Cloud Platform services
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
