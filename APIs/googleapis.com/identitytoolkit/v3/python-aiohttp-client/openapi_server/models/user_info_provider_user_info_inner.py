# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserInfoProviderUserInfoInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, email: str=None, federated_id: str=None, phone_number: str=None, photo_url: str=None, provider_id: str=None, raw_id: str=None, screen_name: str=None):
        """UserInfoProviderUserInfoInner - a model defined in OpenAPI

        :param display_name: The display_name of this UserInfoProviderUserInfoInner.
        :param email: The email of this UserInfoProviderUserInfoInner.
        :param federated_id: The federated_id of this UserInfoProviderUserInfoInner.
        :param phone_number: The phone_number of this UserInfoProviderUserInfoInner.
        :param photo_url: The photo_url of this UserInfoProviderUserInfoInner.
        :param provider_id: The provider_id of this UserInfoProviderUserInfoInner.
        :param raw_id: The raw_id of this UserInfoProviderUserInfoInner.
        :param screen_name: The screen_name of this UserInfoProviderUserInfoInner.
        """
        self.openapi_types = {
            'display_name': str,
            'email': str,
            'federated_id': str,
            'phone_number': str,
            'photo_url': str,
            'provider_id': str,
            'raw_id': str,
            'screen_name': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'email': 'email',
            'federated_id': 'federatedId',
            'phone_number': 'phoneNumber',
            'photo_url': 'photoUrl',
            'provider_id': 'providerId',
            'raw_id': 'rawId',
            'screen_name': 'screenName'
        }

        self._display_name = display_name
        self._email = email
        self._federated_id = federated_id
        self._phone_number = phone_number
        self._photo_url = photo_url
        self._provider_id = provider_id
        self._raw_id = raw_id
        self._screen_name = screen_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserInfoProviderUserInfoInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserInfo_providerUserInfo_inner of this UserInfoProviderUserInfoInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this UserInfoProviderUserInfoInner.

        The user's display name at the IDP.

        :return: The display_name of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UserInfoProviderUserInfoInner.

        The user's display name at the IDP.

        :param display_name: The display_name of this UserInfoProviderUserInfoInner.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def email(self):
        """Gets the email of this UserInfoProviderUserInfoInner.

        User's email at IDP.

        :return: The email of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserInfoProviderUserInfoInner.

        User's email at IDP.

        :param email: The email of this UserInfoProviderUserInfoInner.
        :type email: str
        """

        self._email = email

    @property
    def federated_id(self):
        """Gets the federated_id of this UserInfoProviderUserInfoInner.

        User's identifier at IDP.

        :return: The federated_id of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._federated_id

    @federated_id.setter
    def federated_id(self, federated_id):
        """Sets the federated_id of this UserInfoProviderUserInfoInner.

        User's identifier at IDP.

        :param federated_id: The federated_id of this UserInfoProviderUserInfoInner.
        :type federated_id: str
        """

        self._federated_id = federated_id

    @property
    def phone_number(self):
        """Gets the phone_number of this UserInfoProviderUserInfoInner.

        User's phone number.

        :return: The phone_number of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this UserInfoProviderUserInfoInner.

        User's phone number.

        :param phone_number: The phone_number of this UserInfoProviderUserInfoInner.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def photo_url(self):
        """Gets the photo_url of this UserInfoProviderUserInfoInner.

        The user's photo url at the IDP.

        :return: The photo_url of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this UserInfoProviderUserInfoInner.

        The user's photo url at the IDP.

        :param photo_url: The photo_url of this UserInfoProviderUserInfoInner.
        :type photo_url: str
        """

        self._photo_url = photo_url

    @property
    def provider_id(self):
        """Gets the provider_id of this UserInfoProviderUserInfoInner.

        The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.

        :return: The provider_id of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this UserInfoProviderUserInfoInner.

        The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.

        :param provider_id: The provider_id of this UserInfoProviderUserInfoInner.
        :type provider_id: str
        """

        self._provider_id = provider_id

    @property
    def raw_id(self):
        """Gets the raw_id of this UserInfoProviderUserInfoInner.

        User's raw identifier directly returned from IDP.

        :return: The raw_id of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._raw_id

    @raw_id.setter
    def raw_id(self, raw_id):
        """Sets the raw_id of this UserInfoProviderUserInfoInner.

        User's raw identifier directly returned from IDP.

        :param raw_id: The raw_id of this UserInfoProviderUserInfoInner.
        :type raw_id: str
        """

        self._raw_id = raw_id

    @property
    def screen_name(self):
        """Gets the screen_name of this UserInfoProviderUserInfoInner.

        User's screen name at Twitter or login name at Github.

        :return: The screen_name of this UserInfoProviderUserInfoInner.
        :rtype: str
        """
        return self._screen_name

    @screen_name.setter
    def screen_name(self, screen_name):
        """Sets the screen_name of this UserInfoProviderUserInfoInner.

        User's screen name at Twitter or login name at Github.

        :param screen_name: The screen_name of this UserInfoProviderUserInfoInner.
        :type screen_name: str
        """

        self._screen_name = screen_name
