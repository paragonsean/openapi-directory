# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartySetAccountInfoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, captcha_challenge: str=None, captcha_response: str=None, created_at: str=None, custom_attributes: str=None, delegated_project_number: str=None, delete_attribute: List[str]=None, delete_provider: List[str]=None, disable_user: bool=None, display_name: str=None, email: str=None, email_verified: bool=None, id_token: str=None, instance_id: str=None, last_login_at: str=None, local_id: str=None, oob_code: str=None, password: str=None, phone_number: str=None, photo_url: str=None, provider: List[str]=None, return_secure_token: bool=None, upgrade_to_federated_login: bool=None, valid_since: str=None):
        """IdentitytoolkitRelyingpartySetAccountInfoRequest - a model defined in OpenAPI

        :param captcha_challenge: The captcha_challenge of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param captcha_response: The captcha_response of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param created_at: The created_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param custom_attributes: The custom_attributes of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param delete_attribute: The delete_attribute of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param delete_provider: The delete_provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param disable_user: The disable_user of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param display_name: The display_name of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param email: The email of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param email_verified: The email_verified of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param id_token: The id_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param last_login_at: The last_login_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param local_id: The local_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param oob_code: The oob_code of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param password: The password of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param phone_number: The phone_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param photo_url: The photo_url of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param provider: The provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param upgrade_to_federated_login: The upgrade_to_federated_login of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :param valid_since: The valid_since of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        """
        self.openapi_types = {
            'captcha_challenge': str,
            'captcha_response': str,
            'created_at': str,
            'custom_attributes': str,
            'delegated_project_number': str,
            'delete_attribute': List[str],
            'delete_provider': List[str],
            'disable_user': bool,
            'display_name': str,
            'email': str,
            'email_verified': bool,
            'id_token': str,
            'instance_id': str,
            'last_login_at': str,
            'local_id': str,
            'oob_code': str,
            'password': str,
            'phone_number': str,
            'photo_url': str,
            'provider': List[str],
            'return_secure_token': bool,
            'upgrade_to_federated_login': bool,
            'valid_since': str
        }

        self.attribute_map = {
            'captcha_challenge': 'captchaChallenge',
            'captcha_response': 'captchaResponse',
            'created_at': 'createdAt',
            'custom_attributes': 'customAttributes',
            'delegated_project_number': 'delegatedProjectNumber',
            'delete_attribute': 'deleteAttribute',
            'delete_provider': 'deleteProvider',
            'disable_user': 'disableUser',
            'display_name': 'displayName',
            'email': 'email',
            'email_verified': 'emailVerified',
            'id_token': 'idToken',
            'instance_id': 'instanceId',
            'last_login_at': 'lastLoginAt',
            'local_id': 'localId',
            'oob_code': 'oobCode',
            'password': 'password',
            'phone_number': 'phoneNumber',
            'photo_url': 'photoUrl',
            'provider': 'provider',
            'return_secure_token': 'returnSecureToken',
            'upgrade_to_federated_login': 'upgradeToFederatedLogin',
            'valid_since': 'validSince'
        }

        self._captcha_challenge = captcha_challenge
        self._captcha_response = captcha_response
        self._created_at = created_at
        self._custom_attributes = custom_attributes
        self._delegated_project_number = delegated_project_number
        self._delete_attribute = delete_attribute
        self._delete_provider = delete_provider
        self._disable_user = disable_user
        self._display_name = display_name
        self._email = email
        self._email_verified = email_verified
        self._id_token = id_token
        self._instance_id = instance_id
        self._last_login_at = last_login_at
        self._local_id = local_id
        self._oob_code = oob_code
        self._password = password
        self._phone_number = phone_number
        self._photo_url = photo_url
        self._provider = provider
        self._return_secure_token = return_secure_token
        self._upgrade_to_federated_login = upgrade_to_federated_login
        self._valid_since = valid_since

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartySetAccountInfoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartySetAccountInfoRequest of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def captcha_challenge(self):
        """Gets the captcha_challenge of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The captcha challenge.

        :return: The captcha_challenge of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._captcha_challenge

    @captcha_challenge.setter
    def captcha_challenge(self, captcha_challenge):
        """Sets the captcha_challenge of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The captcha challenge.

        :param captcha_challenge: The captcha_challenge of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type captcha_challenge: str
        """

        self._captcha_challenge = captcha_challenge

    @property
    def captcha_response(self):
        """Gets the captcha_response of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Response to the captcha.

        :return: The captcha_response of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._captcha_response

    @captcha_response.setter
    def captcha_response(self, captcha_response):
        """Sets the captcha_response of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Response to the captcha.

        :param captcha_response: The captcha_response of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type captcha_response: str
        """

        self._captcha_response = captcha_response

    @property
    def created_at(self):
        """Gets the created_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The timestamp when the account is created.

        :return: The created_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The timestamp when the account is created.

        :param created_at: The created_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def custom_attributes(self):
        """Gets the custom_attributes of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The custom attributes to be set in the user's id token.

        :return: The custom_attributes of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes):
        """Sets the custom_attributes of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The custom attributes to be set in the user's id token.

        :param custom_attributes: The custom_attributes of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type custom_attributes: str
        """

        self._custom_attributes = custom_attributes

    @property
    def delegated_project_number(self):
        """Gets the delegated_project_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :return: The delegated_project_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._delegated_project_number

    @delegated_project_number.setter
    def delegated_project_number(self, delegated_project_number):
        """Sets the delegated_project_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type delegated_project_number: str
        """

        self._delegated_project_number = delegated_project_number

    @property
    def delete_attribute(self):
        """Gets the delete_attribute of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The attributes users request to delete.

        :return: The delete_attribute of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: List[str]
        """
        return self._delete_attribute

    @delete_attribute.setter
    def delete_attribute(self, delete_attribute):
        """Sets the delete_attribute of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The attributes users request to delete.

        :param delete_attribute: The delete_attribute of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type delete_attribute: List[str]
        """

        self._delete_attribute = delete_attribute

    @property
    def delete_provider(self):
        """Gets the delete_provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The IDPs the user request to delete.

        :return: The delete_provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: List[str]
        """
        return self._delete_provider

    @delete_provider.setter
    def delete_provider(self, delete_provider):
        """Sets the delete_provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The IDPs the user request to delete.

        :param delete_provider: The delete_provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type delete_provider: List[str]
        """

        self._delete_provider = delete_provider

    @property
    def disable_user(self):
        """Gets the disable_user of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Whether to disable the user.

        :return: The disable_user of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: bool
        """
        return self._disable_user

    @disable_user.setter
    def disable_user(self, disable_user):
        """Sets the disable_user of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Whether to disable the user.

        :param disable_user: The disable_user of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type disable_user: bool
        """

        self._disable_user = disable_user

    @property
    def display_name(self):
        """Gets the display_name of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The name of the user.

        :return: The display_name of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The name of the user.

        :param display_name: The display_name of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def email(self):
        """Gets the email of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The email of the user.

        :return: The email of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The email of the user.

        :param email: The email of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type email: str
        """

        self._email = email

    @property
    def email_verified(self):
        """Gets the email_verified of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Mark the email as verified or not.

        :return: The email_verified of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: bool
        """
        return self._email_verified

    @email_verified.setter
    def email_verified(self, email_verified):
        """Sets the email_verified of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Mark the email as verified or not.

        :param email_verified: The email_verified of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type email_verified: bool
        """

        self._email_verified = email_verified

    @property
    def id_token(self):
        """Gets the id_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The GITKit token of the authenticated user.

        :return: The id_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._id_token

    @id_token.setter
    def id_token(self, id_token):
        """Sets the id_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The GITKit token of the authenticated user.

        :param id_token: The id_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type id_token: str
        """

        self._id_token = id_token

    @property
    def instance_id(self):
        """Gets the instance_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Instance id token of the app.

        :return: The instance_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Instance id token of the app.

        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def last_login_at(self):
        """Gets the last_login_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Last login timestamp.

        :return: The last_login_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._last_login_at

    @last_login_at.setter
    def last_login_at(self, last_login_at):
        """Sets the last_login_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Last login timestamp.

        :param last_login_at: The last_login_at of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type last_login_at: str
        """

        self._last_login_at = last_login_at

    @property
    def local_id(self):
        """Gets the local_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The local ID of the user.

        :return: The local_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The local ID of the user.

        :param local_id: The local_id of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def oob_code(self):
        """Gets the oob_code of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The out-of-band code of the change email request.

        :return: The oob_code of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._oob_code

    @oob_code.setter
    def oob_code(self, oob_code):
        """Sets the oob_code of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The out-of-band code of the change email request.

        :param oob_code: The oob_code of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type oob_code: str
        """

        self._oob_code = oob_code

    @property
    def password(self):
        """Gets the password of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The new password of the user.

        :return: The password of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The new password of the user.

        :param password: The password of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type password: str
        """

        self._password = password

    @property
    def phone_number(self):
        """Gets the phone_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Privileged caller can update user with specified phone number.

        :return: The phone_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Privileged caller can update user with specified phone number.

        :param phone_number: The phone_number of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def photo_url(self):
        """Gets the photo_url of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The photo url of the user.

        :return: The photo_url of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The photo url of the user.

        :param photo_url: The photo_url of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type photo_url: str
        """

        self._photo_url = photo_url

    @property
    def provider(self):
        """Gets the provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The associated IDPs of the user.

        :return: The provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: List[str]
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        The associated IDPs of the user.

        :param provider: The provider of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type provider: List[str]
        """

        self._provider = provider

    @property
    def return_secure_token(self):
        """Gets the return_secure_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :return: The return_secure_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: bool
        """
        return self._return_secure_token

    @return_secure_token.setter
    def return_secure_token(self, return_secure_token):
        """Sets the return_secure_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type return_secure_token: bool
        """

        self._return_secure_token = return_secure_token

    @property
    def upgrade_to_federated_login(self):
        """Gets the upgrade_to_federated_login of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Mark the user to upgrade to federated login.

        :return: The upgrade_to_federated_login of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: bool
        """
        return self._upgrade_to_federated_login

    @upgrade_to_federated_login.setter
    def upgrade_to_federated_login(self, upgrade_to_federated_login):
        """Sets the upgrade_to_federated_login of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Mark the user to upgrade to federated login.

        :param upgrade_to_federated_login: The upgrade_to_federated_login of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type upgrade_to_federated_login: bool
        """

        self._upgrade_to_federated_login = upgrade_to_federated_login

    @property
    def valid_since(self):
        """Gets the valid_since of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Timestamp in seconds for valid login token.

        :return: The valid_since of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :rtype: str
        """
        return self._valid_since

    @valid_since.setter
    def valid_since(self, valid_since):
        """Sets the valid_since of this IdentitytoolkitRelyingpartySetAccountInfoRequest.

        Timestamp in seconds for valid login token.

        :param valid_since: The valid_since of this IdentitytoolkitRelyingpartySetAccountInfoRequest.
        :type valid_since: str
        """

        self._valid_since = valid_since
