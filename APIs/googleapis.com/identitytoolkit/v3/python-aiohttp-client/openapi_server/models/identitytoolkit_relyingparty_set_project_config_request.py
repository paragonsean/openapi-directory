# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.email_template import EmailTemplate
from openapi_server.models.idp_config import IdpConfig
from openapi_server import util


class IdentitytoolkitRelyingpartySetProjectConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_password_user: bool=None, api_key: str=None, authorized_domains: List[str]=None, change_email_template: EmailTemplate=None, delegated_project_number: str=None, enable_anonymous_user: bool=None, idp_config: List[IdpConfig]=None, legacy_reset_password_template: EmailTemplate=None, reset_password_template: EmailTemplate=None, use_email_sending: bool=None, verify_email_template: EmailTemplate=None):
        """IdentitytoolkitRelyingpartySetProjectConfigRequest - a model defined in OpenAPI

        :param allow_password_user: The allow_password_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param api_key: The api_key of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param authorized_domains: The authorized_domains of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param change_email_template: The change_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param enable_anonymous_user: The enable_anonymous_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param idp_config: The idp_config of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param legacy_reset_password_template: The legacy_reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param reset_password_template: The reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param use_email_sending: The use_email_sending of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :param verify_email_template: The verify_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        """
        self.openapi_types = {
            'allow_password_user': bool,
            'api_key': str,
            'authorized_domains': List[str],
            'change_email_template': EmailTemplate,
            'delegated_project_number': str,
            'enable_anonymous_user': bool,
            'idp_config': List[IdpConfig],
            'legacy_reset_password_template': EmailTemplate,
            'reset_password_template': EmailTemplate,
            'use_email_sending': bool,
            'verify_email_template': EmailTemplate
        }

        self.attribute_map = {
            'allow_password_user': 'allowPasswordUser',
            'api_key': 'apiKey',
            'authorized_domains': 'authorizedDomains',
            'change_email_template': 'changeEmailTemplate',
            'delegated_project_number': 'delegatedProjectNumber',
            'enable_anonymous_user': 'enableAnonymousUser',
            'idp_config': 'idpConfig',
            'legacy_reset_password_template': 'legacyResetPasswordTemplate',
            'reset_password_template': 'resetPasswordTemplate',
            'use_email_sending': 'useEmailSending',
            'verify_email_template': 'verifyEmailTemplate'
        }

        self._allow_password_user = allow_password_user
        self._api_key = api_key
        self._authorized_domains = authorized_domains
        self._change_email_template = change_email_template
        self._delegated_project_number = delegated_project_number
        self._enable_anonymous_user = enable_anonymous_user
        self._idp_config = idp_config
        self._legacy_reset_password_template = legacy_reset_password_template
        self._reset_password_template = reset_password_template
        self._use_email_sending = use_email_sending
        self._verify_email_template = verify_email_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartySetProjectConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartySetProjectConfigRequest of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_password_user(self):
        """Gets the allow_password_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Whether to allow password user sign in or sign up.

        :return: The allow_password_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: bool
        """
        return self._allow_password_user

    @allow_password_user.setter
    def allow_password_user(self, allow_password_user):
        """Sets the allow_password_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Whether to allow password user sign in or sign up.

        :param allow_password_user: The allow_password_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type allow_password_user: bool
        """

        self._allow_password_user = allow_password_user

    @property
    def api_key(self):
        """Gets the api_key of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Browser API key, needed when making http request to Apiary.

        :return: The api_key of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Browser API key, needed when making http request to Apiary.

        :param api_key: The api_key of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def authorized_domains(self):
        """Gets the authorized_domains of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Authorized domains for widget redirect.

        :return: The authorized_domains of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: List[str]
        """
        return self._authorized_domains

    @authorized_domains.setter
    def authorized_domains(self, authorized_domains):
        """Sets the authorized_domains of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Authorized domains for widget redirect.

        :param authorized_domains: The authorized_domains of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type authorized_domains: List[str]
        """

        self._authorized_domains = authorized_domains

    @property
    def change_email_template(self):
        """Gets the change_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :return: The change_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: EmailTemplate
        """
        return self._change_email_template

    @change_email_template.setter
    def change_email_template(self, change_email_template):
        """Sets the change_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :param change_email_template: The change_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type change_email_template: EmailTemplate
        """

        self._change_email_template = change_email_template

    @property
    def delegated_project_number(self):
        """Gets the delegated_project_number of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :return: The delegated_project_number of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: str
        """
        return self._delegated_project_number

    @delegated_project_number.setter
    def delegated_project_number(self, delegated_project_number):
        """Sets the delegated_project_number of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type delegated_project_number: str
        """

        self._delegated_project_number = delegated_project_number

    @property
    def enable_anonymous_user(self):
        """Gets the enable_anonymous_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Whether to enable anonymous user.

        :return: The enable_anonymous_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: bool
        """
        return self._enable_anonymous_user

    @enable_anonymous_user.setter
    def enable_anonymous_user(self, enable_anonymous_user):
        """Sets the enable_anonymous_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Whether to enable anonymous user.

        :param enable_anonymous_user: The enable_anonymous_user of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type enable_anonymous_user: bool
        """

        self._enable_anonymous_user = enable_anonymous_user

    @property
    def idp_config(self):
        """Gets the idp_config of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Oauth2 provider configuration.

        :return: The idp_config of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: List[IdpConfig]
        """
        return self._idp_config

    @idp_config.setter
    def idp_config(self, idp_config):
        """Sets the idp_config of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Oauth2 provider configuration.

        :param idp_config: The idp_config of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type idp_config: List[IdpConfig]
        """

        self._idp_config = idp_config

    @property
    def legacy_reset_password_template(self):
        """Gets the legacy_reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :return: The legacy_reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: EmailTemplate
        """
        return self._legacy_reset_password_template

    @legacy_reset_password_template.setter
    def legacy_reset_password_template(self, legacy_reset_password_template):
        """Sets the legacy_reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :param legacy_reset_password_template: The legacy_reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type legacy_reset_password_template: EmailTemplate
        """

        self._legacy_reset_password_template = legacy_reset_password_template

    @property
    def reset_password_template(self):
        """Gets the reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :return: The reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: EmailTemplate
        """
        return self._reset_password_template

    @reset_password_template.setter
    def reset_password_template(self, reset_password_template):
        """Sets the reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :param reset_password_template: The reset_password_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type reset_password_template: EmailTemplate
        """

        self._reset_password_template = reset_password_template

    @property
    def use_email_sending(self):
        """Gets the use_email_sending of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Whether to use email sending provided by Firebear.

        :return: The use_email_sending of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: bool
        """
        return self._use_email_sending

    @use_email_sending.setter
    def use_email_sending(self, use_email_sending):
        """Sets the use_email_sending of this IdentitytoolkitRelyingpartySetProjectConfigRequest.

        Whether to use email sending provided by Firebear.

        :param use_email_sending: The use_email_sending of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type use_email_sending: bool
        """

        self._use_email_sending = use_email_sending

    @property
    def verify_email_template(self):
        """Gets the verify_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :return: The verify_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :rtype: EmailTemplate
        """
        return self._verify_email_template

    @verify_email_template.setter
    def verify_email_template(self, verify_email_template):
        """Sets the verify_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.


        :param verify_email_template: The verify_email_template of this IdentitytoolkitRelyingpartySetProjectConfigRequest.
        :type verify_email_template: EmailTemplate
        """

        self._verify_email_template = verify_email_template
