# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartyVerifyPasswordRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, captcha_challenge: str=None, captcha_response: str=None, delegated_project_number: str=None, email: str=None, id_token: str=None, instance_id: str=None, password: str=None, pending_id_token: str=None, return_secure_token: bool=None, tenant_id: str=None, tenant_project_number: str=None):
        """IdentitytoolkitRelyingpartyVerifyPasswordRequest - a model defined in OpenAPI

        :param captcha_challenge: The captcha_challenge of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param captcha_response: The captcha_response of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param email: The email of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param id_token: The id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param password: The password of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param pending_id_token: The pending_id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param tenant_id: The tenant_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :param tenant_project_number: The tenant_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        """
        self.openapi_types = {
            'captcha_challenge': str,
            'captcha_response': str,
            'delegated_project_number': str,
            'email': str,
            'id_token': str,
            'instance_id': str,
            'password': str,
            'pending_id_token': str,
            'return_secure_token': bool,
            'tenant_id': str,
            'tenant_project_number': str
        }

        self.attribute_map = {
            'captcha_challenge': 'captchaChallenge',
            'captcha_response': 'captchaResponse',
            'delegated_project_number': 'delegatedProjectNumber',
            'email': 'email',
            'id_token': 'idToken',
            'instance_id': 'instanceId',
            'password': 'password',
            'pending_id_token': 'pendingIdToken',
            'return_secure_token': 'returnSecureToken',
            'tenant_id': 'tenantId',
            'tenant_project_number': 'tenantProjectNumber'
        }

        self._captcha_challenge = captcha_challenge
        self._captcha_response = captcha_response
        self._delegated_project_number = delegated_project_number
        self._email = email
        self._id_token = id_token
        self._instance_id = instance_id
        self._password = password
        self._pending_id_token = pending_id_token
        self._return_secure_token = return_secure_token
        self._tenant_id = tenant_id
        self._tenant_project_number = tenant_project_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartyVerifyPasswordRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartyVerifyPasswordRequest of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def captcha_challenge(self):
        """Gets the captcha_challenge of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The captcha challenge.

        :return: The captcha_challenge of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._captcha_challenge

    @captcha_challenge.setter
    def captcha_challenge(self, captcha_challenge):
        """Sets the captcha_challenge of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The captcha challenge.

        :param captcha_challenge: The captcha_challenge of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type captcha_challenge: str
        """

        self._captcha_challenge = captcha_challenge

    @property
    def captcha_response(self):
        """Gets the captcha_response of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Response to the captcha.

        :return: The captcha_response of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._captcha_response

    @captcha_response.setter
    def captcha_response(self, captcha_response):
        """Sets the captcha_response of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Response to the captcha.

        :param captcha_response: The captcha_response of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type captcha_response: str
        """

        self._captcha_response = captcha_response

    @property
    def delegated_project_number(self):
        """Gets the delegated_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :return: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._delegated_project_number

    @delegated_project_number.setter
    def delegated_project_number(self, delegated_project_number):
        """Sets the delegated_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type delegated_project_number: str
        """

        self._delegated_project_number = delegated_project_number

    @property
    def email(self):
        """Gets the email of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The email of the user.

        :return: The email of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The email of the user.

        :param email: The email of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type email: str
        """

        self._email = email

    @property
    def id_token(self):
        """Gets the id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The GITKit token of the authenticated user.

        :return: The id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._id_token

    @id_token.setter
    def id_token(self, id_token):
        """Sets the id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The GITKit token of the authenticated user.

        :param id_token: The id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type id_token: str
        """

        self._id_token = id_token

    @property
    def instance_id(self):
        """Gets the instance_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Instance id token of the app.

        :return: The instance_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Instance id token of the app.

        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def password(self):
        """Gets the password of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The password inputed by the user.

        :return: The password of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The password inputed by the user.

        :param password: The password of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type password: str
        """

        self._password = password

    @property
    def pending_id_token(self):
        """Gets the pending_id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The GITKit token for the non-trusted IDP, which is to be confirmed by the user.

        :return: The pending_id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._pending_id_token

    @pending_id_token.setter
    def pending_id_token(self, pending_id_token):
        """Sets the pending_id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        The GITKit token for the non-trusted IDP, which is to be confirmed by the user.

        :param pending_id_token: The pending_id_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type pending_id_token: str
        """

        self._pending_id_token = pending_id_token

    @property
    def return_secure_token(self):
        """Gets the return_secure_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :return: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: bool
        """
        return self._return_secure_token

    @return_secure_token.setter
    def return_secure_token(self, return_secure_token):
        """Sets the return_secure_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type return_secure_token: bool
        """

        self._return_secure_token = return_secure_token

    @property
    def tenant_id(self):
        """Gets the tenant_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.

        :return: The tenant_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.

        :param tenant_id: The tenant_id of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def tenant_project_number(self):
        """Gets the tenant_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Tenant project number to be used for idp discovery.

        :return: The tenant_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :rtype: str
        """
        return self._tenant_project_number

    @tenant_project_number.setter
    def tenant_project_number(self, tenant_project_number):
        """Sets the tenant_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.

        Tenant project number to be used for idp discovery.

        :param tenant_project_number: The tenant_project_number of this IdentitytoolkitRelyingpartyVerifyPasswordRequest.
        :type tenant_project_number: str
        """

        self._tenant_project_number = tenant_project_number
