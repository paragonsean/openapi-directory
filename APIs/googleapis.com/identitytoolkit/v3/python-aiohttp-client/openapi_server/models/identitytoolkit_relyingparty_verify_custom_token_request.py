# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartyVerifyCustomTokenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delegated_project_number: str=None, instance_id: str=None, return_secure_token: bool=None, token: str=None):
        """IdentitytoolkitRelyingpartyVerifyCustomTokenRequest - a model defined in OpenAPI

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :param token: The token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        """
        self.openapi_types = {
            'delegated_project_number': str,
            'instance_id': str,
            'return_secure_token': bool,
            'token': str
        }

        self.attribute_map = {
            'delegated_project_number': 'delegatedProjectNumber',
            'instance_id': 'instanceId',
            'return_secure_token': 'returnSecureToken',
            'token': 'token'
        }

        self._delegated_project_number = delegated_project_number
        self._instance_id = instance_id
        self._return_secure_token = return_secure_token
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartyVerifyCustomTokenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartyVerifyCustomTokenRequest of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delegated_project_number(self):
        """Gets the delegated_project_number of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :return: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :rtype: str
        """
        return self._delegated_project_number

    @delegated_project_number.setter
    def delegated_project_number(self, delegated_project_number):
        """Sets the delegated_project_number of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :type delegated_project_number: str
        """

        self._delegated_project_number = delegated_project_number

    @property
    def instance_id(self):
        """Gets the instance_id of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        Instance id token of the app.

        :return: The instance_id of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        Instance id token of the app.

        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def return_secure_token(self):
        """Gets the return_secure_token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :return: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :rtype: bool
        """
        return self._return_secure_token

    @return_secure_token.setter
    def return_secure_token(self, return_secure_token):
        """Sets the return_secure_token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :type return_secure_token: bool
        """

        self._return_secure_token = return_secure_token

    @property
    def token(self):
        """Gets the token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        The custom token to verify

        :return: The token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.

        The custom token to verify

        :param token: The token of this IdentitytoolkitRelyingpartyVerifyCustomTokenRequest.
        :type token: str
        """

        self._token = token
