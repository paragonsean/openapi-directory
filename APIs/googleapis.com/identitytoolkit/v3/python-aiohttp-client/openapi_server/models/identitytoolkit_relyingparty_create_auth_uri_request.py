# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartyCreateAuthUriRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, auth_flow_type: str=None, client_id: str=None, context: str=None, continue_uri: str=None, custom_parameter: Dict[str, str]=None, hosted_domain: str=None, identifier: str=None, oauth_consumer_key: str=None, oauth_scope: str=None, openid_realm: str=None, ota_app: str=None, provider_id: str=None, session_id: str=None, tenant_id: str=None, tenant_project_number: str=None):
        """IdentitytoolkitRelyingpartyCreateAuthUriRequest - a model defined in OpenAPI

        :param app_id: The app_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param auth_flow_type: The auth_flow_type of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param client_id: The client_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param context: The context of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param continue_uri: The continue_uri of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param custom_parameter: The custom_parameter of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param hosted_domain: The hosted_domain of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param identifier: The identifier of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param oauth_consumer_key: The oauth_consumer_key of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param oauth_scope: The oauth_scope of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param openid_realm: The openid_realm of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param ota_app: The ota_app of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param provider_id: The provider_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param session_id: The session_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param tenant_id: The tenant_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :param tenant_project_number: The tenant_project_number of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        """
        self.openapi_types = {
            'app_id': str,
            'auth_flow_type': str,
            'client_id': str,
            'context': str,
            'continue_uri': str,
            'custom_parameter': Dict[str, str],
            'hosted_domain': str,
            'identifier': str,
            'oauth_consumer_key': str,
            'oauth_scope': str,
            'openid_realm': str,
            'ota_app': str,
            'provider_id': str,
            'session_id': str,
            'tenant_id': str,
            'tenant_project_number': str
        }

        self.attribute_map = {
            'app_id': 'appId',
            'auth_flow_type': 'authFlowType',
            'client_id': 'clientId',
            'context': 'context',
            'continue_uri': 'continueUri',
            'custom_parameter': 'customParameter',
            'hosted_domain': 'hostedDomain',
            'identifier': 'identifier',
            'oauth_consumer_key': 'oauthConsumerKey',
            'oauth_scope': 'oauthScope',
            'openid_realm': 'openidRealm',
            'ota_app': 'otaApp',
            'provider_id': 'providerId',
            'session_id': 'sessionId',
            'tenant_id': 'tenantId',
            'tenant_project_number': 'tenantProjectNumber'
        }

        self._app_id = app_id
        self._auth_flow_type = auth_flow_type
        self._client_id = client_id
        self._context = context
        self._continue_uri = continue_uri
        self._custom_parameter = custom_parameter
        self._hosted_domain = hosted_domain
        self._identifier = identifier
        self._oauth_consumer_key = oauth_consumer_key
        self._oauth_scope = oauth_scope
        self._openid_realm = openid_realm
        self._ota_app = ota_app
        self._provider_id = provider_id
        self._session_id = session_id
        self._tenant_id = tenant_id
        self._tenant_project_number = tenant_project_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartyCreateAuthUriRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartyCreateAuthUriRequest of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.

        :return: The app_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.

        :param app_id: The app_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def auth_flow_type(self):
        """Gets the auth_flow_type of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Explicitly specify the auth flow type. Currently only support \"CODE_FLOW\" type. The field is only used for Google provider.

        :return: The auth_flow_type of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._auth_flow_type

    @auth_flow_type.setter
    def auth_flow_type(self, auth_flow_type):
        """Sets the auth_flow_type of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Explicitly specify the auth flow type. Currently only support \"CODE_FLOW\" type. The field is only used for Google provider.

        :param auth_flow_type: The auth_flow_type of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type auth_flow_type: str
        """

        self._auth_flow_type = auth_flow_type

    @property
    def client_id(self):
        """Gets the client_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The relying party OAuth client ID.

        :return: The client_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The relying party OAuth client ID.

        :param client_id: The client_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def context(self):
        """Gets the context of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The opaque value used by the client to maintain context info between the authentication request and the IDP callback.

        :return: The context of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The opaque value used by the client to maintain context info between the authentication request and the IDP callback.

        :param context: The context of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type context: str
        """

        self._context = context

    @property
    def continue_uri(self):
        """Gets the continue_uri of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The URI to which the IDP redirects the user after the federated login flow.

        :return: The continue_uri of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._continue_uri

    @continue_uri.setter
    def continue_uri(self, continue_uri):
        """Sets the continue_uri of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The URI to which the IDP redirects the user after the federated login flow.

        :param continue_uri: The continue_uri of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type continue_uri: str
        """

        self._continue_uri = continue_uri

    @property
    def custom_parameter(self):
        """Gets the custom_parameter of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.

        :return: The custom_parameter of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: Dict[str, str]
        """
        return self._custom_parameter

    @custom_parameter.setter
    def custom_parameter(self, custom_parameter):
        """Sets the custom_parameter of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.

        :param custom_parameter: The custom_parameter of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type custom_parameter: Dict[str, str]
        """

        self._custom_parameter = custom_parameter

    @property
    def hosted_domain(self):
        """Gets the hosted_domain of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.

        :return: The hosted_domain of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._hosted_domain

    @hosted_domain.setter
    def hosted_domain(self, hosted_domain):
        """Sets the hosted_domain of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.

        :param hosted_domain: The hosted_domain of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type hosted_domain: str
        """

        self._hosted_domain = hosted_domain

    @property
    def identifier(self):
        """Gets the identifier of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The email or federated ID of the user.

        :return: The identifier of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The email or federated ID of the user.

        :param identifier: The identifier of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def oauth_consumer_key(self):
        """Gets the oauth_consumer_key of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The developer's consumer key for OpenId OAuth Extension

        :return: The oauth_consumer_key of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._oauth_consumer_key

    @oauth_consumer_key.setter
    def oauth_consumer_key(self, oauth_consumer_key):
        """Sets the oauth_consumer_key of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The developer's consumer key for OpenId OAuth Extension

        :param oauth_consumer_key: The oauth_consumer_key of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type oauth_consumer_key: str
        """

        self._oauth_consumer_key = oauth_consumer_key

    @property
    def oauth_scope(self):
        """Gets the oauth_scope of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant

        :return: The oauth_scope of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._oauth_scope

    @oauth_scope.setter
    def oauth_scope(self, oauth_scope):
        """Sets the oauth_scope of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant

        :param oauth_scope: The oauth_scope of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type oauth_scope: str
        """

        self._oauth_scope = oauth_scope

    @property
    def openid_realm(self):
        """Gets the openid_realm of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set.

        :return: The openid_realm of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._openid_realm

    @openid_realm.setter
    def openid_realm(self, openid_realm):
        """Sets the openid_realm of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set.

        :param openid_realm: The openid_realm of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type openid_realm: str
        """

        self._openid_realm = openid_realm

    @property
    def ota_app(self):
        """Gets the ota_app of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The native app package for OTA installation.

        :return: The ota_app of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._ota_app

    @ota_app.setter
    def ota_app(self, ota_app):
        """Sets the ota_app of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The native app package for OTA installation.

        :param ota_app: The ota_app of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type ota_app: str
        """

        self._ota_app = ota_app

    @property
    def provider_id(self):
        """Gets the provider_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.

        :return: The provider_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.

        :param provider_id: The provider_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type provider_id: str
        """

        self._provider_id = provider_id

    @property
    def session_id(self):
        """Gets the session_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The session_id passed by client.

        :return: The session_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        The session_id passed by client.

        :param session_id: The session_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.

        :return: The tenant_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.

        :param tenant_id: The tenant_id of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def tenant_project_number(self):
        """Gets the tenant_project_number of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Tenant project number to be used for idp discovery.

        :return: The tenant_project_number of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :rtype: str
        """
        return self._tenant_project_number

    @tenant_project_number.setter
    def tenant_project_number(self, tenant_project_number):
        """Sets the tenant_project_number of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.

        Tenant project number to be used for idp discovery.

        :param tenant_project_number: The tenant_project_number of this IdentitytoolkitRelyingpartyCreateAuthUriRequest.
        :type tenant_project_number: str
        """

        self._tenant_project_number = tenant_project_number
