# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VerifyCustomTokenResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expires_in: str=None, id_token: str=None, is_new_user: bool=None, kind: str='identitytoolkit#VerifyCustomTokenResponse', refresh_token: str=None):
        """VerifyCustomTokenResponse - a model defined in OpenAPI

        :param expires_in: The expires_in of this VerifyCustomTokenResponse.
        :param id_token: The id_token of this VerifyCustomTokenResponse.
        :param is_new_user: The is_new_user of this VerifyCustomTokenResponse.
        :param kind: The kind of this VerifyCustomTokenResponse.
        :param refresh_token: The refresh_token of this VerifyCustomTokenResponse.
        """
        self.openapi_types = {
            'expires_in': str,
            'id_token': str,
            'is_new_user': bool,
            'kind': str,
            'refresh_token': str
        }

        self.attribute_map = {
            'expires_in': 'expiresIn',
            'id_token': 'idToken',
            'is_new_user': 'isNewUser',
            'kind': 'kind',
            'refresh_token': 'refreshToken'
        }

        self._expires_in = expires_in
        self._id_token = id_token
        self._is_new_user = is_new_user
        self._kind = kind
        self._refresh_token = refresh_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyCustomTokenResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerifyCustomTokenResponse of this VerifyCustomTokenResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expires_in(self):
        """Gets the expires_in of this VerifyCustomTokenResponse.

        If idToken is STS id token, then this field will be expiration time of STS id token in seconds.

        :return: The expires_in of this VerifyCustomTokenResponse.
        :rtype: str
        """
        return self._expires_in

    @expires_in.setter
    def expires_in(self, expires_in):
        """Sets the expires_in of this VerifyCustomTokenResponse.

        If idToken is STS id token, then this field will be expiration time of STS id token in seconds.

        :param expires_in: The expires_in of this VerifyCustomTokenResponse.
        :type expires_in: str
        """

        self._expires_in = expires_in

    @property
    def id_token(self):
        """Gets the id_token of this VerifyCustomTokenResponse.

        The GITKit token for authenticated user.

        :return: The id_token of this VerifyCustomTokenResponse.
        :rtype: str
        """
        return self._id_token

    @id_token.setter
    def id_token(self, id_token):
        """Sets the id_token of this VerifyCustomTokenResponse.

        The GITKit token for authenticated user.

        :param id_token: The id_token of this VerifyCustomTokenResponse.
        :type id_token: str
        """

        self._id_token = id_token

    @property
    def is_new_user(self):
        """Gets the is_new_user of this VerifyCustomTokenResponse.

        True if it's a new user sign-in, false if it's a returning user.

        :return: The is_new_user of this VerifyCustomTokenResponse.
        :rtype: bool
        """
        return self._is_new_user

    @is_new_user.setter
    def is_new_user(self, is_new_user):
        """Sets the is_new_user of this VerifyCustomTokenResponse.

        True if it's a new user sign-in, false if it's a returning user.

        :param is_new_user: The is_new_user of this VerifyCustomTokenResponse.
        :type is_new_user: bool
        """

        self._is_new_user = is_new_user

    @property
    def kind(self):
        """Gets the kind of this VerifyCustomTokenResponse.

        The fixed string \"identitytoolkit#VerifyCustomTokenResponse\".

        :return: The kind of this VerifyCustomTokenResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this VerifyCustomTokenResponse.

        The fixed string \"identitytoolkit#VerifyCustomTokenResponse\".

        :param kind: The kind of this VerifyCustomTokenResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def refresh_token(self):
        """Gets the refresh_token of this VerifyCustomTokenResponse.

        If idToken is STS id token, then this field will be refresh token.

        :return: The refresh_token of this VerifyCustomTokenResponse.
        :rtype: str
        """
        return self._refresh_token

    @refresh_token.setter
    def refresh_token(self, refresh_token):
        """Sets the refresh_token of this VerifyCustomTokenResponse.

        If idToken is STS id token, then this field will be refresh token.

        :param refresh_token: The refresh_token of this VerifyCustomTokenResponse.
        :type refresh_token: str
        """

        self._refresh_token = refresh_token
