# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartyVerifyAssertionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_create: bool=None, delegated_project_number: str=None, id_token: str=None, instance_id: str=None, pending_id_token: str=None, post_body: str=None, request_uri: str=None, return_idp_credential: bool=None, return_refresh_token: bool=None, return_secure_token: bool=None, session_id: str=None, tenant_id: str=None, tenant_project_number: str=None):
        """IdentitytoolkitRelyingpartyVerifyAssertionRequest - a model defined in OpenAPI

        :param auto_create: The auto_create of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param id_token: The id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param pending_id_token: The pending_id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param post_body: The post_body of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param request_uri: The request_uri of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param return_idp_credential: The return_idp_credential of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param return_refresh_token: The return_refresh_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param session_id: The session_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param tenant_id: The tenant_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :param tenant_project_number: The tenant_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        """
        self.openapi_types = {
            'auto_create': bool,
            'delegated_project_number': str,
            'id_token': str,
            'instance_id': str,
            'pending_id_token': str,
            'post_body': str,
            'request_uri': str,
            'return_idp_credential': bool,
            'return_refresh_token': bool,
            'return_secure_token': bool,
            'session_id': str,
            'tenant_id': str,
            'tenant_project_number': str
        }

        self.attribute_map = {
            'auto_create': 'autoCreate',
            'delegated_project_number': 'delegatedProjectNumber',
            'id_token': 'idToken',
            'instance_id': 'instanceId',
            'pending_id_token': 'pendingIdToken',
            'post_body': 'postBody',
            'request_uri': 'requestUri',
            'return_idp_credential': 'returnIdpCredential',
            'return_refresh_token': 'returnRefreshToken',
            'return_secure_token': 'returnSecureToken',
            'session_id': 'sessionId',
            'tenant_id': 'tenantId',
            'tenant_project_number': 'tenantProjectNumber'
        }

        self._auto_create = auto_create
        self._delegated_project_number = delegated_project_number
        self._id_token = id_token
        self._instance_id = instance_id
        self._pending_id_token = pending_id_token
        self._post_body = post_body
        self._request_uri = request_uri
        self._return_idp_credential = return_idp_credential
        self._return_refresh_token = return_refresh_token
        self._return_secure_token = return_secure_token
        self._session_id = session_id
        self._tenant_id = tenant_id
        self._tenant_project_number = tenant_project_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartyVerifyAssertionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartyVerifyAssertionRequest of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_create(self):
        """Gets the auto_create of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist.

        :return: The auto_create of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: bool
        """
        return self._auto_create

    @auto_create.setter
    def auto_create(self, auto_create):
        """Sets the auto_create of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist.

        :param auto_create: The auto_create of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type auto_create: bool
        """

        self._auto_create = auto_create

    @property
    def delegated_project_number(self):
        """Gets the delegated_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :return: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._delegated_project_number

    @delegated_project_number.setter
    def delegated_project_number(self, delegated_project_number):
        """Sets the delegated_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type delegated_project_number: str
        """

        self._delegated_project_number = delegated_project_number

    @property
    def id_token(self):
        """Gets the id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The GITKit token of the authenticated user.

        :return: The id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._id_token

    @id_token.setter
    def id_token(self, id_token):
        """Sets the id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The GITKit token of the authenticated user.

        :param id_token: The id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type id_token: str
        """

        self._id_token = id_token

    @property
    def instance_id(self):
        """Gets the instance_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Instance id token of the app.

        :return: The instance_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Instance id token of the app.

        :param instance_id: The instance_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def pending_id_token(self):
        """Gets the pending_id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The GITKit token for the non-trusted IDP pending to be confirmed by the user.

        :return: The pending_id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._pending_id_token

    @pending_id_token.setter
    def pending_id_token(self, pending_id_token):
        """Sets the pending_id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The GITKit token for the non-trusted IDP pending to be confirmed by the user.

        :param pending_id_token: The pending_id_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type pending_id_token: str
        """

        self._pending_id_token = pending_id_token

    @property
    def post_body(self):
        """Gets the post_body of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The post body if the request is a HTTP POST.

        :return: The post_body of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._post_body

    @post_body.setter
    def post_body(self, post_body):
        """Sets the post_body of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The post body if the request is a HTTP POST.

        :param post_body: The post_body of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type post_body: str
        """

        self._post_body = post_body

    @property
    def request_uri(self):
        """Gets the request_uri of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.

        :return: The request_uri of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._request_uri

    @request_uri.setter
    def request_uri(self, request_uri):
        """Sets the request_uri of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.

        :param request_uri: The request_uri of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type request_uri: str
        """

        self._request_uri = request_uri

    @property
    def return_idp_credential(self):
        """Gets the return_idp_credential of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Whether return 200 and IDP credential rather than throw exception when federated id is already linked.

        :return: The return_idp_credential of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: bool
        """
        return self._return_idp_credential

    @return_idp_credential.setter
    def return_idp_credential(self, return_idp_credential):
        """Sets the return_idp_credential of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Whether return 200 and IDP credential rather than throw exception when federated id is already linked.

        :param return_idp_credential: The return_idp_credential of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type return_idp_credential: bool
        """

        self._return_idp_credential = return_idp_credential

    @property
    def return_refresh_token(self):
        """Gets the return_refresh_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Whether to return refresh tokens.

        :return: The return_refresh_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: bool
        """
        return self._return_refresh_token

    @return_refresh_token.setter
    def return_refresh_token(self, return_refresh_token):
        """Sets the return_refresh_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Whether to return refresh tokens.

        :param return_refresh_token: The return_refresh_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type return_refresh_token: bool
        """

        self._return_refresh_token = return_refresh_token

    @property
    def return_secure_token(self):
        """Gets the return_secure_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :return: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: bool
        """
        return self._return_secure_token

    @return_secure_token.setter
    def return_secure_token(self, return_secure_token):
        """Sets the return_secure_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Whether return sts id token and refresh token instead of gitkit token.

        :param return_secure_token: The return_secure_token of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type return_secure_token: bool
        """

        self._return_secure_token = return_secure_token

    @property
    def session_id(self):
        """Gets the session_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Session ID, which should match the one in previous createAuthUri request.

        :return: The session_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Session ID, which should match the one in previous createAuthUri request.

        :param session_id: The session_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.

        :return: The tenant_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.

        :param tenant_id: The tenant_id of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def tenant_project_number(self):
        """Gets the tenant_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Tenant project number to be used for idp discovery.

        :return: The tenant_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :rtype: str
        """
        return self._tenant_project_number

    @tenant_project_number.setter
    def tenant_project_number(self, tenant_project_number):
        """Sets the tenant_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.

        Tenant project number to be used for idp discovery.

        :param tenant_project_number: The tenant_project_number of this IdentitytoolkitRelyingpartyVerifyAssertionRequest.
        :type tenant_project_number: str
        """

        self._tenant_project_number = tenant_project_number
