# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartySendVerificationCodeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ios_receipt: str=None, ios_secret: str=None, phone_number: str=None, recaptcha_token: str=None):
        """IdentitytoolkitRelyingpartySendVerificationCodeRequest - a model defined in OpenAPI

        :param ios_receipt: The ios_receipt of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :param ios_secret: The ios_secret of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :param phone_number: The phone_number of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :param recaptcha_token: The recaptcha_token of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        """
        self.openapi_types = {
            'ios_receipt': str,
            'ios_secret': str,
            'phone_number': str,
            'recaptcha_token': str
        }

        self.attribute_map = {
            'ios_receipt': 'iosReceipt',
            'ios_secret': 'iosSecret',
            'phone_number': 'phoneNumber',
            'recaptcha_token': 'recaptchaToken'
        }

        self._ios_receipt = ios_receipt
        self._ios_secret = ios_secret
        self._phone_number = phone_number
        self._recaptcha_token = recaptcha_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartySendVerificationCodeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartySendVerificationCodeRequest of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ios_receipt(self):
        """Gets the ios_receipt of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        Receipt of successful app token validation with APNS.

        :return: The ios_receipt of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :rtype: str
        """
        return self._ios_receipt

    @ios_receipt.setter
    def ios_receipt(self, ios_receipt):
        """Sets the ios_receipt of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        Receipt of successful app token validation with APNS.

        :param ios_receipt: The ios_receipt of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :type ios_receipt: str
        """

        self._ios_receipt = ios_receipt

    @property
    def ios_secret(self):
        """Gets the ios_secret of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        Secret delivered to iOS app via APNS.

        :return: The ios_secret of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :rtype: str
        """
        return self._ios_secret

    @ios_secret.setter
    def ios_secret(self, ios_secret):
        """Sets the ios_secret of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        Secret delivered to iOS app via APNS.

        :param ios_secret: The ios_secret of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :type ios_secret: str
        """

        self._ios_secret = ios_secret

    @property
    def phone_number(self):
        """Gets the phone_number of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        The phone number to send the verification code to in E.164 format.

        :return: The phone_number of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        The phone number to send the verification code to in E.164 format.

        :param phone_number: The phone_number of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def recaptcha_token(self):
        """Gets the recaptcha_token of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        Recaptcha solution.

        :return: The recaptcha_token of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :rtype: str
        """
        return self._recaptcha_token

    @recaptcha_token.setter
    def recaptcha_token(self, recaptcha_token):
        """Sets the recaptcha_token of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.

        Recaptcha solution.

        :param recaptcha_token: The recaptcha_token of this IdentitytoolkitRelyingpartySendVerificationCodeRequest.
        :type recaptcha_token: str
        """

        self._recaptcha_token = recaptcha_token
