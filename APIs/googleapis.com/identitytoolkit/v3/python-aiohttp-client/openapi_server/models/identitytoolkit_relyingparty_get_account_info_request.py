# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartyGetAccountInfoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delegated_project_number: str=None, email: List[str]=None, id_token: str=None, local_id: List[str]=None, phone_number: List[str]=None):
        """IdentitytoolkitRelyingpartyGetAccountInfoRequest - a model defined in OpenAPI

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :param email: The email of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :param id_token: The id_token of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :param local_id: The local_id of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :param phone_number: The phone_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        """
        self.openapi_types = {
            'delegated_project_number': str,
            'email': List[str],
            'id_token': str,
            'local_id': List[str],
            'phone_number': List[str]
        }

        self.attribute_map = {
            'delegated_project_number': 'delegatedProjectNumber',
            'email': 'email',
            'id_token': 'idToken',
            'local_id': 'localId',
            'phone_number': 'phoneNumber'
        }

        self._delegated_project_number = delegated_project_number
        self._email = email
        self._id_token = id_token
        self._local_id = local_id
        self._phone_number = phone_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartyGetAccountInfoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartyGetAccountInfoRequest of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delegated_project_number(self):
        """Gets the delegated_project_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :return: The delegated_project_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :rtype: str
        """
        return self._delegated_project_number

    @delegated_project_number.setter
    def delegated_project_number(self, delegated_project_number):
        """Sets the delegated_project_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.

        :param delegated_project_number: The delegated_project_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :type delegated_project_number: str
        """

        self._delegated_project_number = delegated_project_number

    @property
    def email(self):
        """Gets the email of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        The list of emails of the users to inquiry.

        :return: The email of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :rtype: List[str]
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        The list of emails of the users to inquiry.

        :param email: The email of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :type email: List[str]
        """

        self._email = email

    @property
    def id_token(self):
        """Gets the id_token of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        The GITKit token of the authenticated user.

        :return: The id_token of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :rtype: str
        """
        return self._id_token

    @id_token.setter
    def id_token(self, id_token):
        """Sets the id_token of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        The GITKit token of the authenticated user.

        :param id_token: The id_token of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :type id_token: str
        """

        self._id_token = id_token

    @property
    def local_id(self):
        """Gets the local_id of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        The list of local ID's of the users to inquiry.

        :return: The local_id of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :rtype: List[str]
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        The list of local ID's of the users to inquiry.

        :param local_id: The local_id of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :type local_id: List[str]
        """

        self._local_id = local_id

    @property
    def phone_number(self):
        """Gets the phone_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        Privileged caller can query users by specified phone number.

        :return: The phone_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :rtype: List[str]
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.

        Privileged caller can query users by specified phone number.

        :param phone_number: The phone_number of this IdentitytoolkitRelyingpartyGetAccountInfoRequest.
        :type phone_number: List[str]
        """

        self._phone_number = phone_number
