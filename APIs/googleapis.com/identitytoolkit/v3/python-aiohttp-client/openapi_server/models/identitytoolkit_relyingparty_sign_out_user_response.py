# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartySignOutUserResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, local_id: str=None):
        """IdentitytoolkitRelyingpartySignOutUserResponse - a model defined in OpenAPI

        :param local_id: The local_id of this IdentitytoolkitRelyingpartySignOutUserResponse.
        """
        self.openapi_types = {
            'local_id': str
        }

        self.attribute_map = {
            'local_id': 'localId'
        }

        self._local_id = local_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartySignOutUserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartySignOutUserResponse of this IdentitytoolkitRelyingpartySignOutUserResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def local_id(self):
        """Gets the local_id of this IdentitytoolkitRelyingpartySignOutUserResponse.

        The local ID of the user.

        :return: The local_id of this IdentitytoolkitRelyingpartySignOutUserResponse.
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this IdentitytoolkitRelyingpartySignOutUserResponse.

        The local ID of the user.

        :param local_id: The local_id of this IdentitytoolkitRelyingpartySignOutUserResponse.
        :type local_id: str
        """

        self._local_id = local_id
