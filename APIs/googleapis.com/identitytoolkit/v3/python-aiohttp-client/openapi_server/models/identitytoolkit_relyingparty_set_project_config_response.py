# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentitytoolkitRelyingpartySetProjectConfigResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_id: str=None):
        """IdentitytoolkitRelyingpartySetProjectConfigResponse - a model defined in OpenAPI

        :param project_id: The project_id of this IdentitytoolkitRelyingpartySetProjectConfigResponse.
        """
        self.openapi_types = {
            'project_id': str
        }

        self.attribute_map = {
            'project_id': 'projectId'
        }

        self._project_id = project_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentitytoolkitRelyingpartySetProjectConfigResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentitytoolkitRelyingpartySetProjectConfigResponse of this IdentitytoolkitRelyingpartySetProjectConfigResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_id(self):
        """Gets the project_id of this IdentitytoolkitRelyingpartySetProjectConfigResponse.

        Project ID of the relying party.

        :return: The project_id of this IdentitytoolkitRelyingpartySetProjectConfigResponse.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this IdentitytoolkitRelyingpartySetProjectConfigResponse.

        Project ID of the relying party.

        :param project_id: The project_id of this IdentitytoolkitRelyingpartySetProjectConfigResponse.
        :type project_id: str
        """

        self._project_id = project_id
