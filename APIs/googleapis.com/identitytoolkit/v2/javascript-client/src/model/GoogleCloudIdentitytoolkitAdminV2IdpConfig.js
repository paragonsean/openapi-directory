/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudIdentitytoolkitAdminV2IdpCertificate from './GoogleCloudIdentitytoolkitAdminV2IdpCertificate';

/**
 * The GoogleCloudIdentitytoolkitAdminV2IdpConfig model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2IdpConfig
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2IdpConfig {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2IdpConfig</code>.
     * The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2IdpConfig
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2IdpConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2IdpConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2IdpConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2IdpConfig} The populated <code>GoogleCloudIdentitytoolkitAdminV2IdpConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2IdpConfig();

            if (data.hasOwnProperty('idpCertificates')) {
                obj['idpCertificates'] = ApiClient.convertToType(data['idpCertificates'], [GoogleCloudIdentitytoolkitAdminV2IdpCertificate]);
            }
            if (data.hasOwnProperty('idpEntityId')) {
                obj['idpEntityId'] = ApiClient.convertToType(data['idpEntityId'], 'String');
            }
            if (data.hasOwnProperty('signRequest')) {
                obj['signRequest'] = ApiClient.convertToType(data['signRequest'], 'Boolean');
            }
            if (data.hasOwnProperty('ssoUrl')) {
                obj['ssoUrl'] = ApiClient.convertToType(data['ssoUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2IdpConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2IdpConfig</code>.
     */
    static validateJSON(data) {
        if (data['idpCertificates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['idpCertificates'])) {
                throw new Error("Expected the field `idpCertificates` to be an array in the JSON data but got " + data['idpCertificates']);
            }
            // validate the optional field `idpCertificates` (array)
            for (const item of data['idpCertificates']) {
                GoogleCloudIdentitytoolkitAdminV2IdpCertificate.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['idpEntityId'] && !(typeof data['idpEntityId'] === 'string' || data['idpEntityId'] instanceof String)) {
            throw new Error("Expected the field `idpEntityId` to be a primitive type in the JSON string but got " + data['idpEntityId']);
        }
        // ensure the json data is a string
        if (data['ssoUrl'] && !(typeof data['ssoUrl'] === 'string' || data['ssoUrl'] instanceof String)) {
            throw new Error("Expected the field `ssoUrl` to be a primitive type in the JSON string but got " + data['ssoUrl']);
        }

        return true;
    }


}



/**
 * IDP's public keys for verifying signature in the assertions.
 * @member {Array.<module:model/GoogleCloudIdentitytoolkitAdminV2IdpCertificate>} idpCertificates
 */
GoogleCloudIdentitytoolkitAdminV2IdpConfig.prototype['idpCertificates'] = undefined;

/**
 * Unique identifier for all SAML entities.
 * @member {String} idpEntityId
 */
GoogleCloudIdentitytoolkitAdminV2IdpConfig.prototype['idpEntityId'] = undefined;

/**
 * Indicates if outbounding SAMLRequest should be signed.
 * @member {Boolean} signRequest
 */
GoogleCloudIdentitytoolkitAdminV2IdpConfig.prototype['signRequest'] = undefined;

/**
 * URL to send Authentication request to.
 * @member {String} ssoUrl
 */
GoogleCloudIdentitytoolkitAdminV2IdpConfig.prototype['ssoUrl'] = undefined;






export default GoogleCloudIdentitytoolkitAdminV2IdpConfig;

