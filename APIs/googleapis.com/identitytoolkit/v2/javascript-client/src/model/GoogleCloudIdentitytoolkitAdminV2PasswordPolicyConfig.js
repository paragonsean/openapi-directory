/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion from './GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion';

/**
 * The GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig</code>.
     * The configuration for the password policy on the project.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig} The populated <code>GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig();

            if (data.hasOwnProperty('forceUpgradeOnSignin')) {
                obj['forceUpgradeOnSignin'] = ApiClient.convertToType(data['forceUpgradeOnSignin'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdateTime')) {
                obj['lastUpdateTime'] = ApiClient.convertToType(data['lastUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('passwordPolicyEnforcementState')) {
                obj['passwordPolicyEnforcementState'] = ApiClient.convertToType(data['passwordPolicyEnforcementState'], 'String');
            }
            if (data.hasOwnProperty('passwordPolicyVersions')) {
                obj['passwordPolicyVersions'] = ApiClient.convertToType(data['passwordPolicyVersions'], [GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastUpdateTime'] && !(typeof data['lastUpdateTime'] === 'string' || data['lastUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `lastUpdateTime` to be a primitive type in the JSON string but got " + data['lastUpdateTime']);
        }
        // ensure the json data is a string
        if (data['passwordPolicyEnforcementState'] && !(typeof data['passwordPolicyEnforcementState'] === 'string' || data['passwordPolicyEnforcementState'] instanceof String)) {
            throw new Error("Expected the field `passwordPolicyEnforcementState` to be a primitive type in the JSON string but got " + data['passwordPolicyEnforcementState']);
        }
        if (data['passwordPolicyVersions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['passwordPolicyVersions'])) {
                throw new Error("Expected the field `passwordPolicyVersions` to be an array in the JSON data but got " + data['passwordPolicyVersions']);
            }
            // validate the optional field `passwordPolicyVersions` (array)
            for (const item of data['passwordPolicyVersions']) {
                GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Users must have a password compliant with the password policy to sign-in.
 * @member {Boolean} forceUpgradeOnSignin
 */
GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.prototype['forceUpgradeOnSignin'] = undefined;

/**
 * Output only. The last time the password policy on the project was updated.
 * @member {String} lastUpdateTime
 */
GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.prototype['lastUpdateTime'] = undefined;

/**
 * Which enforcement mode to use for the password policy.
 * @member {module:model/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.PasswordPolicyEnforcementStateEnum} passwordPolicyEnforcementState
 */
GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.prototype['passwordPolicyEnforcementState'] = undefined;

/**
 * Must be of length 1. Contains the strength attributes for the password policy.
 * @member {Array.<module:model/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion>} passwordPolicyVersions
 */
GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.prototype['passwordPolicyVersions'] = undefined;





/**
 * Allowed values for the <code>passwordPolicyEnforcementState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig['PasswordPolicyEnforcementStateEnum'] = {

    /**
     * value: "PASSWORD_POLICY_ENFORCEMENT_STATE_UNSPECIFIED"
     * @const
     */
    "PASSWORD_POLICY_ENFORCEMENT_STATE_UNSPECIFIED": "PASSWORD_POLICY_ENFORCEMENT_STATE_UNSPECIFIED",

    /**
     * value: "false"
     * @const
     */
    "false": "false",

    /**
     * value: "ENFORCE"
     * @const
     */
    "ENFORCE": "ENFORCE"
};



export default GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig;

