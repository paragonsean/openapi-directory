/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState from './GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState';

/**
 * The GoogleCloudIdentitytoolkitV2RecaptchaConfig model module.
 * @module model/GoogleCloudIdentitytoolkitV2RecaptchaConfig
 * @version v2
 */
class GoogleCloudIdentitytoolkitV2RecaptchaConfig {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitV2RecaptchaConfig</code>.
     * Configuration for reCAPTCHA
     * @alias module:model/GoogleCloudIdentitytoolkitV2RecaptchaConfig
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitV2RecaptchaConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitV2RecaptchaConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitV2RecaptchaConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitV2RecaptchaConfig} The populated <code>GoogleCloudIdentitytoolkitV2RecaptchaConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitV2RecaptchaConfig();

            if (data.hasOwnProperty('recaptchaEnforcementState')) {
                obj['recaptchaEnforcementState'] = ApiClient.convertToType(data['recaptchaEnforcementState'], [GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState]);
            }
            if (data.hasOwnProperty('recaptchaKey')) {
                obj['recaptchaKey'] = ApiClient.convertToType(data['recaptchaKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitV2RecaptchaConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitV2RecaptchaConfig</code>.
     */
    static validateJSON(data) {
        if (data['recaptchaEnforcementState']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recaptchaEnforcementState'])) {
                throw new Error("Expected the field `recaptchaEnforcementState` to be an array in the JSON data but got " + data['recaptchaEnforcementState']);
            }
            // validate the optional field `recaptchaEnforcementState` (array)
            for (const item of data['recaptchaEnforcementState']) {
                GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['recaptchaKey'] && !(typeof data['recaptchaKey'] === 'string' || data['recaptchaKey'] instanceof String)) {
            throw new Error("Expected the field `recaptchaKey` to be a primitive type in the JSON string but got " + data['recaptchaKey']);
        }

        return true;
    }


}



/**
 * The reCAPTCHA enforcement state for the providers that GCIP supports reCAPTCHA protection.
 * @member {Array.<module:model/GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState>} recaptchaEnforcementState
 */
GoogleCloudIdentitytoolkitV2RecaptchaConfig.prototype['recaptchaEnforcementState'] = undefined;

/**
 * The reCAPTCHA Enterprise key resource name, e.g. \"projects/{project}/keys/{key}\". This will only be returned when the reCAPTCHA enforcement state is AUDIT or ENFORCE on at least one of the reCAPTCHA providers.
 * @member {String} recaptchaKey
 */
GoogleCloudIdentitytoolkitV2RecaptchaConfig.prototype['recaptchaKey'] = undefined;






export default GoogleCloudIdentitytoolkitV2RecaptchaConfig;

