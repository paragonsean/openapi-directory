/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudIdentitytoolkitAdminV2SpCertificate model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2SpCertificate
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2SpCertificate {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2SpCertificate</code>.
     * The SP&#39;s certificate data for IDP to verify the SAMLRequest generated by the SP.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2SpCertificate
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2SpCertificate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2SpCertificate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2SpCertificate} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2SpCertificate} The populated <code>GoogleCloudIdentitytoolkitAdminV2SpCertificate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2SpCertificate();

            if (data.hasOwnProperty('expiresAt')) {
                obj['expiresAt'] = ApiClient.convertToType(data['expiresAt'], 'String');
            }
            if (data.hasOwnProperty('x509Certificate')) {
                obj['x509Certificate'] = ApiClient.convertToType(data['x509Certificate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2SpCertificate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2SpCertificate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expiresAt'] && !(typeof data['expiresAt'] === 'string' || data['expiresAt'] instanceof String)) {
            throw new Error("Expected the field `expiresAt` to be a primitive type in the JSON string but got " + data['expiresAt']);
        }
        // ensure the json data is a string
        if (data['x509Certificate'] && !(typeof data['x509Certificate'] === 'string' || data['x509Certificate'] instanceof String)) {
            throw new Error("Expected the field `x509Certificate` to be a primitive type in the JSON string but got " + data['x509Certificate']);
        }

        return true;
    }


}



/**
 * Timestamp of the cert expiration instance.
 * @member {String} expiresAt
 */
GoogleCloudIdentitytoolkitAdminV2SpCertificate.prototype['expiresAt'] = undefined;

/**
 * Self-signed public certificate.
 * @member {String} x509Certificate
 */
GoogleCloudIdentitytoolkitAdminV2SpCertificate.prototype['x509Certificate'] = undefined;






export default GoogleCloudIdentitytoolkitAdminV2SpCertificate;

