/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig</code>.
     * Additional config for Apple for code flow.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig} The populated <code>GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig();

            if (data.hasOwnProperty('keyId')) {
                obj['keyId'] = ApiClient.convertToType(data['keyId'], 'String');
            }
            if (data.hasOwnProperty('privateKey')) {
                obj['privateKey'] = ApiClient.convertToType(data['privateKey'], 'String');
            }
            if (data.hasOwnProperty('teamId')) {
                obj['teamId'] = ApiClient.convertToType(data['teamId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyId'] && !(typeof data['keyId'] === 'string' || data['keyId'] instanceof String)) {
            throw new Error("Expected the field `keyId` to be a primitive type in the JSON string but got " + data['keyId']);
        }
        // ensure the json data is a string
        if (data['privateKey'] && !(typeof data['privateKey'] === 'string' || data['privateKey'] instanceof String)) {
            throw new Error("Expected the field `privateKey` to be a primitive type in the JSON string but got " + data['privateKey']);
        }
        // ensure the json data is a string
        if (data['teamId'] && !(typeof data['teamId'] === 'string' || data['teamId'] instanceof String)) {
            throw new Error("Expected the field `teamId` to be a primitive type in the JSON string but got " + data['teamId']);
        }

        return true;
    }


}



/**
 * Key ID for the private key.
 * @member {String} keyId
 */
GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig.prototype['keyId'] = undefined;

/**
 * Private key used for signing the client secret JWT.
 * @member {String} privateKey
 */
GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig.prototype['privateKey'] = undefined;

/**
 * Apple Developer Team ID.
 * @member {String} teamId
 */
GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig.prototype['teamId'] = undefined;






export default GoogleCloudIdentitytoolkitAdminV2CodeFlowConfig;

