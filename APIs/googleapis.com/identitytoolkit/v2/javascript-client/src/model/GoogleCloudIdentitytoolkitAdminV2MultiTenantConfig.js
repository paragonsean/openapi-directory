/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig</code>.
     * Configuration related to multi-tenant functionality.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig} The populated <code>GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig();

            if (data.hasOwnProperty('allowTenants')) {
                obj['allowTenants'] = ApiClient.convertToType(data['allowTenants'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultTenantLocation')) {
                obj['defaultTenantLocation'] = ApiClient.convertToType(data['defaultTenantLocation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultTenantLocation'] && !(typeof data['defaultTenantLocation'] === 'string' || data['defaultTenantLocation'] instanceof String)) {
            throw new Error("Expected the field `defaultTenantLocation` to be a primitive type in the JSON string but got " + data['defaultTenantLocation']);
        }

        return true;
    }


}



/**
 * Whether this project can have tenants or not.
 * @member {Boolean} allowTenants
 */
GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig.prototype['allowTenants'] = undefined;

/**
 * The default cloud parent org or folder that the tenant project should be created under. The parent resource name should be in the format of \"/\", such as \"folders/123\" or \"organizations/456\". If the value is not set, the tenant will be created under the same organization or folder as the agent project.
 * @member {String} defaultTenantLocation
 */
GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig.prototype['defaultTenantLocation'] = undefined;






export default GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig;

