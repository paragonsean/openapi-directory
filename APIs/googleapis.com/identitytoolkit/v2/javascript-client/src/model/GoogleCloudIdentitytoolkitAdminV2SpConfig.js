/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudIdentitytoolkitAdminV2SpCertificate from './GoogleCloudIdentitytoolkitAdminV2SpCertificate';

/**
 * The GoogleCloudIdentitytoolkitAdminV2SpConfig model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2SpConfig
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2SpConfig {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2SpConfig</code>.
     * The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2SpConfig
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2SpConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2SpConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2SpConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2SpConfig} The populated <code>GoogleCloudIdentitytoolkitAdminV2SpConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2SpConfig();

            if (data.hasOwnProperty('callbackUri')) {
                obj['callbackUri'] = ApiClient.convertToType(data['callbackUri'], 'String');
            }
            if (data.hasOwnProperty('spCertificates')) {
                obj['spCertificates'] = ApiClient.convertToType(data['spCertificates'], [GoogleCloudIdentitytoolkitAdminV2SpCertificate]);
            }
            if (data.hasOwnProperty('spEntityId')) {
                obj['spEntityId'] = ApiClient.convertToType(data['spEntityId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2SpConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2SpConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callbackUri'] && !(typeof data['callbackUri'] === 'string' || data['callbackUri'] instanceof String)) {
            throw new Error("Expected the field `callbackUri` to be a primitive type in the JSON string but got " + data['callbackUri']);
        }
        if (data['spCertificates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['spCertificates'])) {
                throw new Error("Expected the field `spCertificates` to be an array in the JSON data but got " + data['spCertificates']);
            }
            // validate the optional field `spCertificates` (array)
            for (const item of data['spCertificates']) {
                GoogleCloudIdentitytoolkitAdminV2SpCertificate.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['spEntityId'] && !(typeof data['spEntityId'] === 'string' || data['spEntityId'] instanceof String)) {
            throw new Error("Expected the field `spEntityId` to be a primitive type in the JSON string but got " + data['spEntityId']);
        }

        return true;
    }


}



/**
 * Callback URI where responses from IDP are handled.
 * @member {String} callbackUri
 */
GoogleCloudIdentitytoolkitAdminV2SpConfig.prototype['callbackUri'] = undefined;

/**
 * Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.
 * @member {Array.<module:model/GoogleCloudIdentitytoolkitAdminV2SpCertificate>} spCertificates
 */
GoogleCloudIdentitytoolkitAdminV2SpConfig.prototype['spCertificates'] = undefined;

/**
 * Unique identifier for all SAML entities.
 * @member {String} spEntityId
 */
GoogleCloudIdentitytoolkitAdminV2SpConfig.prototype['spEntityId'] = undefined;






export default GoogleCloudIdentitytoolkitAdminV2SpConfig;

