/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudIdentitytoolkitV2RevokeTokenRequest model module.
 * @module model/GoogleCloudIdentitytoolkitV2RevokeTokenRequest
 * @version v2
 */
class GoogleCloudIdentitytoolkitV2RevokeTokenRequest {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitV2RevokeTokenRequest</code>.
     * Request message for RevokeToken.
     * @alias module:model/GoogleCloudIdentitytoolkitV2RevokeTokenRequest
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitV2RevokeTokenRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitV2RevokeTokenRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitV2RevokeTokenRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitV2RevokeTokenRequest} The populated <code>GoogleCloudIdentitytoolkitV2RevokeTokenRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitV2RevokeTokenRequest();

            if (data.hasOwnProperty('idToken')) {
                obj['idToken'] = ApiClient.convertToType(data['idToken'], 'String');
            }
            if (data.hasOwnProperty('providerId')) {
                obj['providerId'] = ApiClient.convertToType(data['providerId'], 'String');
            }
            if (data.hasOwnProperty('redirectUri')) {
                obj['redirectUri'] = ApiClient.convertToType(data['redirectUri'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('tokenType')) {
                obj['tokenType'] = ApiClient.convertToType(data['tokenType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitV2RevokeTokenRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitV2RevokeTokenRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['idToken'] && !(typeof data['idToken'] === 'string' || data['idToken'] instanceof String)) {
            throw new Error("Expected the field `idToken` to be a primitive type in the JSON string but got " + data['idToken']);
        }
        // ensure the json data is a string
        if (data['providerId'] && !(typeof data['providerId'] === 'string' || data['providerId'] instanceof String)) {
            throw new Error("Expected the field `providerId` to be a primitive type in the JSON string but got " + data['providerId']);
        }
        // ensure the json data is a string
        if (data['redirectUri'] && !(typeof data['redirectUri'] === 'string' || data['redirectUri'] instanceof String)) {
            throw new Error("Expected the field `redirectUri` to be a primitive type in the JSON string but got " + data['redirectUri']);
        }
        // ensure the json data is a string
        if (data['tenantId'] && !(typeof data['tenantId'] === 'string' || data['tenantId'] instanceof String)) {
            throw new Error("Expected the field `tenantId` to be a primitive type in the JSON string but got " + data['tenantId']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['tokenType'] && !(typeof data['tokenType'] === 'string' || data['tokenType'] instanceof String)) {
            throw new Error("Expected the field `tokenType` to be a primitive type in the JSON string but got " + data['tokenType']);
        }

        return true;
    }


}



/**
 * Required. A valid Identity Platform ID token to link the account. If there was a successful token revocation request on the account and no tokens are generated after the revocation, the duplicate requests will be ignored and returned immediately.
 * @member {String} idToken
 */
GoogleCloudIdentitytoolkitV2RevokeTokenRequest.prototype['idToken'] = undefined;

/**
 * Required. The idp provider for the token. Currently only supports Apple Idp. The format should be \"apple.com\".
 * @member {String} providerId
 */
GoogleCloudIdentitytoolkitV2RevokeTokenRequest.prototype['providerId'] = undefined;

/**
 * The redirect URI provided in the initial authorization request made by the client to the IDP. The URI must use the HTTPS protocol, include a domain name, and can't contain an IP address or localhost. Required if token_type is CODE.
 * @member {String} redirectUri
 */
GoogleCloudIdentitytoolkitV2RevokeTokenRequest.prototype['redirectUri'] = undefined;

/**
 * The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.
 * @member {String} tenantId
 */
GoogleCloudIdentitytoolkitV2RevokeTokenRequest.prototype['tenantId'] = undefined;

/**
 * Required. The token to be revoked. If an authorization_code is passed in, the API will first exchange the code for access token and then revoke the token exchanged.
 * @member {String} token
 */
GoogleCloudIdentitytoolkitV2RevokeTokenRequest.prototype['token'] = undefined;

/**
 * Required. The type of the token to be revoked.
 * @member {module:model/GoogleCloudIdentitytoolkitV2RevokeTokenRequest.TokenTypeEnum} tokenType
 */
GoogleCloudIdentitytoolkitV2RevokeTokenRequest.prototype['tokenType'] = undefined;





/**
 * Allowed values for the <code>tokenType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudIdentitytoolkitV2RevokeTokenRequest['TokenTypeEnum'] = {

    /**
     * value: "TOKEN_TYPE_UNSPECIFIED"
     * @const
     */
    "TOKEN_TYPE_UNSPECIFIED": "TOKEN_TYPE_UNSPECIFIED",

    /**
     * value: "REFRESH_TOKEN"
     * @const
     */
    "REFRESH_TOKEN": "REFRESH_TOKEN",

    /**
     * value: "ACCESS_TOKEN"
     * @const
     */
    "ACCESS_TOKEN": "ACCESS_TOKEN",

    /**
     * value: "CODE"
     * @const
     */
    "CODE": "CODE"
};



export default GoogleCloudIdentitytoolkitV2RevokeTokenRequest;

