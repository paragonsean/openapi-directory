/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudIdentitytoolkitAdminV2EmailTemplate model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2EmailTemplate
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2EmailTemplate {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2EmailTemplate</code>.
     * Email template. The subject and body fields can contain the following placeholders which will be replaced with the appropriate values: %LINK% - The link to use to redeem the send OOB code. %EMAIL% - The email where the email is being sent. %NEW_EMAIL% - The new email being set for the account (when applicable). %APP_NAME% - The GCP project&#39;s display name. %DISPLAY_NAME% - The user&#39;s display name.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2EmailTemplate
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2EmailTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2EmailTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2EmailTemplate} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2EmailTemplate} The populated <code>GoogleCloudIdentitytoolkitAdminV2EmailTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2EmailTemplate();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('bodyFormat')) {
                obj['bodyFormat'] = ApiClient.convertToType(data['bodyFormat'], 'String');
            }
            if (data.hasOwnProperty('customized')) {
                obj['customized'] = ApiClient.convertToType(data['customized'], 'Boolean');
            }
            if (data.hasOwnProperty('replyTo')) {
                obj['replyTo'] = ApiClient.convertToType(data['replyTo'], 'String');
            }
            if (data.hasOwnProperty('senderDisplayName')) {
                obj['senderDisplayName'] = ApiClient.convertToType(data['senderDisplayName'], 'String');
            }
            if (data.hasOwnProperty('senderLocalPart')) {
                obj['senderLocalPart'] = ApiClient.convertToType(data['senderLocalPart'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2EmailTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2EmailTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['bodyFormat'] && !(typeof data['bodyFormat'] === 'string' || data['bodyFormat'] instanceof String)) {
            throw new Error("Expected the field `bodyFormat` to be a primitive type in the JSON string but got " + data['bodyFormat']);
        }
        // ensure the json data is a string
        if (data['replyTo'] && !(typeof data['replyTo'] === 'string' || data['replyTo'] instanceof String)) {
            throw new Error("Expected the field `replyTo` to be a primitive type in the JSON string but got " + data['replyTo']);
        }
        // ensure the json data is a string
        if (data['senderDisplayName'] && !(typeof data['senderDisplayName'] === 'string' || data['senderDisplayName'] instanceof String)) {
            throw new Error("Expected the field `senderDisplayName` to be a primitive type in the JSON string but got " + data['senderDisplayName']);
        }
        // ensure the json data is a string
        if (data['senderLocalPart'] && !(typeof data['senderLocalPart'] === 'string' || data['senderLocalPart'] instanceof String)) {
            throw new Error("Expected the field `senderLocalPart` to be a primitive type in the JSON string but got " + data['senderLocalPart']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }

        return true;
    }


}



/**
 * Email body
 * @member {String} body
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate.prototype['body'] = undefined;

/**
 * Email body format
 * @member {module:model/GoogleCloudIdentitytoolkitAdminV2EmailTemplate.BodyFormatEnum} bodyFormat
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate.prototype['bodyFormat'] = undefined;

/**
 * Output only. Whether the body or subject of the email is customized.
 * @member {Boolean} customized
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate.prototype['customized'] = undefined;

/**
 * Reply-to address
 * @member {String} replyTo
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate.prototype['replyTo'] = undefined;

/**
 * Sender display name
 * @member {String} senderDisplayName
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate.prototype['senderDisplayName'] = undefined;

/**
 * Local part of From address
 * @member {String} senderLocalPart
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate.prototype['senderLocalPart'] = undefined;

/**
 * Subject of the email
 * @member {String} subject
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate.prototype['subject'] = undefined;





/**
 * Allowed values for the <code>bodyFormat</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudIdentitytoolkitAdminV2EmailTemplate['BodyFormatEnum'] = {

    /**
     * value: "BODY_FORMAT_UNSPECIFIED"
     * @const
     */
    "BODY_FORMAT_UNSPECIFIED": "BODY_FORMAT_UNSPECIFIED",

    /**
     * value: "PLAIN_TEXT"
     * @const
     */
    "PLAIN_TEXT": "PLAIN_TEXT",

    /**
     * value: "HTML"
     * @const
     */
    "HTML": "HTML"
};



export default GoogleCloudIdentitytoolkitAdminV2EmailTemplate;

