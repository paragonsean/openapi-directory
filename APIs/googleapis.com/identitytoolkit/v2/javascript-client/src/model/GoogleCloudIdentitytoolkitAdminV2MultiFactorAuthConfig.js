/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudIdentitytoolkitAdminV2ProviderConfig from './GoogleCloudIdentitytoolkitAdminV2ProviderConfig';

/**
 * The GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig model module.
 * @module model/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig
 * @version v2
 */
class GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig {
    /**
     * Constructs a new <code>GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig</code>.
     * Options related to MultiFactor Authentication for the project.
     * @alias module:model/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig
     */
    constructor() { 
        
        GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig} The populated <code>GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig();

            if (data.hasOwnProperty('enabledProviders')) {
                obj['enabledProviders'] = ApiClient.convertToType(data['enabledProviders'], ['String']);
            }
            if (data.hasOwnProperty('providerConfigs')) {
                obj['providerConfigs'] = ApiClient.convertToType(data['providerConfigs'], [GoogleCloudIdentitytoolkitAdminV2ProviderConfig]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['enabledProviders'])) {
            throw new Error("Expected the field `enabledProviders` to be an array in the JSON data but got " + data['enabledProviders']);
        }
        if (data['providerConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['providerConfigs'])) {
                throw new Error("Expected the field `providerConfigs` to be an array in the JSON data but got " + data['providerConfigs']);
            }
            // validate the optional field `providerConfigs` (array)
            for (const item of data['providerConfigs']) {
                GoogleCloudIdentitytoolkitAdminV2ProviderConfig.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * A list of usable second factors for this project.
 * @member {Array.<module:model/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.EnabledProvidersEnum>} enabledProviders
 */
GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.prototype['enabledProviders'] = undefined;

/**
 * A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field.
 * @member {Array.<module:model/GoogleCloudIdentitytoolkitAdminV2ProviderConfig>} providerConfigs
 */
GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.prototype['providerConfigs'] = undefined;

/**
 * Whether MultiFactor Authentication has been enabled for this project.
 * @member {module:model/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.StateEnum} state
 */
GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.prototype['state'] = undefined;





/**
 * Allowed values for the <code>enabledProviders</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig['EnabledProvidersEnum'] = {

    /**
     * value: "PROVIDER_UNSPECIFIED"
     * @const
     */
    "PROVIDER_UNSPECIFIED": "PROVIDER_UNSPECIFIED",

    /**
     * value: "PHONE_SMS"
     * @const
     */
    "PHONE_SMS": "PHONE_SMS"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED",

    /**
     * value: "ENABLED"
     * @const
     */
    "ENABLED": "ENABLED",

    /**
     * value: "MANDATORY"
     * @const
     */
    "MANDATORY": "MANDATORY"
};



export default GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig;

