/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest from '../model/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest';
import GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse from '../model/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse';
import GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest from '../model/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest';
import GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse from '../model/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse';
import GoogleCloudIdentitytoolkitV2RevokeTokenRequest from '../model/GoogleCloudIdentitytoolkitV2RevokeTokenRequest';
import GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest from '../model/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest';
import GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse from '../model/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse';
import GoogleCloudIdentitytoolkitV2StartMfaSignInRequest from '../model/GoogleCloudIdentitytoolkitV2StartMfaSignInRequest';
import GoogleCloudIdentitytoolkitV2StartMfaSignInResponse from '../model/GoogleCloudIdentitytoolkitV2StartMfaSignInResponse';
import GoogleCloudIdentitytoolkitV2WithdrawMfaRequest from '../model/GoogleCloudIdentitytoolkitV2WithdrawMfaRequest';
import GoogleCloudIdentitytoolkitV2WithdrawMfaResponse from '../model/GoogleCloudIdentitytoolkitV2WithdrawMfaResponse';

/**
* Accounts service.
* @module api/AccountsApi
* @version v2
*/
export default class AccountsApi {

    /**
    * Constructs a new AccountsApi. 
    * @alias module:api/AccountsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the identitytoolkitAccountsMfaEnrollmentFinalize operation.
     * @callback module:api/AccountsApi~identitytoolkitAccountsMfaEnrollmentFinalizeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Finishes enrolling a second factor for the user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest} [googleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest] 
     * @param {module:api/AccountsApi~identitytoolkitAccountsMfaEnrollmentFinalizeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse}
     */
    identitytoolkitAccountsMfaEnrollmentFinalize(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentResponse;
      return this.apiClient.callApi(
        '/v2/accounts/mfaEnrollment:finalize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitAccountsMfaEnrollmentStart operation.
     * @callback module:api/AccountsApi~identitytoolkitAccountsMfaEnrollmentStartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Step one of the MFA enrollment process. In SMS case, this sends an SMS verification code to the user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest} [googleCloudIdentitytoolkitV2StartMfaEnrollmentRequest] 
     * @param {module:api/AccountsApi~identitytoolkitAccountsMfaEnrollmentStartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse}
     */
    identitytoolkitAccountsMfaEnrollmentStart(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitV2StartMfaEnrollmentRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse;
      return this.apiClient.callApi(
        '/v2/accounts/mfaEnrollment:start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitAccountsMfaEnrollmentWithdraw operation.
     * @callback module:api/AccountsApi~identitytoolkitAccountsMfaEnrollmentWithdrawCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitV2WithdrawMfaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Revokes one second factor from the enrolled second factors for an account.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudIdentitytoolkitV2WithdrawMfaRequest} [googleCloudIdentitytoolkitV2WithdrawMfaRequest] 
     * @param {module:api/AccountsApi~identitytoolkitAccountsMfaEnrollmentWithdrawCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitV2WithdrawMfaResponse}
     */
    identitytoolkitAccountsMfaEnrollmentWithdraw(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitV2WithdrawMfaRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitV2WithdrawMfaResponse;
      return this.apiClient.callApi(
        '/v2/accounts/mfaEnrollment:withdraw', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitAccountsMfaSignInFinalize operation.
     * @callback module:api/AccountsApi~identitytoolkitAccountsMfaSignInFinalizeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verifies the MFA challenge and performs sign-in
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest} [googleCloudIdentitytoolkitV2FinalizeMfaSignInRequest] 
     * @param {module:api/AccountsApi~identitytoolkitAccountsMfaSignInFinalizeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse}
     */
    identitytoolkitAccountsMfaSignInFinalize(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitV2FinalizeMfaSignInRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitV2FinalizeMfaSignInResponse;
      return this.apiClient.callApi(
        '/v2/accounts/mfaSignIn:finalize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitAccountsMfaSignInStart operation.
     * @callback module:api/AccountsApi~identitytoolkitAccountsMfaSignInStartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitV2StartMfaSignInResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sends the MFA challenge
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudIdentitytoolkitV2StartMfaSignInRequest} [googleCloudIdentitytoolkitV2StartMfaSignInRequest] 
     * @param {module:api/AccountsApi~identitytoolkitAccountsMfaSignInStartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitV2StartMfaSignInResponse}
     */
    identitytoolkitAccountsMfaSignInStart(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitV2StartMfaSignInRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitV2StartMfaSignInResponse;
      return this.apiClient.callApi(
        '/v2/accounts/mfaSignIn:start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitAccountsRevokeToken operation.
     * @callback module:api/AccountsApi~identitytoolkitAccountsRevokeTokenCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Revokes a user's token from an Identity Provider (IdP). This is done by manually providing an IdP credential, and the token types for revocation. An [API key](https://cloud.google.com/docs/authentication/api-keys) is required in the request in order to identify the Google Cloud project.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudIdentitytoolkitV2RevokeTokenRequest} [googleCloudIdentitytoolkitV2RevokeTokenRequest] 
     * @param {module:api/AccountsApi~identitytoolkitAccountsRevokeTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    identitytoolkitAccountsRevokeToken(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitV2RevokeTokenRequest'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/accounts:revokeToken', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
