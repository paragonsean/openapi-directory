/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig from '../model/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig';
import GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig from '../model/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig';
import GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse from '../model/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse';
import GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse from '../model/GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse';
import GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse from '../model/GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse';
import GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse from '../model/GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse';
import GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig from '../model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig';
import GoogleCloudIdentitytoolkitAdminV2Tenant from '../model/GoogleCloudIdentitytoolkitAdminV2Tenant';
import GoogleIamV1GetIamPolicyRequest from '../model/GoogleIamV1GetIamPolicyRequest';
import GoogleIamV1Policy from '../model/GoogleIamV1Policy';
import GoogleIamV1SetIamPolicyRequest from '../model/GoogleIamV1SetIamPolicyRequest';
import GoogleIamV1TestIamPermissionsRequest from '../model/GoogleIamV1TestIamPermissionsRequest';
import GoogleIamV1TestIamPermissionsResponse from '../model/GoogleIamV1TestIamPermissionsResponse';

/**
* Projects service.
* @module api/ProjectsApi
* @version v2
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the identitytoolkitProjectsIdentityPlatformInitializeAuth operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsIdentityPlatformInitializeAuthCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end authentication system for third-party users to access your apps and services. These could include mobile/web apps, games, APIs and beyond. This is the publicly available variant of EnableIdentityPlatform that is only available to billing-enabled projects.
     * @param {String} project The resource name of the target project the developer wants to enable Identity Platform for.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsIdentityPlatformInitializeAuthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    identitytoolkitProjectsIdentityPlatformInitializeAuth(project, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling identitytoolkitProjectsIdentityPlatformInitializeAuth");
      }

      let pathParams = {
        'project': project
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/{project}/identityPlatform:initializeAuth', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsCreate operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a tenant. Requires write permission on the Agent project.
     * @param {String} parent The parent resource name where the tenant will be created. For example, \"projects/project1\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2Tenant} [googleCloudIdentitytoolkitAdminV2Tenant] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2Tenant}
     */
    identitytoolkitProjectsTenantsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitAdminV2Tenant'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2Tenant;
      return this.apiClient.callApi(
        '/v2/{parent}/tenants', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a default supported Idp configuration for an Identity Toolkit project.
     * @param {String} parent The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [idpId] The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig} [googleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig}
     */
    identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'idpId': opts['idpId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig;
      return this.apiClient.callApi(
        '/v2/{parent}/defaultSupportedIdpConfigs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all default supported Idp configurations for an Identity Toolkit project.
     * @param {String} parent The parent resource name, for example, \"projects/my-awesome-project\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of items to return.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any.
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse}
     */
    identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/defaultSupportedIdpConfigs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsGetIamPolicy operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsGetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.
     * @param {String} resource REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleIamV1GetIamPolicyRequest} [googleIamV1GetIamPolicyRequest] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsGetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    identitytoolkitProjectsTenantsGetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1GetIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling identitytoolkitProjectsTenantsGetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v2/{resource}:getIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsInboundSamlConfigsCreate operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsInboundSamlConfigsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an inbound SAML configuration for an Identity Toolkit project.
     * @param {String} parent The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [inboundSamlConfigId] The id to use for this config.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig} [googleCloudIdentitytoolkitAdminV2InboundSamlConfig] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsInboundSamlConfigsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig}
     */
    identitytoolkitProjectsTenantsInboundSamlConfigsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitAdminV2InboundSamlConfig'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsInboundSamlConfigsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'inboundSamlConfigId': opts['inboundSamlConfigId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig;
      return this.apiClient.callApi(
        '/v2/{parent}/inboundSamlConfigs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsInboundSamlConfigsList operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsInboundSamlConfigsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all inbound SAML configurations for an Identity Toolkit project.
     * @param {String} parent The parent resource name, for example, \"projects/my-awesome-project\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of items to return.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any.
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsInboundSamlConfigsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse}
     */
    identitytoolkitProjectsTenantsInboundSamlConfigsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsInboundSamlConfigsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/inboundSamlConfigs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsList operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List tenants under the given agent project. Requires read permission on the Agent project.
     * @param {String} parent Required. The parent resource name to list tenants for.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of results to return, capped at 1000. If not specified, the default value is 20.
     * @param {String} [pageToken] The pagination token from the response of a previous request.
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse}
     */
    identitytoolkitProjectsTenantsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/tenants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsOauthIdpConfigsCreate operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an Oidc Idp configuration for an Identity Toolkit project.
     * @param {String} parent The parent resource name where the config to be created, for example: \"projects/my-awesome-project\"
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [oauthIdpConfigId] The id to use for this config.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig} [googleCloudIdentitytoolkitAdminV2OAuthIdpConfig] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
     */
    identitytoolkitProjectsTenantsOauthIdpConfigsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitAdminV2OAuthIdpConfig'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsOauthIdpConfigsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'oauthIdpConfigId': opts['oauthIdpConfigId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
      return this.apiClient.callApi(
        '/v2/{parent}/oauthIdpConfigs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsOauthIdpConfigsDelete operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an Oidc Idp configuration for an Identity Toolkit project.
     * @param {String} name The resource name of the config to be deleted, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    identitytoolkitProjectsTenantsOauthIdpConfigsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling identitytoolkitProjectsTenantsOauthIdpConfigsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsOauthIdpConfigsGet operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an Oidc Idp configuration for an Identity Toolkit project.
     * @param {String} name The resource name of the config, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
     */
    identitytoolkitProjectsTenantsOauthIdpConfigsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling identitytoolkitProjectsTenantsOauthIdpConfigsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
      return this.apiClient.callApi(
        '/v2/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsOauthIdpConfigsList operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all Oidc Idp configurations for an Identity Toolkit project.
     * @param {String} parent The parent resource name, for example, \"projects/my-awesome-project\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of items to return.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any.
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse}
     */
    identitytoolkitProjectsTenantsOauthIdpConfigsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling identitytoolkitProjectsTenantsOauthIdpConfigsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse;
      return this.apiClient.callApi(
        '/v2/{parent}/oauthIdpConfigs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsOauthIdpConfigsPatch operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an Oidc Idp configuration for an Identity Toolkit project.
     * @param {String} name The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [updateMask] The update mask applies to the resource. Empty update mask will result in updating nothing. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
     * @param {module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig} [googleCloudIdentitytoolkitAdminV2OAuthIdpConfig] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsOauthIdpConfigsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig}
     */
    identitytoolkitProjectsTenantsOauthIdpConfigsPatch(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudIdentitytoolkitAdminV2OAuthIdpConfig'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling identitytoolkitProjectsTenantsOauthIdpConfigsPatch");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
      return this.apiClient.callApi(
        '/v2/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsSetIamPolicy operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsSetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.
     * @param {String} resource REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleIamV1SetIamPolicyRequest} [googleIamV1SetIamPolicyRequest] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsSetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    identitytoolkitProjectsTenantsSetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1SetIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling identitytoolkitProjectsTenantsSetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v2/{resource}:setIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the identitytoolkitProjectsTenantsTestIamPermissions operation.
     * @callback module:api/ProjectsApi~identitytoolkitProjectsTenantsTestIamPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1TestIamPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request.
     * @param {String} resource REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleIamV1TestIamPermissionsRequest} [googleIamV1TestIamPermissionsRequest] 
     * @param {module:api/ProjectsApi~identitytoolkitProjectsTenantsTestIamPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1TestIamPermissionsResponse}
     */
    identitytoolkitProjectsTenantsTestIamPermissions(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1TestIamPermissionsRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling identitytoolkitProjectsTenantsTestIamPermissions");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1TestIamPermissionsResponse;
      return this.apiClient.callApi(
        '/v2/{resource}:testIamPermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
