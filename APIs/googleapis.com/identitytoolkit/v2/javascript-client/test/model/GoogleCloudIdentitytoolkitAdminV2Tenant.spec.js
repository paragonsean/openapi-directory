/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IdentityToolkitApi);
  }
}(this, function(expect, IdentityToolkitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudIdentitytoolkitAdminV2Tenant', function() {
    it('should create an instance of GoogleCloudIdentitytoolkitAdminV2Tenant', function() {
      // uncomment below and update the code to test GoogleCloudIdentitytoolkitAdminV2Tenant
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be.a(IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant);
    });

    it('should have the property allowPasswordSignup (base name: "allowPasswordSignup")', function() {
      // uncomment below and update the code to test the property allowPasswordSignup
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property autodeleteAnonymousUsers (base name: "autodeleteAnonymousUsers")', function() {
      // uncomment below and update the code to test the property autodeleteAnonymousUsers
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property client (base name: "client")', function() {
      // uncomment below and update the code to test the property client
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property disableAuth (base name: "disableAuth")', function() {
      // uncomment below and update the code to test the property disableAuth
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property emailPrivacyConfig (base name: "emailPrivacyConfig")', function() {
      // uncomment below and update the code to test the property emailPrivacyConfig
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property enableAnonymousUser (base name: "enableAnonymousUser")', function() {
      // uncomment below and update the code to test the property enableAnonymousUser
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property enableEmailLinkSignin (base name: "enableEmailLinkSignin")', function() {
      // uncomment below and update the code to test the property enableEmailLinkSignin
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property hashConfig (base name: "hashConfig")', function() {
      // uncomment below and update the code to test the property hashConfig
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property inheritance (base name: "inheritance")', function() {
      // uncomment below and update the code to test the property inheritance
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property mfaConfig (base name: "mfaConfig")', function() {
      // uncomment below and update the code to test the property mfaConfig
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property monitoring (base name: "monitoring")', function() {
      // uncomment below and update the code to test the property monitoring
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property passwordPolicyConfig (base name: "passwordPolicyConfig")', function() {
      // uncomment below and update the code to test the property passwordPolicyConfig
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property recaptchaConfig (base name: "recaptchaConfig")', function() {
      // uncomment below and update the code to test the property recaptchaConfig
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property smsRegionConfig (base name: "smsRegionConfig")', function() {
      // uncomment below and update the code to test the property smsRegionConfig
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

    it('should have the property testPhoneNumbers (base name: "testPhoneNumbers")', function() {
      // uncomment below and update the code to test the property testPhoneNumbers
      //var instance = new IdentityToolkitApi.GoogleCloudIdentitytoolkitAdminV2Tenant();
      //expect(instance).to.be();
    });

  });

}));
