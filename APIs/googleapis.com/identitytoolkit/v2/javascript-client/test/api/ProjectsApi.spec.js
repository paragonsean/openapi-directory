/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IdentityToolkitApi);
  }
}(this, function(expect, IdentityToolkitApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IdentityToolkitApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('identitytoolkitProjectsIdentityPlatformInitializeAuth', function() {
      it('should call identitytoolkitProjectsIdentityPlatformInitializeAuth successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsIdentityPlatformInitializeAuth
        //instance.identitytoolkitProjectsIdentityPlatformInitializeAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsCreate', function() {
      it('should call identitytoolkitProjectsTenantsCreate successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsCreate
        //instance.identitytoolkitProjectsTenantsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate', function() {
      it('should call identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate
        //instance.identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList', function() {
      it('should call identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList
        //instance.identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsGetIamPolicy', function() {
      it('should call identitytoolkitProjectsTenantsGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsGetIamPolicy
        //instance.identitytoolkitProjectsTenantsGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsInboundSamlConfigsCreate', function() {
      it('should call identitytoolkitProjectsTenantsInboundSamlConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsInboundSamlConfigsCreate
        //instance.identitytoolkitProjectsTenantsInboundSamlConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsInboundSamlConfigsList', function() {
      it('should call identitytoolkitProjectsTenantsInboundSamlConfigsList successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsInboundSamlConfigsList
        //instance.identitytoolkitProjectsTenantsInboundSamlConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsList', function() {
      it('should call identitytoolkitProjectsTenantsList successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsList
        //instance.identitytoolkitProjectsTenantsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsOauthIdpConfigsCreate', function() {
      it('should call identitytoolkitProjectsTenantsOauthIdpConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsOauthIdpConfigsCreate
        //instance.identitytoolkitProjectsTenantsOauthIdpConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsOauthIdpConfigsDelete', function() {
      it('should call identitytoolkitProjectsTenantsOauthIdpConfigsDelete successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsOauthIdpConfigsDelete
        //instance.identitytoolkitProjectsTenantsOauthIdpConfigsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsOauthIdpConfigsGet', function() {
      it('should call identitytoolkitProjectsTenantsOauthIdpConfigsGet successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsOauthIdpConfigsGet
        //instance.identitytoolkitProjectsTenantsOauthIdpConfigsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsOauthIdpConfigsList', function() {
      it('should call identitytoolkitProjectsTenantsOauthIdpConfigsList successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsOauthIdpConfigsList
        //instance.identitytoolkitProjectsTenantsOauthIdpConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsOauthIdpConfigsPatch', function() {
      it('should call identitytoolkitProjectsTenantsOauthIdpConfigsPatch successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsOauthIdpConfigsPatch
        //instance.identitytoolkitProjectsTenantsOauthIdpConfigsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsSetIamPolicy', function() {
      it('should call identitytoolkitProjectsTenantsSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsSetIamPolicy
        //instance.identitytoolkitProjectsTenantsSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('identitytoolkitProjectsTenantsTestIamPermissions', function() {
      it('should call identitytoolkitProjectsTenantsTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test identitytoolkitProjectsTenantsTestIamPermissions
        //instance.identitytoolkitProjectsTenantsTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
