# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2EmailTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, body_format: str=None, customized: bool=None, reply_to: str=None, sender_display_name: str=None, sender_local_part: str=None, subject: str=None):
        """GoogleCloudIdentitytoolkitAdminV2EmailTemplate - a model defined in OpenAPI

        :param body: The body of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :param body_format: The body_format of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :param customized: The customized of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :param reply_to: The reply_to of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :param sender_display_name: The sender_display_name of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :param sender_local_part: The sender_local_part of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :param subject: The subject of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        """
        self.openapi_types = {
            'body': str,
            'body_format': str,
            'customized': bool,
            'reply_to': str,
            'sender_display_name': str,
            'sender_local_part': str,
            'subject': str
        }

        self.attribute_map = {
            'body': 'body',
            'body_format': 'bodyFormat',
            'customized': 'customized',
            'reply_to': 'replyTo',
            'sender_display_name': 'senderDisplayName',
            'sender_local_part': 'senderLocalPart',
            'subject': 'subject'
        }

        self._body = body
        self._body_format = body_format
        self._customized = customized
        self._reply_to = reply_to
        self._sender_display_name = sender_display_name
        self._sender_local_part = sender_local_part
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2EmailTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2EmailTemplate of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Email body

        :return: The body of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Email body

        :param body: The body of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :type body: str
        """

        self._body = body

    @property
    def body_format(self):
        """Gets the body_format of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Email body format

        :return: The body_format of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :rtype: str
        """
        return self._body_format

    @body_format.setter
    def body_format(self, body_format):
        """Sets the body_format of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Email body format

        :param body_format: The body_format of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :type body_format: str
        """
        allowed_values = ["BODY_FORMAT_UNSPECIFIED", "PLAIN_TEXT", "HTML"]  # noqa: E501
        if body_format not in allowed_values:
            raise ValueError(
                "Invalid value for `body_format` ({0}), must be one of {1}"
                .format(body_format, allowed_values)
            )

        self._body_format = body_format

    @property
    def customized(self):
        """Gets the customized of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Output only. Whether the body or subject of the email is customized.

        :return: The customized of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :rtype: bool
        """
        return self._customized

    @customized.setter
    def customized(self, customized):
        """Sets the customized of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Output only. Whether the body or subject of the email is customized.

        :param customized: The customized of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :type customized: bool
        """

        self._customized = customized

    @property
    def reply_to(self):
        """Gets the reply_to of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Reply-to address

        :return: The reply_to of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :rtype: str
        """
        return self._reply_to

    @reply_to.setter
    def reply_to(self, reply_to):
        """Sets the reply_to of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Reply-to address

        :param reply_to: The reply_to of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :type reply_to: str
        """

        self._reply_to = reply_to

    @property
    def sender_display_name(self):
        """Gets the sender_display_name of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Sender display name

        :return: The sender_display_name of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :rtype: str
        """
        return self._sender_display_name

    @sender_display_name.setter
    def sender_display_name(self, sender_display_name):
        """Sets the sender_display_name of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Sender display name

        :param sender_display_name: The sender_display_name of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :type sender_display_name: str
        """

        self._sender_display_name = sender_display_name

    @property
    def sender_local_part(self):
        """Gets the sender_local_part of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Local part of From address

        :return: The sender_local_part of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :rtype: str
        """
        return self._sender_local_part

    @sender_local_part.setter
    def sender_local_part(self, sender_local_part):
        """Sets the sender_local_part of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Local part of From address

        :param sender_local_part: The sender_local_part of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :type sender_local_part: str
        """

        self._sender_local_part = sender_local_part

    @property
    def subject(self):
        """Gets the subject of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Subject of the email

        :return: The subject of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.

        Subject of the email

        :param subject: The subject of this GoogleCloudIdentitytoolkitAdminV2EmailTemplate.
        :type subject: str
        """

        self._subject = subject
