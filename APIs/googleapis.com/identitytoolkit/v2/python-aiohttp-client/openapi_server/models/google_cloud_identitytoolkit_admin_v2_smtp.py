# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2Smtp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host: str=None, password: str=None, port: int=None, security_mode: str=None, sender_email: str=None, username: str=None):
        """GoogleCloudIdentitytoolkitAdminV2Smtp - a model defined in OpenAPI

        :param host: The host of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :param password: The password of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :param port: The port of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :param security_mode: The security_mode of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :param sender_email: The sender_email of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :param username: The username of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        """
        self.openapi_types = {
            'host': str,
            'password': str,
            'port': int,
            'security_mode': str,
            'sender_email': str,
            'username': str
        }

        self.attribute_map = {
            'host': 'host',
            'password': 'password',
            'port': 'port',
            'security_mode': 'securityMode',
            'sender_email': 'senderEmail',
            'username': 'username'
        }

        self._host = host
        self._password = password
        self._port = port
        self._security_mode = security_mode
        self._sender_email = sender_email
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2Smtp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2Smtp of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self):
        """Gets the host of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay host

        :return: The host of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay host

        :param host: The host of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :type host: str
        """

        self._host = host

    @property
    def password(self):
        """Gets the password of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay password

        :return: The password of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay password

        :param password: The password of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :type password: str
        """

        self._password = password

    @property
    def port(self):
        """Gets the port of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay port

        :return: The port of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay port

        :param port: The port of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :type port: int
        """

        self._port = port

    @property
    def security_mode(self):
        """Gets the security_mode of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP security mode.

        :return: The security_mode of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :rtype: str
        """
        return self._security_mode

    @security_mode.setter
    def security_mode(self, security_mode):
        """Sets the security_mode of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP security mode.

        :param security_mode: The security_mode of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :type security_mode: str
        """
        allowed_values = ["SECURITY_MODE_UNSPECIFIED", "SSL", "START_TLS"]  # noqa: E501
        if security_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `security_mode` ({0}), must be one of {1}"
                .format(security_mode, allowed_values)
            )

        self._security_mode = security_mode

    @property
    def sender_email(self):
        """Gets the sender_email of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        Sender email for the SMTP relay

        :return: The sender_email of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :rtype: str
        """
        return self._sender_email

    @sender_email.setter
    def sender_email(self, sender_email):
        """Sets the sender_email of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        Sender email for the SMTP relay

        :param sender_email: The sender_email of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :type sender_email: str
        """

        self._sender_email = sender_email

    @property
    def username(self):
        """Gets the username of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay username

        :return: The username of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this GoogleCloudIdentitytoolkitAdminV2Smtp.

        SMTP relay username

        :param username: The username of this GoogleCloudIdentitytoolkitAdminV2Smtp.
        :type username: str
        """

        self._username = username
