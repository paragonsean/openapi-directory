# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_v2_recaptcha_enforcement_state import GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState
from openapi_server import util


class GoogleCloudIdentitytoolkitV2RecaptchaConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recaptcha_enforcement_state: List[GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState]=None, recaptcha_key: str=None):
        """GoogleCloudIdentitytoolkitV2RecaptchaConfig - a model defined in OpenAPI

        :param recaptcha_enforcement_state: The recaptcha_enforcement_state of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.
        :param recaptcha_key: The recaptcha_key of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.
        """
        self.openapi_types = {
            'recaptcha_enforcement_state': List[GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState],
            'recaptcha_key': str
        }

        self.attribute_map = {
            'recaptcha_enforcement_state': 'recaptchaEnforcementState',
            'recaptcha_key': 'recaptchaKey'
        }

        self._recaptcha_enforcement_state = recaptcha_enforcement_state
        self._recaptcha_key = recaptcha_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitV2RecaptchaConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitV2RecaptchaConfig of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recaptcha_enforcement_state(self):
        """Gets the recaptcha_enforcement_state of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.

        The reCAPTCHA enforcement state for the providers that GCIP supports reCAPTCHA protection.

        :return: The recaptcha_enforcement_state of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.
        :rtype: List[GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState]
        """
        return self._recaptcha_enforcement_state

    @recaptcha_enforcement_state.setter
    def recaptcha_enforcement_state(self, recaptcha_enforcement_state):
        """Sets the recaptcha_enforcement_state of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.

        The reCAPTCHA enforcement state for the providers that GCIP supports reCAPTCHA protection.

        :param recaptcha_enforcement_state: The recaptcha_enforcement_state of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.
        :type recaptcha_enforcement_state: List[GoogleCloudIdentitytoolkitV2RecaptchaEnforcementState]
        """

        self._recaptcha_enforcement_state = recaptcha_enforcement_state

    @property
    def recaptcha_key(self):
        """Gets the recaptcha_key of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.

        The reCAPTCHA Enterprise key resource name, e.g. \"projects/{project}/keys/{key}\". This will only be returned when the reCAPTCHA enforcement state is AUDIT or ENFORCE on at least one of the reCAPTCHA providers.

        :return: The recaptcha_key of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.
        :rtype: str
        """
        return self._recaptcha_key

    @recaptcha_key.setter
    def recaptcha_key(self, recaptcha_key):
        """Sets the recaptcha_key of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.

        The reCAPTCHA Enterprise key resource name, e.g. \"projects/{project}/keys/{key}\". This will only be returned when the reCAPTCHA enforcement state is AUDIT or ENFORCE on at least one of the reCAPTCHA providers.

        :param recaptcha_key: The recaptcha_key of this GoogleCloudIdentitytoolkitV2RecaptchaConfig.
        :type recaptcha_key: str
        """

        self._recaptcha_key = recaptcha_key
