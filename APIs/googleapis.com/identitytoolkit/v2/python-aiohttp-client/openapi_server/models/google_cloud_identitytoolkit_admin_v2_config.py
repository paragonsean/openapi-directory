# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_blocking_functions_config import GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_client_config import GoogleCloudIdentitytoolkitAdminV2ClientConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_email_privacy_config import GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_monitoring_config import GoogleCloudIdentitytoolkitAdminV2MonitoringConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_multi_factor_auth_config import GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_multi_tenant_config import GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_notification_config import GoogleCloudIdentitytoolkitAdminV2NotificationConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_password_policy_config import GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_quota_config import GoogleCloudIdentitytoolkitAdminV2QuotaConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_recaptcha_config import GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_sign_in_config import GoogleCloudIdentitytoolkitAdminV2SignInConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_sms_region_config import GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2Config(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorized_domains: List[str]=None, autodelete_anonymous_users: bool=None, blocking_functions: GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig=None, client: GoogleCloudIdentitytoolkitAdminV2ClientConfig=None, email_privacy_config: GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig=None, mfa: GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig=None, monitoring: GoogleCloudIdentitytoolkitAdminV2MonitoringConfig=None, multi_tenant: GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig=None, name: str=None, notification: GoogleCloudIdentitytoolkitAdminV2NotificationConfig=None, password_policy_config: GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig=None, quota: GoogleCloudIdentitytoolkitAdminV2QuotaConfig=None, recaptcha_config: GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig=None, sign_in: GoogleCloudIdentitytoolkitAdminV2SignInConfig=None, sms_region_config: GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig=None, subtype: str=None):
        """GoogleCloudIdentitytoolkitAdminV2Config - a model defined in OpenAPI

        :param authorized_domains: The authorized_domains of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param autodelete_anonymous_users: The autodelete_anonymous_users of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param blocking_functions: The blocking_functions of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param client: The client of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param email_privacy_config: The email_privacy_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param mfa: The mfa of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param monitoring: The monitoring of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param multi_tenant: The multi_tenant of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param name: The name of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param notification: The notification of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param password_policy_config: The password_policy_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param quota: The quota of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param recaptcha_config: The recaptcha_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param sign_in: The sign_in of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param sms_region_config: The sms_region_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :param subtype: The subtype of this GoogleCloudIdentitytoolkitAdminV2Config.
        """
        self.openapi_types = {
            'authorized_domains': List[str],
            'autodelete_anonymous_users': bool,
            'blocking_functions': GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig,
            'client': GoogleCloudIdentitytoolkitAdminV2ClientConfig,
            'email_privacy_config': GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig,
            'mfa': GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig,
            'monitoring': GoogleCloudIdentitytoolkitAdminV2MonitoringConfig,
            'multi_tenant': GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig,
            'name': str,
            'notification': GoogleCloudIdentitytoolkitAdminV2NotificationConfig,
            'password_policy_config': GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig,
            'quota': GoogleCloudIdentitytoolkitAdminV2QuotaConfig,
            'recaptcha_config': GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig,
            'sign_in': GoogleCloudIdentitytoolkitAdminV2SignInConfig,
            'sms_region_config': GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig,
            'subtype': str
        }

        self.attribute_map = {
            'authorized_domains': 'authorizedDomains',
            'autodelete_anonymous_users': 'autodeleteAnonymousUsers',
            'blocking_functions': 'blockingFunctions',
            'client': 'client',
            'email_privacy_config': 'emailPrivacyConfig',
            'mfa': 'mfa',
            'monitoring': 'monitoring',
            'multi_tenant': 'multiTenant',
            'name': 'name',
            'notification': 'notification',
            'password_policy_config': 'passwordPolicyConfig',
            'quota': 'quota',
            'recaptcha_config': 'recaptchaConfig',
            'sign_in': 'signIn',
            'sms_region_config': 'smsRegionConfig',
            'subtype': 'subtype'
        }

        self._authorized_domains = authorized_domains
        self._autodelete_anonymous_users = autodelete_anonymous_users
        self._blocking_functions = blocking_functions
        self._client = client
        self._email_privacy_config = email_privacy_config
        self._mfa = mfa
        self._monitoring = monitoring
        self._multi_tenant = multi_tenant
        self._name = name
        self._notification = notification
        self._password_policy_config = password_policy_config
        self._quota = quota
        self._recaptcha_config = recaptcha_config
        self._sign_in = sign_in
        self._sms_region_config = sms_region_config
        self._subtype = subtype

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2Config':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2Config of this GoogleCloudIdentitytoolkitAdminV2Config.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorized_domains(self):
        """Gets the authorized_domains of this GoogleCloudIdentitytoolkitAdminV2Config.

        List of domains authorized for OAuth redirects

        :return: The authorized_domains of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: List[str]
        """
        return self._authorized_domains

    @authorized_domains.setter
    def authorized_domains(self, authorized_domains):
        """Sets the authorized_domains of this GoogleCloudIdentitytoolkitAdminV2Config.

        List of domains authorized for OAuth redirects

        :param authorized_domains: The authorized_domains of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type authorized_domains: List[str]
        """

        self._authorized_domains = authorized_domains

    @property
    def autodelete_anonymous_users(self):
        """Gets the autodelete_anonymous_users of this GoogleCloudIdentitytoolkitAdminV2Config.

        Whether anonymous users will be auto-deleted after a period of 30 days.

        :return: The autodelete_anonymous_users of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: bool
        """
        return self._autodelete_anonymous_users

    @autodelete_anonymous_users.setter
    def autodelete_anonymous_users(self, autodelete_anonymous_users):
        """Sets the autodelete_anonymous_users of this GoogleCloudIdentitytoolkitAdminV2Config.

        Whether anonymous users will be auto-deleted after a period of 30 days.

        :param autodelete_anonymous_users: The autodelete_anonymous_users of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type autodelete_anonymous_users: bool
        """

        self._autodelete_anonymous_users = autodelete_anonymous_users

    @property
    def blocking_functions(self):
        """Gets the blocking_functions of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The blocking_functions of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig
        """
        return self._blocking_functions

    @blocking_functions.setter
    def blocking_functions(self, blocking_functions):
        """Sets the blocking_functions of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param blocking_functions: The blocking_functions of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type blocking_functions: GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig
        """

        self._blocking_functions = blocking_functions

    @property
    def client(self):
        """Gets the client of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The client of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2ClientConfig
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param client: The client of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type client: GoogleCloudIdentitytoolkitAdminV2ClientConfig
        """

        self._client = client

    @property
    def email_privacy_config(self):
        """Gets the email_privacy_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The email_privacy_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig
        """
        return self._email_privacy_config

    @email_privacy_config.setter
    def email_privacy_config(self, email_privacy_config):
        """Sets the email_privacy_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param email_privacy_config: The email_privacy_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type email_privacy_config: GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig
        """

        self._email_privacy_config = email_privacy_config

    @property
    def mfa(self):
        """Gets the mfa of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The mfa of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig
        """
        return self._mfa

    @mfa.setter
    def mfa(self, mfa):
        """Sets the mfa of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param mfa: The mfa of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type mfa: GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig
        """

        self._mfa = mfa

    @property
    def monitoring(self):
        """Gets the monitoring of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The monitoring of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2MonitoringConfig
        """
        return self._monitoring

    @monitoring.setter
    def monitoring(self, monitoring):
        """Sets the monitoring of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param monitoring: The monitoring of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type monitoring: GoogleCloudIdentitytoolkitAdminV2MonitoringConfig
        """

        self._monitoring = monitoring

    @property
    def multi_tenant(self):
        """Gets the multi_tenant of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The multi_tenant of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig
        """
        return self._multi_tenant

    @multi_tenant.setter
    def multi_tenant(self, multi_tenant):
        """Sets the multi_tenant of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param multi_tenant: The multi_tenant of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type multi_tenant: GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig
        """

        self._multi_tenant = multi_tenant

    @property
    def name(self):
        """Gets the name of this GoogleCloudIdentitytoolkitAdminV2Config.

        Output only. The name of the Config resource. Example: \"projects/my-awesome-project/config\"

        :return: The name of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudIdentitytoolkitAdminV2Config.

        Output only. The name of the Config resource. Example: \"projects/my-awesome-project/config\"

        :param name: The name of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type name: str
        """

        self._name = name

    @property
    def notification(self):
        """Gets the notification of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The notification of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2NotificationConfig
        """
        return self._notification

    @notification.setter
    def notification(self, notification):
        """Sets the notification of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param notification: The notification of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type notification: GoogleCloudIdentitytoolkitAdminV2NotificationConfig
        """

        self._notification = notification

    @property
    def password_policy_config(self):
        """Gets the password_policy_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The password_policy_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig
        """
        return self._password_policy_config

    @password_policy_config.setter
    def password_policy_config(self, password_policy_config):
        """Sets the password_policy_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param password_policy_config: The password_policy_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type password_policy_config: GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig
        """

        self._password_policy_config = password_policy_config

    @property
    def quota(self):
        """Gets the quota of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The quota of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2QuotaConfig
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """Sets the quota of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param quota: The quota of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type quota: GoogleCloudIdentitytoolkitAdminV2QuotaConfig
        """

        self._quota = quota

    @property
    def recaptcha_config(self):
        """Gets the recaptcha_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The recaptcha_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig
        """
        return self._recaptcha_config

    @recaptcha_config.setter
    def recaptcha_config(self, recaptcha_config):
        """Sets the recaptcha_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param recaptcha_config: The recaptcha_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type recaptcha_config: GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig
        """

        self._recaptcha_config = recaptcha_config

    @property
    def sign_in(self):
        """Gets the sign_in of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The sign_in of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2SignInConfig
        """
        return self._sign_in

    @sign_in.setter
    def sign_in(self, sign_in):
        """Sets the sign_in of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param sign_in: The sign_in of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type sign_in: GoogleCloudIdentitytoolkitAdminV2SignInConfig
        """

        self._sign_in = sign_in

    @property
    def sms_region_config(self):
        """Gets the sms_region_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :return: The sms_region_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig
        """
        return self._sms_region_config

    @sms_region_config.setter
    def sms_region_config(self, sms_region_config):
        """Sets the sms_region_config of this GoogleCloudIdentitytoolkitAdminV2Config.


        :param sms_region_config: The sms_region_config of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type sms_region_config: GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig
        """

        self._sms_region_config = sms_region_config

    @property
    def subtype(self):
        """Gets the subtype of this GoogleCloudIdentitytoolkitAdminV2Config.

        Output only. The subtype of this config.

        :return: The subtype of this GoogleCloudIdentitytoolkitAdminV2Config.
        :rtype: str
        """
        return self._subtype

    @subtype.setter
    def subtype(self, subtype):
        """Sets the subtype of this GoogleCloudIdentitytoolkitAdminV2Config.

        Output only. The subtype of this config.

        :param subtype: The subtype of this GoogleCloudIdentitytoolkitAdminV2Config.
        :type subtype: str
        """
        allowed_values = ["SUBTYPE_UNSPECIFIED", "IDENTITY_PLATFORM", "FIREBASE_AUTH"]  # noqa: E501
        if subtype not in allowed_values:
            raise ValueError(
                "Invalid value for `subtype` ({0}), must be one of {1}"
                .format(subtype, allowed_values)
            )

        self._subtype = subtype
