# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_o_auth_response_type import GoogleCloudIdentitytoolkitAdminV2OAuthResponseType
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, client_secret: str=None, display_name: str=None, enabled: bool=None, issuer: str=None, name: str=None, response_type: GoogleCloudIdentitytoolkitAdminV2OAuthResponseType=None):
        """GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig - a model defined in OpenAPI

        :param client_id: The client_id of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :param client_secret: The client_secret of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :param display_name: The display_name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :param enabled: The enabled of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :param issuer: The issuer of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :param name: The name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :param response_type: The response_type of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        """
        self.openapi_types = {
            'client_id': str,
            'client_secret': str,
            'display_name': str,
            'enabled': bool,
            'issuer': str,
            'name': str,
            'response_type': GoogleCloudIdentitytoolkitAdminV2OAuthResponseType
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'client_secret': 'clientSecret',
            'display_name': 'displayName',
            'enabled': 'enabled',
            'issuer': 'issuer',
            'name': 'name',
            'response_type': 'responseType'
        }

        self._client_id = client_id
        self._client_secret = client_secret
        self._display_name = display_name
        self._enabled = enabled
        self._issuer = issuer
        self._name = name
        self._response_type = response_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The client id of an OAuth client.

        :return: The client_id of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The client id of an OAuth client.

        :param client_id: The client_id of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_secret(self):
        """Gets the client_secret of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The client secret of the OAuth client, to enable OIDC code flow.

        :return: The client_secret of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The client secret of the OAuth client, to enable OIDC code flow.

        :param client_secret: The client_secret of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :type client_secret: str
        """

        self._client_secret = client_secret

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The config's display name set by developers.

        :return: The display_name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The config's display name set by developers.

        :param display_name: The display_name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enabled(self):
        """Gets the enabled of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        True if allows the user to sign in with the provider.

        :return: The enabled of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        True if allows the user to sign in with the provider.

        :param enabled: The enabled of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def issuer(self):
        """Gets the issuer of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        For OIDC Idps, the issuer identifier.

        :return: The issuer of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :rtype: str
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        For OIDC Idps, the issuer identifier.

        :param issuer: The issuer of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :type issuer: str
        """

        self._issuer = issuer

    @property
    def name(self):
        """Gets the name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.

        :return: The name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.

        The name of the OAuthIdpConfig resource, for example: 'projects/my-awesome-project/oauthIdpConfigs/oauth-config-id'. Ignored during create requests.

        :param name: The name of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :type name: str
        """

        self._name = name

    @property
    def response_type(self):
        """Gets the response_type of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.


        :return: The response_type of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :rtype: GoogleCloudIdentitytoolkitAdminV2OAuthResponseType
        """
        return self._response_type

    @response_type.setter
    def response_type(self, response_type):
        """Sets the response_type of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.


        :param response_type: The response_type of this GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.
        :type response_type: GoogleCloudIdentitytoolkitAdminV2OAuthResponseType
        """

        self._response_type = response_type
