# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_permissions import GoogleCloudIdentitytoolkitAdminV2Permissions
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2ClientConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: str=None, firebase_subdomain: str=None, permissions: GoogleCloudIdentitytoolkitAdminV2Permissions=None):
        """GoogleCloudIdentitytoolkitAdminV2ClientConfig - a model defined in OpenAPI

        :param api_key: The api_key of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :param firebase_subdomain: The firebase_subdomain of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :param permissions: The permissions of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        """
        self.openapi_types = {
            'api_key': str,
            'firebase_subdomain': str,
            'permissions': GoogleCloudIdentitytoolkitAdminV2Permissions
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'firebase_subdomain': 'firebaseSubdomain',
            'permissions': 'permissions'
        }

        self._api_key = api_key
        self._firebase_subdomain = firebase_subdomain
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2ClientConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2ClientConfig of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.

        Output only. API key that can be used when making requests for this project.

        :return: The api_key of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.

        Output only. API key that can be used when making requests for this project.

        :param api_key: The api_key of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def firebase_subdomain(self):
        """Gets the firebase_subdomain of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.

        Output only. Firebase subdomain.

        :return: The firebase_subdomain of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :rtype: str
        """
        return self._firebase_subdomain

    @firebase_subdomain.setter
    def firebase_subdomain(self, firebase_subdomain):
        """Sets the firebase_subdomain of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.

        Output only. Firebase subdomain.

        :param firebase_subdomain: The firebase_subdomain of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :type firebase_subdomain: str
        """

        self._firebase_subdomain = firebase_subdomain

    @property
    def permissions(self):
        """Gets the permissions of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.


        :return: The permissions of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :rtype: GoogleCloudIdentitytoolkitAdminV2Permissions
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.


        :param permissions: The permissions of this GoogleCloudIdentitytoolkitAdminV2ClientConfig.
        :type permissions: GoogleCloudIdentitytoolkitAdminV2Permissions
        """

        self._permissions = permissions
