# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: bool=None, id_token: bool=None, refresh_token: bool=None):
        """GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials - a model defined in OpenAPI

        :param access_token: The access_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :param id_token: The id_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :param refresh_token: The refresh_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        """
        self.openapi_types = {
            'access_token': bool,
            'id_token': bool,
            'refresh_token': bool
        }

        self.attribute_map = {
            'access_token': 'accessToken',
            'id_token': 'idToken',
            'refresh_token': 'refreshToken'
        }

        self._access_token = access_token
        self._id_token = id_token
        self._refresh_token = refresh_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.

        Whether to pass the user's OAuth identity provider's access token.

        :return: The access_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :rtype: bool
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.

        Whether to pass the user's OAuth identity provider's access token.

        :param access_token: The access_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :type access_token: bool
        """

        self._access_token = access_token

    @property
    def id_token(self):
        """Gets the id_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.

        Whether to pass the user's OIDC identity provider's ID token.

        :return: The id_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :rtype: bool
        """
        return self._id_token

    @id_token.setter
    def id_token(self, id_token):
        """Sets the id_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.

        Whether to pass the user's OIDC identity provider's ID token.

        :param id_token: The id_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :type id_token: bool
        """

        self._id_token = id_token

    @property
    def refresh_token(self):
        """Gets the refresh_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.

        Whether to pass the user's OAuth identity provider's refresh token.

        :return: The refresh_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :rtype: bool
        """
        return self._refresh_token

    @refresh_token.setter
    def refresh_token(self, refresh_token):
        """Sets the refresh_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.

        Whether to pass the user's OAuth identity provider's refresh token.

        :param refresh_token: The refresh_token of this GoogleCloudIdentitytoolkitAdminV2ForwardInboundCredentials.
        :type refresh_token: bool
        """

        self._refresh_token = refresh_token
