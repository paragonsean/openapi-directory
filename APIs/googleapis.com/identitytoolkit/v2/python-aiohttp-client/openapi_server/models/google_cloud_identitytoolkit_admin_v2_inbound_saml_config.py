# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_idp_config import GoogleCloudIdentitytoolkitAdminV2IdpConfig
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_sp_config import GoogleCloudIdentitytoolkitAdminV2SpConfig
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, enabled: bool=None, idp_config: GoogleCloudIdentitytoolkitAdminV2IdpConfig=None, name: str=None, sp_config: GoogleCloudIdentitytoolkitAdminV2SpConfig=None):
        """GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig - a model defined in OpenAPI

        :param display_name: The display_name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :param enabled: The enabled of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :param idp_config: The idp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :param name: The name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :param sp_config: The sp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        """
        self.openapi_types = {
            'display_name': str,
            'enabled': bool,
            'idp_config': GoogleCloudIdentitytoolkitAdminV2IdpConfig,
            'name': str,
            'sp_config': GoogleCloudIdentitytoolkitAdminV2SpConfig
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'enabled': 'enabled',
            'idp_config': 'idpConfig',
            'name': 'name',
            'sp_config': 'spConfig'
        }

        self._display_name = display_name
        self._enabled = enabled
        self._idp_config = idp_config
        self._name = name
        self._sp_config = sp_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.

        The config's display name set by developers.

        :return: The display_name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.

        The config's display name set by developers.

        :param display_name: The display_name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enabled(self):
        """Gets the enabled of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.

        True if allows the user to sign in with the provider.

        :return: The enabled of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.

        True if allows the user to sign in with the provider.

        :param enabled: The enabled of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def idp_config(self):
        """Gets the idp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.


        :return: The idp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :rtype: GoogleCloudIdentitytoolkitAdminV2IdpConfig
        """
        return self._idp_config

    @idp_config.setter
    def idp_config(self, idp_config):
        """Sets the idp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.


        :param idp_config: The idp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :type idp_config: GoogleCloudIdentitytoolkitAdminV2IdpConfig
        """

        self._idp_config = idp_config

    @property
    def name(self):
        """Gets the name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.

        The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.

        :return: The name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.

        The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.

        :param name: The name of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :type name: str
        """

        self._name = name

    @property
    def sp_config(self):
        """Gets the sp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.


        :return: The sp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :rtype: GoogleCloudIdentitytoolkitAdminV2SpConfig
        """
        return self._sp_config

    @sp_config.setter
    def sp_config(self, sp_config):
        """Sets the sp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.


        :param sp_config: The sp_config of this GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.
        :type sp_config: GoogleCloudIdentitytoolkitAdminV2SpConfig
        """

        self._sp_config = sp_config
