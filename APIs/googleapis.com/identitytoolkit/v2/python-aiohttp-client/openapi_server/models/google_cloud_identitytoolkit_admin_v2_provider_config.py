# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_totp_mfa_provider_config import GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2ProviderConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state: str=None, totp_provider_config: GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig=None):
        """GoogleCloudIdentitytoolkitAdminV2ProviderConfig - a model defined in OpenAPI

        :param state: The state of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.
        :param totp_provider_config: The totp_provider_config of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.
        """
        self.openapi_types = {
            'state': str,
            'totp_provider_config': GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig
        }

        self.attribute_map = {
            'state': 'state',
            'totp_provider_config': 'totpProviderConfig'
        }

        self._state = state
        self._totp_provider_config = totp_provider_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2ProviderConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2ProviderConfig of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state(self):
        """Gets the state of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.

        Describes the state of the MultiFactor Authentication type.

        :return: The state of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.

        Describes the state of the MultiFactor Authentication type.

        :param state: The state of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.
        :type state: str
        """
        allowed_values = ["MFA_STATE_UNSPECIFIED", "DISABLED", "ENABLED", "MANDATORY"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def totp_provider_config(self):
        """Gets the totp_provider_config of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.


        :return: The totp_provider_config of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.
        :rtype: GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig
        """
        return self._totp_provider_config

    @totp_provider_config.setter
    def totp_provider_config(self, totp_provider_config):
        """Sets the totp_provider_config of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.


        :param totp_provider_config: The totp_provider_config of this GoogleCloudIdentitytoolkitAdminV2ProviderConfig.
        :type totp_provider_config: GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig
        """

        self._totp_provider_config = totp_provider_config
