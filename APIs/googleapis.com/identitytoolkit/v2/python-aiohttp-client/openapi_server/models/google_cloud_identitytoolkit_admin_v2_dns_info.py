# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2DnsInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_domain: str=None, custom_domain_state: str=None, domain_verification_request_time: str=None, pending_custom_domain: str=None, use_custom_domain: bool=None):
        """GoogleCloudIdentitytoolkitAdminV2DnsInfo - a model defined in OpenAPI

        :param custom_domain: The custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :param custom_domain_state: The custom_domain_state of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :param domain_verification_request_time: The domain_verification_request_time of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :param pending_custom_domain: The pending_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :param use_custom_domain: The use_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        """
        self.openapi_types = {
            'custom_domain': str,
            'custom_domain_state': str,
            'domain_verification_request_time': str,
            'pending_custom_domain': str,
            'use_custom_domain': bool
        }

        self.attribute_map = {
            'custom_domain': 'customDomain',
            'custom_domain_state': 'customDomainState',
            'domain_verification_request_time': 'domainVerificationRequestTime',
            'pending_custom_domain': 'pendingCustomDomain',
            'use_custom_domain': 'useCustomDomain'
        }

        self._custom_domain = custom_domain
        self._custom_domain_state = custom_domain_state
        self._domain_verification_request_time = domain_verification_request_time
        self._pending_custom_domain = pending_custom_domain
        self._use_custom_domain = use_custom_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2DnsInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2DnsInfo of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_domain(self):
        """Gets the custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The applied verified custom domain.

        :return: The custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :rtype: str
        """
        return self._custom_domain

    @custom_domain.setter
    def custom_domain(self, custom_domain):
        """Sets the custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The applied verified custom domain.

        :param custom_domain: The custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :type custom_domain: str
        """

        self._custom_domain = custom_domain

    @property
    def custom_domain_state(self):
        """Gets the custom_domain_state of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The current verification state of the custom domain. The custom domain will only be used once the domain verification is successful.

        :return: The custom_domain_state of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :rtype: str
        """
        return self._custom_domain_state

    @custom_domain_state.setter
    def custom_domain_state(self, custom_domain_state):
        """Sets the custom_domain_state of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The current verification state of the custom domain. The custom domain will only be used once the domain verification is successful.

        :param custom_domain_state: The custom_domain_state of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :type custom_domain_state: str
        """
        allowed_values = ["VERIFICATION_STATE_UNSPECIFIED", "NOT_STARTED", "IN_PROGRESS", "FAILED", "SUCCEEDED"]  # noqa: E501
        if custom_domain_state not in allowed_values:
            raise ValueError(
                "Invalid value for `custom_domain_state` ({0}), must be one of {1}"
                .format(custom_domain_state, allowed_values)
            )

        self._custom_domain_state = custom_domain_state

    @property
    def domain_verification_request_time(self):
        """Gets the domain_verification_request_time of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The timestamp of initial request for the current domain verification.

        :return: The domain_verification_request_time of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :rtype: str
        """
        return self._domain_verification_request_time

    @domain_verification_request_time.setter
    def domain_verification_request_time(self, domain_verification_request_time):
        """Sets the domain_verification_request_time of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The timestamp of initial request for the current domain verification.

        :param domain_verification_request_time: The domain_verification_request_time of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :type domain_verification_request_time: str
        """

        self._domain_verification_request_time = domain_verification_request_time

    @property
    def pending_custom_domain(self):
        """Gets the pending_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The custom domain that's to be verified.

        :return: The pending_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :rtype: str
        """
        return self._pending_custom_domain

    @pending_custom_domain.setter
    def pending_custom_domain(self, pending_custom_domain):
        """Sets the pending_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Output only. The custom domain that's to be verified.

        :param pending_custom_domain: The pending_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :type pending_custom_domain: str
        """

        self._pending_custom_domain = pending_custom_domain

    @property
    def use_custom_domain(self):
        """Gets the use_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Whether to use custom domain.

        :return: The use_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :rtype: bool
        """
        return self._use_custom_domain

    @use_custom_domain.setter
    def use_custom_domain(self, use_custom_domain):
        """Sets the use_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.

        Whether to use custom domain.

        :param use_custom_domain: The use_custom_domain of this GoogleCloudIdentitytoolkitAdminV2DnsInfo.
        :type use_custom_domain: bool
        """

        self._use_custom_domain = use_custom_domain
