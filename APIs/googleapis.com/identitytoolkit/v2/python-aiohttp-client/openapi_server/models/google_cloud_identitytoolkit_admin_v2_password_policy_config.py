# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_password_policy_version import GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, force_upgrade_on_signin: bool=None, last_update_time: str=None, password_policy_enforcement_state: str=None, password_policy_versions: List[GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion]=None):
        """GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig - a model defined in OpenAPI

        :param force_upgrade_on_signin: The force_upgrade_on_signin of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :param last_update_time: The last_update_time of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :param password_policy_enforcement_state: The password_policy_enforcement_state of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :param password_policy_versions: The password_policy_versions of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        """
        self.openapi_types = {
            'force_upgrade_on_signin': bool,
            'last_update_time': str,
            'password_policy_enforcement_state': str,
            'password_policy_versions': List[GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion]
        }

        self.attribute_map = {
            'force_upgrade_on_signin': 'forceUpgradeOnSignin',
            'last_update_time': 'lastUpdateTime',
            'password_policy_enforcement_state': 'passwordPolicyEnforcementState',
            'password_policy_versions': 'passwordPolicyVersions'
        }

        self._force_upgrade_on_signin = force_upgrade_on_signin
        self._last_update_time = last_update_time
        self._password_policy_enforcement_state = password_policy_enforcement_state
        self._password_policy_versions = password_policy_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def force_upgrade_on_signin(self):
        """Gets the force_upgrade_on_signin of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Users must have a password compliant with the password policy to sign-in.

        :return: The force_upgrade_on_signin of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :rtype: bool
        """
        return self._force_upgrade_on_signin

    @force_upgrade_on_signin.setter
    def force_upgrade_on_signin(self, force_upgrade_on_signin):
        """Sets the force_upgrade_on_signin of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Users must have a password compliant with the password policy to sign-in.

        :param force_upgrade_on_signin: The force_upgrade_on_signin of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :type force_upgrade_on_signin: bool
        """

        self._force_upgrade_on_signin = force_upgrade_on_signin

    @property
    def last_update_time(self):
        """Gets the last_update_time of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Output only. The last time the password policy on the project was updated.

        :return: The last_update_time of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :rtype: str
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Output only. The last time the password policy on the project was updated.

        :param last_update_time: The last_update_time of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :type last_update_time: str
        """

        self._last_update_time = last_update_time

    @property
    def password_policy_enforcement_state(self):
        """Gets the password_policy_enforcement_state of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Which enforcement mode to use for the password policy.

        :return: The password_policy_enforcement_state of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :rtype: str
        """
        return self._password_policy_enforcement_state

    @password_policy_enforcement_state.setter
    def password_policy_enforcement_state(self, password_policy_enforcement_state):
        """Sets the password_policy_enforcement_state of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Which enforcement mode to use for the password policy.

        :param password_policy_enforcement_state: The password_policy_enforcement_state of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :type password_policy_enforcement_state: str
        """
        allowed_values = ["PASSWORD_POLICY_ENFORCEMENT_STATE_UNSPECIFIED", "false", "ENFORCE"]  # noqa: E501
        if password_policy_enforcement_state not in allowed_values:
            raise ValueError(
                "Invalid value for `password_policy_enforcement_state` ({0}), must be one of {1}"
                .format(password_policy_enforcement_state, allowed_values)
            )

        self._password_policy_enforcement_state = password_policy_enforcement_state

    @property
    def password_policy_versions(self):
        """Gets the password_policy_versions of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Must be of length 1. Contains the strength attributes for the password policy.

        :return: The password_policy_versions of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :rtype: List[GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion]
        """
        return self._password_policy_versions

    @password_policy_versions.setter
    def password_policy_versions(self, password_policy_versions):
        """Sets the password_policy_versions of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.

        Must be of length 1. Contains the strength attributes for the password policy.

        :param password_policy_versions: The password_policy_versions of this GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.
        :type password_policy_versions: List[GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion]
        """

        self._password_policy_versions = password_policy_versions
