# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2Email(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, password_required: bool=None):
        """GoogleCloudIdentitytoolkitAdminV2Email - a model defined in OpenAPI

        :param enabled: The enabled of this GoogleCloudIdentitytoolkitAdminV2Email.
        :param password_required: The password_required of this GoogleCloudIdentitytoolkitAdminV2Email.
        """
        self.openapi_types = {
            'enabled': bool,
            'password_required': bool
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'password_required': 'passwordRequired'
        }

        self._enabled = enabled
        self._password_required = password_required

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2Email':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2Email of this GoogleCloudIdentitytoolkitAdminV2Email.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this GoogleCloudIdentitytoolkitAdminV2Email.

        Whether email auth is enabled for the project or not.

        :return: The enabled of this GoogleCloudIdentitytoolkitAdminV2Email.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GoogleCloudIdentitytoolkitAdminV2Email.

        Whether email auth is enabled for the project or not.

        :param enabled: The enabled of this GoogleCloudIdentitytoolkitAdminV2Email.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def password_required(self):
        """Gets the password_required of this GoogleCloudIdentitytoolkitAdminV2Email.

        Whether a password is required for email auth or not. If true, both an email and password must be provided to sign in. If false, a user may sign in via either email/password or email link.

        :return: The password_required of this GoogleCloudIdentitytoolkitAdminV2Email.
        :rtype: bool
        """
        return self._password_required

    @password_required.setter
    def password_required(self, password_required):
        """Sets the password_required of this GoogleCloudIdentitytoolkitAdminV2Email.

        Whether a password is required for email auth or not. If true, both an email and password must be provided to sign in. If false, a user may sign in via either email/password or email link.

        :param password_required: The password_required of this GoogleCloudIdentitytoolkitAdminV2Email.
        :type password_required: bool
        """

        self._password_required = password_required
