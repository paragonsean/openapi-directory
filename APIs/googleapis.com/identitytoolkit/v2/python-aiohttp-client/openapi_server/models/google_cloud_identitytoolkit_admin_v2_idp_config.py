# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_identitytoolkit_admin_v2_idp_certificate import GoogleCloudIdentitytoolkitAdminV2IdpCertificate
from openapi_server import util


class GoogleCloudIdentitytoolkitAdminV2IdpConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idp_certificates: List[GoogleCloudIdentitytoolkitAdminV2IdpCertificate]=None, idp_entity_id: str=None, sign_request: bool=None, sso_url: str=None):
        """GoogleCloudIdentitytoolkitAdminV2IdpConfig - a model defined in OpenAPI

        :param idp_certificates: The idp_certificates of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :param idp_entity_id: The idp_entity_id of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :param sign_request: The sign_request of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :param sso_url: The sso_url of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        """
        self.openapi_types = {
            'idp_certificates': List[GoogleCloudIdentitytoolkitAdminV2IdpCertificate],
            'idp_entity_id': str,
            'sign_request': bool,
            'sso_url': str
        }

        self.attribute_map = {
            'idp_certificates': 'idpCertificates',
            'idp_entity_id': 'idpEntityId',
            'sign_request': 'signRequest',
            'sso_url': 'ssoUrl'
        }

        self._idp_certificates = idp_certificates
        self._idp_entity_id = idp_entity_id
        self._sign_request = sign_request
        self._sso_url = sso_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudIdentitytoolkitAdminV2IdpConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudIdentitytoolkitAdminV2IdpConfig of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idp_certificates(self):
        """Gets the idp_certificates of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        IDP's public keys for verifying signature in the assertions.

        :return: The idp_certificates of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :rtype: List[GoogleCloudIdentitytoolkitAdminV2IdpCertificate]
        """
        return self._idp_certificates

    @idp_certificates.setter
    def idp_certificates(self, idp_certificates):
        """Sets the idp_certificates of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        IDP's public keys for verifying signature in the assertions.

        :param idp_certificates: The idp_certificates of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :type idp_certificates: List[GoogleCloudIdentitytoolkitAdminV2IdpCertificate]
        """

        self._idp_certificates = idp_certificates

    @property
    def idp_entity_id(self):
        """Gets the idp_entity_id of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        Unique identifier for all SAML entities.

        :return: The idp_entity_id of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :rtype: str
        """
        return self._idp_entity_id

    @idp_entity_id.setter
    def idp_entity_id(self, idp_entity_id):
        """Sets the idp_entity_id of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        Unique identifier for all SAML entities.

        :param idp_entity_id: The idp_entity_id of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :type idp_entity_id: str
        """

        self._idp_entity_id = idp_entity_id

    @property
    def sign_request(self):
        """Gets the sign_request of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        Indicates if outbounding SAMLRequest should be signed.

        :return: The sign_request of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :rtype: bool
        """
        return self._sign_request

    @sign_request.setter
    def sign_request(self, sign_request):
        """Sets the sign_request of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        Indicates if outbounding SAMLRequest should be signed.

        :param sign_request: The sign_request of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :type sign_request: bool
        """

        self._sign_request = sign_request

    @property
    def sso_url(self):
        """Gets the sso_url of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        URL to send Authentication request to.

        :return: The sso_url of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :rtype: str
        """
        return self._sso_url

    @sso_url.setter
    def sso_url(self, sso_url):
        """Sets the sso_url of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.

        URL to send Authentication request to.

        :param sso_url: The sso_url of this GoogleCloudIdentitytoolkitAdminV2IdpConfig.
        :type sso_url: str
        """

        self._sso_url = sso_url
