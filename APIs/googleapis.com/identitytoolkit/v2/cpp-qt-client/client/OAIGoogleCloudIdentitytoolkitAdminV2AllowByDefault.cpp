/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::~OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault() {}

void OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::initializeModel() {

    m_disallowed_regions_isSet = false;
    m_disallowed_regions_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::fromJsonObject(QJsonObject json) {

    m_disallowed_regions_isValid = ::OpenAPI::fromJsonValue(m_disallowed_regions, json[QString("disallowedRegions")]);
    m_disallowed_regions_isSet = !json[QString("disallowedRegions")].isNull() && m_disallowed_regions_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::asJsonObject() const {
    QJsonObject obj;
    if (m_disallowed_regions.size() > 0) {
        obj.insert(QString("disallowedRegions"), ::OpenAPI::toJsonValue(m_disallowed_regions));
    }
    return obj;
}

QList<QString> OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::getDisallowedRegions() const {
    return m_disallowed_regions;
}
void OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::setDisallowedRegions(const QList<QString> &disallowed_regions) {
    m_disallowed_regions = disallowed_regions;
    m_disallowed_regions_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::is_disallowed_regions_Set() const{
    return m_disallowed_regions_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::is_disallowed_regions_Valid() const{
    return m_disallowed_regions_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disallowed_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
