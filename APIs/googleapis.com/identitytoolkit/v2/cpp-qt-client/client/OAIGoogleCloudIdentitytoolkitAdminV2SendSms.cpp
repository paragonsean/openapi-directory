/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2SendSms.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2SendSms::OAIGoogleCloudIdentitytoolkitAdminV2SendSms(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2SendSms::OAIGoogleCloudIdentitytoolkitAdminV2SendSms() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2SendSms::~OAIGoogleCloudIdentitytoolkitAdminV2SendSms() {}

void OAIGoogleCloudIdentitytoolkitAdminV2SendSms::initializeModel() {

    m_sms_template_isSet = false;
    m_sms_template_isValid = false;

    m_use_device_locale_isSet = false;
    m_use_device_locale_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2SendSms::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2SendSms::fromJsonObject(QJsonObject json) {

    m_sms_template_isValid = ::OpenAPI::fromJsonValue(m_sms_template, json[QString("smsTemplate")]);
    m_sms_template_isSet = !json[QString("smsTemplate")].isNull() && m_sms_template_isValid;

    m_use_device_locale_isValid = ::OpenAPI::fromJsonValue(m_use_device_locale, json[QString("useDeviceLocale")]);
    m_use_device_locale_isSet = !json[QString("useDeviceLocale")].isNull() && m_use_device_locale_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SendSms::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2SendSms::asJsonObject() const {
    QJsonObject obj;
    if (m_sms_template.isSet()) {
        obj.insert(QString("smsTemplate"), ::OpenAPI::toJsonValue(m_sms_template));
    }
    if (m_use_device_locale_isSet) {
        obj.insert(QString("useDeviceLocale"), ::OpenAPI::toJsonValue(m_use_device_locale));
    }
    return obj;
}

OAIGoogleCloudIdentitytoolkitAdminV2SmsTemplate OAIGoogleCloudIdentitytoolkitAdminV2SendSms::getSmsTemplate() const {
    return m_sms_template;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendSms::setSmsTemplate(const OAIGoogleCloudIdentitytoolkitAdminV2SmsTemplate &sms_template) {
    m_sms_template = sms_template;
    m_sms_template_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendSms::is_sms_template_Set() const{
    return m_sms_template_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendSms::is_sms_template_Valid() const{
    return m_sms_template_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendSms::isUseDeviceLocale() const {
    return m_use_device_locale;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendSms::setUseDeviceLocale(const bool &use_device_locale) {
    m_use_device_locale = use_device_locale;
    m_use_device_locale_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendSms::is_use_device_locale_Set() const{
    return m_use_device_locale_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendSms::is_use_device_locale_Valid() const{
    return m_use_device_locale_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendSms::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sms_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_device_locale_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendSms::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
