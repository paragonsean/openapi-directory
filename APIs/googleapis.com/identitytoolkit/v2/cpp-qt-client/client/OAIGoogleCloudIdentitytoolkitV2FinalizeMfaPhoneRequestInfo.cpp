/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::~OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo() {}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::initializeModel() {

    m_android_verification_proof_isSet = false;
    m_android_verification_proof_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_session_info_isSet = false;
    m_session_info_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::fromJsonObject(QJsonObject json) {

    m_android_verification_proof_isValid = ::OpenAPI::fromJsonValue(m_android_verification_proof, json[QString("androidVerificationProof")]);
    m_android_verification_proof_isSet = !json[QString("androidVerificationProof")].isNull() && m_android_verification_proof_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;

    m_session_info_isValid = ::OpenAPI::fromJsonValue(m_session_info, json[QString("sessionInfo")]);
    m_session_info_isSet = !json[QString("sessionInfo")].isNull() && m_session_info_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_android_verification_proof_isSet) {
        obj.insert(QString("androidVerificationProof"), ::OpenAPI::toJsonValue(m_android_verification_proof));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_session_info_isSet) {
        obj.insert(QString("sessionInfo"), ::OpenAPI::toJsonValue(m_session_info));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::getAndroidVerificationProof() const {
    return m_android_verification_proof;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::setAndroidVerificationProof(const QString &android_verification_proof) {
    m_android_verification_proof = android_verification_proof;
    m_android_verification_proof_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_android_verification_proof_Set() const{
    return m_android_verification_proof_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_android_verification_proof_Valid() const{
    return m_android_verification_proof_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::getCode() const {
    return m_code;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_code_Set() const{
    return m_code_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::getPhoneNumber() const {
    return m_phone_number;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::getSessionInfo() const {
    return m_session_info;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::setSessionInfo(const QString &session_info) {
    m_session_info = session_info;
    m_session_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_session_info_Set() const{
    return m_session_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::is_session_info_Valid() const{
    return m_session_info_isValid;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_android_verification_proof_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_info_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
