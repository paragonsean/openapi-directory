/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudIdentitytoolkitAdminV2HashConfig.h
 *
 * History information of the hash algorithm and key. Different accounts&#39; passwords may be generated by different version.
 */

#ifndef OAIGoogleCloudIdentitytoolkitAdminV2HashConfig_H
#define OAIGoogleCloudIdentitytoolkitAdminV2HashConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudIdentitytoolkitAdminV2HashConfig : public OAIObject {
public:
    OAIGoogleCloudIdentitytoolkitAdminV2HashConfig();
    OAIGoogleCloudIdentitytoolkitAdminV2HashConfig(QString json);
    ~OAIGoogleCloudIdentitytoolkitAdminV2HashConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlgorithm() const;
    void setAlgorithm(const QString &algorithm);
    bool is_algorithm_Set() const;
    bool is_algorithm_Valid() const;

    qint32 getMemoryCost() const;
    void setMemoryCost(const qint32 &memory_cost);
    bool is_memory_cost_Set() const;
    bool is_memory_cost_Valid() const;

    qint32 getRounds() const;
    void setRounds(const qint32 &rounds);
    bool is_rounds_Set() const;
    bool is_rounds_Valid() const;

    QString getSaltSeparator() const;
    void setSaltSeparator(const QString &salt_separator);
    bool is_salt_separator_Set() const;
    bool is_salt_separator_Valid() const;

    QString getSignerKey() const;
    void setSignerKey(const QString &signer_key);
    bool is_signer_key_Set() const;
    bool is_signer_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_algorithm;
    bool m_algorithm_isSet;
    bool m_algorithm_isValid;

    qint32 m_memory_cost;
    bool m_memory_cost_isSet;
    bool m_memory_cost_isValid;

    qint32 m_rounds;
    bool m_rounds_isSet;
    bool m_rounds_isValid;

    QString m_salt_separator;
    bool m_salt_separator_isSet;
    bool m_salt_separator_isValid;

    QString m_signer_key;
    bool m_signer_key_isSet;
    bool m_signer_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudIdentitytoolkitAdminV2HashConfig)

#endif // OAIGoogleCloudIdentitytoolkitAdminV2HashConfig_H
