/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::~OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest() {}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_id_token_isSet = false;
    m_id_token_isValid = false;

    m_phone_verification_info_isSet = false;
    m_phone_verification_info_isValid = false;

    m_tenant_id_isSet = false;
    m_tenant_id_isValid = false;

    m_totp_verification_info_isSet = false;
    m_totp_verification_info_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_id_token_isValid = ::OpenAPI::fromJsonValue(m_id_token, json[QString("idToken")]);
    m_id_token_isSet = !json[QString("idToken")].isNull() && m_id_token_isValid;

    m_phone_verification_info_isValid = ::OpenAPI::fromJsonValue(m_phone_verification_info, json[QString("phoneVerificationInfo")]);
    m_phone_verification_info_isSet = !json[QString("phoneVerificationInfo")].isNull() && m_phone_verification_info_isValid;

    m_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_tenant_id, json[QString("tenantId")]);
    m_tenant_id_isSet = !json[QString("tenantId")].isNull() && m_tenant_id_isValid;

    m_totp_verification_info_isValid = ::OpenAPI::fromJsonValue(m_totp_verification_info, json[QString("totpVerificationInfo")]);
    m_totp_verification_info_isSet = !json[QString("totpVerificationInfo")].isNull() && m_totp_verification_info_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_id_token_isSet) {
        obj.insert(QString("idToken"), ::OpenAPI::toJsonValue(m_id_token));
    }
    if (m_phone_verification_info.isSet()) {
        obj.insert(QString("phoneVerificationInfo"), ::OpenAPI::toJsonValue(m_phone_verification_info));
    }
    if (m_tenant_id_isSet) {
        obj.insert(QString("tenantId"), ::OpenAPI::toJsonValue(m_tenant_id));
    }
    if (m_totp_verification_info.isSet()) {
        obj.insert(QString("totpVerificationInfo"), ::OpenAPI::toJsonValue(m_totp_verification_info));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::getIdToken() const {
    return m_id_token;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::setIdToken(const QString &id_token) {
    m_id_token = id_token;
    m_id_token_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_id_token_Set() const{
    return m_id_token_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_id_token_Valid() const{
    return m_id_token_isValid;
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::getPhoneVerificationInfo() const {
    return m_phone_verification_info;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::setPhoneVerificationInfo(const OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo &phone_verification_info) {
    m_phone_verification_info = phone_verification_info;
    m_phone_verification_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_phone_verification_info_Set() const{
    return m_phone_verification_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_phone_verification_info_Valid() const{
    return m_phone_verification_info_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::getTenantId() const {
    return m_tenant_id;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::setTenantId(const QString &tenant_id) {
    m_tenant_id = tenant_id;
    m_tenant_id_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_tenant_id_Set() const{
    return m_tenant_id_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_tenant_id_Valid() const{
    return m_tenant_id_isValid;
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::getTotpVerificationInfo() const {
    return m_totp_verification_info;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::setTotpVerificationInfo(const OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo &totp_verification_info) {
    m_totp_verification_info = totp_verification_info;
    m_totp_verification_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_totp_verification_info_Set() const{
    return m_totp_verification_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::is_totp_verification_info_Valid() const{
    return m_totp_verification_info_isValid;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_verification_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_totp_verification_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaEnrollmentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
