/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::~OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState() {}

void OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::initializeModel() {

    m_enforcement_state_isSet = false;
    m_enforcement_state_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::fromJsonObject(QJsonObject json) {

    m_enforcement_state_isValid = ::OpenAPI::fromJsonValue(m_enforcement_state, json[QString("enforcementState")]);
    m_enforcement_state_isSet = !json[QString("enforcementState")].isNull() && m_enforcement_state_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::asJsonObject() const {
    QJsonObject obj;
    if (m_enforcement_state_isSet) {
        obj.insert(QString("enforcementState"), ::OpenAPI::toJsonValue(m_enforcement_state));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::getEnforcementState() const {
    return m_enforcement_state;
}
void OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::setEnforcementState(const QString &enforcement_state) {
    m_enforcement_state = enforcement_state;
    m_enforcement_state_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::is_enforcement_state_Set() const{
    return m_enforcement_state_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::is_enforcement_state_Valid() const{
    return m_enforcement_state_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::getProvider() const {
    return m_provider;
}
void OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::is_provider_Valid() const{
    return m_provider_isValid;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enforcement_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
