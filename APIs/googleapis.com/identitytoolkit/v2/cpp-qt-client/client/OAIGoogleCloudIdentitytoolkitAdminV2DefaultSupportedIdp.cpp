/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::~OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp() {}

void OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_idp_id_isSet = false;
    m_idp_id_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_idp_id_isValid = ::OpenAPI::fromJsonValue(m_idp_id, json[QString("idpId")]);
    m_idp_id_isSet = !json[QString("idpId")].isNull() && m_idp_id_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_idp_id_isSet) {
        obj.insert(QString("idpId"), ::OpenAPI::toJsonValue(m_idp_id));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::getDescription() const {
    return m_description;
}
void OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::getIdpId() const {
    return m_idp_id;
}
void OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::setIdpId(const QString &idp_id) {
    m_idp_id = idp_id;
    m_idp_id_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::is_idp_id_Set() const{
    return m_idp_id_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::is_idp_id_Valid() const{
    return m_idp_id_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_idp_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdp::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
