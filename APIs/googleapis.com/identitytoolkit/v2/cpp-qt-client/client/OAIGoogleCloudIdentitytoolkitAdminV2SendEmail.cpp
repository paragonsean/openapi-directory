/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2SendEmail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::OAIGoogleCloudIdentitytoolkitAdminV2SendEmail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::OAIGoogleCloudIdentitytoolkitAdminV2SendEmail() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::~OAIGoogleCloudIdentitytoolkitAdminV2SendEmail() {}

void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::initializeModel() {

    m_callback_uri_isSet = false;
    m_callback_uri_isValid = false;

    m_change_email_template_isSet = false;
    m_change_email_template_isValid = false;

    m_dns_info_isSet = false;
    m_dns_info_isValid = false;

    m_legacy_reset_password_template_isSet = false;
    m_legacy_reset_password_template_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_reset_password_template_isSet = false;
    m_reset_password_template_isValid = false;

    m_revert_second_factor_addition_template_isSet = false;
    m_revert_second_factor_addition_template_isValid = false;

    m_smtp_isSet = false;
    m_smtp_isValid = false;

    m_verify_email_template_isSet = false;
    m_verify_email_template_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::fromJsonObject(QJsonObject json) {

    m_callback_uri_isValid = ::OpenAPI::fromJsonValue(m_callback_uri, json[QString("callbackUri")]);
    m_callback_uri_isSet = !json[QString("callbackUri")].isNull() && m_callback_uri_isValid;

    m_change_email_template_isValid = ::OpenAPI::fromJsonValue(m_change_email_template, json[QString("changeEmailTemplate")]);
    m_change_email_template_isSet = !json[QString("changeEmailTemplate")].isNull() && m_change_email_template_isValid;

    m_dns_info_isValid = ::OpenAPI::fromJsonValue(m_dns_info, json[QString("dnsInfo")]);
    m_dns_info_isSet = !json[QString("dnsInfo")].isNull() && m_dns_info_isValid;

    m_legacy_reset_password_template_isValid = ::OpenAPI::fromJsonValue(m_legacy_reset_password_template, json[QString("legacyResetPasswordTemplate")]);
    m_legacy_reset_password_template_isSet = !json[QString("legacyResetPasswordTemplate")].isNull() && m_legacy_reset_password_template_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_reset_password_template_isValid = ::OpenAPI::fromJsonValue(m_reset_password_template, json[QString("resetPasswordTemplate")]);
    m_reset_password_template_isSet = !json[QString("resetPasswordTemplate")].isNull() && m_reset_password_template_isValid;

    m_revert_second_factor_addition_template_isValid = ::OpenAPI::fromJsonValue(m_revert_second_factor_addition_template, json[QString("revertSecondFactorAdditionTemplate")]);
    m_revert_second_factor_addition_template_isSet = !json[QString("revertSecondFactorAdditionTemplate")].isNull() && m_revert_second_factor_addition_template_isValid;

    m_smtp_isValid = ::OpenAPI::fromJsonValue(m_smtp, json[QString("smtp")]);
    m_smtp_isSet = !json[QString("smtp")].isNull() && m_smtp_isValid;

    m_verify_email_template_isValid = ::OpenAPI::fromJsonValue(m_verify_email_template, json[QString("verifyEmailTemplate")]);
    m_verify_email_template_isSet = !json[QString("verifyEmailTemplate")].isNull() && m_verify_email_template_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::asJsonObject() const {
    QJsonObject obj;
    if (m_callback_uri_isSet) {
        obj.insert(QString("callbackUri"), ::OpenAPI::toJsonValue(m_callback_uri));
    }
    if (m_change_email_template.isSet()) {
        obj.insert(QString("changeEmailTemplate"), ::OpenAPI::toJsonValue(m_change_email_template));
    }
    if (m_dns_info.isSet()) {
        obj.insert(QString("dnsInfo"), ::OpenAPI::toJsonValue(m_dns_info));
    }
    if (m_legacy_reset_password_template.isSet()) {
        obj.insert(QString("legacyResetPasswordTemplate"), ::OpenAPI::toJsonValue(m_legacy_reset_password_template));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_reset_password_template.isSet()) {
        obj.insert(QString("resetPasswordTemplate"), ::OpenAPI::toJsonValue(m_reset_password_template));
    }
    if (m_revert_second_factor_addition_template.isSet()) {
        obj.insert(QString("revertSecondFactorAdditionTemplate"), ::OpenAPI::toJsonValue(m_revert_second_factor_addition_template));
    }
    if (m_smtp.isSet()) {
        obj.insert(QString("smtp"), ::OpenAPI::toJsonValue(m_smtp));
    }
    if (m_verify_email_template.isSet()) {
        obj.insert(QString("verifyEmailTemplate"), ::OpenAPI::toJsonValue(m_verify_email_template));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getCallbackUri() const {
    return m_callback_uri;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setCallbackUri(const QString &callback_uri) {
    m_callback_uri = callback_uri;
    m_callback_uri_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_callback_uri_Set() const{
    return m_callback_uri_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_callback_uri_Valid() const{
    return m_callback_uri_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getChangeEmailTemplate() const {
    return m_change_email_template;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setChangeEmailTemplate(const OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate &change_email_template) {
    m_change_email_template = change_email_template;
    m_change_email_template_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_change_email_template_Set() const{
    return m_change_email_template_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_change_email_template_Valid() const{
    return m_change_email_template_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2DnsInfo OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getDnsInfo() const {
    return m_dns_info;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setDnsInfo(const OAIGoogleCloudIdentitytoolkitAdminV2DnsInfo &dns_info) {
    m_dns_info = dns_info;
    m_dns_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_dns_info_Set() const{
    return m_dns_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_dns_info_Valid() const{
    return m_dns_info_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getLegacyResetPasswordTemplate() const {
    return m_legacy_reset_password_template;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setLegacyResetPasswordTemplate(const OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate &legacy_reset_password_template) {
    m_legacy_reset_password_template = legacy_reset_password_template;
    m_legacy_reset_password_template_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_legacy_reset_password_template_Set() const{
    return m_legacy_reset_password_template_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_legacy_reset_password_template_Valid() const{
    return m_legacy_reset_password_template_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getMethod() const {
    return m_method;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_method_Set() const{
    return m_method_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_method_Valid() const{
    return m_method_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getResetPasswordTemplate() const {
    return m_reset_password_template;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setResetPasswordTemplate(const OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate &reset_password_template) {
    m_reset_password_template = reset_password_template;
    m_reset_password_template_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_reset_password_template_Set() const{
    return m_reset_password_template_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_reset_password_template_Valid() const{
    return m_reset_password_template_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getRevertSecondFactorAdditionTemplate() const {
    return m_revert_second_factor_addition_template;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setRevertSecondFactorAdditionTemplate(const OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate &revert_second_factor_addition_template) {
    m_revert_second_factor_addition_template = revert_second_factor_addition_template;
    m_revert_second_factor_addition_template_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_revert_second_factor_addition_template_Set() const{
    return m_revert_second_factor_addition_template_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_revert_second_factor_addition_template_Valid() const{
    return m_revert_second_factor_addition_template_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2Smtp OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getSmtp() const {
    return m_smtp;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setSmtp(const OAIGoogleCloudIdentitytoolkitAdminV2Smtp &smtp) {
    m_smtp = smtp;
    m_smtp_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_smtp_Set() const{
    return m_smtp_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_smtp_Valid() const{
    return m_smtp_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::getVerifyEmailTemplate() const {
    return m_verify_email_template;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::setVerifyEmailTemplate(const OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate &verify_email_template) {
    m_verify_email_template = verify_email_template;
    m_verify_email_template_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_verify_email_template_Set() const{
    return m_verify_email_template_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::is_verify_email_template_Valid() const{
    return m_verify_email_template_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_callback_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_email_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dns_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_legacy_reset_password_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reset_password_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_revert_second_factor_addition_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_smtp.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_verify_email_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SendEmail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
