/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::~OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig() {}

void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_client_secret_isSet = false;
    m_client_secret_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_issuer_isSet = false;
    m_issuer_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_response_type_isSet = false;
    m_response_type_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("clientId")]);
    m_client_id_isSet = !json[QString("clientId")].isNull() && m_client_id_isValid;

    m_client_secret_isValid = ::OpenAPI::fromJsonValue(m_client_secret, json[QString("clientSecret")]);
    m_client_secret_isSet = !json[QString("clientSecret")].isNull() && m_client_secret_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_issuer_isValid = ::OpenAPI::fromJsonValue(m_issuer, json[QString("issuer")]);
    m_issuer_isSet = !json[QString("issuer")].isNull() && m_issuer_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_response_type_isValid = ::OpenAPI::fromJsonValue(m_response_type, json[QString("responseType")]);
    m_response_type_isSet = !json[QString("responseType")].isNull() && m_response_type_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("clientId"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_client_secret_isSet) {
        obj.insert(QString("clientSecret"), ::OpenAPI::toJsonValue(m_client_secret));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_issuer_isSet) {
        obj.insert(QString("issuer"), ::OpenAPI::toJsonValue(m_issuer));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_response_type.isSet()) {
        obj.insert(QString("responseType"), ::OpenAPI::toJsonValue(m_response_type));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::getClientId() const {
    return m_client_id;
}
void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::getClientSecret() const {
    return m_client_secret;
}
void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::setClientSecret(const QString &client_secret) {
    m_client_secret = client_secret;
    m_client_secret_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_client_secret_Set() const{
    return m_client_secret_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_client_secret_Valid() const{
    return m_client_secret_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::isEnabled() const {
    return m_enabled;
}
void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::getIssuer() const {
    return m_issuer;
}
void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::setIssuer(const QString &issuer) {
    m_issuer = issuer;
    m_issuer_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_issuer_Set() const{
    return m_issuer_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_issuer_Valid() const{
    return m_issuer_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2OAuthResponseType OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::getResponseType() const {
    return m_response_type;
}
void OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::setResponseType(const OAIGoogleCloudIdentitytoolkitAdminV2OAuthResponseType &response_type) {
    m_response_type = response_type;
    m_response_type_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_response_type_Set() const{
    return m_response_type_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::is_response_type_Valid() const{
    return m_response_type_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issuer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
