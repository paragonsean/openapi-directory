/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::~OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig() {}

void OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::initializeModel() {

    m_recaptcha_enforcement_state_isSet = false;
    m_recaptcha_enforcement_state_isValid = false;

    m_recaptcha_key_isSet = false;
    m_recaptcha_key_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::fromJsonObject(QJsonObject json) {

    m_recaptcha_enforcement_state_isValid = ::OpenAPI::fromJsonValue(m_recaptcha_enforcement_state, json[QString("recaptchaEnforcementState")]);
    m_recaptcha_enforcement_state_isSet = !json[QString("recaptchaEnforcementState")].isNull() && m_recaptcha_enforcement_state_isValid;

    m_recaptcha_key_isValid = ::OpenAPI::fromJsonValue(m_recaptcha_key, json[QString("recaptchaKey")]);
    m_recaptcha_key_isSet = !json[QString("recaptchaKey")].isNull() && m_recaptcha_key_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_recaptcha_enforcement_state.size() > 0) {
        obj.insert(QString("recaptchaEnforcementState"), ::OpenAPI::toJsonValue(m_recaptcha_enforcement_state));
    }
    if (m_recaptcha_key_isSet) {
        obj.insert(QString("recaptchaKey"), ::OpenAPI::toJsonValue(m_recaptcha_key));
    }
    return obj;
}

QList<OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState> OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::getRecaptchaEnforcementState() const {
    return m_recaptcha_enforcement_state;
}
void OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::setRecaptchaEnforcementState(const QList<OAIGoogleCloudIdentitytoolkitV2RecaptchaEnforcementState> &recaptcha_enforcement_state) {
    m_recaptcha_enforcement_state = recaptcha_enforcement_state;
    m_recaptcha_enforcement_state_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::is_recaptcha_enforcement_state_Set() const{
    return m_recaptcha_enforcement_state_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::is_recaptcha_enforcement_state_Valid() const{
    return m_recaptcha_enforcement_state_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::getRecaptchaKey() const {
    return m_recaptcha_key;
}
void OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::setRecaptchaKey(const QString &recaptcha_key) {
    m_recaptcha_key = recaptcha_key;
    m_recaptcha_key_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::is_recaptcha_key_Set() const{
    return m_recaptcha_key_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::is_recaptcha_key_Valid() const{
    return m_recaptcha_key_isValid;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recaptcha_enforcement_state.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_recaptcha_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitV2RecaptchaConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
