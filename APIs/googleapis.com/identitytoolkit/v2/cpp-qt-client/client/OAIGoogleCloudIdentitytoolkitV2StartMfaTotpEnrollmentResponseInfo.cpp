/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::~OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo() {}

void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::initializeModel() {

    m_finalize_enrollment_time_isSet = false;
    m_finalize_enrollment_time_isValid = false;

    m_hashing_algorithm_isSet = false;
    m_hashing_algorithm_isValid = false;

    m_period_sec_isSet = false;
    m_period_sec_isValid = false;

    m_session_info_isSet = false;
    m_session_info_isValid = false;

    m_shared_secret_key_isSet = false;
    m_shared_secret_key_isValid = false;

    m_verification_code_length_isSet = false;
    m_verification_code_length_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::fromJsonObject(QJsonObject json) {

    m_finalize_enrollment_time_isValid = ::OpenAPI::fromJsonValue(m_finalize_enrollment_time, json[QString("finalizeEnrollmentTime")]);
    m_finalize_enrollment_time_isSet = !json[QString("finalizeEnrollmentTime")].isNull() && m_finalize_enrollment_time_isValid;

    m_hashing_algorithm_isValid = ::OpenAPI::fromJsonValue(m_hashing_algorithm, json[QString("hashingAlgorithm")]);
    m_hashing_algorithm_isSet = !json[QString("hashingAlgorithm")].isNull() && m_hashing_algorithm_isValid;

    m_period_sec_isValid = ::OpenAPI::fromJsonValue(m_period_sec, json[QString("periodSec")]);
    m_period_sec_isSet = !json[QString("periodSec")].isNull() && m_period_sec_isValid;

    m_session_info_isValid = ::OpenAPI::fromJsonValue(m_session_info, json[QString("sessionInfo")]);
    m_session_info_isSet = !json[QString("sessionInfo")].isNull() && m_session_info_isValid;

    m_shared_secret_key_isValid = ::OpenAPI::fromJsonValue(m_shared_secret_key, json[QString("sharedSecretKey")]);
    m_shared_secret_key_isSet = !json[QString("sharedSecretKey")].isNull() && m_shared_secret_key_isValid;

    m_verification_code_length_isValid = ::OpenAPI::fromJsonValue(m_verification_code_length, json[QString("verificationCodeLength")]);
    m_verification_code_length_isSet = !json[QString("verificationCodeLength")].isNull() && m_verification_code_length_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_finalize_enrollment_time_isSet) {
        obj.insert(QString("finalizeEnrollmentTime"), ::OpenAPI::toJsonValue(m_finalize_enrollment_time));
    }
    if (m_hashing_algorithm_isSet) {
        obj.insert(QString("hashingAlgorithm"), ::OpenAPI::toJsonValue(m_hashing_algorithm));
    }
    if (m_period_sec_isSet) {
        obj.insert(QString("periodSec"), ::OpenAPI::toJsonValue(m_period_sec));
    }
    if (m_session_info_isSet) {
        obj.insert(QString("sessionInfo"), ::OpenAPI::toJsonValue(m_session_info));
    }
    if (m_shared_secret_key_isSet) {
        obj.insert(QString("sharedSecretKey"), ::OpenAPI::toJsonValue(m_shared_secret_key));
    }
    if (m_verification_code_length_isSet) {
        obj.insert(QString("verificationCodeLength"), ::OpenAPI::toJsonValue(m_verification_code_length));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::getFinalizeEnrollmentTime() const {
    return m_finalize_enrollment_time;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::setFinalizeEnrollmentTime(const QString &finalize_enrollment_time) {
    m_finalize_enrollment_time = finalize_enrollment_time;
    m_finalize_enrollment_time_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_finalize_enrollment_time_Set() const{
    return m_finalize_enrollment_time_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_finalize_enrollment_time_Valid() const{
    return m_finalize_enrollment_time_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::getHashingAlgorithm() const {
    return m_hashing_algorithm;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::setHashingAlgorithm(const QString &hashing_algorithm) {
    m_hashing_algorithm = hashing_algorithm;
    m_hashing_algorithm_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_hashing_algorithm_Set() const{
    return m_hashing_algorithm_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_hashing_algorithm_Valid() const{
    return m_hashing_algorithm_isValid;
}

qint32 OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::getPeriodSec() const {
    return m_period_sec;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::setPeriodSec(const qint32 &period_sec) {
    m_period_sec = period_sec;
    m_period_sec_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_period_sec_Set() const{
    return m_period_sec_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_period_sec_Valid() const{
    return m_period_sec_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::getSessionInfo() const {
    return m_session_info;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::setSessionInfo(const QString &session_info) {
    m_session_info = session_info;
    m_session_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_session_info_Set() const{
    return m_session_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_session_info_Valid() const{
    return m_session_info_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::getSharedSecretKey() const {
    return m_shared_secret_key;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::setSharedSecretKey(const QString &shared_secret_key) {
    m_shared_secret_key = shared_secret_key;
    m_shared_secret_key_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_shared_secret_key_Set() const{
    return m_shared_secret_key_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_shared_secret_key_Valid() const{
    return m_shared_secret_key_isValid;
}

qint32 OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::getVerificationCodeLength() const {
    return m_verification_code_length;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::setVerificationCodeLength(const qint32 &verification_code_length) {
    m_verification_code_length = verification_code_length;
    m_verification_code_length_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_verification_code_length_Set() const{
    return m_verification_code_length_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::is_verification_code_length_Valid() const{
    return m_verification_code_length_isValid;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_finalize_enrollment_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hashing_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_sec_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_secret_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification_code_length_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
