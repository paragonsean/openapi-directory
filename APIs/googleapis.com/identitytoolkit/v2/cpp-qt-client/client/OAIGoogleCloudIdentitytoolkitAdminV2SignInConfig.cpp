/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::~OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig() {}

void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::initializeModel() {

    m_allow_duplicate_emails_isSet = false;
    m_allow_duplicate_emails_isValid = false;

    m_anonymous_isSet = false;
    m_anonymous_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_hash_config_isSet = false;
    m_hash_config_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::fromJsonObject(QJsonObject json) {

    m_allow_duplicate_emails_isValid = ::OpenAPI::fromJsonValue(m_allow_duplicate_emails, json[QString("allowDuplicateEmails")]);
    m_allow_duplicate_emails_isSet = !json[QString("allowDuplicateEmails")].isNull() && m_allow_duplicate_emails_isValid;

    m_anonymous_isValid = ::OpenAPI::fromJsonValue(m_anonymous, json[QString("anonymous")]);
    m_anonymous_isSet = !json[QString("anonymous")].isNull() && m_anonymous_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_hash_config_isValid = ::OpenAPI::fromJsonValue(m_hash_config, json[QString("hashConfig")]);
    m_hash_config_isSet = !json[QString("hashConfig")].isNull() && m_hash_config_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phoneNumber")]);
    m_phone_number_isSet = !json[QString("phoneNumber")].isNull() && m_phone_number_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_duplicate_emails_isSet) {
        obj.insert(QString("allowDuplicateEmails"), ::OpenAPI::toJsonValue(m_allow_duplicate_emails));
    }
    if (m_anonymous.isSet()) {
        obj.insert(QString("anonymous"), ::OpenAPI::toJsonValue(m_anonymous));
    }
    if (m_email.isSet()) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_hash_config.isSet()) {
        obj.insert(QString("hashConfig"), ::OpenAPI::toJsonValue(m_hash_config));
    }
    if (m_phone_number.isSet()) {
        obj.insert(QString("phoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    return obj;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::isAllowDuplicateEmails() const {
    return m_allow_duplicate_emails;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::setAllowDuplicateEmails(const bool &allow_duplicate_emails) {
    m_allow_duplicate_emails = allow_duplicate_emails;
    m_allow_duplicate_emails_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_allow_duplicate_emails_Set() const{
    return m_allow_duplicate_emails_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_allow_duplicate_emails_Valid() const{
    return m_allow_duplicate_emails_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2Anonymous OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::getAnonymous() const {
    return m_anonymous;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::setAnonymous(const OAIGoogleCloudIdentitytoolkitAdminV2Anonymous &anonymous) {
    m_anonymous = anonymous;
    m_anonymous_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_anonymous_Set() const{
    return m_anonymous_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_anonymous_Valid() const{
    return m_anonymous_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2Email OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::getEmail() const {
    return m_email;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::setEmail(const OAIGoogleCloudIdentitytoolkitAdminV2Email &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_email_Set() const{
    return m_email_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_email_Valid() const{
    return m_email_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2HashConfig OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::getHashConfig() const {
    return m_hash_config;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::setHashConfig(const OAIGoogleCloudIdentitytoolkitAdminV2HashConfig &hash_config) {
    m_hash_config = hash_config;
    m_hash_config_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_hash_config_Set() const{
    return m_hash_config_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_hash_config_Valid() const{
    return m_hash_config_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::getPhoneNumber() const {
    return m_phone_number;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::setPhoneNumber(const OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_duplicate_emails_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anonymous.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hash_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SignInConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
