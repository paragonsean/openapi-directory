/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest.h
 *
 * Finalizes sign-in by verifying MFA challenge.
 */

#ifndef OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest_H
#define OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo.h"
#include "OAIGoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo;
class OAIGoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo;

class OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest : public OAIObject {
public:
    OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest();
    OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest(QString json);
    ~OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMfaEnrollmentId() const;
    void setMfaEnrollmentId(const QString &mfa_enrollment_id);
    bool is_mfa_enrollment_id_Set() const;
    bool is_mfa_enrollment_id_Valid() const;

    QString getMfaPendingCredential() const;
    void setMfaPendingCredential(const QString &mfa_pending_credential);
    bool is_mfa_pending_credential_Set() const;
    bool is_mfa_pending_credential_Valid() const;

    OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo getPhoneVerificationInfo() const;
    void setPhoneVerificationInfo(const OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo &phone_verification_info);
    bool is_phone_verification_info_Set() const;
    bool is_phone_verification_info_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    OAIGoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo getTotpVerificationInfo() const;
    void setTotpVerificationInfo(const OAIGoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo &totp_verification_info);
    bool is_totp_verification_info_Set() const;
    bool is_totp_verification_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_mfa_enrollment_id;
    bool m_mfa_enrollment_id_isSet;
    bool m_mfa_enrollment_id_isValid;

    QString m_mfa_pending_credential;
    bool m_mfa_pending_credential_isSet;
    bool m_mfa_pending_credential_isValid;

    OAIGoogleCloudIdentitytoolkitV2FinalizeMfaPhoneRequestInfo m_phone_verification_info;
    bool m_phone_verification_info_isSet;
    bool m_phone_verification_info_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    OAIGoogleCloudIdentitytoolkitV2MfaTotpSignInRequestInfo m_totp_verification_info;
    bool m_totp_verification_info_isSet;
    bool m_totp_verification_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest)

#endif // OAIGoogleCloudIdentitytoolkitV2FinalizeMfaSignInRequest_H
