/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::~OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber() {}

void OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_test_phone_numbers_isSet = false;
    m_test_phone_numbers_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_test_phone_numbers_isValid = ::OpenAPI::fromJsonValue(m_test_phone_numbers, json[QString("testPhoneNumbers")]);
    m_test_phone_numbers_isSet = !json[QString("testPhoneNumbers")].isNull() && m_test_phone_numbers_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_test_phone_numbers.size() > 0) {
        obj.insert(QString("testPhoneNumbers"), ::OpenAPI::toJsonValue(m_test_phone_numbers));
    }
    return obj;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::isEnabled() const {
    return m_enabled;
}
void OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QMap<QString, QString> OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::getTestPhoneNumbers() const {
    return m_test_phone_numbers;
}
void OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::setTestPhoneNumbers(const QMap<QString, QString> &test_phone_numbers) {
    m_test_phone_numbers = test_phone_numbers;
    m_test_phone_numbers_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::is_test_phone_numbers_Set() const{
    return m_test_phone_numbers_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::is_test_phone_numbers_Valid() const{
    return m_test_phone_numbers_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_phone_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PhoneNumber::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
