/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::~OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion() {}

void OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::initializeModel() {

    m_custom_strength_options_isSet = false;
    m_custom_strength_options_isValid = false;

    m_schema_version_isSet = false;
    m_schema_version_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::fromJsonObject(QJsonObject json) {

    m_custom_strength_options_isValid = ::OpenAPI::fromJsonValue(m_custom_strength_options, json[QString("customStrengthOptions")]);
    m_custom_strength_options_isSet = !json[QString("customStrengthOptions")].isNull() && m_custom_strength_options_isValid;

    m_schema_version_isValid = ::OpenAPI::fromJsonValue(m_schema_version, json[QString("schemaVersion")]);
    m_schema_version_isSet = !json[QString("schemaVersion")].isNull() && m_schema_version_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_strength_options.isSet()) {
        obj.insert(QString("customStrengthOptions"), ::OpenAPI::toJsonValue(m_custom_strength_options));
    }
    if (m_schema_version_isSet) {
        obj.insert(QString("schemaVersion"), ::OpenAPI::toJsonValue(m_schema_version));
    }
    return obj;
}

OAIGoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::getCustomStrengthOptions() const {
    return m_custom_strength_options;
}
void OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::setCustomStrengthOptions(const OAIGoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions &custom_strength_options) {
    m_custom_strength_options = custom_strength_options;
    m_custom_strength_options_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::is_custom_strength_options_Set() const{
    return m_custom_strength_options_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::is_custom_strength_options_Valid() const{
    return m_custom_strength_options_isValid;
}

qint32 OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::getSchemaVersion() const {
    return m_schema_version;
}
void OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::setSchemaVersion(const qint32 &schema_version) {
    m_schema_version = schema_version;
    m_schema_version_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::is_schema_version_Set() const{
    return m_schema_version_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::is_schema_version_Valid() const{
    return m_schema_version_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_strength_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
