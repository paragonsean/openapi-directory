/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig.h
 *
 * TotpMFAProviderConfig represents the TOTP based MFA provider.
 */

#ifndef OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig_H
#define OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig : public OAIObject {
public:
    OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig();
    OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig(QString json);
    ~OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdjacentIntervals() const;
    void setAdjacentIntervals(const qint32 &adjacent_intervals);
    bool is_adjacent_intervals_Set() const;
    bool is_adjacent_intervals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_adjacent_intervals;
    bool m_adjacent_intervals_isSet;
    bool m_adjacent_intervals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig)

#endif // OAIGoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig_H
