/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::~OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions() {}

void OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::initializeModel() {

    m_disabled_user_deletion_isSet = false;
    m_disabled_user_deletion_isValid = false;

    m_disabled_user_signup_isSet = false;
    m_disabled_user_signup_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::fromJsonObject(QJsonObject json) {

    m_disabled_user_deletion_isValid = ::OpenAPI::fromJsonValue(m_disabled_user_deletion, json[QString("disabledUserDeletion")]);
    m_disabled_user_deletion_isSet = !json[QString("disabledUserDeletion")].isNull() && m_disabled_user_deletion_isValid;

    m_disabled_user_signup_isValid = ::OpenAPI::fromJsonValue(m_disabled_user_signup, json[QString("disabledUserSignup")]);
    m_disabled_user_signup_isSet = !json[QString("disabledUserSignup")].isNull() && m_disabled_user_signup_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_user_deletion_isSet) {
        obj.insert(QString("disabledUserDeletion"), ::OpenAPI::toJsonValue(m_disabled_user_deletion));
    }
    if (m_disabled_user_signup_isSet) {
        obj.insert(QString("disabledUserSignup"), ::OpenAPI::toJsonValue(m_disabled_user_signup));
    }
    return obj;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::isDisabledUserDeletion() const {
    return m_disabled_user_deletion;
}
void OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::setDisabledUserDeletion(const bool &disabled_user_deletion) {
    m_disabled_user_deletion = disabled_user_deletion;
    m_disabled_user_deletion_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::is_disabled_user_deletion_Set() const{
    return m_disabled_user_deletion_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::is_disabled_user_deletion_Valid() const{
    return m_disabled_user_deletion_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::isDisabledUserSignup() const {
    return m_disabled_user_signup;
}
void OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::setDisabledUserSignup(const bool &disabled_user_signup) {
    m_disabled_user_signup = disabled_user_signup;
    m_disabled_user_signup_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::is_disabled_user_signup_Set() const{
    return m_disabled_user_signup_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::is_disabled_user_signup_Valid() const{
    return m_disabled_user_signup_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_user_deletion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disabled_user_signup_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2ClientPermissions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
