/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::~OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo() {}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::initializeModel() {

    m_session_info_isSet = false;
    m_session_info_isValid = false;

    m_verification_code_isSet = false;
    m_verification_code_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::fromJsonObject(QJsonObject json) {

    m_session_info_isValid = ::OpenAPI::fromJsonValue(m_session_info, json[QString("sessionInfo")]);
    m_session_info_isSet = !json[QString("sessionInfo")].isNull() && m_session_info_isValid;

    m_verification_code_isValid = ::OpenAPI::fromJsonValue(m_verification_code, json[QString("verificationCode")]);
    m_verification_code_isSet = !json[QString("verificationCode")].isNull() && m_verification_code_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_session_info_isSet) {
        obj.insert(QString("sessionInfo"), ::OpenAPI::toJsonValue(m_session_info));
    }
    if (m_verification_code_isSet) {
        obj.insert(QString("verificationCode"), ::OpenAPI::toJsonValue(m_verification_code));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::getSessionInfo() const {
    return m_session_info;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::setSessionInfo(const QString &session_info) {
    m_session_info = session_info;
    m_session_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::is_session_info_Set() const{
    return m_session_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::is_session_info_Valid() const{
    return m_session_info_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::getVerificationCode() const {
    return m_verification_code;
}
void OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::setVerificationCode(const QString &verification_code) {
    m_verification_code = verification_code;
    m_verification_code_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::is_verification_code_Set() const{
    return m_verification_code_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::is_verification_code_Valid() const{
    return m_verification_code_isValid;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_session_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitV2FinalizeMfaTotpEnrollmentRequestInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
