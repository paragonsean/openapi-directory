/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudIdentitytoolkitV2PasswordPolicy.h
 *
 * Configuration for password policy.
 */

#ifndef OAIGoogleCloudIdentitytoolkitV2PasswordPolicy_H
#define OAIGoogleCloudIdentitytoolkitV2PasswordPolicy_H

#include <QJsonObject>

#include "OAIGoogleCloudIdentitytoolkitV2CustomStrengthOptions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudIdentitytoolkitV2CustomStrengthOptions;

class OAIGoogleCloudIdentitytoolkitV2PasswordPolicy : public OAIObject {
public:
    OAIGoogleCloudIdentitytoolkitV2PasswordPolicy();
    OAIGoogleCloudIdentitytoolkitV2PasswordPolicy(QString json);
    ~OAIGoogleCloudIdentitytoolkitV2PasswordPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedNonAlphanumericCharacters() const;
    void setAllowedNonAlphanumericCharacters(const QList<QString> &allowed_non_alphanumeric_characters);
    bool is_allowed_non_alphanumeric_characters_Set() const;
    bool is_allowed_non_alphanumeric_characters_Valid() const;

    OAIGoogleCloudIdentitytoolkitV2CustomStrengthOptions getCustomStrengthOptions() const;
    void setCustomStrengthOptions(const OAIGoogleCloudIdentitytoolkitV2CustomStrengthOptions &custom_strength_options);
    bool is_custom_strength_options_Set() const;
    bool is_custom_strength_options_Valid() const;

    QString getEnforcementState() const;
    void setEnforcementState(const QString &enforcement_state);
    bool is_enforcement_state_Set() const;
    bool is_enforcement_state_Valid() const;

    bool isForceUpgradeOnSignin() const;
    void setForceUpgradeOnSignin(const bool &force_upgrade_on_signin);
    bool is_force_upgrade_on_signin_Set() const;
    bool is_force_upgrade_on_signin_Valid() const;

    qint32 getSchemaVersion() const;
    void setSchemaVersion(const qint32 &schema_version);
    bool is_schema_version_Set() const;
    bool is_schema_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_non_alphanumeric_characters;
    bool m_allowed_non_alphanumeric_characters_isSet;
    bool m_allowed_non_alphanumeric_characters_isValid;

    OAIGoogleCloudIdentitytoolkitV2CustomStrengthOptions m_custom_strength_options;
    bool m_custom_strength_options_isSet;
    bool m_custom_strength_options_isValid;

    QString m_enforcement_state;
    bool m_enforcement_state_isSet;
    bool m_enforcement_state_isValid;

    bool m_force_upgrade_on_signin;
    bool m_force_upgrade_on_signin_isSet;
    bool m_force_upgrade_on_signin_isValid;

    qint32 m_schema_version;
    bool m_schema_version_isSet;
    bool m_schema_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudIdentitytoolkitV2PasswordPolicy)

#endif // OAIGoogleCloudIdentitytoolkitV2PasswordPolicy_H
