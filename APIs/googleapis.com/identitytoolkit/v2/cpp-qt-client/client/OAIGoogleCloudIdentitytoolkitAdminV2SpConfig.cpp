/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2SpConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::OAIGoogleCloudIdentitytoolkitAdminV2SpConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::OAIGoogleCloudIdentitytoolkitAdminV2SpConfig() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::~OAIGoogleCloudIdentitytoolkitAdminV2SpConfig() {}

void OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::initializeModel() {

    m_callback_uri_isSet = false;
    m_callback_uri_isValid = false;

    m_sp_certificates_isSet = false;
    m_sp_certificates_isValid = false;

    m_sp_entity_id_isSet = false;
    m_sp_entity_id_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::fromJsonObject(QJsonObject json) {

    m_callback_uri_isValid = ::OpenAPI::fromJsonValue(m_callback_uri, json[QString("callbackUri")]);
    m_callback_uri_isSet = !json[QString("callbackUri")].isNull() && m_callback_uri_isValid;

    m_sp_certificates_isValid = ::OpenAPI::fromJsonValue(m_sp_certificates, json[QString("spCertificates")]);
    m_sp_certificates_isSet = !json[QString("spCertificates")].isNull() && m_sp_certificates_isValid;

    m_sp_entity_id_isValid = ::OpenAPI::fromJsonValue(m_sp_entity_id, json[QString("spEntityId")]);
    m_sp_entity_id_isSet = !json[QString("spEntityId")].isNull() && m_sp_entity_id_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_callback_uri_isSet) {
        obj.insert(QString("callbackUri"), ::OpenAPI::toJsonValue(m_callback_uri));
    }
    if (m_sp_certificates.size() > 0) {
        obj.insert(QString("spCertificates"), ::OpenAPI::toJsonValue(m_sp_certificates));
    }
    if (m_sp_entity_id_isSet) {
        obj.insert(QString("spEntityId"), ::OpenAPI::toJsonValue(m_sp_entity_id));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::getCallbackUri() const {
    return m_callback_uri;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::setCallbackUri(const QString &callback_uri) {
    m_callback_uri = callback_uri;
    m_callback_uri_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::is_callback_uri_Set() const{
    return m_callback_uri_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::is_callback_uri_Valid() const{
    return m_callback_uri_isValid;
}

QList<OAIGoogleCloudIdentitytoolkitAdminV2SpCertificate> OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::getSpCertificates() const {
    return m_sp_certificates;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::setSpCertificates(const QList<OAIGoogleCloudIdentitytoolkitAdminV2SpCertificate> &sp_certificates) {
    m_sp_certificates = sp_certificates;
    m_sp_certificates_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::is_sp_certificates_Set() const{
    return m_sp_certificates_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::is_sp_certificates_Valid() const{
    return m_sp_certificates_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::getSpEntityId() const {
    return m_sp_entity_id;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::setSpEntityId(const QString &sp_entity_id) {
    m_sp_entity_id = sp_entity_id;
    m_sp_entity_id_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::is_sp_entity_id_Set() const{
    return m_sp_entity_id_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::is_sp_entity_id_Valid() const{
    return m_sp_entity_id_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_callback_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sp_certificates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sp_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SpConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
