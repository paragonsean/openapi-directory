/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::~OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate() {}

void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_body_format_isSet = false;
    m_body_format_isValid = false;

    m_customized_isSet = false;
    m_customized_isValid = false;

    m_reply_to_isSet = false;
    m_reply_to_isValid = false;

    m_sender_display_name_isSet = false;
    m_sender_display_name_isValid = false;

    m_sender_local_part_isSet = false;
    m_sender_local_part_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("body")]);
    m_body_isSet = !json[QString("body")].isNull() && m_body_isValid;

    m_body_format_isValid = ::OpenAPI::fromJsonValue(m_body_format, json[QString("bodyFormat")]);
    m_body_format_isSet = !json[QString("bodyFormat")].isNull() && m_body_format_isValid;

    m_customized_isValid = ::OpenAPI::fromJsonValue(m_customized, json[QString("customized")]);
    m_customized_isSet = !json[QString("customized")].isNull() && m_customized_isValid;

    m_reply_to_isValid = ::OpenAPI::fromJsonValue(m_reply_to, json[QString("replyTo")]);
    m_reply_to_isSet = !json[QString("replyTo")].isNull() && m_reply_to_isValid;

    m_sender_display_name_isValid = ::OpenAPI::fromJsonValue(m_sender_display_name, json[QString("senderDisplayName")]);
    m_sender_display_name_isSet = !json[QString("senderDisplayName")].isNull() && m_sender_display_name_isValid;

    m_sender_local_part_isValid = ::OpenAPI::fromJsonValue(m_sender_local_part, json[QString("senderLocalPart")]);
    m_sender_local_part_isSet = !json[QString("senderLocalPart")].isNull() && m_sender_local_part_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("subject")]);
    m_subject_isSet = !json[QString("subject")].isNull() && m_subject_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_body_format_isSet) {
        obj.insert(QString("bodyFormat"), ::OpenAPI::toJsonValue(m_body_format));
    }
    if (m_customized_isSet) {
        obj.insert(QString("customized"), ::OpenAPI::toJsonValue(m_customized));
    }
    if (m_reply_to_isSet) {
        obj.insert(QString("replyTo"), ::OpenAPI::toJsonValue(m_reply_to));
    }
    if (m_sender_display_name_isSet) {
        obj.insert(QString("senderDisplayName"), ::OpenAPI::toJsonValue(m_sender_display_name));
    }
    if (m_sender_local_part_isSet) {
        obj.insert(QString("senderLocalPart"), ::OpenAPI::toJsonValue(m_sender_local_part));
    }
    if (m_subject_isSet) {
        obj.insert(QString("subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::getBody() const {
    return m_body;
}
void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_body_Set() const{
    return m_body_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_body_Valid() const{
    return m_body_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::getBodyFormat() const {
    return m_body_format;
}
void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::setBodyFormat(const QString &body_format) {
    m_body_format = body_format;
    m_body_format_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_body_format_Set() const{
    return m_body_format_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_body_format_Valid() const{
    return m_body_format_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::isCustomized() const {
    return m_customized;
}
void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::setCustomized(const bool &customized) {
    m_customized = customized;
    m_customized_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_customized_Set() const{
    return m_customized_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_customized_Valid() const{
    return m_customized_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::getReplyTo() const {
    return m_reply_to;
}
void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::setReplyTo(const QString &reply_to) {
    m_reply_to = reply_to;
    m_reply_to_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_reply_to_Set() const{
    return m_reply_to_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_reply_to_Valid() const{
    return m_reply_to_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::getSenderDisplayName() const {
    return m_sender_display_name;
}
void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::setSenderDisplayName(const QString &sender_display_name) {
    m_sender_display_name = sender_display_name;
    m_sender_display_name_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_sender_display_name_Set() const{
    return m_sender_display_name_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_sender_display_name_Valid() const{
    return m_sender_display_name_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::getSenderLocalPart() const {
    return m_sender_local_part;
}
void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::setSenderLocalPart(const QString &sender_local_part) {
    m_sender_local_part = sender_local_part;
    m_sender_local_part_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_sender_local_part_Set() const{
    return m_sender_local_part_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_sender_local_part_Valid() const{
    return m_sender_local_part_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::getSubject() const {
    return m_subject;
}
void OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::is_subject_Valid() const{
    return m_subject_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_local_part_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2EmailTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
