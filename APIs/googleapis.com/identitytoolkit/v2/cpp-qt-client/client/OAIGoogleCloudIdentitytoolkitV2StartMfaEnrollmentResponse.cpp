/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::~OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse() {}

void OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::initializeModel() {

    m_phone_session_info_isSet = false;
    m_phone_session_info_isValid = false;

    m_totp_session_info_isSet = false;
    m_totp_session_info_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::fromJsonObject(QJsonObject json) {

    m_phone_session_info_isValid = ::OpenAPI::fromJsonValue(m_phone_session_info, json[QString("phoneSessionInfo")]);
    m_phone_session_info_isSet = !json[QString("phoneSessionInfo")].isNull() && m_phone_session_info_isValid;

    m_totp_session_info_isValid = ::OpenAPI::fromJsonValue(m_totp_session_info, json[QString("totpSessionInfo")]);
    m_totp_session_info_isSet = !json[QString("totpSessionInfo")].isNull() && m_totp_session_info_isValid;
}

QString OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_phone_session_info.isSet()) {
        obj.insert(QString("phoneSessionInfo"), ::OpenAPI::toJsonValue(m_phone_session_info));
    }
    if (m_totp_session_info.isSet()) {
        obj.insert(QString("totpSessionInfo"), ::OpenAPI::toJsonValue(m_totp_session_info));
    }
    return obj;
}

OAIGoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::getPhoneSessionInfo() const {
    return m_phone_session_info;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::setPhoneSessionInfo(const OAIGoogleCloudIdentitytoolkitV2StartMfaPhoneResponseInfo &phone_session_info) {
    m_phone_session_info = phone_session_info;
    m_phone_session_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::is_phone_session_info_Set() const{
    return m_phone_session_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::is_phone_session_info_Valid() const{
    return m_phone_session_info_isValid;
}

OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::getTotpSessionInfo() const {
    return m_totp_session_info;
}
void OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::setTotpSessionInfo(const OAIGoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo &totp_session_info) {
    m_totp_session_info = totp_session_info;
    m_totp_session_info_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::is_totp_session_info_Set() const{
    return m_totp_session_info_isSet;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::is_totp_session_info_Valid() const{
    return m_totp_session_info_isValid;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phone_session_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_totp_session_info.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitV2StartMfaEnrollmentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
