/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::~OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig() {}

void OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::initializeModel() {

    m_allow_by_default_isSet = false;
    m_allow_by_default_isValid = false;

    m_allowlist_only_isSet = false;
    m_allowlist_only_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::fromJsonObject(QJsonObject json) {

    m_allow_by_default_isValid = ::OpenAPI::fromJsonValue(m_allow_by_default, json[QString("allowByDefault")]);
    m_allow_by_default_isSet = !json[QString("allowByDefault")].isNull() && m_allow_by_default_isValid;

    m_allowlist_only_isValid = ::OpenAPI::fromJsonValue(m_allowlist_only, json[QString("allowlistOnly")]);
    m_allowlist_only_isSet = !json[QString("allowlistOnly")].isNull() && m_allowlist_only_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_by_default.isSet()) {
        obj.insert(QString("allowByDefault"), ::OpenAPI::toJsonValue(m_allow_by_default));
    }
    if (m_allowlist_only.isSet()) {
        obj.insert(QString("allowlistOnly"), ::OpenAPI::toJsonValue(m_allowlist_only));
    }
    return obj;
}

OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::getAllowByDefault() const {
    return m_allow_by_default;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::setAllowByDefault(const OAIGoogleCloudIdentitytoolkitAdminV2AllowByDefault &allow_by_default) {
    m_allow_by_default = allow_by_default;
    m_allow_by_default_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::is_allow_by_default_Set() const{
    return m_allow_by_default_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::is_allow_by_default_Valid() const{
    return m_allow_by_default_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2AllowlistOnly OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::getAllowlistOnly() const {
    return m_allowlist_only;
}
void OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::setAllowlistOnly(const OAIGoogleCloudIdentitytoolkitAdminV2AllowlistOnly &allowlist_only) {
    m_allowlist_only = allowlist_only;
    m_allowlist_only_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::is_allowlist_only_Set() const{
    return m_allowlist_only_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::is_allowlist_only_Valid() const{
    return m_allowlist_only_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_by_default.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_allowlist_only.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2SmsRegionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
