/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::~OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig() {}

void OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::initializeModel() {

    m_default_locale_isSet = false;
    m_default_locale_isValid = false;

    m_send_email_isSet = false;
    m_send_email_isValid = false;

    m_send_sms_isSet = false;
    m_send_sms_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::fromJsonObject(QJsonObject json) {

    m_default_locale_isValid = ::OpenAPI::fromJsonValue(m_default_locale, json[QString("defaultLocale")]);
    m_default_locale_isSet = !json[QString("defaultLocale")].isNull() && m_default_locale_isValid;

    m_send_email_isValid = ::OpenAPI::fromJsonValue(m_send_email, json[QString("sendEmail")]);
    m_send_email_isSet = !json[QString("sendEmail")].isNull() && m_send_email_isValid;

    m_send_sms_isValid = ::OpenAPI::fromJsonValue(m_send_sms, json[QString("sendSms")]);
    m_send_sms_isSet = !json[QString("sendSms")].isNull() && m_send_sms_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_default_locale_isSet) {
        obj.insert(QString("defaultLocale"), ::OpenAPI::toJsonValue(m_default_locale));
    }
    if (m_send_email.isSet()) {
        obj.insert(QString("sendEmail"), ::OpenAPI::toJsonValue(m_send_email));
    }
    if (m_send_sms.isSet()) {
        obj.insert(QString("sendSms"), ::OpenAPI::toJsonValue(m_send_sms));
    }
    return obj;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::getDefaultLocale() const {
    return m_default_locale;
}
void OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::setDefaultLocale(const QString &default_locale) {
    m_default_locale = default_locale;
    m_default_locale_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::is_default_locale_Set() const{
    return m_default_locale_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::is_default_locale_Valid() const{
    return m_default_locale_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2SendEmail OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::getSendEmail() const {
    return m_send_email;
}
void OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::setSendEmail(const OAIGoogleCloudIdentitytoolkitAdminV2SendEmail &send_email) {
    m_send_email = send_email;
    m_send_email_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::is_send_email_Set() const{
    return m_send_email_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::is_send_email_Valid() const{
    return m_send_email_isValid;
}

OAIGoogleCloudIdentitytoolkitAdminV2SendSms OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::getSendSms() const {
    return m_send_sms;
}
void OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::setSendSms(const OAIGoogleCloudIdentitytoolkitAdminV2SendSms &send_sms) {
    m_send_sms = send_sms;
    m_send_sms_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::is_send_sms_Set() const{
    return m_send_sms_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::is_send_sms_Valid() const{
    return m_send_sms_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_sms.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2NotificationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
