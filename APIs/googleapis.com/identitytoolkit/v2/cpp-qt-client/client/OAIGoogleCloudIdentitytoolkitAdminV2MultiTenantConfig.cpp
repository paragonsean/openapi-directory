/**
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig() {
    this->initializeModel();
}

OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::~OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig() {}

void OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::initializeModel() {

    m_allow_tenants_isSet = false;
    m_allow_tenants_isValid = false;

    m_default_tenant_location_isSet = false;
    m_default_tenant_location_isValid = false;
}

void OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::fromJsonObject(QJsonObject json) {

    m_allow_tenants_isValid = ::OpenAPI::fromJsonValue(m_allow_tenants, json[QString("allowTenants")]);
    m_allow_tenants_isSet = !json[QString("allowTenants")].isNull() && m_allow_tenants_isValid;

    m_default_tenant_location_isValid = ::OpenAPI::fromJsonValue(m_default_tenant_location, json[QString("defaultTenantLocation")]);
    m_default_tenant_location_isSet = !json[QString("defaultTenantLocation")].isNull() && m_default_tenant_location_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_tenants_isSet) {
        obj.insert(QString("allowTenants"), ::OpenAPI::toJsonValue(m_allow_tenants));
    }
    if (m_default_tenant_location_isSet) {
        obj.insert(QString("defaultTenantLocation"), ::OpenAPI::toJsonValue(m_default_tenant_location));
    }
    return obj;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::isAllowTenants() const {
    return m_allow_tenants;
}
void OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::setAllowTenants(const bool &allow_tenants) {
    m_allow_tenants = allow_tenants;
    m_allow_tenants_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::is_allow_tenants_Set() const{
    return m_allow_tenants_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::is_allow_tenants_Valid() const{
    return m_allow_tenants_isValid;
}

QString OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::getDefaultTenantLocation() const {
    return m_default_tenant_location;
}
void OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::setDefaultTenantLocation(const QString &default_tenant_location) {
    m_default_tenant_location = default_tenant_location;
    m_default_tenant_location_isSet = true;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::is_default_tenant_location_Set() const{
    return m_default_tenant_location_isSet;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::is_default_tenant_location_Valid() const{
    return m_default_tenant_location_isValid;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_tenants_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_tenant_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudIdentitytoolkitAdminV2MultiTenantConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
