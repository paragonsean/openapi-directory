/*
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2HashConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2Inheritance;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2MonitoringConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudIdentitytoolkitAdminV2Tenant
 */
public class GoogleCloudIdentitytoolkitAdminV2TenantTest {
    private final GoogleCloudIdentitytoolkitAdminV2Tenant model = new GoogleCloudIdentitytoolkitAdminV2Tenant();

    /**
     * Model tests for GoogleCloudIdentitytoolkitAdminV2Tenant
     */
    @Test
    public void testGoogleCloudIdentitytoolkitAdminV2Tenant() {
        // TODO: test GoogleCloudIdentitytoolkitAdminV2Tenant
    }

    /**
     * Test the property 'allowPasswordSignup'
     */
    @Test
    public void allowPasswordSignupTest() {
        // TODO: test allowPasswordSignup
    }

    /**
     * Test the property 'autodeleteAnonymousUsers'
     */
    @Test
    public void autodeleteAnonymousUsersTest() {
        // TODO: test autodeleteAnonymousUsers
    }

    /**
     * Test the property 'client'
     */
    @Test
    public void clientTest() {
        // TODO: test client
    }

    /**
     * Test the property 'disableAuth'
     */
    @Test
    public void disableAuthTest() {
        // TODO: test disableAuth
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'emailPrivacyConfig'
     */
    @Test
    public void emailPrivacyConfigTest() {
        // TODO: test emailPrivacyConfig
    }

    /**
     * Test the property 'enableAnonymousUser'
     */
    @Test
    public void enableAnonymousUserTest() {
        // TODO: test enableAnonymousUser
    }

    /**
     * Test the property 'enableEmailLinkSignin'
     */
    @Test
    public void enableEmailLinkSigninTest() {
        // TODO: test enableEmailLinkSignin
    }

    /**
     * Test the property 'hashConfig'
     */
    @Test
    public void hashConfigTest() {
        // TODO: test hashConfig
    }

    /**
     * Test the property 'inheritance'
     */
    @Test
    public void inheritanceTest() {
        // TODO: test inheritance
    }

    /**
     * Test the property 'mfaConfig'
     */
    @Test
    public void mfaConfigTest() {
        // TODO: test mfaConfig
    }

    /**
     * Test the property 'monitoring'
     */
    @Test
    public void monitoringTest() {
        // TODO: test monitoring
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'passwordPolicyConfig'
     */
    @Test
    public void passwordPolicyConfigTest() {
        // TODO: test passwordPolicyConfig
    }

    /**
     * Test the property 'recaptchaConfig'
     */
    @Test
    public void recaptchaConfigTest() {
        // TODO: test recaptchaConfig
    }

    /**
     * Test the property 'smsRegionConfig'
     */
    @Test
    public void smsRegionConfigTest() {
        // TODO: test smsRegionConfig
    }

    /**
     * Test the property 'testPhoneNumbers'
     */
    @Test
    public void testPhoneNumbersTest() {
        // TODO: test testPhoneNumbers
    }

}
