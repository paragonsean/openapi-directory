/*
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2Tenant;
import org.openapitools.client.model.GoogleIamV1GetIamPolicyRequest;
import org.openapitools.client.model.GoogleIamV1Policy;
import org.openapitools.client.model.GoogleIamV1SetIamPolicyRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end authentication system for third-party users to access your apps and services. These could include mobile/web apps, games, APIs and beyond. This is the publicly available variant of EnableIdentityPlatform that is only available to billing-enabled projects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsIdentityPlatformInitializeAuthTest() throws ApiException {
        String project = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.identitytoolkitProjectsIdentityPlatformInitializeAuth(project, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Create a tenant. Requires write permission on the Agent project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudIdentitytoolkitAdminV2Tenant googleCloudIdentitytoolkitAdminV2Tenant = null;
        GoogleCloudIdentitytoolkitAdminV2Tenant response = api.identitytoolkitProjectsTenantsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudIdentitytoolkitAdminV2Tenant);
        // TODO: test validations
    }

    /**
     * Create a default supported Idp configuration for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String idpId = null;
        GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig googleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig = null;
        GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig response = api.identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, idpId, googleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig);
        // TODO: test validations
    }

    /**
     * List all default supported Idp configurations for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse response = api.identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsGetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleIamV1GetIamPolicyRequest googleIamV1GetIamPolicyRequest = null;
        GoogleIamV1Policy response = api.identitytoolkitProjectsTenantsGetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV1GetIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Create an inbound SAML configuration for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsInboundSamlConfigsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String inboundSamlConfigId = null;
        GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig googleCloudIdentitytoolkitAdminV2InboundSamlConfig = null;
        GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig response = api.identitytoolkitProjectsTenantsInboundSamlConfigsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, inboundSamlConfigId, googleCloudIdentitytoolkitAdminV2InboundSamlConfig);
        // TODO: test validations
    }

    /**
     * List all inbound SAML configurations for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsInboundSamlConfigsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse response = api.identitytoolkitProjectsTenantsInboundSamlConfigsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * List tenants under the given agent project. Requires read permission on the Agent project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse response = api.identitytoolkitProjectsTenantsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Create an Oidc Idp configuration for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsOauthIdpConfigsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String oauthIdpConfigId = null;
        GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = null;
        GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig response = api.identitytoolkitProjectsTenantsOauthIdpConfigsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, oauthIdpConfigId, googleCloudIdentitytoolkitAdminV2OAuthIdpConfig);
        // TODO: test validations
    }

    /**
     * Delete an Oidc Idp configuration for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsOauthIdpConfigsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.identitytoolkitProjectsTenantsOauthIdpConfigsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Retrieve an Oidc Idp configuration for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsOauthIdpConfigsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig response = api.identitytoolkitProjectsTenantsOauthIdpConfigsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * List all Oidc Idp configurations for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsOauthIdpConfigsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse response = api.identitytoolkitProjectsTenantsOauthIdpConfigsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Update an Oidc Idp configuration for an Identity Toolkit project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsOauthIdpConfigsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = null;
        GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig response = api.identitytoolkitProjectsTenantsOauthIdpConfigsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleCloudIdentitytoolkitAdminV2OAuthIdpConfig);
        // TODO: test validations
    }

    /**
     * Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsSetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleIamV1SetIamPolicyRequest googleIamV1SetIamPolicyRequest = null;
        GoogleIamV1Policy response = api.identitytoolkitProjectsTenantsSetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV1SetIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Returns the caller&#39;s permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void identitytoolkitProjectsTenantsTestIamPermissionsTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleIamV1TestIamPermissionsRequest googleIamV1TestIamPermissionsRequest = null;
        GoogleIamV1TestIamPermissionsResponse response = api.identitytoolkitProjectsTenantsTestIamPermissions(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV1TestIamPermissionsRequest);
        // TODO: test validations
    }

}
