/*
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions
 */
public class GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptionsTest {
    private final GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions model = new GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions();

    /**
     * Model tests for GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions
     */
    @Test
    public void testGoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions() {
        // TODO: test GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions
    }

    /**
     * Test the property 'containsLowercaseCharacter'
     */
    @Test
    public void containsLowercaseCharacterTest() {
        // TODO: test containsLowercaseCharacter
    }

    /**
     * Test the property 'containsNonAlphanumericCharacter'
     */
    @Test
    public void containsNonAlphanumericCharacterTest() {
        // TODO: test containsNonAlphanumericCharacter
    }

    /**
     * Test the property 'containsNumericCharacter'
     */
    @Test
    public void containsNumericCharacterTest() {
        // TODO: test containsNumericCharacter
    }

    /**
     * Test the property 'containsUppercaseCharacter'
     */
    @Test
    public void containsUppercaseCharacterTest() {
        // TODO: test containsUppercaseCharacter
    }

    /**
     * Test the property 'maxPasswordLength'
     */
    @Test
    public void maxPasswordLengthTest() {
        // TODO: test maxPasswordLength
    }

    /**
     * Test the property 'minPasswordLength'
     */
    @Test
    public void minPasswordLengthTest() {
        // TODO: test minPasswordLength
    }

}
