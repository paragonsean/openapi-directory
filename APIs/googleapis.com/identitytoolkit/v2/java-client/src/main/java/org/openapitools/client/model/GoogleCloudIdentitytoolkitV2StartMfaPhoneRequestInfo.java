/*
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitV2AutoRetrievalInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * App Verification info for a StartMfa request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:31.846413-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo {
  public static final String SERIALIZED_NAME_AUTO_RETRIEVAL_INFO = "autoRetrievalInfo";
  @SerializedName(SERIALIZED_NAME_AUTO_RETRIEVAL_INFO)
  private GoogleCloudIdentitytoolkitV2AutoRetrievalInfo autoRetrievalInfo;

  public static final String SERIALIZED_NAME_IOS_RECEIPT = "iosReceipt";
  @SerializedName(SERIALIZED_NAME_IOS_RECEIPT)
  private String iosReceipt;

  public static final String SERIALIZED_NAME_IOS_SECRET = "iosSecret";
  @SerializedName(SERIALIZED_NAME_IOS_SECRET)
  private String iosSecret;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PLAY_INTEGRITY_TOKEN = "playIntegrityToken";
  @SerializedName(SERIALIZED_NAME_PLAY_INTEGRITY_TOKEN)
  private String playIntegrityToken;

  public static final String SERIALIZED_NAME_RECAPTCHA_TOKEN = "recaptchaToken";
  @SerializedName(SERIALIZED_NAME_RECAPTCHA_TOKEN)
  private String recaptchaToken;

  public static final String SERIALIZED_NAME_SAFETY_NET_TOKEN = "safetyNetToken";
  @SerializedName(SERIALIZED_NAME_SAFETY_NET_TOKEN)
  private String safetyNetToken;

  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo() {
  }

  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo autoRetrievalInfo(GoogleCloudIdentitytoolkitV2AutoRetrievalInfo autoRetrievalInfo) {
    this.autoRetrievalInfo = autoRetrievalInfo;
    return this;
  }

  /**
   * Get autoRetrievalInfo
   * @return autoRetrievalInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitV2AutoRetrievalInfo getAutoRetrievalInfo() {
    return autoRetrievalInfo;
  }

  public void setAutoRetrievalInfo(GoogleCloudIdentitytoolkitV2AutoRetrievalInfo autoRetrievalInfo) {
    this.autoRetrievalInfo = autoRetrievalInfo;
  }


  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo iosReceipt(String iosReceipt) {
    this.iosReceipt = iosReceipt;
    return this;
  }

  /**
   * iOS only. Receipt of successful app token validation with APNS.
   * @return iosReceipt
   */
  @javax.annotation.Nullable
  public String getIosReceipt() {
    return iosReceipt;
  }

  public void setIosReceipt(String iosReceipt) {
    this.iosReceipt = iosReceipt;
  }


  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo iosSecret(String iosSecret) {
    this.iosSecret = iosSecret;
    return this;
  }

  /**
   * iOS only. Secret delivered to iOS app via APNS.
   * @return iosSecret
   */
  @javax.annotation.Nullable
  public String getIosSecret() {
    return iosSecret;
  }

  public void setIosSecret(String iosSecret) {
    this.iosSecret = iosSecret;
  }


  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Required for enrollment. Phone number to be enrolled as MFA.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo playIntegrityToken(String playIntegrityToken) {
    this.playIntegrityToken = playIntegrityToken;
    return this;
  }

  /**
   * Android only. Used to assert application identity in place of a recaptcha token (or safety net token). A Play Integrity Token can be generated via the [PlayIntegrity API] (https://developer.android.com/google/play/integrity) with applying SHA256 to the &#x60;phone_number&#x60; field as the nonce.
   * @return playIntegrityToken
   */
  @javax.annotation.Nullable
  public String getPlayIntegrityToken() {
    return playIntegrityToken;
  }

  public void setPlayIntegrityToken(String playIntegrityToken) {
    this.playIntegrityToken = playIntegrityToken;
  }


  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo recaptchaToken(String recaptchaToken) {
    this.recaptchaToken = recaptchaToken;
    return this;
  }

  /**
   * Web only. Recaptcha solution.
   * @return recaptchaToken
   */
  @javax.annotation.Nullable
  public String getRecaptchaToken() {
    return recaptchaToken;
  }

  public void setRecaptchaToken(String recaptchaToken) {
    this.recaptchaToken = recaptchaToken;
  }


  public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo safetyNetToken(String safetyNetToken) {
    this.safetyNetToken = safetyNetToken;
    return this;
  }

  /**
   * Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the &#x60;phone_number&#x60; field as the nonce.
   * @return safetyNetToken
   */
  @javax.annotation.Nullable
  public String getSafetyNetToken() {
    return safetyNetToken;
  }

  public void setSafetyNetToken(String safetyNetToken) {
    this.safetyNetToken = safetyNetToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo = (GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo) o;
    return Objects.equals(this.autoRetrievalInfo, googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.autoRetrievalInfo) &&
        Objects.equals(this.iosReceipt, googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.iosReceipt) &&
        Objects.equals(this.iosSecret, googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.iosSecret) &&
        Objects.equals(this.phoneNumber, googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.phoneNumber) &&
        Objects.equals(this.playIntegrityToken, googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.playIntegrityToken) &&
        Objects.equals(this.recaptchaToken, googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.recaptchaToken) &&
        Objects.equals(this.safetyNetToken, googleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.safetyNetToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRetrievalInfo, iosReceipt, iosSecret, phoneNumber, playIntegrityToken, recaptchaToken, safetyNetToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo {\n");
    sb.append("    autoRetrievalInfo: ").append(toIndentedString(autoRetrievalInfo)).append("\n");
    sb.append("    iosReceipt: ").append(toIndentedString(iosReceipt)).append("\n");
    sb.append("    iosSecret: ").append(toIndentedString(iosSecret)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    playIntegrityToken: ").append(toIndentedString(playIntegrityToken)).append("\n");
    sb.append("    recaptchaToken: ").append(toIndentedString(recaptchaToken)).append("\n");
    sb.append("    safetyNetToken: ").append(toIndentedString(safetyNetToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("autoRetrievalInfo");
    openapiFields.add("iosReceipt");
    openapiFields.add("iosSecret");
    openapiFields.add("phoneNumber");
    openapiFields.add("playIntegrityToken");
    openapiFields.add("recaptchaToken");
    openapiFields.add("safetyNetToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo is not found in the empty JSON string", GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `autoRetrievalInfo`
      if (jsonObj.get("autoRetrievalInfo") != null && !jsonObj.get("autoRetrievalInfo").isJsonNull()) {
        GoogleCloudIdentitytoolkitV2AutoRetrievalInfo.validateJsonElement(jsonObj.get("autoRetrievalInfo"));
      }
      if ((jsonObj.get("iosReceipt") != null && !jsonObj.get("iosReceipt").isJsonNull()) && !jsonObj.get("iosReceipt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iosReceipt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iosReceipt").toString()));
      }
      if ((jsonObj.get("iosSecret") != null && !jsonObj.get("iosSecret").isJsonNull()) && !jsonObj.get("iosSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iosSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iosSecret").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("playIntegrityToken") != null && !jsonObj.get("playIntegrityToken").isJsonNull()) && !jsonObj.get("playIntegrityToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playIntegrityToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playIntegrityToken").toString()));
      }
      if ((jsonObj.get("recaptchaToken") != null && !jsonObj.get("recaptchaToken").isJsonNull()) && !jsonObj.get("recaptchaToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recaptchaToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recaptchaToken").toString()));
      }
      if ((jsonObj.get("safetyNetToken") != null && !jsonObj.get("safetyNetToken").isJsonNull()) && !jsonObj.get("safetyNetToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `safetyNetToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("safetyNetToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo>() {
           @Override
           public void write(JsonWriter out, GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo
   */
  public static GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo.class);
  }

  /**
   * Convert an instance of GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

