/*
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2ClientConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2MonitoringConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2NotificationConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2QuotaConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2SignInConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an Identity Toolkit project.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:31.846413-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudIdentitytoolkitAdminV2Config {
  public static final String SERIALIZED_NAME_AUTHORIZED_DOMAINS = "authorizedDomains";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_DOMAINS)
  private List<String> authorizedDomains = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTODELETE_ANONYMOUS_USERS = "autodeleteAnonymousUsers";
  @SerializedName(SERIALIZED_NAME_AUTODELETE_ANONYMOUS_USERS)
  private Boolean autodeleteAnonymousUsers;

  public static final String SERIALIZED_NAME_BLOCKING_FUNCTIONS = "blockingFunctions";
  @SerializedName(SERIALIZED_NAME_BLOCKING_FUNCTIONS)
  private GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig blockingFunctions;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private GoogleCloudIdentitytoolkitAdminV2ClientConfig client;

  public static final String SERIALIZED_NAME_EMAIL_PRIVACY_CONFIG = "emailPrivacyConfig";
  @SerializedName(SERIALIZED_NAME_EMAIL_PRIVACY_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig;

  public static final String SERIALIZED_NAME_MFA = "mfa";
  @SerializedName(SERIALIZED_NAME_MFA)
  private GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfa;

  public static final String SERIALIZED_NAME_MONITORING = "monitoring";
  @SerializedName(SERIALIZED_NAME_MONITORING)
  private GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring;

  public static final String SERIALIZED_NAME_MULTI_TENANT = "multiTenant";
  @SerializedName(SERIALIZED_NAME_MULTI_TENANT)
  private GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig multiTenant;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NOTIFICATION = "notification";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION)
  private GoogleCloudIdentitytoolkitAdminV2NotificationConfig notification;

  public static final String SERIALIZED_NAME_PASSWORD_POLICY_CONFIG = "passwordPolicyConfig";
  @SerializedName(SERIALIZED_NAME_PASSWORD_POLICY_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig passwordPolicyConfig;

  public static final String SERIALIZED_NAME_QUOTA = "quota";
  @SerializedName(SERIALIZED_NAME_QUOTA)
  private GoogleCloudIdentitytoolkitAdminV2QuotaConfig quota;

  public static final String SERIALIZED_NAME_RECAPTCHA_CONFIG = "recaptchaConfig";
  @SerializedName(SERIALIZED_NAME_RECAPTCHA_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig recaptchaConfig;

  public static final String SERIALIZED_NAME_SIGN_IN = "signIn";
  @SerializedName(SERIALIZED_NAME_SIGN_IN)
  private GoogleCloudIdentitytoolkitAdminV2SignInConfig signIn;

  public static final String SERIALIZED_NAME_SMS_REGION_CONFIG = "smsRegionConfig";
  @SerializedName(SERIALIZED_NAME_SMS_REGION_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig;

  /**
   * Output only. The subtype of this config.
   */
  @JsonAdapter(SubtypeEnum.Adapter.class)
  public enum SubtypeEnum {
    SUBTYPE_UNSPECIFIED("SUBTYPE_UNSPECIFIED"),
    
    IDENTITY_PLATFORM("IDENTITY_PLATFORM"),
    
    FIREBASE_AUTH("FIREBASE_AUTH");

    private String value;

    SubtypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SubtypeEnum fromValue(String value) {
      for (SubtypeEnum b : SubtypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SubtypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubtypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SubtypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SubtypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SubtypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUBTYPE = "subtype";
  @SerializedName(SERIALIZED_NAME_SUBTYPE)
  private SubtypeEnum subtype;

  public GoogleCloudIdentitytoolkitAdminV2Config() {
  }

  public GoogleCloudIdentitytoolkitAdminV2Config(
     String name, 
     SubtypeEnum subtype
  ) {
    this();
    this.name = name;
    this.subtype = subtype;
  }

  public GoogleCloudIdentitytoolkitAdminV2Config authorizedDomains(List<String> authorizedDomains) {
    this.authorizedDomains = authorizedDomains;
    return this;
  }

  public GoogleCloudIdentitytoolkitAdminV2Config addAuthorizedDomainsItem(String authorizedDomainsItem) {
    if (this.authorizedDomains == null) {
      this.authorizedDomains = new ArrayList<>();
    }
    this.authorizedDomains.add(authorizedDomainsItem);
    return this;
  }

  /**
   * List of domains authorized for OAuth redirects
   * @return authorizedDomains
   */
  @javax.annotation.Nullable
  public List<String> getAuthorizedDomains() {
    return authorizedDomains;
  }

  public void setAuthorizedDomains(List<String> authorizedDomains) {
    this.authorizedDomains = authorizedDomains;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config autodeleteAnonymousUsers(Boolean autodeleteAnonymousUsers) {
    this.autodeleteAnonymousUsers = autodeleteAnonymousUsers;
    return this;
  }

  /**
   * Whether anonymous users will be auto-deleted after a period of 30 days.
   * @return autodeleteAnonymousUsers
   */
  @javax.annotation.Nullable
  public Boolean getAutodeleteAnonymousUsers() {
    return autodeleteAnonymousUsers;
  }

  public void setAutodeleteAnonymousUsers(Boolean autodeleteAnonymousUsers) {
    this.autodeleteAnonymousUsers = autodeleteAnonymousUsers;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config blockingFunctions(GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig blockingFunctions) {
    this.blockingFunctions = blockingFunctions;
    return this;
  }

  /**
   * Get blockingFunctions
   * @return blockingFunctions
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig getBlockingFunctions() {
    return blockingFunctions;
  }

  public void setBlockingFunctions(GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig blockingFunctions) {
    this.blockingFunctions = blockingFunctions;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config client(GoogleCloudIdentitytoolkitAdminV2ClientConfig client) {
    this.client = client;
    return this;
  }

  /**
   * Get client
   * @return client
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2ClientConfig getClient() {
    return client;
  }

  public void setClient(GoogleCloudIdentitytoolkitAdminV2ClientConfig client) {
    this.client = client;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config emailPrivacyConfig(GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig) {
    this.emailPrivacyConfig = emailPrivacyConfig;
    return this;
  }

  /**
   * Get emailPrivacyConfig
   * @return emailPrivacyConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig getEmailPrivacyConfig() {
    return emailPrivacyConfig;
  }

  public void setEmailPrivacyConfig(GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig) {
    this.emailPrivacyConfig = emailPrivacyConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config mfa(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfa) {
    this.mfa = mfa;
    return this;
  }

  /**
   * Get mfa
   * @return mfa
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig getMfa() {
    return mfa;
  }

  public void setMfa(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfa) {
    this.mfa = mfa;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config monitoring(GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring) {
    this.monitoring = monitoring;
    return this;
  }

  /**
   * Get monitoring
   * @return monitoring
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2MonitoringConfig getMonitoring() {
    return monitoring;
  }

  public void setMonitoring(GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring) {
    this.monitoring = monitoring;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config multiTenant(GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig multiTenant) {
    this.multiTenant = multiTenant;
    return this;
  }

  /**
   * Get multiTenant
   * @return multiTenant
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig getMultiTenant() {
    return multiTenant;
  }

  public void setMultiTenant(GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig multiTenant) {
    this.multiTenant = multiTenant;
  }


  /**
   * Output only. The name of the Config resource. Example: \&quot;projects/my-awesome-project/config\&quot;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudIdentitytoolkitAdminV2Config notification(GoogleCloudIdentitytoolkitAdminV2NotificationConfig notification) {
    this.notification = notification;
    return this;
  }

  /**
   * Get notification
   * @return notification
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2NotificationConfig getNotification() {
    return notification;
  }

  public void setNotification(GoogleCloudIdentitytoolkitAdminV2NotificationConfig notification) {
    this.notification = notification;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config passwordPolicyConfig(GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig passwordPolicyConfig) {
    this.passwordPolicyConfig = passwordPolicyConfig;
    return this;
  }

  /**
   * Get passwordPolicyConfig
   * @return passwordPolicyConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig getPasswordPolicyConfig() {
    return passwordPolicyConfig;
  }

  public void setPasswordPolicyConfig(GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig passwordPolicyConfig) {
    this.passwordPolicyConfig = passwordPolicyConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config quota(GoogleCloudIdentitytoolkitAdminV2QuotaConfig quota) {
    this.quota = quota;
    return this;
  }

  /**
   * Get quota
   * @return quota
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2QuotaConfig getQuota() {
    return quota;
  }

  public void setQuota(GoogleCloudIdentitytoolkitAdminV2QuotaConfig quota) {
    this.quota = quota;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config recaptchaConfig(GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig recaptchaConfig) {
    this.recaptchaConfig = recaptchaConfig;
    return this;
  }

  /**
   * Get recaptchaConfig
   * @return recaptchaConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig getRecaptchaConfig() {
    return recaptchaConfig;
  }

  public void setRecaptchaConfig(GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig recaptchaConfig) {
    this.recaptchaConfig = recaptchaConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config signIn(GoogleCloudIdentitytoolkitAdminV2SignInConfig signIn) {
    this.signIn = signIn;
    return this;
  }

  /**
   * Get signIn
   * @return signIn
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2SignInConfig getSignIn() {
    return signIn;
  }

  public void setSignIn(GoogleCloudIdentitytoolkitAdminV2SignInConfig signIn) {
    this.signIn = signIn;
  }


  public GoogleCloudIdentitytoolkitAdminV2Config smsRegionConfig(GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig) {
    this.smsRegionConfig = smsRegionConfig;
    return this;
  }

  /**
   * Get smsRegionConfig
   * @return smsRegionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig getSmsRegionConfig() {
    return smsRegionConfig;
  }

  public void setSmsRegionConfig(GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig) {
    this.smsRegionConfig = smsRegionConfig;
  }


  /**
   * Output only. The subtype of this config.
   * @return subtype
   */
  @javax.annotation.Nullable
  public SubtypeEnum getSubtype() {
    return subtype;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudIdentitytoolkitAdminV2Config googleCloudIdentitytoolkitAdminV2Config = (GoogleCloudIdentitytoolkitAdminV2Config) o;
    return Objects.equals(this.authorizedDomains, googleCloudIdentitytoolkitAdminV2Config.authorizedDomains) &&
        Objects.equals(this.autodeleteAnonymousUsers, googleCloudIdentitytoolkitAdminV2Config.autodeleteAnonymousUsers) &&
        Objects.equals(this.blockingFunctions, googleCloudIdentitytoolkitAdminV2Config.blockingFunctions) &&
        Objects.equals(this.client, googleCloudIdentitytoolkitAdminV2Config.client) &&
        Objects.equals(this.emailPrivacyConfig, googleCloudIdentitytoolkitAdminV2Config.emailPrivacyConfig) &&
        Objects.equals(this.mfa, googleCloudIdentitytoolkitAdminV2Config.mfa) &&
        Objects.equals(this.monitoring, googleCloudIdentitytoolkitAdminV2Config.monitoring) &&
        Objects.equals(this.multiTenant, googleCloudIdentitytoolkitAdminV2Config.multiTenant) &&
        Objects.equals(this.name, googleCloudIdentitytoolkitAdminV2Config.name) &&
        Objects.equals(this.notification, googleCloudIdentitytoolkitAdminV2Config.notification) &&
        Objects.equals(this.passwordPolicyConfig, googleCloudIdentitytoolkitAdminV2Config.passwordPolicyConfig) &&
        Objects.equals(this.quota, googleCloudIdentitytoolkitAdminV2Config.quota) &&
        Objects.equals(this.recaptchaConfig, googleCloudIdentitytoolkitAdminV2Config.recaptchaConfig) &&
        Objects.equals(this.signIn, googleCloudIdentitytoolkitAdminV2Config.signIn) &&
        Objects.equals(this.smsRegionConfig, googleCloudIdentitytoolkitAdminV2Config.smsRegionConfig) &&
        Objects.equals(this.subtype, googleCloudIdentitytoolkitAdminV2Config.subtype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizedDomains, autodeleteAnonymousUsers, blockingFunctions, client, emailPrivacyConfig, mfa, monitoring, multiTenant, name, notification, passwordPolicyConfig, quota, recaptchaConfig, signIn, smsRegionConfig, subtype);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudIdentitytoolkitAdminV2Config {\n");
    sb.append("    authorizedDomains: ").append(toIndentedString(authorizedDomains)).append("\n");
    sb.append("    autodeleteAnonymousUsers: ").append(toIndentedString(autodeleteAnonymousUsers)).append("\n");
    sb.append("    blockingFunctions: ").append(toIndentedString(blockingFunctions)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    emailPrivacyConfig: ").append(toIndentedString(emailPrivacyConfig)).append("\n");
    sb.append("    mfa: ").append(toIndentedString(mfa)).append("\n");
    sb.append("    monitoring: ").append(toIndentedString(monitoring)).append("\n");
    sb.append("    multiTenant: ").append(toIndentedString(multiTenant)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    passwordPolicyConfig: ").append(toIndentedString(passwordPolicyConfig)).append("\n");
    sb.append("    quota: ").append(toIndentedString(quota)).append("\n");
    sb.append("    recaptchaConfig: ").append(toIndentedString(recaptchaConfig)).append("\n");
    sb.append("    signIn: ").append(toIndentedString(signIn)).append("\n");
    sb.append("    smsRegionConfig: ").append(toIndentedString(smsRegionConfig)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authorizedDomains");
    openapiFields.add("autodeleteAnonymousUsers");
    openapiFields.add("blockingFunctions");
    openapiFields.add("client");
    openapiFields.add("emailPrivacyConfig");
    openapiFields.add("mfa");
    openapiFields.add("monitoring");
    openapiFields.add("multiTenant");
    openapiFields.add("name");
    openapiFields.add("notification");
    openapiFields.add("passwordPolicyConfig");
    openapiFields.add("quota");
    openapiFields.add("recaptchaConfig");
    openapiFields.add("signIn");
    openapiFields.add("smsRegionConfig");
    openapiFields.add("subtype");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudIdentitytoolkitAdminV2Config
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudIdentitytoolkitAdminV2Config.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudIdentitytoolkitAdminV2Config is not found in the empty JSON string", GoogleCloudIdentitytoolkitAdminV2Config.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudIdentitytoolkitAdminV2Config.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudIdentitytoolkitAdminV2Config` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("authorizedDomains") != null && !jsonObj.get("authorizedDomains").isJsonNull() && !jsonObj.get("authorizedDomains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedDomains` to be an array in the JSON string but got `%s`", jsonObj.get("authorizedDomains").toString()));
      }
      // validate the optional field `blockingFunctions`
      if (jsonObj.get("blockingFunctions") != null && !jsonObj.get("blockingFunctions").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2BlockingFunctionsConfig.validateJsonElement(jsonObj.get("blockingFunctions"));
      }
      // validate the optional field `client`
      if (jsonObj.get("client") != null && !jsonObj.get("client").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2ClientConfig.validateJsonElement(jsonObj.get("client"));
      }
      // validate the optional field `emailPrivacyConfig`
      if (jsonObj.get("emailPrivacyConfig") != null && !jsonObj.get("emailPrivacyConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig.validateJsonElement(jsonObj.get("emailPrivacyConfig"));
      }
      // validate the optional field `mfa`
      if (jsonObj.get("mfa") != null && !jsonObj.get("mfa").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.validateJsonElement(jsonObj.get("mfa"));
      }
      // validate the optional field `monitoring`
      if (jsonObj.get("monitoring") != null && !jsonObj.get("monitoring").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2MonitoringConfig.validateJsonElement(jsonObj.get("monitoring"));
      }
      // validate the optional field `multiTenant`
      if (jsonObj.get("multiTenant") != null && !jsonObj.get("multiTenant").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2MultiTenantConfig.validateJsonElement(jsonObj.get("multiTenant"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `notification`
      if (jsonObj.get("notification") != null && !jsonObj.get("notification").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2NotificationConfig.validateJsonElement(jsonObj.get("notification"));
      }
      // validate the optional field `passwordPolicyConfig`
      if (jsonObj.get("passwordPolicyConfig") != null && !jsonObj.get("passwordPolicyConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.validateJsonElement(jsonObj.get("passwordPolicyConfig"));
      }
      // validate the optional field `quota`
      if (jsonObj.get("quota") != null && !jsonObj.get("quota").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2QuotaConfig.validateJsonElement(jsonObj.get("quota"));
      }
      // validate the optional field `recaptchaConfig`
      if (jsonObj.get("recaptchaConfig") != null && !jsonObj.get("recaptchaConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig.validateJsonElement(jsonObj.get("recaptchaConfig"));
      }
      // validate the optional field `signIn`
      if (jsonObj.get("signIn") != null && !jsonObj.get("signIn").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2SignInConfig.validateJsonElement(jsonObj.get("signIn"));
      }
      // validate the optional field `smsRegionConfig`
      if (jsonObj.get("smsRegionConfig") != null && !jsonObj.get("smsRegionConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig.validateJsonElement(jsonObj.get("smsRegionConfig"));
      }
      if ((jsonObj.get("subtype") != null && !jsonObj.get("subtype").isJsonNull()) && !jsonObj.get("subtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtype").toString()));
      }
      // validate the optional field `subtype`
      if (jsonObj.get("subtype") != null && !jsonObj.get("subtype").isJsonNull()) {
        SubtypeEnum.validateJsonElement(jsonObj.get("subtype"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudIdentitytoolkitAdminV2Config.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudIdentitytoolkitAdminV2Config' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudIdentitytoolkitAdminV2Config> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudIdentitytoolkitAdminV2Config.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudIdentitytoolkitAdminV2Config>() {
           @Override
           public void write(JsonWriter out, GoogleCloudIdentitytoolkitAdminV2Config value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudIdentitytoolkitAdminV2Config read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudIdentitytoolkitAdminV2Config given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudIdentitytoolkitAdminV2Config
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudIdentitytoolkitAdminV2Config
   */
  public static GoogleCloudIdentitytoolkitAdminV2Config fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudIdentitytoolkitAdminV2Config.class);
  }

  /**
   * Convert an instance of GoogleCloudIdentitytoolkitAdminV2Config to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

