/*
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2HashConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2Inheritance;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2MonitoringConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig;
import org.openapitools.client.model.GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A Tenant contains configuration for the tenant in a multi-tenant project.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:31.846413-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudIdentitytoolkitAdminV2Tenant {
  public static final String SERIALIZED_NAME_ALLOW_PASSWORD_SIGNUP = "allowPasswordSignup";
  @SerializedName(SERIALIZED_NAME_ALLOW_PASSWORD_SIGNUP)
  private Boolean allowPasswordSignup;

  public static final String SERIALIZED_NAME_AUTODELETE_ANONYMOUS_USERS = "autodeleteAnonymousUsers";
  @SerializedName(SERIALIZED_NAME_AUTODELETE_ANONYMOUS_USERS)
  private Boolean autodeleteAnonymousUsers;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig client;

  public static final String SERIALIZED_NAME_DISABLE_AUTH = "disableAuth";
  @SerializedName(SERIALIZED_NAME_DISABLE_AUTH)
  private Boolean disableAuth;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EMAIL_PRIVACY_CONFIG = "emailPrivacyConfig";
  @SerializedName(SERIALIZED_NAME_EMAIL_PRIVACY_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig;

  public static final String SERIALIZED_NAME_ENABLE_ANONYMOUS_USER = "enableAnonymousUser";
  @SerializedName(SERIALIZED_NAME_ENABLE_ANONYMOUS_USER)
  private Boolean enableAnonymousUser;

  public static final String SERIALIZED_NAME_ENABLE_EMAIL_LINK_SIGNIN = "enableEmailLinkSignin";
  @SerializedName(SERIALIZED_NAME_ENABLE_EMAIL_LINK_SIGNIN)
  private Boolean enableEmailLinkSignin;

  public static final String SERIALIZED_NAME_HASH_CONFIG = "hashConfig";
  @SerializedName(SERIALIZED_NAME_HASH_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2HashConfig hashConfig;

  public static final String SERIALIZED_NAME_INHERITANCE = "inheritance";
  @SerializedName(SERIALIZED_NAME_INHERITANCE)
  private GoogleCloudIdentitytoolkitAdminV2Inheritance inheritance;

  public static final String SERIALIZED_NAME_MFA_CONFIG = "mfaConfig";
  @SerializedName(SERIALIZED_NAME_MFA_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfaConfig;

  public static final String SERIALIZED_NAME_MONITORING = "monitoring";
  @SerializedName(SERIALIZED_NAME_MONITORING)
  private GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PASSWORD_POLICY_CONFIG = "passwordPolicyConfig";
  @SerializedName(SERIALIZED_NAME_PASSWORD_POLICY_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig passwordPolicyConfig;

  public static final String SERIALIZED_NAME_RECAPTCHA_CONFIG = "recaptchaConfig";
  @SerializedName(SERIALIZED_NAME_RECAPTCHA_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig recaptchaConfig;

  public static final String SERIALIZED_NAME_SMS_REGION_CONFIG = "smsRegionConfig";
  @SerializedName(SERIALIZED_NAME_SMS_REGION_CONFIG)
  private GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig;

  public static final String SERIALIZED_NAME_TEST_PHONE_NUMBERS = "testPhoneNumbers";
  @SerializedName(SERIALIZED_NAME_TEST_PHONE_NUMBERS)
  private Map<String, String> testPhoneNumbers = new HashMap<>();

  public GoogleCloudIdentitytoolkitAdminV2Tenant() {
  }

  public GoogleCloudIdentitytoolkitAdminV2Tenant(
     String name
  ) {
    this();
    this.name = name;
  }

  public GoogleCloudIdentitytoolkitAdminV2Tenant allowPasswordSignup(Boolean allowPasswordSignup) {
    this.allowPasswordSignup = allowPasswordSignup;
    return this;
  }

  /**
   * Whether to allow email/password user authentication.
   * @return allowPasswordSignup
   */
  @javax.annotation.Nullable
  public Boolean getAllowPasswordSignup() {
    return allowPasswordSignup;
  }

  public void setAllowPasswordSignup(Boolean allowPasswordSignup) {
    this.allowPasswordSignup = allowPasswordSignup;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant autodeleteAnonymousUsers(Boolean autodeleteAnonymousUsers) {
    this.autodeleteAnonymousUsers = autodeleteAnonymousUsers;
    return this;
  }

  /**
   * Whether anonymous users will be auto-deleted after a period of 30 days.
   * @return autodeleteAnonymousUsers
   */
  @javax.annotation.Nullable
  public Boolean getAutodeleteAnonymousUsers() {
    return autodeleteAnonymousUsers;
  }

  public void setAutodeleteAnonymousUsers(Boolean autodeleteAnonymousUsers) {
    this.autodeleteAnonymousUsers = autodeleteAnonymousUsers;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant client(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig client) {
    this.client = client;
    return this;
  }

  /**
   * Get client
   * @return client
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig getClient() {
    return client;
  }

  public void setClient(GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig client) {
    this.client = client;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant disableAuth(Boolean disableAuth) {
    this.disableAuth = disableAuth;
    return this;
  }

  /**
   * Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.
   * @return disableAuth
   */
  @javax.annotation.Nullable
  public Boolean getDisableAuth() {
    return disableAuth;
  }

  public void setDisableAuth(Boolean disableAuth) {
    this.disableAuth = disableAuth;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Display name of the tenant.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant emailPrivacyConfig(GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig) {
    this.emailPrivacyConfig = emailPrivacyConfig;
    return this;
  }

  /**
   * Get emailPrivacyConfig
   * @return emailPrivacyConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig getEmailPrivacyConfig() {
    return emailPrivacyConfig;
  }

  public void setEmailPrivacyConfig(GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig emailPrivacyConfig) {
    this.emailPrivacyConfig = emailPrivacyConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant enableAnonymousUser(Boolean enableAnonymousUser) {
    this.enableAnonymousUser = enableAnonymousUser;
    return this;
  }

  /**
   * Whether to enable anonymous user authentication.
   * @return enableAnonymousUser
   */
  @javax.annotation.Nullable
  public Boolean getEnableAnonymousUser() {
    return enableAnonymousUser;
  }

  public void setEnableAnonymousUser(Boolean enableAnonymousUser) {
    this.enableAnonymousUser = enableAnonymousUser;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant enableEmailLinkSignin(Boolean enableEmailLinkSignin) {
    this.enableEmailLinkSignin = enableEmailLinkSignin;
    return this;
  }

  /**
   * Whether to enable email link user authentication.
   * @return enableEmailLinkSignin
   */
  @javax.annotation.Nullable
  public Boolean getEnableEmailLinkSignin() {
    return enableEmailLinkSignin;
  }

  public void setEnableEmailLinkSignin(Boolean enableEmailLinkSignin) {
    this.enableEmailLinkSignin = enableEmailLinkSignin;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant hashConfig(GoogleCloudIdentitytoolkitAdminV2HashConfig hashConfig) {
    this.hashConfig = hashConfig;
    return this;
  }

  /**
   * Get hashConfig
   * @return hashConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2HashConfig getHashConfig() {
    return hashConfig;
  }

  public void setHashConfig(GoogleCloudIdentitytoolkitAdminV2HashConfig hashConfig) {
    this.hashConfig = hashConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant inheritance(GoogleCloudIdentitytoolkitAdminV2Inheritance inheritance) {
    this.inheritance = inheritance;
    return this;
  }

  /**
   * Get inheritance
   * @return inheritance
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2Inheritance getInheritance() {
    return inheritance;
  }

  public void setInheritance(GoogleCloudIdentitytoolkitAdminV2Inheritance inheritance) {
    this.inheritance = inheritance;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant mfaConfig(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfaConfig) {
    this.mfaConfig = mfaConfig;
    return this;
  }

  /**
   * Get mfaConfig
   * @return mfaConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig getMfaConfig() {
    return mfaConfig;
  }

  public void setMfaConfig(GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig mfaConfig) {
    this.mfaConfig = mfaConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant monitoring(GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring) {
    this.monitoring = monitoring;
    return this;
  }

  /**
   * Get monitoring
   * @return monitoring
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2MonitoringConfig getMonitoring() {
    return monitoring;
  }

  public void setMonitoring(GoogleCloudIdentitytoolkitAdminV2MonitoringConfig monitoring) {
    this.monitoring = monitoring;
  }


  /**
   * Output only. Resource name of a tenant. For example: \&quot;projects/{project-id}/tenants/{tenant-id}\&quot;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudIdentitytoolkitAdminV2Tenant passwordPolicyConfig(GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig passwordPolicyConfig) {
    this.passwordPolicyConfig = passwordPolicyConfig;
    return this;
  }

  /**
   * Get passwordPolicyConfig
   * @return passwordPolicyConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig getPasswordPolicyConfig() {
    return passwordPolicyConfig;
  }

  public void setPasswordPolicyConfig(GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig passwordPolicyConfig) {
    this.passwordPolicyConfig = passwordPolicyConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant recaptchaConfig(GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig recaptchaConfig) {
    this.recaptchaConfig = recaptchaConfig;
    return this;
  }

  /**
   * Get recaptchaConfig
   * @return recaptchaConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig getRecaptchaConfig() {
    return recaptchaConfig;
  }

  public void setRecaptchaConfig(GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig recaptchaConfig) {
    this.recaptchaConfig = recaptchaConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant smsRegionConfig(GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig) {
    this.smsRegionConfig = smsRegionConfig;
    return this;
  }

  /**
   * Get smsRegionConfig
   * @return smsRegionConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig getSmsRegionConfig() {
    return smsRegionConfig;
  }

  public void setSmsRegionConfig(GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig smsRegionConfig) {
    this.smsRegionConfig = smsRegionConfig;
  }


  public GoogleCloudIdentitytoolkitAdminV2Tenant testPhoneNumbers(Map<String, String> testPhoneNumbers) {
    this.testPhoneNumbers = testPhoneNumbers;
    return this;
  }

  public GoogleCloudIdentitytoolkitAdminV2Tenant putTestPhoneNumbersItem(String key, String testPhoneNumbersItem) {
    if (this.testPhoneNumbers == null) {
      this.testPhoneNumbers = new HashMap<>();
    }
    this.testPhoneNumbers.put(key, testPhoneNumbersItem);
    return this;
  }

  /**
   * A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).
   * @return testPhoneNumbers
   */
  @javax.annotation.Nullable
  public Map<String, String> getTestPhoneNumbers() {
    return testPhoneNumbers;
  }

  public void setTestPhoneNumbers(Map<String, String> testPhoneNumbers) {
    this.testPhoneNumbers = testPhoneNumbers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudIdentitytoolkitAdminV2Tenant googleCloudIdentitytoolkitAdminV2Tenant = (GoogleCloudIdentitytoolkitAdminV2Tenant) o;
    return Objects.equals(this.allowPasswordSignup, googleCloudIdentitytoolkitAdminV2Tenant.allowPasswordSignup) &&
        Objects.equals(this.autodeleteAnonymousUsers, googleCloudIdentitytoolkitAdminV2Tenant.autodeleteAnonymousUsers) &&
        Objects.equals(this.client, googleCloudIdentitytoolkitAdminV2Tenant.client) &&
        Objects.equals(this.disableAuth, googleCloudIdentitytoolkitAdminV2Tenant.disableAuth) &&
        Objects.equals(this.displayName, googleCloudIdentitytoolkitAdminV2Tenant.displayName) &&
        Objects.equals(this.emailPrivacyConfig, googleCloudIdentitytoolkitAdminV2Tenant.emailPrivacyConfig) &&
        Objects.equals(this.enableAnonymousUser, googleCloudIdentitytoolkitAdminV2Tenant.enableAnonymousUser) &&
        Objects.equals(this.enableEmailLinkSignin, googleCloudIdentitytoolkitAdminV2Tenant.enableEmailLinkSignin) &&
        Objects.equals(this.hashConfig, googleCloudIdentitytoolkitAdminV2Tenant.hashConfig) &&
        Objects.equals(this.inheritance, googleCloudIdentitytoolkitAdminV2Tenant.inheritance) &&
        Objects.equals(this.mfaConfig, googleCloudIdentitytoolkitAdminV2Tenant.mfaConfig) &&
        Objects.equals(this.monitoring, googleCloudIdentitytoolkitAdminV2Tenant.monitoring) &&
        Objects.equals(this.name, googleCloudIdentitytoolkitAdminV2Tenant.name) &&
        Objects.equals(this.passwordPolicyConfig, googleCloudIdentitytoolkitAdminV2Tenant.passwordPolicyConfig) &&
        Objects.equals(this.recaptchaConfig, googleCloudIdentitytoolkitAdminV2Tenant.recaptchaConfig) &&
        Objects.equals(this.smsRegionConfig, googleCloudIdentitytoolkitAdminV2Tenant.smsRegionConfig) &&
        Objects.equals(this.testPhoneNumbers, googleCloudIdentitytoolkitAdminV2Tenant.testPhoneNumbers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowPasswordSignup, autodeleteAnonymousUsers, client, disableAuth, displayName, emailPrivacyConfig, enableAnonymousUser, enableEmailLinkSignin, hashConfig, inheritance, mfaConfig, monitoring, name, passwordPolicyConfig, recaptchaConfig, smsRegionConfig, testPhoneNumbers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudIdentitytoolkitAdminV2Tenant {\n");
    sb.append("    allowPasswordSignup: ").append(toIndentedString(allowPasswordSignup)).append("\n");
    sb.append("    autodeleteAnonymousUsers: ").append(toIndentedString(autodeleteAnonymousUsers)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    disableAuth: ").append(toIndentedString(disableAuth)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    emailPrivacyConfig: ").append(toIndentedString(emailPrivacyConfig)).append("\n");
    sb.append("    enableAnonymousUser: ").append(toIndentedString(enableAnonymousUser)).append("\n");
    sb.append("    enableEmailLinkSignin: ").append(toIndentedString(enableEmailLinkSignin)).append("\n");
    sb.append("    hashConfig: ").append(toIndentedString(hashConfig)).append("\n");
    sb.append("    inheritance: ").append(toIndentedString(inheritance)).append("\n");
    sb.append("    mfaConfig: ").append(toIndentedString(mfaConfig)).append("\n");
    sb.append("    monitoring: ").append(toIndentedString(monitoring)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    passwordPolicyConfig: ").append(toIndentedString(passwordPolicyConfig)).append("\n");
    sb.append("    recaptchaConfig: ").append(toIndentedString(recaptchaConfig)).append("\n");
    sb.append("    smsRegionConfig: ").append(toIndentedString(smsRegionConfig)).append("\n");
    sb.append("    testPhoneNumbers: ").append(toIndentedString(testPhoneNumbers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowPasswordSignup");
    openapiFields.add("autodeleteAnonymousUsers");
    openapiFields.add("client");
    openapiFields.add("disableAuth");
    openapiFields.add("displayName");
    openapiFields.add("emailPrivacyConfig");
    openapiFields.add("enableAnonymousUser");
    openapiFields.add("enableEmailLinkSignin");
    openapiFields.add("hashConfig");
    openapiFields.add("inheritance");
    openapiFields.add("mfaConfig");
    openapiFields.add("monitoring");
    openapiFields.add("name");
    openapiFields.add("passwordPolicyConfig");
    openapiFields.add("recaptchaConfig");
    openapiFields.add("smsRegionConfig");
    openapiFields.add("testPhoneNumbers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudIdentitytoolkitAdminV2Tenant
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudIdentitytoolkitAdminV2Tenant.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudIdentitytoolkitAdminV2Tenant is not found in the empty JSON string", GoogleCloudIdentitytoolkitAdminV2Tenant.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudIdentitytoolkitAdminV2Tenant.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudIdentitytoolkitAdminV2Tenant` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `client`
      if (jsonObj.get("client") != null && !jsonObj.get("client").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig.validateJsonElement(jsonObj.get("client"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `emailPrivacyConfig`
      if (jsonObj.get("emailPrivacyConfig") != null && !jsonObj.get("emailPrivacyConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig.validateJsonElement(jsonObj.get("emailPrivacyConfig"));
      }
      // validate the optional field `hashConfig`
      if (jsonObj.get("hashConfig") != null && !jsonObj.get("hashConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2HashConfig.validateJsonElement(jsonObj.get("hashConfig"));
      }
      // validate the optional field `inheritance`
      if (jsonObj.get("inheritance") != null && !jsonObj.get("inheritance").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2Inheritance.validateJsonElement(jsonObj.get("inheritance"));
      }
      // validate the optional field `mfaConfig`
      if (jsonObj.get("mfaConfig") != null && !jsonObj.get("mfaConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig.validateJsonElement(jsonObj.get("mfaConfig"));
      }
      // validate the optional field `monitoring`
      if (jsonObj.get("monitoring") != null && !jsonObj.get("monitoring").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2MonitoringConfig.validateJsonElement(jsonObj.get("monitoring"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `passwordPolicyConfig`
      if (jsonObj.get("passwordPolicyConfig") != null && !jsonObj.get("passwordPolicyConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig.validateJsonElement(jsonObj.get("passwordPolicyConfig"));
      }
      // validate the optional field `recaptchaConfig`
      if (jsonObj.get("recaptchaConfig") != null && !jsonObj.get("recaptchaConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig.validateJsonElement(jsonObj.get("recaptchaConfig"));
      }
      // validate the optional field `smsRegionConfig`
      if (jsonObj.get("smsRegionConfig") != null && !jsonObj.get("smsRegionConfig").isJsonNull()) {
        GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig.validateJsonElement(jsonObj.get("smsRegionConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudIdentitytoolkitAdminV2Tenant.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudIdentitytoolkitAdminV2Tenant' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudIdentitytoolkitAdminV2Tenant> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudIdentitytoolkitAdminV2Tenant.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudIdentitytoolkitAdminV2Tenant>() {
           @Override
           public void write(JsonWriter out, GoogleCloudIdentitytoolkitAdminV2Tenant value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudIdentitytoolkitAdminV2Tenant read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudIdentitytoolkitAdminV2Tenant given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudIdentitytoolkitAdminV2Tenant
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudIdentitytoolkitAdminV2Tenant
   */
  public static GoogleCloudIdentitytoolkitAdminV2Tenant fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudIdentitytoolkitAdminV2Tenant.class);
  }

  /**
   * Convert an instance of GoogleCloudIdentitytoolkitAdminV2Tenant to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

