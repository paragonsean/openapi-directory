/*
 * Identity Toolkit API
 * The Google Identity Toolkit API lets you use open standards to verify a user's identity.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Phone Verification info for a FinalizeMfa response.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:31.846413-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo {
  public static final String SERIALIZED_NAME_ANDROID_VERIFICATION_PROOF = "androidVerificationProof";
  @SerializedName(SERIALIZED_NAME_ANDROID_VERIFICATION_PROOF)
  private String androidVerificationProof;

  public static final String SERIALIZED_NAME_ANDROID_VERIFICATION_PROOF_EXPIRE_TIME = "androidVerificationProofExpireTime";
  @SerializedName(SERIALIZED_NAME_ANDROID_VERIFICATION_PROOF_EXPIRE_TIME)
  private String androidVerificationProofExpireTime;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo() {
  }

  public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo androidVerificationProof(String androidVerificationProof) {
    this.androidVerificationProof = androidVerificationProof;
    return this;
  }

  /**
   * Android only. Long-lived replacement for valid code tied to android device.
   * @return androidVerificationProof
   */
  @javax.annotation.Nullable
  public String getAndroidVerificationProof() {
    return androidVerificationProof;
  }

  public void setAndroidVerificationProof(String androidVerificationProof) {
    this.androidVerificationProof = androidVerificationProof;
  }


  public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo androidVerificationProofExpireTime(String androidVerificationProofExpireTime) {
    this.androidVerificationProofExpireTime = androidVerificationProofExpireTime;
    return this;
  }

  /**
   * Android only. Expiration time of verification proof in seconds.
   * @return androidVerificationProofExpireTime
   */
  @javax.annotation.Nullable
  public String getAndroidVerificationProofExpireTime() {
    return androidVerificationProofExpireTime;
  }

  public void setAndroidVerificationProofExpireTime(String androidVerificationProofExpireTime) {
    this.androidVerificationProofExpireTime = androidVerificationProofExpireTime;
  }


  public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * For Android verification proof.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo googleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo = (GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo) o;
    return Objects.equals(this.androidVerificationProof, googleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.androidVerificationProof) &&
        Objects.equals(this.androidVerificationProofExpireTime, googleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.androidVerificationProofExpireTime) &&
        Objects.equals(this.phoneNumber, googleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.phoneNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(androidVerificationProof, androidVerificationProofExpireTime, phoneNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo {\n");
    sb.append("    androidVerificationProof: ").append(toIndentedString(androidVerificationProof)).append("\n");
    sb.append("    androidVerificationProofExpireTime: ").append(toIndentedString(androidVerificationProofExpireTime)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("androidVerificationProof");
    openapiFields.add("androidVerificationProofExpireTime");
    openapiFields.add("phoneNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo is not found in the empty JSON string", GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("androidVerificationProof") != null && !jsonObj.get("androidVerificationProof").isJsonNull()) && !jsonObj.get("androidVerificationProof").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `androidVerificationProof` to be a primitive type in the JSON string but got `%s`", jsonObj.get("androidVerificationProof").toString()));
      }
      if ((jsonObj.get("androidVerificationProofExpireTime") != null && !jsonObj.get("androidVerificationProofExpireTime").isJsonNull()) && !jsonObj.get("androidVerificationProofExpireTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `androidVerificationProofExpireTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("androidVerificationProofExpireTime").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo>() {
           @Override
           public void write(JsonWriter out, GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo
   */
  public static GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo.class);
  }

  /**
   * Convert an instance of GoogleCloudIdentitytoolkitV2FinalizeMfaPhoneResponseInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

