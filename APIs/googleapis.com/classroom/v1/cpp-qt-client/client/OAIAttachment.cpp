/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttachment::OAIAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttachment::OAIAttachment() {
    this->initializeModel();
}

OAIAttachment::~OAIAttachment() {}

void OAIAttachment::initializeModel() {

    m_drive_file_isSet = false;
    m_drive_file_isValid = false;

    m_form_isSet = false;
    m_form_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_you_tube_video_isSet = false;
    m_you_tube_video_isValid = false;
}

void OAIAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttachment::fromJsonObject(QJsonObject json) {

    m_drive_file_isValid = ::OpenAPI::fromJsonValue(m_drive_file, json[QString("driveFile")]);
    m_drive_file_isSet = !json[QString("driveFile")].isNull() && m_drive_file_isValid;

    m_form_isValid = ::OpenAPI::fromJsonValue(m_form, json[QString("form")]);
    m_form_isSet = !json[QString("form")].isNull() && m_form_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_you_tube_video_isValid = ::OpenAPI::fromJsonValue(m_you_tube_video, json[QString("youTubeVideo")]);
    m_you_tube_video_isSet = !json[QString("youTubeVideo")].isNull() && m_you_tube_video_isValid;
}

QString OAIAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_drive_file.isSet()) {
        obj.insert(QString("driveFile"), ::OpenAPI::toJsonValue(m_drive_file));
    }
    if (m_form.isSet()) {
        obj.insert(QString("form"), ::OpenAPI::toJsonValue(m_form));
    }
    if (m_link.isSet()) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_you_tube_video.isSet()) {
        obj.insert(QString("youTubeVideo"), ::OpenAPI::toJsonValue(m_you_tube_video));
    }
    return obj;
}

OAIDriveFile OAIAttachment::getDriveFile() const {
    return m_drive_file;
}
void OAIAttachment::setDriveFile(const OAIDriveFile &drive_file) {
    m_drive_file = drive_file;
    m_drive_file_isSet = true;
}

bool OAIAttachment::is_drive_file_Set() const{
    return m_drive_file_isSet;
}

bool OAIAttachment::is_drive_file_Valid() const{
    return m_drive_file_isValid;
}

OAIForm OAIAttachment::getForm() const {
    return m_form;
}
void OAIAttachment::setForm(const OAIForm &form) {
    m_form = form;
    m_form_isSet = true;
}

bool OAIAttachment::is_form_Set() const{
    return m_form_isSet;
}

bool OAIAttachment::is_form_Valid() const{
    return m_form_isValid;
}

OAILink OAIAttachment::getLink() const {
    return m_link;
}
void OAIAttachment::setLink(const OAILink &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIAttachment::is_link_Set() const{
    return m_link_isSet;
}

bool OAIAttachment::is_link_Valid() const{
    return m_link_isValid;
}

OAIYouTubeVideo OAIAttachment::getYouTubeVideo() const {
    return m_you_tube_video;
}
void OAIAttachment::setYouTubeVideo(const OAIYouTubeVideo &you_tube_video) {
    m_you_tube_video = you_tube_video;
    m_you_tube_video_isSet = true;
}

bool OAIAttachment::is_you_tube_video_Set() const{
    return m_you_tube_video_isSet;
}

bool OAIAttachment::is_you_tube_video_Valid() const{
    return m_you_tube_video_isValid;
}

bool OAIAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_drive_file.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_form.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_you_tube_video.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
