/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForm::OAIForm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForm::OAIForm() {
    this->initializeModel();
}

OAIForm::~OAIForm() {}

void OAIForm::initializeModel() {

    m_form_url_isSet = false;
    m_form_url_isValid = false;

    m_response_url_isSet = false;
    m_response_url_isValid = false;

    m_thumbnail_url_isSet = false;
    m_thumbnail_url_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIForm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForm::fromJsonObject(QJsonObject json) {

    m_form_url_isValid = ::OpenAPI::fromJsonValue(m_form_url, json[QString("formUrl")]);
    m_form_url_isSet = !json[QString("formUrl")].isNull() && m_form_url_isValid;

    m_response_url_isValid = ::OpenAPI::fromJsonValue(m_response_url, json[QString("responseUrl")]);
    m_response_url_isSet = !json[QString("responseUrl")].isNull() && m_response_url_isValid;

    m_thumbnail_url_isValid = ::OpenAPI::fromJsonValue(m_thumbnail_url, json[QString("thumbnailUrl")]);
    m_thumbnail_url_isSet = !json[QString("thumbnailUrl")].isNull() && m_thumbnail_url_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIForm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForm::asJsonObject() const {
    QJsonObject obj;
    if (m_form_url_isSet) {
        obj.insert(QString("formUrl"), ::OpenAPI::toJsonValue(m_form_url));
    }
    if (m_response_url_isSet) {
        obj.insert(QString("responseUrl"), ::OpenAPI::toJsonValue(m_response_url));
    }
    if (m_thumbnail_url_isSet) {
        obj.insert(QString("thumbnailUrl"), ::OpenAPI::toJsonValue(m_thumbnail_url));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIForm::getFormUrl() const {
    return m_form_url;
}
void OAIForm::setFormUrl(const QString &form_url) {
    m_form_url = form_url;
    m_form_url_isSet = true;
}

bool OAIForm::is_form_url_Set() const{
    return m_form_url_isSet;
}

bool OAIForm::is_form_url_Valid() const{
    return m_form_url_isValid;
}

QString OAIForm::getResponseUrl() const {
    return m_response_url;
}
void OAIForm::setResponseUrl(const QString &response_url) {
    m_response_url = response_url;
    m_response_url_isSet = true;
}

bool OAIForm::is_response_url_Set() const{
    return m_response_url_isSet;
}

bool OAIForm::is_response_url_Valid() const{
    return m_response_url_isValid;
}

QString OAIForm::getThumbnailUrl() const {
    return m_thumbnail_url;
}
void OAIForm::setThumbnailUrl(const QString &thumbnail_url) {
    m_thumbnail_url = thumbnail_url;
    m_thumbnail_url_isSet = true;
}

bool OAIForm::is_thumbnail_url_Set() const{
    return m_thumbnail_url_isSet;
}

bool OAIForm::is_thumbnail_url_Valid() const{
    return m_thumbnail_url_isValid;
}

QString OAIForm::getTitle() const {
    return m_title;
}
void OAIForm::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIForm::is_title_Set() const{
    return m_title_isSet;
}

bool OAIForm::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIForm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_form_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
