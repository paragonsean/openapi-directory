/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubmissionHistory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubmissionHistory::OAISubmissionHistory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubmissionHistory::OAISubmissionHistory() {
    this->initializeModel();
}

OAISubmissionHistory::~OAISubmissionHistory() {}

void OAISubmissionHistory::initializeModel() {

    m_grade_history_isSet = false;
    m_grade_history_isValid = false;

    m_state_history_isSet = false;
    m_state_history_isValid = false;
}

void OAISubmissionHistory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubmissionHistory::fromJsonObject(QJsonObject json) {

    m_grade_history_isValid = ::OpenAPI::fromJsonValue(m_grade_history, json[QString("gradeHistory")]);
    m_grade_history_isSet = !json[QString("gradeHistory")].isNull() && m_grade_history_isValid;

    m_state_history_isValid = ::OpenAPI::fromJsonValue(m_state_history, json[QString("stateHistory")]);
    m_state_history_isSet = !json[QString("stateHistory")].isNull() && m_state_history_isValid;
}

QString OAISubmissionHistory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubmissionHistory::asJsonObject() const {
    QJsonObject obj;
    if (m_grade_history.isSet()) {
        obj.insert(QString("gradeHistory"), ::OpenAPI::toJsonValue(m_grade_history));
    }
    if (m_state_history.isSet()) {
        obj.insert(QString("stateHistory"), ::OpenAPI::toJsonValue(m_state_history));
    }
    return obj;
}

OAIGradeHistory OAISubmissionHistory::getGradeHistory() const {
    return m_grade_history;
}
void OAISubmissionHistory::setGradeHistory(const OAIGradeHistory &grade_history) {
    m_grade_history = grade_history;
    m_grade_history_isSet = true;
}

bool OAISubmissionHistory::is_grade_history_Set() const{
    return m_grade_history_isSet;
}

bool OAISubmissionHistory::is_grade_history_Valid() const{
    return m_grade_history_isValid;
}

OAIStateHistory OAISubmissionHistory::getStateHistory() const {
    return m_state_history;
}
void OAISubmissionHistory::setStateHistory(const OAIStateHistory &state_history) {
    m_state_history = state_history;
    m_state_history_isSet = true;
}

bool OAISubmissionHistory::is_state_history_Set() const{
    return m_state_history_isSet;
}

bool OAISubmissionHistory::is_state_history_Valid() const{
    return m_state_history_isValid;
}

bool OAISubmissionHistory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_grade_history.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_history.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubmissionHistory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
