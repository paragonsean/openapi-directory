/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeed.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeed::OAIFeed(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeed::OAIFeed() {
    this->initializeModel();
}

OAIFeed::~OAIFeed() {}

void OAIFeed::initializeModel() {

    m_course_roster_changes_info_isSet = false;
    m_course_roster_changes_info_isValid = false;

    m_course_work_changes_info_isSet = false;
    m_course_work_changes_info_isValid = false;

    m_feed_type_isSet = false;
    m_feed_type_isValid = false;
}

void OAIFeed::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFeed::fromJsonObject(QJsonObject json) {

    m_course_roster_changes_info_isValid = ::OpenAPI::fromJsonValue(m_course_roster_changes_info, json[QString("courseRosterChangesInfo")]);
    m_course_roster_changes_info_isSet = !json[QString("courseRosterChangesInfo")].isNull() && m_course_roster_changes_info_isValid;

    m_course_work_changes_info_isValid = ::OpenAPI::fromJsonValue(m_course_work_changes_info, json[QString("courseWorkChangesInfo")]);
    m_course_work_changes_info_isSet = !json[QString("courseWorkChangesInfo")].isNull() && m_course_work_changes_info_isValid;

    m_feed_type_isValid = ::OpenAPI::fromJsonValue(m_feed_type, json[QString("feedType")]);
    m_feed_type_isSet = !json[QString("feedType")].isNull() && m_feed_type_isValid;
}

QString OAIFeed::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFeed::asJsonObject() const {
    QJsonObject obj;
    if (m_course_roster_changes_info.isSet()) {
        obj.insert(QString("courseRosterChangesInfo"), ::OpenAPI::toJsonValue(m_course_roster_changes_info));
    }
    if (m_course_work_changes_info.isSet()) {
        obj.insert(QString("courseWorkChangesInfo"), ::OpenAPI::toJsonValue(m_course_work_changes_info));
    }
    if (m_feed_type_isSet) {
        obj.insert(QString("feedType"), ::OpenAPI::toJsonValue(m_feed_type));
    }
    return obj;
}

OAICourseRosterChangesInfo OAIFeed::getCourseRosterChangesInfo() const {
    return m_course_roster_changes_info;
}
void OAIFeed::setCourseRosterChangesInfo(const OAICourseRosterChangesInfo &course_roster_changes_info) {
    m_course_roster_changes_info = course_roster_changes_info;
    m_course_roster_changes_info_isSet = true;
}

bool OAIFeed::is_course_roster_changes_info_Set() const{
    return m_course_roster_changes_info_isSet;
}

bool OAIFeed::is_course_roster_changes_info_Valid() const{
    return m_course_roster_changes_info_isValid;
}

OAICourseWorkChangesInfo OAIFeed::getCourseWorkChangesInfo() const {
    return m_course_work_changes_info;
}
void OAIFeed::setCourseWorkChangesInfo(const OAICourseWorkChangesInfo &course_work_changes_info) {
    m_course_work_changes_info = course_work_changes_info;
    m_course_work_changes_info_isSet = true;
}

bool OAIFeed::is_course_work_changes_info_Set() const{
    return m_course_work_changes_info_isSet;
}

bool OAIFeed::is_course_work_changes_info_Valid() const{
    return m_course_work_changes_info_isValid;
}

QString OAIFeed::getFeedType() const {
    return m_feed_type;
}
void OAIFeed::setFeedType(const QString &feed_type) {
    m_feed_type = feed_type;
    m_feed_type_isSet = true;
}

bool OAIFeed::is_feed_type_Set() const{
    return m_feed_type_isSet;
}

bool OAIFeed::is_feed_type_Valid() const{
    return m_feed_type_isValid;
}

bool OAIFeed::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_course_roster_changes_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_course_work_changes_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_feed_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFeed::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
