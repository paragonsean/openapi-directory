/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGradebookSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGradebookSettings::OAIGradebookSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGradebookSettings::OAIGradebookSettings() {
    this->initializeModel();
}

OAIGradebookSettings::~OAIGradebookSettings() {}

void OAIGradebookSettings::initializeModel() {

    m_calculation_type_isSet = false;
    m_calculation_type_isValid = false;

    m_display_setting_isSet = false;
    m_display_setting_isValid = false;

    m_grade_categories_isSet = false;
    m_grade_categories_isValid = false;
}

void OAIGradebookSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGradebookSettings::fromJsonObject(QJsonObject json) {

    m_calculation_type_isValid = ::OpenAPI::fromJsonValue(m_calculation_type, json[QString("calculationType")]);
    m_calculation_type_isSet = !json[QString("calculationType")].isNull() && m_calculation_type_isValid;

    m_display_setting_isValid = ::OpenAPI::fromJsonValue(m_display_setting, json[QString("displaySetting")]);
    m_display_setting_isSet = !json[QString("displaySetting")].isNull() && m_display_setting_isValid;

    m_grade_categories_isValid = ::OpenAPI::fromJsonValue(m_grade_categories, json[QString("gradeCategories")]);
    m_grade_categories_isSet = !json[QString("gradeCategories")].isNull() && m_grade_categories_isValid;
}

QString OAIGradebookSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGradebookSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_calculation_type_isSet) {
        obj.insert(QString("calculationType"), ::OpenAPI::toJsonValue(m_calculation_type));
    }
    if (m_display_setting_isSet) {
        obj.insert(QString("displaySetting"), ::OpenAPI::toJsonValue(m_display_setting));
    }
    if (m_grade_categories.size() > 0) {
        obj.insert(QString("gradeCategories"), ::OpenAPI::toJsonValue(m_grade_categories));
    }
    return obj;
}

QString OAIGradebookSettings::getCalculationType() const {
    return m_calculation_type;
}
void OAIGradebookSettings::setCalculationType(const QString &calculation_type) {
    m_calculation_type = calculation_type;
    m_calculation_type_isSet = true;
}

bool OAIGradebookSettings::is_calculation_type_Set() const{
    return m_calculation_type_isSet;
}

bool OAIGradebookSettings::is_calculation_type_Valid() const{
    return m_calculation_type_isValid;
}

QString OAIGradebookSettings::getDisplaySetting() const {
    return m_display_setting;
}
void OAIGradebookSettings::setDisplaySetting(const QString &display_setting) {
    m_display_setting = display_setting;
    m_display_setting_isSet = true;
}

bool OAIGradebookSettings::is_display_setting_Set() const{
    return m_display_setting_isSet;
}

bool OAIGradebookSettings::is_display_setting_Valid() const{
    return m_display_setting_isValid;
}

QList<OAIGradeCategory> OAIGradebookSettings::getGradeCategories() const {
    return m_grade_categories;
}
void OAIGradebookSettings::setGradeCategories(const QList<OAIGradeCategory> &grade_categories) {
    m_grade_categories = grade_categories;
    m_grade_categories_isSet = true;
}

bool OAIGradebookSettings::is_grade_categories_Set() const{
    return m_grade_categories_isSet;
}

bool OAIGradebookSettings::is_grade_categories_Valid() const{
    return m_grade_categories_isValid;
}

bool OAIGradebookSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calculation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_setting_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grade_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGradebookSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
