/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeacher.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeacher::OAITeacher(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeacher::OAITeacher() {
    this->initializeModel();
}

OAITeacher::~OAITeacher() {}

void OAITeacher::initializeModel() {

    m_course_id_isSet = false;
    m_course_id_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAITeacher::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeacher::fromJsonObject(QJsonObject json) {

    m_course_id_isValid = ::OpenAPI::fromJsonValue(m_course_id, json[QString("courseId")]);
    m_course_id_isSet = !json[QString("courseId")].isNull() && m_course_id_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("profile")]);
    m_profile_isSet = !json[QString("profile")].isNull() && m_profile_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAITeacher::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeacher::asJsonObject() const {
    QJsonObject obj;
    if (m_course_id_isSet) {
        obj.insert(QString("courseId"), ::OpenAPI::toJsonValue(m_course_id));
    }
    if (m_profile.isSet()) {
        obj.insert(QString("profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAITeacher::getCourseId() const {
    return m_course_id;
}
void OAITeacher::setCourseId(const QString &course_id) {
    m_course_id = course_id;
    m_course_id_isSet = true;
}

bool OAITeacher::is_course_id_Set() const{
    return m_course_id_isSet;
}

bool OAITeacher::is_course_id_Valid() const{
    return m_course_id_isValid;
}

OAIUserProfile OAITeacher::getProfile() const {
    return m_profile;
}
void OAITeacher::setProfile(const OAIUserProfile &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAITeacher::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAITeacher::is_profile_Valid() const{
    return m_profile_isValid;
}

QString OAITeacher::getUserId() const {
    return m_user_id;
}
void OAITeacher::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAITeacher::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAITeacher::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAITeacher::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_course_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeacher::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
