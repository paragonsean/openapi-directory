openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Manages classes, rosters, and invitations in Google Classroom."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Classroom API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: google
    url: https://classroom.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: classroom
externalDocs:
  url: https://developers.google.com/classroom/
servers:
- url: https://classroom.googleapis.com/
tags:
- name: courses
- name: invitations
- name: registrations
- name: userProfiles
paths:
  /v1/courses:
    get:
      description: "Returns a list of courses that the requesting user is permitted\
        \ to view, restricted to those that match the request. Returned courses are\
        \ ordered by creation time, with the most recently created coming first. This\
        \ method returns the following error codes: * `PERMISSION_DENIED` for access\
        \ errors. * `INVALID_ARGUMENT` if the query argument is malformed. * `NOT_FOUND`\
        \ if any users specified in the query arguments do not exist."
      operationId: classroom_courses_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Restricts returned courses to those in one of the specified\
          \ states The default value is ACTIVE, ARCHIVED, PROVISIONED, DECLINED."
        explode: true
        in: query
        name: courseStates
        required: false
        schema:
          items:
            enum:
            - COURSE_STATE_UNSPECIFIED
            - ACTIVE
            - ARCHIVED
            - PROVISIONED
            - DECLINED
            - SUSPENDED
            type: string
          type: array
        style: form
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "Restricts returned courses to those having a student with the\
          \ specified identifier. The identifier can be one of the following: * the\
          \ numeric identifier for the user * the email address of the user * the\
          \ string literal `\"me\"`, indicating the requesting user"
        explode: true
        in: query
        name: studentId
        required: false
        schema:
          type: string
        style: form
      - description: "Restricts returned courses to those having a teacher with the\
          \ specified identifier. The identifier can be one of the following: * the\
          \ numeric identifier for the user * the email address of the user * the\
          \ string literal `\"me\"`, indicating the requesting user"
        explode: true
        in: query
        name: teacherId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCoursesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Creates a course. The user specified in `ownerId` is the owner\
        \ of the created course and added as a teacher. A non-admin requesting user\
        \ can only create a course with themselves as the owner. Domain admins can\
        \ create courses owned by any user within their domain. This method returns\
        \ the following error codes: * `PERMISSION_DENIED` if the requesting user\
        \ is not permitted to create courses or for access errors. * `NOT_FOUND` if\
        \ the primary teacher is not a valid user. * `FAILED_PRECONDITION` if the\
        \ course owner's account is disabled or for the following request errors:\
        \ * UserCannotOwnCourse * UserGroupsMembershipLimitReached * `ALREADY_EXISTS`\
        \ if an alias was specified in the `id` and already exists."
      operationId: classroom_courses_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/aliases:
    get:
      description: "Returns a list of aliases for a course. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting user is not\
        \ permitted to access the course or for access errors. * `NOT_FOUND` if the\
        \ course does not exist."
      operationId: classroom_courses_aliases_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The identifier of the course. This identifier can be either the
          Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCourseAliasesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Creates an alias for a course. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to create the alias or for access errors. * `NOT_FOUND` if the course does\
        \ not exist. * `ALREADY_EXISTS` if the alias already exists. * `FAILED_PRECONDITION`\
        \ if the alias requested does not make sense for the requesting user or course\
        \ (for example, if a user not in a domain attempts to access a domain-scoped\
        \ alias)."
      operationId: classroom_courses_aliases_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course to alias. This identifier can be either
          the Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseAlias'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseAlias'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/aliases/{alias}:
    delete:
      description: "Deletes an alias of a course. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to remove the alias or for access errors. * `NOT_FOUND` if the alias does\
        \ not exist. * `FAILED_PRECONDITION` if the alias requested does not make\
        \ sense for the requesting user or course (for example, if a user not in a\
        \ domain attempts to delete a domain-scoped alias)."
      operationId: classroom_courses_aliases_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course whose alias should be deleted. This
          identifier can be either the Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Alias to delete. This may not be the Classroom-assigned identifier.
        explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
  /v1/courses/{courseId}/announcements:
    get:
      description: "Returns a list of announcements that the requester is permitted\
        \ to view. Course students may only view `PUBLISHED` announcements. Course\
        \ teachers and domain administrators may view all announcements. This method\
        \ returns the following error codes: * `PERMISSION_DENIED` if the requesting\
        \ user is not permitted to access the requested course or for access errors.\
        \ * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested\
        \ course does not exist."
      operationId: classroom_courses_announcements_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: "Restriction on the `state` of announcements returned. If this\
          \ argument is left unspecified, the default value is `PUBLISHED`."
        explode: true
        in: query
        name: announcementStates
        required: false
        schema:
          items:
            enum:
            - ANNOUNCEMENT_STATE_UNSPECIFIED
            - PUBLISHED
            - DRAFT
            - DELETED
            type: string
          type: array
        style: form
      - description: "Optional sort ordering for results. A comma-separated list of\
          \ fields with an optional sort direction keyword. Supported field is `updateTime`.\
          \ Supported direction keywords are `asc` and `desc`. If not specified, `updateTime\
          \ desc` is the default behavior. Examples: `updateTime asc`, `updateTime`"
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnnouncementsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Creates an announcement. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if the requesting user is not permitted to\
        \ access the requested course, create announcements in the requested course,\
        \ share a Drive attachment, or for access errors. * `INVALID_ARGUMENT` if\
        \ the request is malformed. * `NOT_FOUND` if the requested course does not\
        \ exist. * `FAILED_PRECONDITION` for the following request error: * AttachmentNotVisible"
      operationId: classroom_courses_announcements_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/announcements/{id}:
    delete:
      description: "Deletes an announcement. This request must be made by the Developer\
        \ Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849)\
        \ used to create the corresponding announcement item. This method returns\
        \ the following error codes: * `PERMISSION_DENIED` if the requesting developer\
        \ project did not create the corresponding announcement, if the requesting\
        \ user is not permitted to delete the requested course or for access errors.\
        \ * `FAILED_PRECONDITION` if the requested announcement has already been deleted.\
        \ * `NOT_FOUND` if no course exists with the requested ID."
      operationId: classroom_courses_announcements_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the announcement to delete. This identifier is
          a Classroom-assigned identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    get:
      description: "Returns an announcement. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if the requesting user is not permitted to\
        \ access the requested course or announcement, or for access errors. * `INVALID_ARGUMENT`\
        \ if the request is malformed. * `NOT_FOUND` if the requested course or announcement\
        \ does not exist."
      operationId: classroom_courses_announcements_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the announcement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    patch:
      description: "Updates one or more fields of an announcement. This method returns\
        \ the following error codes: * `PERMISSION_DENIED` if the requesting developer\
        \ project did not create the corresponding announcement or for access errors.\
        \ * `INVALID_ARGUMENT` if the request is malformed. * `FAILED_PRECONDITION`\
        \ if the requested announcement has already been deleted. * `NOT_FOUND` if\
        \ the requested course or announcement does not exist"
      operationId: classroom_courses_announcements_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the announcement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Mask that identifies which fields on the announcement to update.\
          \ This field is required to do an update. The update fails if invalid fields\
          \ are specified. If a field supports empty values, it can be cleared by\
          \ specifying it in the update mask and not in the Announcement object. If\
          \ a field that does not support empty values is included in the update mask\
          \ and not set in the Announcement object, an `INVALID_ARGUMENT` error is\
          \ returned. The following fields may be specified by teachers: * `text`\
          \ * `state` * `scheduled_time`"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/announcements/{id}:modifyAssignees:
    post:
      description: "Modifies assignee mode and options of an announcement. Only a\
        \ teacher of the course that contains the announcement may call this method.\
        \ This method returns the following error codes: * `PERMISSION_DENIED` if\
        \ the requesting user is not permitted to access the requested course or course\
        \ work or for access errors. * `INVALID_ARGUMENT` if the request is malformed.\
        \ * `NOT_FOUND` if the requested course or course work does not exist."
      operationId: classroom_courses_announcements_modify_assignees
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the announcement.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAnnouncementAssigneesRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.announcements
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.announcements
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork:
    get:
      description: "Returns a list of course work that the requester is permitted\
        \ to view. Course students may only view `PUBLISHED` course work. Course teachers\
        \ and domain administrators may view all course work. This method returns\
        \ the following error codes: * `PERMISSION_DENIED` if the requesting user\
        \ is not permitted to access the requested course or for access errors. *\
        \ `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested\
        \ course does not exist."
      operationId: classroom_courses_course_work_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: "Restriction on the work status to return. Only courseWork that\
          \ matches is returned. If unspecified, items with a work status of `PUBLISHED`\
          \ is returned."
        explode: true
        in: query
        name: courseWorkStates
        required: false
        schema:
          items:
            enum:
            - COURSE_WORK_STATE_UNSPECIFIED
            - PUBLISHED
            - DRAFT
            - DELETED
            type: string
          type: array
        style: form
      - description: "Optional sort ordering for results. A comma-separated list of\
          \ fields with an optional sort direction keyword. Supported fields are `updateTime`\
          \ and `dueDate`. Supported direction keywords are `asc` and `desc`. If not\
          \ specified, `updateTime desc` is the default behavior. Examples: `dueDate\
          \ asc,updateTime desc`, `updateTime,dueDate desc`"
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCourseWorkResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Creates course work. The resulting course work (and corresponding\
        \ student submissions) are associated with the Developer Console project of\
        \ the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used\
        \ to make the request. Classroom API requests to modify course work and student\
        \ submissions must be made with an OAuth client ID from the associated Developer\
        \ Console project. This method returns the following error codes: * `PERMISSION_DENIED`\
        \ if the requesting user is not permitted to access the requested course,\
        \ create course work in the requested course, share a Drive attachment, or\
        \ for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`\
        \ if the requested course does not exist. * `FAILED_PRECONDITION` for the\
        \ following request error: * AttachmentNotVisible"
      operationId: classroom_courses_course_work_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWork'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions:
    get:
      description: "Returns a list of student submissions that the requester is permitted\
        \ to view, factoring in the OAuth scopes of the request. `-` may be specified\
        \ as the `course_work_id` to include student submissions for multiple course\
        \ work items. Course students may only view their own work. Course teachers\
        \ and domain administrators may view all student submissions. This method\
        \ returns the following error codes: * `PERMISSION_DENIED` if the requesting\
        \ user is not permitted to access the requested course or course work, or\
        \ for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`\
        \ if the requested course does not exist."
      operationId: classroom_courses_course_work_student_submissions_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the student work to request. This may be set to
          the string literal `"-"` to request student work for all course work in
          the specified course.
        explode: false
        in: path
        name: courseWorkId
        required: true
        schema:
          type: string
        style: simple
      - description: "Requested lateness value. If specified, returned student submissions\
          \ are restricted by the requested value. If unspecified, submissions are\
          \ returned regardless of `late` value."
        explode: true
        in: query
        name: late
        required: false
        schema:
          enum:
          - LATE_VALUES_UNSPECIFIED
          - LATE_ONLY
          - NOT_LATE_ONLY
          type: string
        style: form
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "Requested submission states. If specified, returned student\
          \ submissions match one of the specified submission states."
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            enum:
            - SUBMISSION_STATE_UNSPECIFIED
            - NEW
            - CREATED
            - TURNED_IN
            - RETURNED
            - RECLAIMED_BY_STUDENT
            type: string
          type: array
        style: form
      - description: "Optional argument to restrict returned student work to those\
          \ owned by the student with the specified identifier. The identifier can\
          \ be one of the following: * the numeric identifier for the user * the email\
          \ address of the user * the string literal `\"me\"`, indicating the requesting\
          \ user"
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudentSubmissionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:
    get:
      description: "Returns a student submission. * `PERMISSION_DENIED` if the requesting\
        \ user is not permitted to access the requested course, course work, or student\
        \ submission or for access errors. * `INVALID_ARGUMENT` if the request is\
        \ malformed. * `NOT_FOUND` if the requested course, course work, or student\
        \ submission does not exist."
      operationId: classroom_courses_course_work_student_submissions_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: courseWorkId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the student submission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSubmission'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    patch:
      description: "Updates one or more fields of a student submission. See google.classroom.v1.StudentSubmission\
        \ for details of which fields may be updated and who may change them. This\
        \ request must be made by the Developer Console project of the [OAuth client\
        \ ID](https://support.google.com/cloud/answer/6158849) used to create the\
        \ corresponding course work item. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if the requesting developer project did not\
        \ create the corresponding course work, if the user is not permitted to make\
        \ the requested modification to the student submission, or for access errors.\
        \ * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested\
        \ course, course work, or student submission does not exist."
      operationId: classroom_courses_course_work_student_submissions_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: courseWorkId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the student submission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Mask that identifies which fields on the student submission\
          \ to update. This field is required to do an update. The update fails if\
          \ invalid fields are specified. The following fields may be specified by\
          \ teachers: * `draft_grade` * `assigned_grade`"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSubmission'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSubmission'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments:
    post:
      description: "Modifies attachments of student submission. Attachments may only\
        \ be added to student submissions belonging to course work objects with a\
        \ `workType` of `ASSIGNMENT`. This request must be made by the Developer Console\
        \ project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849)\
        \ used to create the corresponding course work item. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting user is not\
        \ permitted to access the requested course or course work, if the user is\
        \ not permitted to modify attachments on the requested student submission,\
        \ or for access errors. * `INVALID_ARGUMENT` if the request is malformed.\
        \ * `NOT_FOUND` if the requested course, course work, or student submission\
        \ does not exist."
      operationId: classroom_courses_course_work_student_submissions_modify_attachments
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: courseWorkId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the student submission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAttachmentsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSubmission'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim:
    post:
      description: "Reclaims a student submission on behalf of the student that owns\
        \ it. Reclaiming a student submission transfers ownership of attached Drive\
        \ files to the student and updates the submission state. Only the student\
        \ that owns the requested student submission may call this method, and only\
        \ for a student submission that has been turned in. This request must be made\
        \ by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849)\
        \ used to create the corresponding course work item. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting user is not\
        \ permitted to access the requested course or course work, unsubmit the requested\
        \ student submission, or for access errors. * `FAILED_PRECONDITION` if the\
        \ student submission has not been turned in. * `INVALID_ARGUMENT` if the request\
        \ is malformed. * `NOT_FOUND` if the requested course, course work, or student\
        \ submission does not exist."
      operationId: classroom_courses_course_work_student_submissions_reclaim
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: courseWorkId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the student submission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReclaimStudentSubmissionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return:
    post:
      description: "Returns a student submission. Returning a student submission transfers\
        \ ownership of attached Drive files to the student and may also update the\
        \ submission state. Unlike the Classroom application, returning a student\
        \ submission does not set assignedGrade to the draftGrade value. Only a teacher\
        \ of the course that contains the requested student submission may call this\
        \ method. This request must be made by the Developer Console project of the\
        \ [OAuth client ID](https://support.google.com/cloud/answer/6158849) used\
        \ to create the corresponding course work item. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to access the requested course or course work, return the requested student\
        \ submission, or for access errors. * `INVALID_ARGUMENT` if the request is\
        \ malformed. * `NOT_FOUND` if the requested course, course work, or student\
        \ submission does not exist."
      operationId: classroom_courses_course_work_student_submissions_return
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: courseWorkId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the student submission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnStudentSubmissionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn:
    post:
      description: "Turns in a student submission. Turning in a student submission\
        \ transfers ownership of attached Drive files to the teacher and may also\
        \ update the submission state. This may only be called by the student that\
        \ owns the specified student submission. This request must be made by the\
        \ Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849)\
        \ used to create the corresponding course work item. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting user is not\
        \ permitted to access the requested course or course work, turn in the requested\
        \ student submission, or for access errors. * `INVALID_ARGUMENT` if the request\
        \ is malformed. * `NOT_FOUND` if the requested course, course work, or student\
        \ submission does not exist."
      operationId: classroom_courses_course_work_student_submissions_turn_in
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: courseWorkId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the student submission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TurnInStudentSubmissionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork/{id}:
    delete:
      description: "Deletes a course work. This request must be made by the Developer\
        \ Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849)\
        \ used to create the corresponding course work item. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting developer\
        \ project did not create the corresponding course work, if the requesting\
        \ user is not permitted to delete the requested course or for access errors.\
        \ * `FAILED_PRECONDITION` if the requested course work has already been deleted.\
        \ * `NOT_FOUND` if no course exists with the requested ID."
      operationId: classroom_courses_course_work_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work to delete. This identifier is a
          Classroom-assigned identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    get:
      description: "Returns course work. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the requesting user is not permitted to access\
        \ the requested course or course work, or for access errors. * `INVALID_ARGUMENT`\
        \ if the request is malformed. * `NOT_FOUND` if the requested course or course\
        \ work does not exist."
      operationId: classroom_courses_course_work_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    patch:
      description: "Updates one or more fields of a course work. See google.classroom.v1.CourseWork\
        \ for details of which fields may be updated and who may change them. This\
        \ request must be made by the Developer Console project of the [OAuth client\
        \ ID](https://support.google.com/cloud/answer/6158849) used to create the\
        \ corresponding course work item. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if the requesting developer project did not\
        \ create the corresponding course work, if the user is not permitted to make\
        \ the requested modification to the student submission, or for access errors.\
        \ * `INVALID_ARGUMENT` if the request is malformed. * `FAILED_PRECONDITION`\
        \ if the requested course work has already been deleted. * `NOT_FOUND` if\
        \ the requested course, course work, or student submission does not exist."
      operationId: classroom_courses_course_work_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Mask that identifies which fields on the course work to update.\
          \ This field is required to do an update. The update fails if invalid fields\
          \ are specified. If a field supports empty values, it can be cleared by\
          \ specifying it in the update mask and not in the `CourseWork` object. If\
          \ a field that does not support empty values is included in the update mask\
          \ and not set in the `CourseWork` object, an `INVALID_ARGUMENT` error is\
          \ returned. The following fields may be specified by teachers: * `title`\
          \ * `description` * `state` * `due_date` * `due_time` * `max_points` * `scheduled_time`\
          \ * `submission_modification_mode` * `topic_id`"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWork'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWork/{id}:modifyAssignees:
    post:
      description: "Modifies assignee mode and options of a coursework. Only a teacher\
        \ of the course that contains the coursework may call this method. This method\
        \ returns the following error codes: * `PERMISSION_DENIED` if the requesting\
        \ user is not permitted to access the requested course or course work or for\
        \ access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`\
        \ if the requested course or course work does not exist."
      operationId: classroom_courses_course_work_modify_assignees
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the coursework.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyCourseWorkAssigneesRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.coursework.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.coursework.students
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWorkMaterials:
    get:
      description: "Returns a list of course work material that the requester is permitted\
        \ to view. Course students may only view `PUBLISHED` course work material.\
        \ Course teachers and domain administrators may view all course work material.\
        \ This method returns the following error codes: * `PERMISSION_DENIED` if\
        \ the requesting user is not permitted to access the requested course or for\
        \ access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`\
        \ if the requested course does not exist."
      operationId: classroom_courses_course_work_materials_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: "Restriction on the work status to return. Only course work material\
          \ that matches is returned. If unspecified, items with a work status of\
          \ `PUBLISHED` is returned."
        explode: true
        in: query
        name: courseWorkMaterialStates
        required: false
        schema:
          items:
            enum:
            - COURSEWORK_MATERIAL_STATE_UNSPECIFIED
            - PUBLISHED
            - DRAFT
            - DELETED
            type: string
          type: array
        style: form
      - description: "Optional filtering for course work material with at least one\
          \ Drive material whose ID matches the provided string. If `material_link`\
          \ is also specified, course work material must have materials matching both\
          \ filters."
        explode: true
        in: query
        name: materialDriveId
        required: false
        schema:
          type: string
        style: form
      - description: Optional filtering for course work material with at least one
          link material whose URL partially matches the provided string.
        explode: true
        in: query
        name: materialLink
        required: false
        schema:
          type: string
        style: form
      - description: "Optional sort ordering for results. A comma-separated list of\
          \ fields with an optional sort direction keyword. Supported field is `updateTime`.\
          \ Supported direction keywords are `asc` and `desc`. If not specified, `updateTime\
          \ desc` is the default behavior. Examples: `updateTime asc`, `updateTime`"
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCourseWorkMaterialResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Creates a course work material. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to access the requested course, create course work material in the requested\
        \ course, share a Drive attachment, or for access errors. * `INVALID_ARGUMENT`\
        \ if the request is malformed or if more than 20 * materials are provided.\
        \ * `NOT_FOUND` if the requested course does not exist. * `FAILED_PRECONDITION`\
        \ for the following request error: * AttachmentNotVisible"
      operationId: classroom_courses_course_work_materials_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWorkMaterial'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWorkMaterial'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/courseWorkMaterials/{id}:
    delete:
      description: "Deletes a course work material. This request must be made by the\
        \ Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849)\
        \ used to create the corresponding course work material item. This method\
        \ returns the following error codes: * `PERMISSION_DENIED` if the requesting\
        \ developer project did not create the corresponding course work material,\
        \ if the requesting user is not permitted to delete the requested course or\
        \ for access errors. * `FAILED_PRECONDITION` if the requested course work\
        \ material has already been deleted. * `NOT_FOUND` if no course exists with\
        \ the requested ID."
      operationId: classroom_courses_course_work_materials_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work material to delete. This identifier
          is a Classroom-assigned identifier.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    get:
      description: "Returns a course work material. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to access the requested course or course work material, or for access errors.\
        \ * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested\
        \ course or course work material does not exist."
      operationId: classroom_courses_course_work_materials_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work material.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWorkMaterial'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    patch:
      description: "Updates one or more fields of a course work material. This method\
        \ returns the following error codes: * `PERMISSION_DENIED` if the requesting\
        \ developer project for access errors. * `INVALID_ARGUMENT` if the request\
        \ is malformed. * `FAILED_PRECONDITION` if the requested course work material\
        \ has already been deleted. * `NOT_FOUND` if the requested course or course\
        \ work material does not exist"
      operationId: classroom_courses_course_work_materials_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the course work material.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Mask that identifies which fields on the course work material\
          \ to update. This field is required to do an update. The update fails if\
          \ invalid fields are specified. If a field supports empty values, it can\
          \ be cleared by specifying it in the update mask and not in the course work\
          \ material object. If a field that does not support empty values is included\
          \ in the update mask and not set in the course work material object, an\
          \ `INVALID_ARGUMENT` error is returned. The following fields may be specified\
          \ by teachers: * `title` * `description` * `state` * `scheduled_time` *\
          \ `topic_id`"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWorkMaterial'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWorkMaterial'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courseworkmaterials
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/students:
    get:
      description: "Returns a list of students of this course that the requester is\
        \ permitted to view. This method returns the following error codes: * `NOT_FOUND`\
        \ if the course does not exist. * `PERMISSION_DENIED` for access errors."
      operationId: classroom_courses_students_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of items to return. The default is 30 if unspecified
          or `0`. The server may return fewer than the specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudentsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.emails
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.emails
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.photos
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.photos
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Adds a user as a student of a course. Domain administrators are\
        \ permitted to [directly add](https://developers.google.com/classroom/guides/manage-users)\
        \ users within their domain as students to courses within their domain. Students\
        \ are permitted to add themselves to a course using an enrollment code. This\
        \ method returns the following error codes: * `PERMISSION_DENIED` if the requesting\
        \ user is not permitted to create students in this course or for access errors.\
        \ * `NOT_FOUND` if the requested course ID does not exist. * `FAILED_PRECONDITION`\
        \ if the requested user's account is disabled, for the following request errors:\
        \ * CourseMemberLimitReached * CourseNotModifiable * UserGroupsMembershipLimitReached\
        \ * InactiveCourseOwner * `ALREADY_EXISTS` if the user is already a student\
        \ or teacher in the course."
      operationId: classroom_courses_students_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course to create the student in. This identifier
          can be either the Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Enrollment code of the course to create the student in. This
          code is required if userId corresponds to the requesting user; it may be
          omitted if the requesting user has administrative permissions to create
          students for any user.
        explode: true
        in: query
        name: enrollmentCode
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.emails
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.emails
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.photos
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.photos
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/students/{userId}:
    delete:
      description: "Deletes a student of a course. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to delete students of this course or for access errors. * `NOT_FOUND` if\
        \ no student of this course has the requested ID or if the course does not\
        \ exist."
      operationId: classroom_courses_students_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: "Identifier of the student to delete. The identifier can be one\
          \ of the following: * the numeric identifier for the user * the email address\
          \ of the user * the string literal `\"me\"`, indicating the requesting user"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    get:
      description: "Returns a student of a course. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to view students of this course or for access errors. * `NOT_FOUND` if no\
        \ student of this course has the requested ID or if the course does not exist."
      operationId: classroom_courses_students_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: "Identifier of the student to return. The identifier can be one\
          \ of the following: * the numeric identifier for the user * the email address\
          \ of the user * the string literal `\"me\"`, indicating the requesting user"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.emails
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.emails
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.photos
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.photos
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
  /v1/courses/{courseId}/teachers:
    get:
      description: "Returns a list of teachers of this course that the requester is\
        \ permitted to view. This method returns the following error codes: * `NOT_FOUND`\
        \ if the course does not exist. * `PERMISSION_DENIED` for access errors."
      operationId: classroom_courses_teachers_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of items to return. The default is 30 if unspecified
          or `0`. The server may return fewer than the specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeachersResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.emails
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.emails
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.photos
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.photos
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Creates a teacher of a course. Domain administrators are permitted\
        \ to [directly add](https://developers.google.com/classroom/guides/manage-users)\
        \ users within their domain as teachers to courses within their domain. Non-admin\
        \ users should send an Invitation instead. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to create teachers in this course or for access errors. * `NOT_FOUND` if\
        \ the requested course ID does not exist. * `FAILED_PRECONDITION` if the requested\
        \ user's account is disabled, for the following request errors: * CourseMemberLimitReached\
        \ * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached\
        \ * InactiveCourseOwner * `ALREADY_EXISTS` if the user is already a teacher\
        \ or student in the course."
      operationId: classroom_courses_teachers_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.emails
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.emails
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.photos
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.photos
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/teachers/{userId}:
    delete:
      description: "Removes the specified teacher from the specified course. This\
        \ method returns the following error codes: * `PERMISSION_DENIED` if the requesting\
        \ user is not permitted to delete teachers of this course or for access errors.\
        \ * `NOT_FOUND` if no teacher of this course has the requested ID or if the\
        \ course does not exist. * `FAILED_PRECONDITION` if the requested ID belongs\
        \ to the primary teacher of this course. * `FAILED_PRECONDITION` if the requested\
        \ ID belongs to the owner of the course Drive folder. * `FAILED_PRECONDITION`\
        \ if the course no longer has an active owner."
      operationId: classroom_courses_teachers_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: "Identifier of the teacher to delete. The identifier can be one\
          \ of the following: * the numeric identifier for the user * the email address\
          \ of the user * the string literal `\"me\"`, indicating the requesting user"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    get:
      description: "Returns a teacher of a course. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to view teachers of this course or for access errors. * `NOT_FOUND` if no\
        \ teacher of this course has the requested ID or if the course does not exist."
      operationId: classroom_courses_teachers_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: "Identifier of the teacher to return. The identifier can be one\
          \ of the following: * the numeric identifier for the user * the email address\
          \ of the user * the string literal `\"me\"`, indicating the requesting user"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.emails
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.emails
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.photos
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.photos
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
  /v1/courses/{courseId}/topics:
    get:
      description: "Returns the list of topics that the requester is permitted to\
        \ view. This method returns the following error codes: * `PERMISSION_DENIED`\
        \ if the requesting user is not permitted to access the requested course or\
        \ for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`\
        \ if the requested course does not exist."
      operationId: classroom_courses_topics_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.topics
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.topics
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.topics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.topics.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    post:
      description: "Creates a topic. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the requesting user is not permitted to access\
        \ the requested course, create a topic in the requested course, or for access\
        \ errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`\
        \ if the requested course does not exist."
      operationId: classroom_courses_topics_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.topics
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.topics
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{courseId}/topics/{id}:
    delete:
      description: "Deletes a topic. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the requesting user is not allowed to delete the\
        \ requested topic or for access errors. * `FAILED_PRECONDITION` if the requested\
        \ topic has already been deleted. * `NOT_FOUND` if no course or topic exists\
        \ with the requested ID."
      operationId: classroom_courses_topics_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the topic to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.topics
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.topics
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    get:
      description: "Returns a topic. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the requesting user is not permitted to access\
        \ the requested course or topic, or for access errors. * `INVALID_ARGUMENT`\
        \ if the request is malformed. * `NOT_FOUND` if the requested course or topic\
        \ does not exist."
      operationId: classroom_courses_topics_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.topics
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.topics
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.topics.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.topics.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    patch:
      description: "Updates one or more fields of a topic. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting developer\
        \ project did not create the corresponding topic or for access errors. * `INVALID_ARGUMENT`\
        \ if the request is malformed. * `NOT_FOUND` if the requested course or topic\
        \ does not exist"
      operationId: classroom_courses_topics_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course. This identifier can be either the Classroom-assigned
          identifier or an alias.
        explode: false
        in: path
        name: courseId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the topic.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Mask that identifies which fields on the topic to update. This\
          \ field is required to do an update. The update fails if invalid fields\
          \ are specified. If a field supports empty values, it can be cleared by\
          \ specifying it in the update mask and not in the Topic object. If a field\
          \ that does not support empty values is included in the update mask and\
          \ not set in the Topic object, an `INVALID_ARGUMENT` error is returned.\
          \ The following fields may be specified: * `name`"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.topics
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.topics
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/courses/{id}:
    delete:
      description: "Deletes a course. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the requesting user is not permitted to delete\
        \ the requested course or for access errors. * `NOT_FOUND` if no course exists\
        \ with the requested ID."
      operationId: classroom_courses_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course to delete. This identifier can be either
          the Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    get:
      description: "Returns a course. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the requesting user is not permitted to access\
        \ the requested course or for access errors. * `NOT_FOUND` if no course exists\
        \ with the requested ID."
      operationId: classroom_courses_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course to return. This identifier can be either
          the Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses.readonly
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
    patch:
      description: "Updates one or more fields in a course. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting user is not\
        \ permitted to modify the requested course or for access errors. * `NOT_FOUND`\
        \ if no course exists with the requested ID. * `INVALID_ARGUMENT` if invalid\
        \ fields are specified in the update mask or if no update mask is supplied.\
        \ * `FAILED_PRECONDITION` for the following request errors: * CourseNotModifiable\
        \ * InactiveCourseOwner * IneligibleOwner"
      operationId: classroom_courses_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course to update. This identifier can be either
          the Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Mask that identifies which fields on the course to update. This\
          \ field is required to do an update. The update will fail if invalid fields\
          \ are specified. The following fields are valid: * `name` * `section` *\
          \ `descriptionHeading` * `description` * `room` * `courseState` * `ownerId`\
          \ Note: patches to ownerId are treated as being effective immediately, but\
          \ in practice it may take some time for the ownership transfer of all affected\
          \ resources to complete. When set in a query parameter, this field should\
          \ be specified as `updateMask=,,...`"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
    put:
      description: "Updates a course. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the requesting user is not permitted to modify\
        \ the requested course or for access errors. * `NOT_FOUND` if no course exists\
        \ with the requested ID. * `FAILED_PRECONDITION` for the following request\
        \ errors: * CourseNotModifiable"
      operationId: classroom_courses_update
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the course to update. This identifier can be either
          the Classroom-assigned identifier or an alias.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.courses
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.courses
      tags:
      - courses
      x-openapi-router-controller: openapi_server.controllers.courses_controller
      x-codegen-request-body-name: body
  /v1/invitations:
    get:
      description: "Returns a list of invitations that the requesting user is permitted\
        \ to view, restricted to those that match the list request. *Note:* At least\
        \ one of `user_id` or `course_id` must be supplied. Both fields can be supplied.\
        \ This method returns the following error codes: * `PERMISSION_DENIED` for\
        \ access errors."
      operationId: classroom_invitations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Restricts returned invitations to those for a course with the
          specified identifier.
        explode: true
        in: query
        name: courseId
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return. The default is 500 if unspecified
          or `0`. The server may return fewer than the specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "Restricts returned invitations to those for a specific user.\
          \ The identifier can be one of the following: * the numeric identifier for\
          \ the user * the email address of the user * the string literal `\"me\"\
          `, indicating the requesting user"
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
      tags:
      - invitations
      x-openapi-router-controller: openapi_server.controllers.invitations_controller
    post:
      description: "Creates an invitation. Only one invitation for a user and course\
        \ may exist at a time. Delete and re-create an invitation to make changes.\
        \ This method returns the following error codes: * `PERMISSION_DENIED` if\
        \ the requesting user is not permitted to create invitations for this course\
        \ or for access errors. * `NOT_FOUND` if the course or the user does not exist.\
        \ * `FAILED_PRECONDITION`: * if the requested user's account is disabled.\
        \ * if the user already has this role or a role with greater permissions.\
        \ * for the following request errors: * IneligibleOwner * `ALREADY_EXISTS`\
        \ if an invitation for the specified user and course already exists."
      operationId: classroom_invitations_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      tags:
      - invitations
      x-openapi-router-controller: openapi_server.controllers.invitations_controller
      x-codegen-request-body-name: body
  /v1/invitations/{id}:
    delete:
      description: "Deletes an invitation. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if the requesting user is not permitted to\
        \ delete the requested invitation or for access errors. * `NOT_FOUND` if no\
        \ invitation exists with the requested ID."
      operationId: classroom_invitations_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the invitation to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      tags:
      - invitations
      x-openapi-router-controller: openapi_server.controllers.invitations_controller
    get:
      description: "Returns an invitation. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if the requesting user is not permitted to\
        \ view the requested invitation or for access errors. * `NOT_FOUND` if no\
        \ invitation exists with the requested ID."
      operationId: classroom_invitations_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the invitation to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
      tags:
      - invitations
      x-openapi-router-controller: openapi_server.controllers.invitations_controller
  /v1/invitations/{id}:accept:
    post:
      description: "Accepts an invitation, removing it and adding the invited user\
        \ to the teachers or students (as appropriate) of the specified course. Only\
        \ the invited user may accept an invitation. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if the requesting user is not permitted\
        \ to accept the requested invitation or for access errors. * `FAILED_PRECONDITION`\
        \ for the following request errors: * CourseMemberLimitReached * CourseNotModifiable\
        \ * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `NOT_FOUND`\
        \ if no invitation exists with the requested ID."
      operationId: classroom_invitations_accept
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the invitation to accept.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      tags:
      - invitations
      x-openapi-router-controller: openapi_server.controllers.invitations_controller
  /v1/registrations:
    post:
      description: "Creates a `Registration`, causing Classroom to start sending notifications\
        \ from the provided `feed` to the destination provided in `cloudPubSubTopic`.\
        \ Returns the created `Registration`. Currently, this will be the same as\
        \ the argument, but with server-assigned fields such as `expiry_time` and\
        \ `id` filled in. Note that any value specified for the `expiry_time` or `id`\
        \ fields will be ignored. While Classroom may validate the `cloudPubSubTopic`\
        \ and return errors on a best effort basis, it is the caller's responsibility\
        \ to ensure that it exists and that Classroom has permission to publish to\
        \ it. This method may return the following error codes: * `PERMISSION_DENIED`\
        \ if: * the authenticated user does not have permission to receive notifications\
        \ from the requested field; or * the current user has not granted access to\
        \ the current Cloud project with the appropriate scope for the requested feed.\
        \ Note that domain-wide delegation of authority is not currently supported\
        \ for this purpose. If the request has the appropriate scope, but no grant\
        \ exists, a Request Errors is returned. * another access error is encountered.\
        \ * `INVALID_ARGUMENT` if: * no `cloudPubsubTopic` is specified, or the specified\
        \ `cloudPubsubTopic` is not valid; or * no `feed` is specified, or the specified\
        \ `feed` is not valid. * `NOT_FOUND` if: * the specified `feed` cannot be\
        \ located, or the requesting user does not have permission to determine whether\
        \ or not it exists; or * the specified `cloudPubsubTopic` cannot be located,\
        \ or Classroom has not been granted permission to publish to it."
      operationId: classroom_registrations_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.push-notifications
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.push-notifications
      tags:
      - registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
      x-codegen-request-body-name: body
  /v1/registrations/{registrationId}:
    delete:
      description: "Deletes a `Registration`, causing Classroom to stop sending notifications\
        \ for that `Registration`."
      operationId: classroom_registrations_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The `registration_id` of the `Registration` to be deleted.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.push-notifications
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.push-notifications
      tags:
      - registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /v1/userProfiles/{studentId}/guardianInvitations:
    get:
      description: "Returns a list of guardian invitations that the requesting user\
        \ is permitted to view, filtered by the parameters provided. This method returns\
        \ the following error codes: * `PERMISSION_DENIED` if a `student_id` is specified,\
        \ and the requesting user is not permitted to view guardian invitations for\
        \ that student, if `\"-\"` is specified as the `student_id` and the user is\
        \ not a domain administrator, if guardians are not enabled for the domain\
        \ in question, or for other access errors. * `INVALID_ARGUMENT` if a `student_id`\
        \ is specified, but its format cannot be recognized (it is not an email address,\
        \ nor a `student_id` from the API, nor the literal string `me`). May also\
        \ be returned if an invalid `page_token` or `state` is provided. * `NOT_FOUND`\
        \ if a `student_id` is specified, and its format can be recognized, but Classroom\
        \ has no record of that student."
      operationId: classroom_user_profiles_guardian_invitations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The ID of the student whose guardian invitations are to be returned.\
          \ The identifier can be one of the following: * the numeric identifier for\
          \ the user * the email address of the user * the string literal `\"me\"\
          `, indicating the requesting user * the string literal `\"-\"`, indicating\
          \ that results should be returned for all students that the requesting user\
          \ is permitted to view guardian invitations."
        explode: false
        in: path
        name: studentId
        required: true
        schema:
          type: string
        style: simple
      - description: "If specified, only results with the specified `invited_email_address`\
          \ are returned."
        explode: true
        in: query
        name: invitedEmailAddress
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "If specified, only results with the specified `state` values\
          \ are returned. Otherwise, results with a `state` of `PENDING` are returned."
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            enum:
            - GUARDIAN_INVITATION_STATE_UNSPECIFIED
            - PENDING
            - COMPLETE
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGuardianInvitationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
    post:
      description: "Creates a guardian invitation, and sends an email to the guardian\
        \ asking them to confirm that they are the student's guardian. Once the guardian\
        \ accepts the invitation, their `state` will change to `COMPLETED` and they\
        \ will start receiving guardian notifications. A `Guardian` resource will\
        \ also be created to represent the active guardian. The request object must\
        \ have the `student_id` and `invited_email_address` fields set. Failing to\
        \ set these fields, or setting any other fields in the request, will result\
        \ in an error. This method returns the following error codes: * `PERMISSION_DENIED`\
        \ if the current user does not have permission to manage guardians, if the\
        \ guardian in question has already rejected too many requests for that student,\
        \ if guardians are not enabled for the domain in question, or for other access\
        \ errors. * `RESOURCE_EXHAUSTED` if the student or guardian has exceeded the\
        \ guardian link limit. * `INVALID_ARGUMENT` if the guardian email address\
        \ is not valid (for example, if it is too long), or if the format of the student\
        \ ID provided cannot be recognized (it is not an email address, nor a `user_id`\
        \ from this API). This error will also be returned if read-only fields are\
        \ set, or if the `state` field is set to to a value other than `PENDING`.\
        \ * `NOT_FOUND` if the student ID provided is a valid student ID, but Classroom\
        \ has no record of that student. * `ALREADY_EXISTS` if there is already a\
        \ pending guardian invitation for the student and `invited_email_address`\
        \ provided, or if the provided `invited_email_address` matches the Google\
        \ account of an existing `Guardian` for this user."
      operationId: classroom_user_profiles_guardian_invitations_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: ID of the student (in standard format)
        explode: false
        in: path
        name: studentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuardianInvitation'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuardianInvitation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
      x-codegen-request-body-name: body
  /v1/userProfiles/{studentId}/guardianInvitations/{invitationId}:
    get:
      description: "Returns a specific guardian invitation. This method returns the\
        \ following error codes: * `PERMISSION_DENIED` if the requesting user is not\
        \ permitted to view guardian invitations for the student identified by the\
        \ `student_id`, if guardians are not enabled for the domain in question, or\
        \ for other access errors. * `INVALID_ARGUMENT` if a `student_id` is specified,\
        \ but its format cannot be recognized (it is not an email address, nor a `student_id`\
        \ from the API, nor the literal string `me`). * `NOT_FOUND` if Classroom cannot\
        \ find any record of the given student or `invitation_id`. May also be returned\
        \ if the student exists, but the requesting user does not have access to see\
        \ that student."
      operationId: classroom_user_profiles_guardian_invitations_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the student whose guardian invitation is being requested.
        explode: false
        in: path
        name: studentId
        required: true
        schema:
          type: string
        style: simple
      - description: The `id` field of the `GuardianInvitation` being requested.
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuardianInvitation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
    patch:
      description: "Modifies a guardian invitation. Currently, the only valid modification\
        \ is to change the `state` from `PENDING` to `COMPLETE`. This has the effect\
        \ of withdrawing the invitation. This method returns the following error codes:\
        \ * `PERMISSION_DENIED` if the current user does not have permission to manage\
        \ guardians, if guardians are not enabled for the domain in question or for\
        \ other access errors. * `FAILED_PRECONDITION` if the guardian link is not\
        \ in the `PENDING` state. * `INVALID_ARGUMENT` if the format of the student\
        \ ID provided cannot be recognized (it is not an email address, nor a `user_id`\
        \ from this API), or if the passed `GuardianInvitation` has a `state` other\
        \ than `COMPLETE`, or if it modifies fields other than `state`. * `NOT_FOUND`\
        \ if the student ID provided is a valid student ID, but Classroom has no record\
        \ of that student, or if the `id` field does not refer to a guardian invitation\
        \ known to Classroom."
      operationId: classroom_user_profiles_guardian_invitations_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the student whose guardian invitation is to be modified.
        explode: false
        in: path
        name: studentId
        required: true
        schema:
          type: string
        style: simple
      - description: The `id` field of the `GuardianInvitation` to be modified.
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      - description: "Mask that identifies which fields on the course to update. This\
          \ field is required to do an update. The update fails if invalid fields\
          \ are specified. The following fields are valid: * `state` When set in a\
          \ query parameter, this field should be specified as `updateMask=,,...`"
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuardianInvitation'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuardianInvitation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
      x-codegen-request-body-name: body
  /v1/userProfiles/{studentId}/guardians:
    get:
      description: "Returns a list of guardians that the requesting user is permitted\
        \ to view, restricted to those that match the request. To list guardians for\
        \ any student that the requesting user may view guardians for, use the literal\
        \ character `-` for the student ID. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if a `student_id` is specified, and the requesting\
        \ user is not permitted to view guardian information for that student, if\
        \ `\"-\"` is specified as the `student_id` and the user is not a domain administrator,\
        \ if guardians are not enabled for the domain in question, if the `invited_email_address`\
        \ filter is set by a user who is not a domain administrator, or for other\
        \ access errors. * `INVALID_ARGUMENT` if a `student_id` is specified, but\
        \ its format cannot be recognized (it is not an email address, nor a `student_id`\
        \ from the API, nor the literal string `me`). May also be returned if an invalid\
        \ `page_token` is provided. * `NOT_FOUND` if a `student_id` is specified,\
        \ and its format can be recognized, but Classroom has no record of that student."
      operationId: classroom_user_profiles_guardians_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Filter results by the student who the guardian is linked to.\
          \ The identifier can be one of the following: * the numeric identifier for\
          \ the user * the email address of the user * the string literal `\"me\"\
          `, indicating the requesting user * the string literal `\"-\"`, indicating\
          \ that results should be returned for all students that the requesting user\
          \ has access to view."
        explode: false
        in: path
        name: studentId
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter results by the email address that the original invitation\
          \ was sent to, resulting in this guardian link. This filter can only be\
          \ used by domain administrators."
        explode: true
        in: query
        name: invitedEmailAddress
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items to return. Zero or unspecified indicates
          that the server may assign a maximum. The server may return fewer than the
          specified number of results.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "nextPageToken value returned from a previous list call, indicating\
          \ that the subsequent page of results should be returned. The list request\
          \ must be otherwise identical to the one that resulted in this token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGuardiansResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
  /v1/userProfiles/{studentId}/guardians/{guardianId}:
    delete:
      description: "Deletes a guardian. The guardian will no longer receive guardian\
        \ notifications and the guardian will no longer be accessible via the API.\
        \ This method returns the following error codes: * `PERMISSION_DENIED` if\
        \ no user that matches the provided `student_id` is visible to the requesting\
        \ user, if the requesting user is not permitted to manage guardians for the\
        \ student identified by the `student_id`, if guardians are not enabled for\
        \ the domain in question, or for other access errors. * `INVALID_ARGUMENT`\
        \ if a `student_id` is specified, but its format cannot be recognized (it\
        \ is not an email address, nor a `student_id` from the API). * `NOT_FOUND`\
        \ if the requesting user is permitted to modify guardians for the requested\
        \ `student_id`, but no `Guardian` record exists for that student with the\
        \ provided `guardian_id`."
      operationId: classroom_user_profiles_guardians_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The student whose guardian is to be deleted. One of the following:\
          \ * the numeric identifier for the user * the email address of the user\
          \ * the string literal `\"me\"`, indicating the requesting user"
        explode: false
        in: path
        name: studentId
        required: true
        schema:
          type: string
        style: simple
      - description: The `id` field from a `Guardian`.
        explode: false
        in: path
        name: guardianId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
    get:
      description: "Returns a specific guardian. This method returns the following\
        \ error codes: * `PERMISSION_DENIED` if no user that matches the provided\
        \ `student_id` is visible to the requesting user, if the requesting user is\
        \ not permitted to view guardian information for the student identified by\
        \ the `student_id`, if guardians are not enabled for the domain in question,\
        \ or for other access errors. * `INVALID_ARGUMENT` if a `student_id` is specified,\
        \ but its format cannot be recognized (it is not an email address, nor a `student_id`\
        \ from the API, nor the literal string `me`). * `NOT_FOUND` if the requesting\
        \ user is permitted to view guardians for the requested `student_id`, but\
        \ no `Guardian` record exists for that student that matches the provided `guardian_id`."
      operationId: classroom_user_profiles_guardians_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The student whose guardian is being requested. One of the following:\
          \ * the numeric identifier for the user * the email address of the user\
          \ * the string literal `\"me\"`, indicating the requesting user"
        explode: false
        in: path
        name: studentId
        required: true
        schema:
          type: string
        style: simple
      - description: The `id` field from a `Guardian`.
        explode: false
        in: path
        name: guardianId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guardian'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
  /v1/userProfiles/{userId}:
    get:
      description: "Returns a user profile. This method returns the following error\
        \ codes: * `PERMISSION_DENIED` if the requesting user is not permitted to\
        \ access this user profile, if no profile exists with the requested ID, or\
        \ for access errors."
      operationId: classroom_user_profiles_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Identifier of the profile to return. The identifier can be one\
          \ of the following: * the numeric identifier for the user * the email address\
          \ of the user * the string literal `\"me\"`, indicating the requesting user"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.emails
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.emails
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.profile.photos
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.profile.photos
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters
      - Oauth2:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/classroom.rosters.readonly
      tags:
      - userProfiles
      x-openapi-router-controller: openapi_server.controllers.user_profiles_controller
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Announcement:
      description: Announcement created by a teacher for students of the course
      example:
        creatorUserId: creatorUserId
        scheduledTime: scheduledTime
        creationTime: creationTime
        materials:
        - form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            shareMode: UNKNOWN_SHARE_MODE
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          youtubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        - form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            shareMode: UNKNOWN_SHARE_MODE
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          youtubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        alternateLink: alternateLink
        updateTime: updateTime
        id: id
        state: ANNOUNCEMENT_STATE_UNSPECIFIED
        text: text
        assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
        courseId: courseId
        individualStudentsOptions:
          studentIds:
          - studentIds
          - studentIds
      properties:
        alternateLink:
          description: Absolute link to this announcement in the Classroom web UI.
            This is only populated if `state` is `PUBLISHED`. Read-only.
          title: alternateLink
          type: string
        assigneeMode:
          description: "Assignee mode of the announcement. If unspecified, the default\
            \ value is `ALL_STUDENTS`."
          enum:
          - ASSIGNEE_MODE_UNSPECIFIED
          - ALL_STUDENTS
          - INDIVIDUAL_STUDENTS
          title: assigneeMode
          type: string
        courseId:
          description: Identifier of the course. Read-only.
          title: courseId
          type: string
        creationTime:
          description: Timestamp when this announcement was created. Read-only.
          format: google-datetime
          title: creationTime
          type: string
        creatorUserId:
          description: Identifier for the user that created the announcement. Read-only.
          title: creatorUserId
          type: string
        id:
          description: "Classroom-assigned identifier of this announcement, unique\
            \ per course. Read-only."
          title: id
          type: string
        individualStudentsOptions:
          $ref: '#/components/schemas/IndividualStudentsOptions'
        materials:
          description: Additional materials. Announcements must have no more than
            20 material items.
          items:
            $ref: '#/components/schemas/Material'
          title: materials
          type: array
        scheduledTime:
          description: Optional timestamp when this announcement is scheduled to be
            published.
          format: google-datetime
          title: scheduledTime
          type: string
        state:
          description: "Status of this announcement. If unspecified, the default state\
            \ is `DRAFT`."
          enum:
          - ANNOUNCEMENT_STATE_UNSPECIFIED
          - PUBLISHED
          - DRAFT
          - DELETED
          title: state
          type: string
        text:
          description: "Description of this announcement. The text must be a valid\
            \ UTF-8 string containing no more than 30,000 characters."
          title: text
          type: string
        updateTime:
          description: Timestamp of the most recent change to this announcement. Read-only.
          format: google-datetime
          title: updateTime
          type: string
      title: Announcement
      type: object
    Assignment:
      description: Additional details for assignments.
      example:
        studentWorkFolder:
          alternateLink: alternateLink
          id: id
          title: title
      properties:
        studentWorkFolder:
          $ref: '#/components/schemas/DriveFolder'
      title: Assignment
      type: object
    AssignmentSubmission:
      description: Student work for an assignment.
      example:
        attachments:
        - youTubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
          form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        - youTubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
          form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
      properties:
        attachments:
          description: "Attachments added by the student. Drive files that correspond\
            \ to materials with a share mode of STUDENT_COPY may not exist yet if\
            \ the student has not accessed the assignment in Classroom. Some attachment\
            \ metadata is only populated if the requesting user has permission to\
            \ access it. Identifier and alternate_link fields are always available,\
            \ but others (for example, title) may not be."
          items:
            $ref: '#/components/schemas/Attachment'
          title: attachments
          type: array
      title: AssignmentSubmission
      type: object
    Attachment:
      description: "Attachment added to student assignment work. When creating attachments,\
        \ setting the `form` field is not supported."
      example:
        youTubeVideo:
          alternateLink: alternateLink
          id: id
          title: title
          thumbnailUrl: thumbnailUrl
        form:
          responseUrl: responseUrl
          formUrl: formUrl
          title: title
          thumbnailUrl: thumbnailUrl
        link:
          title: title
          url: url
          thumbnailUrl: thumbnailUrl
        driveFile:
          alternateLink: alternateLink
          id: id
          title: title
          thumbnailUrl: thumbnailUrl
      properties:
        driveFile:
          $ref: '#/components/schemas/DriveFile'
        form:
          $ref: '#/components/schemas/Form'
        link:
          $ref: '#/components/schemas/Link'
        youTubeVideo:
          $ref: '#/components/schemas/YouTubeVideo'
      title: Attachment
      type: object
    CloudPubsubTopic:
      description: "A reference to a Cloud Pub/Sub topic. To register for notifications,\
        \ the owner of the topic must grant `classroom-notifications@system.gserviceaccount.com`\
        \ the `projects.topics.publish` permission."
      example:
        topicName: topicName
      properties:
        topicName:
          description: "The `name` field of a Cloud Pub/Sub [Topic](https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic)."
          title: topicName
          type: string
      title: CloudPubsubTopic
      type: object
    Course:
      description: A Course in Classroom.
      example:
        courseGroupEmail: courseGroupEmail
        creationTime: creationTime
        courseMaterialSets:
        - materials:
          - youTubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
            form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - youTubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
            form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          title: title
        - materials:
          - youTubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
            form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - youTubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
            form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          title: title
        description: description
        guardiansEnabled: true
        section: section
        updateTime: updateTime
        enrollmentCode: enrollmentCode
        ownerId: ownerId
        room: room
        descriptionHeading: descriptionHeading
        calendarId: calendarId
        courseState: COURSE_STATE_UNSPECIFIED
        name: name
        teacherGroupEmail: teacherGroupEmail
        alternateLink: alternateLink
        id: id
        gradebookSettings:
          calculationType: CALCULATION_TYPE_UNSPECIFIED
          displaySetting: DISPLAY_SETTING_UNSPECIFIED
          gradeCategories:
          - defaultGradeDenominator: 0
            name: name
            weight: 6
            id: id
          - defaultGradeDenominator: 0
            name: name
            weight: 6
            id: id
        teacherFolder:
          alternateLink: alternateLink
          id: id
          title: title
      properties:
        alternateLink:
          description: Absolute link to this course in the Classroom web UI. Read-only.
          title: alternateLink
          type: string
        calendarId:
          description: "The Calendar ID for a calendar that all course members can\
            \ see, to which Classroom adds events for course work and announcements\
            \ in the course. The Calendar for a course is created asynchronously when\
            \ the course is set to `CourseState.ACTIVE` for the first time (at creation\
            \ time or when it is updated to `ACTIVE` through the UI or the API). The\
            \ Calendar ID will not be populated until the creation process is completed.\
            \ Read-only."
          title: calendarId
          type: string
        courseGroupEmail:
          description: The email address of a Google group containing all members
            of the course. This group does not accept email and can only be used for
            permissions. Read-only.
          title: courseGroupEmail
          type: string
        courseMaterialSets:
          deprecated: true
          description: Sets of materials that appear on the "about" page of this course.
            Read-only.
          items:
            $ref: '#/components/schemas/CourseMaterialSet'
          title: courseMaterialSets
          type: array
        courseState:
          description: "State of the course. If unspecified, the default state is\
            \ `PROVISIONED`."
          enum:
          - COURSE_STATE_UNSPECIFIED
          - ACTIVE
          - ARCHIVED
          - PROVISIONED
          - DECLINED
          - SUSPENDED
          title: courseState
          type: string
        creationTime:
          description: Creation time of the course. Specifying this field in a course
            update mask results in an error. Read-only.
          format: google-datetime
          title: creationTime
          type: string
        description:
          description: "Optional description. For example, \"We'll be learning about\
            \ the structure of living creatures from a combination of textbooks, guest\
            \ lectures, and lab work. Expect to be excited!\" If set, this field must\
            \ be a valid UTF-8 string and no longer than 30,000 characters."
          title: description
          type: string
        descriptionHeading:
          description: "Optional heading for the description. For example, \"Welcome\
            \ to 10th Grade Biology.\" If set, this field must be a valid UTF-8 string\
            \ and no longer than 3600 characters."
          title: descriptionHeading
          type: string
        enrollmentCode:
          description: Enrollment code to use when joining this course. Specifying
            this field in a course update mask results in an error. Read-only.
          title: enrollmentCode
          type: string
        gradebookSettings:
          $ref: '#/components/schemas/GradebookSettings'
        guardiansEnabled:
          description: Whether or not guardian notifications are enabled for this
            course. Read-only.
          title: guardiansEnabled
          type: boolean
        id:
          description: "Identifier for this course assigned by Classroom. When creating\
            \ a course, you may optionally set this identifier to an alias string\
            \ in the request to create a corresponding alias. The `id` is still assigned\
            \ by Classroom and cannot be updated after the course is created. Specifying\
            \ this field in a course update mask results in an error."
          title: id
          type: string
        name:
          description: "Name of the course. For example, \"10th Grade Biology\". The\
            \ name is required. It must be between 1 and 750 characters and a valid\
            \ UTF-8 string."
          title: name
          type: string
        ownerId:
          description: "The identifier of the owner of a course. When specified as\
            \ a parameter of a create course request, this field is required. The\
            \ identifier can be one of the following: * the numeric identifier for\
            \ the user * the email address of the user * the string literal `\"me\"\
            `, indicating the requesting user This must be set in a create request.\
            \ Admins can also specify this field in a patch course request to transfer\
            \ ownership. In other contexts, it is read-only."
          title: ownerId
          type: string
        room:
          description: "Optional room location. For example, \"301\". If set, this\
            \ field must be a valid UTF-8 string and no longer than 650 characters."
          title: room
          type: string
        section:
          description: "Section of the course. For example, \"Period 2\". If set,\
            \ this field must be a valid UTF-8 string and no longer than 2800 characters."
          title: section
          type: string
        teacherFolder:
          $ref: '#/components/schemas/DriveFolder'
        teacherGroupEmail:
          description: The email address of a Google group containing all teachers
            of the course. This group does not accept email and can only be used for
            permissions. Read-only.
          title: teacherGroupEmail
          type: string
        updateTime:
          description: Time of the most recent update to this course. Specifying this
            field in a course update mask results in an error. Read-only.
          format: google-datetime
          title: updateTime
          type: string
      title: Course
      type: object
    CourseAlias:
      description: "Alternative identifier for a course. An alias uniquely identifies\
        \ a course. It must be unique within one of the following scopes: * domain:\
        \ A domain-scoped alias is visible to all users within the alias creator's\
        \ domain and can be created only by a domain admin. A domain-scoped alias\
        \ is often used when a course has an identifier external to Classroom. * project:\
        \ A project-scoped alias is visible to any request from an application using\
        \ the Developer Console project ID that created the alias and can be created\
        \ by any project. A project-scoped alias is often used when an application\
        \ has alternative identifiers. A random value can also be used to avoid duplicate\
        \ courses in the event of transmission failures, as retrying a request will\
        \ return `ALREADY_EXISTS` if a previous one has succeeded."
      example:
        alias: alias
      properties:
        alias:
          description: "Alias string. The format of the string indicates the desired\
            \ alias scoping. * `d:` indicates a domain-scoped alias. Example: `d:math_101`\
            \ * `p:` indicates a project-scoped alias. Example: `p:abc123` This field\
            \ has a maximum length of 256 characters."
          title: alias
          type: string
      title: CourseAlias
      type: object
    CourseMaterial:
      description: A material attached to a course as part of a material set.
      example:
        youTubeVideo:
          alternateLink: alternateLink
          id: id
          title: title
          thumbnailUrl: thumbnailUrl
        form:
          responseUrl: responseUrl
          formUrl: formUrl
          title: title
          thumbnailUrl: thumbnailUrl
        link:
          title: title
          url: url
          thumbnailUrl: thumbnailUrl
        driveFile:
          alternateLink: alternateLink
          id: id
          title: title
          thumbnailUrl: thumbnailUrl
      properties:
        driveFile:
          $ref: '#/components/schemas/DriveFile'
        form:
          $ref: '#/components/schemas/Form'
        link:
          $ref: '#/components/schemas/Link'
        youTubeVideo:
          $ref: '#/components/schemas/YouTubeVideo'
      title: CourseMaterial
      type: object
    CourseMaterialSet:
      description: "A set of materials that appears on the \"About\" page of the course.\
        \ These materials might include a syllabus, schedule, or other background\
        \ information relating to the course as a whole."
      example:
        materials:
        - youTubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
          form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        - youTubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
          form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        title: title
      properties:
        materials:
          description: Materials attached to this set.
          items:
            $ref: '#/components/schemas/CourseMaterial'
          title: materials
          type: array
        title:
          description: Title for this set.
          title: title
          type: string
      title: CourseMaterialSet
      type: object
    CourseRosterChangesInfo:
      description: Information about a `Feed` with a `feed_type` of `COURSE_ROSTER_CHANGES`.
      example:
        courseId: courseId
      properties:
        courseId:
          description: The `course_id` of the course to subscribe to roster changes
            for.
          title: courseId
          type: string
      title: CourseRosterChangesInfo
      type: object
    CourseWork:
      description: Course work created by a teacher for students of the course.
      example:
        creatorUserId: creatorUserId
        scheduledTime: scheduledTime
        creationTime: creationTime
        multipleChoiceQuestion:
          choices:
          - choices
          - choices
        submissionModificationMode: SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
        assignment:
          studentWorkFolder:
            alternateLink: alternateLink
            id: id
            title: title
        dueDate:
          month: 6
          year: 1
          day: 0
        description: description
        updateTime: updateTime
        dueTime:
          hours: 5
          seconds: 7
          nanos: 2
          minutes: 5
        title: title
        topicId: topicId
        materials:
        - form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            shareMode: UNKNOWN_SHARE_MODE
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          youtubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        - form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            shareMode: UNKNOWN_SHARE_MODE
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          youtubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        maxPoints: 9.301444243932576
        workType: COURSE_WORK_TYPE_UNSPECIFIED
        alternateLink: alternateLink
        id: id
        state: COURSE_WORK_STATE_UNSPECIFIED
        assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
        courseId: courseId
        gradeCategory:
          defaultGradeDenominator: 0
          name: name
          weight: 6
          id: id
        associatedWithDeveloper: true
        individualStudentsOptions:
          studentIds:
          - studentIds
          - studentIds
      properties:
        alternateLink:
          description: Absolute link to this course work in the Classroom web UI.
            This is only populated if `state` is `PUBLISHED`. Read-only.
          title: alternateLink
          type: string
        assigneeMode:
          description: "Assignee mode of the coursework. If unspecified, the default\
            \ value is `ALL_STUDENTS`."
          enum:
          - ASSIGNEE_MODE_UNSPECIFIED
          - ALL_STUDENTS
          - INDIVIDUAL_STUDENTS
          title: assigneeMode
          type: string
        assignment:
          $ref: '#/components/schemas/Assignment'
        associatedWithDeveloper:
          description: Whether this course work item is associated with the Developer
            Console project making the request. See CreateCourseWork for more details.
            Read-only.
          title: associatedWithDeveloper
          type: boolean
        courseId:
          description: Identifier of the course. Read-only.
          title: courseId
          type: string
        creationTime:
          description: Timestamp when this course work was created. Read-only.
          format: google-datetime
          title: creationTime
          type: string
        creatorUserId:
          description: Identifier for the user that created the coursework. Read-only.
          title: creatorUserId
          type: string
        description:
          description: "Optional description of this course work. If set, the description\
            \ must be a valid UTF-8 string containing no more than 30,000 characters."
          title: description
          type: string
        dueDate:
          $ref: '#/components/schemas/Date'
        dueTime:
          $ref: '#/components/schemas/TimeOfDay'
        gradeCategory:
          $ref: '#/components/schemas/GradeCategory'
        id:
          description: "Classroom-assigned identifier of this course work, unique\
            \ per course. Read-only."
          title: id
          type: string
        individualStudentsOptions:
          $ref: '#/components/schemas/IndividualStudentsOptions'
        materials:
          description: Additional materials. CourseWork must have no more than 20
            material items.
          items:
            $ref: '#/components/schemas/Material'
          title: materials
          type: array
        maxPoints:
          description: "Maximum grade for this course work. If zero or unspecified,\
            \ this assignment is considered ungraded. This must be a non-negative\
            \ integer value."
          format: double
          title: maxPoints
          type: number
        multipleChoiceQuestion:
          $ref: '#/components/schemas/MultipleChoiceQuestion'
        scheduledTime:
          description: Optional timestamp when this course work is scheduled to be
            published.
          format: google-datetime
          title: scheduledTime
          type: string
        state:
          description: "Status of this course work. If unspecified, the default state\
            \ is `DRAFT`."
          enum:
          - COURSE_WORK_STATE_UNSPECIFIED
          - PUBLISHED
          - DRAFT
          - DELETED
          title: state
          type: string
        submissionModificationMode:
          description: "Setting to determine when students are allowed to modify submissions.\
            \ If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`."
          enum:
          - SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
          - MODIFIABLE_UNTIL_TURNED_IN
          - MODIFIABLE
          title: submissionModificationMode
          type: string
        title:
          description: Title of this course work. The title must be a valid UTF-8
            string containing between 1 and 3000 characters.
          title: title
          type: string
        topicId:
          description: Identifier for the topic that this coursework is associated
            with. Must match an existing topic in the course.
          title: topicId
          type: string
        updateTime:
          description: Timestamp of the most recent change to this course work. Read-only.
          format: google-datetime
          title: updateTime
          type: string
        workType:
          description: Type of this course work. The type is set when the course work
            is created and cannot be changed.
          enum:
          - COURSE_WORK_TYPE_UNSPECIFIED
          - ASSIGNMENT
          - SHORT_ANSWER_QUESTION
          - MULTIPLE_CHOICE_QUESTION
          title: workType
          type: string
      title: CourseWork
      type: object
    CourseWorkChangesInfo:
      description: Information about a `Feed` with a `feed_type` of `COURSE_WORK_CHANGES`.
      example:
        courseId: courseId
      properties:
        courseId:
          description: The `course_id` of the course to subscribe to work changes
            for.
          title: courseId
          type: string
      title: CourseWorkChangesInfo
      type: object
    CourseWorkMaterial:
      description: Course work material created by a teacher for students of the course
      example:
        creatorUserId: creatorUserId
        scheduledTime: scheduledTime
        creationTime: creationTime
        description: description
        updateTime: updateTime
        title: title
        topicId: topicId
        materials:
        - form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            shareMode: UNKNOWN_SHARE_MODE
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          youtubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        - form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            shareMode: UNKNOWN_SHARE_MODE
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          youtubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        alternateLink: alternateLink
        id: id
        state: COURSEWORK_MATERIAL_STATE_UNSPECIFIED
        assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
        courseId: courseId
        individualStudentsOptions:
          studentIds:
          - studentIds
          - studentIds
      properties:
        alternateLink:
          description: Absolute link to this course work material in the Classroom
            web UI. This is only populated if `state` is `PUBLISHED`. Read-only.
          title: alternateLink
          type: string
        assigneeMode:
          description: "Assignee mode of the course work material. If unspecified,\
            \ the default value is `ALL_STUDENTS`."
          enum:
          - ASSIGNEE_MODE_UNSPECIFIED
          - ALL_STUDENTS
          - INDIVIDUAL_STUDENTS
          title: assigneeMode
          type: string
        courseId:
          description: Identifier of the course. Read-only.
          title: courseId
          type: string
        creationTime:
          description: Timestamp when this course work material was created. Read-only.
          format: google-datetime
          title: creationTime
          type: string
        creatorUserId:
          description: Identifier for the user that created the course work material.
            Read-only.
          title: creatorUserId
          type: string
        description:
          description: "Optional description of this course work material. The text\
            \ must be a valid UTF-8 string containing no more than 30,000 characters."
          title: description
          type: string
        id:
          description: "Classroom-assigned identifier of this course work material,\
            \ unique per course. Read-only."
          title: id
          type: string
        individualStudentsOptions:
          $ref: '#/components/schemas/IndividualStudentsOptions'
        materials:
          description: Additional materials. A course work material must have no more
            than 20 material items.
          items:
            $ref: '#/components/schemas/Material'
          title: materials
          type: array
        scheduledTime:
          description: Optional timestamp when this course work material is scheduled
            to be published.
          format: google-datetime
          title: scheduledTime
          type: string
        state:
          description: "Status of this course work material. If unspecified, the default\
            \ state is `DRAFT`."
          enum:
          - COURSEWORK_MATERIAL_STATE_UNSPECIFIED
          - PUBLISHED
          - DRAFT
          - DELETED
          title: state
          type: string
        title:
          description: Title of this course work material. The title must be a valid
            UTF-8 string containing between 1 and 3000 characters.
          title: title
          type: string
        topicId:
          description: Identifier for the topic that this course work material is
            associated with. Must match an existing topic in the course.
          title: topicId
          type: string
        updateTime:
          description: Timestamp of the most recent change to this course work material.
            Read-only.
          format: google-datetime
          title: updateTime
          type: string
      title: CourseWorkMaterial
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday.\
        \ The time of day and time zone are either specified elsewhere or are insignificant.\
        \ The date is relative to the Gregorian Calendar. This can represent one of\
        \ the following: * A full date, with non-zero year, month, and day values.\
        \ * A month and day, with a zero year (for example, an anniversary). * A year\
        \ on its own, with a zero month and a zero day. * A year and month, with a\
        \ zero day (for example, a credit card expiration date). Related types: *\
        \ google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      example:
        month: 6
        year: 1
        day: 0
      properties:
        day:
          description: "Day of a month. Must be from 1 to 31 and valid for the year\
            \ and month, or 0 to specify a year by itself or a year and month where\
            \ the day isn't significant."
          format: int32
          title: day
          type: integer
        month:
          description: "Month of a year. Must be from 1 to 12, or 0 to specify a year\
            \ without a month and day."
          format: int32
          title: month
          type: integer
        year:
          description: "Year of the date. Must be from 1 to 9999, or 0 to specify\
            \ a date without a year."
          format: int32
          title: year
          type: integer
      title: Date
      type: object
    DriveFile:
      description: Representation of a Google Drive file.
      example:
        alternateLink: alternateLink
        id: id
        title: title
        thumbnailUrl: thumbnailUrl
      properties:
        alternateLink:
          description: URL that can be used to access the Drive item. Read-only.
          title: alternateLink
          type: string
        id:
          description: Drive API resource ID.
          title: id
          type: string
        thumbnailUrl:
          description: URL of a thumbnail image of the Drive item. Read-only.
          title: thumbnailUrl
          type: string
        title:
          description: Title of the Drive item. Read-only.
          title: title
          type: string
      title: DriveFile
      type: object
    DriveFolder:
      description: Representation of a Google Drive folder.
      example:
        alternateLink: alternateLink
        id: id
        title: title
      properties:
        alternateLink:
          description: URL that can be used to access the Drive folder. Read-only.
          title: alternateLink
          type: string
        id:
          description: Drive API resource ID.
          title: id
          type: string
        title:
          description: Title of the Drive folder. Read-only.
          title: title
          type: string
      title: DriveFolder
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Feed:
      description: "A class of notifications that an application can register to receive.\
        \ For example: \"all roster changes for a domain\"."
      example:
        feedType: FEED_TYPE_UNSPECIFIED
        courseRosterChangesInfo:
          courseId: courseId
        courseWorkChangesInfo:
          courseId: courseId
      properties:
        courseRosterChangesInfo:
          $ref: '#/components/schemas/CourseRosterChangesInfo'
        courseWorkChangesInfo:
          $ref: '#/components/schemas/CourseWorkChangesInfo'
        feedType:
          description: The type of feed.
          enum:
          - FEED_TYPE_UNSPECIFIED
          - DOMAIN_ROSTER_CHANGES
          - COURSE_ROSTER_CHANGES
          - COURSE_WORK_CHANGES
          title: feedType
          type: string
      title: Feed
      type: object
    Form:
      description: Google Forms item.
      example:
        responseUrl: responseUrl
        formUrl: formUrl
        title: title
        thumbnailUrl: thumbnailUrl
      properties:
        formUrl:
          description: URL of the form.
          title: formUrl
          type: string
        responseUrl:
          description: URL of the form responses document. Only set if responses have
            been recorded and only when the requesting user is an editor of the form.
            Read-only.
          title: responseUrl
          type: string
        thumbnailUrl:
          description: URL of a thumbnail image of the Form. Read-only.
          title: thumbnailUrl
          type: string
        title:
          description: Title of the Form. Read-only.
          title: title
          type: string
      title: Form
      type: object
    GlobalPermission:
      description: Global user permission description.
      example:
        permission: PERMISSION_UNSPECIFIED
      properties:
        permission:
          description: Permission value.
          enum:
          - PERMISSION_UNSPECIFIED
          - CREATE_COURSE
          title: permission
          type: string
      title: GlobalPermission
      type: object
    GradeCategory:
      description: "Details for a grade category in a course. Coursework may have\
        \ zero or one grade category, and the category may be used in computing the\
        \ overall grade. See the [help center article](https://support.google.com/edu/classroom/answer/9184995)\
        \ for details."
      example:
        defaultGradeDenominator: 0
        name: name
        weight: 6
        id: id
      properties:
        defaultGradeDenominator:
          description: Default value of denominator. Only applicable when grade calculation
            type is TOTAL_POINTS.
          format: int32
          title: defaultGradeDenominator
          type: integer
        id:
          description: ID of the grade category.
          title: id
          type: string
        name:
          description: Name of the grade category.
          title: name
          type: string
        weight:
          description: "The weight of the category average as part of overall average.\
            \ A weight of 12.34% is represented as 123400 (100% is 1,000,000). The\
            \ last two digits should always be zero since we use two decimal precision.\
            \ Only applicable when grade calculation type is WEIGHTED_CATEGORIES."
          format: int32
          title: weight
          type: integer
      title: GradeCategory
      type: object
    GradeHistory:
      description: The history of each grade on this submission.
      example:
        gradeTimestamp: gradeTimestamp
        actorUserId: actorUserId
        pointsEarned: 5.962133916683182
        maxPoints: 1.4658129805029452
        gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
      properties:
        actorUserId:
          description: The teacher who made the grade change.
          title: actorUserId
          type: string
        gradeChangeType:
          description: The type of grade change at this time in the submission grade
            history.
          enum:
          - UNKNOWN_GRADE_CHANGE_TYPE
          - DRAFT_GRADE_POINTS_EARNED_CHANGE
          - ASSIGNED_GRADE_POINTS_EARNED_CHANGE
          - MAX_POINTS_CHANGE
          title: gradeChangeType
          type: string
        gradeTimestamp:
          description: When the grade of the submission was changed.
          format: google-datetime
          title: gradeTimestamp
          type: string
        maxPoints:
          description: The denominator of the grade at this time in the submission
            grade history.
          format: double
          title: maxPoints
          type: number
        pointsEarned:
          description: The numerator of the grade at this time in the submission grade
            history.
          format: double
          title: pointsEarned
          type: number
      title: GradeHistory
      type: object
    GradebookSettings:
      description: "The gradebook settings for a course. See the [help center article](https://support.google.com/edu/classroom/answer/9184995)\
        \ for details."
      example:
        calculationType: CALCULATION_TYPE_UNSPECIFIED
        displaySetting: DISPLAY_SETTING_UNSPECIFIED
        gradeCategories:
        - defaultGradeDenominator: 0
          name: name
          weight: 6
          id: id
        - defaultGradeDenominator: 0
          name: name
          weight: 6
          id: id
      properties:
        calculationType:
          description: Indicates how the overall grade is calculated.
          enum:
          - CALCULATION_TYPE_UNSPECIFIED
          - TOTAL_POINTS
          - WEIGHTED_CATEGORIES
          title: calculationType
          type: string
        displaySetting:
          description: Indicates who can see the overall grade..
          enum:
          - DISPLAY_SETTING_UNSPECIFIED
          - SHOW_OVERALL_GRADE
          - HIDE_OVERALL_GRADE
          - SHOW_TEACHERS_ONLY
          title: displaySetting
          type: string
        gradeCategories:
          description: Grade categories that are available for coursework in the course.
          items:
            $ref: '#/components/schemas/GradeCategory'
          title: gradeCategories
          type: array
      title: GradebookSettings
      type: object
    Guardian:
      description: Association between a student and a guardian of that student. The
        guardian may receive information about the student's course work.
      example:
        invitedEmailAddress: invitedEmailAddress
        studentId: studentId
        guardianId: guardianId
        guardianProfile:
          photoUrl: photoUrl
          emailAddress: emailAddress
          permissions:
          - permission: PERMISSION_UNSPECIFIED
          - permission: PERMISSION_UNSPECIFIED
          name:
            familyName: familyName
            givenName: givenName
            fullName: fullName
          id: id
          verifiedTeacher: true
      properties:
        guardianId:
          description: Identifier for the guardian.
          title: guardianId
          type: string
        guardianProfile:
          $ref: '#/components/schemas/UserProfile'
        invitedEmailAddress:
          description: The email address to which the initial guardian invitation
            was sent. This field is only visible to domain administrators.
          title: invitedEmailAddress
          type: string
        studentId:
          description: Identifier for the student to whom the guardian relationship
            applies.
          title: studentId
          type: string
      title: Guardian
      type: object
    GuardianInvitation:
      description: "An invitation to become the guardian of a specified user, sent\
        \ to a specified email address."
      example:
        invitedEmailAddress: invitedEmailAddress
        studentId: studentId
        creationTime: creationTime
        invitationId: invitationId
        state: GUARDIAN_INVITATION_STATE_UNSPECIFIED
      properties:
        creationTime:
          description: The time that this invitation was created. Read-only.
          format: google-datetime
          title: creationTime
          type: string
        invitationId:
          description: Unique identifier for this invitation. Read-only.
          title: invitationId
          type: string
        invitedEmailAddress:
          description: Email address that the invitation was sent to. This field is
            only visible to domain administrators.
          title: invitedEmailAddress
          type: string
        state:
          description: The state that this invitation is in.
          enum:
          - GUARDIAN_INVITATION_STATE_UNSPECIFIED
          - PENDING
          - COMPLETE
          title: state
          type: string
        studentId:
          description: ID of the student (in standard format)
          title: studentId
          type: string
      title: GuardianInvitation
      type: object
    IndividualStudentsOptions:
      description: Assignee details about a coursework/announcement. This field is
        set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
      example:
        studentIds:
        - studentIds
        - studentIds
      properties:
        studentIds:
          description: Identifiers for the students that have access to the coursework/announcement.
          items:
            type: string
          title: studentIds
          type: array
      title: IndividualStudentsOptions
      type: object
    Invitation:
      description: An invitation to join a course.
      example:
        role: COURSE_ROLE_UNSPECIFIED
        id: id
        courseId: courseId
        userId: userId
      properties:
        courseId:
          description: Identifier of the course to invite the user to.
          title: courseId
          type: string
        id:
          description: Identifier assigned by Classroom. Read-only.
          title: id
          type: string
        role:
          description: Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.
          enum:
          - COURSE_ROLE_UNSPECIFIED
          - STUDENT
          - TEACHER
          - OWNER
          title: role
          type: string
        userId:
          description: "Identifier of the invited user. When specified as a parameter\
            \ of a request, this identifier can be set to one of the following: *\
            \ the numeric identifier for the user * the email address of the user\
            \ * the string literal `\"me\"`, indicating the requesting user"
          title: userId
          type: string
      title: Invitation
      type: object
    Link:
      description: URL item.
      example:
        title: title
        url: url
        thumbnailUrl: thumbnailUrl
      properties:
        thumbnailUrl:
          description: URL of a thumbnail image of the target URL. Read-only.
          title: thumbnailUrl
          type: string
        title:
          description: Title of the target of the URL. Read-only.
          title: title
          type: string
        url:
          description: URL to link to. This must be a valid UTF-8 string containing
            between 1 and 2024 characters.
          title: url
          type: string
      title: Link
      type: object
    ListAnnouncementsResponse:
      description: Response when listing course work.
      example:
        nextPageToken: nextPageToken
        announcements:
        - creatorUserId: creatorUserId
          scheduledTime: scheduledTime
          creationTime: creationTime
          materials:
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          alternateLink: alternateLink
          updateTime: updateTime
          id: id
          state: ANNOUNCEMENT_STATE_UNSPECIFIED
          text: text
          assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
          courseId: courseId
          individualStudentsOptions:
            studentIds:
            - studentIds
            - studentIds
        - creatorUserId: creatorUserId
          scheduledTime: scheduledTime
          creationTime: creationTime
          materials:
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          alternateLink: alternateLink
          updateTime: updateTime
          id: id
          state: ANNOUNCEMENT_STATE_UNSPECIFIED
          text: text
          assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
          courseId: courseId
          individualStudentsOptions:
            studentIds:
            - studentIds
            - studentIds
      properties:
        announcements:
          description: Announcement items that match the request.
          items:
            $ref: '#/components/schemas/Announcement'
          title: announcements
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListAnnouncementsResponse
      type: object
    ListCourseAliasesResponse:
      description: Response when listing course aliases.
      example:
        aliases:
        - alias: alias
        - alias: alias
        nextPageToken: nextPageToken
      properties:
        aliases:
          description: The course aliases.
          items:
            $ref: '#/components/schemas/CourseAlias'
          title: aliases
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListCourseAliasesResponse
      type: object
    ListCourseWorkMaterialResponse:
      description: Response when listing course work material.
      example:
        nextPageToken: nextPageToken
        courseWorkMaterial:
        - creatorUserId: creatorUserId
          scheduledTime: scheduledTime
          creationTime: creationTime
          description: description
          updateTime: updateTime
          title: title
          topicId: topicId
          materials:
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          alternateLink: alternateLink
          id: id
          state: COURSEWORK_MATERIAL_STATE_UNSPECIFIED
          assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
          courseId: courseId
          individualStudentsOptions:
            studentIds:
            - studentIds
            - studentIds
        - creatorUserId: creatorUserId
          scheduledTime: scheduledTime
          creationTime: creationTime
          description: description
          updateTime: updateTime
          title: title
          topicId: topicId
          materials:
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          alternateLink: alternateLink
          id: id
          state: COURSEWORK_MATERIAL_STATE_UNSPECIFIED
          assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
          courseId: courseId
          individualStudentsOptions:
            studentIds:
            - studentIds
            - studentIds
      properties:
        courseWorkMaterial:
          description: Course work material items that match the request.
          items:
            $ref: '#/components/schemas/CourseWorkMaterial'
          title: courseWorkMaterial
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListCourseWorkMaterialResponse
      type: object
    ListCourseWorkResponse:
      description: Response when listing course work.
      example:
        courseWork:
        - creatorUserId: creatorUserId
          scheduledTime: scheduledTime
          creationTime: creationTime
          multipleChoiceQuestion:
            choices:
            - choices
            - choices
          submissionModificationMode: SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
          assignment:
            studentWorkFolder:
              alternateLink: alternateLink
              id: id
              title: title
          dueDate:
            month: 6
            year: 1
            day: 0
          description: description
          updateTime: updateTime
          dueTime:
            hours: 5
            seconds: 7
            nanos: 2
            minutes: 5
          title: title
          topicId: topicId
          materials:
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          maxPoints: 9.301444243932576
          workType: COURSE_WORK_TYPE_UNSPECIFIED
          alternateLink: alternateLink
          id: id
          state: COURSE_WORK_STATE_UNSPECIFIED
          assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
          courseId: courseId
          gradeCategory:
            defaultGradeDenominator: 0
            name: name
            weight: 6
            id: id
          associatedWithDeveloper: true
          individualStudentsOptions:
            studentIds:
            - studentIds
            - studentIds
        - creatorUserId: creatorUserId
          scheduledTime: scheduledTime
          creationTime: creationTime
          multipleChoiceQuestion:
            choices:
            - choices
            - choices
          submissionModificationMode: SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
          assignment:
            studentWorkFolder:
              alternateLink: alternateLink
              id: id
              title: title
          dueDate:
            month: 6
            year: 1
            day: 0
          description: description
          updateTime: updateTime
          dueTime:
            hours: 5
            seconds: 7
            nanos: 2
            minutes: 5
          title: title
          topicId: topicId
          materials:
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              shareMode: UNKNOWN_SHARE_MODE
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            youtubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          maxPoints: 9.301444243932576
          workType: COURSE_WORK_TYPE_UNSPECIFIED
          alternateLink: alternateLink
          id: id
          state: COURSE_WORK_STATE_UNSPECIFIED
          assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
          courseId: courseId
          gradeCategory:
            defaultGradeDenominator: 0
            name: name
            weight: 6
            id: id
          associatedWithDeveloper: true
          individualStudentsOptions:
            studentIds:
            - studentIds
            - studentIds
        nextPageToken: nextPageToken
      properties:
        courseWork:
          description: Course work items that match the request.
          items:
            $ref: '#/components/schemas/CourseWork'
          title: courseWork
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListCourseWorkResponse
      type: object
    ListCoursesResponse:
      description: Response when listing courses.
      example:
        courses:
        - courseGroupEmail: courseGroupEmail
          creationTime: creationTime
          courseMaterialSets:
          - materials:
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            title: title
          - materials:
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            title: title
          description: description
          guardiansEnabled: true
          section: section
          updateTime: updateTime
          enrollmentCode: enrollmentCode
          ownerId: ownerId
          room: room
          descriptionHeading: descriptionHeading
          calendarId: calendarId
          courseState: COURSE_STATE_UNSPECIFIED
          name: name
          teacherGroupEmail: teacherGroupEmail
          alternateLink: alternateLink
          id: id
          gradebookSettings:
            calculationType: CALCULATION_TYPE_UNSPECIFIED
            displaySetting: DISPLAY_SETTING_UNSPECIFIED
            gradeCategories:
            - defaultGradeDenominator: 0
              name: name
              weight: 6
              id: id
            - defaultGradeDenominator: 0
              name: name
              weight: 6
              id: id
          teacherFolder:
            alternateLink: alternateLink
            id: id
            title: title
        - courseGroupEmail: courseGroupEmail
          creationTime: creationTime
          courseMaterialSets:
          - materials:
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            title: title
          - materials:
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            title: title
          description: description
          guardiansEnabled: true
          section: section
          updateTime: updateTime
          enrollmentCode: enrollmentCode
          ownerId: ownerId
          room: room
          descriptionHeading: descriptionHeading
          calendarId: calendarId
          courseState: COURSE_STATE_UNSPECIFIED
          name: name
          teacherGroupEmail: teacherGroupEmail
          alternateLink: alternateLink
          id: id
          gradebookSettings:
            calculationType: CALCULATION_TYPE_UNSPECIFIED
            displaySetting: DISPLAY_SETTING_UNSPECIFIED
            gradeCategories:
            - defaultGradeDenominator: 0
              name: name
              weight: 6
              id: id
            - defaultGradeDenominator: 0
              name: name
              weight: 6
              id: id
          teacherFolder:
            alternateLink: alternateLink
            id: id
            title: title
        nextPageToken: nextPageToken
      properties:
        courses:
          description: Courses that match the list request.
          items:
            $ref: '#/components/schemas/Course'
          title: courses
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListCoursesResponse
      type: object
    ListGuardianInvitationsResponse:
      description: Response when listing guardian invitations.
      example:
        guardianInvitations:
        - invitedEmailAddress: invitedEmailAddress
          studentId: studentId
          creationTime: creationTime
          invitationId: invitationId
          state: GUARDIAN_INVITATION_STATE_UNSPECIFIED
        - invitedEmailAddress: invitedEmailAddress
          studentId: studentId
          creationTime: creationTime
          invitationId: invitationId
          state: GUARDIAN_INVITATION_STATE_UNSPECIFIED
        nextPageToken: nextPageToken
      properties:
        guardianInvitations:
          description: Guardian invitations that matched the list request.
          items:
            $ref: '#/components/schemas/GuardianInvitation'
          title: guardianInvitations
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListGuardianInvitationsResponse
      type: object
    ListGuardiansResponse:
      description: Response when listing guardians.
      example:
        nextPageToken: nextPageToken
        guardians:
        - invitedEmailAddress: invitedEmailAddress
          studentId: studentId
          guardianId: guardianId
          guardianProfile:
            photoUrl: photoUrl
            emailAddress: emailAddress
            permissions:
            - permission: PERMISSION_UNSPECIFIED
            - permission: PERMISSION_UNSPECIFIED
            name:
              familyName: familyName
              givenName: givenName
              fullName: fullName
            id: id
            verifiedTeacher: true
        - invitedEmailAddress: invitedEmailAddress
          studentId: studentId
          guardianId: guardianId
          guardianProfile:
            photoUrl: photoUrl
            emailAddress: emailAddress
            permissions:
            - permission: PERMISSION_UNSPECIFIED
            - permission: PERMISSION_UNSPECIFIED
            name:
              familyName: familyName
              givenName: givenName
              fullName: fullName
            id: id
            verifiedTeacher: true
      properties:
        guardians:
          description: Guardians on this page of results that met the criteria specified
            in the request.
          items:
            $ref: '#/components/schemas/Guardian'
          title: guardians
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListGuardiansResponse
      type: object
    ListInvitationsResponse:
      description: Response when listing invitations.
      example:
        invitations:
        - role: COURSE_ROLE_UNSPECIFIED
          id: id
          courseId: courseId
          userId: userId
        - role: COURSE_ROLE_UNSPECIFIED
          id: id
          courseId: courseId
          userId: userId
        nextPageToken: nextPageToken
      properties:
        invitations:
          description: Invitations that match the list request.
          items:
            $ref: '#/components/schemas/Invitation'
          title: invitations
          type: array
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
      title: ListInvitationsResponse
      type: object
    ListStudentSubmissionsResponse:
      description: Response when listing student submissions.
      example:
        studentSubmissions:
        - creationTime: creationTime
          multipleChoiceSubmission:
            answer: answer
          updateTime: updateTime
          courseWorkId: courseWorkId
          userId: userId
          courseWorkType: COURSE_WORK_TYPE_UNSPECIFIED
          draftGrade: 6.027456183070403
          shortAnswerSubmission:
            answer: answer
          late: true
          assignedGrade: 0.8008281904610115
          alternateLink: alternateLink
          id: id
          state: SUBMISSION_STATE_UNSPECIFIED
          submissionHistory:
          - stateHistory:
              actorUserId: actorUserId
              stateTimestamp: stateTimestamp
              state: STATE_UNSPECIFIED
            gradeHistory:
              gradeTimestamp: gradeTimestamp
              actorUserId: actorUserId
              pointsEarned: 5.962133916683182
              maxPoints: 1.4658129805029452
              gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
          - stateHistory:
              actorUserId: actorUserId
              stateTimestamp: stateTimestamp
              state: STATE_UNSPECIFIED
            gradeHistory:
              gradeTimestamp: gradeTimestamp
              actorUserId: actorUserId
              pointsEarned: 5.962133916683182
              maxPoints: 1.4658129805029452
              gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
          courseId: courseId
          assignmentSubmission:
            attachments:
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
          associatedWithDeveloper: true
        - creationTime: creationTime
          multipleChoiceSubmission:
            answer: answer
          updateTime: updateTime
          courseWorkId: courseWorkId
          userId: userId
          courseWorkType: COURSE_WORK_TYPE_UNSPECIFIED
          draftGrade: 6.027456183070403
          shortAnswerSubmission:
            answer: answer
          late: true
          assignedGrade: 0.8008281904610115
          alternateLink: alternateLink
          id: id
          state: SUBMISSION_STATE_UNSPECIFIED
          submissionHistory:
          - stateHistory:
              actorUserId: actorUserId
              stateTimestamp: stateTimestamp
              state: STATE_UNSPECIFIED
            gradeHistory:
              gradeTimestamp: gradeTimestamp
              actorUserId: actorUserId
              pointsEarned: 5.962133916683182
              maxPoints: 1.4658129805029452
              gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
          - stateHistory:
              actorUserId: actorUserId
              stateTimestamp: stateTimestamp
              state: STATE_UNSPECIFIED
            gradeHistory:
              gradeTimestamp: gradeTimestamp
              actorUserId: actorUserId
              pointsEarned: 5.962133916683182
              maxPoints: 1.4658129805029452
              gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
          courseId: courseId
          assignmentSubmission:
            attachments:
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
            - youTubeVideo:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
              form:
                responseUrl: responseUrl
                formUrl: formUrl
                title: title
                thumbnailUrl: thumbnailUrl
              link:
                title: title
                url: url
                thumbnailUrl: thumbnailUrl
              driveFile:
                alternateLink: alternateLink
                id: id
                title: title
                thumbnailUrl: thumbnailUrl
          associatedWithDeveloper: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
        studentSubmissions:
          description: Student work that matches the request.
          items:
            $ref: '#/components/schemas/StudentSubmission'
          title: studentSubmissions
          type: array
      title: ListStudentSubmissionsResponse
      type: object
    ListStudentsResponse:
      description: Response when listing students.
      example:
        nextPageToken: nextPageToken
        students:
        - profile:
            photoUrl: photoUrl
            emailAddress: emailAddress
            permissions:
            - permission: PERMISSION_UNSPECIFIED
            - permission: PERMISSION_UNSPECIFIED
            name:
              familyName: familyName
              givenName: givenName
              fullName: fullName
            id: id
            verifiedTeacher: true
          studentWorkFolder:
            alternateLink: alternateLink
            id: id
            title: title
          courseId: courseId
          userId: userId
        - profile:
            photoUrl: photoUrl
            emailAddress: emailAddress
            permissions:
            - permission: PERMISSION_UNSPECIFIED
            - permission: PERMISSION_UNSPECIFIED
            name:
              familyName: familyName
              givenName: givenName
              fullName: fullName
            id: id
            verifiedTeacher: true
          studentWorkFolder:
            alternateLink: alternateLink
            id: id
            title: title
          courseId: courseId
          userId: userId
      properties:
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
        students:
          description: Students who match the list request.
          items:
            $ref: '#/components/schemas/Student'
          title: students
          type: array
      title: ListStudentsResponse
      type: object
    ListTeachersResponse:
      description: Response when listing teachers.
      example:
        nextPageToken: nextPageToken
        teachers:
        - profile:
            photoUrl: photoUrl
            emailAddress: emailAddress
            permissions:
            - permission: PERMISSION_UNSPECIFIED
            - permission: PERMISSION_UNSPECIFIED
            name:
              familyName: familyName
              givenName: givenName
              fullName: fullName
            id: id
            verifiedTeacher: true
          courseId: courseId
          userId: userId
        - profile:
            photoUrl: photoUrl
            emailAddress: emailAddress
            permissions:
            - permission: PERMISSION_UNSPECIFIED
            - permission: PERMISSION_UNSPECIFIED
            name:
              familyName: familyName
              givenName: givenName
              fullName: fullName
            id: id
            verifiedTeacher: true
          courseId: courseId
          userId: userId
      properties:
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
        teachers:
          description: Teachers who match the list request.
          items:
            $ref: '#/components/schemas/Teacher'
          title: teachers
          type: array
      title: ListTeachersResponse
      type: object
    ListTopicResponse:
      description: Response when listing topics.
      example:
        nextPageToken: nextPageToken
        topic:
        - topicId: topicId
          name: name
          updateTime: updateTime
          courseId: courseId
        - topicId: topicId
          name: name
          updateTime: updateTime
          courseId: courseId
      properties:
        nextPageToken:
          description: "Token identifying the next page of results to return. If empty,\
            \ no further results are available."
          title: nextPageToken
          type: string
        topic:
          description: Topic items that match the request.
          items:
            $ref: '#/components/schemas/Topic'
          title: topic
          type: array
      title: ListTopicResponse
      type: object
    Material:
      description: "Material attached to course work. When creating attachments, setting\
        \ the `form` field is not supported."
      example:
        form:
          responseUrl: responseUrl
          formUrl: formUrl
          title: title
          thumbnailUrl: thumbnailUrl
        link:
          title: title
          url: url
          thumbnailUrl: thumbnailUrl
        driveFile:
          shareMode: UNKNOWN_SHARE_MODE
          driveFile:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        youtubeVideo:
          alternateLink: alternateLink
          id: id
          title: title
          thumbnailUrl: thumbnailUrl
      properties:
        driveFile:
          $ref: '#/components/schemas/SharedDriveFile'
        form:
          $ref: '#/components/schemas/Form'
        link:
          $ref: '#/components/schemas/Link'
        youtubeVideo:
          $ref: '#/components/schemas/YouTubeVideo'
      title: Material
      type: object
    ModifyAnnouncementAssigneesRequest:
      description: Request to modify assignee mode and options of an announcement.
      example:
        modifyIndividualStudentsOptions:
          removeStudentIds:
          - removeStudentIds
          - removeStudentIds
          addStudentIds:
          - addStudentIds
          - addStudentIds
        assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
      properties:
        assigneeMode:
          description: Mode of the announcement describing whether it is accessible
            by all students or specified individual students.
          enum:
          - ASSIGNEE_MODE_UNSPECIFIED
          - ALL_STUDENTS
          - INDIVIDUAL_STUDENTS
          title: assigneeMode
          type: string
        modifyIndividualStudentsOptions:
          $ref: '#/components/schemas/ModifyIndividualStudentsOptions'
      title: ModifyAnnouncementAssigneesRequest
      type: object
    ModifyAttachmentsRequest:
      description: Request to modify the attachments of a student submission.
      example:
        addAttachments:
        - youTubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
          form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
        - youTubeVideo:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
          form:
            responseUrl: responseUrl
            formUrl: formUrl
            title: title
            thumbnailUrl: thumbnailUrl
          link:
            title: title
            url: url
            thumbnailUrl: thumbnailUrl
          driveFile:
            alternateLink: alternateLink
            id: id
            title: title
            thumbnailUrl: thumbnailUrl
      properties:
        addAttachments:
          description: Attachments to add. A student submission may not have more
            than 20 attachments. Form attachments are not supported.
          items:
            $ref: '#/components/schemas/Attachment'
          title: addAttachments
          type: array
      title: ModifyAttachmentsRequest
      type: object
    ModifyCourseWorkAssigneesRequest:
      description: Request to modify assignee mode and options of a coursework.
      example:
        modifyIndividualStudentsOptions:
          removeStudentIds:
          - removeStudentIds
          - removeStudentIds
          addStudentIds:
          - addStudentIds
          - addStudentIds
        assigneeMode: ASSIGNEE_MODE_UNSPECIFIED
      properties:
        assigneeMode:
          description: Mode of the coursework describing whether it will be assigned
            to all students or specified individual students.
          enum:
          - ASSIGNEE_MODE_UNSPECIFIED
          - ALL_STUDENTS
          - INDIVIDUAL_STUDENTS
          title: assigneeMode
          type: string
        modifyIndividualStudentsOptions:
          $ref: '#/components/schemas/ModifyIndividualStudentsOptions'
      title: ModifyCourseWorkAssigneesRequest
      type: object
    ModifyIndividualStudentsOptions:
      description: Contains fields to add or remove students from a course work or
        announcement where the `assigneeMode` is set to `INDIVIDUAL_STUDENTS`.
      example:
        removeStudentIds:
        - removeStudentIds
        - removeStudentIds
        addStudentIds:
        - addStudentIds
        - addStudentIds
      properties:
        addStudentIds:
          description: IDs of students to be added as having access to this coursework/announcement.
          items:
            type: string
          title: addStudentIds
          type: array
        removeStudentIds:
          description: IDs of students to be removed from having access to this coursework/announcement.
          items:
            type: string
          title: removeStudentIds
          type: array
      title: ModifyIndividualStudentsOptions
      type: object
    MultipleChoiceQuestion:
      description: Additional details for multiple-choice questions.
      example:
        choices:
        - choices
        - choices
      properties:
        choices:
          description: Possible choices.
          items:
            type: string
          title: choices
          type: array
      title: MultipleChoiceQuestion
      type: object
    MultipleChoiceSubmission:
      description: Student work for a multiple-choice question.
      example:
        answer: answer
      properties:
        answer:
          description: Student's select choice.
          title: answer
          type: string
      title: MultipleChoiceSubmission
      type: object
    Name:
      description: Details of the user's name.
      example:
        familyName: familyName
        givenName: givenName
        fullName: fullName
      properties:
        familyName:
          description: The user's last name. Read-only.
          title: familyName
          type: string
        fullName:
          description: The user's full name formed by concatenating the first and
            last name values. Read-only.
          title: fullName
          type: string
        givenName:
          description: The user's first name. Read-only.
          title: givenName
          type: string
      title: Name
      type: object
    ReclaimStudentSubmissionRequest:
      description: Request to reclaim a student submission.
      properties: {}
      type: object
    Registration:
      description: An instruction to Classroom to send notifications from the `feed`
        to the provided destination.
      example:
        feed:
          feedType: FEED_TYPE_UNSPECIFIED
          courseRosterChangesInfo:
            courseId: courseId
          courseWorkChangesInfo:
            courseId: courseId
        cloudPubsubTopic:
          topicName: topicName
        expiryTime: expiryTime
        registrationId: registrationId
      properties:
        cloudPubsubTopic:
          $ref: '#/components/schemas/CloudPubsubTopic'
        expiryTime:
          description: The time until which the `Registration` is effective. This
            is a read-only field assigned by the server.
          format: google-datetime
          title: expiryTime
          type: string
        feed:
          $ref: '#/components/schemas/Feed'
        registrationId:
          description: A server-generated unique identifier for this `Registration`.
            Read-only.
          title: registrationId
          type: string
      title: Registration
      type: object
    ReturnStudentSubmissionRequest:
      description: Request to return a student submission.
      properties: {}
      type: object
    SharedDriveFile:
      description: Drive file that is used as material for course work.
      example:
        shareMode: UNKNOWN_SHARE_MODE
        driveFile:
          alternateLink: alternateLink
          id: id
          title: title
          thumbnailUrl: thumbnailUrl
      properties:
        driveFile:
          $ref: '#/components/schemas/DriveFile'
        shareMode:
          description: Mechanism by which students access the Drive item.
          enum:
          - UNKNOWN_SHARE_MODE
          - VIEW
          - EDIT
          - STUDENT_COPY
          title: shareMode
          type: string
      title: SharedDriveFile
      type: object
    ShortAnswerSubmission:
      description: Student work for a short answer question.
      example:
        answer: answer
      properties:
        answer:
          description: Student response to a short-answer question.
          title: answer
          type: string
      title: ShortAnswerSubmission
      type: object
    StateHistory:
      description: The history of each state this submission has been in.
      example:
        actorUserId: actorUserId
        stateTimestamp: stateTimestamp
        state: STATE_UNSPECIFIED
      properties:
        actorUserId:
          description: The teacher or student who made the change.
          title: actorUserId
          type: string
        state:
          description: The workflow pipeline stage.
          enum:
          - STATE_UNSPECIFIED
          - CREATED
          - TURNED_IN
          - RETURNED
          - RECLAIMED_BY_STUDENT
          - STUDENT_EDITED_AFTER_TURN_IN
          title: state
          type: string
        stateTimestamp:
          description: When the submission entered this state.
          format: google-datetime
          title: stateTimestamp
          type: string
      title: StateHistory
      type: object
    Student:
      description: Student in a course.
      example:
        profile:
          photoUrl: photoUrl
          emailAddress: emailAddress
          permissions:
          - permission: PERMISSION_UNSPECIFIED
          - permission: PERMISSION_UNSPECIFIED
          name:
            familyName: familyName
            givenName: givenName
            fullName: fullName
          id: id
          verifiedTeacher: true
        studentWorkFolder:
          alternateLink: alternateLink
          id: id
          title: title
        courseId: courseId
        userId: userId
      properties:
        courseId:
          description: Identifier of the course. Read-only.
          title: courseId
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        studentWorkFolder:
          $ref: '#/components/schemas/DriveFolder'
        userId:
          description: "Identifier of the user. When specified as a parameter of a\
            \ request, this identifier can be one of the following: * the numeric\
            \ identifier for the user * the email address of the user * the string\
            \ literal `\"me\"`, indicating the requesting user"
          title: userId
          type: string
      title: Student
      type: object
    StudentSubmission:
      description: Student submission for course work. `StudentSubmission` items are
        generated when a `CourseWork` item is created. Student submissions that have
        never been accessed (i.e. with `state` = NEW) may not have a creation time
        or update time.
      example:
        creationTime: creationTime
        multipleChoiceSubmission:
          answer: answer
        updateTime: updateTime
        courseWorkId: courseWorkId
        userId: userId
        courseWorkType: COURSE_WORK_TYPE_UNSPECIFIED
        draftGrade: 6.027456183070403
        shortAnswerSubmission:
          answer: answer
        late: true
        assignedGrade: 0.8008281904610115
        alternateLink: alternateLink
        id: id
        state: SUBMISSION_STATE_UNSPECIFIED
        submissionHistory:
        - stateHistory:
            actorUserId: actorUserId
            stateTimestamp: stateTimestamp
            state: STATE_UNSPECIFIED
          gradeHistory:
            gradeTimestamp: gradeTimestamp
            actorUserId: actorUserId
            pointsEarned: 5.962133916683182
            maxPoints: 1.4658129805029452
            gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
        - stateHistory:
            actorUserId: actorUserId
            stateTimestamp: stateTimestamp
            state: STATE_UNSPECIFIED
          gradeHistory:
            gradeTimestamp: gradeTimestamp
            actorUserId: actorUserId
            pointsEarned: 5.962133916683182
            maxPoints: 1.4658129805029452
            gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
        courseId: courseId
        assignmentSubmission:
          attachments:
          - youTubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
            form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
          - youTubeVideo:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
            form:
              responseUrl: responseUrl
              formUrl: formUrl
              title: title
              thumbnailUrl: thumbnailUrl
            link:
              title: title
              url: url
              thumbnailUrl: thumbnailUrl
            driveFile:
              alternateLink: alternateLink
              id: id
              title: title
              thumbnailUrl: thumbnailUrl
        associatedWithDeveloper: true
      properties:
        alternateLink:
          description: Absolute link to the submission in the Classroom web UI. Read-only.
          title: alternateLink
          type: string
        assignedGrade:
          description: "Optional grade. If unset, no grade was set. This value must\
            \ be non-negative. Decimal (that is, non-integer) values are allowed,\
            \ but are rounded to two decimal places. This may be modified only by\
            \ course teachers."
          format: double
          title: assignedGrade
          type: number
        assignmentSubmission:
          $ref: '#/components/schemas/AssignmentSubmission'
        associatedWithDeveloper:
          description: Whether this student submission is associated with the Developer
            Console project making the request. See CreateCourseWork for more details.
            Read-only.
          title: associatedWithDeveloper
          type: boolean
        courseId:
          description: Identifier of the course. Read-only.
          title: courseId
          type: string
        courseWorkId:
          description: Identifier for the course work this corresponds to. Read-only.
          title: courseWorkId
          type: string
        courseWorkType:
          description: Type of course work this submission is for. Read-only.
          enum:
          - COURSE_WORK_TYPE_UNSPECIFIED
          - ASSIGNMENT
          - SHORT_ANSWER_QUESTION
          - MULTIPLE_CHOICE_QUESTION
          title: courseWorkType
          type: string
        creationTime:
          description: Creation time of this submission. This may be unset if the
            student has not accessed this item. Read-only.
          format: google-datetime
          title: creationTime
          type: string
        draftGrade:
          description: "Optional pending grade. If unset, no grade was set. This value\
            \ must be non-negative. Decimal (that is, non-integer) values are allowed,\
            \ but are rounded to two decimal places. This is only visible to and modifiable\
            \ by course teachers."
          format: double
          title: draftGrade
          type: number
        id:
          description: Classroom-assigned Identifier for the student submission. This
            is unique among submissions for the relevant course work. Read-only.
          title: id
          type: string
        late:
          description: Whether this submission is late. Read-only.
          title: late
          type: boolean
        multipleChoiceSubmission:
          $ref: '#/components/schemas/MultipleChoiceSubmission'
        shortAnswerSubmission:
          $ref: '#/components/schemas/ShortAnswerSubmission'
        state:
          description: State of this submission. Read-only.
          enum:
          - SUBMISSION_STATE_UNSPECIFIED
          - NEW
          - CREATED
          - TURNED_IN
          - RETURNED
          - RECLAIMED_BY_STUDENT
          title: state
          type: string
        submissionHistory:
          description: The history of the submission (includes state and grade histories).
            Read-only.
          items:
            $ref: '#/components/schemas/SubmissionHistory'
          title: submissionHistory
          type: array
        updateTime:
          description: Last update time of this submission. This may be unset if the
            student has not accessed this item. Read-only.
          format: google-datetime
          title: updateTime
          type: string
        userId:
          description: Identifier for the student that owns this submission. Read-only.
          title: userId
          type: string
      title: StudentSubmission
      type: object
    SubmissionHistory:
      description: The history of the submission. This currently includes state and
        grade histories.
      example:
        stateHistory:
          actorUserId: actorUserId
          stateTimestamp: stateTimestamp
          state: STATE_UNSPECIFIED
        gradeHistory:
          gradeTimestamp: gradeTimestamp
          actorUserId: actorUserId
          pointsEarned: 5.962133916683182
          maxPoints: 1.4658129805029452
          gradeChangeType: UNKNOWN_GRADE_CHANGE_TYPE
      properties:
        gradeHistory:
          $ref: '#/components/schemas/GradeHistory'
        stateHistory:
          $ref: '#/components/schemas/StateHistory'
      title: SubmissionHistory
      type: object
    Teacher:
      description: Teacher of a course.
      example:
        profile:
          photoUrl: photoUrl
          emailAddress: emailAddress
          permissions:
          - permission: PERMISSION_UNSPECIFIED
          - permission: PERMISSION_UNSPECIFIED
          name:
            familyName: familyName
            givenName: givenName
            fullName: fullName
          id: id
          verifiedTeacher: true
        courseId: courseId
        userId: userId
      properties:
        courseId:
          description: Identifier of the course. Read-only.
          title: courseId
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        userId:
          description: "Identifier of the user. When specified as a parameter of a\
            \ request, this identifier can be one of the following: * the numeric\
            \ identifier for the user * the email address of the user * the string\
            \ literal `\"me\"`, indicating the requesting user"
          title: userId
          type: string
      title: Teacher
      type: object
    TimeOfDay:
      description: Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap seconds.
        Related types are google.type.Date and `google.protobuf.Timestamp`.
      example:
        hours: 5
        seconds: 7
        nanos: 2
        minutes: 5
      properties:
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An
            API may choose to allow the value "24:00:00" for scenarios like business
            closing time.
          format: int32
          title: hours
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          title: minutes
          type: integer
        nanos:
          description: "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
          format: int32
          title: nanos
          type: integer
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to
            59. An API may allow the value 60 if it allows leap-seconds.
          format: int32
          title: seconds
          type: integer
      title: TimeOfDay
      type: object
    Topic:
      description: Topic created by a teacher for the course
      example:
        topicId: topicId
        name: name
        updateTime: updateTime
        courseId: courseId
      properties:
        courseId:
          description: Identifier of the course. Read-only.
          title: courseId
          type: string
        name:
          description: "The name of the topic, generated by the user. Leading and\
            \ trailing whitespaces, if any, are trimmed. Also, multiple consecutive\
            \ whitespaces are collapsed into one inside the name. The result must\
            \ be a non-empty string. Topic names are case sensitive, and must be no\
            \ longer than 100 characters."
          title: name
          type: string
        topicId:
          description: Unique identifier for the topic. Read-only.
          title: topicId
          type: string
        updateTime:
          description: The time the topic was last updated by the system. Read-only.
          format: google-datetime
          title: updateTime
          type: string
      title: Topic
      type: object
    TurnInStudentSubmissionRequest:
      description: Request to turn in a student submission.
      properties: {}
      type: object
    UserProfile:
      description: Global information for a user.
      example:
        photoUrl: photoUrl
        emailAddress: emailAddress
        permissions:
        - permission: PERMISSION_UNSPECIFIED
        - permission: PERMISSION_UNSPECIFIED
        name:
          familyName: familyName
          givenName: givenName
          fullName: fullName
        id: id
        verifiedTeacher: true
      properties:
        emailAddress:
          description: Email address of the user. Must request `https://www.googleapis.com/auth/classroom.profile.emails`
            scope for this field to be populated in a response body. Read-only.
          title: emailAddress
          type: string
        id:
          description: Identifier of the user. Read-only.
          title: id
          type: string
        name:
          $ref: '#/components/schemas/Name'
        permissions:
          description: Global permissions of the user. Read-only.
          items:
            $ref: '#/components/schemas/GlobalPermission'
          title: permissions
          type: array
        photoUrl:
          description: URL of user's profile photo. Must request `https://www.googleapis.com/auth/classroom.profile.photos`
            scope for this field to be populated in a response body. Read-only.
          title: photoUrl
          type: string
        verifiedTeacher:
          description: Represents whether a Google Workspace for Education user's
            domain administrator has explicitly verified them as being a teacher.
            This field is always false if the user is not a member of a Google Workspace
            for Education domain. Read-only
          title: verifiedTeacher
          type: boolean
      title: UserProfile
      type: object
    YouTubeVideo:
      description: YouTube video item.
      example:
        alternateLink: alternateLink
        id: id
        title: title
        thumbnailUrl: thumbnailUrl
      properties:
        alternateLink:
          description: URL that can be used to view the YouTube video. Read-only.
          title: alternateLink
          type: string
        id:
          description: YouTube API resource ID.
          title: id
          type: string
        thumbnailUrl:
          description: URL of a thumbnail image of the YouTube video. Read-only.
          title: thumbnailUrl
          type: string
        title:
          description: Title of the YouTube video. Read-only.
          title: title
          type: string
      title: YouTubeVideo
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/classroom.announcements: View and manage
              announcements in Google Classroom
            https://www.googleapis.com/auth/classroom.announcements.readonly: View
              announcements in Google Classroom
            https://www.googleapis.com/auth/classroom.courses: "See, edit, create,\
              \ and permanently delete your Google Classroom classes"
            https://www.googleapis.com/auth/classroom.courses.readonly: View your
              Google Classroom classes
            https://www.googleapis.com/auth/classroom.coursework.me: "See, create\
              \ and edit coursework items including assignments, questions, and grades"
            https://www.googleapis.com/auth/classroom.coursework.me.readonly: View
              your course work and grades in Google Classroom
            https://www.googleapis.com/auth/classroom.coursework.students: Manage
              course work and grades for students in the Google Classroom classes
              you teach and view the course work and grades for classes you administer
            https://www.googleapis.com/auth/classroom.coursework.students.readonly: View
              course work and grades for students in the Google Classroom classes
              you teach or administer
            https://www.googleapis.com/auth/classroom.courseworkmaterials: "See, edit,\
              \ and create classwork materials in Google Classroom"
            https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly: See
              all classwork materials for your Google Classroom classes
            https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly: View
              your Google Classroom guardians
            https://www.googleapis.com/auth/classroom.guardianlinks.students: View
              and manage guardians for students in your Google Classroom classes
            https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly: View
              guardians for students in your Google Classroom classes
            https://www.googleapis.com/auth/classroom.profile.emails: View the email
              addresses of people in your classes
            https://www.googleapis.com/auth/classroom.profile.photos: View the profile
              photos of people in your classes
            https://www.googleapis.com/auth/classroom.push-notifications: Receive
              notifications about your Google Classroom data
            https://www.googleapis.com/auth/classroom.rosters: Manage your Google
              Classroom class rosters
            https://www.googleapis.com/auth/classroom.rosters.readonly: View your
              Google Classroom class rosters
            https://www.googleapis.com/auth/classroom.student-submissions.me.readonly: View
              your course work and grades in Google Classroom
            https://www.googleapis.com/auth/classroom.student-submissions.students.readonly: View
              course work and grades for students in the Google Classroom classes
              you teach or administer
            https://www.googleapis.com/auth/classroom.topics: "See, create, and edit\
              \ topics in Google Classroom"
            https://www.googleapis.com/auth/classroom.topics.readonly: View topics
              in Google Classroom
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/classroom.announcements: View and manage
              announcements in Google Classroom
            https://www.googleapis.com/auth/classroom.announcements.readonly: View
              announcements in Google Classroom
            https://www.googleapis.com/auth/classroom.courses: "See, edit, create,\
              \ and permanently delete your Google Classroom classes"
            https://www.googleapis.com/auth/classroom.courses.readonly: View your
              Google Classroom classes
            https://www.googleapis.com/auth/classroom.coursework.me: "See, create\
              \ and edit coursework items including assignments, questions, and grades"
            https://www.googleapis.com/auth/classroom.coursework.me.readonly: View
              your course work and grades in Google Classroom
            https://www.googleapis.com/auth/classroom.coursework.students: Manage
              course work and grades for students in the Google Classroom classes
              you teach and view the course work and grades for classes you administer
            https://www.googleapis.com/auth/classroom.coursework.students.readonly: View
              course work and grades for students in the Google Classroom classes
              you teach or administer
            https://www.googleapis.com/auth/classroom.courseworkmaterials: "See, edit,\
              \ and create classwork materials in Google Classroom"
            https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly: See
              all classwork materials for your Google Classroom classes
            https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly: View
              your Google Classroom guardians
            https://www.googleapis.com/auth/classroom.guardianlinks.students: View
              and manage guardians for students in your Google Classroom classes
            https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly: View
              guardians for students in your Google Classroom classes
            https://www.googleapis.com/auth/classroom.profile.emails: View the email
              addresses of people in your classes
            https://www.googleapis.com/auth/classroom.profile.photos: View the profile
              photos of people in your classes
            https://www.googleapis.com/auth/classroom.push-notifications: Receive
              notifications about your Google Classroom data
            https://www.googleapis.com/auth/classroom.rosters: Manage your Google
              Classroom class rosters
            https://www.googleapis.com/auth/classroom.rosters.readonly: View your
              Google Classroom class rosters
            https://www.googleapis.com/auth/classroom.student-submissions.me.readonly: View
              your course work and grades in Google Classroom
            https://www.googleapis.com/auth/classroom.student-submissions.students.readonly: View
              course work and grades for students in the Google Classroom classes
              you teach or administer
            https://www.googleapis.com/auth/classroom.topics: "See, create, and edit\
              \ topics in Google Classroom"
            https://www.googleapis.com/auth/classroom.topics.readonly: View topics
              in Google Classroom
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
