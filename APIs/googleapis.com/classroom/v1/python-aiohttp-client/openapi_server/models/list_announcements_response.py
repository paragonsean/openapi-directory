# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.announcement import Announcement
from openapi_server import util


class ListAnnouncementsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, announcements: List[Announcement]=None, next_page_token: str=None):
        """ListAnnouncementsResponse - a model defined in OpenAPI

        :param announcements: The announcements of this ListAnnouncementsResponse.
        :param next_page_token: The next_page_token of this ListAnnouncementsResponse.
        """
        self.openapi_types = {
            'announcements': List[Announcement],
            'next_page_token': str
        }

        self.attribute_map = {
            'announcements': 'announcements',
            'next_page_token': 'nextPageToken'
        }

        self._announcements = announcements
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAnnouncementsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAnnouncementsResponse of this ListAnnouncementsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def announcements(self):
        """Gets the announcements of this ListAnnouncementsResponse.

        Announcement items that match the request.

        :return: The announcements of this ListAnnouncementsResponse.
        :rtype: List[Announcement]
        """
        return self._announcements

    @announcements.setter
    def announcements(self, announcements):
        """Sets the announcements of this ListAnnouncementsResponse.

        Announcement items that match the request.

        :param announcements: The announcements of this ListAnnouncementsResponse.
        :type announcements: List[Announcement]
        """

        self._announcements = announcements

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListAnnouncementsResponse.

        Token identifying the next page of results to return. If empty, no further results are available.

        :return: The next_page_token of this ListAnnouncementsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListAnnouncementsResponse.

        Token identifying the next page of results to return. If empty, no further results are available.

        :param next_page_token: The next_page_token of this ListAnnouncementsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
