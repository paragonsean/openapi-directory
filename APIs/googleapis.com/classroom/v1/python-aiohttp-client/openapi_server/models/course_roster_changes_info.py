# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CourseRosterChangesInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, course_id: str=None):
        """CourseRosterChangesInfo - a model defined in OpenAPI

        :param course_id: The course_id of this CourseRosterChangesInfo.
        """
        self.openapi_types = {
            'course_id': str
        }

        self.attribute_map = {
            'course_id': 'courseId'
        }

        self._course_id = course_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CourseRosterChangesInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CourseRosterChangesInfo of this CourseRosterChangesInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def course_id(self):
        """Gets the course_id of this CourseRosterChangesInfo.

        The `course_id` of the course to subscribe to roster changes for.

        :return: The course_id of this CourseRosterChangesInfo.
        :rtype: str
        """
        return self._course_id

    @course_id.setter
    def course_id(self, course_id):
        """Sets the course_id of this CourseRosterChangesInfo.

        The `course_id` of the course to subscribe to roster changes for.

        :param course_id: The course_id of this CourseRosterChangesInfo.
        :type course_id: str
        """

        self._course_id = course_id
