# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GradeCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_grade_denominator: int=None, id: str=None, name: str=None, weight: int=None):
        """GradeCategory - a model defined in OpenAPI

        :param default_grade_denominator: The default_grade_denominator of this GradeCategory.
        :param id: The id of this GradeCategory.
        :param name: The name of this GradeCategory.
        :param weight: The weight of this GradeCategory.
        """
        self.openapi_types = {
            'default_grade_denominator': int,
            'id': str,
            'name': str,
            'weight': int
        }

        self.attribute_map = {
            'default_grade_denominator': 'defaultGradeDenominator',
            'id': 'id',
            'name': 'name',
            'weight': 'weight'
        }

        self._default_grade_denominator = default_grade_denominator
        self._id = id
        self._name = name
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GradeCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GradeCategory of this GradeCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_grade_denominator(self):
        """Gets the default_grade_denominator of this GradeCategory.

        Default value of denominator. Only applicable when grade calculation type is TOTAL_POINTS.

        :return: The default_grade_denominator of this GradeCategory.
        :rtype: int
        """
        return self._default_grade_denominator

    @default_grade_denominator.setter
    def default_grade_denominator(self, default_grade_denominator):
        """Sets the default_grade_denominator of this GradeCategory.

        Default value of denominator. Only applicable when grade calculation type is TOTAL_POINTS.

        :param default_grade_denominator: The default_grade_denominator of this GradeCategory.
        :type default_grade_denominator: int
        """

        self._default_grade_denominator = default_grade_denominator

    @property
    def id(self):
        """Gets the id of this GradeCategory.

        ID of the grade category.

        :return: The id of this GradeCategory.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GradeCategory.

        ID of the grade category.

        :param id: The id of this GradeCategory.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this GradeCategory.

        Name of the grade category.

        :return: The name of this GradeCategory.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GradeCategory.

        Name of the grade category.

        :param name: The name of this GradeCategory.
        :type name: str
        """

        self._name = name

    @property
    def weight(self):
        """Gets the weight of this GradeCategory.

        The weight of the category average as part of overall average. A weight of 12.34% is represented as 123400 (100% is 1,000,000). The last two digits should always be zero since we use two decimal precision. Only applicable when grade calculation type is WEIGHTED_CATEGORIES.

        :return: The weight of this GradeCategory.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this GradeCategory.

        The weight of the category average as part of overall average. A weight of 12.34% is represented as 123400 (100% is 1,000,000). The last two digits should always be zero since we use two decimal precision. Only applicable when grade calculation type is WEIGHTED_CATEGORIES.

        :param weight: The weight of this GradeCategory.
        :type weight: int
        """

        self._weight = weight
