# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.course import Course
from openapi_server import util


class ListCoursesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, courses: List[Course]=None, next_page_token: str=None):
        """ListCoursesResponse - a model defined in OpenAPI

        :param courses: The courses of this ListCoursesResponse.
        :param next_page_token: The next_page_token of this ListCoursesResponse.
        """
        self.openapi_types = {
            'courses': List[Course],
            'next_page_token': str
        }

        self.attribute_map = {
            'courses': 'courses',
            'next_page_token': 'nextPageToken'
        }

        self._courses = courses
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCoursesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCoursesResponse of this ListCoursesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def courses(self):
        """Gets the courses of this ListCoursesResponse.

        Courses that match the list request.

        :return: The courses of this ListCoursesResponse.
        :rtype: List[Course]
        """
        return self._courses

    @courses.setter
    def courses(self, courses):
        """Sets the courses of this ListCoursesResponse.

        Courses that match the list request.

        :param courses: The courses of this ListCoursesResponse.
        :type courses: List[Course]
        """

        self._courses = courses

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListCoursesResponse.

        Token identifying the next page of results to return. If empty, no further results are available.

        :return: The next_page_token of this ListCoursesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListCoursesResponse.

        Token identifying the next page of results to return. If empty, no further results are available.

        :param next_page_token: The next_page_token of this ListCoursesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
