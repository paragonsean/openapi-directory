# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.topic import Topic
from openapi_server import util


class ListTopicResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, topic: List[Topic]=None):
        """ListTopicResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListTopicResponse.
        :param topic: The topic of this ListTopicResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'topic': List[Topic]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'topic': 'topic'
        }

        self._next_page_token = next_page_token
        self._topic = topic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTopicResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTopicResponse of this ListTopicResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListTopicResponse.

        Token identifying the next page of results to return. If empty, no further results are available.

        :return: The next_page_token of this ListTopicResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListTopicResponse.

        Token identifying the next page of results to return. If empty, no further results are available.

        :param next_page_token: The next_page_token of this ListTopicResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def topic(self):
        """Gets the topic of this ListTopicResponse.

        Topic items that match the request.

        :return: The topic of this ListTopicResponse.
        :rtype: List[Topic]
        """
        return self._topic

    @topic.setter
    def topic(self, topic):
        """Sets the topic of this ListTopicResponse.

        Topic items that match the request.

        :param topic: The topic of this ListTopicResponse.
        :type topic: List[Topic]
        """

        self._topic = topic
