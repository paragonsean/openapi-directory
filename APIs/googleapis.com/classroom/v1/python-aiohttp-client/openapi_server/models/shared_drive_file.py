# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.drive_file import DriveFile
from openapi_server import util


class SharedDriveFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drive_file: DriveFile=None, share_mode: str=None):
        """SharedDriveFile - a model defined in OpenAPI

        :param drive_file: The drive_file of this SharedDriveFile.
        :param share_mode: The share_mode of this SharedDriveFile.
        """
        self.openapi_types = {
            'drive_file': DriveFile,
            'share_mode': str
        }

        self.attribute_map = {
            'drive_file': 'driveFile',
            'share_mode': 'shareMode'
        }

        self._drive_file = drive_file
        self._share_mode = share_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedDriveFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SharedDriveFile of this SharedDriveFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drive_file(self):
        """Gets the drive_file of this SharedDriveFile.


        :return: The drive_file of this SharedDriveFile.
        :rtype: DriveFile
        """
        return self._drive_file

    @drive_file.setter
    def drive_file(self, drive_file):
        """Sets the drive_file of this SharedDriveFile.


        :param drive_file: The drive_file of this SharedDriveFile.
        :type drive_file: DriveFile
        """

        self._drive_file = drive_file

    @property
    def share_mode(self):
        """Gets the share_mode of this SharedDriveFile.

        Mechanism by which students access the Drive item.

        :return: The share_mode of this SharedDriveFile.
        :rtype: str
        """
        return self._share_mode

    @share_mode.setter
    def share_mode(self, share_mode):
        """Sets the share_mode of this SharedDriveFile.

        Mechanism by which students access the Drive item.

        :param share_mode: The share_mode of this SharedDriveFile.
        :type share_mode: str
        """
        allowed_values = ["UNKNOWN_SHARE_MODE", "VIEW", "EDIT", "STUDENT_COPY"]  # noqa: E501
        if share_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `share_mode` ({0}), must be one of {1}"
                .format(share_mode, allowed_values)
            )

        self._share_mode = share_mode
