/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GuardianInvitation model module.
 * @module model/GuardianInvitation
 * @version v1
 */
class GuardianInvitation {
    /**
     * Constructs a new <code>GuardianInvitation</code>.
     * An invitation to become the guardian of a specified user, sent to a specified email address.
     * @alias module:model/GuardianInvitation
     */
    constructor() { 
        
        GuardianInvitation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuardianInvitation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuardianInvitation} obj Optional instance to populate.
     * @return {module:model/GuardianInvitation} The populated <code>GuardianInvitation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuardianInvitation();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'String');
            }
            if (data.hasOwnProperty('invitationId')) {
                obj['invitationId'] = ApiClient.convertToType(data['invitationId'], 'String');
            }
            if (data.hasOwnProperty('invitedEmailAddress')) {
                obj['invitedEmailAddress'] = ApiClient.convertToType(data['invitedEmailAddress'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('studentId')) {
                obj['studentId'] = ApiClient.convertToType(data['studentId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuardianInvitation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuardianInvitation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creationTime'] && !(typeof data['creationTime'] === 'string' || data['creationTime'] instanceof String)) {
            throw new Error("Expected the field `creationTime` to be a primitive type in the JSON string but got " + data['creationTime']);
        }
        // ensure the json data is a string
        if (data['invitationId'] && !(typeof data['invitationId'] === 'string' || data['invitationId'] instanceof String)) {
            throw new Error("Expected the field `invitationId` to be a primitive type in the JSON string but got " + data['invitationId']);
        }
        // ensure the json data is a string
        if (data['invitedEmailAddress'] && !(typeof data['invitedEmailAddress'] === 'string' || data['invitedEmailAddress'] instanceof String)) {
            throw new Error("Expected the field `invitedEmailAddress` to be a primitive type in the JSON string but got " + data['invitedEmailAddress']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['studentId'] && !(typeof data['studentId'] === 'string' || data['studentId'] instanceof String)) {
            throw new Error("Expected the field `studentId` to be a primitive type in the JSON string but got " + data['studentId']);
        }

        return true;
    }


}



/**
 * The time that this invitation was created. Read-only.
 * @member {String} creationTime
 */
GuardianInvitation.prototype['creationTime'] = undefined;

/**
 * Unique identifier for this invitation. Read-only.
 * @member {String} invitationId
 */
GuardianInvitation.prototype['invitationId'] = undefined;

/**
 * Email address that the invitation was sent to. This field is only visible to domain administrators.
 * @member {String} invitedEmailAddress
 */
GuardianInvitation.prototype['invitedEmailAddress'] = undefined;

/**
 * The state that this invitation is in.
 * @member {module:model/GuardianInvitation.StateEnum} state
 */
GuardianInvitation.prototype['state'] = undefined;

/**
 * ID of the student (in standard format)
 * @member {String} studentId
 */
GuardianInvitation.prototype['studentId'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GuardianInvitation['StateEnum'] = {

    /**
     * value: "GUARDIAN_INVITATION_STATE_UNSPECIFIED"
     * @const
     */
    "GUARDIAN_INVITATION_STATE_UNSPECIFIED": "GUARDIAN_INVITATION_STATE_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "COMPLETE"
     * @const
     */
    "COMPLETE": "COMPLETE"
};



export default GuardianInvitation;

