/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GradeHistory model module.
 * @module model/GradeHistory
 * @version v1
 */
class GradeHistory {
    /**
     * Constructs a new <code>GradeHistory</code>.
     * The history of each grade on this submission.
     * @alias module:model/GradeHistory
     */
    constructor() { 
        
        GradeHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GradeHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GradeHistory} obj Optional instance to populate.
     * @return {module:model/GradeHistory} The populated <code>GradeHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GradeHistory();

            if (data.hasOwnProperty('actorUserId')) {
                obj['actorUserId'] = ApiClient.convertToType(data['actorUserId'], 'String');
            }
            if (data.hasOwnProperty('gradeChangeType')) {
                obj['gradeChangeType'] = ApiClient.convertToType(data['gradeChangeType'], 'String');
            }
            if (data.hasOwnProperty('gradeTimestamp')) {
                obj['gradeTimestamp'] = ApiClient.convertToType(data['gradeTimestamp'], 'String');
            }
            if (data.hasOwnProperty('maxPoints')) {
                obj['maxPoints'] = ApiClient.convertToType(data['maxPoints'], 'Number');
            }
            if (data.hasOwnProperty('pointsEarned')) {
                obj['pointsEarned'] = ApiClient.convertToType(data['pointsEarned'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GradeHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GradeHistory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['actorUserId'] && !(typeof data['actorUserId'] === 'string' || data['actorUserId'] instanceof String)) {
            throw new Error("Expected the field `actorUserId` to be a primitive type in the JSON string but got " + data['actorUserId']);
        }
        // ensure the json data is a string
        if (data['gradeChangeType'] && !(typeof data['gradeChangeType'] === 'string' || data['gradeChangeType'] instanceof String)) {
            throw new Error("Expected the field `gradeChangeType` to be a primitive type in the JSON string but got " + data['gradeChangeType']);
        }
        // ensure the json data is a string
        if (data['gradeTimestamp'] && !(typeof data['gradeTimestamp'] === 'string' || data['gradeTimestamp'] instanceof String)) {
            throw new Error("Expected the field `gradeTimestamp` to be a primitive type in the JSON string but got " + data['gradeTimestamp']);
        }

        return true;
    }


}



/**
 * The teacher who made the grade change.
 * @member {String} actorUserId
 */
GradeHistory.prototype['actorUserId'] = undefined;

/**
 * The type of grade change at this time in the submission grade history.
 * @member {module:model/GradeHistory.GradeChangeTypeEnum} gradeChangeType
 */
GradeHistory.prototype['gradeChangeType'] = undefined;

/**
 * When the grade of the submission was changed.
 * @member {String} gradeTimestamp
 */
GradeHistory.prototype['gradeTimestamp'] = undefined;

/**
 * The denominator of the grade at this time in the submission grade history.
 * @member {Number} maxPoints
 */
GradeHistory.prototype['maxPoints'] = undefined;

/**
 * The numerator of the grade at this time in the submission grade history.
 * @member {Number} pointsEarned
 */
GradeHistory.prototype['pointsEarned'] = undefined;





/**
 * Allowed values for the <code>gradeChangeType</code> property.
 * @enum {String}
 * @readonly
 */
GradeHistory['GradeChangeTypeEnum'] = {

    /**
     * value: "UNKNOWN_GRADE_CHANGE_TYPE"
     * @const
     */
    "UNKNOWN_GRADE_CHANGE_TYPE": "UNKNOWN_GRADE_CHANGE_TYPE",

    /**
     * value: "DRAFT_GRADE_POINTS_EARNED_CHANGE"
     * @const
     */
    "DRAFT_GRADE_POINTS_EARNED_CHANGE": "DRAFT_GRADE_POINTS_EARNED_CHANGE",

    /**
     * value: "ASSIGNED_GRADE_POINTS_EARNED_CHANGE"
     * @const
     */
    "ASSIGNED_GRADE_POINTS_EARNED_CHANGE": "ASSIGNED_GRADE_POINTS_EARNED_CHANGE",

    /**
     * value: "MAX_POINTS_CHANGE"
     * @const
     */
    "MAX_POINTS_CHANGE": "MAX_POINTS_CHANGE"
};



export default GradeHistory;

