/**
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DriveFile from './DriveFile';

/**
 * The SharedDriveFile model module.
 * @module model/SharedDriveFile
 * @version v1
 */
class SharedDriveFile {
    /**
     * Constructs a new <code>SharedDriveFile</code>.
     * Drive file that is used as material for course work.
     * @alias module:model/SharedDriveFile
     */
    constructor() { 
        
        SharedDriveFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SharedDriveFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedDriveFile} obj Optional instance to populate.
     * @return {module:model/SharedDriveFile} The populated <code>SharedDriveFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedDriveFile();

            if (data.hasOwnProperty('driveFile')) {
                obj['driveFile'] = DriveFile.constructFromObject(data['driveFile']);
            }
            if (data.hasOwnProperty('shareMode')) {
                obj['shareMode'] = ApiClient.convertToType(data['shareMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharedDriveFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharedDriveFile</code>.
     */
    static validateJSON(data) {
        // validate the optional field `driveFile`
        if (data['driveFile']) { // data not null
          DriveFile.validateJSON(data['driveFile']);
        }
        // ensure the json data is a string
        if (data['shareMode'] && !(typeof data['shareMode'] === 'string' || data['shareMode'] instanceof String)) {
            throw new Error("Expected the field `shareMode` to be a primitive type in the JSON string but got " + data['shareMode']);
        }

        return true;
    }


}



/**
 * @member {module:model/DriveFile} driveFile
 */
SharedDriveFile.prototype['driveFile'] = undefined;

/**
 * Mechanism by which students access the Drive item.
 * @member {module:model/SharedDriveFile.ShareModeEnum} shareMode
 */
SharedDriveFile.prototype['shareMode'] = undefined;





/**
 * Allowed values for the <code>shareMode</code> property.
 * @enum {String}
 * @readonly
 */
SharedDriveFile['ShareModeEnum'] = {

    /**
     * value: "UNKNOWN_SHARE_MODE"
     * @const
     */
    "UNKNOWN_SHARE_MODE": "UNKNOWN_SHARE_MODE",

    /**
     * value: "VIEW"
     * @const
     */
    "VIEW": "VIEW",

    /**
     * value: "EDIT"
     * @const
     */
    "EDIT": "EDIT",

    /**
     * value: "STUDENT_COPY"
     * @const
     */
    "STUDENT_COPY": "STUDENT_COPY"
};



export default SharedDriveFile;

