/*
 * Google Classroom API
 * Manages classes, rosters, and invitations in Google Classroom.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Invitation;
import org.openapitools.client.model.ListInvitationsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvitationsApi
 */
@Disabled
public class InvitationsApiTest {

    private final InvitationsApi api = new InvitationsApi();

    /**
     * Accepts an invitation, removing it and adding the invited user to the teachers or students (as appropriate) of the specified course. Only the invited user may accept an invitation. This method returns the following error codes: * &#x60;PERMISSION_DENIED&#x60; if the requesting user is not permitted to accept the requested invitation or for access errors. * &#x60;FAILED_PRECONDITION&#x60; for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * &#x60;NOT_FOUND&#x60; if no invitation exists with the requested ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classroomInvitationsAcceptTest() throws ApiException {
        String id = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.classroomInvitationsAccept(id, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Creates an invitation. Only one invitation for a user and course may exist at a time. Delete and re-create an invitation to make changes. This method returns the following error codes: * &#x60;PERMISSION_DENIED&#x60; if the requesting user is not permitted to create invitations for this course or for access errors. * &#x60;NOT_FOUND&#x60; if the course or the user does not exist. * &#x60;FAILED_PRECONDITION&#x60;: * if the requested user&#39;s account is disabled. * if the user already has this role or a role with greater permissions. * for the following request errors: * IneligibleOwner * &#x60;ALREADY_EXISTS&#x60; if an invitation for the specified user and course already exists.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classroomInvitationsCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Invitation invitation = null;
        Invitation response = api.classroomInvitationsCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, invitation);
        // TODO: test validations
    }

    /**
     * Deletes an invitation. This method returns the following error codes: * &#x60;PERMISSION_DENIED&#x60; if the requesting user is not permitted to delete the requested invitation or for access errors. * &#x60;NOT_FOUND&#x60; if no invitation exists with the requested ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classroomInvitationsDeleteTest() throws ApiException {
        String id = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.classroomInvitationsDelete(id, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Returns an invitation. This method returns the following error codes: * &#x60;PERMISSION_DENIED&#x60; if the requesting user is not permitted to view the requested invitation or for access errors. * &#x60;NOT_FOUND&#x60; if no invitation exists with the requested ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classroomInvitationsGetTest() throws ApiException {
        String id = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Invitation response = api.classroomInvitationsGet(id, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Returns a list of invitations that the requesting user is permitted to view, restricted to those that match the list request. *Note:* At least one of &#x60;user_id&#x60; or &#x60;course_id&#x60; must be supplied. Both fields can be supplied. This method returns the following error codes: * &#x60;PERMISSION_DENIED&#x60; for access errors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void classroomInvitationsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String courseId = null;
        Integer pageSize = null;
        String pageToken = null;
        String userId = null;
        ListInvitationsResponse response = api.classroomInvitationsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, courseId, pageSize, pageToken, userId);
        // TODO: test validations
    }

}
