/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration from './StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration';
import StorageDatabasecenterPartnerapiV1mainBackupConfiguration from './StorageDatabasecenterPartnerapiV1mainBackupConfiguration';
import StorageDatabasecenterPartnerapiV1mainBackupRun from './StorageDatabasecenterPartnerapiV1mainBackupRun';
import StorageDatabasecenterPartnerapiV1mainCustomMetadataData from './StorageDatabasecenterPartnerapiV1mainCustomMetadataData';
import StorageDatabasecenterPartnerapiV1mainDatabaseResourceId from './StorageDatabasecenterPartnerapiV1mainDatabaseResourceId';
import StorageDatabasecenterPartnerapiV1mainEntitlement from './StorageDatabasecenterPartnerapiV1mainEntitlement';
import StorageDatabasecenterProtoCommonProduct from './StorageDatabasecenterProtoCommonProduct';

/**
 * The StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata model module.
 * @module model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
 * @version v1alpha
 */
class StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata {
    /**
     * Constructs a new <code>StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata</code>.
     * Common model for database resource instance metadata.
     * @alias module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
     */
    constructor() { 
        
        StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata} obj Optional instance to populate.
     * @return {module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata} The populated <code>StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata();

            if (data.hasOwnProperty('availabilityConfiguration')) {
                obj['availabilityConfiguration'] = StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration.constructFromObject(data['availabilityConfiguration']);
            }
            if (data.hasOwnProperty('backupConfiguration')) {
                obj['backupConfiguration'] = StorageDatabasecenterPartnerapiV1mainBackupConfiguration.constructFromObject(data['backupConfiguration']);
            }
            if (data.hasOwnProperty('backupRun')) {
                obj['backupRun'] = StorageDatabasecenterPartnerapiV1mainBackupRun.constructFromObject(data['backupRun']);
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'String');
            }
            if (data.hasOwnProperty('currentState')) {
                obj['currentState'] = ApiClient.convertToType(data['currentState'], 'String');
            }
            if (data.hasOwnProperty('customMetadata')) {
                obj['customMetadata'] = StorageDatabasecenterPartnerapiV1mainCustomMetadataData.constructFromObject(data['customMetadata']);
            }
            if (data.hasOwnProperty('entitlements')) {
                obj['entitlements'] = ApiClient.convertToType(data['entitlements'], [StorageDatabasecenterPartnerapiV1mainEntitlement]);
            }
            if (data.hasOwnProperty('expectedState')) {
                obj['expectedState'] = ApiClient.convertToType(data['expectedState'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = StorageDatabasecenterPartnerapiV1mainDatabaseResourceId.constructFromObject(data['id']);
            }
            if (data.hasOwnProperty('instanceType')) {
                obj['instanceType'] = ApiClient.convertToType(data['instanceType'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('primaryResourceId')) {
                obj['primaryResourceId'] = StorageDatabasecenterPartnerapiV1mainDatabaseResourceId.constructFromObject(data['primaryResourceId']);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = StorageDatabasecenterProtoCommonProduct.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('resourceContainer')) {
                obj['resourceContainer'] = ApiClient.convertToType(data['resourceContainer'], 'String');
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
            if (data.hasOwnProperty('updationTime')) {
                obj['updationTime'] = ApiClient.convertToType(data['updationTime'], 'String');
            }
            if (data.hasOwnProperty('userLabels')) {
                obj['userLabels'] = ApiClient.convertToType(data['userLabels'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `availabilityConfiguration`
        if (data['availabilityConfiguration']) { // data not null
          StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration.validateJSON(data['availabilityConfiguration']);
        }
        // validate the optional field `backupConfiguration`
        if (data['backupConfiguration']) { // data not null
          StorageDatabasecenterPartnerapiV1mainBackupConfiguration.validateJSON(data['backupConfiguration']);
        }
        // validate the optional field `backupRun`
        if (data['backupRun']) { // data not null
          StorageDatabasecenterPartnerapiV1mainBackupRun.validateJSON(data['backupRun']);
        }
        // ensure the json data is a string
        if (data['creationTime'] && !(typeof data['creationTime'] === 'string' || data['creationTime'] instanceof String)) {
            throw new Error("Expected the field `creationTime` to be a primitive type in the JSON string but got " + data['creationTime']);
        }
        // ensure the json data is a string
        if (data['currentState'] && !(typeof data['currentState'] === 'string' || data['currentState'] instanceof String)) {
            throw new Error("Expected the field `currentState` to be a primitive type in the JSON string but got " + data['currentState']);
        }
        // validate the optional field `customMetadata`
        if (data['customMetadata']) { // data not null
          StorageDatabasecenterPartnerapiV1mainCustomMetadataData.validateJSON(data['customMetadata']);
        }
        if (data['entitlements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entitlements'])) {
                throw new Error("Expected the field `entitlements` to be an array in the JSON data but got " + data['entitlements']);
            }
            // validate the optional field `entitlements` (array)
            for (const item of data['entitlements']) {
                StorageDatabasecenterPartnerapiV1mainEntitlement.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['expectedState'] && !(typeof data['expectedState'] === 'string' || data['expectedState'] instanceof String)) {
            throw new Error("Expected the field `expectedState` to be a primitive type in the JSON string but got " + data['expectedState']);
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          StorageDatabasecenterPartnerapiV1mainDatabaseResourceId.validateJSON(data['id']);
        }
        // ensure the json data is a string
        if (data['instanceType'] && !(typeof data['instanceType'] === 'string' || data['instanceType'] instanceof String)) {
            throw new Error("Expected the field `instanceType` to be a primitive type in the JSON string but got " + data['instanceType']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // validate the optional field `primaryResourceId`
        if (data['primaryResourceId']) { // data not null
          StorageDatabasecenterPartnerapiV1mainDatabaseResourceId.validateJSON(data['primaryResourceId']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          StorageDatabasecenterProtoCommonProduct.validateJSON(data['product']);
        }
        // ensure the json data is a string
        if (data['resourceContainer'] && !(typeof data['resourceContainer'] === 'string' || data['resourceContainer'] instanceof String)) {
            throw new Error("Expected the field `resourceContainer` to be a primitive type in the JSON string but got " + data['resourceContainer']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }
        // ensure the json data is a string
        if (data['updationTime'] && !(typeof data['updationTime'] === 'string' || data['updationTime'] instanceof String)) {
            throw new Error("Expected the field `updationTime` to be a primitive type in the JSON string but got " + data['updationTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration} availabilityConfiguration
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['availabilityConfiguration'] = undefined;

/**
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainBackupConfiguration} backupConfiguration
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['backupConfiguration'] = undefined;

/**
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainBackupRun} backupRun
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['backupRun'] = undefined;

/**
 * The creation time of the resource, i.e. the time when resource is created and recorded in partner service.
 * @member {String} creationTime
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['creationTime'] = undefined;

/**
 * Current state of the instance.
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.CurrentStateEnum} currentState
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['currentState'] = undefined;

/**
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainCustomMetadataData} customMetadata
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['customMetadata'] = undefined;

/**
 * Entitlements associated with the resource
 * @member {Array.<module:model/StorageDatabasecenterPartnerapiV1mainEntitlement>} entitlements
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['entitlements'] = undefined;

/**
 * The state that the instance is expected to be in. For example, an instance state can transition to UNHEALTHY due to wrong patch update, while the expected state will remain at the HEALTHY.
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.ExpectedStateEnum} expectedState
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['expectedState'] = undefined;

/**
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId} id
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['id'] = undefined;

/**
 * The type of the instance. Specified at creation time.
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.InstanceTypeEnum} instanceType
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['instanceType'] = undefined;

/**
 * The resource location. REQUIRED
 * @member {String} location
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['location'] = undefined;

/**
 * @member {module:model/StorageDatabasecenterPartnerapiV1mainDatabaseResourceId} primaryResourceId
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['primaryResourceId'] = undefined;

/**
 * @member {module:model/StorageDatabasecenterProtoCommonProduct} product
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['product'] = undefined;

/**
 * Closest parent Cloud Resource Manager container of this resource. It must be resource name of a Cloud Resource Manager project with the format of \"/\", such as \"projects/123\". For GCP provided resources, number should be project number.
 * @member {String} resourceContainer
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['resourceContainer'] = undefined;

/**
 * Required. Different from DatabaseResourceId.unique_id, a resource name can be reused over time. That is, after a resource named \"ABC\" is deleted, the name \"ABC\" can be used to to create a new resource within the same source. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
 * @member {String} resourceName
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['resourceName'] = undefined;

/**
 * The time at which the resource was updated and recorded at partner service.
 * @member {String} updationTime
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['updationTime'] = undefined;

/**
 * User-provided labels, represented as a dictionary where each label is a single key value pair.
 * @member {Object.<String, String>} userLabels
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.prototype['userLabels'] = undefined;





/**
 * Allowed values for the <code>currentState</code> property.
 * @enum {String}
 * @readonly
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata['CurrentStateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "HEALTHY"
     * @const
     */
    "HEALTHY": "HEALTHY",

    /**
     * value: "UNHEALTHY"
     * @const
     */
    "UNHEALTHY": "UNHEALTHY",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED",

    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED",

    /**
     * value: "STATE_OTHER"
     * @const
     */
    "STATE_OTHER": "STATE_OTHER"
};


/**
 * Allowed values for the <code>expectedState</code> property.
 * @enum {String}
 * @readonly
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata['ExpectedStateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "HEALTHY"
     * @const
     */
    "HEALTHY": "HEALTHY",

    /**
     * value: "UNHEALTHY"
     * @const
     */
    "UNHEALTHY": "UNHEALTHY",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED",

    /**
     * value: "DELETED"
     * @const
     */
    "DELETED": "DELETED",

    /**
     * value: "STATE_OTHER"
     * @const
     */
    "STATE_OTHER": "STATE_OTHER"
};


/**
 * Allowed values for the <code>instanceType</code> property.
 * @enum {String}
 * @readonly
 */
StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata['InstanceTypeEnum'] = {

    /**
     * value: "INSTANCE_TYPE_UNSPECIFIED"
     * @const
     */
    "INSTANCE_TYPE_UNSPECIFIED": "INSTANCE_TYPE_UNSPECIFIED",

    /**
     * value: "SUB_RESOURCE_TYPE_UNSPECIFIED"
     * @const
     */
    "SUB_RESOURCE_TYPE_UNSPECIFIED": "SUB_RESOURCE_TYPE_UNSPECIFIED",

    /**
     * value: "PRIMARY"
     * @const
     */
    "PRIMARY": "PRIMARY",

    /**
     * value: "SECONDARY"
     * @const
     */
    "SECONDARY": "SECONDARY",

    /**
     * value: "READ_REPLICA"
     * @const
     */
    "READ_REPLICA": "READ_REPLICA",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER",

    /**
     * value: "SUB_RESOURCE_TYPE_PRIMARY"
     * @const
     */
    "SUB_RESOURCE_TYPE_PRIMARY": "SUB_RESOURCE_TYPE_PRIMARY",

    /**
     * value: "SUB_RESOURCE_TYPE_SECONDARY"
     * @const
     */
    "SUB_RESOURCE_TYPE_SECONDARY": "SUB_RESOURCE_TYPE_SECONDARY",

    /**
     * value: "SUB_RESOURCE_TYPE_READ_REPLICA"
     * @const
     */
    "SUB_RESOURCE_TYPE_READ_REPLICA": "SUB_RESOURCE_TYPE_READ_REPLICA",

    /**
     * value: "SUB_RESOURCE_TYPE_OTHER"
     * @const
     */
    "SUB_RESOURCE_TYPE_OTHER": "SUB_RESOURCE_TYPE_OTHER"
};



export default StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata;

