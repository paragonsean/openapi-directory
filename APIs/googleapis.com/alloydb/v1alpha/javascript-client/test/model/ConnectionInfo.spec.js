/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AlloyDbApi);
  }
}(this, function(expect, AlloyDbApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AlloyDbApi.ConnectionInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectionInfo', function() {
    it('should create an instance of ConnectionInfo', function() {
      // uncomment below and update the code to test ConnectionInfo
      //var instance = new AlloyDbApi.ConnectionInfo();
      //expect(instance).to.be.a(AlloyDbApi.ConnectionInfo);
    });

    it('should have the property instanceUid (base name: "instanceUid")', function() {
      // uncomment below and update the code to test the property instanceUid
      //var instance = new AlloyDbApi.ConnectionInfo();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new AlloyDbApi.ConnectionInfo();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AlloyDbApi.ConnectionInfo();
      //expect(instance).to.be();
    });

    it('should have the property pemCertificateChain (base name: "pemCertificateChain")', function() {
      // uncomment below and update the code to test the property pemCertificateChain
      //var instance = new AlloyDbApi.ConnectionInfo();
      //expect(instance).to.be();
    });

    it('should have the property pscDnsName (base name: "pscDnsName")', function() {
      // uncomment below and update the code to test the property pscDnsName
      //var instance = new AlloyDbApi.ConnectionInfo();
      //expect(instance).to.be();
    });

    it('should have the property publicIpAddress (base name: "publicIpAddress")', function() {
      // uncomment below and update the code to test the property publicIpAddress
      //var instance = new AlloyDbApi.ConnectionInfo();
      //expect(instance).to.be();
    });

  });

}));
