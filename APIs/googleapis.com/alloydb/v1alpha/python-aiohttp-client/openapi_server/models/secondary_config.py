# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SecondaryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_cluster_name: str=None):
        """SecondaryConfig - a model defined in OpenAPI

        :param primary_cluster_name: The primary_cluster_name of this SecondaryConfig.
        """
        self.openapi_types = {
            'primary_cluster_name': str
        }

        self.attribute_map = {
            'primary_cluster_name': 'primaryClusterName'
        }

        self._primary_cluster_name = primary_cluster_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecondaryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecondaryConfig of this SecondaryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_cluster_name(self):
        """Gets the primary_cluster_name of this SecondaryConfig.

        The name of the primary cluster name with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}

        :return: The primary_cluster_name of this SecondaryConfig.
        :rtype: str
        """
        return self._primary_cluster_name

    @primary_cluster_name.setter
    def primary_cluster_name(self, primary_cluster_name):
        """Sets the primary_cluster_name of this SecondaryConfig.

        The name of the primary cluster name with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}

        :param primary_cluster_name: The primary_cluster_name of this SecondaryConfig.
        :type primary_cluster_name: str
        """

        self._primary_cluster_name = primary_cluster_name
