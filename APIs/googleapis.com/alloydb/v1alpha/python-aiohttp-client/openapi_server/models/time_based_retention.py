# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeBasedRetention(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retention_period: str=None):
        """TimeBasedRetention - a model defined in OpenAPI

        :param retention_period: The retention_period of this TimeBasedRetention.
        """
        self.openapi_types = {
            'retention_period': str
        }

        self.attribute_map = {
            'retention_period': 'retentionPeriod'
        }

        self._retention_period = retention_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeBasedRetention':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeBasedRetention of this TimeBasedRetention.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retention_period(self):
        """Gets the retention_period of this TimeBasedRetention.

        The retention period.

        :return: The retention_period of this TimeBasedRetention.
        :rtype: str
        """
        return self._retention_period

    @retention_period.setter
    def retention_period(self, retention_period):
        """Sets the retention_period of this TimeBasedRetention.

        The retention period.

        :param retention_period: The retention_period of this TimeBasedRetention.
        :type retention_period: str
        """

        self._retention_period = retention_period
