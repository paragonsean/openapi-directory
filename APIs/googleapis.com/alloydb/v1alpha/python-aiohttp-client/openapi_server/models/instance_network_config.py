# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorized_network import AuthorizedNetwork
from openapi_server import util


class InstanceNetworkConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorized_external_networks: List[AuthorizedNetwork]=None, enable_public_ip: bool=None):
        """InstanceNetworkConfig - a model defined in OpenAPI

        :param authorized_external_networks: The authorized_external_networks of this InstanceNetworkConfig.
        :param enable_public_ip: The enable_public_ip of this InstanceNetworkConfig.
        """
        self.openapi_types = {
            'authorized_external_networks': List[AuthorizedNetwork],
            'enable_public_ip': bool
        }

        self.attribute_map = {
            'authorized_external_networks': 'authorizedExternalNetworks',
            'enable_public_ip': 'enablePublicIp'
        }

        self._authorized_external_networks = authorized_external_networks
        self._enable_public_ip = enable_public_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceNetworkConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceNetworkConfig of this InstanceNetworkConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorized_external_networks(self):
        """Gets the authorized_external_networks of this InstanceNetworkConfig.

        Optional. A list of external network authorized to access this instance.

        :return: The authorized_external_networks of this InstanceNetworkConfig.
        :rtype: List[AuthorizedNetwork]
        """
        return self._authorized_external_networks

    @authorized_external_networks.setter
    def authorized_external_networks(self, authorized_external_networks):
        """Sets the authorized_external_networks of this InstanceNetworkConfig.

        Optional. A list of external network authorized to access this instance.

        :param authorized_external_networks: The authorized_external_networks of this InstanceNetworkConfig.
        :type authorized_external_networks: List[AuthorizedNetwork]
        """

        self._authorized_external_networks = authorized_external_networks

    @property
    def enable_public_ip(self):
        """Gets the enable_public_ip of this InstanceNetworkConfig.

        Optional. Enabling public ip for the instance.

        :return: The enable_public_ip of this InstanceNetworkConfig.
        :rtype: bool
        """
        return self._enable_public_ip

    @enable_public_ip.setter
    def enable_public_ip(self, enable_public_ip):
        """Sets the enable_public_ip of this InstanceNetworkConfig.

        Optional. Enabling public ip for the instance.

        :param enable_public_ip: The enable_public_ip of this InstanceNetworkConfig.
        :type enable_public_ip: bool
        """

        self._enable_public_ip = enable_public_ip
