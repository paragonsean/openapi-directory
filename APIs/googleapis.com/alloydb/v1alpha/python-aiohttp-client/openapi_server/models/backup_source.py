# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackupSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_name: str=None, backup_uid: str=None):
        """BackupSource - a model defined in OpenAPI

        :param backup_name: The backup_name of this BackupSource.
        :param backup_uid: The backup_uid of this BackupSource.
        """
        self.openapi_types = {
            'backup_name': str,
            'backup_uid': str
        }

        self.attribute_map = {
            'backup_name': 'backupName',
            'backup_uid': 'backupUid'
        }

        self._backup_name = backup_name
        self._backup_uid = backup_uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupSource of this BackupSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_name(self):
        """Gets the backup_name of this BackupSource.

        Required. The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backup_id}

        :return: The backup_name of this BackupSource.
        :rtype: str
        """
        return self._backup_name

    @backup_name.setter
    def backup_name(self, backup_name):
        """Sets the backup_name of this BackupSource.

        Required. The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backup_id}

        :param backup_name: The backup_name of this BackupSource.
        :type backup_name: str
        """

        self._backup_name = backup_name

    @property
    def backup_uid(self):
        """Gets the backup_uid of this BackupSource.

        Output only. The system-generated UID of the backup which was used to create this resource. The UID is generated when the backup is created, and it is retained until the backup is deleted.

        :return: The backup_uid of this BackupSource.
        :rtype: str
        """
        return self._backup_uid

    @backup_uid.setter
    def backup_uid(self, backup_uid):
        """Sets the backup_uid of this BackupSource.

        Output only. The system-generated UID of the backup which was used to create this resource. The UID is generated when the backup is created, and it is retained until the backup is deleted.

        :param backup_uid: The backup_uid of this BackupSource.
        :type backup_uid: str
        """

        self._backup_uid = backup_uid
