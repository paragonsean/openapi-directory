# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserPassword(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, password: str=None, user: str=None):
        """UserPassword - a model defined in OpenAPI

        :param password: The password of this UserPassword.
        :param user: The user of this UserPassword.
        """
        self.openapi_types = {
            'password': str,
            'user': str
        }

        self.attribute_map = {
            'password': 'password',
            'user': 'user'
        }

        self._password = password
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserPassword':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserPassword of this UserPassword.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def password(self):
        """Gets the password of this UserPassword.

        The initial password for the user.

        :return: The password of this UserPassword.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UserPassword.

        The initial password for the user.

        :param password: The password of this UserPassword.
        :type password: str
        """

        self._password = password

    @property
    def user(self):
        """Gets the user of this UserPassword.

        The database username.

        :return: The user of this UserPassword.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this UserPassword.

        The database username.

        :param user: The user of this UserPassword.
        :type user: str
        """

        self._user = user
