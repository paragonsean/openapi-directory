# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_databasecenter_partnerapi_v1main_retention_settings import StorageDatabasecenterPartnerapiV1mainRetentionSettings
from openapi_server import util


class StorageDatabasecenterPartnerapiV1mainBackupConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automated_backup_enabled: bool=None, backup_retention_settings: StorageDatabasecenterPartnerapiV1mainRetentionSettings=None, point_in_time_recovery_enabled: bool=None):
        """StorageDatabasecenterPartnerapiV1mainBackupConfiguration - a model defined in OpenAPI

        :param automated_backup_enabled: The automated_backup_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :param backup_retention_settings: The backup_retention_settings of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :param point_in_time_recovery_enabled: The point_in_time_recovery_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        """
        self.openapi_types = {
            'automated_backup_enabled': bool,
            'backup_retention_settings': StorageDatabasecenterPartnerapiV1mainRetentionSettings,
            'point_in_time_recovery_enabled': bool
        }

        self.attribute_map = {
            'automated_backup_enabled': 'automatedBackupEnabled',
            'backup_retention_settings': 'backupRetentionSettings',
            'point_in_time_recovery_enabled': 'pointInTimeRecoveryEnabled'
        }

        self._automated_backup_enabled = automated_backup_enabled
        self._backup_retention_settings = backup_retention_settings
        self._point_in_time_recovery_enabled = point_in_time_recovery_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageDatabasecenterPartnerapiV1mainBackupConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageDatabasecenterPartnerapiV1mainBackupConfiguration of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automated_backup_enabled(self):
        """Gets the automated_backup_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.

        Whether customer visible automated backups are enabled on the instance.

        :return: The automated_backup_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :rtype: bool
        """
        return self._automated_backup_enabled

    @automated_backup_enabled.setter
    def automated_backup_enabled(self, automated_backup_enabled):
        """Sets the automated_backup_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.

        Whether customer visible automated backups are enabled on the instance.

        :param automated_backup_enabled: The automated_backup_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :type automated_backup_enabled: bool
        """

        self._automated_backup_enabled = automated_backup_enabled

    @property
    def backup_retention_settings(self):
        """Gets the backup_retention_settings of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.


        :return: The backup_retention_settings of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :rtype: StorageDatabasecenterPartnerapiV1mainRetentionSettings
        """
        return self._backup_retention_settings

    @backup_retention_settings.setter
    def backup_retention_settings(self, backup_retention_settings):
        """Sets the backup_retention_settings of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.


        :param backup_retention_settings: The backup_retention_settings of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :type backup_retention_settings: StorageDatabasecenterPartnerapiV1mainRetentionSettings
        """

        self._backup_retention_settings = backup_retention_settings

    @property
    def point_in_time_recovery_enabled(self):
        """Gets the point_in_time_recovery_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.

        Whether point-in-time recovery is enabled. This is optional field, if the database service does not have this feature or metadata is not available in control plane, this can be omitted.

        :return: The point_in_time_recovery_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :rtype: bool
        """
        return self._point_in_time_recovery_enabled

    @point_in_time_recovery_enabled.setter
    def point_in_time_recovery_enabled(self, point_in_time_recovery_enabled):
        """Sets the point_in_time_recovery_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.

        Whether point-in-time recovery is enabled. This is optional field, if the database service does not have this feature or metadata is not available in control plane, this can be omitted.

        :param point_in_time_recovery_enabled: The point_in_time_recovery_enabled of this StorageDatabasecenterPartnerapiV1mainBackupConfiguration.
        :type point_in_time_recovery_enabled: bool
        """

        self._point_in_time_recovery_enabled = point_in_time_recovery_enabled
