# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContinuousBackupSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, point_in_time: str=None):
        """ContinuousBackupSource - a model defined in OpenAPI

        :param cluster: The cluster of this ContinuousBackupSource.
        :param point_in_time: The point_in_time of this ContinuousBackupSource.
        """
        self.openapi_types = {
            'cluster': str,
            'point_in_time': str
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'point_in_time': 'pointInTime'
        }

        self._cluster = cluster
        self._point_in_time = point_in_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousBackupSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousBackupSource of this ContinuousBackupSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this ContinuousBackupSource.

        Required. The source cluster from which to restore. This cluster must have continuous backup enabled for this operation to succeed. For the required format, see the comment on the Cluster.name field.

        :return: The cluster of this ContinuousBackupSource.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this ContinuousBackupSource.

        Required. The source cluster from which to restore. This cluster must have continuous backup enabled for this operation to succeed. For the required format, see the comment on the Cluster.name field.

        :param cluster: The cluster of this ContinuousBackupSource.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def point_in_time(self):
        """Gets the point_in_time of this ContinuousBackupSource.

        Required. The point in time to restore to.

        :return: The point_in_time of this ContinuousBackupSource.
        :rtype: str
        """
        return self._point_in_time

    @point_in_time.setter
    def point_in_time(self, point_in_time):
        """Sets the point_in_time of this ContinuousBackupSource.

        Required. The point in time to restore to.

        :param point_in_time: The point_in_time of this ContinuousBackupSource.
        :type point_in_time: str
        """

        self._point_in_time = point_in_time
