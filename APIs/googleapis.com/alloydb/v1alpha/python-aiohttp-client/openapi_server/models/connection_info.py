# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_uid: str=None, ip_address: str=None, name: str=None, pem_certificate_chain: List[str]=None, psc_dns_name: str=None, public_ip_address: str=None):
        """ConnectionInfo - a model defined in OpenAPI

        :param instance_uid: The instance_uid of this ConnectionInfo.
        :param ip_address: The ip_address of this ConnectionInfo.
        :param name: The name of this ConnectionInfo.
        :param pem_certificate_chain: The pem_certificate_chain of this ConnectionInfo.
        :param psc_dns_name: The psc_dns_name of this ConnectionInfo.
        :param public_ip_address: The public_ip_address of this ConnectionInfo.
        """
        self.openapi_types = {
            'instance_uid': str,
            'ip_address': str,
            'name': str,
            'pem_certificate_chain': List[str],
            'psc_dns_name': str,
            'public_ip_address': str
        }

        self.attribute_map = {
            'instance_uid': 'instanceUid',
            'ip_address': 'ipAddress',
            'name': 'name',
            'pem_certificate_chain': 'pemCertificateChain',
            'psc_dns_name': 'pscDnsName',
            'public_ip_address': 'publicIpAddress'
        }

        self._instance_uid = instance_uid
        self._ip_address = ip_address
        self._name = name
        self._pem_certificate_chain = pem_certificate_chain
        self._psc_dns_name = psc_dns_name
        self._public_ip_address = public_ip_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectionInfo of this ConnectionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_uid(self):
        """Gets the instance_uid of this ConnectionInfo.

        Output only. The unique ID of the Instance.

        :return: The instance_uid of this ConnectionInfo.
        :rtype: str
        """
        return self._instance_uid

    @instance_uid.setter
    def instance_uid(self, instance_uid):
        """Sets the instance_uid of this ConnectionInfo.

        Output only. The unique ID of the Instance.

        :param instance_uid: The instance_uid of this ConnectionInfo.
        :type instance_uid: str
        """

        self._instance_uid = instance_uid

    @property
    def ip_address(self):
        """Gets the ip_address of this ConnectionInfo.

        Output only. The private network IP address for the Instance. This is the default IP for the instance and is always created (even if enable_public_ip is set). This is the connection endpoint for an end-user application.

        :return: The ip_address of this ConnectionInfo.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this ConnectionInfo.

        Output only. The private network IP address for the Instance. This is the default IP for the instance and is always created (even if enable_public_ip is set). This is the connection endpoint for an end-user application.

        :param ip_address: The ip_address of this ConnectionInfo.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def name(self):
        """Gets the name of this ConnectionInfo.

        The name of the ConnectionInfo singleton resource, e.g.: projects/{project}/locations/{location}/clusters/*/instances/*/connectionInfo This field currently has no semantic meaning.

        :return: The name of this ConnectionInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConnectionInfo.

        The name of the ConnectionInfo singleton resource, e.g.: projects/{project}/locations/{location}/clusters/*/instances/*/connectionInfo This field currently has no semantic meaning.

        :param name: The name of this ConnectionInfo.
        :type name: str
        """

        self._name = name

    @property
    def pem_certificate_chain(self):
        """Gets the pem_certificate_chain of this ConnectionInfo.

        Output only. The pem-encoded chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246.

        :return: The pem_certificate_chain of this ConnectionInfo.
        :rtype: List[str]
        """
        return self._pem_certificate_chain

    @pem_certificate_chain.setter
    def pem_certificate_chain(self, pem_certificate_chain):
        """Sets the pem_certificate_chain of this ConnectionInfo.

        Output only. The pem-encoded chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246.

        :param pem_certificate_chain: The pem_certificate_chain of this ConnectionInfo.
        :type pem_certificate_chain: List[str]
        """

        self._pem_certificate_chain = pem_certificate_chain

    @property
    def psc_dns_name(self):
        """Gets the psc_dns_name of this ConnectionInfo.

        Output only. The DNS name to use with PSC for the Instance.

        :return: The psc_dns_name of this ConnectionInfo.
        :rtype: str
        """
        return self._psc_dns_name

    @psc_dns_name.setter
    def psc_dns_name(self, psc_dns_name):
        """Sets the psc_dns_name of this ConnectionInfo.

        Output only. The DNS name to use with PSC for the Instance.

        :param psc_dns_name: The psc_dns_name of this ConnectionInfo.
        :type psc_dns_name: str
        """

        self._psc_dns_name = psc_dns_name

    @property
    def public_ip_address(self):
        """Gets the public_ip_address of this ConnectionInfo.

        Output only. The public IP addresses for the Instance. This is available ONLY when enable_public_ip is set. This is the connection endpoint for an end-user application.

        :return: The public_ip_address of this ConnectionInfo.
        :rtype: str
        """
        return self._public_ip_address

    @public_ip_address.setter
    def public_ip_address(self, public_ip_address):
        """Sets the public_ip_address of this ConnectionInfo.

        Output only. The public IP addresses for the Instance. This is available ONLY when enable_public_ip is set. This is the connection endpoint for an end-user application.

        :param public_ip_address: The public_ip_address of this ConnectionInfo.
        :type public_ip_address: str
        """

        self._public_ip_address = public_ip_address
