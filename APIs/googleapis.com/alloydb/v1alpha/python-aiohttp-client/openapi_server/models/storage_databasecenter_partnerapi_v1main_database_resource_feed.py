# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_databasecenter_partnerapi_v1main_database_resource_health_signal_data import StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData
from openapi_server.models.storage_databasecenter_partnerapi_v1main_database_resource_id import StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
from openapi_server.models.storage_databasecenter_partnerapi_v1main_database_resource_metadata import StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
from openapi_server.models.storage_databasecenter_partnerapi_v1main_database_resource_recommendation_signal_data import StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData
from openapi_server import util


class StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feed_timestamp: str=None, feed_type: str=None, recommendation_signal_data: StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData=None, resource_health_signal_data: StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData=None, resource_id: StorageDatabasecenterPartnerapiV1mainDatabaseResourceId=None, resource_metadata: StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata=None):
        """StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed - a model defined in OpenAPI

        :param feed_timestamp: The feed_timestamp of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :param feed_type: The feed_type of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :param recommendation_signal_data: The recommendation_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :param resource_health_signal_data: The resource_health_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :param resource_id: The resource_id of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :param resource_metadata: The resource_metadata of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        """
        self.openapi_types = {
            'feed_timestamp': str,
            'feed_type': str,
            'recommendation_signal_data': StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData,
            'resource_health_signal_data': StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData,
            'resource_id': StorageDatabasecenterPartnerapiV1mainDatabaseResourceId,
            'resource_metadata': StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
        }

        self.attribute_map = {
            'feed_timestamp': 'feedTimestamp',
            'feed_type': 'feedType',
            'recommendation_signal_data': 'recommendationSignalData',
            'resource_health_signal_data': 'resourceHealthSignalData',
            'resource_id': 'resourceId',
            'resource_metadata': 'resourceMetadata'
        }

        self._feed_timestamp = feed_timestamp
        self._feed_type = feed_type
        self._recommendation_signal_data = recommendation_signal_data
        self._resource_health_signal_data = resource_health_signal_data
        self._resource_id = resource_id
        self._resource_metadata = resource_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feed_timestamp(self):
        """Gets the feed_timestamp of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.

        Required. Timestamp when feed is generated.

        :return: The feed_timestamp of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :rtype: str
        """
        return self._feed_timestamp

    @feed_timestamp.setter
    def feed_timestamp(self, feed_timestamp):
        """Sets the feed_timestamp of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.

        Required. Timestamp when feed is generated.

        :param feed_timestamp: The feed_timestamp of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :type feed_timestamp: str
        """

        self._feed_timestamp = feed_timestamp

    @property
    def feed_type(self):
        """Gets the feed_type of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.

        Required. Type feed to be ingested into condor

        :return: The feed_type of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :rtype: str
        """
        return self._feed_type

    @feed_type.setter
    def feed_type(self, feed_type):
        """Sets the feed_type of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.

        Required. Type feed to be ingested into condor

        :param feed_type: The feed_type of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :type feed_type: str
        """
        allowed_values = ["FEEDTYPE_UNSPECIFIED", "RESOURCE_METADATA", "OBSERVABILITY_DATA", "SECURITY_FINDING_DATA", "RECOMMENDATION_SIGNAL_DATA"]  # noqa: E501
        if feed_type not in allowed_values:
            raise ValueError(
                "Invalid value for `feed_type` ({0}), must be one of {1}"
                .format(feed_type, allowed_values)
            )

        self._feed_type = feed_type

    @property
    def recommendation_signal_data(self):
        """Gets the recommendation_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :return: The recommendation_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :rtype: StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData
        """
        return self._recommendation_signal_data

    @recommendation_signal_data.setter
    def recommendation_signal_data(self, recommendation_signal_data):
        """Sets the recommendation_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :param recommendation_signal_data: The recommendation_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :type recommendation_signal_data: StorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData
        """

        self._recommendation_signal_data = recommendation_signal_data

    @property
    def resource_health_signal_data(self):
        """Gets the resource_health_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :return: The resource_health_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :rtype: StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData
        """
        return self._resource_health_signal_data

    @resource_health_signal_data.setter
    def resource_health_signal_data(self, resource_health_signal_data):
        """Sets the resource_health_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :param resource_health_signal_data: The resource_health_signal_data of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :type resource_health_signal_data: StorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData
        """

        self._resource_health_signal_data = resource_health_signal_data

    @property
    def resource_id(self):
        """Gets the resource_id of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :return: The resource_id of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :rtype: StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :param resource_id: The resource_id of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :type resource_id: StorageDatabasecenterPartnerapiV1mainDatabaseResourceId
        """

        self._resource_id = resource_id

    @property
    def resource_metadata(self):
        """Gets the resource_metadata of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :return: The resource_metadata of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :rtype: StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
        """
        return self._resource_metadata

    @resource_metadata.setter
    def resource_metadata(self, resource_metadata):
        """Sets the resource_metadata of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.


        :param resource_metadata: The resource_metadata of this StorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.
        :type resource_metadata: StorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata
        """

        self._resource_metadata = resource_metadata
