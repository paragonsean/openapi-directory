# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PscConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, psc_enabled: bool=None):
        """PscConfig - a model defined in OpenAPI

        :param psc_enabled: The psc_enabled of this PscConfig.
        """
        self.openapi_types = {
            'psc_enabled': bool
        }

        self.attribute_map = {
            'psc_enabled': 'pscEnabled'
        }

        self._psc_enabled = psc_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PscConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PscConfig of this PscConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def psc_enabled(self):
        """Gets the psc_enabled of this PscConfig.

        Optional. Create an instance that allows connections from Private Service Connect endpoints to the instance.

        :return: The psc_enabled of this PscConfig.
        :rtype: bool
        """
        return self._psc_enabled

    @psc_enabled.setter
    def psc_enabled(self, psc_enabled):
        """Sets the psc_enabled of this PscConfig.

        Optional. Create an instance that allows connections from Private Service Connect endpoints to the instance.

        :param psc_enabled: The psc_enabled of this PscConfig.
        :type psc_enabled: bool
        """

        self._psc_enabled = psc_enabled
