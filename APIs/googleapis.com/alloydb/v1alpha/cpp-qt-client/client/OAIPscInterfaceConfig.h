/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPscInterfaceConfig.h
 *
 * Configuration for setting up a PSC interface. This information needs to be provided by the customer. PSC interfaces will be created and added to VMs via SLM (adding a network interface will require recreating the VM). For HA instances this will be done via LDTM.
 */

#ifndef OAIPscInterfaceConfig_H
#define OAIPscInterfaceConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPscInterfaceConfig : public OAIObject {
public:
    OAIPscInterfaceConfig();
    OAIPscInterfaceConfig(QString json);
    ~OAIPscInterfaceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getConsumerEndpointIps() const;
    void setConsumerEndpointIps(const QList<QString> &consumer_endpoint_ips);
    bool is_consumer_endpoint_ips_Set() const;
    bool is_consumer_endpoint_ips_Valid() const;

    QString getNetworkAttachment() const;
    void setNetworkAttachment(const QString &network_attachment);
    bool is_network_attachment_Set() const;
    bool is_network_attachment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_consumer_endpoint_ips;
    bool m_consumer_endpoint_ips_isSet;
    bool m_consumer_endpoint_ips_isValid;

    QString m_network_attachment;
    bool m_network_attachment_isSet;
    bool m_network_attachment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPscInterfaceConfig)

#endif // OAIPscInterfaceConfig_H
