/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuantityBasedExpiry.h
 *
 * A backup&#39;s position in a quantity-based retention queue, of backups with the same source cluster and type, with length, retention, specified by the backup&#39;s retention policy. Once the position is greater than the retention, the backup is eligible to be garbage collected. Example: 5 backups from the same source cluster and type with a quantity-based retention of 3 and denoted by backup_id (position, retention). Safe: backup_5 (1, 3), backup_4, (2, 3), backup_3 (3, 3). Awaiting garbage collection: backup_2 (4, 3), backup_1 (5, 3)
 */

#ifndef OAIQuantityBasedExpiry_H
#define OAIQuantityBasedExpiry_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQuantityBasedExpiry : public OAIObject {
public:
    OAIQuantityBasedExpiry();
    OAIQuantityBasedExpiry(QString json);
    ~OAIQuantityBasedExpiry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRetentionCount() const;
    void setRetentionCount(const qint32 &retention_count);
    bool is_retention_count_Set() const;
    bool is_retention_count_Valid() const;

    qint32 getTotalRetentionCount() const;
    void setTotalRetentionCount(const qint32 &total_retention_count);
    bool is_total_retention_count_Set() const;
    bool is_total_retention_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_retention_count;
    bool m_retention_count_isSet;
    bool m_retention_count_isValid;

    qint32 m_total_retention_count;
    bool m_total_retention_count_isSet;
    bool m_total_retention_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuantityBasedExpiry)

#endif // OAIQuantityBasedExpiry_H
