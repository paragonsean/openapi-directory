/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData.h
 *
 * Common model for database resource health signal data.
 */

#ifndef OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_H
#define OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_H

#include <QJsonObject>

#include "OAIStorageDatabasecenterPartnerapiV1mainCompliance.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageDatabasecenterPartnerapiV1mainCompliance;

class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData : public OAIObject {
public:
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData();
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData(QString json);
    ~OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getAdditionalMetadata() const;
    void setAdditionalMetadata(const QMap<QString, QJsonValue> &additional_metadata);
    bool is_additional_metadata_Set() const;
    bool is_additional_metadata_Valid() const;

    QList<OAIStorageDatabasecenterPartnerapiV1mainCompliance> getCompliance() const;
    void setCompliance(const QList<OAIStorageDatabasecenterPartnerapiV1mainCompliance> &compliance);
    bool is_compliance_Set() const;
    bool is_compliance_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEventTime() const;
    void setEventTime(const QString &event_time);
    bool is_event_time_Set() const;
    bool is_event_time_Valid() const;

    QString getExternalUri() const;
    void setExternalUri(const QString &external_uri);
    bool is_external_uri_Set() const;
    bool is_external_uri_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getResourceContainer() const;
    void setResourceContainer(const QString &resource_container);
    bool is_resource_container_Set() const;
    bool is_resource_container_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getSignalClass() const;
    void setSignalClass(const QString &signal_class);
    bool is_signal_class_Set() const;
    bool is_signal_class_Valid() const;

    QString getSignalId() const;
    void setSignalId(const QString &signal_id);
    bool is_signal_id_Set() const;
    bool is_signal_id_Valid() const;

    QString getSignalType() const;
    void setSignalType(const QString &signal_type);
    bool is_signal_type_Set() const;
    bool is_signal_type_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_additional_metadata;
    bool m_additional_metadata_isSet;
    bool m_additional_metadata_isValid;

    QList<OAIStorageDatabasecenterPartnerapiV1mainCompliance> m_compliance;
    bool m_compliance_isSet;
    bool m_compliance_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_event_time;
    bool m_event_time_isSet;
    bool m_event_time_isValid;

    QString m_external_uri;
    bool m_external_uri_isSet;
    bool m_external_uri_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_resource_container;
    bool m_resource_container_isSet;
    bool m_resource_container_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_signal_class;
    bool m_signal_class_isSet;
    bool m_signal_class_isValid;

    QString m_signal_id;
    bool m_signal_id_isSet;
    bool m_signal_id_isValid;

    QString m_signal_type;
    bool m_signal_type_isSet;
    bool m_signal_type_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData)

#endif // OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData_H
