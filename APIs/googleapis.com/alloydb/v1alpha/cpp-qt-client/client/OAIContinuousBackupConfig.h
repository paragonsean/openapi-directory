/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContinuousBackupConfig.h
 *
 * ContinuousBackupConfig describes the continuous backups recovery configurations of a cluster.
 */

#ifndef OAIContinuousBackupConfig_H
#define OAIContinuousBackupConfig_H

#include <QJsonObject>

#include "OAIEncryptionConfig.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEncryptionConfig;

class OAIContinuousBackupConfig : public OAIObject {
public:
    OAIContinuousBackupConfig();
    OAIContinuousBackupConfig(QString json);
    ~OAIContinuousBackupConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAIEncryptionConfig getEncryptionConfig() const;
    void setEncryptionConfig(const OAIEncryptionConfig &encryption_config);
    bool is_encryption_config_Set() const;
    bool is_encryption_config_Valid() const;

    qint32 getRecoveryWindowDays() const;
    void setRecoveryWindowDays(const qint32 &recovery_window_days);
    bool is_recovery_window_days_Set() const;
    bool is_recovery_window_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAIEncryptionConfig m_encryption_config;
    bool m_encryption_config_isSet;
    bool m_encryption_config_isValid;

    qint32 m_recovery_window_days;
    bool m_recovery_window_days_isSet;
    bool m_recovery_window_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContinuousBackupConfig)

#endif // OAIContinuousBackupConfig_H
