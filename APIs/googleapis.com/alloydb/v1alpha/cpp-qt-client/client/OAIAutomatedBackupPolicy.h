/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutomatedBackupPolicy.h
 *
 * Message describing the user-specified automated backup policy. All fields in the automated backup policy are optional. Defaults for each field are provided if they are not set.
 */

#ifndef OAIAutomatedBackupPolicy_H
#define OAIAutomatedBackupPolicy_H

#include <QJsonObject>

#include "OAIEncryptionConfig.h"
#include "OAIQuantityBasedRetention.h"
#include "OAITimeBasedRetention.h"
#include "OAIWeeklySchedule.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEncryptionConfig;
class OAIQuantityBasedRetention;
class OAITimeBasedRetention;
class OAIWeeklySchedule;

class OAIAutomatedBackupPolicy : public OAIObject {
public:
    OAIAutomatedBackupPolicy();
    OAIAutomatedBackupPolicy(QString json);
    ~OAIAutomatedBackupPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackupWindow() const;
    void setBackupWindow(const QString &backup_window);
    bool is_backup_window_Set() const;
    bool is_backup_window_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAIEncryptionConfig getEncryptionConfig() const;
    void setEncryptionConfig(const OAIEncryptionConfig &encryption_config);
    bool is_encryption_config_Set() const;
    bool is_encryption_config_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIQuantityBasedRetention getQuantityBasedRetention() const;
    void setQuantityBasedRetention(const OAIQuantityBasedRetention &quantity_based_retention);
    bool is_quantity_based_retention_Set() const;
    bool is_quantity_based_retention_Valid() const;

    OAITimeBasedRetention getTimeBasedRetention() const;
    void setTimeBasedRetention(const OAITimeBasedRetention &time_based_retention);
    bool is_time_based_retention_Set() const;
    bool is_time_based_retention_Valid() const;

    OAIWeeklySchedule getWeeklySchedule() const;
    void setWeeklySchedule(const OAIWeeklySchedule &weekly_schedule);
    bool is_weekly_schedule_Set() const;
    bool is_weekly_schedule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_backup_window;
    bool m_backup_window_isSet;
    bool m_backup_window_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAIEncryptionConfig m_encryption_config;
    bool m_encryption_config_isSet;
    bool m_encryption_config_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIQuantityBasedRetention m_quantity_based_retention;
    bool m_quantity_based_retention_isSet;
    bool m_quantity_based_retention_isValid;

    OAITimeBasedRetention m_time_based_retention;
    bool m_time_based_retention_isSet;
    bool m_time_based_retention_isValid;

    OAIWeeklySchedule m_weekly_schedule;
    bool m_weekly_schedule_isSet;
    bool m_weekly_schedule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutomatedBackupPolicy)

#endif // OAIAutomatedBackupPolicy_H
