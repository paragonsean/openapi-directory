/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPscInstanceConfig.h
 *
 * PscInstanceConfig contains PSC related configuration at an instance level.
 */

#ifndef OAIPscInstanceConfig_H
#define OAIPscInstanceConfig_H

#include <QJsonObject>

#include "OAIPscInterfaceConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPscInterfaceConfig;

class OAIPscInstanceConfig : public OAIObject {
public:
    OAIPscInstanceConfig();
    OAIPscInstanceConfig(QString json);
    ~OAIPscInstanceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedConsumerNetworks() const;
    void setAllowedConsumerNetworks(const QList<QString> &allowed_consumer_networks);
    bool is_allowed_consumer_networks_Set() const;
    bool is_allowed_consumer_networks_Valid() const;

    QList<QString> getAllowedConsumerProjects() const;
    void setAllowedConsumerProjects(const QList<QString> &allowed_consumer_projects);
    bool is_allowed_consumer_projects_Set() const;
    bool is_allowed_consumer_projects_Valid() const;

    QList<QString> getOutgoingServiceAttachmentLinks() const;
    void setOutgoingServiceAttachmentLinks(const QList<QString> &outgoing_service_attachment_links);
    bool is_outgoing_service_attachment_links_Set() const;
    bool is_outgoing_service_attachment_links_Valid() const;

    bool isPscEnabled() const;
    void setPscEnabled(const bool &psc_enabled);
    bool is_psc_enabled_Set() const;
    bool is_psc_enabled_Valid() const;

    QList<OAIPscInterfaceConfig> getPscInterfaceConfigs() const;
    void setPscInterfaceConfigs(const QList<OAIPscInterfaceConfig> &psc_interface_configs);
    bool is_psc_interface_configs_Set() const;
    bool is_psc_interface_configs_Valid() const;

    QString getServiceAttachmentLink() const;
    void setServiceAttachmentLink(const QString &service_attachment_link);
    bool is_service_attachment_link_Set() const;
    bool is_service_attachment_link_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_consumer_networks;
    bool m_allowed_consumer_networks_isSet;
    bool m_allowed_consumer_networks_isValid;

    QList<QString> m_allowed_consumer_projects;
    bool m_allowed_consumer_projects_isSet;
    bool m_allowed_consumer_projects_isValid;

    QList<QString> m_outgoing_service_attachment_links;
    bool m_outgoing_service_attachment_links_isSet;
    bool m_outgoing_service_attachment_links_isValid;

    bool m_psc_enabled;
    bool m_psc_enabled_isSet;
    bool m_psc_enabled_isValid;

    QList<OAIPscInterfaceConfig> m_psc_interface_configs;
    bool m_psc_interface_configs_isSet;
    bool m_psc_interface_configs_isValid;

    QString m_service_attachment_link;
    bool m_service_attachment_link_isSet;
    bool m_service_attachment_link_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPscInstanceConfig)

#endif // OAIPscInstanceConfig_H
