/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContinuousBackupInfo.h
 *
 * ContinuousBackupInfo describes the continuous backup properties of a cluster.
 */

#ifndef OAIContinuousBackupInfo_H
#define OAIContinuousBackupInfo_H

#include <QJsonObject>

#include "OAIEncryptionInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEncryptionInfo;

class OAIContinuousBackupInfo : public OAIObject {
public:
    OAIContinuousBackupInfo();
    OAIContinuousBackupInfo(QString json);
    ~OAIContinuousBackupInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEarliestRestorableTime() const;
    void setEarliestRestorableTime(const QString &earliest_restorable_time);
    bool is_earliest_restorable_time_Set() const;
    bool is_earliest_restorable_time_Valid() const;

    QString getEnabledTime() const;
    void setEnabledTime(const QString &enabled_time);
    bool is_enabled_time_Set() const;
    bool is_enabled_time_Valid() const;

    OAIEncryptionInfo getEncryptionInfo() const;
    void setEncryptionInfo(const OAIEncryptionInfo &encryption_info);
    bool is_encryption_info_Set() const;
    bool is_encryption_info_Valid() const;

    QList<QString> getSchedule() const;
    void setSchedule(const QList<QString> &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_earliest_restorable_time;
    bool m_earliest_restorable_time_isSet;
    bool m_earliest_restorable_time_isValid;

    QString m_enabled_time;
    bool m_enabled_time_isSet;
    bool m_enabled_time_isValid;

    OAIEncryptionInfo m_encryption_info;
    bool m_encryption_info_isSet;
    bool m_encryption_info_isValid;

    QList<QString> m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContinuousBackupInfo)

#endif // OAIContinuousBackupInfo_H
