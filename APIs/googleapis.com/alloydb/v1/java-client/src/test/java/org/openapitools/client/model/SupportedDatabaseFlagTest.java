/*
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IntegerRestrictions;
import org.openapitools.client.model.StringRestrictions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SupportedDatabaseFlag
 */
public class SupportedDatabaseFlagTest {
    private final SupportedDatabaseFlag model = new SupportedDatabaseFlag();

    /**
     * Model tests for SupportedDatabaseFlag
     */
    @Test
    public void testSupportedDatabaseFlag() {
        // TODO: test SupportedDatabaseFlag
    }

    /**
     * Test the property 'acceptsMultipleValues'
     */
    @Test
    public void acceptsMultipleValuesTest() {
        // TODO: test acceptsMultipleValues
    }

    /**
     * Test the property 'flagName'
     */
    @Test
    public void flagNameTest() {
        // TODO: test flagName
    }

    /**
     * Test the property 'integerRestrictions'
     */
    @Test
    public void integerRestrictionsTest() {
        // TODO: test integerRestrictions
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'requiresDbRestart'
     */
    @Test
    public void requiresDbRestartTest() {
        // TODO: test requiresDbRestart
    }

    /**
     * Test the property 'stringRestrictions'
     */
    @Test
    public void stringRestrictionsTest() {
        // TODO: test stringRestrictions
    }

    /**
     * Test the property 'supportedDbVersions'
     */
    @Test
    public void supportedDbVersionsTest() {
        // TODO: test supportedDbVersions
    }

    /**
     * Test the property 'valueType'
     */
    @Test
    public void valueTypeTest() {
        // TODO: test valueType
    }

}
