/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageDatabasecenterPartnerapiV1mainBackupRun.h
 *
 * A backup run.
 */

#ifndef OAIStorageDatabasecenterPartnerapiV1mainBackupRun_H
#define OAIStorageDatabasecenterPartnerapiV1mainBackupRun_H

#include <QJsonObject>

#include "OAIStorageDatabasecenterPartnerapiV1mainOperationError.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageDatabasecenterPartnerapiV1mainOperationError;

class OAIStorageDatabasecenterPartnerapiV1mainBackupRun : public OAIObject {
public:
    OAIStorageDatabasecenterPartnerapiV1mainBackupRun();
    OAIStorageDatabasecenterPartnerapiV1mainBackupRun(QString json);
    ~OAIStorageDatabasecenterPartnerapiV1mainBackupRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainOperationError getError() const;
    void setError(const OAIStorageDatabasecenterPartnerapiV1mainOperationError &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainOperationError m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageDatabasecenterPartnerapiV1mainBackupRun)

#endif // OAIStorageDatabasecenterPartnerapiV1mainBackupRun_H
