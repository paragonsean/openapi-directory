/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata.h
 *
 * Metadata for individual databases created in an instance. i.e. spanner instance can have multiple databases with unique configuration settings.
 */

#ifndef OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata_H
#define OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata_H

#include <QJsonObject>

#include "OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainBackupRun.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId.h"
#include "OAIStorageDatabasecenterProtoCommonProduct.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration;
class OAIStorageDatabasecenterPartnerapiV1mainBackupRun;
class OAIStorageDatabasecenterProtoCommonProduct;
class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId;

class OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata : public OAIObject {
public:
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata();
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata(QString json);
    ~OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration getBackupConfiguration() const;
    void setBackupConfiguration(const OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration &backup_configuration);
    bool is_backup_configuration_Set() const;
    bool is_backup_configuration_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainBackupRun getBackupRun() const;
    void setBackupRun(const OAIStorageDatabasecenterPartnerapiV1mainBackupRun &backup_run);
    bool is_backup_run_Set() const;
    bool is_backup_run_Valid() const;

    OAIStorageDatabasecenterProtoCommonProduct getProduct() const;
    void setProduct(const OAIStorageDatabasecenterProtoCommonProduct &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId getResourceId() const;
    void setResourceId(const OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration m_backup_configuration;
    bool m_backup_configuration_isSet;
    bool m_backup_configuration_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainBackupRun m_backup_run;
    bool m_backup_run_isSet;
    bool m_backup_run_isValid;

    OAIStorageDatabasecenterProtoCommonProduct m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata)

#endif // OAIStorageDatabasecenterPartnerapiV1mainDatabaseMetadata_H
