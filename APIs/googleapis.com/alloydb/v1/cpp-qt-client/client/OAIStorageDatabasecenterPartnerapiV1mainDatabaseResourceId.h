/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId.h
 *
 * DatabaseResourceId will serve as primary key for any resource ingestion event.
 */

#ifndef OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId_H
#define OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId : public OAIObject {
public:
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId();
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId(QString json);
    ~OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getProviderDescription() const;
    void setProviderDescription(const QString &provider_description);
    bool is_provider_description_Set() const;
    bool is_provider_description_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getUniqueId() const;
    void setUniqueId(const QString &unique_id);
    bool is_unique_id_Set() const;
    bool is_unique_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_provider_description;
    bool m_provider_description_isSet;
    bool m_provider_description_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_unique_id;
    bool m_unique_id_isSet;
    bool m_unique_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId)

#endif // OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId_H
