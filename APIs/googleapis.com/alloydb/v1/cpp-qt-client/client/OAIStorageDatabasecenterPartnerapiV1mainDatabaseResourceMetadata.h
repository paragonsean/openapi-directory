/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.h
 *
 * Common model for database resource instance metadata.
 */

#ifndef OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_H
#define OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_H

#include <QJsonObject>

#include "OAIStorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainBackupRun.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainCustomMetadataData.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainEntitlement.h"
#include "OAIStorageDatabasecenterProtoCommonProduct.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration;
class OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration;
class OAIStorageDatabasecenterPartnerapiV1mainBackupRun;
class OAIStorageDatabasecenterPartnerapiV1mainCustomMetadataData;
class OAIStorageDatabasecenterPartnerapiV1mainEntitlement;
class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId;
class OAIStorageDatabasecenterProtoCommonProduct;

class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata : public OAIObject {
public:
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata();
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata(QString json);
    ~OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration getAvailabilityConfiguration() const;
    void setAvailabilityConfiguration(const OAIStorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration &availability_configuration);
    bool is_availability_configuration_Set() const;
    bool is_availability_configuration_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration getBackupConfiguration() const;
    void setBackupConfiguration(const OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration &backup_configuration);
    bool is_backup_configuration_Set() const;
    bool is_backup_configuration_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainBackupRun getBackupRun() const;
    void setBackupRun(const OAIStorageDatabasecenterPartnerapiV1mainBackupRun &backup_run);
    bool is_backup_run_Set() const;
    bool is_backup_run_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getCurrentState() const;
    void setCurrentState(const QString &current_state);
    bool is_current_state_Set() const;
    bool is_current_state_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainCustomMetadataData getCustomMetadata() const;
    void setCustomMetadata(const OAIStorageDatabasecenterPartnerapiV1mainCustomMetadataData &custom_metadata);
    bool is_custom_metadata_Set() const;
    bool is_custom_metadata_Valid() const;

    QList<OAIStorageDatabasecenterPartnerapiV1mainEntitlement> getEntitlements() const;
    void setEntitlements(const QList<OAIStorageDatabasecenterPartnerapiV1mainEntitlement> &entitlements);
    bool is_entitlements_Set() const;
    bool is_entitlements_Valid() const;

    QString getExpectedState() const;
    void setExpectedState(const QString &expected_state);
    bool is_expected_state_Set() const;
    bool is_expected_state_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId getId() const;
    void setId(const OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId getPrimaryResourceId() const;
    void setPrimaryResourceId(const OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId &primary_resource_id);
    bool is_primary_resource_id_Set() const;
    bool is_primary_resource_id_Valid() const;

    OAIStorageDatabasecenterProtoCommonProduct getProduct() const;
    void setProduct(const OAIStorageDatabasecenterProtoCommonProduct &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    QString getResourceContainer() const;
    void setResourceContainer(const QString &resource_container);
    bool is_resource_container_Set() const;
    bool is_resource_container_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    QString getUpdationTime() const;
    void setUpdationTime(const QString &updation_time);
    bool is_updation_time_Set() const;
    bool is_updation_time_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration m_availability_configuration;
    bool m_availability_configuration_isSet;
    bool m_availability_configuration_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainBackupConfiguration m_backup_configuration;
    bool m_backup_configuration_isSet;
    bool m_backup_configuration_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainBackupRun m_backup_run;
    bool m_backup_run_isSet;
    bool m_backup_run_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_current_state;
    bool m_current_state_isSet;
    bool m_current_state_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainCustomMetadataData m_custom_metadata;
    bool m_custom_metadata_isSet;
    bool m_custom_metadata_isValid;

    QList<OAIStorageDatabasecenterPartnerapiV1mainEntitlement> m_entitlements;
    bool m_entitlements_isSet;
    bool m_entitlements_isValid;

    QString m_expected_state;
    bool m_expected_state_isSet;
    bool m_expected_state_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId m_primary_resource_id;
    bool m_primary_resource_id_isSet;
    bool m_primary_resource_id_isValid;

    OAIStorageDatabasecenterProtoCommonProduct m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    QString m_resource_container;
    bool m_resource_container_isSet;
    bool m_resource_container_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;

    QString m_updation_time;
    bool m_updation_time_isSet;
    bool m_updation_time_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata)

#endif // OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata_H
