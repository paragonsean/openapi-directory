/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMigrationSource.h
 *
 * Subset of the source instance configuration that is available when reading the cluster resource.
 */

#ifndef OAIMigrationSource_H
#define OAIMigrationSource_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMigrationSource : public OAIObject {
public:
    OAIMigrationSource();
    OAIMigrationSource(QString json);
    ~OAIMigrationSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHostPort() const;
    void setHostPort(const QString &host_port);
    bool is_host_port_Set() const;
    bool is_host_port_Valid() const;

    QString getReferenceId() const;
    void setReferenceId(const QString &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_host_port;
    bool m_host_port_isSet;
    bool m_host_port_isValid;

    QString m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QString m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMigrationSource)

#endif // OAIMigrationSource_H
