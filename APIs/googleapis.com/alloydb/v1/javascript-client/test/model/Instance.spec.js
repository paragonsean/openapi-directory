/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AlloyDbApi);
  }
}(this, function(expect, AlloyDbApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AlloyDbApi.Instance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Instance', function() {
    it('should create an instance of Instance', function() {
      // uncomment below and update the code to test Instance
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be.a(AlloyDbApi.Instance);
    });

    it('should have the property annotations (base name: "annotations")', function() {
      // uncomment below and update the code to test the property annotations
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property availabilityType (base name: "availabilityType")', function() {
      // uncomment below and update the code to test the property availabilityType
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property clientConnectionConfig (base name: "clientConnectionConfig")', function() {
      // uncomment below and update the code to test the property clientConnectionConfig
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property databaseFlags (base name: "databaseFlags")', function() {
      // uncomment below and update the code to test the property databaseFlags
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property deleteTime (base name: "deleteTime")', function() {
      // uncomment below and update the code to test the property deleteTime
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property gceZone (base name: "gceZone")', function() {
      // uncomment below and update the code to test the property gceZone
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property instanceType (base name: "instanceType")', function() {
      // uncomment below and update the code to test the property instanceType
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property machineConfig (base name: "machineConfig")', function() {
      // uncomment below and update the code to test the property machineConfig
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property nodes (base name: "nodes")', function() {
      // uncomment below and update the code to test the property nodes
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property queryInsightsConfig (base name: "queryInsightsConfig")', function() {
      // uncomment below and update the code to test the property queryInsightsConfig
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property readPoolConfig (base name: "readPoolConfig")', function() {
      // uncomment below and update the code to test the property readPoolConfig
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property reconciling (base name: "reconciling")', function() {
      // uncomment below and update the code to test the property reconciling
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzs (base name: "satisfiesPzs")', function() {
      // uncomment below and update the code to test the property satisfiesPzs
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property uid (base name: "uid")', function() {
      // uncomment below and update the code to test the property uid
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property writableNode (base name: "writableNode")', function() {
      // uncomment below and update the code to test the property writableNode
      //var instance = new AlloyDbApi.Instance();
      //expect(instance).to.be();
    });

  });

}));
