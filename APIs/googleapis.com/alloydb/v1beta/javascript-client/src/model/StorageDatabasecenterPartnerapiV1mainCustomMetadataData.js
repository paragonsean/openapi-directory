/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StorageDatabasecenterPartnerapiV1mainDatabaseMetadata from './StorageDatabasecenterPartnerapiV1mainDatabaseMetadata';

/**
 * The StorageDatabasecenterPartnerapiV1mainCustomMetadataData model module.
 * @module model/StorageDatabasecenterPartnerapiV1mainCustomMetadataData
 * @version v1beta
 */
class StorageDatabasecenterPartnerapiV1mainCustomMetadataData {
    /**
     * Constructs a new <code>StorageDatabasecenterPartnerapiV1mainCustomMetadataData</code>.
     * Any custom metadata associated with the resource. i.e. A spanner instance can have multiple databases with its own unique metadata. Information for these individual databases can be captured in custom metadata data
     * @alias module:model/StorageDatabasecenterPartnerapiV1mainCustomMetadataData
     */
    constructor() { 
        
        StorageDatabasecenterPartnerapiV1mainCustomMetadataData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageDatabasecenterPartnerapiV1mainCustomMetadataData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageDatabasecenterPartnerapiV1mainCustomMetadataData} obj Optional instance to populate.
     * @return {module:model/StorageDatabasecenterPartnerapiV1mainCustomMetadataData} The populated <code>StorageDatabasecenterPartnerapiV1mainCustomMetadataData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageDatabasecenterPartnerapiV1mainCustomMetadataData();

            if (data.hasOwnProperty('databaseMetadata')) {
                obj['databaseMetadata'] = ApiClient.convertToType(data['databaseMetadata'], [StorageDatabasecenterPartnerapiV1mainDatabaseMetadata]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorageDatabasecenterPartnerapiV1mainCustomMetadataData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorageDatabasecenterPartnerapiV1mainCustomMetadataData</code>.
     */
    static validateJSON(data) {
        if (data['databaseMetadata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['databaseMetadata'])) {
                throw new Error("Expected the field `databaseMetadata` to be an array in the JSON data but got " + data['databaseMetadata']);
            }
            // validate the optional field `databaseMetadata` (array)
            for (const item of data['databaseMetadata']) {
                StorageDatabasecenterPartnerapiV1mainDatabaseMetadata.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/StorageDatabasecenterPartnerapiV1mainDatabaseMetadata>} databaseMetadata
 */
StorageDatabasecenterPartnerapiV1mainCustomMetadataData.prototype['databaseMetadata'] = undefined;






export default StorageDatabasecenterPartnerapiV1mainCustomMetadataData;

