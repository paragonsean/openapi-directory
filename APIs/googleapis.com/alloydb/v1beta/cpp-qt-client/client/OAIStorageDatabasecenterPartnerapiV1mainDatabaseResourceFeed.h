/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed.h
 *
 * DatabaseResourceFeed is the top level proto to be used to ingest different database resource level events into Condor platform.
 */

#ifndef OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_H
#define OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_H

#include <QJsonObject>

#include "OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata.h"
#include "OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData;
class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData;
class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId;
class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata;

class OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed : public OAIObject {
public:
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed();
    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed(QString json);
    ~OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFeedTimestamp() const;
    void setFeedTimestamp(const QString &feed_timestamp);
    bool is_feed_timestamp_Set() const;
    bool is_feed_timestamp_Valid() const;

    QString getFeedType() const;
    void setFeedType(const QString &feed_type);
    bool is_feed_type_Set() const;
    bool is_feed_type_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData getRecommendationSignalData() const;
    void setRecommendationSignalData(const OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData &recommendation_signal_data);
    bool is_recommendation_signal_data_Set() const;
    bool is_recommendation_signal_data_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData getResourceHealthSignalData() const;
    void setResourceHealthSignalData(const OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData &resource_health_signal_data);
    bool is_resource_health_signal_data_Set() const;
    bool is_resource_health_signal_data_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId getResourceId() const;
    void setResourceId(const OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata getResourceMetadata() const;
    void setResourceMetadata(const OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata &resource_metadata);
    bool is_resource_metadata_Set() const;
    bool is_resource_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_feed_timestamp;
    bool m_feed_timestamp_isSet;
    bool m_feed_timestamp_isValid;

    QString m_feed_type;
    bool m_feed_type_isSet;
    bool m_feed_type_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceRecommendationSignalData m_recommendation_signal_data;
    bool m_recommendation_signal_data_isSet;
    bool m_recommendation_signal_data_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceHealthSignalData m_resource_health_signal_data;
    bool m_resource_health_signal_data_isSet;
    bool m_resource_health_signal_data_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceId m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceMetadata m_resource_metadata;
    bool m_resource_metadata_isSet;
    bool m_resource_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed)

#endif // OAIStorageDatabasecenterPartnerapiV1mainDatabaseResourceFeed_H
