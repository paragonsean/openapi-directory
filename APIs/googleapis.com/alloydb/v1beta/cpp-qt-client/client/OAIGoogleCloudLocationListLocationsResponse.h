/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudLocationListLocationsResponse.h
 *
 * The response message for Locations.ListLocations.
 */

#ifndef OAIGoogleCloudLocationListLocationsResponse_H
#define OAIGoogleCloudLocationListLocationsResponse_H

#include <QJsonObject>

#include "OAIGoogleCloudLocationLocation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudLocationLocation;

class OAIGoogleCloudLocationListLocationsResponse : public OAIObject {
public:
    OAIGoogleCloudLocationListLocationsResponse();
    OAIGoogleCloudLocationListLocationsResponse(QString json);
    ~OAIGoogleCloudLocationListLocationsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudLocationLocation> getLocations() const;
    void setLocations(const QList<OAIGoogleCloudLocationLocation> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudLocationLocation> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudLocationListLocationsResponse)

#endif // OAIGoogleCloudLocationListLocationsResponse_H
