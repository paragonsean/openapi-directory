/**
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleTypeTimeOfDay.h
 *
 * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and &#x60;google.protobuf.Timestamp&#x60;.
 */

#ifndef OAIGoogleTypeTimeOfDay_H
#define OAIGoogleTypeTimeOfDay_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleTypeTimeOfDay : public OAIObject {
public:
    OAIGoogleTypeTimeOfDay();
    OAIGoogleTypeTimeOfDay(QString json);
    ~OAIGoogleTypeTimeOfDay() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getHours() const;
    void setHours(const qint32 &hours);
    bool is_hours_Set() const;
    bool is_hours_Valid() const;

    qint32 getMinutes() const;
    void setMinutes(const qint32 &minutes);
    bool is_minutes_Set() const;
    bool is_minutes_Valid() const;

    qint32 getNanos() const;
    void setNanos(const qint32 &nanos);
    bool is_nanos_Set() const;
    bool is_nanos_Valid() const;

    qint32 getSeconds() const;
    void setSeconds(const qint32 &seconds);
    bool is_seconds_Set() const;
    bool is_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_hours;
    bool m_hours_isSet;
    bool m_hours_isValid;

    qint32 m_minutes;
    bool m_minutes_isSet;
    bool m_minutes_isValid;

    qint32 m_nanos;
    bool m_nanos_isSet;
    bool m_nanos_isValid;

    qint32 m_seconds;
    bool m_seconds_isSet;
    bool m_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleTypeTimeOfDay)

#endif // OAIGoogleTypeTimeOfDay_H
