# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PscInterfaceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_endpoint_ips: List[str]=None, network_attachment: str=None):
        """PscInterfaceConfig - a model defined in OpenAPI

        :param consumer_endpoint_ips: The consumer_endpoint_ips of this PscInterfaceConfig.
        :param network_attachment: The network_attachment of this PscInterfaceConfig.
        """
        self.openapi_types = {
            'consumer_endpoint_ips': List[str],
            'network_attachment': str
        }

        self.attribute_map = {
            'consumer_endpoint_ips': 'consumerEndpointIps',
            'network_attachment': 'networkAttachment'
        }

        self._consumer_endpoint_ips = consumer_endpoint_ips
        self._network_attachment = network_attachment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PscInterfaceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PscInterfaceConfig of this PscInterfaceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_endpoint_ips(self):
        """Gets the consumer_endpoint_ips of this PscInterfaceConfig.

        A list of endpoints in the consumer VPC the interface might initiate outbound connections to. This list has to be provided when the PSC interface is created.

        :return: The consumer_endpoint_ips of this PscInterfaceConfig.
        :rtype: List[str]
        """
        return self._consumer_endpoint_ips

    @consumer_endpoint_ips.setter
    def consumer_endpoint_ips(self, consumer_endpoint_ips):
        """Sets the consumer_endpoint_ips of this PscInterfaceConfig.

        A list of endpoints in the consumer VPC the interface might initiate outbound connections to. This list has to be provided when the PSC interface is created.

        :param consumer_endpoint_ips: The consumer_endpoint_ips of this PscInterfaceConfig.
        :type consumer_endpoint_ips: List[str]
        """

        self._consumer_endpoint_ips = consumer_endpoint_ips

    @property
    def network_attachment(self):
        """Gets the network_attachment of this PscInterfaceConfig.

        The NetworkAttachment resource created in the consumer VPC to which the PSC interface will be linked, in the form of: `projects/${CONSUMER_PROJECT}/regions/${REGION}/networkAttachments/${NETWORK_ATTACHMENT_NAME}`. NetworkAttachment has to be provided when the PSC interface is created.

        :return: The network_attachment of this PscInterfaceConfig.
        :rtype: str
        """
        return self._network_attachment

    @network_attachment.setter
    def network_attachment(self, network_attachment):
        """Sets the network_attachment of this PscInterfaceConfig.

        The NetworkAttachment resource created in the consumer VPC to which the PSC interface will be linked, in the form of: `projects/${CONSUMER_PROJECT}/regions/${REGION}/networkAttachments/${NETWORK_ATTACHMENT_NAME}`. NetworkAttachment has to be provided when the PSC interface is created.

        :param network_attachment: The network_attachment of this PscInterfaceConfig.
        :type network_attachment: str
        """

        self._network_attachment = network_attachment
