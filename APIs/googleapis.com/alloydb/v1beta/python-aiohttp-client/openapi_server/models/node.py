# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Node(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, ip: str=None, state: str=None, zone_id: str=None):
        """Node - a model defined in OpenAPI

        :param id: The id of this Node.
        :param ip: The ip of this Node.
        :param state: The state of this Node.
        :param zone_id: The zone_id of this Node.
        """
        self.openapi_types = {
            'id': str,
            'ip': str,
            'state': str,
            'zone_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'ip': 'ip',
            'state': 'state',
            'zone_id': 'zoneId'
        }

        self._id = id
        self._ip = ip
        self._state = state
        self._zone_id = zone_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Node':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Node of this Node.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Node.

        The identifier of the VM e.g. \"test-read-0601-407e52be-ms3l\".

        :return: The id of this Node.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Node.

        The identifier of the VM e.g. \"test-read-0601-407e52be-ms3l\".

        :param id: The id of this Node.
        :type id: str
        """

        self._id = id

    @property
    def ip(self):
        """Gets the ip of this Node.

        The private IP address of the VM e.g. \"10.57.0.34\".

        :return: The ip of this Node.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this Node.

        The private IP address of the VM e.g. \"10.57.0.34\".

        :param ip: The ip of this Node.
        :type ip: str
        """

        self._ip = ip

    @property
    def state(self):
        """Gets the state of this Node.

        Determined by state of the compute VM and postgres-service health. Compute VM state can have values listed in https://cloud.google.com/compute/docs/instances/instance-life-cycle and postgres-service health can have values: HEALTHY and UNHEALTHY.

        :return: The state of this Node.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Node.

        Determined by state of the compute VM and postgres-service health. Compute VM state can have values listed in https://cloud.google.com/compute/docs/instances/instance-life-cycle and postgres-service health can have values: HEALTHY and UNHEALTHY.

        :param state: The state of this Node.
        :type state: str
        """

        self._state = state

    @property
    def zone_id(self):
        """Gets the zone_id of this Node.

        The Compute Engine zone of the VM e.g. \"us-central1-b\".

        :return: The zone_id of this Node.
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id):
        """Sets the zone_id of this Node.

        The Compute Engine zone of the VM e.g. \"us-central1-b\".

        :param zone_id: The zone_id of this Node.
        :type zone_id: str
        """

        self._zone_id = zone_id
