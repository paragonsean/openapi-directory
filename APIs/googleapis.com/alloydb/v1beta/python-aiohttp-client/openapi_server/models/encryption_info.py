# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EncryptionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_type: str=None, kms_key_versions: List[str]=None):
        """EncryptionInfo - a model defined in OpenAPI

        :param encryption_type: The encryption_type of this EncryptionInfo.
        :param kms_key_versions: The kms_key_versions of this EncryptionInfo.
        """
        self.openapi_types = {
            'encryption_type': str,
            'kms_key_versions': List[str]
        }

        self.attribute_map = {
            'encryption_type': 'encryptionType',
            'kms_key_versions': 'kmsKeyVersions'
        }

        self._encryption_type = encryption_type
        self._kms_key_versions = kms_key_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EncryptionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EncryptionInfo of this EncryptionInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_type(self):
        """Gets the encryption_type of this EncryptionInfo.

        Output only. Type of encryption.

        :return: The encryption_type of this EncryptionInfo.
        :rtype: str
        """
        return self._encryption_type

    @encryption_type.setter
    def encryption_type(self, encryption_type):
        """Sets the encryption_type of this EncryptionInfo.

        Output only. Type of encryption.

        :param encryption_type: The encryption_type of this EncryptionInfo.
        :type encryption_type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "GOOGLE_DEFAULT_ENCRYPTION", "CUSTOMER_MANAGED_ENCRYPTION"]  # noqa: E501
        if encryption_type not in allowed_values:
            raise ValueError(
                "Invalid value for `encryption_type` ({0}), must be one of {1}"
                .format(encryption_type, allowed_values)
            )

        self._encryption_type = encryption_type

    @property
    def kms_key_versions(self):
        """Gets the kms_key_versions of this EncryptionInfo.

        Output only. Cloud KMS key versions that are being used to protect the database or the backup.

        :return: The kms_key_versions of this EncryptionInfo.
        :rtype: List[str]
        """
        return self._kms_key_versions

    @kms_key_versions.setter
    def kms_key_versions(self, kms_key_versions):
        """Sets the kms_key_versions of this EncryptionInfo.

        Output only. Cloud KMS key versions that are being used to protect the database or the backup.

        :param kms_key_versions: The kms_key_versions of this EncryptionInfo.
        :type kms_key_versions: List[str]
        """

        self._kms_key_versions = kms_key_versions
