# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrimaryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, secondary_cluster_names: List[str]=None):
        """PrimaryConfig - a model defined in OpenAPI

        :param secondary_cluster_names: The secondary_cluster_names of this PrimaryConfig.
        """
        self.openapi_types = {
            'secondary_cluster_names': List[str]
        }

        self.attribute_map = {
            'secondary_cluster_names': 'secondaryClusterNames'
        }

        self._secondary_cluster_names = secondary_cluster_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrimaryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrimaryConfig of this PrimaryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secondary_cluster_names(self):
        """Gets the secondary_cluster_names of this PrimaryConfig.

        Output only. Names of the clusters that are replicating from this cluster.

        :return: The secondary_cluster_names of this PrimaryConfig.
        :rtype: List[str]
        """
        return self._secondary_cluster_names

    @secondary_cluster_names.setter
    def secondary_cluster_names(self, secondary_cluster_names):
        """Sets the secondary_cluster_names of this PrimaryConfig.

        Output only. Names of the clusters that are replicating from this cluster.

        :param secondary_cluster_names: The secondary_cluster_names of this PrimaryConfig.
        :type secondary_cluster_names: List[str]
        """

        self._secondary_cluster_names = secondary_cluster_names
