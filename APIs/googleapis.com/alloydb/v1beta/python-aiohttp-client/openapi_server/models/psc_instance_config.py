# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.psc_interface_config import PscInterfaceConfig
from openapi_server import util


class PscInstanceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_consumer_networks: List[str]=None, allowed_consumer_projects: List[str]=None, outgoing_service_attachment_links: List[str]=None, psc_enabled: bool=None, psc_interface_configs: List[PscInterfaceConfig]=None, service_attachment_link: str=None):
        """PscInstanceConfig - a model defined in OpenAPI

        :param allowed_consumer_networks: The allowed_consumer_networks of this PscInstanceConfig.
        :param allowed_consumer_projects: The allowed_consumer_projects of this PscInstanceConfig.
        :param outgoing_service_attachment_links: The outgoing_service_attachment_links of this PscInstanceConfig.
        :param psc_enabled: The psc_enabled of this PscInstanceConfig.
        :param psc_interface_configs: The psc_interface_configs of this PscInstanceConfig.
        :param service_attachment_link: The service_attachment_link of this PscInstanceConfig.
        """
        self.openapi_types = {
            'allowed_consumer_networks': List[str],
            'allowed_consumer_projects': List[str],
            'outgoing_service_attachment_links': List[str],
            'psc_enabled': bool,
            'psc_interface_configs': List[PscInterfaceConfig],
            'service_attachment_link': str
        }

        self.attribute_map = {
            'allowed_consumer_networks': 'allowedConsumerNetworks',
            'allowed_consumer_projects': 'allowedConsumerProjects',
            'outgoing_service_attachment_links': 'outgoingServiceAttachmentLinks',
            'psc_enabled': 'pscEnabled',
            'psc_interface_configs': 'pscInterfaceConfigs',
            'service_attachment_link': 'serviceAttachmentLink'
        }

        self._allowed_consumer_networks = allowed_consumer_networks
        self._allowed_consumer_projects = allowed_consumer_projects
        self._outgoing_service_attachment_links = outgoing_service_attachment_links
        self._psc_enabled = psc_enabled
        self._psc_interface_configs = psc_interface_configs
        self._service_attachment_link = service_attachment_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PscInstanceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PscInstanceConfig of this PscInstanceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_consumer_networks(self):
        """Gets the allowed_consumer_networks of this PscInstanceConfig.

        Optional. List of consumer networks that are allowed to create PSC endpoints to service-attachments to this instance.

        :return: The allowed_consumer_networks of this PscInstanceConfig.
        :rtype: List[str]
        """
        return self._allowed_consumer_networks

    @allowed_consumer_networks.setter
    def allowed_consumer_networks(self, allowed_consumer_networks):
        """Sets the allowed_consumer_networks of this PscInstanceConfig.

        Optional. List of consumer networks that are allowed to create PSC endpoints to service-attachments to this instance.

        :param allowed_consumer_networks: The allowed_consumer_networks of this PscInstanceConfig.
        :type allowed_consumer_networks: List[str]
        """

        self._allowed_consumer_networks = allowed_consumer_networks

    @property
    def allowed_consumer_projects(self):
        """Gets the allowed_consumer_projects of this PscInstanceConfig.

        Optional. List of consumer projects that are allowed to create PSC endpoints to service-attachments to this instance.

        :return: The allowed_consumer_projects of this PscInstanceConfig.
        :rtype: List[str]
        """
        return self._allowed_consumer_projects

    @allowed_consumer_projects.setter
    def allowed_consumer_projects(self, allowed_consumer_projects):
        """Sets the allowed_consumer_projects of this PscInstanceConfig.

        Optional. List of consumer projects that are allowed to create PSC endpoints to service-attachments to this instance.

        :param allowed_consumer_projects: The allowed_consumer_projects of this PscInstanceConfig.
        :type allowed_consumer_projects: List[str]
        """

        self._allowed_consumer_projects = allowed_consumer_projects

    @property
    def outgoing_service_attachment_links(self):
        """Gets the outgoing_service_attachment_links of this PscInstanceConfig.

        Optional. List of service attachments that this instance has created endpoints to connect with. Currently, only a single outgoing service attachment is supported per instance.

        :return: The outgoing_service_attachment_links of this PscInstanceConfig.
        :rtype: List[str]
        """
        return self._outgoing_service_attachment_links

    @outgoing_service_attachment_links.setter
    def outgoing_service_attachment_links(self, outgoing_service_attachment_links):
        """Sets the outgoing_service_attachment_links of this PscInstanceConfig.

        Optional. List of service attachments that this instance has created endpoints to connect with. Currently, only a single outgoing service attachment is supported per instance.

        :param outgoing_service_attachment_links: The outgoing_service_attachment_links of this PscInstanceConfig.
        :type outgoing_service_attachment_links: List[str]
        """

        self._outgoing_service_attachment_links = outgoing_service_attachment_links

    @property
    def psc_enabled(self):
        """Gets the psc_enabled of this PscInstanceConfig.

        Optional. Whether PSC connectivity is enabled for this instance. This is populated by referencing the value from the parent cluster.

        :return: The psc_enabled of this PscInstanceConfig.
        :rtype: bool
        """
        return self._psc_enabled

    @psc_enabled.setter
    def psc_enabled(self, psc_enabled):
        """Sets the psc_enabled of this PscInstanceConfig.

        Optional. Whether PSC connectivity is enabled for this instance. This is populated by referencing the value from the parent cluster.

        :param psc_enabled: The psc_enabled of this PscInstanceConfig.
        :type psc_enabled: bool
        """

        self._psc_enabled = psc_enabled

    @property
    def psc_interface_configs(self):
        """Gets the psc_interface_configs of this PscInstanceConfig.

        Optional. Configurations for setting up PSC interfaces attached to the instance which are used for outbound connectivity. Only primary instances can have PSC interface attached. All the VMs created for the primary instance will share the same configurations. Currently we only support 0 or 1 PSC interface.

        :return: The psc_interface_configs of this PscInstanceConfig.
        :rtype: List[PscInterfaceConfig]
        """
        return self._psc_interface_configs

    @psc_interface_configs.setter
    def psc_interface_configs(self, psc_interface_configs):
        """Sets the psc_interface_configs of this PscInstanceConfig.

        Optional. Configurations for setting up PSC interfaces attached to the instance which are used for outbound connectivity. Only primary instances can have PSC interface attached. All the VMs created for the primary instance will share the same configurations. Currently we only support 0 or 1 PSC interface.

        :param psc_interface_configs: The psc_interface_configs of this PscInstanceConfig.
        :type psc_interface_configs: List[PscInterfaceConfig]
        """

        self._psc_interface_configs = psc_interface_configs

    @property
    def service_attachment_link(self):
        """Gets the service_attachment_link of this PscInstanceConfig.

        Output only. The service attachment created when Private Service Connect (PSC) is enabled for the instance. The name of the resource will be in the format of `projects//regions//serviceAttachments/`

        :return: The service_attachment_link of this PscInstanceConfig.
        :rtype: str
        """
        return self._service_attachment_link

    @service_attachment_link.setter
    def service_attachment_link(self, service_attachment_link):
        """Sets the service_attachment_link of this PscInstanceConfig.

        Output only. The service attachment created when Private Service Connect (PSC) is enabled for the instance. The name of the resource will be in the format of `projects//regions//serviceAttachments/`

        :param service_attachment_link: The service_attachment_link of this PscInstanceConfig.
        :type service_attachment_link: str
        """

        self._service_attachment_link = service_attachment_link
