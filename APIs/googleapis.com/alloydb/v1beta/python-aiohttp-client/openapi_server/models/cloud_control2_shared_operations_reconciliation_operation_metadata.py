# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CloudControl2SharedOperationsReconciliationOperationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete_resource: bool=None, exclusive_action: str=None):
        """CloudControl2SharedOperationsReconciliationOperationMetadata - a model defined in OpenAPI

        :param delete_resource: The delete_resource of this CloudControl2SharedOperationsReconciliationOperationMetadata.
        :param exclusive_action: The exclusive_action of this CloudControl2SharedOperationsReconciliationOperationMetadata.
        """
        self.openapi_types = {
            'delete_resource': bool,
            'exclusive_action': str
        }

        self.attribute_map = {
            'delete_resource': 'deleteResource',
            'exclusive_action': 'exclusiveAction'
        }

        self._delete_resource = delete_resource
        self._exclusive_action = exclusive_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudControl2SharedOperationsReconciliationOperationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudControl2SharedOperationsReconciliationOperationMetadata of this CloudControl2SharedOperationsReconciliationOperationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete_resource(self):
        """Gets the delete_resource of this CloudControl2SharedOperationsReconciliationOperationMetadata.

        DEPRECATED. Use exclusive_action instead.

        :return: The delete_resource of this CloudControl2SharedOperationsReconciliationOperationMetadata.
        :rtype: bool
        """
        return self._delete_resource

    @delete_resource.setter
    def delete_resource(self, delete_resource):
        """Sets the delete_resource of this CloudControl2SharedOperationsReconciliationOperationMetadata.

        DEPRECATED. Use exclusive_action instead.

        :param delete_resource: The delete_resource of this CloudControl2SharedOperationsReconciliationOperationMetadata.
        :type delete_resource: bool
        """

        self._delete_resource = delete_resource

    @property
    def exclusive_action(self):
        """Gets the exclusive_action of this CloudControl2SharedOperationsReconciliationOperationMetadata.

        Excluisive action returned by the CLH.

        :return: The exclusive_action of this CloudControl2SharedOperationsReconciliationOperationMetadata.
        :rtype: str
        """
        return self._exclusive_action

    @exclusive_action.setter
    def exclusive_action(self, exclusive_action):
        """Sets the exclusive_action of this CloudControl2SharedOperationsReconciliationOperationMetadata.

        Excluisive action returned by the CLH.

        :param exclusive_action: The exclusive_action of this CloudControl2SharedOperationsReconciliationOperationMetadata.
        :type exclusive_action: str
        """
        allowed_values = ["UNKNOWN_REPAIR_ACTION", "DELETE", "RETRY"]  # noqa: E501
        if exclusive_action not in allowed_values:
            raise ValueError(
                "Invalid value for `exclusive_action` ({0}), must be one of {1}"
                .format(exclusive_action, allowed_values)
            )

        self._exclusive_action = exclusive_action
