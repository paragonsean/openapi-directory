# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QuantityBasedExpiry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retention_count: int=None, total_retention_count: int=None):
        """QuantityBasedExpiry - a model defined in OpenAPI

        :param retention_count: The retention_count of this QuantityBasedExpiry.
        :param total_retention_count: The total_retention_count of this QuantityBasedExpiry.
        """
        self.openapi_types = {
            'retention_count': int,
            'total_retention_count': int
        }

        self.attribute_map = {
            'retention_count': 'retentionCount',
            'total_retention_count': 'totalRetentionCount'
        }

        self._retention_count = retention_count
        self._total_retention_count = total_retention_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuantityBasedExpiry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuantityBasedExpiry of this QuantityBasedExpiry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retention_count(self):
        """Gets the retention_count of this QuantityBasedExpiry.

        Output only. The backup's position among its backups with the same source cluster and type, by descending chronological order create time(i.e. newest first).

        :return: The retention_count of this QuantityBasedExpiry.
        :rtype: int
        """
        return self._retention_count

    @retention_count.setter
    def retention_count(self, retention_count):
        """Sets the retention_count of this QuantityBasedExpiry.

        Output only. The backup's position among its backups with the same source cluster and type, by descending chronological order create time(i.e. newest first).

        :param retention_count: The retention_count of this QuantityBasedExpiry.
        :type retention_count: int
        """

        self._retention_count = retention_count

    @property
    def total_retention_count(self):
        """Gets the total_retention_count of this QuantityBasedExpiry.

        Output only. The length of the quantity-based queue, specified by the backup's retention policy.

        :return: The total_retention_count of this QuantityBasedExpiry.
        :rtype: int
        """
        return self._total_retention_count

    @total_retention_count.setter
    def total_retention_count(self, total_retention_count):
        """Sets the total_retention_count of this QuantityBasedExpiry.

        Output only. The length of the quantity-based queue, specified by the backup's retention policy.

        :param total_retention_count: The total_retention_count of this QuantityBasedExpiry.
        :type total_retention_count: int
        """

        self._total_retention_count = total_retention_count
