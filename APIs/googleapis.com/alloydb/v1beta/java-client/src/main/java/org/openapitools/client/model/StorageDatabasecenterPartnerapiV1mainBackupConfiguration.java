/*
 * AlloyDB API
 * AlloyDB for PostgreSQL is an open source-compatible database service that provides a powerful option for migrating, modernizing, or building commercial-grade applications. It offers full compatibility with standard PostgreSQL, and is more than 4x faster for transactional workloads and up to 100x faster for analytical queries than standard PostgreSQL in our performance tests. AlloyDB for PostgreSQL offers a 99.99 percent availability SLA inclusive of maintenance. AlloyDB is optimized for the most demanding use cases, allowing you to build new applications that require high transaction throughput, large database sizes, or multiple read resources; scale existing PostgreSQL workloads with no application changes; and modernize legacy proprietary databases. 
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StorageDatabasecenterPartnerapiV1mainRetentionSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration for automatic backups
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:34:06.887241-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StorageDatabasecenterPartnerapiV1mainBackupConfiguration {
  public static final String SERIALIZED_NAME_AUTOMATED_BACKUP_ENABLED = "automatedBackupEnabled";
  @SerializedName(SERIALIZED_NAME_AUTOMATED_BACKUP_ENABLED)
  private Boolean automatedBackupEnabled;

  public static final String SERIALIZED_NAME_BACKUP_RETENTION_SETTINGS = "backupRetentionSettings";
  @SerializedName(SERIALIZED_NAME_BACKUP_RETENTION_SETTINGS)
  private StorageDatabasecenterPartnerapiV1mainRetentionSettings backupRetentionSettings;

  public static final String SERIALIZED_NAME_POINT_IN_TIME_RECOVERY_ENABLED = "pointInTimeRecoveryEnabled";
  @SerializedName(SERIALIZED_NAME_POINT_IN_TIME_RECOVERY_ENABLED)
  private Boolean pointInTimeRecoveryEnabled;

  public StorageDatabasecenterPartnerapiV1mainBackupConfiguration() {
  }

  public StorageDatabasecenterPartnerapiV1mainBackupConfiguration automatedBackupEnabled(Boolean automatedBackupEnabled) {
    this.automatedBackupEnabled = automatedBackupEnabled;
    return this;
  }

  /**
   * Whether customer visible automated backups are enabled on the instance.
   * @return automatedBackupEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAutomatedBackupEnabled() {
    return automatedBackupEnabled;
  }

  public void setAutomatedBackupEnabled(Boolean automatedBackupEnabled) {
    this.automatedBackupEnabled = automatedBackupEnabled;
  }


  public StorageDatabasecenterPartnerapiV1mainBackupConfiguration backupRetentionSettings(StorageDatabasecenterPartnerapiV1mainRetentionSettings backupRetentionSettings) {
    this.backupRetentionSettings = backupRetentionSettings;
    return this;
  }

  /**
   * Get backupRetentionSettings
   * @return backupRetentionSettings
   */
  @javax.annotation.Nullable
  public StorageDatabasecenterPartnerapiV1mainRetentionSettings getBackupRetentionSettings() {
    return backupRetentionSettings;
  }

  public void setBackupRetentionSettings(StorageDatabasecenterPartnerapiV1mainRetentionSettings backupRetentionSettings) {
    this.backupRetentionSettings = backupRetentionSettings;
  }


  public StorageDatabasecenterPartnerapiV1mainBackupConfiguration pointInTimeRecoveryEnabled(Boolean pointInTimeRecoveryEnabled) {
    this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
    return this;
  }

  /**
   * Whether point-in-time recovery is enabled. This is optional field, if the database service does not have this feature or metadata is not available in control plane, this can be omitted.
   * @return pointInTimeRecoveryEnabled
   */
  @javax.annotation.Nullable
  public Boolean getPointInTimeRecoveryEnabled() {
    return pointInTimeRecoveryEnabled;
  }

  public void setPointInTimeRecoveryEnabled(Boolean pointInTimeRecoveryEnabled) {
    this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageDatabasecenterPartnerapiV1mainBackupConfiguration storageDatabasecenterPartnerapiV1mainBackupConfiguration = (StorageDatabasecenterPartnerapiV1mainBackupConfiguration) o;
    return Objects.equals(this.automatedBackupEnabled, storageDatabasecenterPartnerapiV1mainBackupConfiguration.automatedBackupEnabled) &&
        Objects.equals(this.backupRetentionSettings, storageDatabasecenterPartnerapiV1mainBackupConfiguration.backupRetentionSettings) &&
        Objects.equals(this.pointInTimeRecoveryEnabled, storageDatabasecenterPartnerapiV1mainBackupConfiguration.pointInTimeRecoveryEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automatedBackupEnabled, backupRetentionSettings, pointInTimeRecoveryEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageDatabasecenterPartnerapiV1mainBackupConfiguration {\n");
    sb.append("    automatedBackupEnabled: ").append(toIndentedString(automatedBackupEnabled)).append("\n");
    sb.append("    backupRetentionSettings: ").append(toIndentedString(backupRetentionSettings)).append("\n");
    sb.append("    pointInTimeRecoveryEnabled: ").append(toIndentedString(pointInTimeRecoveryEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automatedBackupEnabled");
    openapiFields.add("backupRetentionSettings");
    openapiFields.add("pointInTimeRecoveryEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StorageDatabasecenterPartnerapiV1mainBackupConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StorageDatabasecenterPartnerapiV1mainBackupConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StorageDatabasecenterPartnerapiV1mainBackupConfiguration is not found in the empty JSON string", StorageDatabasecenterPartnerapiV1mainBackupConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StorageDatabasecenterPartnerapiV1mainBackupConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StorageDatabasecenterPartnerapiV1mainBackupConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `backupRetentionSettings`
      if (jsonObj.get("backupRetentionSettings") != null && !jsonObj.get("backupRetentionSettings").isJsonNull()) {
        StorageDatabasecenterPartnerapiV1mainRetentionSettings.validateJsonElement(jsonObj.get("backupRetentionSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StorageDatabasecenterPartnerapiV1mainBackupConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StorageDatabasecenterPartnerapiV1mainBackupConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StorageDatabasecenterPartnerapiV1mainBackupConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StorageDatabasecenterPartnerapiV1mainBackupConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<StorageDatabasecenterPartnerapiV1mainBackupConfiguration>() {
           @Override
           public void write(JsonWriter out, StorageDatabasecenterPartnerapiV1mainBackupConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StorageDatabasecenterPartnerapiV1mainBackupConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StorageDatabasecenterPartnerapiV1mainBackupConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StorageDatabasecenterPartnerapiV1mainBackupConfiguration
   * @throws IOException if the JSON string is invalid with respect to StorageDatabasecenterPartnerapiV1mainBackupConfiguration
   */
  public static StorageDatabasecenterPartnerapiV1mainBackupConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StorageDatabasecenterPartnerapiV1mainBackupConfiguration.class);
  }

  /**
   * Convert an instance of StorageDatabasecenterPartnerapiV1mainBackupConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

