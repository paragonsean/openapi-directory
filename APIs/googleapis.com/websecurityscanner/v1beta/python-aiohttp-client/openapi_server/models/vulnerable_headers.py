# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.header import Header
from openapi_server import util


class VulnerableHeaders(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, headers: List[Header]=None, missing_headers: List[Header]=None):
        """VulnerableHeaders - a model defined in OpenAPI

        :param headers: The headers of this VulnerableHeaders.
        :param missing_headers: The missing_headers of this VulnerableHeaders.
        """
        self.openapi_types = {
            'headers': List[Header],
            'missing_headers': List[Header]
        }

        self.attribute_map = {
            'headers': 'headers',
            'missing_headers': 'missingHeaders'
        }

        self._headers = headers
        self._missing_headers = missing_headers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VulnerableHeaders':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VulnerableHeaders of this VulnerableHeaders.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def headers(self):
        """Gets the headers of this VulnerableHeaders.

        List of vulnerable headers.

        :return: The headers of this VulnerableHeaders.
        :rtype: List[Header]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this VulnerableHeaders.

        List of vulnerable headers.

        :param headers: The headers of this VulnerableHeaders.
        :type headers: List[Header]
        """

        self._headers = headers

    @property
    def missing_headers(self):
        """Gets the missing_headers of this VulnerableHeaders.

        List of missing headers.

        :return: The missing_headers of this VulnerableHeaders.
        :rtype: List[Header]
        """
        return self._missing_headers

    @missing_headers.setter
    def missing_headers(self, missing_headers):
        """Sets the missing_headers of this VulnerableHeaders.

        List of missing headers.

        :param missing_headers: The missing_headers of this VulnerableHeaders.
        :type missing_headers: List[Header]
        """

        self._missing_headers = missing_headers
