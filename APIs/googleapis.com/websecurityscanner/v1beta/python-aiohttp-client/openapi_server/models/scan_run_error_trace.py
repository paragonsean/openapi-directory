# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scan_config_error import ScanConfigError
from openapi_server import util


class ScanRunErrorTrace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, most_common_http_error_code: int=None, scan_config_error: ScanConfigError=None):
        """ScanRunErrorTrace - a model defined in OpenAPI

        :param code: The code of this ScanRunErrorTrace.
        :param most_common_http_error_code: The most_common_http_error_code of this ScanRunErrorTrace.
        :param scan_config_error: The scan_config_error of this ScanRunErrorTrace.
        """
        self.openapi_types = {
            'code': str,
            'most_common_http_error_code': int,
            'scan_config_error': ScanConfigError
        }

        self.attribute_map = {
            'code': 'code',
            'most_common_http_error_code': 'mostCommonHttpErrorCode',
            'scan_config_error': 'scanConfigError'
        }

        self._code = code
        self._most_common_http_error_code = most_common_http_error_code
        self._scan_config_error = scan_config_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScanRunErrorTrace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScanRunErrorTrace of this ScanRunErrorTrace.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this ScanRunErrorTrace.

        Indicates the error reason code.

        :return: The code of this ScanRunErrorTrace.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this ScanRunErrorTrace.

        Indicates the error reason code.

        :param code: The code of this ScanRunErrorTrace.
        :type code: str
        """
        allowed_values = ["CODE_UNSPECIFIED", "INTERNAL_ERROR", "SCAN_CONFIG_ISSUE", "AUTHENTICATION_CONFIG_ISSUE", "TIMED_OUT_WHILE_SCANNING", "TOO_MANY_REDIRECTS", "TOO_MANY_HTTP_ERRORS", "STARTING_URLS_CRAWL_HTTP_ERRORS"]  # noqa: E501
        if code not in allowed_values:
            raise ValueError(
                "Invalid value for `code` ({0}), must be one of {1}"
                .format(code, allowed_values)
            )

        self._code = code

    @property
    def most_common_http_error_code(self):
        """Gets the most_common_http_error_code of this ScanRunErrorTrace.

        If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.

        :return: The most_common_http_error_code of this ScanRunErrorTrace.
        :rtype: int
        """
        return self._most_common_http_error_code

    @most_common_http_error_code.setter
    def most_common_http_error_code(self, most_common_http_error_code):
        """Sets the most_common_http_error_code of this ScanRunErrorTrace.

        If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.

        :param most_common_http_error_code: The most_common_http_error_code of this ScanRunErrorTrace.
        :type most_common_http_error_code: int
        """

        self._most_common_http_error_code = most_common_http_error_code

    @property
    def scan_config_error(self):
        """Gets the scan_config_error of this ScanRunErrorTrace.


        :return: The scan_config_error of this ScanRunErrorTrace.
        :rtype: ScanConfigError
        """
        return self._scan_config_error

    @scan_config_error.setter
    def scan_config_error(self, scan_config_error):
        """Sets the scan_config_error of this ScanRunErrorTrace.


        :param scan_config_error: The scan_config_error of this ScanRunErrorTrace.
        :type scan_config_error: ScanConfigError
        """

        self._scan_config_error = scan_config_error
