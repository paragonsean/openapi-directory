/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForm::OAIForm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForm::OAIForm() {
    this->initializeModel();
}

OAIForm::~OAIForm() {}

void OAIForm::initializeModel() {

    m_action_uri_isSet = false;
    m_action_uri_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;
}

void OAIForm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForm::fromJsonObject(QJsonObject json) {

    m_action_uri_isValid = ::OpenAPI::fromJsonValue(m_action_uri, json[QString("actionUri")]);
    m_action_uri_isSet = !json[QString("actionUri")].isNull() && m_action_uri_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;
}

QString OAIForm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForm::asJsonObject() const {
    QJsonObject obj;
    if (m_action_uri_isSet) {
        obj.insert(QString("actionUri"), ::OpenAPI::toJsonValue(m_action_uri));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    return obj;
}

QString OAIForm::getActionUri() const {
    return m_action_uri;
}
void OAIForm::setActionUri(const QString &action_uri) {
    m_action_uri = action_uri;
    m_action_uri_isSet = true;
}

bool OAIForm::is_action_uri_Set() const{
    return m_action_uri_isSet;
}

bool OAIForm::is_action_uri_Valid() const{
    return m_action_uri_isValid;
}

QList<QString> OAIForm::getFields() const {
    return m_fields;
}
void OAIForm::setFields(const QList<QString> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIForm::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIForm::is_fields_Valid() const{
    return m_fields_isValid;
}

bool OAIForm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
