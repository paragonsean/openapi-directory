/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthentication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthentication::OAIAuthentication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthentication::OAIAuthentication() {
    this->initializeModel();
}

OAIAuthentication::~OAIAuthentication() {}

void OAIAuthentication::initializeModel() {

    m_custom_account_isSet = false;
    m_custom_account_isValid = false;

    m_google_account_isSet = false;
    m_google_account_isValid = false;

    m_iap_credential_isSet = false;
    m_iap_credential_isValid = false;
}

void OAIAuthentication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthentication::fromJsonObject(QJsonObject json) {

    m_custom_account_isValid = ::OpenAPI::fromJsonValue(m_custom_account, json[QString("customAccount")]);
    m_custom_account_isSet = !json[QString("customAccount")].isNull() && m_custom_account_isValid;

    m_google_account_isValid = ::OpenAPI::fromJsonValue(m_google_account, json[QString("googleAccount")]);
    m_google_account_isSet = !json[QString("googleAccount")].isNull() && m_google_account_isValid;

    m_iap_credential_isValid = ::OpenAPI::fromJsonValue(m_iap_credential, json[QString("iapCredential")]);
    m_iap_credential_isSet = !json[QString("iapCredential")].isNull() && m_iap_credential_isValid;
}

QString OAIAuthentication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthentication::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_account.isSet()) {
        obj.insert(QString("customAccount"), ::OpenAPI::toJsonValue(m_custom_account));
    }
    if (m_google_account.isSet()) {
        obj.insert(QString("googleAccount"), ::OpenAPI::toJsonValue(m_google_account));
    }
    if (m_iap_credential.isSet()) {
        obj.insert(QString("iapCredential"), ::OpenAPI::toJsonValue(m_iap_credential));
    }
    return obj;
}

OAICustomAccount OAIAuthentication::getCustomAccount() const {
    return m_custom_account;
}
void OAIAuthentication::setCustomAccount(const OAICustomAccount &custom_account) {
    m_custom_account = custom_account;
    m_custom_account_isSet = true;
}

bool OAIAuthentication::is_custom_account_Set() const{
    return m_custom_account_isSet;
}

bool OAIAuthentication::is_custom_account_Valid() const{
    return m_custom_account_isValid;
}

OAIGoogleAccount OAIAuthentication::getGoogleAccount() const {
    return m_google_account;
}
void OAIAuthentication::setGoogleAccount(const OAIGoogleAccount &google_account) {
    m_google_account = google_account;
    m_google_account_isSet = true;
}

bool OAIAuthentication::is_google_account_Set() const{
    return m_google_account_isSet;
}

bool OAIAuthentication::is_google_account_Valid() const{
    return m_google_account_isValid;
}

OAIIapCredential OAIAuthentication::getIapCredential() const {
    return m_iap_credential;
}
void OAIAuthentication::setIapCredential(const OAIIapCredential &iap_credential) {
    m_iap_credential = iap_credential;
    m_iap_credential_isSet = true;
}

bool OAIAuthentication::is_iap_credential_Set() const{
    return m_iap_credential_isSet;
}

bool OAIAuthentication::is_iap_credential_Valid() const{
    return m_iap_credential_isValid;
}

bool OAIAuthentication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iap_credential.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthentication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
