/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinding.h
 *
 * A Finding resource represents a vulnerability instance identified during a ScanRun.
 */

#ifndef OAIFinding_H
#define OAIFinding_H

#include <QJsonObject>

#include "OAIForm.h"
#include "OAIOutdatedLibrary.h"
#include "OAIViolatingResource.h"
#include "OAIVulnerableHeaders.h"
#include "OAIVulnerableParameters.h"
#include "OAIXss.h"
#include "OAIXxe.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIForm;
class OAIOutdatedLibrary;
class OAIViolatingResource;
class OAIVulnerableHeaders;
class OAIVulnerableParameters;
class OAIXss;
class OAIXxe;

class OAIFinding : public OAIObject {
public:
    OAIFinding();
    OAIFinding(QString json);
    ~OAIFinding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFinalUrl() const;
    void setFinalUrl(const QString &final_url);
    bool is_final_url_Set() const;
    bool is_final_url_Valid() const;

    QString getFindingType() const;
    void setFindingType(const QString &finding_type);
    bool is_finding_type_Set() const;
    bool is_finding_type_Valid() const;

    OAIForm getForm() const;
    void setForm(const OAIForm &form);
    bool is_form_Set() const;
    bool is_form_Valid() const;

    QString getFrameUrl() const;
    void setFrameUrl(const QString &frame_url);
    bool is_frame_url_Set() const;
    bool is_frame_url_Valid() const;

    QString getFuzzedUrl() const;
    void setFuzzedUrl(const QString &fuzzed_url);
    bool is_fuzzed_url_Set() const;
    bool is_fuzzed_url_Valid() const;

    QString getHttpMethod() const;
    void setHttpMethod(const QString &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOutdatedLibrary getOutdatedLibrary() const;
    void setOutdatedLibrary(const OAIOutdatedLibrary &outdated_library);
    bool is_outdated_library_Set() const;
    bool is_outdated_library_Valid() const;

    QString getReproductionUrl() const;
    void setReproductionUrl(const QString &reproduction_url);
    bool is_reproduction_url_Set() const;
    bool is_reproduction_url_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getTrackingId() const;
    void setTrackingId(const QString &tracking_id);
    bool is_tracking_id_Set() const;
    bool is_tracking_id_Valid() const;

    OAIViolatingResource getViolatingResource() const;
    void setViolatingResource(const OAIViolatingResource &violating_resource);
    bool is_violating_resource_Set() const;
    bool is_violating_resource_Valid() const;

    OAIVulnerableHeaders getVulnerableHeaders() const;
    void setVulnerableHeaders(const OAIVulnerableHeaders &vulnerable_headers);
    bool is_vulnerable_headers_Set() const;
    bool is_vulnerable_headers_Valid() const;

    OAIVulnerableParameters getVulnerableParameters() const;
    void setVulnerableParameters(const OAIVulnerableParameters &vulnerable_parameters);
    bool is_vulnerable_parameters_Set() const;
    bool is_vulnerable_parameters_Valid() const;

    OAIXss getXss() const;
    void setXss(const OAIXss &xss);
    bool is_xss_Set() const;
    bool is_xss_Valid() const;

    OAIXxe getXxe() const;
    void setXxe(const OAIXxe &xxe);
    bool is_xxe_Set() const;
    bool is_xxe_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_final_url;
    bool m_final_url_isSet;
    bool m_final_url_isValid;

    QString m_finding_type;
    bool m_finding_type_isSet;
    bool m_finding_type_isValid;

    OAIForm m_form;
    bool m_form_isSet;
    bool m_form_isValid;

    QString m_frame_url;
    bool m_frame_url_isSet;
    bool m_frame_url_isValid;

    QString m_fuzzed_url;
    bool m_fuzzed_url_isSet;
    bool m_fuzzed_url_isValid;

    QString m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOutdatedLibrary m_outdated_library;
    bool m_outdated_library_isSet;
    bool m_outdated_library_isValid;

    QString m_reproduction_url;
    bool m_reproduction_url_isSet;
    bool m_reproduction_url_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_tracking_id;
    bool m_tracking_id_isSet;
    bool m_tracking_id_isValid;

    OAIViolatingResource m_violating_resource;
    bool m_violating_resource_isSet;
    bool m_violating_resource_isValid;

    OAIVulnerableHeaders m_vulnerable_headers;
    bool m_vulnerable_headers_isSet;
    bool m_vulnerable_headers_isValid;

    OAIVulnerableParameters m_vulnerable_parameters;
    bool m_vulnerable_parameters_isSet;
    bool m_vulnerable_parameters_isValid;

    OAIXss m_xss;
    bool m_xss_isSet;
    bool m_xss_isValid;

    OAIXxe m_xxe;
    bool m_xxe_isSet;
    bool m_xxe_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinding)

#endif // OAIFinding_H
