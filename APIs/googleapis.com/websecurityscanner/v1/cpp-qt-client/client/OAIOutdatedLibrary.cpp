/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutdatedLibrary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutdatedLibrary::OAIOutdatedLibrary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutdatedLibrary::OAIOutdatedLibrary() {
    this->initializeModel();
}

OAIOutdatedLibrary::~OAIOutdatedLibrary() {}

void OAIOutdatedLibrary::initializeModel() {

    m_learn_more_urls_isSet = false;
    m_learn_more_urls_isValid = false;

    m_library_name_isSet = false;
    m_library_name_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIOutdatedLibrary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutdatedLibrary::fromJsonObject(QJsonObject json) {

    m_learn_more_urls_isValid = ::OpenAPI::fromJsonValue(m_learn_more_urls, json[QString("learnMoreUrls")]);
    m_learn_more_urls_isSet = !json[QString("learnMoreUrls")].isNull() && m_learn_more_urls_isValid;

    m_library_name_isValid = ::OpenAPI::fromJsonValue(m_library_name, json[QString("libraryName")]);
    m_library_name_isSet = !json[QString("libraryName")].isNull() && m_library_name_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIOutdatedLibrary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutdatedLibrary::asJsonObject() const {
    QJsonObject obj;
    if (m_learn_more_urls.size() > 0) {
        obj.insert(QString("learnMoreUrls"), ::OpenAPI::toJsonValue(m_learn_more_urls));
    }
    if (m_library_name_isSet) {
        obj.insert(QString("libraryName"), ::OpenAPI::toJsonValue(m_library_name));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QList<QString> OAIOutdatedLibrary::getLearnMoreUrls() const {
    return m_learn_more_urls;
}
void OAIOutdatedLibrary::setLearnMoreUrls(const QList<QString> &learn_more_urls) {
    m_learn_more_urls = learn_more_urls;
    m_learn_more_urls_isSet = true;
}

bool OAIOutdatedLibrary::is_learn_more_urls_Set() const{
    return m_learn_more_urls_isSet;
}

bool OAIOutdatedLibrary::is_learn_more_urls_Valid() const{
    return m_learn_more_urls_isValid;
}

QString OAIOutdatedLibrary::getLibraryName() const {
    return m_library_name;
}
void OAIOutdatedLibrary::setLibraryName(const QString &library_name) {
    m_library_name = library_name;
    m_library_name_isSet = true;
}

bool OAIOutdatedLibrary::is_library_name_Set() const{
    return m_library_name_isSet;
}

bool OAIOutdatedLibrary::is_library_name_Valid() const{
    return m_library_name_isValid;
}

QString OAIOutdatedLibrary::getVersion() const {
    return m_version;
}
void OAIOutdatedLibrary::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIOutdatedLibrary::is_version_Set() const{
    return m_version_isSet;
}

bool OAIOutdatedLibrary::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIOutdatedLibrary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_learn_more_urls.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_library_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutdatedLibrary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
