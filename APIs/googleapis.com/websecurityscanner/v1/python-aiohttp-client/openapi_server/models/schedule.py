# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Schedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval_duration_days: int=None, schedule_time: str=None):
        """Schedule - a model defined in OpenAPI

        :param interval_duration_days: The interval_duration_days of this Schedule.
        :param schedule_time: The schedule_time of this Schedule.
        """
        self.openapi_types = {
            'interval_duration_days': int,
            'schedule_time': str
        }

        self.attribute_map = {
            'interval_duration_days': 'intervalDurationDays',
            'schedule_time': 'scheduleTime'
        }

        self._interval_duration_days = interval_duration_days
        self._schedule_time = schedule_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Schedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Schedule of this Schedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval_duration_days(self):
        """Gets the interval_duration_days of this Schedule.

        Required. The duration of time between executions in days.

        :return: The interval_duration_days of this Schedule.
        :rtype: int
        """
        return self._interval_duration_days

    @interval_duration_days.setter
    def interval_duration_days(self, interval_duration_days):
        """Sets the interval_duration_days of this Schedule.

        Required. The duration of time between executions in days.

        :param interval_duration_days: The interval_duration_days of this Schedule.
        :type interval_duration_days: int
        """

        self._interval_duration_days = interval_duration_days

    @property
    def schedule_time(self):
        """Gets the schedule_time of this Schedule.

        A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.

        :return: The schedule_time of this Schedule.
        :rtype: str
        """
        return self._schedule_time

    @schedule_time.setter
    def schedule_time(self, schedule_time):
        """Sets the schedule_time of this Schedule.

        A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.

        :param schedule_time: The schedule_time of this Schedule.
        :type schedule_time: str
        """

        self._schedule_time = schedule_time
