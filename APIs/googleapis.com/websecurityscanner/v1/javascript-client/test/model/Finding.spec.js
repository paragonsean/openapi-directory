/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebSecurityScannerApi);
  }
}(this, function(expect, WebSecurityScannerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebSecurityScannerApi.Finding();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Finding', function() {
    it('should create an instance of Finding', function() {
      // uncomment below and update the code to test Finding
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be.a(WebSecurityScannerApi.Finding);
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property finalUrl (base name: "finalUrl")', function() {
      // uncomment below and update the code to test the property finalUrl
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property findingType (base name: "findingType")', function() {
      // uncomment below and update the code to test the property findingType
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property form (base name: "form")', function() {
      // uncomment below and update the code to test the property form
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property frameUrl (base name: "frameUrl")', function() {
      // uncomment below and update the code to test the property frameUrl
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property fuzzedUrl (base name: "fuzzedUrl")', function() {
      // uncomment below and update the code to test the property fuzzedUrl
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property httpMethod (base name: "httpMethod")', function() {
      // uncomment below and update the code to test the property httpMethod
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property outdatedLibrary (base name: "outdatedLibrary")', function() {
      // uncomment below and update the code to test the property outdatedLibrary
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property reproductionUrl (base name: "reproductionUrl")', function() {
      // uncomment below and update the code to test the property reproductionUrl
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property trackingId (base name: "trackingId")', function() {
      // uncomment below and update the code to test the property trackingId
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property violatingResource (base name: "violatingResource")', function() {
      // uncomment below and update the code to test the property violatingResource
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property vulnerableHeaders (base name: "vulnerableHeaders")', function() {
      // uncomment below and update the code to test the property vulnerableHeaders
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property vulnerableParameters (base name: "vulnerableParameters")', function() {
      // uncomment below and update the code to test the property vulnerableParameters
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property xss (base name: "xss")', function() {
      // uncomment below and update the code to test the property xss
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

    it('should have the property xxe (base name: "xxe")', function() {
      // uncomment below and update the code to test the property xxe
      //var instance = new WebSecurityScannerApi.Finding();
      //expect(instance).to.be();
    });

  });

}));
