/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebSecurityScannerApi);
  }
}(this, function(expect, WebSecurityScannerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebSecurityScannerApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('websecurityscannerProjectsScanConfigsCreate', function() {
      it('should call websecurityscannerProjectsScanConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsCreate
        //instance.websecurityscannerProjectsScanConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsDelete', function() {
      it('should call websecurityscannerProjectsScanConfigsDelete successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsDelete
        //instance.websecurityscannerProjectsScanConfigsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsList', function() {
      it('should call websecurityscannerProjectsScanConfigsList successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsList
        //instance.websecurityscannerProjectsScanConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsPatch', function() {
      it('should call websecurityscannerProjectsScanConfigsPatch successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsPatch
        //instance.websecurityscannerProjectsScanConfigsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsScanRunsCrawledUrlsList', function() {
      it('should call websecurityscannerProjectsScanConfigsScanRunsCrawledUrlsList successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsScanRunsCrawledUrlsList
        //instance.websecurityscannerProjectsScanConfigsScanRunsCrawledUrlsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsScanRunsFindingTypeStatsList', function() {
      it('should call websecurityscannerProjectsScanConfigsScanRunsFindingTypeStatsList successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsScanRunsFindingTypeStatsList
        //instance.websecurityscannerProjectsScanConfigsScanRunsFindingTypeStatsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsScanRunsFindingsGet', function() {
      it('should call websecurityscannerProjectsScanConfigsScanRunsFindingsGet successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsScanRunsFindingsGet
        //instance.websecurityscannerProjectsScanConfigsScanRunsFindingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsScanRunsFindingsList', function() {
      it('should call websecurityscannerProjectsScanConfigsScanRunsFindingsList successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsScanRunsFindingsList
        //instance.websecurityscannerProjectsScanConfigsScanRunsFindingsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsScanRunsList', function() {
      it('should call websecurityscannerProjectsScanConfigsScanRunsList successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsScanRunsList
        //instance.websecurityscannerProjectsScanConfigsScanRunsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsScanRunsStop', function() {
      it('should call websecurityscannerProjectsScanConfigsScanRunsStop successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsScanRunsStop
        //instance.websecurityscannerProjectsScanConfigsScanRunsStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('websecurityscannerProjectsScanConfigsStart', function() {
      it('should call websecurityscannerProjectsScanConfigsStart successfully', function(done) {
        //uncomment below and update the code to test websecurityscannerProjectsScanConfigsStart
        //instance.websecurityscannerProjectsScanConfigsStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
