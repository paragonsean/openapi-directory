/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FindingTypeStats model module.
 * @module model/FindingTypeStats
 * @version v1
 */
class FindingTypeStats {
    /**
     * Constructs a new <code>FindingTypeStats</code>.
     * A FindingTypeStats resource represents stats regarding a specific FindingType of Findings under a given ScanRun.
     * @alias module:model/FindingTypeStats
     */
    constructor() { 
        
        FindingTypeStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FindingTypeStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FindingTypeStats} obj Optional instance to populate.
     * @return {module:model/FindingTypeStats} The populated <code>FindingTypeStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FindingTypeStats();

            if (data.hasOwnProperty('findingCount')) {
                obj['findingCount'] = ApiClient.convertToType(data['findingCount'], 'Number');
            }
            if (data.hasOwnProperty('findingType')) {
                obj['findingType'] = ApiClient.convertToType(data['findingType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FindingTypeStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FindingTypeStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['findingType'] && !(typeof data['findingType'] === 'string' || data['findingType'] instanceof String)) {
            throw new Error("Expected the field `findingType` to be a primitive type in the JSON string but got " + data['findingType']);
        }

        return true;
    }


}



/**
 * Output only. The count of findings belonging to this finding type.
 * @member {Number} findingCount
 */
FindingTypeStats.prototype['findingCount'] = undefined;

/**
 * Output only. The finding type associated with the stats.
 * @member {String} findingType
 */
FindingTypeStats.prototype['findingType'] = undefined;






export default FindingTypeStats;

