/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScanConfigError from './ScanConfigError';

/**
 * The ScanRunErrorTrace model module.
 * @module model/ScanRunErrorTrace
 * @version v1
 */
class ScanRunErrorTrace {
    /**
     * Constructs a new <code>ScanRunErrorTrace</code>.
     * Output only. Defines an error trace message for a ScanRun.
     * @alias module:model/ScanRunErrorTrace
     */
    constructor() { 
        
        ScanRunErrorTrace.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScanRunErrorTrace</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScanRunErrorTrace} obj Optional instance to populate.
     * @return {module:model/ScanRunErrorTrace} The populated <code>ScanRunErrorTrace</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScanRunErrorTrace();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('mostCommonHttpErrorCode')) {
                obj['mostCommonHttpErrorCode'] = ApiClient.convertToType(data['mostCommonHttpErrorCode'], 'Number');
            }
            if (data.hasOwnProperty('scanConfigError')) {
                obj['scanConfigError'] = ScanConfigError.constructFromObject(data['scanConfigError']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScanRunErrorTrace</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScanRunErrorTrace</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `scanConfigError`
        if (data['scanConfigError']) { // data not null
          ScanConfigError.validateJSON(data['scanConfigError']);
        }

        return true;
    }


}



/**
 * Output only. Indicates the error reason code.
 * @member {module:model/ScanRunErrorTrace.CodeEnum} code
 */
ScanRunErrorTrace.prototype['code'] = undefined;

/**
 * Output only. If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
 * @member {Number} mostCommonHttpErrorCode
 */
ScanRunErrorTrace.prototype['mostCommonHttpErrorCode'] = undefined;

/**
 * @member {module:model/ScanConfigError} scanConfigError
 */
ScanRunErrorTrace.prototype['scanConfigError'] = undefined;





/**
 * Allowed values for the <code>code</code> property.
 * @enum {String}
 * @readonly
 */
ScanRunErrorTrace['CodeEnum'] = {

    /**
     * value: "CODE_UNSPECIFIED"
     * @const
     */
    "CODE_UNSPECIFIED": "CODE_UNSPECIFIED",

    /**
     * value: "INTERNAL_ERROR"
     * @const
     */
    "INTERNAL_ERROR": "INTERNAL_ERROR",

    /**
     * value: "SCAN_CONFIG_ISSUE"
     * @const
     */
    "SCAN_CONFIG_ISSUE": "SCAN_CONFIG_ISSUE",

    /**
     * value: "AUTHENTICATION_CONFIG_ISSUE"
     * @const
     */
    "AUTHENTICATION_CONFIG_ISSUE": "AUTHENTICATION_CONFIG_ISSUE",

    /**
     * value: "TIMED_OUT_WHILE_SCANNING"
     * @const
     */
    "TIMED_OUT_WHILE_SCANNING": "TIMED_OUT_WHILE_SCANNING",

    /**
     * value: "TOO_MANY_REDIRECTS"
     * @const
     */
    "TOO_MANY_REDIRECTS": "TOO_MANY_REDIRECTS",

    /**
     * value: "TOO_MANY_HTTP_ERRORS"
     * @const
     */
    "TOO_MANY_HTTP_ERRORS": "TOO_MANY_HTTP_ERRORS",

    /**
     * value: "STARTING_URLS_CRAWL_HTTP_ERRORS"
     * @const
     */
    "STARTING_URLS_CRAWL_HTTP_ERRORS": "STARTING_URLS_CRAWL_HTTP_ERRORS"
};



export default ScanRunErrorTrace;

