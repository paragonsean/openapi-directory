/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVulnerableHeaders.h
 *
 * Information about vulnerable or missing HTTP Headers.
 */

#ifndef OAIVulnerableHeaders_H
#define OAIVulnerableHeaders_H

#include <QJsonObject>

#include "OAIHeader.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHeader;

class OAIVulnerableHeaders : public OAIObject {
public:
    OAIVulnerableHeaders();
    OAIVulnerableHeaders(QString json);
    ~OAIVulnerableHeaders() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIHeader> getHeaders() const;
    void setHeaders(const QList<OAIHeader> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QList<OAIHeader> getMissingHeaders() const;
    void setMissingHeaders(const QList<OAIHeader> &missing_headers);
    bool is_missing_headers_Set() const;
    bool is_missing_headers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIHeader> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QList<OAIHeader> m_missing_headers;
    bool m_missing_headers_isSet;
    bool m_missing_headers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVulnerableHeaders)

#endif // OAIVulnerableHeaders_H
