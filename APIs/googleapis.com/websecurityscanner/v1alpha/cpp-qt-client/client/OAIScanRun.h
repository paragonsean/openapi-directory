/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScanRun.h
 *
 * A ScanRun is a output-only resource representing an actual run of the scan.
 */

#ifndef OAIScanRun_H
#define OAIScanRun_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScanRun : public OAIObject {
public:
    OAIScanRun();
    OAIScanRun(QString json);
    ~OAIScanRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getExecutionState() const;
    void setExecutionState(const QString &execution_state);
    bool is_execution_state_Set() const;
    bool is_execution_state_Valid() const;

    bool isHasVulnerabilities() const;
    void setHasVulnerabilities(const bool &has_vulnerabilities);
    bool is_has_vulnerabilities_Set() const;
    bool is_has_vulnerabilities_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getProgressPercent() const;
    void setProgressPercent(const qint32 &progress_percent);
    bool is_progress_percent_Set() const;
    bool is_progress_percent_Valid() const;

    QString getResultState() const;
    void setResultState(const QString &result_state);
    bool is_result_state_Set() const;
    bool is_result_state_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getUrlsCrawledCount() const;
    void setUrlsCrawledCount(const QString &urls_crawled_count);
    bool is_urls_crawled_count_Set() const;
    bool is_urls_crawled_count_Valid() const;

    QString getUrlsTestedCount() const;
    void setUrlsTestedCount(const QString &urls_tested_count);
    bool is_urls_tested_count_Set() const;
    bool is_urls_tested_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_execution_state;
    bool m_execution_state_isSet;
    bool m_execution_state_isValid;

    bool m_has_vulnerabilities;
    bool m_has_vulnerabilities_isSet;
    bool m_has_vulnerabilities_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_progress_percent;
    bool m_progress_percent_isSet;
    bool m_progress_percent_isValid;

    QString m_result_state;
    bool m_result_state_isSet;
    bool m_result_state_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_urls_crawled_count;
    bool m_urls_crawled_count_isSet;
    bool m_urls_crawled_count_isValid;

    QString m_urls_tested_count;
    bool m_urls_tested_count_isSet;
    bool m_urls_tested_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScanRun)

#endif // OAIScanRun_H
