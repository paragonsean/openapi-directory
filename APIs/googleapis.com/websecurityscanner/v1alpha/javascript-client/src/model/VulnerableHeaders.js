/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Header from './Header';

/**
 * The VulnerableHeaders model module.
 * @module model/VulnerableHeaders
 * @version v1alpha
 */
class VulnerableHeaders {
    /**
     * Constructs a new <code>VulnerableHeaders</code>.
     * Information about vulnerable or missing HTTP Headers.
     * @alias module:model/VulnerableHeaders
     */
    constructor() { 
        
        VulnerableHeaders.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VulnerableHeaders</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VulnerableHeaders} obj Optional instance to populate.
     * @return {module:model/VulnerableHeaders} The populated <code>VulnerableHeaders</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VulnerableHeaders();

            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], [Header]);
            }
            if (data.hasOwnProperty('missingHeaders')) {
                obj['missingHeaders'] = ApiClient.convertToType(data['missingHeaders'], [Header]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VulnerableHeaders</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VulnerableHeaders</code>.
     */
    static validateJSON(data) {
        if (data['headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['headers'])) {
                throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
            }
            // validate the optional field `headers` (array)
            for (const item of data['headers']) {
                Header.validateJSON(item);
            };
        }
        if (data['missingHeaders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['missingHeaders'])) {
                throw new Error("Expected the field `missingHeaders` to be an array in the JSON data but got " + data['missingHeaders']);
            }
            // validate the optional field `missingHeaders` (array)
            for (const item of data['missingHeaders']) {
                Header.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of vulnerable headers.
 * @member {Array.<module:model/Header>} headers
 */
VulnerableHeaders.prototype['headers'] = undefined;

/**
 * List of missing headers.
 * @member {Array.<module:model/Header>} missingHeaders
 */
VulnerableHeaders.prototype['missingHeaders'] = undefined;






export default VulnerableHeaders;

