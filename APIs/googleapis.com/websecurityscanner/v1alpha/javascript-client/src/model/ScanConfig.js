/**
 * Web Security Scanner API
 * Scans your Compute and App Engine apps for common web vulnerabilities.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Authentication from './Authentication';
import ScanRun from './ScanRun';
import Schedule from './Schedule';

/**
 * The ScanConfig model module.
 * @module model/ScanConfig
 * @version v1alpha
 */
class ScanConfig {
    /**
     * Constructs a new <code>ScanConfig</code>.
     * A ScanConfig resource contains the configurations to launch a scan. next id: 12
     * @alias module:model/ScanConfig
     */
    constructor() { 
        
        ScanConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScanConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScanConfig} obj Optional instance to populate.
     * @return {module:model/ScanConfig} The populated <code>ScanConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScanConfig();

            if (data.hasOwnProperty('authentication')) {
                obj['authentication'] = Authentication.constructFromObject(data['authentication']);
            }
            if (data.hasOwnProperty('blacklistPatterns')) {
                obj['blacklistPatterns'] = ApiClient.convertToType(data['blacklistPatterns'], ['String']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('latestRun')) {
                obj['latestRun'] = ScanRun.constructFromObject(data['latestRun']);
            }
            if (data.hasOwnProperty('maxQps')) {
                obj['maxQps'] = ApiClient.convertToType(data['maxQps'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = Schedule.constructFromObject(data['schedule']);
            }
            if (data.hasOwnProperty('startingUrls')) {
                obj['startingUrls'] = ApiClient.convertToType(data['startingUrls'], ['String']);
            }
            if (data.hasOwnProperty('targetPlatforms')) {
                obj['targetPlatforms'] = ApiClient.convertToType(data['targetPlatforms'], ['String']);
            }
            if (data.hasOwnProperty('userAgent')) {
                obj['userAgent'] = ApiClient.convertToType(data['userAgent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScanConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScanConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authentication`
        if (data['authentication']) { // data not null
          Authentication.validateJSON(data['authentication']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['blacklistPatterns'])) {
            throw new Error("Expected the field `blacklistPatterns` to be an array in the JSON data but got " + data['blacklistPatterns']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `latestRun`
        if (data['latestRun']) { // data not null
          ScanRun.validateJSON(data['latestRun']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          Schedule.validateJSON(data['schedule']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['startingUrls'])) {
            throw new Error("Expected the field `startingUrls` to be an array in the JSON data but got " + data['startingUrls']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targetPlatforms'])) {
            throw new Error("Expected the field `targetPlatforms` to be an array in the JSON data but got " + data['targetPlatforms']);
        }
        // ensure the json data is a string
        if (data['userAgent'] && !(typeof data['userAgent'] === 'string' || data['userAgent'] instanceof String)) {
            throw new Error("Expected the field `userAgent` to be a primitive type in the JSON string but got " + data['userAgent']);
        }

        return true;
    }


}



/**
 * @member {module:model/Authentication} authentication
 */
ScanConfig.prototype['authentication'] = undefined;

/**
 * The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
 * @member {Array.<String>} blacklistPatterns
 */
ScanConfig.prototype['blacklistPatterns'] = undefined;

/**
 * Required. The user provided display name of the ScanConfig.
 * @member {String} displayName
 */
ScanConfig.prototype['displayName'] = undefined;

/**
 * @member {module:model/ScanRun} latestRun
 */
ScanConfig.prototype['latestRun'] = undefined;

/**
 * The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
 * @member {Number} maxQps
 */
ScanConfig.prototype['maxQps'] = undefined;

/**
 * The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system.
 * @member {String} name
 */
ScanConfig.prototype['name'] = undefined;

/**
 * @member {module:model/Schedule} schedule
 */
ScanConfig.prototype['schedule'] = undefined;

/**
 * Required. The starting URLs from which the scanner finds site pages.
 * @member {Array.<String>} startingUrls
 */
ScanConfig.prototype['startingUrls'] = undefined;

/**
 * Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default.
 * @member {Array.<module:model/ScanConfig.TargetPlatformsEnum>} targetPlatforms
 */
ScanConfig.prototype['targetPlatforms'] = undefined;

/**
 * The user agent used during scanning.
 * @member {module:model/ScanConfig.UserAgentEnum} userAgent
 */
ScanConfig.prototype['userAgent'] = undefined;





/**
 * Allowed values for the <code>targetPlatforms</code> property.
 * @enum {String}
 * @readonly
 */
ScanConfig['TargetPlatformsEnum'] = {

    /**
     * value: "TARGET_PLATFORM_UNSPECIFIED"
     * @const
     */
    "TARGET_PLATFORM_UNSPECIFIED": "TARGET_PLATFORM_UNSPECIFIED",

    /**
     * value: "APP_ENGINE"
     * @const
     */
    "APP_ENGINE": "APP_ENGINE",

    /**
     * value: "COMPUTE"
     * @const
     */
    "COMPUTE": "COMPUTE",

    /**
     * value: "CLOUD_RUN"
     * @const
     */
    "CLOUD_RUN": "CLOUD_RUN",

    /**
     * value: "CLOUD_FUNCTIONS"
     * @const
     */
    "CLOUD_FUNCTIONS": "CLOUD_FUNCTIONS"
};


/**
 * Allowed values for the <code>userAgent</code> property.
 * @enum {String}
 * @readonly
 */
ScanConfig['UserAgentEnum'] = {

    /**
     * value: "USER_AGENT_UNSPECIFIED"
     * @const
     */
    "USER_AGENT_UNSPECIFIED": "USER_AGENT_UNSPECIFIED",

    /**
     * value: "CHROME_LINUX"
     * @const
     */
    "CHROME_LINUX": "CHROME_LINUX",

    /**
     * value: "CHROME_ANDROID"
     * @const
     */
    "CHROME_ANDROID": "CHROME_ANDROID",

    /**
     * value: "SAFARI_IPHONE"
     * @const
     */
    "SAFARI_IPHONE": "SAFARI_IPHONE"
};



export default ScanConfig;

