# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Xss(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_message: str=None, stack_traces: List[str]=None):
        """Xss - a model defined in OpenAPI

        :param error_message: The error_message of this Xss.
        :param stack_traces: The stack_traces of this Xss.
        """
        self.openapi_types = {
            'error_message': str,
            'stack_traces': List[str]
        }

        self.attribute_map = {
            'error_message': 'errorMessage',
            'stack_traces': 'stackTraces'
        }

        self._error_message = error_message
        self._stack_traces = stack_traces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Xss':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Xss of this Xss.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self):
        """Gets the error_message of this Xss.

        An error message generated by a javascript breakage.

        :return: The error_message of this Xss.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this Xss.

        An error message generated by a javascript breakage.

        :param error_message: The error_message of this Xss.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def stack_traces(self):
        """Gets the stack_traces of this Xss.

        Stack traces leading to the point where the XSS occurred.

        :return: The stack_traces of this Xss.
        :rtype: List[str]
        """
        return self._stack_traces

    @stack_traces.setter
    def stack_traces(self, stack_traces):
        """Sets the stack_traces of this Xss.

        Stack traces leading to the point where the XSS occurred.

        :param stack_traces: The stack_traces of this Xss.
        :type stack_traces: List[str]
        """

        self._stack_traces = stack_traces
