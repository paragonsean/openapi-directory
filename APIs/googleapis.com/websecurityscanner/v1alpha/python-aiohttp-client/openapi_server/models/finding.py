# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.outdated_library import OutdatedLibrary
from openapi_server.models.violating_resource import ViolatingResource
from openapi_server.models.vulnerable_headers import VulnerableHeaders
from openapi_server.models.vulnerable_parameters import VulnerableParameters
from openapi_server.models.xss import Xss
from openapi_server import util


class Finding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, description: str=None, final_url: str=None, finding_type: str=None, frame_url: str=None, fuzzed_url: str=None, http_method: str=None, name: str=None, outdated_library: OutdatedLibrary=None, reproduction_url: str=None, tracking_id: str=None, violating_resource: ViolatingResource=None, vulnerable_headers: VulnerableHeaders=None, vulnerable_parameters: VulnerableParameters=None, xss: Xss=None):
        """Finding - a model defined in OpenAPI

        :param body: The body of this Finding.
        :param description: The description of this Finding.
        :param final_url: The final_url of this Finding.
        :param finding_type: The finding_type of this Finding.
        :param frame_url: The frame_url of this Finding.
        :param fuzzed_url: The fuzzed_url of this Finding.
        :param http_method: The http_method of this Finding.
        :param name: The name of this Finding.
        :param outdated_library: The outdated_library of this Finding.
        :param reproduction_url: The reproduction_url of this Finding.
        :param tracking_id: The tracking_id of this Finding.
        :param violating_resource: The violating_resource of this Finding.
        :param vulnerable_headers: The vulnerable_headers of this Finding.
        :param vulnerable_parameters: The vulnerable_parameters of this Finding.
        :param xss: The xss of this Finding.
        """
        self.openapi_types = {
            'body': str,
            'description': str,
            'final_url': str,
            'finding_type': str,
            'frame_url': str,
            'fuzzed_url': str,
            'http_method': str,
            'name': str,
            'outdated_library': OutdatedLibrary,
            'reproduction_url': str,
            'tracking_id': str,
            'violating_resource': ViolatingResource,
            'vulnerable_headers': VulnerableHeaders,
            'vulnerable_parameters': VulnerableParameters,
            'xss': Xss
        }

        self.attribute_map = {
            'body': 'body',
            'description': 'description',
            'final_url': 'finalUrl',
            'finding_type': 'findingType',
            'frame_url': 'frameUrl',
            'fuzzed_url': 'fuzzedUrl',
            'http_method': 'httpMethod',
            'name': 'name',
            'outdated_library': 'outdatedLibrary',
            'reproduction_url': 'reproductionUrl',
            'tracking_id': 'trackingId',
            'violating_resource': 'violatingResource',
            'vulnerable_headers': 'vulnerableHeaders',
            'vulnerable_parameters': 'vulnerableParameters',
            'xss': 'xss'
        }

        self._body = body
        self._description = description
        self._final_url = final_url
        self._finding_type = finding_type
        self._frame_url = frame_url
        self._fuzzed_url = fuzzed_url
        self._http_method = http_method
        self._name = name
        self._outdated_library = outdated_library
        self._reproduction_url = reproduction_url
        self._tracking_id = tracking_id
        self._violating_resource = violating_resource
        self._vulnerable_headers = vulnerable_headers
        self._vulnerable_parameters = vulnerable_parameters
        self._xss = xss

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Finding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Finding of this Finding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this Finding.

        The body of the request that triggered the vulnerability.

        :return: The body of this Finding.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this Finding.

        The body of the request that triggered the vulnerability.

        :param body: The body of this Finding.
        :type body: str
        """

        self._body = body

    @property
    def description(self):
        """Gets the description of this Finding.

        The description of the vulnerability.

        :return: The description of this Finding.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Finding.

        The description of the vulnerability.

        :param description: The description of this Finding.
        :type description: str
        """

        self._description = description

    @property
    def final_url(self):
        """Gets the final_url of this Finding.

        The URL where the browser lands when the vulnerability is detected.

        :return: The final_url of this Finding.
        :rtype: str
        """
        return self._final_url

    @final_url.setter
    def final_url(self, final_url):
        """Sets the final_url of this Finding.

        The URL where the browser lands when the vulnerability is detected.

        :param final_url: The final_url of this Finding.
        :type final_url: str
        """

        self._final_url = final_url

    @property
    def finding_type(self):
        """Gets the finding_type of this Finding.

        The type of the Finding.

        :return: The finding_type of this Finding.
        :rtype: str
        """
        return self._finding_type

    @finding_type.setter
    def finding_type(self, finding_type):
        """Sets the finding_type of this Finding.

        The type of the Finding.

        :param finding_type: The finding_type of this Finding.
        :type finding_type: str
        """
        allowed_values = ["FINDING_TYPE_UNSPECIFIED", "MIXED_CONTENT", "OUTDATED_LIBRARY", "ROSETTA_FLASH", "XSS_CALLBACK", "XSS_ERROR", "CLEAR_TEXT_PASSWORD", "INVALID_CONTENT_TYPE", "XSS_ANGULAR_CALLBACK", "INVALID_HEADER", "MISSPELLED_SECURITY_HEADER_NAME", "MISMATCHING_SECURITY_HEADER_VALUES", "ACCESSIBLE_GIT_REPOSITORY", "ACCESSIBLE_SVN_REPOSITORY", "ACCESSIBLE_ENV_FILE"]  # noqa: E501
        if finding_type not in allowed_values:
            raise ValueError(
                "Invalid value for `finding_type` ({0}), must be one of {1}"
                .format(finding_type, allowed_values)
            )

        self._finding_type = finding_type

    @property
    def frame_url(self):
        """Gets the frame_url of this Finding.

        If the vulnerability was originated from nested IFrame, the immediate parent IFrame is reported.

        :return: The frame_url of this Finding.
        :rtype: str
        """
        return self._frame_url

    @frame_url.setter
    def frame_url(self, frame_url):
        """Sets the frame_url of this Finding.

        If the vulnerability was originated from nested IFrame, the immediate parent IFrame is reported.

        :param frame_url: The frame_url of this Finding.
        :type frame_url: str
        """

        self._frame_url = frame_url

    @property
    def fuzzed_url(self):
        """Gets the fuzzed_url of this Finding.

        The URL produced by the server-side fuzzer and used in the request that triggered the vulnerability.

        :return: The fuzzed_url of this Finding.
        :rtype: str
        """
        return self._fuzzed_url

    @fuzzed_url.setter
    def fuzzed_url(self, fuzzed_url):
        """Sets the fuzzed_url of this Finding.

        The URL produced by the server-side fuzzer and used in the request that triggered the vulnerability.

        :param fuzzed_url: The fuzzed_url of this Finding.
        :type fuzzed_url: str
        """

        self._fuzzed_url = fuzzed_url

    @property
    def http_method(self):
        """Gets the http_method of this Finding.

        The http method of the request that triggered the vulnerability, in uppercase.

        :return: The http_method of this Finding.
        :rtype: str
        """
        return self._http_method

    @http_method.setter
    def http_method(self, http_method):
        """Sets the http_method of this Finding.

        The http method of the request that triggered the vulnerability, in uppercase.

        :param http_method: The http_method of this Finding.
        :type http_method: str
        """

        self._http_method = http_method

    @property
    def name(self):
        """Gets the name of this Finding.

        The resource name of the Finding. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'. The finding IDs are generated by the system.

        :return: The name of this Finding.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Finding.

        The resource name of the Finding. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'. The finding IDs are generated by the system.

        :param name: The name of this Finding.
        :type name: str
        """

        self._name = name

    @property
    def outdated_library(self):
        """Gets the outdated_library of this Finding.


        :return: The outdated_library of this Finding.
        :rtype: OutdatedLibrary
        """
        return self._outdated_library

    @outdated_library.setter
    def outdated_library(self, outdated_library):
        """Sets the outdated_library of this Finding.


        :param outdated_library: The outdated_library of this Finding.
        :type outdated_library: OutdatedLibrary
        """

        self._outdated_library = outdated_library

    @property
    def reproduction_url(self):
        """Gets the reproduction_url of this Finding.

        The URL containing human-readable payload that user can leverage to reproduce the vulnerability.

        :return: The reproduction_url of this Finding.
        :rtype: str
        """
        return self._reproduction_url

    @reproduction_url.setter
    def reproduction_url(self, reproduction_url):
        """Sets the reproduction_url of this Finding.

        The URL containing human-readable payload that user can leverage to reproduce the vulnerability.

        :param reproduction_url: The reproduction_url of this Finding.
        :type reproduction_url: str
        """

        self._reproduction_url = reproduction_url

    @property
    def tracking_id(self):
        """Gets the tracking_id of this Finding.

        The tracking ID uniquely identifies a vulnerability instance across multiple ScanRuns.

        :return: The tracking_id of this Finding.
        :rtype: str
        """
        return self._tracking_id

    @tracking_id.setter
    def tracking_id(self, tracking_id):
        """Sets the tracking_id of this Finding.

        The tracking ID uniquely identifies a vulnerability instance across multiple ScanRuns.

        :param tracking_id: The tracking_id of this Finding.
        :type tracking_id: str
        """

        self._tracking_id = tracking_id

    @property
    def violating_resource(self):
        """Gets the violating_resource of this Finding.


        :return: The violating_resource of this Finding.
        :rtype: ViolatingResource
        """
        return self._violating_resource

    @violating_resource.setter
    def violating_resource(self, violating_resource):
        """Sets the violating_resource of this Finding.


        :param violating_resource: The violating_resource of this Finding.
        :type violating_resource: ViolatingResource
        """

        self._violating_resource = violating_resource

    @property
    def vulnerable_headers(self):
        """Gets the vulnerable_headers of this Finding.


        :return: The vulnerable_headers of this Finding.
        :rtype: VulnerableHeaders
        """
        return self._vulnerable_headers

    @vulnerable_headers.setter
    def vulnerable_headers(self, vulnerable_headers):
        """Sets the vulnerable_headers of this Finding.


        :param vulnerable_headers: The vulnerable_headers of this Finding.
        :type vulnerable_headers: VulnerableHeaders
        """

        self._vulnerable_headers = vulnerable_headers

    @property
    def vulnerable_parameters(self):
        """Gets the vulnerable_parameters of this Finding.


        :return: The vulnerable_parameters of this Finding.
        :rtype: VulnerableParameters
        """
        return self._vulnerable_parameters

    @vulnerable_parameters.setter
    def vulnerable_parameters(self, vulnerable_parameters):
        """Sets the vulnerable_parameters of this Finding.


        :param vulnerable_parameters: The vulnerable_parameters of this Finding.
        :type vulnerable_parameters: VulnerableParameters
        """

        self._vulnerable_parameters = vulnerable_parameters

    @property
    def xss(self):
        """Gets the xss of this Finding.


        :return: The xss of this Finding.
        :rtype: Xss
        """
        return self._xss

    @xss.setter
    def xss(self, xss):
        """Sets the xss of this Finding.


        :param xss: The xss of this Finding.
        :type xss: Xss
        """

        self._xss = xss
