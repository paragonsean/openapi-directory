# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, password: str=None, username: str=None):
        """GoogleAccount - a model defined in OpenAPI

        :param password: The password of this GoogleAccount.
        :param username: The username of this GoogleAccount.
        """
        self.openapi_types = {
            'password': str,
            'username': str
        }

        self.attribute_map = {
            'password': 'password',
            'username': 'username'
        }

        self._password = password
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAccount of this GoogleAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def password(self):
        """Gets the password of this GoogleAccount.

        Required. Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.

        :return: The password of this GoogleAccount.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this GoogleAccount.

        Required. Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.

        :param password: The password of this GoogleAccount.
        :type password: str
        """

        self._password = password

    @property
    def username(self):
        """Gets the username of this GoogleAccount.

        Required. The user name of the Google account.

        :return: The username of this GoogleAccount.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this GoogleAccount.

        Required. The user name of the Google account.

        :param username: The username of this GoogleAccount.
        :type username: str
        """

        self._username = username
