# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SapDiscoveryComponentDatabaseProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database_type: str=None, database_version: str=None, primary_instance_uri: str=None, shared_nfs_uri: str=None):
        """SapDiscoveryComponentDatabaseProperties - a model defined in OpenAPI

        :param database_type: The database_type of this SapDiscoveryComponentDatabaseProperties.
        :param database_version: The database_version of this SapDiscoveryComponentDatabaseProperties.
        :param primary_instance_uri: The primary_instance_uri of this SapDiscoveryComponentDatabaseProperties.
        :param shared_nfs_uri: The shared_nfs_uri of this SapDiscoveryComponentDatabaseProperties.
        """
        self.openapi_types = {
            'database_type': str,
            'database_version': str,
            'primary_instance_uri': str,
            'shared_nfs_uri': str
        }

        self.attribute_map = {
            'database_type': 'databaseType',
            'database_version': 'databaseVersion',
            'primary_instance_uri': 'primaryInstanceUri',
            'shared_nfs_uri': 'sharedNfsUri'
        }

        self._database_type = database_type
        self._database_version = database_version
        self._primary_instance_uri = primary_instance_uri
        self._shared_nfs_uri = shared_nfs_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SapDiscoveryComponentDatabaseProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SapDiscoveryComponentDatabaseProperties of this SapDiscoveryComponentDatabaseProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database_type(self):
        """Gets the database_type of this SapDiscoveryComponentDatabaseProperties.

        Required. Type of the database. HANA, DB2, etc.

        :return: The database_type of this SapDiscoveryComponentDatabaseProperties.
        :rtype: str
        """
        return self._database_type

    @database_type.setter
    def database_type(self, database_type):
        """Sets the database_type of this SapDiscoveryComponentDatabaseProperties.

        Required. Type of the database. HANA, DB2, etc.

        :param database_type: The database_type of this SapDiscoveryComponentDatabaseProperties.
        :type database_type: str
        """
        allowed_values = ["DATABASE_TYPE_UNSPECIFIED", "HANA", "MAX_DB", "DB2"]  # noqa: E501
        if database_type not in allowed_values:
            raise ValueError(
                "Invalid value for `database_type` ({0}), must be one of {1}"
                .format(database_type, allowed_values)
            )

        self._database_type = database_type

    @property
    def database_version(self):
        """Gets the database_version of this SapDiscoveryComponentDatabaseProperties.

        Optional. The version of the database software running in the system.

        :return: The database_version of this SapDiscoveryComponentDatabaseProperties.
        :rtype: str
        """
        return self._database_version

    @database_version.setter
    def database_version(self, database_version):
        """Sets the database_version of this SapDiscoveryComponentDatabaseProperties.

        Optional. The version of the database software running in the system.

        :param database_version: The database_version of this SapDiscoveryComponentDatabaseProperties.
        :type database_version: str
        """

        self._database_version = database_version

    @property
    def primary_instance_uri(self):
        """Gets the primary_instance_uri of this SapDiscoveryComponentDatabaseProperties.

        Required. URI of the recognized primary instance of the database.

        :return: The primary_instance_uri of this SapDiscoveryComponentDatabaseProperties.
        :rtype: str
        """
        return self._primary_instance_uri

    @primary_instance_uri.setter
    def primary_instance_uri(self, primary_instance_uri):
        """Sets the primary_instance_uri of this SapDiscoveryComponentDatabaseProperties.

        Required. URI of the recognized primary instance of the database.

        :param primary_instance_uri: The primary_instance_uri of this SapDiscoveryComponentDatabaseProperties.
        :type primary_instance_uri: str
        """

        self._primary_instance_uri = primary_instance_uri

    @property
    def shared_nfs_uri(self):
        """Gets the shared_nfs_uri of this SapDiscoveryComponentDatabaseProperties.

        Optional. URI of the recognized shared NFS of the database. May be empty if the database has only a single node.

        :return: The shared_nfs_uri of this SapDiscoveryComponentDatabaseProperties.
        :rtype: str
        """
        return self._shared_nfs_uri

    @shared_nfs_uri.setter
    def shared_nfs_uri(self, shared_nfs_uri):
        """Sets the shared_nfs_uri of this SapDiscoveryComponentDatabaseProperties.

        Optional. URI of the recognized shared NFS of the database. May be empty if the database has only a single node.

        :param shared_nfs_uri: The shared_nfs_uri of this SapDiscoveryComponentDatabaseProperties.
        :type shared_nfs_uri: str
        """

        self._shared_nfs_uri = shared_nfs_uri
