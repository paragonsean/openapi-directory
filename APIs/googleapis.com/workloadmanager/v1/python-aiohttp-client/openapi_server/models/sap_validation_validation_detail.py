# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SapValidationValidationDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: Dict[str, str]=None, is_present: bool=None, sap_validation_type: str=None):
        """SapValidationValidationDetail - a model defined in OpenAPI

        :param details: The details of this SapValidationValidationDetail.
        :param is_present: The is_present of this SapValidationValidationDetail.
        :param sap_validation_type: The sap_validation_type of this SapValidationValidationDetail.
        """
        self.openapi_types = {
            'details': Dict[str, str],
            'is_present': bool,
            'sap_validation_type': str
        }

        self.attribute_map = {
            'details': 'details',
            'is_present': 'isPresent',
            'sap_validation_type': 'sapValidationType'
        }

        self._details = details
        self._is_present = is_present
        self._sap_validation_type = sap_validation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SapValidationValidationDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SapValidationValidationDetail of this SapValidationValidationDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this SapValidationValidationDetail.

        Optional. The pairs of metrics data: field name & field value.

        :return: The details of this SapValidationValidationDetail.
        :rtype: Dict[str, str]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this SapValidationValidationDetail.

        Optional. The pairs of metrics data: field name & field value.

        :param details: The details of this SapValidationValidationDetail.
        :type details: Dict[str, str]
        """

        self._details = details

    @property
    def is_present(self):
        """Gets the is_present of this SapValidationValidationDetail.

        Optional. Was there a SAP system detected for this validation type.

        :return: The is_present of this SapValidationValidationDetail.
        :rtype: bool
        """
        return self._is_present

    @is_present.setter
    def is_present(self, is_present):
        """Sets the is_present of this SapValidationValidationDetail.

        Optional. Was there a SAP system detected for this validation type.

        :param is_present: The is_present of this SapValidationValidationDetail.
        :type is_present: bool
        """

        self._is_present = is_present

    @property
    def sap_validation_type(self):
        """Gets the sap_validation_type of this SapValidationValidationDetail.

        Optional. The SAP system that the validation data is from.

        :return: The sap_validation_type of this SapValidationValidationDetail.
        :rtype: str
        """
        return self._sap_validation_type

    @sap_validation_type.setter
    def sap_validation_type(self, sap_validation_type):
        """Sets the sap_validation_type of this SapValidationValidationDetail.

        Optional. The SAP system that the validation data is from.

        :param sap_validation_type: The sap_validation_type of this SapValidationValidationDetail.
        :type sap_validation_type: str
        """
        allowed_values = ["SAP_VALIDATION_TYPE_UNSPECIFIED", "SYSTEM", "COROSYNC", "PACEMAKER", "HANA", "NETWEAVER", "HANA_SECURITY", "CUSTOM"]  # noqa: E501
        if sap_validation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `sap_validation_type` ({0}), must be one of {1}"
                .format(sap_validation_type, allowed_values)
            )

        self._sap_validation_type = sap_validation_type
