# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BigQueryDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_new_results_table: bool=None, destination_dataset: str=None):
        """BigQueryDestination - a model defined in OpenAPI

        :param create_new_results_table: The create_new_results_table of this BigQueryDestination.
        :param destination_dataset: The destination_dataset of this BigQueryDestination.
        """
        self.openapi_types = {
            'create_new_results_table': bool,
            'destination_dataset': str
        }

        self.attribute_map = {
            'create_new_results_table': 'createNewResultsTable',
            'destination_dataset': 'destinationDataset'
        }

        self._create_new_results_table = create_new_results_table
        self._destination_dataset = destination_dataset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BigQueryDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BigQueryDestination of this BigQueryDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_new_results_table(self):
        """Gets the create_new_results_table of this BigQueryDestination.

        Optional. determine if results will be saved in a new table

        :return: The create_new_results_table of this BigQueryDestination.
        :rtype: bool
        """
        return self._create_new_results_table

    @create_new_results_table.setter
    def create_new_results_table(self, create_new_results_table):
        """Sets the create_new_results_table of this BigQueryDestination.

        Optional. determine if results will be saved in a new table

        :param create_new_results_table: The create_new_results_table of this BigQueryDestination.
        :type create_new_results_table: bool
        """

        self._create_new_results_table = create_new_results_table

    @property
    def destination_dataset(self):
        """Gets the destination_dataset of this BigQueryDestination.

        Optional. destination dataset to save evaluation results

        :return: The destination_dataset of this BigQueryDestination.
        :rtype: str
        """
        return self._destination_dataset

    @destination_dataset.setter
    def destination_dataset(self, destination_dataset):
        """Sets the destination_dataset of this BigQueryDestination.

        Optional. destination dataset to save evaluation results

        :param destination_dataset: The destination_dataset of this BigQueryDestination.
        :type destination_dataset: str
        """

        self._destination_dataset = destination_dataset
