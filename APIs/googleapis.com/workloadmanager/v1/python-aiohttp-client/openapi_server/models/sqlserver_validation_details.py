# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SqlserverValidationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: Dict[str, str]=None):
        """SqlserverValidationDetails - a model defined in OpenAPI

        :param fields: The fields of this SqlserverValidationDetails.
        """
        self.openapi_types = {
            'fields': Dict[str, str]
        }

        self.attribute_map = {
            'fields': 'fields'
        }

        self._fields = fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SqlserverValidationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SqlserverValidationDetails of this SqlserverValidationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this SqlserverValidationDetails.

        Required. Collected data is in format.

        :return: The fields of this SqlserverValidationDetails.
        :rtype: Dict[str, str]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this SqlserverValidationDetails.

        Required. Collected data is in format.

        :param fields: The fields of this SqlserverValidationDetails.
        :type fields: Dict[str, str]
        """

        self._fields = fields
