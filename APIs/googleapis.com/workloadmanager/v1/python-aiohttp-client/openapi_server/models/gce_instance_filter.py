# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GceInstanceFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_accounts: List[str]=None):
        """GceInstanceFilter - a model defined in OpenAPI

        :param service_accounts: The service_accounts of this GceInstanceFilter.
        """
        self.openapi_types = {
            'service_accounts': List[str]
        }

        self.attribute_map = {
            'service_accounts': 'serviceAccounts'
        }

        self._service_accounts = service_accounts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GceInstanceFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GceInstanceFilter of this GceInstanceFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_accounts(self):
        """Gets the service_accounts of this GceInstanceFilter.

        Service account of compute engine

        :return: The service_accounts of this GceInstanceFilter.
        :rtype: List[str]
        """
        return self._service_accounts

    @service_accounts.setter
    def service_accounts(self, service_accounts):
        """Sets the service_accounts of this GceInstanceFilter.

        Service account of compute engine

        :param service_accounts: The service_accounts of this GceInstanceFilter.
        :type service_accounts: List[str]
        """

        self._service_accounts = service_accounts
