# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SapDiscoveryMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_region: str=None, defined_system: str=None, environment_type: str=None, sap_product: str=None):
        """SapDiscoveryMetadata - a model defined in OpenAPI

        :param customer_region: The customer_region of this SapDiscoveryMetadata.
        :param defined_system: The defined_system of this SapDiscoveryMetadata.
        :param environment_type: The environment_type of this SapDiscoveryMetadata.
        :param sap_product: The sap_product of this SapDiscoveryMetadata.
        """
        self.openapi_types = {
            'customer_region': str,
            'defined_system': str,
            'environment_type': str,
            'sap_product': str
        }

        self.attribute_map = {
            'customer_region': 'customerRegion',
            'defined_system': 'definedSystem',
            'environment_type': 'environmentType',
            'sap_product': 'sapProduct'
        }

        self._customer_region = customer_region
        self._defined_system = defined_system
        self._environment_type = environment_type
        self._sap_product = sap_product

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SapDiscoveryMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SapDiscoveryMetadata of this SapDiscoveryMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_region(self):
        """Gets the customer_region of this SapDiscoveryMetadata.

        Optional. Customer region string for customer's use. Does not represent GCP region.

        :return: The customer_region of this SapDiscoveryMetadata.
        :rtype: str
        """
        return self._customer_region

    @customer_region.setter
    def customer_region(self, customer_region):
        """Sets the customer_region of this SapDiscoveryMetadata.

        Optional. Customer region string for customer's use. Does not represent GCP region.

        :param customer_region: The customer_region of this SapDiscoveryMetadata.
        :type customer_region: str
        """

        self._customer_region = customer_region

    @property
    def defined_system(self):
        """Gets the defined_system of this SapDiscoveryMetadata.

        Optional. Customer defined, something like \"E-commerce pre prod\"

        :return: The defined_system of this SapDiscoveryMetadata.
        :rtype: str
        """
        return self._defined_system

    @defined_system.setter
    def defined_system(self, defined_system):
        """Sets the defined_system of this SapDiscoveryMetadata.

        Optional. Customer defined, something like \"E-commerce pre prod\"

        :param defined_system: The defined_system of this SapDiscoveryMetadata.
        :type defined_system: str
        """

        self._defined_system = defined_system

    @property
    def environment_type(self):
        """Gets the environment_type of this SapDiscoveryMetadata.

        Optional. Should be \"prod\", \"QA\", \"dev\", \"staging\", etc.

        :return: The environment_type of this SapDiscoveryMetadata.
        :rtype: str
        """
        return self._environment_type

    @environment_type.setter
    def environment_type(self, environment_type):
        """Sets the environment_type of this SapDiscoveryMetadata.

        Optional. Should be \"prod\", \"QA\", \"dev\", \"staging\", etc.

        :param environment_type: The environment_type of this SapDiscoveryMetadata.
        :type environment_type: str
        """

        self._environment_type = environment_type

    @property
    def sap_product(self):
        """Gets the sap_product of this SapDiscoveryMetadata.

        Optional. This SAP product name

        :return: The sap_product of this SapDiscoveryMetadata.
        :rtype: str
        """
        return self._sap_product

    @sap_product.setter
    def sap_product(self, sap_product):
        """Sets the sap_product of this SapDiscoveryMetadata.

        Optional. This SAP product name

        :param sap_product: The sap_product of this SapDiscoveryMetadata.
        :type sap_product: str
        """

        self._sap_product = sap_product
