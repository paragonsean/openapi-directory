# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sap_discovery import SapDiscovery
from openapi_server.models.sap_validation import SapValidation
from openapi_server.models.sqlserver_validation import SqlserverValidation
from openapi_server import util


class Insight(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, sap_discovery: SapDiscovery=None, sap_validation: SapValidation=None, sent_time: str=None, sqlserver_validation: SqlserverValidation=None):
        """Insight - a model defined in OpenAPI

        :param instance_id: The instance_id of this Insight.
        :param sap_discovery: The sap_discovery of this Insight.
        :param sap_validation: The sap_validation of this Insight.
        :param sent_time: The sent_time of this Insight.
        :param sqlserver_validation: The sqlserver_validation of this Insight.
        """
        self.openapi_types = {
            'instance_id': str,
            'sap_discovery': SapDiscovery,
            'sap_validation': SapValidation,
            'sent_time': str,
            'sqlserver_validation': SqlserverValidation
        }

        self.attribute_map = {
            'instance_id': 'instanceId',
            'sap_discovery': 'sapDiscovery',
            'sap_validation': 'sapValidation',
            'sent_time': 'sentTime',
            'sqlserver_validation': 'sqlserverValidation'
        }

        self._instance_id = instance_id
        self._sap_discovery = sap_discovery
        self._sap_validation = sap_validation
        self._sent_time = sent_time
        self._sqlserver_validation = sqlserver_validation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Insight':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Insight of this Insight.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this Insight.

        Required. The instance id where the insight is generated from

        :return: The instance_id of this Insight.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this Insight.

        Required. The instance id where the insight is generated from

        :param instance_id: The instance_id of this Insight.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def sap_discovery(self):
        """Gets the sap_discovery of this Insight.


        :return: The sap_discovery of this Insight.
        :rtype: SapDiscovery
        """
        return self._sap_discovery

    @sap_discovery.setter
    def sap_discovery(self, sap_discovery):
        """Sets the sap_discovery of this Insight.


        :param sap_discovery: The sap_discovery of this Insight.
        :type sap_discovery: SapDiscovery
        """

        self._sap_discovery = sap_discovery

    @property
    def sap_validation(self):
        """Gets the sap_validation of this Insight.


        :return: The sap_validation of this Insight.
        :rtype: SapValidation
        """
        return self._sap_validation

    @sap_validation.setter
    def sap_validation(self, sap_validation):
        """Sets the sap_validation of this Insight.


        :param sap_validation: The sap_validation of this Insight.
        :type sap_validation: SapValidation
        """

        self._sap_validation = sap_validation

    @property
    def sent_time(self):
        """Gets the sent_time of this Insight.

        Output only. [Output only] Create time stamp

        :return: The sent_time of this Insight.
        :rtype: str
        """
        return self._sent_time

    @sent_time.setter
    def sent_time(self, sent_time):
        """Sets the sent_time of this Insight.

        Output only. [Output only] Create time stamp

        :param sent_time: The sent_time of this Insight.
        :type sent_time: str
        """

        self._sent_time = sent_time

    @property
    def sqlserver_validation(self):
        """Gets the sqlserver_validation of this Insight.


        :return: The sqlserver_validation of this Insight.
        :rtype: SqlserverValidation
        """
        return self._sqlserver_validation

    @sqlserver_validation.setter
    def sqlserver_validation(self, sqlserver_validation):
        """Sets the sqlserver_validation of this Insight.


        :param sqlserver_validation: The sqlserver_validation of this Insight.
        :type sqlserver_validation: SqlserverValidation
        """

        self._sqlserver_validation = sqlserver_validation
