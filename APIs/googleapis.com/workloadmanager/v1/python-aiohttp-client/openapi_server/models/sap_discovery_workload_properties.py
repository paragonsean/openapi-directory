# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sap_discovery_workload_properties_product_version import SapDiscoveryWorkloadPropertiesProductVersion
from openapi_server.models.sap_discovery_workload_properties_software_component_properties import SapDiscoveryWorkloadPropertiesSoftwareComponentProperties
from openapi_server import util


class SapDiscoveryWorkloadProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_versions: List[SapDiscoveryWorkloadPropertiesProductVersion]=None, software_component_versions: List[SapDiscoveryWorkloadPropertiesSoftwareComponentProperties]=None):
        """SapDiscoveryWorkloadProperties - a model defined in OpenAPI

        :param product_versions: The product_versions of this SapDiscoveryWorkloadProperties.
        :param software_component_versions: The software_component_versions of this SapDiscoveryWorkloadProperties.
        """
        self.openapi_types = {
            'product_versions': List[SapDiscoveryWorkloadPropertiesProductVersion],
            'software_component_versions': List[SapDiscoveryWorkloadPropertiesSoftwareComponentProperties]
        }

        self.attribute_map = {
            'product_versions': 'productVersions',
            'software_component_versions': 'softwareComponentVersions'
        }

        self._product_versions = product_versions
        self._software_component_versions = software_component_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SapDiscoveryWorkloadProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SapDiscoveryWorkloadProperties of this SapDiscoveryWorkloadProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_versions(self):
        """Gets the product_versions of this SapDiscoveryWorkloadProperties.

        Optional. List of SAP Products and their versions running on the system.

        :return: The product_versions of this SapDiscoveryWorkloadProperties.
        :rtype: List[SapDiscoveryWorkloadPropertiesProductVersion]
        """
        return self._product_versions

    @product_versions.setter
    def product_versions(self, product_versions):
        """Sets the product_versions of this SapDiscoveryWorkloadProperties.

        Optional. List of SAP Products and their versions running on the system.

        :param product_versions: The product_versions of this SapDiscoveryWorkloadProperties.
        :type product_versions: List[SapDiscoveryWorkloadPropertiesProductVersion]
        """

        self._product_versions = product_versions

    @property
    def software_component_versions(self):
        """Gets the software_component_versions of this SapDiscoveryWorkloadProperties.

        Optional. A list of SAP software components and their versions running on the system.

        :return: The software_component_versions of this SapDiscoveryWorkloadProperties.
        :rtype: List[SapDiscoveryWorkloadPropertiesSoftwareComponentProperties]
        """
        return self._software_component_versions

    @software_component_versions.setter
    def software_component_versions(self, software_component_versions):
        """Sets the software_component_versions of this SapDiscoveryWorkloadProperties.

        Optional. A list of SAP software components and their versions running on the system.

        :param software_component_versions: The software_component_versions of this SapDiscoveryWorkloadProperties.
        :type software_component_versions: List[SapDiscoveryWorkloadPropertiesSoftwareComponentProperties]
        """

        self._software_component_versions = software_component_versions
