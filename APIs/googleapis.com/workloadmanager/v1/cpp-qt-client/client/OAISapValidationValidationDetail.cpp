/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISapValidationValidationDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISapValidationValidationDetail::OAISapValidationValidationDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISapValidationValidationDetail::OAISapValidationValidationDetail() {
    this->initializeModel();
}

OAISapValidationValidationDetail::~OAISapValidationValidationDetail() {}

void OAISapValidationValidationDetail::initializeModel() {

    m_details_isSet = false;
    m_details_isValid = false;

    m_is_present_isSet = false;
    m_is_present_isValid = false;

    m_sap_validation_type_isSet = false;
    m_sap_validation_type_isValid = false;
}

void OAISapValidationValidationDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISapValidationValidationDetail::fromJsonObject(QJsonObject json) {

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("details")]);
    m_details_isSet = !json[QString("details")].isNull() && m_details_isValid;

    m_is_present_isValid = ::OpenAPI::fromJsonValue(m_is_present, json[QString("isPresent")]);
    m_is_present_isSet = !json[QString("isPresent")].isNull() && m_is_present_isValid;

    m_sap_validation_type_isValid = ::OpenAPI::fromJsonValue(m_sap_validation_type, json[QString("sapValidationType")]);
    m_sap_validation_type_isSet = !json[QString("sapValidationType")].isNull() && m_sap_validation_type_isValid;
}

QString OAISapValidationValidationDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISapValidationValidationDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_details.size() > 0) {
        obj.insert(QString("details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_is_present_isSet) {
        obj.insert(QString("isPresent"), ::OpenAPI::toJsonValue(m_is_present));
    }
    if (m_sap_validation_type_isSet) {
        obj.insert(QString("sapValidationType"), ::OpenAPI::toJsonValue(m_sap_validation_type));
    }
    return obj;
}

QMap<QString, QString> OAISapValidationValidationDetail::getDetails() const {
    return m_details;
}
void OAISapValidationValidationDetail::setDetails(const QMap<QString, QString> &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAISapValidationValidationDetail::is_details_Set() const{
    return m_details_isSet;
}

bool OAISapValidationValidationDetail::is_details_Valid() const{
    return m_details_isValid;
}

bool OAISapValidationValidationDetail::isIsPresent() const {
    return m_is_present;
}
void OAISapValidationValidationDetail::setIsPresent(const bool &is_present) {
    m_is_present = is_present;
    m_is_present_isSet = true;
}

bool OAISapValidationValidationDetail::is_is_present_Set() const{
    return m_is_present_isSet;
}

bool OAISapValidationValidationDetail::is_is_present_Valid() const{
    return m_is_present_isValid;
}

QString OAISapValidationValidationDetail::getSapValidationType() const {
    return m_sap_validation_type;
}
void OAISapValidationValidationDetail::setSapValidationType(const QString &sap_validation_type) {
    m_sap_validation_type = sap_validation_type;
    m_sap_validation_type_isSet = true;
}

bool OAISapValidationValidationDetail::is_sap_validation_type_Set() const{
    return m_sap_validation_type_isSet;
}

bool OAISapValidationValidationDetail::is_sap_validation_type_Valid() const{
    return m_sap_validation_type_isValid;
}

bool OAISapValidationValidationDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_present_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sap_validation_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISapValidationValidationDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
