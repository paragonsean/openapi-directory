/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISqlserverValidationDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISqlserverValidationDetails::OAISqlserverValidationDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISqlserverValidationDetails::OAISqlserverValidationDetails() {
    this->initializeModel();
}

OAISqlserverValidationDetails::~OAISqlserverValidationDetails() {}

void OAISqlserverValidationDetails::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;
}

void OAISqlserverValidationDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISqlserverValidationDetails::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;
}

QString OAISqlserverValidationDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISqlserverValidationDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    return obj;
}

QMap<QString, QString> OAISqlserverValidationDetails::getFields() const {
    return m_fields;
}
void OAISqlserverValidationDetails::setFields(const QMap<QString, QString> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAISqlserverValidationDetails::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAISqlserverValidationDetails::is_fields_Valid() const{
    return m_fields_isValid;
}

bool OAISqlserverValidationDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISqlserverValidationDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
