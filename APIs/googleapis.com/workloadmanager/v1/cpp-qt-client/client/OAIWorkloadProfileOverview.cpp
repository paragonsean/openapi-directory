/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkloadProfileOverview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkloadProfileOverview::OAIWorkloadProfileOverview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkloadProfileOverview::OAIWorkloadProfileOverview() {
    this->initializeModel();
}

OAIWorkloadProfileOverview::~OAIWorkloadProfileOverview() {}

void OAIWorkloadProfileOverview::initializeModel() {

    m_sap_workload_overview_isSet = false;
    m_sap_workload_overview_isValid = false;

    m_sqlserver_workload_overview_isSet = false;
    m_sqlserver_workload_overview_isValid = false;

    m_three_tier_workload_overview_isSet = false;
    m_three_tier_workload_overview_isValid = false;
}

void OAIWorkloadProfileOverview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkloadProfileOverview::fromJsonObject(QJsonObject json) {

    m_sap_workload_overview_isValid = ::OpenAPI::fromJsonValue(m_sap_workload_overview, json[QString("sapWorkloadOverview")]);
    m_sap_workload_overview_isSet = !json[QString("sapWorkloadOverview")].isNull() && m_sap_workload_overview_isValid;

    m_sqlserver_workload_overview_isValid = ::OpenAPI::fromJsonValue(m_sqlserver_workload_overview, json[QString("sqlserverWorkloadOverview")]);
    m_sqlserver_workload_overview_isSet = !json[QString("sqlserverWorkloadOverview")].isNull() && m_sqlserver_workload_overview_isValid;

    m_three_tier_workload_overview_isValid = ::OpenAPI::fromJsonValue(m_three_tier_workload_overview, json[QString("threeTierWorkloadOverview")]);
    m_three_tier_workload_overview_isSet = !json[QString("threeTierWorkloadOverview")].isNull() && m_three_tier_workload_overview_isValid;
}

QString OAIWorkloadProfileOverview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkloadProfileOverview::asJsonObject() const {
    QJsonObject obj;
    if (m_sap_workload_overview.isSet()) {
        obj.insert(QString("sapWorkloadOverview"), ::OpenAPI::toJsonValue(m_sap_workload_overview));
    }
    if (m_sqlserver_workload_overview.isSet()) {
        obj.insert(QString("sqlserverWorkloadOverview"), ::OpenAPI::toJsonValue(m_sqlserver_workload_overview));
    }
    if (m_three_tier_workload_overview.isSet()) {
        obj.insert(QString("threeTierWorkloadOverview"), ::OpenAPI::toJsonValue(m_three_tier_workload_overview));
    }
    return obj;
}

OAISapWorkloadOverview OAIWorkloadProfileOverview::getSapWorkloadOverview() const {
    return m_sap_workload_overview;
}
void OAIWorkloadProfileOverview::setSapWorkloadOverview(const OAISapWorkloadOverview &sap_workload_overview) {
    m_sap_workload_overview = sap_workload_overview;
    m_sap_workload_overview_isSet = true;
}

bool OAIWorkloadProfileOverview::is_sap_workload_overview_Set() const{
    return m_sap_workload_overview_isSet;
}

bool OAIWorkloadProfileOverview::is_sap_workload_overview_Valid() const{
    return m_sap_workload_overview_isValid;
}

OAISqlserverWorkloadOverview OAIWorkloadProfileOverview::getSqlserverWorkloadOverview() const {
    return m_sqlserver_workload_overview;
}
void OAIWorkloadProfileOverview::setSqlserverWorkloadOverview(const OAISqlserverWorkloadOverview &sqlserver_workload_overview) {
    m_sqlserver_workload_overview = sqlserver_workload_overview;
    m_sqlserver_workload_overview_isSet = true;
}

bool OAIWorkloadProfileOverview::is_sqlserver_workload_overview_Set() const{
    return m_sqlserver_workload_overview_isSet;
}

bool OAIWorkloadProfileOverview::is_sqlserver_workload_overview_Valid() const{
    return m_sqlserver_workload_overview_isValid;
}

OAIThreeTierWorkloadOverview OAIWorkloadProfileOverview::getThreeTierWorkloadOverview() const {
    return m_three_tier_workload_overview;
}
void OAIWorkloadProfileOverview::setThreeTierWorkloadOverview(const OAIThreeTierWorkloadOverview &three_tier_workload_overview) {
    m_three_tier_workload_overview = three_tier_workload_overview;
    m_three_tier_workload_overview_isSet = true;
}

bool OAIWorkloadProfileOverview::is_three_tier_workload_overview_Set() const{
    return m_three_tier_workload_overview_isSet;
}

bool OAIWorkloadProfileOverview::is_three_tier_workload_overview_Valid() const{
    return m_three_tier_workload_overview_isValid;
}

bool OAIWorkloadProfileOverview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sap_workload_overview.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sqlserver_workload_overview.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_three_tier_workload_overview.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkloadProfileOverview::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
