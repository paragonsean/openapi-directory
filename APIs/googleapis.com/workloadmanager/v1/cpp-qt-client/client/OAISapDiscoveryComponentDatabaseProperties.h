/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISapDiscoveryComponentDatabaseProperties.h
 *
 * A set of properties describing an SAP Database layer.
 */

#ifndef OAISapDiscoveryComponentDatabaseProperties_H
#define OAISapDiscoveryComponentDatabaseProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISapDiscoveryComponentDatabaseProperties : public OAIObject {
public:
    OAISapDiscoveryComponentDatabaseProperties();
    OAISapDiscoveryComponentDatabaseProperties(QString json);
    ~OAISapDiscoveryComponentDatabaseProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatabaseType() const;
    void setDatabaseType(const QString &database_type);
    bool is_database_type_Set() const;
    bool is_database_type_Valid() const;

    QString getDatabaseVersion() const;
    void setDatabaseVersion(const QString &database_version);
    bool is_database_version_Set() const;
    bool is_database_version_Valid() const;

    QString getPrimaryInstanceUri() const;
    void setPrimaryInstanceUri(const QString &primary_instance_uri);
    bool is_primary_instance_uri_Set() const;
    bool is_primary_instance_uri_Valid() const;

    QString getSharedNfsUri() const;
    void setSharedNfsUri(const QString &shared_nfs_uri);
    bool is_shared_nfs_uri_Set() const;
    bool is_shared_nfs_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database_type;
    bool m_database_type_isSet;
    bool m_database_type_isValid;

    QString m_database_version;
    bool m_database_version_isSet;
    bool m_database_version_isValid;

    QString m_primary_instance_uri;
    bool m_primary_instance_uri_isSet;
    bool m_primary_instance_uri_isValid;

    QString m_shared_nfs_uri;
    bool m_shared_nfs_uri_isSet;
    bool m_shared_nfs_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISapDiscoveryComponentDatabaseProperties)

#endif // OAISapDiscoveryComponentDatabaseProperties_H
