/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISapWorkloadOverview.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISapWorkloadOverview::OAISapWorkloadOverview(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISapWorkloadOverview::OAISapWorkloadOverview() {
    this->initializeModel();
}

OAISapWorkloadOverview::~OAISapWorkloadOverview() {}

void OAISapWorkloadOverview::initializeModel() {

    m_app_sid_isSet = false;
    m_app_sid_isValid = false;

    m_db_sid_isSet = false;
    m_db_sid_isValid = false;

    m_sap_system_id_isSet = false;
    m_sap_system_id_isValid = false;
}

void OAISapWorkloadOverview::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISapWorkloadOverview::fromJsonObject(QJsonObject json) {

    m_app_sid_isValid = ::OpenAPI::fromJsonValue(m_app_sid, json[QString("appSid")]);
    m_app_sid_isSet = !json[QString("appSid")].isNull() && m_app_sid_isValid;

    m_db_sid_isValid = ::OpenAPI::fromJsonValue(m_db_sid, json[QString("dbSid")]);
    m_db_sid_isSet = !json[QString("dbSid")].isNull() && m_db_sid_isValid;

    m_sap_system_id_isValid = ::OpenAPI::fromJsonValue(m_sap_system_id, json[QString("sapSystemId")]);
    m_sap_system_id_isSet = !json[QString("sapSystemId")].isNull() && m_sap_system_id_isValid;
}

QString OAISapWorkloadOverview::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISapWorkloadOverview::asJsonObject() const {
    QJsonObject obj;
    if (m_app_sid_isSet) {
        obj.insert(QString("appSid"), ::OpenAPI::toJsonValue(m_app_sid));
    }
    if (m_db_sid_isSet) {
        obj.insert(QString("dbSid"), ::OpenAPI::toJsonValue(m_db_sid));
    }
    if (m_sap_system_id_isSet) {
        obj.insert(QString("sapSystemId"), ::OpenAPI::toJsonValue(m_sap_system_id));
    }
    return obj;
}

QString OAISapWorkloadOverview::getAppSid() const {
    return m_app_sid;
}
void OAISapWorkloadOverview::setAppSid(const QString &app_sid) {
    m_app_sid = app_sid;
    m_app_sid_isSet = true;
}

bool OAISapWorkloadOverview::is_app_sid_Set() const{
    return m_app_sid_isSet;
}

bool OAISapWorkloadOverview::is_app_sid_Valid() const{
    return m_app_sid_isValid;
}

QString OAISapWorkloadOverview::getDbSid() const {
    return m_db_sid;
}
void OAISapWorkloadOverview::setDbSid(const QString &db_sid) {
    m_db_sid = db_sid;
    m_db_sid_isSet = true;
}

bool OAISapWorkloadOverview::is_db_sid_Set() const{
    return m_db_sid_isSet;
}

bool OAISapWorkloadOverview::is_db_sid_Valid() const{
    return m_db_sid_isValid;
}

QString OAISapWorkloadOverview::getSapSystemId() const {
    return m_sap_system_id;
}
void OAISapWorkloadOverview::setSapSystemId(const QString &sap_system_id) {
    m_sap_system_id = sap_system_id;
    m_sap_system_id_isSet = true;
}

bool OAISapWorkloadOverview::is_sap_system_id_Set() const{
    return m_sap_system_id_isSet;
}

bool OAISapWorkloadOverview::is_sap_system_id_Valid() const{
    return m_sap_system_id_isValid;
}

bool OAISapWorkloadOverview::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_db_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sap_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISapWorkloadOverview::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
