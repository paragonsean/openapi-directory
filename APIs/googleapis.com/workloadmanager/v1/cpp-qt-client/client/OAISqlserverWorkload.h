/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISqlserverWorkload.h
 *
 * The body of sqlserver workload
 */

#ifndef OAISqlserverWorkload_H
#define OAISqlserverWorkload_H

#include <QJsonObject>

#include "OAIAvailabilityGroup.h"
#include "OAICluster.h"
#include "OAIDatabase.h"
#include "OAILoadBalancerServer.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAvailabilityGroup;
class OAICluster;
class OAIDatabase;
class OAILoadBalancerServer;

class OAISqlserverWorkload : public OAIObject {
public:
    OAISqlserverWorkload();
    OAISqlserverWorkload(QString json);
    ~OAISqlserverWorkload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAvailabilityGroup> getAgs() const;
    void setAgs(const QList<OAIAvailabilityGroup> &ags);
    bool is_ags_Set() const;
    bool is_ags_Valid() const;

    OAICluster getCluster() const;
    void setCluster(const OAICluster &cluster);
    bool is_cluster_Set() const;
    bool is_cluster_Valid() const;

    QList<OAIDatabase> getDatabases() const;
    void setDatabases(const QList<OAIDatabase> &databases);
    bool is_databases_Set() const;
    bool is_databases_Valid() const;

    OAILoadBalancerServer getLoadBalancerServer() const;
    void setLoadBalancerServer(const OAILoadBalancerServer &load_balancer_server);
    bool is_load_balancer_server_Set() const;
    bool is_load_balancer_server_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAvailabilityGroup> m_ags;
    bool m_ags_isSet;
    bool m_ags_isValid;

    OAICluster m_cluster;
    bool m_cluster_isSet;
    bool m_cluster_isValid;

    QList<OAIDatabase> m_databases;
    bool m_databases_isSet;
    bool m_databases_isValid;

    OAILoadBalancerServer m_load_balancer_server;
    bool m_load_balancer_server_isSet;
    bool m_load_balancer_server_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISqlserverWorkload)

#endif // OAISqlserverWorkload_H
