/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsight::OAIInsight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsight::OAIInsight() {
    this->initializeModel();
}

OAIInsight::~OAIInsight() {}

void OAIInsight::initializeModel() {

    m_instance_id_isSet = false;
    m_instance_id_isValid = false;

    m_sap_discovery_isSet = false;
    m_sap_discovery_isValid = false;

    m_sap_validation_isSet = false;
    m_sap_validation_isValid = false;

    m_sent_time_isSet = false;
    m_sent_time_isValid = false;

    m_sqlserver_validation_isSet = false;
    m_sqlserver_validation_isValid = false;
}

void OAIInsight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInsight::fromJsonObject(QJsonObject json) {

    m_instance_id_isValid = ::OpenAPI::fromJsonValue(m_instance_id, json[QString("instanceId")]);
    m_instance_id_isSet = !json[QString("instanceId")].isNull() && m_instance_id_isValid;

    m_sap_discovery_isValid = ::OpenAPI::fromJsonValue(m_sap_discovery, json[QString("sapDiscovery")]);
    m_sap_discovery_isSet = !json[QString("sapDiscovery")].isNull() && m_sap_discovery_isValid;

    m_sap_validation_isValid = ::OpenAPI::fromJsonValue(m_sap_validation, json[QString("sapValidation")]);
    m_sap_validation_isSet = !json[QString("sapValidation")].isNull() && m_sap_validation_isValid;

    m_sent_time_isValid = ::OpenAPI::fromJsonValue(m_sent_time, json[QString("sentTime")]);
    m_sent_time_isSet = !json[QString("sentTime")].isNull() && m_sent_time_isValid;

    m_sqlserver_validation_isValid = ::OpenAPI::fromJsonValue(m_sqlserver_validation, json[QString("sqlserverValidation")]);
    m_sqlserver_validation_isSet = !json[QString("sqlserverValidation")].isNull() && m_sqlserver_validation_isValid;
}

QString OAIInsight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInsight::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_id_isSet) {
        obj.insert(QString("instanceId"), ::OpenAPI::toJsonValue(m_instance_id));
    }
    if (m_sap_discovery.isSet()) {
        obj.insert(QString("sapDiscovery"), ::OpenAPI::toJsonValue(m_sap_discovery));
    }
    if (m_sap_validation.isSet()) {
        obj.insert(QString("sapValidation"), ::OpenAPI::toJsonValue(m_sap_validation));
    }
    if (m_sent_time_isSet) {
        obj.insert(QString("sentTime"), ::OpenAPI::toJsonValue(m_sent_time));
    }
    if (m_sqlserver_validation.isSet()) {
        obj.insert(QString("sqlserverValidation"), ::OpenAPI::toJsonValue(m_sqlserver_validation));
    }
    return obj;
}

QString OAIInsight::getInstanceId() const {
    return m_instance_id;
}
void OAIInsight::setInstanceId(const QString &instance_id) {
    m_instance_id = instance_id;
    m_instance_id_isSet = true;
}

bool OAIInsight::is_instance_id_Set() const{
    return m_instance_id_isSet;
}

bool OAIInsight::is_instance_id_Valid() const{
    return m_instance_id_isValid;
}

OAISapDiscovery OAIInsight::getSapDiscovery() const {
    return m_sap_discovery;
}
void OAIInsight::setSapDiscovery(const OAISapDiscovery &sap_discovery) {
    m_sap_discovery = sap_discovery;
    m_sap_discovery_isSet = true;
}

bool OAIInsight::is_sap_discovery_Set() const{
    return m_sap_discovery_isSet;
}

bool OAIInsight::is_sap_discovery_Valid() const{
    return m_sap_discovery_isValid;
}

OAISapValidation OAIInsight::getSapValidation() const {
    return m_sap_validation;
}
void OAIInsight::setSapValidation(const OAISapValidation &sap_validation) {
    m_sap_validation = sap_validation;
    m_sap_validation_isSet = true;
}

bool OAIInsight::is_sap_validation_Set() const{
    return m_sap_validation_isSet;
}

bool OAIInsight::is_sap_validation_Valid() const{
    return m_sap_validation_isValid;
}

QString OAIInsight::getSentTime() const {
    return m_sent_time;
}
void OAIInsight::setSentTime(const QString &sent_time) {
    m_sent_time = sent_time;
    m_sent_time_isSet = true;
}

bool OAIInsight::is_sent_time_Set() const{
    return m_sent_time_isSet;
}

bool OAIInsight::is_sent_time_Valid() const{
    return m_sent_time_isValid;
}

OAISqlserverValidation OAIInsight::getSqlserverValidation() const {
    return m_sqlserver_validation;
}
void OAIInsight::setSqlserverValidation(const OAISqlserverValidation &sqlserver_validation) {
    m_sqlserver_validation = sqlserver_validation;
    m_sqlserver_validation_isSet = true;
}

bool OAIInsight::is_sqlserver_validation_Set() const{
    return m_sqlserver_validation_isSet;
}

bool OAIInsight::is_sqlserver_validation_Valid() const{
    return m_sqlserver_validation_isValid;
}

bool OAIInsight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sap_discovery.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sap_validation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sqlserver_validation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInsight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
