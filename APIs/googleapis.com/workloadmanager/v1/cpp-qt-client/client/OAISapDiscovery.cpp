/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISapDiscovery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISapDiscovery::OAISapDiscovery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISapDiscovery::OAISapDiscovery() {
    this->initializeModel();
}

OAISapDiscovery::~OAISapDiscovery() {}

void OAISapDiscovery::initializeModel() {

    m_application_layer_isSet = false;
    m_application_layer_isValid = false;

    m_database_layer_isSet = false;
    m_database_layer_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;

    m_system_id_isSet = false;
    m_system_id_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_workload_properties_isSet = false;
    m_workload_properties_isValid = false;
}

void OAISapDiscovery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISapDiscovery::fromJsonObject(QJsonObject json) {

    m_application_layer_isValid = ::OpenAPI::fromJsonValue(m_application_layer, json[QString("applicationLayer")]);
    m_application_layer_isSet = !json[QString("applicationLayer")].isNull() && m_application_layer_isValid;

    m_database_layer_isValid = ::OpenAPI::fromJsonValue(m_database_layer, json[QString("databaseLayer")]);
    m_database_layer_isSet = !json[QString("databaseLayer")].isNull() && m_database_layer_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("projectNumber")]);
    m_project_number_isSet = !json[QString("projectNumber")].isNull() && m_project_number_isValid;

    m_system_id_isValid = ::OpenAPI::fromJsonValue(m_system_id, json[QString("systemId")]);
    m_system_id_isSet = !json[QString("systemId")].isNull() && m_system_id_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_workload_properties_isValid = ::OpenAPI::fromJsonValue(m_workload_properties, json[QString("workloadProperties")]);
    m_workload_properties_isSet = !json[QString("workloadProperties")].isNull() && m_workload_properties_isValid;
}

QString OAISapDiscovery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISapDiscovery::asJsonObject() const {
    QJsonObject obj;
    if (m_application_layer.isSet()) {
        obj.insert(QString("applicationLayer"), ::OpenAPI::toJsonValue(m_application_layer));
    }
    if (m_database_layer.isSet()) {
        obj.insert(QString("databaseLayer"), ::OpenAPI::toJsonValue(m_database_layer));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("projectNumber"), ::OpenAPI::toJsonValue(m_project_number));
    }
    if (m_system_id_isSet) {
        obj.insert(QString("systemId"), ::OpenAPI::toJsonValue(m_system_id));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_workload_properties.isSet()) {
        obj.insert(QString("workloadProperties"), ::OpenAPI::toJsonValue(m_workload_properties));
    }
    return obj;
}

OAISapDiscoveryComponent OAISapDiscovery::getApplicationLayer() const {
    return m_application_layer;
}
void OAISapDiscovery::setApplicationLayer(const OAISapDiscoveryComponent &application_layer) {
    m_application_layer = application_layer;
    m_application_layer_isSet = true;
}

bool OAISapDiscovery::is_application_layer_Set() const{
    return m_application_layer_isSet;
}

bool OAISapDiscovery::is_application_layer_Valid() const{
    return m_application_layer_isValid;
}

OAISapDiscoveryComponent OAISapDiscovery::getDatabaseLayer() const {
    return m_database_layer;
}
void OAISapDiscovery::setDatabaseLayer(const OAISapDiscoveryComponent &database_layer) {
    m_database_layer = database_layer;
    m_database_layer_isSet = true;
}

bool OAISapDiscovery::is_database_layer_Set() const{
    return m_database_layer_isSet;
}

bool OAISapDiscovery::is_database_layer_Valid() const{
    return m_database_layer_isValid;
}

OAISapDiscoveryMetadata OAISapDiscovery::getMetadata() const {
    return m_metadata;
}
void OAISapDiscovery::setMetadata(const OAISapDiscoveryMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAISapDiscovery::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAISapDiscovery::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAISapDiscovery::getProjectNumber() const {
    return m_project_number;
}
void OAISapDiscovery::setProjectNumber(const QString &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAISapDiscovery::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAISapDiscovery::is_project_number_Valid() const{
    return m_project_number_isValid;
}

QString OAISapDiscovery::getSystemId() const {
    return m_system_id;
}
void OAISapDiscovery::setSystemId(const QString &system_id) {
    m_system_id = system_id;
    m_system_id_isSet = true;
}

bool OAISapDiscovery::is_system_id_Set() const{
    return m_system_id_isSet;
}

bool OAISapDiscovery::is_system_id_Valid() const{
    return m_system_id_isValid;
}

QString OAISapDiscovery::getUpdateTime() const {
    return m_update_time;
}
void OAISapDiscovery::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAISapDiscovery::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAISapDiscovery::is_update_time_Valid() const{
    return m_update_time_isValid;
}

OAISapDiscoveryWorkloadProperties OAISapDiscovery::getWorkloadProperties() const {
    return m_workload_properties;
}
void OAISapDiscovery::setWorkloadProperties(const OAISapDiscoveryWorkloadProperties &workload_properties) {
    m_workload_properties = workload_properties;
    m_workload_properties_isSet = true;
}

bool OAISapDiscovery::is_workload_properties_Set() const{
    return m_workload_properties_isSet;
}

bool OAISapDiscovery::is_workload_properties_Valid() const{
    return m_workload_properties_isValid;
}

bool OAISapDiscovery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_layer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_database_layer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workload_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISapDiscovery::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
