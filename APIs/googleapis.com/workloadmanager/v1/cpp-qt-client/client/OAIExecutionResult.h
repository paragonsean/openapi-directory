/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecutionResult.h
 *
 * Message describing the result of an execution
 */

#ifndef OAIExecutionResult_H
#define OAIExecutionResult_H

#include <QJsonObject>

#include "OAIResource.h"
#include "OAIViolationDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResource;
class OAIViolationDetails;

class OAIExecutionResult : public OAIObject {
public:
    OAIExecutionResult();
    OAIExecutionResult(QString json);
    ~OAIExecutionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDocumentationUrl() const;
    void setDocumentationUrl(const QString &documentation_url);
    bool is_documentation_url_Set() const;
    bool is_documentation_url_Valid() const;

    OAIResource getResource() const;
    void setResource(const OAIResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getRule() const;
    void setRule(const QString &rule);
    bool is_rule_Set() const;
    bool is_rule_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAIViolationDetails getViolationDetails() const;
    void setViolationDetails(const OAIViolationDetails &violation_details);
    bool is_violation_details_Set() const;
    bool is_violation_details_Valid() const;

    QString getViolationMessage() const;
    void setViolationMessage(const QString &violation_message);
    bool is_violation_message_Set() const;
    bool is_violation_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_documentation_url;
    bool m_documentation_url_isSet;
    bool m_documentation_url_isValid;

    OAIResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_rule;
    bool m_rule_isSet;
    bool m_rule_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAIViolationDetails m_violation_details;
    bool m_violation_details_isSet;
    bool m_violation_details_isValid;

    QString m_violation_message;
    bool m_violation_message_isSet;
    bool m_violation_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecutionResult)

#endif // OAIExecutionResult_H
