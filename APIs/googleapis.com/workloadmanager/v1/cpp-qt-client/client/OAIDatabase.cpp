/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabase::OAIDatabase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabase::OAIDatabase() {
    this->initializeModel();
}

OAIDatabase::~OAIDatabase() {}

void OAIDatabase::initializeModel() {

    m_backup_file_isSet = false;
    m_backup_file_isValid = false;

    m_backup_schedule_isSet = false;
    m_backup_schedule_isValid = false;

    m_host_vm_isSet = false;
    m_host_vm_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIDatabase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabase::fromJsonObject(QJsonObject json) {

    m_backup_file_isValid = ::OpenAPI::fromJsonValue(m_backup_file, json[QString("backupFile")]);
    m_backup_file_isSet = !json[QString("backupFile")].isNull() && m_backup_file_isValid;

    m_backup_schedule_isValid = ::OpenAPI::fromJsonValue(m_backup_schedule, json[QString("backupSchedule")]);
    m_backup_schedule_isSet = !json[QString("backupSchedule")].isNull() && m_backup_schedule_isValid;

    m_host_vm_isValid = ::OpenAPI::fromJsonValue(m_host_vm, json[QString("hostVm")]);
    m_host_vm_isSet = !json[QString("hostVm")].isNull() && m_host_vm_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIDatabase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabase::asJsonObject() const {
    QJsonObject obj;
    if (m_backup_file_isSet) {
        obj.insert(QString("backupFile"), ::OpenAPI::toJsonValue(m_backup_file));
    }
    if (m_backup_schedule_isSet) {
        obj.insert(QString("backupSchedule"), ::OpenAPI::toJsonValue(m_backup_schedule));
    }
    if (m_host_vm_isSet) {
        obj.insert(QString("hostVm"), ::OpenAPI::toJsonValue(m_host_vm));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIDatabase::getBackupFile() const {
    return m_backup_file;
}
void OAIDatabase::setBackupFile(const QString &backup_file) {
    m_backup_file = backup_file;
    m_backup_file_isSet = true;
}

bool OAIDatabase::is_backup_file_Set() const{
    return m_backup_file_isSet;
}

bool OAIDatabase::is_backup_file_Valid() const{
    return m_backup_file_isValid;
}

QString OAIDatabase::getBackupSchedule() const {
    return m_backup_schedule;
}
void OAIDatabase::setBackupSchedule(const QString &backup_schedule) {
    m_backup_schedule = backup_schedule;
    m_backup_schedule_isSet = true;
}

bool OAIDatabase::is_backup_schedule_Set() const{
    return m_backup_schedule_isSet;
}

bool OAIDatabase::is_backup_schedule_Valid() const{
    return m_backup_schedule_isValid;
}

QString OAIDatabase::getHostVm() const {
    return m_host_vm;
}
void OAIDatabase::setHostVm(const QString &host_vm) {
    m_host_vm = host_vm;
    m_host_vm_isSet = true;
}

bool OAIDatabase::is_host_vm_Set() const{
    return m_host_vm_isSet;
}

bool OAIDatabase::is_host_vm_Valid() const{
    return m_host_vm_isValid;
}

QString OAIDatabase::getName() const {
    return m_name;
}
void OAIDatabase::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDatabase::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDatabase::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIDatabase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backup_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_schedule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_vm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabase::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
