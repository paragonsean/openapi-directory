/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkloadProfile.h
 *
 * workload resource
 */

#ifndef OAIWorkloadProfile_H
#define OAIWorkloadProfile_H

#include <QJsonObject>

#include "OAILayer.h"
#include "OAISapWorkload.h"
#include "OAISqlserverWorkload.h"
#include "OAIThreeTierWorkload.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILayer;
class OAISapWorkload;
class OAISqlserverWorkload;
class OAIThreeTierWorkload;

class OAIWorkloadProfile : public OAIObject {
public:
    OAIWorkloadProfile();
    OAIWorkloadProfile(QString json);
    ~OAIWorkloadProfile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILayer getApplication() const;
    void setApplication(const OAILayer &application);
    bool is_application_Set() const;
    bool is_application_Valid() const;

    OAILayer getAscs() const;
    void setAscs(const OAILayer &ascs);
    bool is_ascs_Set() const;
    bool is_ascs_Valid() const;

    OAILayer getDatabase() const;
    void setDatabase(const OAILayer &database);
    bool is_database_Set() const;
    bool is_database_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRefreshedTime() const;
    void setRefreshedTime(const QString &refreshed_time);
    bool is_refreshed_time_Set() const;
    bool is_refreshed_time_Valid() const;

    OAISapWorkload getSapWorkload() const;
    void setSapWorkload(const OAISapWorkload &sap_workload);
    bool is_sap_workload_Set() const;
    bool is_sap_workload_Valid() const;

    OAISqlserverWorkload getSqlserverWorkload() const;
    void setSqlserverWorkload(const OAISqlserverWorkload &sqlserver_workload);
    bool is_sqlserver_workload_Set() const;
    bool is_sqlserver_workload_Valid() const;

    Q_DECL_DEPRECATED QString getState() const;
    Q_DECL_DEPRECATED void setState(const QString &state);
    Q_DECL_DEPRECATED bool is_state_Set() const;
    Q_DECL_DEPRECATED bool is_state_Valid() const;

    OAIThreeTierWorkload getThreeTierWorkload() const;
    void setThreeTierWorkload(const OAIThreeTierWorkload &three_tier_workload);
    bool is_three_tier_workload_Set() const;
    bool is_three_tier_workload_Valid() const;

    QString getWorkloadType() const;
    void setWorkloadType(const QString &workload_type);
    bool is_workload_type_Set() const;
    bool is_workload_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILayer m_application;
    bool m_application_isSet;
    bool m_application_isValid;

    OAILayer m_ascs;
    bool m_ascs_isSet;
    bool m_ascs_isValid;

    OAILayer m_database;
    bool m_database_isSet;
    bool m_database_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_refreshed_time;
    bool m_refreshed_time_isSet;
    bool m_refreshed_time_isValid;

    OAISapWorkload m_sap_workload;
    bool m_sap_workload_isSet;
    bool m_sap_workload_isValid;

    OAISqlserverWorkload m_sqlserver_workload;
    bool m_sqlserver_workload_isSet;
    bool m_sqlserver_workload_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIThreeTierWorkload m_three_tier_workload;
    bool m_three_tier_workload_isSet;
    bool m_three_tier_workload_isValid;

    QString m_workload_type;
    bool m_workload_type_isSet;
    bool m_workload_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkloadProfile)

#endif // OAIWorkloadProfile_H
