/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIThreeTierWorkload.h
 *
 * The body of three tier workload
 */

#ifndef OAIThreeTierWorkload_H
#define OAIThreeTierWorkload_H

#include <QJsonObject>

#include "OAIAPILayerServer.h"
#include "OAIBackendServer.h"
#include "OAIFrontEndServer.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAPILayerServer;
class OAIBackendServer;
class OAIFrontEndServer;

class OAIThreeTierWorkload : public OAIObject {
public:
    OAIThreeTierWorkload();
    OAIThreeTierWorkload(QString json);
    ~OAIThreeTierWorkload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAPILayerServer getApiLayer() const;
    void setApiLayer(const OAIAPILayerServer &api_layer);
    bool is_api_layer_Set() const;
    bool is_api_layer_Valid() const;

    OAIBackendServer getBackend() const;
    void setBackend(const OAIBackendServer &backend);
    bool is_backend_Set() const;
    bool is_backend_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    OAIFrontEndServer getFrontend() const;
    void setFrontend(const OAIFrontEndServer &frontend);
    bool is_frontend_Set() const;
    bool is_frontend_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAPILayerServer m_api_layer;
    bool m_api_layer_isSet;
    bool m_api_layer_isValid;

    OAIBackendServer m_backend;
    bool m_backend_isSet;
    bool m_backend_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    OAIFrontEndServer m_frontend;
    bool m_frontend_isSet;
    bool m_frontend_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIThreeTierWorkload)

#endif // OAIThreeTierWorkload_H
