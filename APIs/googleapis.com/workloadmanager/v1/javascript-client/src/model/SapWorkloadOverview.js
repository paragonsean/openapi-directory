/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SapWorkloadOverview model module.
 * @module model/SapWorkloadOverview
 * @version v1
 */
class SapWorkloadOverview {
    /**
     * Constructs a new <code>SapWorkloadOverview</code>.
     * The overview of sap workload
     * @alias module:model/SapWorkloadOverview
     */
    constructor() { 
        
        SapWorkloadOverview.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SapWorkloadOverview</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SapWorkloadOverview} obj Optional instance to populate.
     * @return {module:model/SapWorkloadOverview} The populated <code>SapWorkloadOverview</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SapWorkloadOverview();

            if (data.hasOwnProperty('appSid')) {
                obj['appSid'] = ApiClient.convertToType(data['appSid'], 'String');
            }
            if (data.hasOwnProperty('dbSid')) {
                obj['dbSid'] = ApiClient.convertToType(data['dbSid'], 'String');
            }
            if (data.hasOwnProperty('sapSystemId')) {
                obj['sapSystemId'] = ApiClient.convertToType(data['sapSystemId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SapWorkloadOverview</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SapWorkloadOverview</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appSid'] && !(typeof data['appSid'] === 'string' || data['appSid'] instanceof String)) {
            throw new Error("Expected the field `appSid` to be a primitive type in the JSON string but got " + data['appSid']);
        }
        // ensure the json data is a string
        if (data['dbSid'] && !(typeof data['dbSid'] === 'string' || data['dbSid'] instanceof String)) {
            throw new Error("Expected the field `dbSid` to be a primitive type in the JSON string but got " + data['dbSid']);
        }
        // ensure the json data is a string
        if (data['sapSystemId'] && !(typeof data['sapSystemId'] === 'string' || data['sapSystemId'] instanceof String)) {
            throw new Error("Expected the field `sapSystemId` to be a primitive type in the JSON string but got " + data['sapSystemId']);
        }

        return true;
    }


}



/**
 * Output only. The application SID
 * @member {String} appSid
 */
SapWorkloadOverview.prototype['appSid'] = undefined;

/**
 * Output only. The database SID
 * @member {String} dbSid
 */
SapWorkloadOverview.prototype['dbSid'] = undefined;

/**
 * Output only. The UUID for a SAP workload
 * @member {String} sapSystemId
 */
SapWorkloadOverview.prototype['sapSystemId'] = undefined;






export default SapWorkloadOverview;

