/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SapDiscoveryComponentApplicationProperties model module.
 * @module model/SapDiscoveryComponentApplicationProperties
 * @version v1
 */
class SapDiscoveryComponentApplicationProperties {
    /**
     * Constructs a new <code>SapDiscoveryComponentApplicationProperties</code>.
     * A set of properties describing an SAP Application layer.
     * @alias module:model/SapDiscoveryComponentApplicationProperties
     */
    constructor() { 
        
        SapDiscoveryComponentApplicationProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SapDiscoveryComponentApplicationProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SapDiscoveryComponentApplicationProperties} obj Optional instance to populate.
     * @return {module:model/SapDiscoveryComponentApplicationProperties} The populated <code>SapDiscoveryComponentApplicationProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SapDiscoveryComponentApplicationProperties();

            if (data.hasOwnProperty('abap')) {
                obj['abap'] = ApiClient.convertToType(data['abap'], 'Boolean');
            }
            if (data.hasOwnProperty('applicationType')) {
                obj['applicationType'] = ApiClient.convertToType(data['applicationType'], 'String');
            }
            if (data.hasOwnProperty('ascsUri')) {
                obj['ascsUri'] = ApiClient.convertToType(data['ascsUri'], 'String');
            }
            if (data.hasOwnProperty('kernelVersion')) {
                obj['kernelVersion'] = ApiClient.convertToType(data['kernelVersion'], 'String');
            }
            if (data.hasOwnProperty('nfsUri')) {
                obj['nfsUri'] = ApiClient.convertToType(data['nfsUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SapDiscoveryComponentApplicationProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SapDiscoveryComponentApplicationProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicationType'] && !(typeof data['applicationType'] === 'string' || data['applicationType'] instanceof String)) {
            throw new Error("Expected the field `applicationType` to be a primitive type in the JSON string but got " + data['applicationType']);
        }
        // ensure the json data is a string
        if (data['ascsUri'] && !(typeof data['ascsUri'] === 'string' || data['ascsUri'] instanceof String)) {
            throw new Error("Expected the field `ascsUri` to be a primitive type in the JSON string but got " + data['ascsUri']);
        }
        // ensure the json data is a string
        if (data['kernelVersion'] && !(typeof data['kernelVersion'] === 'string' || data['kernelVersion'] instanceof String)) {
            throw new Error("Expected the field `kernelVersion` to be a primitive type in the JSON string but got " + data['kernelVersion']);
        }
        // ensure the json data is a string
        if (data['nfsUri'] && !(typeof data['nfsUri'] === 'string' || data['nfsUri'] instanceof String)) {
            throw new Error("Expected the field `nfsUri` to be a primitive type in the JSON string but got " + data['nfsUri']);
        }

        return true;
    }


}



/**
 * Optional. Indicates whether this is a Java or ABAP Netweaver instance. true means it is ABAP, false means it is Java.
 * @member {Boolean} abap
 */
SapDiscoveryComponentApplicationProperties.prototype['abap'] = undefined;

/**
 * Required. Type of the application. Netweaver, etc.
 * @member {module:model/SapDiscoveryComponentApplicationProperties.ApplicationTypeEnum} applicationType
 */
SapDiscoveryComponentApplicationProperties.prototype['applicationType'] = undefined;

/**
 * Optional. Resource URI of the recognized ASCS host of the application.
 * @member {String} ascsUri
 */
SapDiscoveryComponentApplicationProperties.prototype['ascsUri'] = undefined;

/**
 * Optional. Kernel version for Netweaver running in the system.
 * @member {String} kernelVersion
 */
SapDiscoveryComponentApplicationProperties.prototype['kernelVersion'] = undefined;

/**
 * Optional. Resource URI of the recognized shared NFS of the application. May be empty if the application server has only a single node.
 * @member {String} nfsUri
 */
SapDiscoveryComponentApplicationProperties.prototype['nfsUri'] = undefined;





/**
 * Allowed values for the <code>applicationType</code> property.
 * @enum {String}
 * @readonly
 */
SapDiscoveryComponentApplicationProperties['ApplicationTypeEnum'] = {

    /**
     * value: "APPLICATION_TYPE_UNSPECIFIED"
     * @const
     */
    "APPLICATION_TYPE_UNSPECIFIED": "APPLICATION_TYPE_UNSPECIFIED",

    /**
     * value: "NETWEAVER"
     * @const
     */
    "NETWEAVER": "NETWEAVER"
};



export default SapDiscoveryComponentApplicationProperties;

