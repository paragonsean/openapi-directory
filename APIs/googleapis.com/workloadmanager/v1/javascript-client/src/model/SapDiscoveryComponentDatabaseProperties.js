/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SapDiscoveryComponentDatabaseProperties model module.
 * @module model/SapDiscoveryComponentDatabaseProperties
 * @version v1
 */
class SapDiscoveryComponentDatabaseProperties {
    /**
     * Constructs a new <code>SapDiscoveryComponentDatabaseProperties</code>.
     * A set of properties describing an SAP Database layer.
     * @alias module:model/SapDiscoveryComponentDatabaseProperties
     */
    constructor() { 
        
        SapDiscoveryComponentDatabaseProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SapDiscoveryComponentDatabaseProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SapDiscoveryComponentDatabaseProperties} obj Optional instance to populate.
     * @return {module:model/SapDiscoveryComponentDatabaseProperties} The populated <code>SapDiscoveryComponentDatabaseProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SapDiscoveryComponentDatabaseProperties();

            if (data.hasOwnProperty('databaseType')) {
                obj['databaseType'] = ApiClient.convertToType(data['databaseType'], 'String');
            }
            if (data.hasOwnProperty('databaseVersion')) {
                obj['databaseVersion'] = ApiClient.convertToType(data['databaseVersion'], 'String');
            }
            if (data.hasOwnProperty('primaryInstanceUri')) {
                obj['primaryInstanceUri'] = ApiClient.convertToType(data['primaryInstanceUri'], 'String');
            }
            if (data.hasOwnProperty('sharedNfsUri')) {
                obj['sharedNfsUri'] = ApiClient.convertToType(data['sharedNfsUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SapDiscoveryComponentDatabaseProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SapDiscoveryComponentDatabaseProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['databaseType'] && !(typeof data['databaseType'] === 'string' || data['databaseType'] instanceof String)) {
            throw new Error("Expected the field `databaseType` to be a primitive type in the JSON string but got " + data['databaseType']);
        }
        // ensure the json data is a string
        if (data['databaseVersion'] && !(typeof data['databaseVersion'] === 'string' || data['databaseVersion'] instanceof String)) {
            throw new Error("Expected the field `databaseVersion` to be a primitive type in the JSON string but got " + data['databaseVersion']);
        }
        // ensure the json data is a string
        if (data['primaryInstanceUri'] && !(typeof data['primaryInstanceUri'] === 'string' || data['primaryInstanceUri'] instanceof String)) {
            throw new Error("Expected the field `primaryInstanceUri` to be a primitive type in the JSON string but got " + data['primaryInstanceUri']);
        }
        // ensure the json data is a string
        if (data['sharedNfsUri'] && !(typeof data['sharedNfsUri'] === 'string' || data['sharedNfsUri'] instanceof String)) {
            throw new Error("Expected the field `sharedNfsUri` to be a primitive type in the JSON string but got " + data['sharedNfsUri']);
        }

        return true;
    }


}



/**
 * Required. Type of the database. HANA, DB2, etc.
 * @member {module:model/SapDiscoveryComponentDatabaseProperties.DatabaseTypeEnum} databaseType
 */
SapDiscoveryComponentDatabaseProperties.prototype['databaseType'] = undefined;

/**
 * Optional. The version of the database software running in the system.
 * @member {String} databaseVersion
 */
SapDiscoveryComponentDatabaseProperties.prototype['databaseVersion'] = undefined;

/**
 * Required. URI of the recognized primary instance of the database.
 * @member {String} primaryInstanceUri
 */
SapDiscoveryComponentDatabaseProperties.prototype['primaryInstanceUri'] = undefined;

/**
 * Optional. URI of the recognized shared NFS of the database. May be empty if the database has only a single node.
 * @member {String} sharedNfsUri
 */
SapDiscoveryComponentDatabaseProperties.prototype['sharedNfsUri'] = undefined;





/**
 * Allowed values for the <code>databaseType</code> property.
 * @enum {String}
 * @readonly
 */
SapDiscoveryComponentDatabaseProperties['DatabaseTypeEnum'] = {

    /**
     * value: "DATABASE_TYPE_UNSPECIFIED"
     * @const
     */
    "DATABASE_TYPE_UNSPECIFIED": "DATABASE_TYPE_UNSPECIFIED",

    /**
     * value: "HANA"
     * @const
     */
    "HANA": "HANA",

    /**
     * value: "MAX_DB"
     * @const
     */
    "MAX_DB": "MAX_DB",

    /**
     * value: "DB2"
     * @const
     */
    "DB2": "DB2"
};



export default SapDiscoveryComponentDatabaseProperties;

