/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SapDiscoveryMetadata model module.
 * @module model/SapDiscoveryMetadata
 * @version v1
 */
class SapDiscoveryMetadata {
    /**
     * Constructs a new <code>SapDiscoveryMetadata</code>.
     * Message describing SAP discovery system metadata
     * @alias module:model/SapDiscoveryMetadata
     */
    constructor() { 
        
        SapDiscoveryMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SapDiscoveryMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SapDiscoveryMetadata} obj Optional instance to populate.
     * @return {module:model/SapDiscoveryMetadata} The populated <code>SapDiscoveryMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SapDiscoveryMetadata();

            if (data.hasOwnProperty('customerRegion')) {
                obj['customerRegion'] = ApiClient.convertToType(data['customerRegion'], 'String');
            }
            if (data.hasOwnProperty('definedSystem')) {
                obj['definedSystem'] = ApiClient.convertToType(data['definedSystem'], 'String');
            }
            if (data.hasOwnProperty('environmentType')) {
                obj['environmentType'] = ApiClient.convertToType(data['environmentType'], 'String');
            }
            if (data.hasOwnProperty('sapProduct')) {
                obj['sapProduct'] = ApiClient.convertToType(data['sapProduct'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SapDiscoveryMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SapDiscoveryMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customerRegion'] && !(typeof data['customerRegion'] === 'string' || data['customerRegion'] instanceof String)) {
            throw new Error("Expected the field `customerRegion` to be a primitive type in the JSON string but got " + data['customerRegion']);
        }
        // ensure the json data is a string
        if (data['definedSystem'] && !(typeof data['definedSystem'] === 'string' || data['definedSystem'] instanceof String)) {
            throw new Error("Expected the field `definedSystem` to be a primitive type in the JSON string but got " + data['definedSystem']);
        }
        // ensure the json data is a string
        if (data['environmentType'] && !(typeof data['environmentType'] === 'string' || data['environmentType'] instanceof String)) {
            throw new Error("Expected the field `environmentType` to be a primitive type in the JSON string but got " + data['environmentType']);
        }
        // ensure the json data is a string
        if (data['sapProduct'] && !(typeof data['sapProduct'] === 'string' || data['sapProduct'] instanceof String)) {
            throw new Error("Expected the field `sapProduct` to be a primitive type in the JSON string but got " + data['sapProduct']);
        }

        return true;
    }


}



/**
 * Optional. Customer region string for customer's use. Does not represent GCP region.
 * @member {String} customerRegion
 */
SapDiscoveryMetadata.prototype['customerRegion'] = undefined;

/**
 * Optional. Customer defined, something like \"E-commerce pre prod\"
 * @member {String} definedSystem
 */
SapDiscoveryMetadata.prototype['definedSystem'] = undefined;

/**
 * Optional. Should be \"prod\", \"QA\", \"dev\", \"staging\", etc.
 * @member {String} environmentType
 */
SapDiscoveryMetadata.prototype['environmentType'] = undefined;

/**
 * Optional. This SAP product name
 * @member {String} sapProduct
 */
SapDiscoveryMetadata.prototype['sapProduct'] = undefined;






export default SapDiscoveryMetadata;

