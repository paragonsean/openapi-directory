/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Resource from './Resource';
import ViolationDetails from './ViolationDetails';

/**
 * The ExecutionResult model module.
 * @module model/ExecutionResult
 * @version v1
 */
class ExecutionResult {
    /**
     * Constructs a new <code>ExecutionResult</code>.
     * Message describing the result of an execution
     * @alias module:model/ExecutionResult
     */
    constructor() { 
        
        ExecutionResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExecutionResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecutionResult} obj Optional instance to populate.
     * @return {module:model/ExecutionResult} The populated <code>ExecutionResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecutionResult();

            if (data.hasOwnProperty('documentationUrl')) {
                obj['documentationUrl'] = ApiClient.convertToType(data['documentationUrl'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = Resource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('rule')) {
                obj['rule'] = ApiClient.convertToType(data['rule'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('violationDetails')) {
                obj['violationDetails'] = ViolationDetails.constructFromObject(data['violationDetails']);
            }
            if (data.hasOwnProperty('violationMessage')) {
                obj['violationMessage'] = ApiClient.convertToType(data['violationMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecutionResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecutionResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['documentationUrl'] && !(typeof data['documentationUrl'] === 'string' || data['documentationUrl'] instanceof String)) {
            throw new Error("Expected the field `documentationUrl` to be a primitive type in the JSON string but got " + data['documentationUrl']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          Resource.validateJSON(data['resource']);
        }
        // ensure the json data is a string
        if (data['rule'] && !(typeof data['rule'] === 'string' || data['rule'] instanceof String)) {
            throw new Error("Expected the field `rule` to be a primitive type in the JSON string but got " + data['rule']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // validate the optional field `violationDetails`
        if (data['violationDetails']) { // data not null
          ViolationDetails.validateJSON(data['violationDetails']);
        }
        // ensure the json data is a string
        if (data['violationMessage'] && !(typeof data['violationMessage'] === 'string' || data['violationMessage'] instanceof String)) {
            throw new Error("Expected the field `violationMessage` to be a primitive type in the JSON string but got " + data['violationMessage']);
        }

        return true;
    }


}



/**
 * the document url of the rule
 * @member {String} documentationUrl
 */
ExecutionResult.prototype['documentationUrl'] = undefined;

/**
 * @member {module:model/Resource} resource
 */
ExecutionResult.prototype['resource'] = undefined;

/**
 * the rule which violate in execution
 * @member {String} rule
 */
ExecutionResult.prototype['rule'] = undefined;

/**
 * severity of violation
 * @member {String} severity
 */
ExecutionResult.prototype['severity'] = undefined;

/**
 * @member {module:model/ViolationDetails} violationDetails
 */
ExecutionResult.prototype['violationDetails'] = undefined;

/**
 * the violation message of an execution
 * @member {String} violationMessage
 */
ExecutionResult.prototype['violationMessage'] = undefined;






export default ExecutionResult;

