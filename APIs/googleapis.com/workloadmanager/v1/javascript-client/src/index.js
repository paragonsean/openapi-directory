/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import APILayerServer from './model/APILayerServer';
import AvailabilityGroup from './model/AvailabilityGroup';
import BackendServer from './model/BackendServer';
import BigQueryDestination from './model/BigQueryDestination';
import CloudResource from './model/CloudResource';
import Cluster from './model/Cluster';
import Database from './model/Database';
import Evaluation from './model/Evaluation';
import Execution from './model/Execution';
import ExecutionResult from './model/ExecutionResult';
import FrontEndServer from './model/FrontEndServer';
import GceInstanceFilter from './model/GceInstanceFilter';
import Insight from './model/Insight';
import Instance from './model/Instance';
import Layer from './model/Layer';
import ListEvaluationsResponse from './model/ListEvaluationsResponse';
import ListExecutionResultsResponse from './model/ListExecutionResultsResponse';
import ListExecutionsResponse from './model/ListExecutionsResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListRulesResponse from './model/ListRulesResponse';
import ListScannedResourcesResponse from './model/ListScannedResourcesResponse';
import ListWorkloadProfilesResponse from './model/ListWorkloadProfilesResponse';
import LoadBalancerServer from './model/LoadBalancerServer';
import Location from './model/Location';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import Resource from './model/Resource';
import ResourceFilter from './model/ResourceFilter';
import ResourceStatus from './model/ResourceStatus';
import Rule from './model/Rule';
import RunEvaluationRequest from './model/RunEvaluationRequest';
import SapComponent from './model/SapComponent';
import SapDiscovery from './model/SapDiscovery';
import SapDiscoveryComponent from './model/SapDiscoveryComponent';
import SapDiscoveryComponentApplicationProperties from './model/SapDiscoveryComponentApplicationProperties';
import SapDiscoveryComponentDatabaseProperties from './model/SapDiscoveryComponentDatabaseProperties';
import SapDiscoveryMetadata from './model/SapDiscoveryMetadata';
import SapDiscoveryResource from './model/SapDiscoveryResource';
import SapDiscoveryResourceInstanceProperties from './model/SapDiscoveryResourceInstanceProperties';
import SapDiscoveryWorkloadProperties from './model/SapDiscoveryWorkloadProperties';
import SapDiscoveryWorkloadPropertiesProductVersion from './model/SapDiscoveryWorkloadPropertiesProductVersion';
import SapDiscoveryWorkloadPropertiesSoftwareComponentProperties from './model/SapDiscoveryWorkloadPropertiesSoftwareComponentProperties';
import SapValidation from './model/SapValidation';
import SapValidationValidationDetail from './model/SapValidationValidationDetail';
import SapWorkload from './model/SapWorkload';
import SapWorkloadOverview from './model/SapWorkloadOverview';
import ScannedResource from './model/ScannedResource';
import SqlserverValidation from './model/SqlserverValidation';
import SqlserverValidationDetails from './model/SqlserverValidationDetails';
import SqlserverValidationValidationDetail from './model/SqlserverValidationValidationDetail';
import SqlserverWorkload from './model/SqlserverWorkload';
import SqlserverWorkloadOverview from './model/SqlserverWorkloadOverview';
import Status from './model/Status';
import ThreeTierWorkload from './model/ThreeTierWorkload';
import ThreeTierWorkloadOverview from './model/ThreeTierWorkloadOverview';
import ViolationDetails from './model/ViolationDetails';
import WorkloadProfile from './model/WorkloadProfile';
import WorkloadProfileOverview from './model/WorkloadProfileOverview';
import WriteInsightRequest from './model/WriteInsightRequest';
import ProjectsApi from './api/ProjectsApi';


/**
* Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WorkloadManagerApi = require('index'); // See note below*.
* var xxxSvc = new WorkloadManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WorkloadManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WorkloadManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WorkloadManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The APILayerServer model constructor.
     * @property {module:model/APILayerServer}
     */
    APILayerServer,

    /**
     * The AvailabilityGroup model constructor.
     * @property {module:model/AvailabilityGroup}
     */
    AvailabilityGroup,

    /**
     * The BackendServer model constructor.
     * @property {module:model/BackendServer}
     */
    BackendServer,

    /**
     * The BigQueryDestination model constructor.
     * @property {module:model/BigQueryDestination}
     */
    BigQueryDestination,

    /**
     * The CloudResource model constructor.
     * @property {module:model/CloudResource}
     */
    CloudResource,

    /**
     * The Cluster model constructor.
     * @property {module:model/Cluster}
     */
    Cluster,

    /**
     * The Database model constructor.
     * @property {module:model/Database}
     */
    Database,

    /**
     * The Evaluation model constructor.
     * @property {module:model/Evaluation}
     */
    Evaluation,

    /**
     * The Execution model constructor.
     * @property {module:model/Execution}
     */
    Execution,

    /**
     * The ExecutionResult model constructor.
     * @property {module:model/ExecutionResult}
     */
    ExecutionResult,

    /**
     * The FrontEndServer model constructor.
     * @property {module:model/FrontEndServer}
     */
    FrontEndServer,

    /**
     * The GceInstanceFilter model constructor.
     * @property {module:model/GceInstanceFilter}
     */
    GceInstanceFilter,

    /**
     * The Insight model constructor.
     * @property {module:model/Insight}
     */
    Insight,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The Layer model constructor.
     * @property {module:model/Layer}
     */
    Layer,

    /**
     * The ListEvaluationsResponse model constructor.
     * @property {module:model/ListEvaluationsResponse}
     */
    ListEvaluationsResponse,

    /**
     * The ListExecutionResultsResponse model constructor.
     * @property {module:model/ListExecutionResultsResponse}
     */
    ListExecutionResultsResponse,

    /**
     * The ListExecutionsResponse model constructor.
     * @property {module:model/ListExecutionsResponse}
     */
    ListExecutionsResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListRulesResponse model constructor.
     * @property {module:model/ListRulesResponse}
     */
    ListRulesResponse,

    /**
     * The ListScannedResourcesResponse model constructor.
     * @property {module:model/ListScannedResourcesResponse}
     */
    ListScannedResourcesResponse,

    /**
     * The ListWorkloadProfilesResponse model constructor.
     * @property {module:model/ListWorkloadProfilesResponse}
     */
    ListWorkloadProfilesResponse,

    /**
     * The LoadBalancerServer model constructor.
     * @property {module:model/LoadBalancerServer}
     */
    LoadBalancerServer,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceFilter model constructor.
     * @property {module:model/ResourceFilter}
     */
    ResourceFilter,

    /**
     * The ResourceStatus model constructor.
     * @property {module:model/ResourceStatus}
     */
    ResourceStatus,

    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule,

    /**
     * The RunEvaluationRequest model constructor.
     * @property {module:model/RunEvaluationRequest}
     */
    RunEvaluationRequest,

    /**
     * The SapComponent model constructor.
     * @property {module:model/SapComponent}
     */
    SapComponent,

    /**
     * The SapDiscovery model constructor.
     * @property {module:model/SapDiscovery}
     */
    SapDiscovery,

    /**
     * The SapDiscoveryComponent model constructor.
     * @property {module:model/SapDiscoveryComponent}
     */
    SapDiscoveryComponent,

    /**
     * The SapDiscoveryComponentApplicationProperties model constructor.
     * @property {module:model/SapDiscoveryComponentApplicationProperties}
     */
    SapDiscoveryComponentApplicationProperties,

    /**
     * The SapDiscoveryComponentDatabaseProperties model constructor.
     * @property {module:model/SapDiscoveryComponentDatabaseProperties}
     */
    SapDiscoveryComponentDatabaseProperties,

    /**
     * The SapDiscoveryMetadata model constructor.
     * @property {module:model/SapDiscoveryMetadata}
     */
    SapDiscoveryMetadata,

    /**
     * The SapDiscoveryResource model constructor.
     * @property {module:model/SapDiscoveryResource}
     */
    SapDiscoveryResource,

    /**
     * The SapDiscoveryResourceInstanceProperties model constructor.
     * @property {module:model/SapDiscoveryResourceInstanceProperties}
     */
    SapDiscoveryResourceInstanceProperties,

    /**
     * The SapDiscoveryWorkloadProperties model constructor.
     * @property {module:model/SapDiscoveryWorkloadProperties}
     */
    SapDiscoveryWorkloadProperties,

    /**
     * The SapDiscoveryWorkloadPropertiesProductVersion model constructor.
     * @property {module:model/SapDiscoveryWorkloadPropertiesProductVersion}
     */
    SapDiscoveryWorkloadPropertiesProductVersion,

    /**
     * The SapDiscoveryWorkloadPropertiesSoftwareComponentProperties model constructor.
     * @property {module:model/SapDiscoveryWorkloadPropertiesSoftwareComponentProperties}
     */
    SapDiscoveryWorkloadPropertiesSoftwareComponentProperties,

    /**
     * The SapValidation model constructor.
     * @property {module:model/SapValidation}
     */
    SapValidation,

    /**
     * The SapValidationValidationDetail model constructor.
     * @property {module:model/SapValidationValidationDetail}
     */
    SapValidationValidationDetail,

    /**
     * The SapWorkload model constructor.
     * @property {module:model/SapWorkload}
     */
    SapWorkload,

    /**
     * The SapWorkloadOverview model constructor.
     * @property {module:model/SapWorkloadOverview}
     */
    SapWorkloadOverview,

    /**
     * The ScannedResource model constructor.
     * @property {module:model/ScannedResource}
     */
    ScannedResource,

    /**
     * The SqlserverValidation model constructor.
     * @property {module:model/SqlserverValidation}
     */
    SqlserverValidation,

    /**
     * The SqlserverValidationDetails model constructor.
     * @property {module:model/SqlserverValidationDetails}
     */
    SqlserverValidationDetails,

    /**
     * The SqlserverValidationValidationDetail model constructor.
     * @property {module:model/SqlserverValidationValidationDetail}
     */
    SqlserverValidationValidationDetail,

    /**
     * The SqlserverWorkload model constructor.
     * @property {module:model/SqlserverWorkload}
     */
    SqlserverWorkload,

    /**
     * The SqlserverWorkloadOverview model constructor.
     * @property {module:model/SqlserverWorkloadOverview}
     */
    SqlserverWorkloadOverview,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The ThreeTierWorkload model constructor.
     * @property {module:model/ThreeTierWorkload}
     */
    ThreeTierWorkload,

    /**
     * The ThreeTierWorkloadOverview model constructor.
     * @property {module:model/ThreeTierWorkloadOverview}
     */
    ThreeTierWorkloadOverview,

    /**
     * The ViolationDetails model constructor.
     * @property {module:model/ViolationDetails}
     */
    ViolationDetails,

    /**
     * The WorkloadProfile model constructor.
     * @property {module:model/WorkloadProfile}
     */
    WorkloadProfile,

    /**
     * The WorkloadProfileOverview model constructor.
     * @property {module:model/WorkloadProfileOverview}
     */
    WorkloadProfileOverview,

    /**
     * The WriteInsightRequest model constructor.
     * @property {module:model/WriteInsightRequest}
     */
    WriteInsightRequest,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
