/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WorkloadManagerApi);
  }
}(this, function(expect, WorkloadManagerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WorkloadManagerApi.ExecutionResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ExecutionResult', function() {
    it('should create an instance of ExecutionResult', function() {
      // uncomment below and update the code to test ExecutionResult
      //var instance = new WorkloadManagerApi.ExecutionResult();
      //expect(instance).to.be.a(WorkloadManagerApi.ExecutionResult);
    });

    it('should have the property documentationUrl (base name: "documentationUrl")', function() {
      // uncomment below and update the code to test the property documentationUrl
      //var instance = new WorkloadManagerApi.ExecutionResult();
      //expect(instance).to.be();
    });

    it('should have the property resource (base name: "resource")', function() {
      // uncomment below and update the code to test the property resource
      //var instance = new WorkloadManagerApi.ExecutionResult();
      //expect(instance).to.be();
    });

    it('should have the property rule (base name: "rule")', function() {
      // uncomment below and update the code to test the property rule
      //var instance = new WorkloadManagerApi.ExecutionResult();
      //expect(instance).to.be();
    });

    it('should have the property severity (base name: "severity")', function() {
      // uncomment below and update the code to test the property severity
      //var instance = new WorkloadManagerApi.ExecutionResult();
      //expect(instance).to.be();
    });

    it('should have the property violationDetails (base name: "violationDetails")', function() {
      // uncomment below and update the code to test the property violationDetails
      //var instance = new WorkloadManagerApi.ExecutionResult();
      //expect(instance).to.be();
    });

    it('should have the property violationMessage (base name: "violationMessage")', function() {
      // uncomment below and update the code to test the property violationMessage
      //var instance = new WorkloadManagerApi.ExecutionResult();
      //expect(instance).to.be();
    });

  });

}));
