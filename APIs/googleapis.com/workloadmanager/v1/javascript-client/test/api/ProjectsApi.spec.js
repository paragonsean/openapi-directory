/**
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WorkloadManagerApi);
  }
}(this, function(expect, WorkloadManagerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WorkloadManagerApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('workloadmanagerProjectsLocationsEvaluationsCreate', function() {
      it('should call workloadmanagerProjectsLocationsEvaluationsCreate successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsEvaluationsCreate
        //instance.workloadmanagerProjectsLocationsEvaluationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsEvaluationsExecutionsList', function() {
      it('should call workloadmanagerProjectsLocationsEvaluationsExecutionsList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsEvaluationsExecutionsList
        //instance.workloadmanagerProjectsLocationsEvaluationsExecutionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsEvaluationsExecutionsResultsList', function() {
      it('should call workloadmanagerProjectsLocationsEvaluationsExecutionsResultsList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsEvaluationsExecutionsResultsList
        //instance.workloadmanagerProjectsLocationsEvaluationsExecutionsResultsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsEvaluationsExecutionsRun', function() {
      it('should call workloadmanagerProjectsLocationsEvaluationsExecutionsRun successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsEvaluationsExecutionsRun
        //instance.workloadmanagerProjectsLocationsEvaluationsExecutionsRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsEvaluationsExecutionsScannedResourcesList', function() {
      it('should call workloadmanagerProjectsLocationsEvaluationsExecutionsScannedResourcesList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsEvaluationsExecutionsScannedResourcesList
        //instance.workloadmanagerProjectsLocationsEvaluationsExecutionsScannedResourcesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsEvaluationsList', function() {
      it('should call workloadmanagerProjectsLocationsEvaluationsList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsEvaluationsList
        //instance.workloadmanagerProjectsLocationsEvaluationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsInsightsWriteInsight', function() {
      it('should call workloadmanagerProjectsLocationsInsightsWriteInsight successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsInsightsWriteInsight
        //instance.workloadmanagerProjectsLocationsInsightsWriteInsight(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsList', function() {
      it('should call workloadmanagerProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsList
        //instance.workloadmanagerProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsOperationsCancel', function() {
      it('should call workloadmanagerProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsOperationsCancel
        //instance.workloadmanagerProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsOperationsDelete', function() {
      it('should call workloadmanagerProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsOperationsDelete
        //instance.workloadmanagerProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsOperationsList', function() {
      it('should call workloadmanagerProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsOperationsList
        //instance.workloadmanagerProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsRulesList', function() {
      it('should call workloadmanagerProjectsLocationsRulesList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsRulesList
        //instance.workloadmanagerProjectsLocationsRulesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsWorkloadProfilesGet', function() {
      it('should call workloadmanagerProjectsLocationsWorkloadProfilesGet successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsWorkloadProfilesGet
        //instance.workloadmanagerProjectsLocationsWorkloadProfilesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('workloadmanagerProjectsLocationsWorkloadProfilesList', function() {
      it('should call workloadmanagerProjectsLocationsWorkloadProfilesList successfully', function(done) {
        //uncomment below and update the code to test workloadmanagerProjectsLocationsWorkloadProfilesList
        //instance.workloadmanagerProjectsLocationsWorkloadProfilesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
