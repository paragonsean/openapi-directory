/*
 * Workload Manager API
 * Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Message describing SAP discovery system metadata
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:45.257009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SapDiscoveryMetadata {
  public static final String SERIALIZED_NAME_CUSTOMER_REGION = "customerRegion";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_REGION)
  private String customerRegion;

  public static final String SERIALIZED_NAME_DEFINED_SYSTEM = "definedSystem";
  @SerializedName(SERIALIZED_NAME_DEFINED_SYSTEM)
  private String definedSystem;

  public static final String SERIALIZED_NAME_ENVIRONMENT_TYPE = "environmentType";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_TYPE)
  private String environmentType;

  public static final String SERIALIZED_NAME_SAP_PRODUCT = "sapProduct";
  @SerializedName(SERIALIZED_NAME_SAP_PRODUCT)
  private String sapProduct;

  public SapDiscoveryMetadata() {
  }

  public SapDiscoveryMetadata customerRegion(String customerRegion) {
    this.customerRegion = customerRegion;
    return this;
  }

  /**
   * Optional. Customer region string for customer&#39;s use. Does not represent GCP region.
   * @return customerRegion
   */
  @javax.annotation.Nullable
  public String getCustomerRegion() {
    return customerRegion;
  }

  public void setCustomerRegion(String customerRegion) {
    this.customerRegion = customerRegion;
  }


  public SapDiscoveryMetadata definedSystem(String definedSystem) {
    this.definedSystem = definedSystem;
    return this;
  }

  /**
   * Optional. Customer defined, something like \&quot;E-commerce pre prod\&quot;
   * @return definedSystem
   */
  @javax.annotation.Nullable
  public String getDefinedSystem() {
    return definedSystem;
  }

  public void setDefinedSystem(String definedSystem) {
    this.definedSystem = definedSystem;
  }


  public SapDiscoveryMetadata environmentType(String environmentType) {
    this.environmentType = environmentType;
    return this;
  }

  /**
   * Optional. Should be \&quot;prod\&quot;, \&quot;QA\&quot;, \&quot;dev\&quot;, \&quot;staging\&quot;, etc.
   * @return environmentType
   */
  @javax.annotation.Nullable
  public String getEnvironmentType() {
    return environmentType;
  }

  public void setEnvironmentType(String environmentType) {
    this.environmentType = environmentType;
  }


  public SapDiscoveryMetadata sapProduct(String sapProduct) {
    this.sapProduct = sapProduct;
    return this;
  }

  /**
   * Optional. This SAP product name
   * @return sapProduct
   */
  @javax.annotation.Nullable
  public String getSapProduct() {
    return sapProduct;
  }

  public void setSapProduct(String sapProduct) {
    this.sapProduct = sapProduct;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SapDiscoveryMetadata sapDiscoveryMetadata = (SapDiscoveryMetadata) o;
    return Objects.equals(this.customerRegion, sapDiscoveryMetadata.customerRegion) &&
        Objects.equals(this.definedSystem, sapDiscoveryMetadata.definedSystem) &&
        Objects.equals(this.environmentType, sapDiscoveryMetadata.environmentType) &&
        Objects.equals(this.sapProduct, sapDiscoveryMetadata.sapProduct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerRegion, definedSystem, environmentType, sapProduct);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SapDiscoveryMetadata {\n");
    sb.append("    customerRegion: ").append(toIndentedString(customerRegion)).append("\n");
    sb.append("    definedSystem: ").append(toIndentedString(definedSystem)).append("\n");
    sb.append("    environmentType: ").append(toIndentedString(environmentType)).append("\n");
    sb.append("    sapProduct: ").append(toIndentedString(sapProduct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerRegion");
    openapiFields.add("definedSystem");
    openapiFields.add("environmentType");
    openapiFields.add("sapProduct");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SapDiscoveryMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SapDiscoveryMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SapDiscoveryMetadata is not found in the empty JSON string", SapDiscoveryMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SapDiscoveryMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SapDiscoveryMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customerRegion") != null && !jsonObj.get("customerRegion").isJsonNull()) && !jsonObj.get("customerRegion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerRegion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerRegion").toString()));
      }
      if ((jsonObj.get("definedSystem") != null && !jsonObj.get("definedSystem").isJsonNull()) && !jsonObj.get("definedSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `definedSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("definedSystem").toString()));
      }
      if ((jsonObj.get("environmentType") != null && !jsonObj.get("environmentType").isJsonNull()) && !jsonObj.get("environmentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environmentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environmentType").toString()));
      }
      if ((jsonObj.get("sapProduct") != null && !jsonObj.get("sapProduct").isJsonNull()) && !jsonObj.get("sapProduct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sapProduct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sapProduct").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SapDiscoveryMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SapDiscoveryMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SapDiscoveryMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SapDiscoveryMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<SapDiscoveryMetadata>() {
           @Override
           public void write(JsonWriter out, SapDiscoveryMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SapDiscoveryMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SapDiscoveryMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SapDiscoveryMetadata
   * @throws IOException if the JSON string is invalid with respect to SapDiscoveryMetadata
   */
  public static SapDiscoveryMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SapDiscoveryMetadata.class);
  }

  /**
   * Convert an instance of SapDiscoveryMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

