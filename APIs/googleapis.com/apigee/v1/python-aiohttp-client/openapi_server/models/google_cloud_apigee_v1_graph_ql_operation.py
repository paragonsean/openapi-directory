# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1GraphQLOperation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation: str=None, operation_types: List[str]=None):
        """GoogleCloudApigeeV1GraphQLOperation - a model defined in OpenAPI

        :param operation: The operation of this GoogleCloudApigeeV1GraphQLOperation.
        :param operation_types: The operation_types of this GoogleCloudApigeeV1GraphQLOperation.
        """
        self.openapi_types = {
            'operation': str,
            'operation_types': List[str]
        }

        self.attribute_map = {
            'operation': 'operation',
            'operation_types': 'operationTypes'
        }

        self._operation = operation
        self._operation_types = operation_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1GraphQLOperation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1GraphQLOperation of this GoogleCloudApigeeV1GraphQLOperation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation(self):
        """Gets the operation of this GoogleCloudApigeeV1GraphQLOperation.

        GraphQL operation name. The name and operation type will be used to apply quotas. If no name is specified, the quota will be applied to all GraphQL operations irrespective of their operation names in the payload.

        :return: The operation of this GoogleCloudApigeeV1GraphQLOperation.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this GoogleCloudApigeeV1GraphQLOperation.

        GraphQL operation name. The name and operation type will be used to apply quotas. If no name is specified, the quota will be applied to all GraphQL operations irrespective of their operation names in the payload.

        :param operation: The operation of this GoogleCloudApigeeV1GraphQLOperation.
        :type operation: str
        """

        self._operation = operation

    @property
    def operation_types(self):
        """Gets the operation_types of this GoogleCloudApigeeV1GraphQLOperation.

        Required. GraphQL operation types. Valid values include `query` or `mutation`. **Note**: Apigee does not currently support `subscription` types.

        :return: The operation_types of this GoogleCloudApigeeV1GraphQLOperation.
        :rtype: List[str]
        """
        return self._operation_types

    @operation_types.setter
    def operation_types(self, operation_types):
        """Sets the operation_types of this GoogleCloudApigeeV1GraphQLOperation.

        Required. GraphQL operation types. Valid values include `query` or `mutation`. **Note**: Apigee does not currently support `subscription` types.

        :param operation_types: The operation_types of this GoogleCloudApigeeV1GraphQLOperation.
        :type operation_types: List[str]
        """

        self._operation_types = operation_types
