# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1Instance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_accept_list: List[str]=None, created_at: str=None, description: str=None, disk_encryption_key_name: str=None, display_name: str=None, host: str=None, ip_range: str=None, last_modified_at: str=None, location: str=None, name: str=None, peering_cidr_range: str=None, port: str=None, runtime_version: str=None, service_attachment: str=None, state: str=None):
        """GoogleCloudApigeeV1Instance - a model defined in OpenAPI

        :param consumer_accept_list: The consumer_accept_list of this GoogleCloudApigeeV1Instance.
        :param created_at: The created_at of this GoogleCloudApigeeV1Instance.
        :param description: The description of this GoogleCloudApigeeV1Instance.
        :param disk_encryption_key_name: The disk_encryption_key_name of this GoogleCloudApigeeV1Instance.
        :param display_name: The display_name of this GoogleCloudApigeeV1Instance.
        :param host: The host of this GoogleCloudApigeeV1Instance.
        :param ip_range: The ip_range of this GoogleCloudApigeeV1Instance.
        :param last_modified_at: The last_modified_at of this GoogleCloudApigeeV1Instance.
        :param location: The location of this GoogleCloudApigeeV1Instance.
        :param name: The name of this GoogleCloudApigeeV1Instance.
        :param peering_cidr_range: The peering_cidr_range of this GoogleCloudApigeeV1Instance.
        :param port: The port of this GoogleCloudApigeeV1Instance.
        :param runtime_version: The runtime_version of this GoogleCloudApigeeV1Instance.
        :param service_attachment: The service_attachment of this GoogleCloudApigeeV1Instance.
        :param state: The state of this GoogleCloudApigeeV1Instance.
        """
        self.openapi_types = {
            'consumer_accept_list': List[str],
            'created_at': str,
            'description': str,
            'disk_encryption_key_name': str,
            'display_name': str,
            'host': str,
            'ip_range': str,
            'last_modified_at': str,
            'location': str,
            'name': str,
            'peering_cidr_range': str,
            'port': str,
            'runtime_version': str,
            'service_attachment': str,
            'state': str
        }

        self.attribute_map = {
            'consumer_accept_list': 'consumerAcceptList',
            'created_at': 'createdAt',
            'description': 'description',
            'disk_encryption_key_name': 'diskEncryptionKeyName',
            'display_name': 'displayName',
            'host': 'host',
            'ip_range': 'ipRange',
            'last_modified_at': 'lastModifiedAt',
            'location': 'location',
            'name': 'name',
            'peering_cidr_range': 'peeringCidrRange',
            'port': 'port',
            'runtime_version': 'runtimeVersion',
            'service_attachment': 'serviceAttachment',
            'state': 'state'
        }

        self._consumer_accept_list = consumer_accept_list
        self._created_at = created_at
        self._description = description
        self._disk_encryption_key_name = disk_encryption_key_name
        self._display_name = display_name
        self._host = host
        self._ip_range = ip_range
        self._last_modified_at = last_modified_at
        self._location = location
        self._name = name
        self._peering_cidr_range = peering_cidr_range
        self._port = port
        self._runtime_version = runtime_version
        self._service_attachment = service_attachment
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1Instance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1Instance of this GoogleCloudApigeeV1Instance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_accept_list(self):
        """Gets the consumer_accept_list of this GoogleCloudApigeeV1Instance.

        Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect to the service attachment. It is an optional field which the customers can provide during the instance creation. By default, the customer project associated with the Apigee organization will be included to the list.

        :return: The consumer_accept_list of this GoogleCloudApigeeV1Instance.
        :rtype: List[str]
        """
        return self._consumer_accept_list

    @consumer_accept_list.setter
    def consumer_accept_list(self, consumer_accept_list):
        """Sets the consumer_accept_list of this GoogleCloudApigeeV1Instance.

        Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect to the service attachment. It is an optional field which the customers can provide during the instance creation. By default, the customer project associated with the Apigee organization will be included to the list.

        :param consumer_accept_list: The consumer_accept_list of this GoogleCloudApigeeV1Instance.
        :type consumer_accept_list: List[str]
        """

        self._consumer_accept_list = consumer_accept_list

    @property
    def created_at(self):
        """Gets the created_at of this GoogleCloudApigeeV1Instance.

        Output only. Time the instance was created in milliseconds since epoch.

        :return: The created_at of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GoogleCloudApigeeV1Instance.

        Output only. Time the instance was created in milliseconds since epoch.

        :param created_at: The created_at of this GoogleCloudApigeeV1Instance.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this GoogleCloudApigeeV1Instance.

        Optional. Description of the instance.

        :return: The description of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudApigeeV1Instance.

        Optional. Description of the instance.

        :param description: The description of this GoogleCloudApigeeV1Instance.
        :type description: str
        """

        self._description = description

    @property
    def disk_encryption_key_name(self):
        """Gets the disk_encryption_key_name of this GoogleCloudApigeeV1Instance.

        Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only. Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`

        :return: The disk_encryption_key_name of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._disk_encryption_key_name

    @disk_encryption_key_name.setter
    def disk_encryption_key_name(self, disk_encryption_key_name):
        """Sets the disk_encryption_key_name of this GoogleCloudApigeeV1Instance.

        Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only. Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`

        :param disk_encryption_key_name: The disk_encryption_key_name of this GoogleCloudApigeeV1Instance.
        :type disk_encryption_key_name: str
        """

        self._disk_encryption_key_name = disk_encryption_key_name

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudApigeeV1Instance.

        Optional. Display name for the instance.

        :return: The display_name of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudApigeeV1Instance.

        Optional. Display name for the instance.

        :param display_name: The display_name of this GoogleCloudApigeeV1Instance.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def host(self):
        """Gets the host of this GoogleCloudApigeeV1Instance.

        Output only. Internal hostname or IP address of the Apigee endpoint used by clients to connect to the service.

        :return: The host of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this GoogleCloudApigeeV1Instance.

        Output only. Internal hostname or IP address of the Apigee endpoint used by clients to connect to the service.

        :param host: The host of this GoogleCloudApigeeV1Instance.
        :type host: str
        """

        self._host = host

    @property
    def ip_range(self):
        """Gets the ip_range of this GoogleCloudApigeeV1Instance.

        Optional. Comma-separated list of CIDR blocks of length 22 and/or 28 used to create the Apigee instance. Providing CIDR ranges is optional. You can provide just /22 or /28 or both (or neither). Ranges you provide should be freely available as part of a larger named range you have allocated to the Service Networking peering. If this parameter is not provided, Apigee automatically requests an available /22 and /28 CIDR block from Service Networking. Use the /22 CIDR block for configuring your firewall needs to allow traffic from Apigee. Input formats: `a.b.c.d/22` or `e.f.g.h/28` or `a.b.c.d/22,e.f.g.h/28`

        :return: The ip_range of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._ip_range

    @ip_range.setter
    def ip_range(self, ip_range):
        """Sets the ip_range of this GoogleCloudApigeeV1Instance.

        Optional. Comma-separated list of CIDR blocks of length 22 and/or 28 used to create the Apigee instance. Providing CIDR ranges is optional. You can provide just /22 or /28 or both (or neither). Ranges you provide should be freely available as part of a larger named range you have allocated to the Service Networking peering. If this parameter is not provided, Apigee automatically requests an available /22 and /28 CIDR block from Service Networking. Use the /22 CIDR block for configuring your firewall needs to allow traffic from Apigee. Input formats: `a.b.c.d/22` or `e.f.g.h/28` or `a.b.c.d/22,e.f.g.h/28`

        :param ip_range: The ip_range of this GoogleCloudApigeeV1Instance.
        :type ip_range: str
        """

        self._ip_range = ip_range

    @property
    def last_modified_at(self):
        """Gets the last_modified_at of this GoogleCloudApigeeV1Instance.

        Output only. Time the instance was last modified in milliseconds since epoch.

        :return: The last_modified_at of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._last_modified_at

    @last_modified_at.setter
    def last_modified_at(self, last_modified_at):
        """Sets the last_modified_at of this GoogleCloudApigeeV1Instance.

        Output only. Time the instance was last modified in milliseconds since epoch.

        :param last_modified_at: The last_modified_at of this GoogleCloudApigeeV1Instance.
        :type last_modified_at: str
        """

        self._last_modified_at = last_modified_at

    @property
    def location(self):
        """Gets the location of this GoogleCloudApigeeV1Instance.

        Required. Compute Engine location where the instance resides.

        :return: The location of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GoogleCloudApigeeV1Instance.

        Required. Compute Engine location where the instance resides.

        :param location: The location of this GoogleCloudApigeeV1Instance.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this GoogleCloudApigeeV1Instance.

        Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\\d]$`.

        :return: The name of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudApigeeV1Instance.

        Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\\d]$`.

        :param name: The name of this GoogleCloudApigeeV1Instance.
        :type name: str
        """

        self._name = name

    @property
    def peering_cidr_range(self):
        """Gets the peering_cidr_range of this GoogleCloudApigeeV1Instance.

        Optional. Size of the CIDR block range that will be reserved by the instance. PAID organizations support `SLASH_16` to `SLASH_20` and defaults to `SLASH_16`. Evaluation organizations support only `SLASH_23`.

        :return: The peering_cidr_range of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._peering_cidr_range

    @peering_cidr_range.setter
    def peering_cidr_range(self, peering_cidr_range):
        """Sets the peering_cidr_range of this GoogleCloudApigeeV1Instance.

        Optional. Size of the CIDR block range that will be reserved by the instance. PAID organizations support `SLASH_16` to `SLASH_20` and defaults to `SLASH_16`. Evaluation organizations support only `SLASH_23`.

        :param peering_cidr_range: The peering_cidr_range of this GoogleCloudApigeeV1Instance.
        :type peering_cidr_range: str
        """
        allowed_values = ["CIDR_RANGE_UNSPECIFIED", "SLASH_16", "SLASH_17", "SLASH_18", "SLASH_19", "SLASH_20", "SLASH_22", "SLASH_23"]  # noqa: E501
        if peering_cidr_range not in allowed_values:
            raise ValueError(
                "Invalid value for `peering_cidr_range` ({0}), must be one of {1}"
                .format(peering_cidr_range, allowed_values)
            )

        self._peering_cidr_range = peering_cidr_range

    @property
    def port(self):
        """Gets the port of this GoogleCloudApigeeV1Instance.

        Output only. Port number of the exposed Apigee endpoint.

        :return: The port of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this GoogleCloudApigeeV1Instance.

        Output only. Port number of the exposed Apigee endpoint.

        :param port: The port of this GoogleCloudApigeeV1Instance.
        :type port: str
        """

        self._port = port

    @property
    def runtime_version(self):
        """Gets the runtime_version of this GoogleCloudApigeeV1Instance.

        Output only. Version of the runtime system running in the instance. The runtime system is the set of components that serve the API Proxy traffic in your Environments.

        :return: The runtime_version of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._runtime_version

    @runtime_version.setter
    def runtime_version(self, runtime_version):
        """Sets the runtime_version of this GoogleCloudApigeeV1Instance.

        Output only. Version of the runtime system running in the instance. The runtime system is the set of components that serve the API Proxy traffic in your Environments.

        :param runtime_version: The runtime_version of this GoogleCloudApigeeV1Instance.
        :type runtime_version: str
        """

        self._runtime_version = runtime_version

    @property
    def service_attachment(self):
        """Gets the service_attachment of this GoogleCloudApigeeV1Instance.

        Output only. Resource name of the service attachment created for the instance in the format: `projects/*/regions/*/serviceAttachments/*` Apigee customers can privately forward traffic to this service attachment using the PSC endpoints.

        :return: The service_attachment of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._service_attachment

    @service_attachment.setter
    def service_attachment(self, service_attachment):
        """Sets the service_attachment of this GoogleCloudApigeeV1Instance.

        Output only. Resource name of the service attachment created for the instance in the format: `projects/*/regions/*/serviceAttachments/*` Apigee customers can privately forward traffic to this service attachment using the PSC endpoints.

        :param service_attachment: The service_attachment of this GoogleCloudApigeeV1Instance.
        :type service_attachment: str
        """

        self._service_attachment = service_attachment

    @property
    def state(self):
        """Gets the state of this GoogleCloudApigeeV1Instance.

        Output only. State of the instance. Values other than `ACTIVE` means the resource is not ready to use.

        :return: The state of this GoogleCloudApigeeV1Instance.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudApigeeV1Instance.

        Output only. State of the instance. Values other than `ACTIVE` means the resource is not ready to use.

        :param state: The state of this GoogleCloudApigeeV1Instance.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "CREATING", "ACTIVE", "DELETING", "UPDATING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
