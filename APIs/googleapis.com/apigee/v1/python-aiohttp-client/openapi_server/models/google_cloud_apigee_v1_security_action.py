# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_security_action_condition_config import GoogleCloudApigeeV1SecurityActionConditionConfig
from openapi_server.models.google_cloud_apigee_v1_security_action_deny import GoogleCloudApigeeV1SecurityActionDeny
from openapi_server.models.google_cloud_apigee_v1_security_action_flag import GoogleCloudApigeeV1SecurityActionFlag
from openapi_server import util


class GoogleCloudApigeeV1SecurityAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow: object=None, condition_config: GoogleCloudApigeeV1SecurityActionConditionConfig=None, create_time: str=None, deny: GoogleCloudApigeeV1SecurityActionDeny=None, description: str=None, expire_time: str=None, flag: GoogleCloudApigeeV1SecurityActionFlag=None, name: str=None, state: str=None, ttl: str=None, update_time: str=None):
        """GoogleCloudApigeeV1SecurityAction - a model defined in OpenAPI

        :param allow: The allow of this GoogleCloudApigeeV1SecurityAction.
        :param condition_config: The condition_config of this GoogleCloudApigeeV1SecurityAction.
        :param create_time: The create_time of this GoogleCloudApigeeV1SecurityAction.
        :param deny: The deny of this GoogleCloudApigeeV1SecurityAction.
        :param description: The description of this GoogleCloudApigeeV1SecurityAction.
        :param expire_time: The expire_time of this GoogleCloudApigeeV1SecurityAction.
        :param flag: The flag of this GoogleCloudApigeeV1SecurityAction.
        :param name: The name of this GoogleCloudApigeeV1SecurityAction.
        :param state: The state of this GoogleCloudApigeeV1SecurityAction.
        :param ttl: The ttl of this GoogleCloudApigeeV1SecurityAction.
        :param update_time: The update_time of this GoogleCloudApigeeV1SecurityAction.
        """
        self.openapi_types = {
            'allow': object,
            'condition_config': GoogleCloudApigeeV1SecurityActionConditionConfig,
            'create_time': str,
            'deny': GoogleCloudApigeeV1SecurityActionDeny,
            'description': str,
            'expire_time': str,
            'flag': GoogleCloudApigeeV1SecurityActionFlag,
            'name': str,
            'state': str,
            'ttl': str,
            'update_time': str
        }

        self.attribute_map = {
            'allow': 'allow',
            'condition_config': 'conditionConfig',
            'create_time': 'createTime',
            'deny': 'deny',
            'description': 'description',
            'expire_time': 'expireTime',
            'flag': 'flag',
            'name': 'name',
            'state': 'state',
            'ttl': 'ttl',
            'update_time': 'updateTime'
        }

        self._allow = allow
        self._condition_config = condition_config
        self._create_time = create_time
        self._deny = deny
        self._description = description
        self._expire_time = expire_time
        self._flag = flag
        self._name = name
        self._state = state
        self._ttl = ttl
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1SecurityAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1SecurityAction of this GoogleCloudApigeeV1SecurityAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow(self):
        """Gets the allow of this GoogleCloudApigeeV1SecurityAction.

        Message that should be set in case of an Allow Action. This does not have any fields.

        :return: The allow of this GoogleCloudApigeeV1SecurityAction.
        :rtype: object
        """
        return self._allow

    @allow.setter
    def allow(self, allow):
        """Sets the allow of this GoogleCloudApigeeV1SecurityAction.

        Message that should be set in case of an Allow Action. This does not have any fields.

        :param allow: The allow of this GoogleCloudApigeeV1SecurityAction.
        :type allow: object
        """

        self._allow = allow

    @property
    def condition_config(self):
        """Gets the condition_config of this GoogleCloudApigeeV1SecurityAction.


        :return: The condition_config of this GoogleCloudApigeeV1SecurityAction.
        :rtype: GoogleCloudApigeeV1SecurityActionConditionConfig
        """
        return self._condition_config

    @condition_config.setter
    def condition_config(self, condition_config):
        """Sets the condition_config of this GoogleCloudApigeeV1SecurityAction.


        :param condition_config: The condition_config of this GoogleCloudApigeeV1SecurityAction.
        :type condition_config: GoogleCloudApigeeV1SecurityActionConditionConfig
        """

        self._condition_config = condition_config

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudApigeeV1SecurityAction.

        Output only. The create time for this SecurityAction.

        :return: The create_time of this GoogleCloudApigeeV1SecurityAction.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudApigeeV1SecurityAction.

        Output only. The create time for this SecurityAction.

        :param create_time: The create_time of this GoogleCloudApigeeV1SecurityAction.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def deny(self):
        """Gets the deny of this GoogleCloudApigeeV1SecurityAction.


        :return: The deny of this GoogleCloudApigeeV1SecurityAction.
        :rtype: GoogleCloudApigeeV1SecurityActionDeny
        """
        return self._deny

    @deny.setter
    def deny(self, deny):
        """Sets the deny of this GoogleCloudApigeeV1SecurityAction.


        :param deny: The deny of this GoogleCloudApigeeV1SecurityAction.
        :type deny: GoogleCloudApigeeV1SecurityActionDeny
        """

        self._deny = deny

    @property
    def description(self):
        """Gets the description of this GoogleCloudApigeeV1SecurityAction.

        Optional. An optional user provided description of the SecurityAction.

        :return: The description of this GoogleCloudApigeeV1SecurityAction.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudApigeeV1SecurityAction.

        Optional. An optional user provided description of the SecurityAction.

        :param description: The description of this GoogleCloudApigeeV1SecurityAction.
        :type description: str
        """

        self._description = description

    @property
    def expire_time(self):
        """Gets the expire_time of this GoogleCloudApigeeV1SecurityAction.

        The expiration for this SecurityAction.

        :return: The expire_time of this GoogleCloudApigeeV1SecurityAction.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this GoogleCloudApigeeV1SecurityAction.

        The expiration for this SecurityAction.

        :param expire_time: The expire_time of this GoogleCloudApigeeV1SecurityAction.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def flag(self):
        """Gets the flag of this GoogleCloudApigeeV1SecurityAction.


        :return: The flag of this GoogleCloudApigeeV1SecurityAction.
        :rtype: GoogleCloudApigeeV1SecurityActionFlag
        """
        return self._flag

    @flag.setter
    def flag(self, flag):
        """Sets the flag of this GoogleCloudApigeeV1SecurityAction.


        :param flag: The flag of this GoogleCloudApigeeV1SecurityAction.
        :type flag: GoogleCloudApigeeV1SecurityActionFlag
        """

        self._flag = flag

    @property
    def name(self):
        """Gets the name of this GoogleCloudApigeeV1SecurityAction.

        Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}

        :return: The name of this GoogleCloudApigeeV1SecurityAction.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudApigeeV1SecurityAction.

        Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}

        :param name: The name of this GoogleCloudApigeeV1SecurityAction.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudApigeeV1SecurityAction.

        Required. Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.

        :return: The state of this GoogleCloudApigeeV1SecurityAction.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudApigeeV1SecurityAction.

        Required. Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.

        :param state: The state of this GoogleCloudApigeeV1SecurityAction.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ENABLED", "DISABLED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def ttl(self):
        """Gets the ttl of this GoogleCloudApigeeV1SecurityAction.

        Input only. The TTL for this SecurityAction.

        :return: The ttl of this GoogleCloudApigeeV1SecurityAction.
        :rtype: str
        """
        return self._ttl

    @ttl.setter
    def ttl(self, ttl):
        """Sets the ttl of this GoogleCloudApigeeV1SecurityAction.

        Input only. The TTL for this SecurityAction.

        :param ttl: The ttl of this GoogleCloudApigeeV1SecurityAction.
        :type ttl: str
        """

        self._ttl = ttl

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudApigeeV1SecurityAction.

        Output only. The update time for this SecurityAction. This reflects when this SecurityAction changed states.

        :return: The update_time of this GoogleCloudApigeeV1SecurityAction.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudApigeeV1SecurityAction.

        Output only. The update time for this SecurityAction. This reflects when this SecurityAction changed states.

        :param update_time: The update_time of this GoogleCloudApigeeV1SecurityAction.
        :type update_time: str
        """

        self._update_time = update_time
