# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_schema_schema_element import GoogleCloudApigeeV1SchemaSchemaElement
from openapi_server import util


class GoogleCloudApigeeV1Schema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimensions: List[GoogleCloudApigeeV1SchemaSchemaElement]=None, meta: List[str]=None, metrics: List[GoogleCloudApigeeV1SchemaSchemaElement]=None):
        """GoogleCloudApigeeV1Schema - a model defined in OpenAPI

        :param dimensions: The dimensions of this GoogleCloudApigeeV1Schema.
        :param meta: The meta of this GoogleCloudApigeeV1Schema.
        :param metrics: The metrics of this GoogleCloudApigeeV1Schema.
        """
        self.openapi_types = {
            'dimensions': List[GoogleCloudApigeeV1SchemaSchemaElement],
            'meta': List[str],
            'metrics': List[GoogleCloudApigeeV1SchemaSchemaElement]
        }

        self.attribute_map = {
            'dimensions': 'dimensions',
            'meta': 'meta',
            'metrics': 'metrics'
        }

        self._dimensions = dimensions
        self._meta = meta
        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1Schema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1Schema of this GoogleCloudApigeeV1Schema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimensions(self):
        """Gets the dimensions of this GoogleCloudApigeeV1Schema.

        List of schema fields grouped as dimensions.

        :return: The dimensions of this GoogleCloudApigeeV1Schema.
        :rtype: List[GoogleCloudApigeeV1SchemaSchemaElement]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this GoogleCloudApigeeV1Schema.

        List of schema fields grouped as dimensions.

        :param dimensions: The dimensions of this GoogleCloudApigeeV1Schema.
        :type dimensions: List[GoogleCloudApigeeV1SchemaSchemaElement]
        """

        self._dimensions = dimensions

    @property
    def meta(self):
        """Gets the meta of this GoogleCloudApigeeV1Schema.

        Additional metadata associated with schema. This is a legacy field and usually consists of an empty array of strings.

        :return: The meta of this GoogleCloudApigeeV1Schema.
        :rtype: List[str]
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this GoogleCloudApigeeV1Schema.

        Additional metadata associated with schema. This is a legacy field and usually consists of an empty array of strings.

        :param meta: The meta of this GoogleCloudApigeeV1Schema.
        :type meta: List[str]
        """

        self._meta = meta

    @property
    def metrics(self):
        """Gets the metrics of this GoogleCloudApigeeV1Schema.

        List of schema fields grouped as dimensions that can be used with an aggregate function such as `sum`, `avg`, `min`, and `max`.

        :return: The metrics of this GoogleCloudApigeeV1Schema.
        :rtype: List[GoogleCloudApigeeV1SchemaSchemaElement]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this GoogleCloudApigeeV1Schema.

        List of schema fields grouped as dimensions that can be used with an aggregate function such as `sum`, `avg`, `min`, and `max`.

        :param metrics: The metrics of this GoogleCloudApigeeV1Schema.
        :type metrics: List[GoogleCloudApigeeV1SchemaSchemaElement]
        """

        self._metrics = metrics
