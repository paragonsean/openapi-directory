# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_attribute import GoogleCloudApigeeV1Attribute
from openapi_server.models.google_cloud_apigee_v1_operation import GoogleCloudApigeeV1Operation
from openapi_server.models.google_cloud_apigee_v1_quota import GoogleCloudApigeeV1Quota
from openapi_server import util


class GoogleCloudApigeeV1OperationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_source: str=None, attributes: List[GoogleCloudApigeeV1Attribute]=None, operations: List[GoogleCloudApigeeV1Operation]=None, quota: GoogleCloudApigeeV1Quota=None):
        """GoogleCloudApigeeV1OperationConfig - a model defined in OpenAPI

        :param api_source: The api_source of this GoogleCloudApigeeV1OperationConfig.
        :param attributes: The attributes of this GoogleCloudApigeeV1OperationConfig.
        :param operations: The operations of this GoogleCloudApigeeV1OperationConfig.
        :param quota: The quota of this GoogleCloudApigeeV1OperationConfig.
        """
        self.openapi_types = {
            'api_source': str,
            'attributes': List[GoogleCloudApigeeV1Attribute],
            'operations': List[GoogleCloudApigeeV1Operation],
            'quota': GoogleCloudApigeeV1Quota
        }

        self.attribute_map = {
            'api_source': 'apiSource',
            'attributes': 'attributes',
            'operations': 'operations',
            'quota': 'quota'
        }

        self._api_source = api_source
        self._attributes = attributes
        self._operations = operations
        self._quota = quota

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1OperationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1OperationConfig of this GoogleCloudApigeeV1OperationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_source(self):
        """Gets the api_source of this GoogleCloudApigeeV1OperationConfig.

        Required. Name of the API proxy or remote service with which the resources, methods, and quota are associated.

        :return: The api_source of this GoogleCloudApigeeV1OperationConfig.
        :rtype: str
        """
        return self._api_source

    @api_source.setter
    def api_source(self, api_source):
        """Sets the api_source of this GoogleCloudApigeeV1OperationConfig.

        Required. Name of the API proxy or remote service with which the resources, methods, and quota are associated.

        :param api_source: The api_source of this GoogleCloudApigeeV1OperationConfig.
        :type api_source: str
        """

        self._api_source = api_source

    @property
    def attributes(self):
        """Gets the attributes of this GoogleCloudApigeeV1OperationConfig.

        Custom attributes associated with the operation.

        :return: The attributes of this GoogleCloudApigeeV1OperationConfig.
        :rtype: List[GoogleCloudApigeeV1Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GoogleCloudApigeeV1OperationConfig.

        Custom attributes associated with the operation.

        :param attributes: The attributes of this GoogleCloudApigeeV1OperationConfig.
        :type attributes: List[GoogleCloudApigeeV1Attribute]
        """

        self._attributes = attributes

    @property
    def operations(self):
        """Gets the operations of this GoogleCloudApigeeV1OperationConfig.

        List of resource/method pairs for the API proxy or remote service to which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided.

        :return: The operations of this GoogleCloudApigeeV1OperationConfig.
        :rtype: List[GoogleCloudApigeeV1Operation]
        """
        return self._operations

    @operations.setter
    def operations(self, operations):
        """Sets the operations of this GoogleCloudApigeeV1OperationConfig.

        List of resource/method pairs for the API proxy or remote service to which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided.

        :param operations: The operations of this GoogleCloudApigeeV1OperationConfig.
        :type operations: List[GoogleCloudApigeeV1Operation]
        """

        self._operations = operations

    @property
    def quota(self):
        """Gets the quota of this GoogleCloudApigeeV1OperationConfig.


        :return: The quota of this GoogleCloudApigeeV1OperationConfig.
        :rtype: GoogleCloudApigeeV1Quota
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """Sets the quota of this GoogleCloudApigeeV1OperationConfig.


        :param quota: The quota of this GoogleCloudApigeeV1OperationConfig.
        :type quota: GoogleCloudApigeeV1Quota
        """

        self._quota = quota
