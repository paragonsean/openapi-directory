# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_deployment_change_report_routing_deployment import GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
from openapi_server import util


class GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conflicting_deployment: GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment=None, description: str=None, environment_group: str=None):
        """GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict - a model defined in OpenAPI

        :param conflicting_deployment: The conflicting_deployment of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :param description: The description of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :param environment_group: The environment_group of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        """
        self.openapi_types = {
            'conflicting_deployment': GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment,
            'description': str,
            'environment_group': str
        }

        self.attribute_map = {
            'conflicting_deployment': 'conflictingDeployment',
            'description': 'description',
            'environment_group': 'environmentGroup'
        }

        self._conflicting_deployment = conflicting_deployment
        self._description = description
        self._environment_group = environment_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conflicting_deployment(self):
        """Gets the conflicting_deployment of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.


        :return: The conflicting_deployment of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :rtype: GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
        """
        return self._conflicting_deployment

    @conflicting_deployment.setter
    def conflicting_deployment(self, conflicting_deployment):
        """Sets the conflicting_deployment of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.


        :param conflicting_deployment: The conflicting_deployment of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :type conflicting_deployment: GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment
        """

        self._conflicting_deployment = conflicting_deployment

    @property
    def description(self):
        """Gets the description of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.

        Human-readable description of this conflict.

        :return: The description of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.

        Human-readable description of this conflict.

        :param description: The description of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :type description: str
        """

        self._description = description

    @property
    def environment_group(self):
        """Gets the environment_group of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.

        Name of the environment group in which this conflict exists.

        :return: The environment_group of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :rtype: str
        """
        return self._environment_group

    @environment_group.setter
    def environment_group(self, environment_group):
        """Sets the environment_group of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.

        Name of the environment group in which this conflict exists.

        :param environment_group: The environment_group of this GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.
        :type environment_group: str
        """

        self._environment_group = environment_group
