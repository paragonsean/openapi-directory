# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_revision_status import GoogleCloudApigeeV1RevisionStatus
from openapi_server import util


class GoogleCloudApigeeV1ResourceStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource: str=None, revisions: List[GoogleCloudApigeeV1RevisionStatus]=None, total_replicas: int=None, uid: str=None):
        """GoogleCloudApigeeV1ResourceStatus - a model defined in OpenAPI

        :param resource: The resource of this GoogleCloudApigeeV1ResourceStatus.
        :param revisions: The revisions of this GoogleCloudApigeeV1ResourceStatus.
        :param total_replicas: The total_replicas of this GoogleCloudApigeeV1ResourceStatus.
        :param uid: The uid of this GoogleCloudApigeeV1ResourceStatus.
        """
        self.openapi_types = {
            'resource': str,
            'revisions': List[GoogleCloudApigeeV1RevisionStatus],
            'total_replicas': int,
            'uid': str
        }

        self.attribute_map = {
            'resource': 'resource',
            'revisions': 'revisions',
            'total_replicas': 'totalReplicas',
            'uid': 'uid'
        }

        self._resource = resource
        self._revisions = revisions
        self._total_replicas = total_replicas
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1ResourceStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1ResourceStatus of this GoogleCloudApigeeV1ResourceStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource(self):
        """Gets the resource of this GoogleCloudApigeeV1ResourceStatus.

        The resource name. Currently only two resources are supported: EnvironmentGroup - organizations/{org}/envgroups/{envgroup} EnvironmentConfig - organizations/{org}/environments/{environment}/deployedConfig

        :return: The resource of this GoogleCloudApigeeV1ResourceStatus.
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this GoogleCloudApigeeV1ResourceStatus.

        The resource name. Currently only two resources are supported: EnvironmentGroup - organizations/{org}/envgroups/{envgroup} EnvironmentConfig - organizations/{org}/environments/{environment}/deployedConfig

        :param resource: The resource of this GoogleCloudApigeeV1ResourceStatus.
        :type resource: str
        """

        self._resource = resource

    @property
    def revisions(self):
        """Gets the revisions of this GoogleCloudApigeeV1ResourceStatus.

        Revisions of the resource currently deployed in the instance.

        :return: The revisions of this GoogleCloudApigeeV1ResourceStatus.
        :rtype: List[GoogleCloudApigeeV1RevisionStatus]
        """
        return self._revisions

    @revisions.setter
    def revisions(self, revisions):
        """Sets the revisions of this GoogleCloudApigeeV1ResourceStatus.

        Revisions of the resource currently deployed in the instance.

        :param revisions: The revisions of this GoogleCloudApigeeV1ResourceStatus.
        :type revisions: List[GoogleCloudApigeeV1RevisionStatus]
        """

        self._revisions = revisions

    @property
    def total_replicas(self):
        """Gets the total_replicas of this GoogleCloudApigeeV1ResourceStatus.

        The total number of replicas that should have this resource.

        :return: The total_replicas of this GoogleCloudApigeeV1ResourceStatus.
        :rtype: int
        """
        return self._total_replicas

    @total_replicas.setter
    def total_replicas(self, total_replicas):
        """Sets the total_replicas of this GoogleCloudApigeeV1ResourceStatus.

        The total number of replicas that should have this resource.

        :param total_replicas: The total_replicas of this GoogleCloudApigeeV1ResourceStatus.
        :type total_replicas: int
        """

        self._total_replicas = total_replicas

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudApigeeV1ResourceStatus.

        The uid of the resource. In the unexpected case that the instance has multiple uids for the same name, they should be reported under separate ResourceStatuses.

        :return: The uid of this GoogleCloudApigeeV1ResourceStatus.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudApigeeV1ResourceStatus.

        The uid of the resource. In the unexpected case that the instance has multiple uids for the same name, they should be reported under separate ResourceStatuses.

        :param uid: The uid of this GoogleCloudApigeeV1ResourceStatus.
        :type uid: str
        """

        self._uid = uid
