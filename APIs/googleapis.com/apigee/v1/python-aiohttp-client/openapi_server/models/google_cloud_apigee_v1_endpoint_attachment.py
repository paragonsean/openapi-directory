# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1EndpointAttachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_state: str=None, host: str=None, location: str=None, name: str=None, service_attachment: str=None, state: str=None):
        """GoogleCloudApigeeV1EndpointAttachment - a model defined in OpenAPI

        :param connection_state: The connection_state of this GoogleCloudApigeeV1EndpointAttachment.
        :param host: The host of this GoogleCloudApigeeV1EndpointAttachment.
        :param location: The location of this GoogleCloudApigeeV1EndpointAttachment.
        :param name: The name of this GoogleCloudApigeeV1EndpointAttachment.
        :param service_attachment: The service_attachment of this GoogleCloudApigeeV1EndpointAttachment.
        :param state: The state of this GoogleCloudApigeeV1EndpointAttachment.
        """
        self.openapi_types = {
            'connection_state': str,
            'host': str,
            'location': str,
            'name': str,
            'service_attachment': str,
            'state': str
        }

        self.attribute_map = {
            'connection_state': 'connectionState',
            'host': 'host',
            'location': 'location',
            'name': 'name',
            'service_attachment': 'serviceAttachment',
            'state': 'state'
        }

        self._connection_state = connection_state
        self._host = host
        self._location = location
        self._name = name
        self._service_attachment = service_attachment
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1EndpointAttachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1EndpointAttachment of this GoogleCloudApigeeV1EndpointAttachment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_state(self):
        """Gets the connection_state of this GoogleCloudApigeeV1EndpointAttachment.

        Output only. State of the endpoint attachment connection to the service attachment.

        :return: The connection_state of this GoogleCloudApigeeV1EndpointAttachment.
        :rtype: str
        """
        return self._connection_state

    @connection_state.setter
    def connection_state(self, connection_state):
        """Sets the connection_state of this GoogleCloudApigeeV1EndpointAttachment.

        Output only. State of the endpoint attachment connection to the service attachment.

        :param connection_state: The connection_state of this GoogleCloudApigeeV1EndpointAttachment.
        :type connection_state: str
        """
        allowed_values = ["CONNECTION_STATE_UNSPECIFIED", "UNAVAILABLE", "PENDING", "ACCEPTED", "REJECTED", "CLOSED", "FROZEN", "NEEDS_ATTENTION"]  # noqa: E501
        if connection_state not in allowed_values:
            raise ValueError(
                "Invalid value for `connection_state` ({0}), must be one of {1}"
                .format(connection_state, allowed_values)
            )

        self._connection_state = connection_state

    @property
    def host(self):
        """Gets the host of this GoogleCloudApigeeV1EndpointAttachment.

        Output only. Host that can be used in either the HTTP target endpoint directly or as the host in target server.

        :return: The host of this GoogleCloudApigeeV1EndpointAttachment.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this GoogleCloudApigeeV1EndpointAttachment.

        Output only. Host that can be used in either the HTTP target endpoint directly or as the host in target server.

        :param host: The host of this GoogleCloudApigeeV1EndpointAttachment.
        :type host: str
        """

        self._host = host

    @property
    def location(self):
        """Gets the location of this GoogleCloudApigeeV1EndpointAttachment.

        Required. Location of the endpoint attachment.

        :return: The location of this GoogleCloudApigeeV1EndpointAttachment.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GoogleCloudApigeeV1EndpointAttachment.

        Required. Location of the endpoint attachment.

        :param location: The location of this GoogleCloudApigeeV1EndpointAttachment.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this GoogleCloudApigeeV1EndpointAttachment.

        Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`

        :return: The name of this GoogleCloudApigeeV1EndpointAttachment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudApigeeV1EndpointAttachment.

        Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`

        :param name: The name of this GoogleCloudApigeeV1EndpointAttachment.
        :type name: str
        """

        self._name = name

    @property
    def service_attachment(self):
        """Gets the service_attachment of this GoogleCloudApigeeV1EndpointAttachment.

        Format: projects/*/regions/*/serviceAttachments/*

        :return: The service_attachment of this GoogleCloudApigeeV1EndpointAttachment.
        :rtype: str
        """
        return self._service_attachment

    @service_attachment.setter
    def service_attachment(self, service_attachment):
        """Sets the service_attachment of this GoogleCloudApigeeV1EndpointAttachment.

        Format: projects/*/regions/*/serviceAttachments/*

        :param service_attachment: The service_attachment of this GoogleCloudApigeeV1EndpointAttachment.
        :type service_attachment: str
        """

        self._service_attachment = service_attachment

    @property
    def state(self):
        """Gets the state of this GoogleCloudApigeeV1EndpointAttachment.

        Output only. State of the endpoint attachment. Values other than `ACTIVE` mean the resource is not ready to use.

        :return: The state of this GoogleCloudApigeeV1EndpointAttachment.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudApigeeV1EndpointAttachment.

        Output only. State of the endpoint attachment. Values other than `ACTIVE` mean the resource is not ready to use.

        :param state: The state of this GoogleCloudApigeeV1EndpointAttachment.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "CREATING", "ACTIVE", "DELETING", "UPDATING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
