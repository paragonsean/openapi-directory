# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1SecurityIncident(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detection_types: List[str]=None, display_name: str=None, first_detected_time: str=None, last_detected_time: str=None, last_observability_change_time: str=None, name: str=None, observability: str=None, risk_level: str=None, traffic_count: str=None):
        """GoogleCloudApigeeV1SecurityIncident - a model defined in OpenAPI

        :param detection_types: The detection_types of this GoogleCloudApigeeV1SecurityIncident.
        :param display_name: The display_name of this GoogleCloudApigeeV1SecurityIncident.
        :param first_detected_time: The first_detected_time of this GoogleCloudApigeeV1SecurityIncident.
        :param last_detected_time: The last_detected_time of this GoogleCloudApigeeV1SecurityIncident.
        :param last_observability_change_time: The last_observability_change_time of this GoogleCloudApigeeV1SecurityIncident.
        :param name: The name of this GoogleCloudApigeeV1SecurityIncident.
        :param observability: The observability of this GoogleCloudApigeeV1SecurityIncident.
        :param risk_level: The risk_level of this GoogleCloudApigeeV1SecurityIncident.
        :param traffic_count: The traffic_count of this GoogleCloudApigeeV1SecurityIncident.
        """
        self.openapi_types = {
            'detection_types': List[str],
            'display_name': str,
            'first_detected_time': str,
            'last_detected_time': str,
            'last_observability_change_time': str,
            'name': str,
            'observability': str,
            'risk_level': str,
            'traffic_count': str
        }

        self.attribute_map = {
            'detection_types': 'detectionTypes',
            'display_name': 'displayName',
            'first_detected_time': 'firstDetectedTime',
            'last_detected_time': 'lastDetectedTime',
            'last_observability_change_time': 'lastObservabilityChangeTime',
            'name': 'name',
            'observability': 'observability',
            'risk_level': 'riskLevel',
            'traffic_count': 'trafficCount'
        }

        self._detection_types = detection_types
        self._display_name = display_name
        self._first_detected_time = first_detected_time
        self._last_detected_time = last_detected_time
        self._last_observability_change_time = last_observability_change_time
        self._name = name
        self._observability = observability
        self._risk_level = risk_level
        self._traffic_count = traffic_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1SecurityIncident':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1SecurityIncident of this GoogleCloudApigeeV1SecurityIncident.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detection_types(self):
        """Gets the detection_types of this GoogleCloudApigeeV1SecurityIncident.

        Output only. Detection types which are part of the incident. Examples: Flooder, OAuth Abuser, Static Content Scraper, Anomaly Detection.

        :return: The detection_types of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: List[str]
        """
        return self._detection_types

    @detection_types.setter
    def detection_types(self, detection_types):
        """Sets the detection_types of this GoogleCloudApigeeV1SecurityIncident.

        Output only. Detection types which are part of the incident. Examples: Flooder, OAuth Abuser, Static Content Scraper, Anomaly Detection.

        :param detection_types: The detection_types of this GoogleCloudApigeeV1SecurityIncident.
        :type detection_types: List[str]
        """

        self._detection_types = detection_types

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudApigeeV1SecurityIncident.

        Optional. Display name of the security incident.

        :return: The display_name of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudApigeeV1SecurityIncident.

        Optional. Display name of the security incident.

        :param display_name: The display_name of this GoogleCloudApigeeV1SecurityIncident.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def first_detected_time(self):
        """Gets the first_detected_time of this GoogleCloudApigeeV1SecurityIncident.

        Output only. The time when events associated with the incident were first detected.

        :return: The first_detected_time of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._first_detected_time

    @first_detected_time.setter
    def first_detected_time(self, first_detected_time):
        """Sets the first_detected_time of this GoogleCloudApigeeV1SecurityIncident.

        Output only. The time when events associated with the incident were first detected.

        :param first_detected_time: The first_detected_time of this GoogleCloudApigeeV1SecurityIncident.
        :type first_detected_time: str
        """

        self._first_detected_time = first_detected_time

    @property
    def last_detected_time(self):
        """Gets the last_detected_time of this GoogleCloudApigeeV1SecurityIncident.

        Output only. The time when events associated with the incident were last detected.

        :return: The last_detected_time of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._last_detected_time

    @last_detected_time.setter
    def last_detected_time(self, last_detected_time):
        """Sets the last_detected_time of this GoogleCloudApigeeV1SecurityIncident.

        Output only. The time when events associated with the incident were last detected.

        :param last_detected_time: The last_detected_time of this GoogleCloudApigeeV1SecurityIncident.
        :type last_detected_time: str
        """

        self._last_detected_time = last_detected_time

    @property
    def last_observability_change_time(self):
        """Gets the last_observability_change_time of this GoogleCloudApigeeV1SecurityIncident.

        Output only. The time when the incident observability was last changed.

        :return: The last_observability_change_time of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._last_observability_change_time

    @last_observability_change_time.setter
    def last_observability_change_time(self, last_observability_change_time):
        """Sets the last_observability_change_time of this GoogleCloudApigeeV1SecurityIncident.

        Output only. The time when the incident observability was last changed.

        :param last_observability_change_time: The last_observability_change_time of this GoogleCloudApigeeV1SecurityIncident.
        :type last_observability_change_time: str
        """

        self._last_observability_change_time = last_observability_change_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudApigeeV1SecurityIncident.

        Immutable. Name of the security incident resource. Format: organizations/{org}/environments/{environment}/securityIncidents/{incident} Example: organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111

        :return: The name of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudApigeeV1SecurityIncident.

        Immutable. Name of the security incident resource. Format: organizations/{org}/environments/{environment}/securityIncidents/{incident} Example: organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111

        :param name: The name of this GoogleCloudApigeeV1SecurityIncident.
        :type name: str
        """

        self._name = name

    @property
    def observability(self):
        """Gets the observability of this GoogleCloudApigeeV1SecurityIncident.

        Optional. Indicates if the user archived this incident.

        :return: The observability of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._observability

    @observability.setter
    def observability(self, observability):
        """Sets the observability of this GoogleCloudApigeeV1SecurityIncident.

        Optional. Indicates if the user archived this incident.

        :param observability: The observability of this GoogleCloudApigeeV1SecurityIncident.
        :type observability: str
        """
        allowed_values = ["OBSERVABILITY_UNSPECIFIED", "ACTIVE", "ARCHIVED"]  # noqa: E501
        if observability not in allowed_values:
            raise ValueError(
                "Invalid value for `observability` ({0}), must be one of {1}"
                .format(observability, allowed_values)
            )

        self._observability = observability

    @property
    def risk_level(self):
        """Gets the risk_level of this GoogleCloudApigeeV1SecurityIncident.

        Output only. Risk level of the incident.

        :return: The risk_level of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._risk_level

    @risk_level.setter
    def risk_level(self, risk_level):
        """Sets the risk_level of this GoogleCloudApigeeV1SecurityIncident.

        Output only. Risk level of the incident.

        :param risk_level: The risk_level of this GoogleCloudApigeeV1SecurityIncident.
        :type risk_level: str
        """
        allowed_values = ["RISK_LEVEL_UNSPECIFIED", "LOW", "MODERATE", "SEVERE"]  # noqa: E501
        if risk_level not in allowed_values:
            raise ValueError(
                "Invalid value for `risk_level` ({0}), must be one of {1}"
                .format(risk_level, allowed_values)
            )

        self._risk_level = risk_level

    @property
    def traffic_count(self):
        """Gets the traffic_count of this GoogleCloudApigeeV1SecurityIncident.

        Total traffic detected as part of the incident.

        :return: The traffic_count of this GoogleCloudApigeeV1SecurityIncident.
        :rtype: str
        """
        return self._traffic_count

    @traffic_count.setter
    def traffic_count(self, traffic_count):
        """Sets the traffic_count of this GoogleCloudApigeeV1SecurityIncident.

        Total traffic detected as part of the incident.

        :param traffic_count: The traffic_count of this GoogleCloudApigeeV1SecurityIncident.
        :type traffic_count: str
        """

        self._traffic_count = traffic_count
