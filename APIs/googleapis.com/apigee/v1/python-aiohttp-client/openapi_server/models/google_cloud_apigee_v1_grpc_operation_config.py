# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_attribute import GoogleCloudApigeeV1Attribute
from openapi_server.models.google_cloud_apigee_v1_quota import GoogleCloudApigeeV1Quota
from openapi_server import util


class GoogleCloudApigeeV1GrpcOperationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_source: str=None, attributes: List[GoogleCloudApigeeV1Attribute]=None, methods: List[str]=None, quota: GoogleCloudApigeeV1Quota=None, service: str=None):
        """GoogleCloudApigeeV1GrpcOperationConfig - a model defined in OpenAPI

        :param api_source: The api_source of this GoogleCloudApigeeV1GrpcOperationConfig.
        :param attributes: The attributes of this GoogleCloudApigeeV1GrpcOperationConfig.
        :param methods: The methods of this GoogleCloudApigeeV1GrpcOperationConfig.
        :param quota: The quota of this GoogleCloudApigeeV1GrpcOperationConfig.
        :param service: The service of this GoogleCloudApigeeV1GrpcOperationConfig.
        """
        self.openapi_types = {
            'api_source': str,
            'attributes': List[GoogleCloudApigeeV1Attribute],
            'methods': List[str],
            'quota': GoogleCloudApigeeV1Quota,
            'service': str
        }

        self.attribute_map = {
            'api_source': 'apiSource',
            'attributes': 'attributes',
            'methods': 'methods',
            'quota': 'quota',
            'service': 'service'
        }

        self._api_source = api_source
        self._attributes = attributes
        self._methods = methods
        self._quota = quota
        self._service = service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1GrpcOperationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1GrpcOperationConfig of this GoogleCloudApigeeV1GrpcOperationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_source(self):
        """Gets the api_source of this GoogleCloudApigeeV1GrpcOperationConfig.

        Required. Name of the API proxy with which the gRPC operation and quota are associated.

        :return: The api_source of this GoogleCloudApigeeV1GrpcOperationConfig.
        :rtype: str
        """
        return self._api_source

    @api_source.setter
    def api_source(self, api_source):
        """Sets the api_source of this GoogleCloudApigeeV1GrpcOperationConfig.

        Required. Name of the API proxy with which the gRPC operation and quota are associated.

        :param api_source: The api_source of this GoogleCloudApigeeV1GrpcOperationConfig.
        :type api_source: str
        """

        self._api_source = api_source

    @property
    def attributes(self):
        """Gets the attributes of this GoogleCloudApigeeV1GrpcOperationConfig.

        Custom attributes associated with the operation.

        :return: The attributes of this GoogleCloudApigeeV1GrpcOperationConfig.
        :rtype: List[GoogleCloudApigeeV1Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GoogleCloudApigeeV1GrpcOperationConfig.

        Custom attributes associated with the operation.

        :param attributes: The attributes of this GoogleCloudApigeeV1GrpcOperationConfig.
        :type attributes: List[GoogleCloudApigeeV1Attribute]
        """

        self._attributes = attributes

    @property
    def methods(self):
        """Gets the methods of this GoogleCloudApigeeV1GrpcOperationConfig.

        List of unqualified gRPC method names for the proxy to which quota will be applied. If this field is empty, the Quota will apply to all operations on the gRPC service defined on the proxy. Example: Given a proxy that is configured to serve com.petstore.PetService, the methods com.petstore.PetService.ListPets and com.petstore.PetService.GetPet would be specified here as simply [\"ListPets\", \"GetPet\"].

        :return: The methods of this GoogleCloudApigeeV1GrpcOperationConfig.
        :rtype: List[str]
        """
        return self._methods

    @methods.setter
    def methods(self, methods):
        """Sets the methods of this GoogleCloudApigeeV1GrpcOperationConfig.

        List of unqualified gRPC method names for the proxy to which quota will be applied. If this field is empty, the Quota will apply to all operations on the gRPC service defined on the proxy. Example: Given a proxy that is configured to serve com.petstore.PetService, the methods com.petstore.PetService.ListPets and com.petstore.PetService.GetPet would be specified here as simply [\"ListPets\", \"GetPet\"].

        :param methods: The methods of this GoogleCloudApigeeV1GrpcOperationConfig.
        :type methods: List[str]
        """

        self._methods = methods

    @property
    def quota(self):
        """Gets the quota of this GoogleCloudApigeeV1GrpcOperationConfig.


        :return: The quota of this GoogleCloudApigeeV1GrpcOperationConfig.
        :rtype: GoogleCloudApigeeV1Quota
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """Sets the quota of this GoogleCloudApigeeV1GrpcOperationConfig.


        :param quota: The quota of this GoogleCloudApigeeV1GrpcOperationConfig.
        :type quota: GoogleCloudApigeeV1Quota
        """

        self._quota = quota

    @property
    def service(self):
        """Gets the service of this GoogleCloudApigeeV1GrpcOperationConfig.

        Required. gRPC Service name associated to be associated with the API proxy, on which quota rules can be applied upon.

        :return: The service of this GoogleCloudApigeeV1GrpcOperationConfig.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this GoogleCloudApigeeV1GrpcOperationConfig.

        Required. gRPC Service name associated to be associated with the API proxy, on which quota rules can be applied upon.

        :param service: The service of this GoogleCloudApigeeV1GrpcOperationConfig.
        :type service: str
        """

        self._service = service
