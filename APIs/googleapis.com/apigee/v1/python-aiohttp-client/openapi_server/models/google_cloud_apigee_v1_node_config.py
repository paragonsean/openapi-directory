# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1NodeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_aggregate_node_count: str=None, max_node_count: str=None, min_node_count: str=None):
        """GoogleCloudApigeeV1NodeConfig - a model defined in OpenAPI

        :param current_aggregate_node_count: The current_aggregate_node_count of this GoogleCloudApigeeV1NodeConfig.
        :param max_node_count: The max_node_count of this GoogleCloudApigeeV1NodeConfig.
        :param min_node_count: The min_node_count of this GoogleCloudApigeeV1NodeConfig.
        """
        self.openapi_types = {
            'current_aggregate_node_count': str,
            'max_node_count': str,
            'min_node_count': str
        }

        self.attribute_map = {
            'current_aggregate_node_count': 'currentAggregateNodeCount',
            'max_node_count': 'maxNodeCount',
            'min_node_count': 'minNodeCount'
        }

        self._current_aggregate_node_count = current_aggregate_node_count
        self._max_node_count = max_node_count
        self._min_node_count = min_node_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1NodeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1NodeConfig of this GoogleCloudApigeeV1NodeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_aggregate_node_count(self):
        """Gets the current_aggregate_node_count of this GoogleCloudApigeeV1NodeConfig.

        Output only. The current total number of gateway nodes that each environment currently has across all instances.

        :return: The current_aggregate_node_count of this GoogleCloudApigeeV1NodeConfig.
        :rtype: str
        """
        return self._current_aggregate_node_count

    @current_aggregate_node_count.setter
    def current_aggregate_node_count(self, current_aggregate_node_count):
        """Sets the current_aggregate_node_count of this GoogleCloudApigeeV1NodeConfig.

        Output only. The current total number of gateway nodes that each environment currently has across all instances.

        :param current_aggregate_node_count: The current_aggregate_node_count of this GoogleCloudApigeeV1NodeConfig.
        :type current_aggregate_node_count: str
        """

        self._current_aggregate_node_count = current_aggregate_node_count

    @property
    def max_node_count(self):
        """Gets the max_node_count of this GoogleCloudApigeeV1NodeConfig.

        Optional. The maximum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended maximum number of nodes for that gateway.

        :return: The max_node_count of this GoogleCloudApigeeV1NodeConfig.
        :rtype: str
        """
        return self._max_node_count

    @max_node_count.setter
    def max_node_count(self, max_node_count):
        """Sets the max_node_count of this GoogleCloudApigeeV1NodeConfig.

        Optional. The maximum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended maximum number of nodes for that gateway.

        :param max_node_count: The max_node_count of this GoogleCloudApigeeV1NodeConfig.
        :type max_node_count: str
        """

        self._max_node_count = max_node_count

    @property
    def min_node_count(self):
        """Gets the min_node_count of this GoogleCloudApigeeV1NodeConfig.

        Optional. The minimum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended minimum number of nodes for that gateway.

        :return: The min_node_count of this GoogleCloudApigeeV1NodeConfig.
        :rtype: str
        """
        return self._min_node_count

    @min_node_count.setter
    def min_node_count(self, min_node_count):
        """Sets the min_node_count of this GoogleCloudApigeeV1NodeConfig.

        Optional. The minimum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended minimum number of nodes for that gateway.

        :param min_node_count: The min_node_count of this GoogleCloudApigeeV1NodeConfig.
        :type min_node_count: str
        """

        self._min_node_count = min_node_count
