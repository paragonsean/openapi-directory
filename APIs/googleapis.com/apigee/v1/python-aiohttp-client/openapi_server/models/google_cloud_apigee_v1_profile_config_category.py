# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1ProfileConfigCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abuse: object=None, authorization: object=None, cors: object=None, mediation: object=None, mtls: object=None, threat: object=None):
        """GoogleCloudApigeeV1ProfileConfigCategory - a model defined in OpenAPI

        :param abuse: The abuse of this GoogleCloudApigeeV1ProfileConfigCategory.
        :param authorization: The authorization of this GoogleCloudApigeeV1ProfileConfigCategory.
        :param cors: The cors of this GoogleCloudApigeeV1ProfileConfigCategory.
        :param mediation: The mediation of this GoogleCloudApigeeV1ProfileConfigCategory.
        :param mtls: The mtls of this GoogleCloudApigeeV1ProfileConfigCategory.
        :param threat: The threat of this GoogleCloudApigeeV1ProfileConfigCategory.
        """
        self.openapi_types = {
            'abuse': object,
            'authorization': object,
            'cors': object,
            'mediation': object,
            'mtls': object,
            'threat': object
        }

        self.attribute_map = {
            'abuse': 'abuse',
            'authorization': 'authorization',
            'cors': 'cors',
            'mediation': 'mediation',
            'mtls': 'mtls',
            'threat': 'threat'
        }

        self._abuse = abuse
        self._authorization = authorization
        self._cors = cors
        self._mediation = mediation
        self._mtls = mtls
        self._threat = threat

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1ProfileConfigCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1ProfileConfigCategory of this GoogleCloudApigeeV1ProfileConfigCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abuse(self):
        """Gets the abuse of this GoogleCloudApigeeV1ProfileConfigCategory.

        Checks for abuse, which includes any requests sent to the API for purposes other than what it is intended for, such as high volumes of requests, data scraping, and abuse related to authorization.

        :return: The abuse of this GoogleCloudApigeeV1ProfileConfigCategory.
        :rtype: object
        """
        return self._abuse

    @abuse.setter
    def abuse(self, abuse):
        """Sets the abuse of this GoogleCloudApigeeV1ProfileConfigCategory.

        Checks for abuse, which includes any requests sent to the API for purposes other than what it is intended for, such as high volumes of requests, data scraping, and abuse related to authorization.

        :param abuse: The abuse of this GoogleCloudApigeeV1ProfileConfigCategory.
        :type abuse: object
        """

        self._abuse = abuse

    @property
    def authorization(self):
        """Gets the authorization of this GoogleCloudApigeeV1ProfileConfigCategory.

        By default, following policies will be included: - JWS - JWT - OAuth - BasicAuth - APIKey

        :return: The authorization of this GoogleCloudApigeeV1ProfileConfigCategory.
        :rtype: object
        """
        return self._authorization

    @authorization.setter
    def authorization(self, authorization):
        """Sets the authorization of this GoogleCloudApigeeV1ProfileConfigCategory.

        By default, following policies will be included: - JWS - JWT - OAuth - BasicAuth - APIKey

        :param authorization: The authorization of this GoogleCloudApigeeV1ProfileConfigCategory.
        :type authorization: object
        """

        self._authorization = authorization

    @property
    def cors(self):
        """Gets the cors of this GoogleCloudApigeeV1ProfileConfigCategory.

        Checks to see if you have CORS policy in place.

        :return: The cors of this GoogleCloudApigeeV1ProfileConfigCategory.
        :rtype: object
        """
        return self._cors

    @cors.setter
    def cors(self, cors):
        """Sets the cors of this GoogleCloudApigeeV1ProfileConfigCategory.

        Checks to see if you have CORS policy in place.

        :param cors: The cors of this GoogleCloudApigeeV1ProfileConfigCategory.
        :type cors: object
        """

        self._cors = cors

    @property
    def mediation(self):
        """Gets the mediation of this GoogleCloudApigeeV1ProfileConfigCategory.

        By default, following policies will be included: - OASValidation - SOAPMessageValidation

        :return: The mediation of this GoogleCloudApigeeV1ProfileConfigCategory.
        :rtype: object
        """
        return self._mediation

    @mediation.setter
    def mediation(self, mediation):
        """Sets the mediation of this GoogleCloudApigeeV1ProfileConfigCategory.

        By default, following policies will be included: - OASValidation - SOAPMessageValidation

        :param mediation: The mediation of this GoogleCloudApigeeV1ProfileConfigCategory.
        :type mediation: object
        """

        self._mediation = mediation

    @property
    def mtls(self):
        """Gets the mtls of this GoogleCloudApigeeV1ProfileConfigCategory.

        Checks to see if you have configured mTLS for the target server.

        :return: The mtls of this GoogleCloudApigeeV1ProfileConfigCategory.
        :rtype: object
        """
        return self._mtls

    @mtls.setter
    def mtls(self, mtls):
        """Sets the mtls of this GoogleCloudApigeeV1ProfileConfigCategory.

        Checks to see if you have configured mTLS for the target server.

        :param mtls: The mtls of this GoogleCloudApigeeV1ProfileConfigCategory.
        :type mtls: object
        """

        self._mtls = mtls

    @property
    def threat(self):
        """Gets the threat of this GoogleCloudApigeeV1ProfileConfigCategory.

        By default, following policies will be included: - XMLThreatProtection - JSONThreatProtection

        :return: The threat of this GoogleCloudApigeeV1ProfileConfigCategory.
        :rtype: object
        """
        return self._threat

    @threat.setter
    def threat(self, threat):
        """Sets the threat of this GoogleCloudApigeeV1ProfileConfigCategory.

        By default, following policies will be included: - XMLThreatProtection - JSONThreatProtection

        :param threat: The threat of this GoogleCloudApigeeV1ProfileConfigCategory.
        :type threat: object
        """

        self._threat = threat
