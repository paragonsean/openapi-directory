# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_deployment_change_report_routing_conflict import GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict
from openapi_server.models.google_cloud_apigee_v1_instance_deployment_status import GoogleCloudApigeeV1InstanceDeploymentStatus
from openapi_server.models.google_cloud_apigee_v1_pod_status import GoogleCloudApigeeV1PodStatus
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudApigeeV1Deployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_proxy: str=None, deploy_start_time: str=None, environment: str=None, errors: List[GoogleRpcStatus]=None, instances: List[GoogleCloudApigeeV1InstanceDeploymentStatus]=None, pods: List[GoogleCloudApigeeV1PodStatus]=None, proxy_deployment_type: str=None, revision: str=None, route_conflicts: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict]=None, service_account: str=None, state: str=None):
        """GoogleCloudApigeeV1Deployment - a model defined in OpenAPI

        :param api_proxy: The api_proxy of this GoogleCloudApigeeV1Deployment.
        :param deploy_start_time: The deploy_start_time of this GoogleCloudApigeeV1Deployment.
        :param environment: The environment of this GoogleCloudApigeeV1Deployment.
        :param errors: The errors of this GoogleCloudApigeeV1Deployment.
        :param instances: The instances of this GoogleCloudApigeeV1Deployment.
        :param pods: The pods of this GoogleCloudApigeeV1Deployment.
        :param proxy_deployment_type: The proxy_deployment_type of this GoogleCloudApigeeV1Deployment.
        :param revision: The revision of this GoogleCloudApigeeV1Deployment.
        :param route_conflicts: The route_conflicts of this GoogleCloudApigeeV1Deployment.
        :param service_account: The service_account of this GoogleCloudApigeeV1Deployment.
        :param state: The state of this GoogleCloudApigeeV1Deployment.
        """
        self.openapi_types = {
            'api_proxy': str,
            'deploy_start_time': str,
            'environment': str,
            'errors': List[GoogleRpcStatus],
            'instances': List[GoogleCloudApigeeV1InstanceDeploymentStatus],
            'pods': List[GoogleCloudApigeeV1PodStatus],
            'proxy_deployment_type': str,
            'revision': str,
            'route_conflicts': List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict],
            'service_account': str,
            'state': str
        }

        self.attribute_map = {
            'api_proxy': 'apiProxy',
            'deploy_start_time': 'deployStartTime',
            'environment': 'environment',
            'errors': 'errors',
            'instances': 'instances',
            'pods': 'pods',
            'proxy_deployment_type': 'proxyDeploymentType',
            'revision': 'revision',
            'route_conflicts': 'routeConflicts',
            'service_account': 'serviceAccount',
            'state': 'state'
        }

        self._api_proxy = api_proxy
        self._deploy_start_time = deploy_start_time
        self._environment = environment
        self._errors = errors
        self._instances = instances
        self._pods = pods
        self._proxy_deployment_type = proxy_deployment_type
        self._revision = revision
        self._route_conflicts = route_conflicts
        self._service_account = service_account
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1Deployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1Deployment of this GoogleCloudApigeeV1Deployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_proxy(self):
        """Gets the api_proxy of this GoogleCloudApigeeV1Deployment.

        API proxy.

        :return: The api_proxy of this GoogleCloudApigeeV1Deployment.
        :rtype: str
        """
        return self._api_proxy

    @api_proxy.setter
    def api_proxy(self, api_proxy):
        """Sets the api_proxy of this GoogleCloudApigeeV1Deployment.

        API proxy.

        :param api_proxy: The api_proxy of this GoogleCloudApigeeV1Deployment.
        :type api_proxy: str
        """

        self._api_proxy = api_proxy

    @property
    def deploy_start_time(self):
        """Gets the deploy_start_time of this GoogleCloudApigeeV1Deployment.

        Time the API proxy was marked `deployed` in the control plane in millisconds since epoch.

        :return: The deploy_start_time of this GoogleCloudApigeeV1Deployment.
        :rtype: str
        """
        return self._deploy_start_time

    @deploy_start_time.setter
    def deploy_start_time(self, deploy_start_time):
        """Sets the deploy_start_time of this GoogleCloudApigeeV1Deployment.

        Time the API proxy was marked `deployed` in the control plane in millisconds since epoch.

        :param deploy_start_time: The deploy_start_time of this GoogleCloudApigeeV1Deployment.
        :type deploy_start_time: str
        """

        self._deploy_start_time = deploy_start_time

    @property
    def environment(self):
        """Gets the environment of this GoogleCloudApigeeV1Deployment.

        Environment.

        :return: The environment of this GoogleCloudApigeeV1Deployment.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this GoogleCloudApigeeV1Deployment.

        Environment.

        :param environment: The environment of this GoogleCloudApigeeV1Deployment.
        :type environment: str
        """

        self._environment = environment

    @property
    def errors(self):
        """Gets the errors of this GoogleCloudApigeeV1Deployment.

        Errors reported for this deployment. Populated only when state == ERROR. **Note**: This field is displayed only when viewing deployment status.

        :return: The errors of this GoogleCloudApigeeV1Deployment.
        :rtype: List[GoogleRpcStatus]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this GoogleCloudApigeeV1Deployment.

        Errors reported for this deployment. Populated only when state == ERROR. **Note**: This field is displayed only when viewing deployment status.

        :param errors: The errors of this GoogleCloudApigeeV1Deployment.
        :type errors: List[GoogleRpcStatus]
        """

        self._errors = errors

    @property
    def instances(self):
        """Gets the instances of this GoogleCloudApigeeV1Deployment.

        Status reported by each runtime instance. **Note**: This field is displayed only when viewing deployment status.

        :return: The instances of this GoogleCloudApigeeV1Deployment.
        :rtype: List[GoogleCloudApigeeV1InstanceDeploymentStatus]
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this GoogleCloudApigeeV1Deployment.

        Status reported by each runtime instance. **Note**: This field is displayed only when viewing deployment status.

        :param instances: The instances of this GoogleCloudApigeeV1Deployment.
        :type instances: List[GoogleCloudApigeeV1InstanceDeploymentStatus]
        """

        self._instances = instances

    @property
    def pods(self):
        """Gets the pods of this GoogleCloudApigeeV1Deployment.

        Status reported by runtime pods. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status.

        :return: The pods of this GoogleCloudApigeeV1Deployment.
        :rtype: List[GoogleCloudApigeeV1PodStatus]
        """
        return self._pods

    @pods.setter
    def pods(self, pods):
        """Sets the pods of this GoogleCloudApigeeV1Deployment.

        Status reported by runtime pods. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status.

        :param pods: The pods of this GoogleCloudApigeeV1Deployment.
        :type pods: List[GoogleCloudApigeeV1PodStatus]
        """

        self._pods = pods

    @property
    def proxy_deployment_type(self):
        """Gets the proxy_deployment_type of this GoogleCloudApigeeV1Deployment.

        Output only. The type of the deployment (standard or extensible) Deployed proxy revision will be marked as extensible in following 2 cases. 1. The deployed proxy revision uses extensible policies. 2. If a environment supports flowhooks and flow hook is configured.

        :return: The proxy_deployment_type of this GoogleCloudApigeeV1Deployment.
        :rtype: str
        """
        return self._proxy_deployment_type

    @proxy_deployment_type.setter
    def proxy_deployment_type(self, proxy_deployment_type):
        """Sets the proxy_deployment_type of this GoogleCloudApigeeV1Deployment.

        Output only. The type of the deployment (standard or extensible) Deployed proxy revision will be marked as extensible in following 2 cases. 1. The deployed proxy revision uses extensible policies. 2. If a environment supports flowhooks and flow hook is configured.

        :param proxy_deployment_type: The proxy_deployment_type of this GoogleCloudApigeeV1Deployment.
        :type proxy_deployment_type: str
        """
        allowed_values = ["PROXY_DEPLOYMENT_TYPE_UNSPECIFIED", "STANDARD", "EXTENSIBLE"]  # noqa: E501
        if proxy_deployment_type not in allowed_values:
            raise ValueError(
                "Invalid value for `proxy_deployment_type` ({0}), must be one of {1}"
                .format(proxy_deployment_type, allowed_values)
            )

        self._proxy_deployment_type = proxy_deployment_type

    @property
    def revision(self):
        """Gets the revision of this GoogleCloudApigeeV1Deployment.

        API proxy revision.

        :return: The revision of this GoogleCloudApigeeV1Deployment.
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this GoogleCloudApigeeV1Deployment.

        API proxy revision.

        :param revision: The revision of this GoogleCloudApigeeV1Deployment.
        :type revision: str
        """

        self._revision = revision

    @property
    def route_conflicts(self):
        """Gets the route_conflicts of this GoogleCloudApigeeV1Deployment.

        Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. **Note**: This field is displayed only when viewing deployment status.

        :return: The route_conflicts of this GoogleCloudApigeeV1Deployment.
        :rtype: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict]
        """
        return self._route_conflicts

    @route_conflicts.setter
    def route_conflicts(self, route_conflicts):
        """Sets the route_conflicts of this GoogleCloudApigeeV1Deployment.

        Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. **Note**: This field is displayed only when viewing deployment status.

        :param route_conflicts: The route_conflicts of this GoogleCloudApigeeV1Deployment.
        :type route_conflicts: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict]
        """

        self._route_conflicts = route_conflicts

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudApigeeV1Deployment.

        The full resource name of Cloud IAM Service Account that this deployment is using, eg, `projects/-/serviceAccounts/{email}`.

        :return: The service_account of this GoogleCloudApigeeV1Deployment.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudApigeeV1Deployment.

        The full resource name of Cloud IAM Service Account that this deployment is using, eg, `projects/-/serviceAccounts/{email}`.

        :param service_account: The service_account of this GoogleCloudApigeeV1Deployment.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def state(self):
        """Gets the state of this GoogleCloudApigeeV1Deployment.

        Current state of the deployment. **Note**: This field is displayed only when viewing deployment status.

        :return: The state of this GoogleCloudApigeeV1Deployment.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudApigeeV1Deployment.

        Current state of the deployment. **Note**: This field is displayed only when viewing deployment status.

        :param state: The state of this GoogleCloudApigeeV1Deployment.
        :type state: str
        """
        allowed_values = ["RUNTIME_STATE_UNSPECIFIED", "READY", "PROGRESSING", "ERROR"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
