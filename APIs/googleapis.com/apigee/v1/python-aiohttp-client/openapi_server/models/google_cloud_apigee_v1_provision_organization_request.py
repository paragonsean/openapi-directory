# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1ProvisionOrganizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analytics_region: str=None, authorized_network: str=None, disable_vpc_peering: bool=None, runtime_location: str=None):
        """GoogleCloudApigeeV1ProvisionOrganizationRequest - a model defined in OpenAPI

        :param analytics_region: The analytics_region of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :param authorized_network: The authorized_network of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :param disable_vpc_peering: The disable_vpc_peering of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :param runtime_location: The runtime_location of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        """
        self.openapi_types = {
            'analytics_region': str,
            'authorized_network': str,
            'disable_vpc_peering': bool,
            'runtime_location': str
        }

        self.attribute_map = {
            'analytics_region': 'analyticsRegion',
            'authorized_network': 'authorizedNetwork',
            'disable_vpc_peering': 'disableVpcPeering',
            'runtime_location': 'runtimeLocation'
        }

        self._analytics_region = analytics_region
        self._authorized_network = authorized_network
        self._disable_vpc_peering = disable_vpc_peering
        self._runtime_location = runtime_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1ProvisionOrganizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1ProvisionOrganizationRequest of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analytics_region(self):
        """Gets the analytics_region of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://cloud.google.com/apigee/docs/hybrid/latest/precog-provision). Defaults to `us-west1`.

        :return: The analytics_region of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :rtype: str
        """
        return self._analytics_region

    @analytics_region.setter
    def analytics_region(self, analytics_region):
        """Sets the analytics_region of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://cloud.google.com/apigee/docs/hybrid/latest/precog-provision). Defaults to `us-west1`.

        :param analytics_region: The analytics_region of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :type analytics_region: str
        """

        self._analytics_region = analytics_region

    @property
    def authorized_network(self):
        """Gets the authorized_network of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork`

        :return: The authorized_network of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :rtype: str
        """
        return self._authorized_network

    @authorized_network.setter
    def authorized_network(self, authorized_network):
        """Sets the authorized_network of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork`

        :param authorized_network: The authorized_network of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :type authorized_network: str
        """

        self._authorized_network = authorized_network

    @property
    def disable_vpc_peering(self):
        """Gets the disable_vpc_peering of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide 'authorizedNetwork', by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.

        :return: The disable_vpc_peering of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :rtype: bool
        """
        return self._disable_vpc_peering

    @disable_vpc_peering.setter
    def disable_vpc_peering(self, disable_vpc_peering):
        """Sets the disable_vpc_peering of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide 'authorizedNetwork', by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.

        :param disable_vpc_peering: The disable_vpc_peering of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :type disable_vpc_peering: bool
        """

        self._disable_vpc_peering = disable_vpc_peering

    @property
    def runtime_location(self):
        """Gets the runtime_location of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Cloud Platform location for the runtime instance. Defaults to zone `us-west1-a`. If a region is provided, `EVAL` organizations will use the region for automatically selecting a zone for the runtime instance.

        :return: The runtime_location of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :rtype: str
        """
        return self._runtime_location

    @runtime_location.setter
    def runtime_location(self, runtime_location):
        """Sets the runtime_location of this GoogleCloudApigeeV1ProvisionOrganizationRequest.

        Cloud Platform location for the runtime instance. Defaults to zone `us-west1-a`. If a region is provided, `EVAL` organizations will use the region for automatically selecting a zone for the runtime instance.

        :param runtime_location: The runtime_location of this GoogleCloudApigeeV1ProvisionOrganizationRequest.
        :type runtime_location: str
        """

        self._runtime_location = runtime_location
