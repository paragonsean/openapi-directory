# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_documentation_file import GoogleCloudApigeeV1DocumentationFile
from openapi_server import util


class GoogleCloudApigeeV1OASDocumentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: str=None, spec: GoogleCloudApigeeV1DocumentationFile=None):
        """GoogleCloudApigeeV1OASDocumentation - a model defined in OpenAPI

        :param format: The format of this GoogleCloudApigeeV1OASDocumentation.
        :param spec: The spec of this GoogleCloudApigeeV1OASDocumentation.
        """
        self.openapi_types = {
            'format': str,
            'spec': GoogleCloudApigeeV1DocumentationFile
        }

        self.attribute_map = {
            'format': 'format',
            'spec': 'spec'
        }

        self._format = format
        self._spec = spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1OASDocumentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1OASDocumentation of this GoogleCloudApigeeV1OASDocumentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this GoogleCloudApigeeV1OASDocumentation.

        Output only. The format of the input specification file contents.

        :return: The format of this GoogleCloudApigeeV1OASDocumentation.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this GoogleCloudApigeeV1OASDocumentation.

        Output only. The format of the input specification file contents.

        :param format: The format of this GoogleCloudApigeeV1OASDocumentation.
        :type format: str
        """
        allowed_values = ["FORMAT_UNSPECIFIED", "YAML", "JSON"]  # noqa: E501
        if format not in allowed_values:
            raise ValueError(
                "Invalid value for `format` ({0}), must be one of {1}"
                .format(format, allowed_values)
            )

        self._format = format

    @property
    def spec(self):
        """Gets the spec of this GoogleCloudApigeeV1OASDocumentation.


        :return: The spec of this GoogleCloudApigeeV1OASDocumentation.
        :rtype: GoogleCloudApigeeV1DocumentationFile
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this GoogleCloudApigeeV1OASDocumentation.


        :param spec: The spec of this GoogleCloudApigeeV1OASDocumentation.
        :type spec: GoogleCloudApigeeV1DocumentationFile
        """

        self._spec = spec
