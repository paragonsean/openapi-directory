# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1DebugSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, create_time: str=None, filter: str=None, name: str=None, timeout: str=None, tracesize: int=None, validity: int=None):
        """GoogleCloudApigeeV1DebugSession - a model defined in OpenAPI

        :param count: The count of this GoogleCloudApigeeV1DebugSession.
        :param create_time: The create_time of this GoogleCloudApigeeV1DebugSession.
        :param filter: The filter of this GoogleCloudApigeeV1DebugSession.
        :param name: The name of this GoogleCloudApigeeV1DebugSession.
        :param timeout: The timeout of this GoogleCloudApigeeV1DebugSession.
        :param tracesize: The tracesize of this GoogleCloudApigeeV1DebugSession.
        :param validity: The validity of this GoogleCloudApigeeV1DebugSession.
        """
        self.openapi_types = {
            'count': int,
            'create_time': str,
            'filter': str,
            'name': str,
            'timeout': str,
            'tracesize': int,
            'validity': int
        }

        self.attribute_map = {
            'count': 'count',
            'create_time': 'createTime',
            'filter': 'filter',
            'name': 'name',
            'timeout': 'timeout',
            'tracesize': 'tracesize',
            'validity': 'validity'
        }

        self._count = count
        self._create_time = create_time
        self._filter = filter
        self._name = name
        self._timeout = timeout
        self._tracesize = tracesize
        self._validity = validity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1DebugSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1DebugSession of this GoogleCloudApigeeV1DebugSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this GoogleCloudApigeeV1DebugSession.

        Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10.

        :return: The count of this GoogleCloudApigeeV1DebugSession.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GoogleCloudApigeeV1DebugSession.

        Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10.

        :param count: The count of this GoogleCloudApigeeV1DebugSession.
        :type count: int
        """

        self._count = count

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudApigeeV1DebugSession.

        Output only. The first transaction creation timestamp, recorded by UAP.

        :return: The create_time of this GoogleCloudApigeeV1DebugSession.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudApigeeV1DebugSession.

        Output only. The first transaction creation timestamp, recorded by UAP.

        :param create_time: The create_time of this GoogleCloudApigeeV1DebugSession.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def filter(self):
        """Gets the filter of this GoogleCloudApigeeV1DebugSession.

        Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition.

        :return: The filter of this GoogleCloudApigeeV1DebugSession.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this GoogleCloudApigeeV1DebugSession.

        Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition.

        :param filter: The filter of this GoogleCloudApigeeV1DebugSession.
        :type filter: str
        """

        self._filter = filter

    @property
    def name(self):
        """Gets the name of this GoogleCloudApigeeV1DebugSession.

        A unique ID for this DebugSession.

        :return: The name of this GoogleCloudApigeeV1DebugSession.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudApigeeV1DebugSession.

        A unique ID for this DebugSession.

        :param name: The name of this GoogleCloudApigeeV1DebugSession.
        :type name: str
        """

        self._name = name

    @property
    def timeout(self):
        """Gets the timeout of this GoogleCloudApigeeV1DebugSession.

        Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided.

        :return: The timeout of this GoogleCloudApigeeV1DebugSession.
        :rtype: str
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this GoogleCloudApigeeV1DebugSession.

        Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided.

        :param timeout: The timeout of this GoogleCloudApigeeV1DebugSession.
        :type timeout: str
        """

        self._timeout = timeout

    @property
    def tracesize(self):
        """Gets the tracesize of this GoogleCloudApigeeV1DebugSession.

        Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.

        :return: The tracesize of this GoogleCloudApigeeV1DebugSession.
        :rtype: int
        """
        return self._tracesize

    @tracesize.setter
    def tracesize(self, tracesize):
        """Sets the tracesize of this GoogleCloudApigeeV1DebugSession.

        Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.

        :param tracesize: The tracesize of this GoogleCloudApigeeV1DebugSession.
        :type tracesize: int
        """

        self._tracesize = tracesize

    @property
    def validity(self):
        """Gets the validity of this GoogleCloudApigeeV1DebugSession.

        Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10.

        :return: The validity of this GoogleCloudApigeeV1DebugSession.
        :rtype: int
        """
        return self._validity

    @validity.setter
    def validity(self, validity):
        """Sets the validity of this GoogleCloudApigeeV1DebugSession.

        Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10.

        :param validity: The validity of this GoogleCloudApigeeV1DebugSession.
        :type validity: int
        """

        self._validity = validity
