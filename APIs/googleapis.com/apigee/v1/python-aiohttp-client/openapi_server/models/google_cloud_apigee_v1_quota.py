# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1Quota(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval: str=None, limit: str=None, time_unit: str=None):
        """GoogleCloudApigeeV1Quota - a model defined in OpenAPI

        :param interval: The interval of this GoogleCloudApigeeV1Quota.
        :param limit: The limit of this GoogleCloudApigeeV1Quota.
        :param time_unit: The time_unit of this GoogleCloudApigeeV1Quota.
        """
        self.openapi_types = {
            'interval': str,
            'limit': str,
            'time_unit': str
        }

        self.attribute_map = {
            'interval': 'interval',
            'limit': 'limit',
            'time_unit': 'timeUnit'
        }

        self._interval = interval
        self._limit = limit
        self._time_unit = time_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1Quota':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1Quota of this GoogleCloudApigeeV1Quota.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval(self):
        """Gets the interval of this GoogleCloudApigeeV1Quota.

        Required. Time interval over which the number of request messages is calculated.

        :return: The interval of this GoogleCloudApigeeV1Quota.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this GoogleCloudApigeeV1Quota.

        Required. Time interval over which the number of request messages is calculated.

        :param interval: The interval of this GoogleCloudApigeeV1Quota.
        :type interval: str
        """

        self._interval = interval

    @property
    def limit(self):
        """Gets the limit of this GoogleCloudApigeeV1Quota.

        Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.

        :return: The limit of this GoogleCloudApigeeV1Quota.
        :rtype: str
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this GoogleCloudApigeeV1Quota.

        Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.

        :param limit: The limit of this GoogleCloudApigeeV1Quota.
        :type limit: str
        """

        self._limit = limit

    @property
    def time_unit(self):
        """Gets the time_unit of this GoogleCloudApigeeV1Quota.

        Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null.

        :return: The time_unit of this GoogleCloudApigeeV1Quota.
        :rtype: str
        """
        return self._time_unit

    @time_unit.setter
    def time_unit(self, time_unit):
        """Sets the time_unit of this GoogleCloudApigeeV1Quota.

        Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null.

        :param time_unit: The time_unit of this GoogleCloudApigeeV1Quota.
        :type time_unit: str
        """

        self._time_unit = time_unit
