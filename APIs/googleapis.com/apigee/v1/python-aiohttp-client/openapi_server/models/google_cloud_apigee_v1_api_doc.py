# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudApigeeV1ApiDoc(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anon_allowed: bool=None, api_product_name: str=None, category_ids: List[str]=None, description: str=None, edge_api_product_name: str=None, graphql_endpoint_url: str=None, graphql_schema: str=None, graphql_schema_display_name: str=None, id: str=None, image_url: str=None, modified: str=None, published: bool=None, require_callback_url: bool=None, site_id: str=None, spec_id: str=None, title: str=None, visibility: bool=None):
        """GoogleCloudApigeeV1ApiDoc - a model defined in OpenAPI

        :param anon_allowed: The anon_allowed of this GoogleCloudApigeeV1ApiDoc.
        :param api_product_name: The api_product_name of this GoogleCloudApigeeV1ApiDoc.
        :param category_ids: The category_ids of this GoogleCloudApigeeV1ApiDoc.
        :param description: The description of this GoogleCloudApigeeV1ApiDoc.
        :param edge_api_product_name: The edge_api_product_name of this GoogleCloudApigeeV1ApiDoc.
        :param graphql_endpoint_url: The graphql_endpoint_url of this GoogleCloudApigeeV1ApiDoc.
        :param graphql_schema: The graphql_schema of this GoogleCloudApigeeV1ApiDoc.
        :param graphql_schema_display_name: The graphql_schema_display_name of this GoogleCloudApigeeV1ApiDoc.
        :param id: The id of this GoogleCloudApigeeV1ApiDoc.
        :param image_url: The image_url of this GoogleCloudApigeeV1ApiDoc.
        :param modified: The modified of this GoogleCloudApigeeV1ApiDoc.
        :param published: The published of this GoogleCloudApigeeV1ApiDoc.
        :param require_callback_url: The require_callback_url of this GoogleCloudApigeeV1ApiDoc.
        :param site_id: The site_id of this GoogleCloudApigeeV1ApiDoc.
        :param spec_id: The spec_id of this GoogleCloudApigeeV1ApiDoc.
        :param title: The title of this GoogleCloudApigeeV1ApiDoc.
        :param visibility: The visibility of this GoogleCloudApigeeV1ApiDoc.
        """
        self.openapi_types = {
            'anon_allowed': bool,
            'api_product_name': str,
            'category_ids': List[str],
            'description': str,
            'edge_api_product_name': str,
            'graphql_endpoint_url': str,
            'graphql_schema': str,
            'graphql_schema_display_name': str,
            'id': str,
            'image_url': str,
            'modified': str,
            'published': bool,
            'require_callback_url': bool,
            'site_id': str,
            'spec_id': str,
            'title': str,
            'visibility': bool
        }

        self.attribute_map = {
            'anon_allowed': 'anonAllowed',
            'api_product_name': 'apiProductName',
            'category_ids': 'categoryIds',
            'description': 'description',
            'edge_api_product_name': 'edgeAPIProductName',
            'graphql_endpoint_url': 'graphqlEndpointUrl',
            'graphql_schema': 'graphqlSchema',
            'graphql_schema_display_name': 'graphqlSchemaDisplayName',
            'id': 'id',
            'image_url': 'imageUrl',
            'modified': 'modified',
            'published': 'published',
            'require_callback_url': 'requireCallbackUrl',
            'site_id': 'siteId',
            'spec_id': 'specId',
            'title': 'title',
            'visibility': 'visibility'
        }

        self._anon_allowed = anon_allowed
        self._api_product_name = api_product_name
        self._category_ids = category_ids
        self._description = description
        self._edge_api_product_name = edge_api_product_name
        self._graphql_endpoint_url = graphql_endpoint_url
        self._graphql_schema = graphql_schema
        self._graphql_schema_display_name = graphql_schema_display_name
        self._id = id
        self._image_url = image_url
        self._modified = modified
        self._published = published
        self._require_callback_url = require_callback_url
        self._site_id = site_id
        self._spec_id = spec_id
        self._title = title
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1ApiDoc':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1ApiDoc of this GoogleCloudApigeeV1ApiDoc.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anon_allowed(self):
        """Gets the anon_allowed of this GoogleCloudApigeeV1ApiDoc.

        Optional. Boolean flag that manages user access to the catalog item. When true, the catalog item can be viewed anonymously; otherwise, only registered users may view it. Note: when the parent portal is enrolled in the [audience management feature](https://cloud.google.com/apigee/docs/api-platform/publish/portal/portal-audience#enrolling_in_the_beta_release_of_the_audience_management_feature), this flag is ignored; instead visibility must be further managed in the management UI (see [Manage the visibility of an API in your portal](https://cloud.google.com/apigee/docs/api-platform/publish/portal/publish-apis#visibility)).

        :return: The anon_allowed of this GoogleCloudApigeeV1ApiDoc.
        :rtype: bool
        """
        return self._anon_allowed

    @anon_allowed.setter
    def anon_allowed(self, anon_allowed):
        """Sets the anon_allowed of this GoogleCloudApigeeV1ApiDoc.

        Optional. Boolean flag that manages user access to the catalog item. When true, the catalog item can be viewed anonymously; otherwise, only registered users may view it. Note: when the parent portal is enrolled in the [audience management feature](https://cloud.google.com/apigee/docs/api-platform/publish/portal/portal-audience#enrolling_in_the_beta_release_of_the_audience_management_feature), this flag is ignored; instead visibility must be further managed in the management UI (see [Manage the visibility of an API in your portal](https://cloud.google.com/apigee/docs/api-platform/publish/portal/publish-apis#visibility)).

        :param anon_allowed: The anon_allowed of this GoogleCloudApigeeV1ApiDoc.
        :type anon_allowed: bool
        """

        self._anon_allowed = anon_allowed

    @property
    def api_product_name(self):
        """Gets the api_product_name of this GoogleCloudApigeeV1ApiDoc.

        Required. Immutable. The `name` field of the associated [API product](/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts). A portal may have only one catalog item associated with a given API product.

        :return: The api_product_name of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._api_product_name

    @api_product_name.setter
    def api_product_name(self, api_product_name):
        """Sets the api_product_name of this GoogleCloudApigeeV1ApiDoc.

        Required. Immutable. The `name` field of the associated [API product](/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts). A portal may have only one catalog item associated with a given API product.

        :param api_product_name: The api_product_name of this GoogleCloudApigeeV1ApiDoc.
        :type api_product_name: str
        """

        self._api_product_name = api_product_name

    @property
    def category_ids(self):
        """Gets the category_ids of this GoogleCloudApigeeV1ApiDoc.

        Optional. The IDs of the API categories to which this catalog item belongs.

        :return: The category_ids of this GoogleCloudApigeeV1ApiDoc.
        :rtype: List[str]
        """
        return self._category_ids

    @category_ids.setter
    def category_ids(self, category_ids):
        """Sets the category_ids of this GoogleCloudApigeeV1ApiDoc.

        Optional. The IDs of the API categories to which this catalog item belongs.

        :param category_ids: The category_ids of this GoogleCloudApigeeV1ApiDoc.
        :type category_ids: List[str]
        """

        self._category_ids = category_ids

    @property
    def description(self):
        """Gets the description of this GoogleCloudApigeeV1ApiDoc.

        Optional. Description of the catalog item. Max length is 10,000 characters.

        :return: The description of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudApigeeV1ApiDoc.

        Optional. Description of the catalog item. Max length is 10,000 characters.

        :param description: The description of this GoogleCloudApigeeV1ApiDoc.
        :type description: str
        """

        self._description = description

    @property
    def edge_api_product_name(self):
        """Gets the edge_api_product_name of this GoogleCloudApigeeV1ApiDoc.

        Optional. Immutable. DEPRECATED: use the `apiProductName` field instead

        :return: The edge_api_product_name of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._edge_api_product_name

    @edge_api_product_name.setter
    def edge_api_product_name(self, edge_api_product_name):
        """Sets the edge_api_product_name of this GoogleCloudApigeeV1ApiDoc.

        Optional. Immutable. DEPRECATED: use the `apiProductName` field instead

        :param edge_api_product_name: The edge_api_product_name of this GoogleCloudApigeeV1ApiDoc.
        :type edge_api_product_name: str
        """

        self._edge_api_product_name = edge_api_product_name

    @property
    def graphql_endpoint_url(self):
        """Gets the graphql_endpoint_url of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: manage documentation through the `getDocumentation` and `updateDocumentation` methods

        :return: The graphql_endpoint_url of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._graphql_endpoint_url

    @graphql_endpoint_url.setter
    def graphql_endpoint_url(self, graphql_endpoint_url):
        """Sets the graphql_endpoint_url of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: manage documentation through the `getDocumentation` and `updateDocumentation` methods

        :param graphql_endpoint_url: The graphql_endpoint_url of this GoogleCloudApigeeV1ApiDoc.
        :type graphql_endpoint_url: str
        """

        self._graphql_endpoint_url = graphql_endpoint_url

    @property
    def graphql_schema(self):
        """Gets the graphql_schema of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: manage documentation through the `getDocumentation` and `updateDocumentation` methods

        :return: The graphql_schema of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._graphql_schema

    @graphql_schema.setter
    def graphql_schema(self, graphql_schema):
        """Sets the graphql_schema of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: manage documentation through the `getDocumentation` and `updateDocumentation` methods

        :param graphql_schema: The graphql_schema of this GoogleCloudApigeeV1ApiDoc.
        :type graphql_schema: str
        """

        self._graphql_schema = graphql_schema

    @property
    def graphql_schema_display_name(self):
        """Gets the graphql_schema_display_name of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: manage documentation through the `getDocumentation` and `updateDocumentation` methods

        :return: The graphql_schema_display_name of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._graphql_schema_display_name

    @graphql_schema_display_name.setter
    def graphql_schema_display_name(self, graphql_schema_display_name):
        """Sets the graphql_schema_display_name of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: manage documentation through the `getDocumentation` and `updateDocumentation` methods

        :param graphql_schema_display_name: The graphql_schema_display_name of this GoogleCloudApigeeV1ApiDoc.
        :type graphql_schema_display_name: str
        """

        self._graphql_schema_display_name = graphql_schema_display_name

    @property
    def id(self):
        """Gets the id of this GoogleCloudApigeeV1ApiDoc.

        Output only. The ID of the catalog item.

        :return: The id of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudApigeeV1ApiDoc.

        Output only. The ID of the catalog item.

        :param id: The id of this GoogleCloudApigeeV1ApiDoc.
        :type id: str
        """

        self._id = id

    @property
    def image_url(self):
        """Gets the image_url of this GoogleCloudApigeeV1ApiDoc.

        Optional. Location of the image used for the catalog item in the catalog. For portal files, this can have the format `/files/{filename}`. Max length is 2,083 characters.

        :return: The image_url of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this GoogleCloudApigeeV1ApiDoc.

        Optional. Location of the image used for the catalog item in the catalog. For portal files, this can have the format `/files/{filename}`. Max length is 2,083 characters.

        :param image_url: The image_url of this GoogleCloudApigeeV1ApiDoc.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def modified(self):
        """Gets the modified of this GoogleCloudApigeeV1ApiDoc.

        Output only. Time the catalog item was last modified in milliseconds since epoch.

        :return: The modified of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this GoogleCloudApigeeV1ApiDoc.

        Output only. Time the catalog item was last modified in milliseconds since epoch.

        :param modified: The modified of this GoogleCloudApigeeV1ApiDoc.
        :type modified: str
        """

        self._modified = modified

    @property
    def published(self):
        """Gets the published of this GoogleCloudApigeeV1ApiDoc.

        Optional. Denotes whether the catalog item is published to the portal or is in a draft state. When the parent portal is enrolled in the [audience management feature](https://cloud.google.com/apigee/docs/api-platform/publish/portal/portal-audience#enrolling_in_the_beta_release_of_the_audience_management_feature), the visibility must be further managed in the management UI (see [Manage the visibility of an API in your portal](https://cloud.google.com/apigee/docs/api-platform/publish/portal/publish-apis#visibility)) before it can be visible to any users. If not enrolled in the audience management feature, the visibility is further managed by the `anonAllowed` flag.

        :return: The published of this GoogleCloudApigeeV1ApiDoc.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this GoogleCloudApigeeV1ApiDoc.

        Optional. Denotes whether the catalog item is published to the portal or is in a draft state. When the parent portal is enrolled in the [audience management feature](https://cloud.google.com/apigee/docs/api-platform/publish/portal/portal-audience#enrolling_in_the_beta_release_of_the_audience_management_feature), the visibility must be further managed in the management UI (see [Manage the visibility of an API in your portal](https://cloud.google.com/apigee/docs/api-platform/publish/portal/publish-apis#visibility)) before it can be visible to any users. If not enrolled in the audience management feature, the visibility is further managed by the `anonAllowed` flag.

        :param published: The published of this GoogleCloudApigeeV1ApiDoc.
        :type published: bool
        """

        self._published = published

    @property
    def require_callback_url(self):
        """Gets the require_callback_url of this GoogleCloudApigeeV1ApiDoc.

        Optional. Whether a callback URL is required when this catalog item's API product is enabled in a developer app. When true, a portal user will be required to input a URL when managing the app (this is typically used for the app's OAuth flow).

        :return: The require_callback_url of this GoogleCloudApigeeV1ApiDoc.
        :rtype: bool
        """
        return self._require_callback_url

    @require_callback_url.setter
    def require_callback_url(self, require_callback_url):
        """Sets the require_callback_url of this GoogleCloudApigeeV1ApiDoc.

        Optional. Whether a callback URL is required when this catalog item's API product is enabled in a developer app. When true, a portal user will be required to input a URL when managing the app (this is typically used for the app's OAuth flow).

        :param require_callback_url: The require_callback_url of this GoogleCloudApigeeV1ApiDoc.
        :type require_callback_url: bool
        """

        self._require_callback_url = require_callback_url

    @property
    def site_id(self):
        """Gets the site_id of this GoogleCloudApigeeV1ApiDoc.

        Output only. The ID of the parent portal.

        :return: The site_id of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this GoogleCloudApigeeV1ApiDoc.

        Output only. The ID of the parent portal.

        :param site_id: The site_id of this GoogleCloudApigeeV1ApiDoc.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def spec_id(self):
        """Gets the spec_id of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: DO NOT USE

        :return: The spec_id of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._spec_id

    @spec_id.setter
    def spec_id(self, spec_id):
        """Sets the spec_id of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: DO NOT USE

        :param spec_id: The spec_id of this GoogleCloudApigeeV1ApiDoc.
        :type spec_id: str
        """

        self._spec_id = spec_id

    @property
    def title(self):
        """Gets the title of this GoogleCloudApigeeV1ApiDoc.

        Required. The user-facing name of the catalog item. `title` must be a non-empty string with a max length of 255 characters.

        :return: The title of this GoogleCloudApigeeV1ApiDoc.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleCloudApigeeV1ApiDoc.

        Required. The user-facing name of the catalog item. `title` must be a non-empty string with a max length of 255 characters.

        :param title: The title of this GoogleCloudApigeeV1ApiDoc.
        :type title: str
        """

        self._title = title

    @property
    def visibility(self):
        """Gets the visibility of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: use the `published` field instead

        :return: The visibility of this GoogleCloudApigeeV1ApiDoc.
        :rtype: bool
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this GoogleCloudApigeeV1ApiDoc.

        Optional. DEPRECATED: use the `published` field instead

        :param visibility: The visibility of this GoogleCloudApigeeV1ApiDoc.
        :type visibility: bool
        """

        self._visibility = visibility
