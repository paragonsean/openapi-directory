# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_node_config import GoogleCloudApigeeV1NodeConfig
from openapi_server.models.google_cloud_apigee_v1_properties import GoogleCloudApigeeV1Properties
from openapi_server import util


class GoogleCloudApigeeV1Environment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_proxy_type: str=None, created_at: str=None, deployment_type: str=None, description: str=None, display_name: str=None, forward_proxy_uri: str=None, has_attached_flow_hooks: bool=None, last_modified_at: str=None, name: str=None, node_config: GoogleCloudApigeeV1NodeConfig=None, properties: GoogleCloudApigeeV1Properties=None, state: str=None, type: str=None):
        """GoogleCloudApigeeV1Environment - a model defined in OpenAPI

        :param api_proxy_type: The api_proxy_type of this GoogleCloudApigeeV1Environment.
        :param created_at: The created_at of this GoogleCloudApigeeV1Environment.
        :param deployment_type: The deployment_type of this GoogleCloudApigeeV1Environment.
        :param description: The description of this GoogleCloudApigeeV1Environment.
        :param display_name: The display_name of this GoogleCloudApigeeV1Environment.
        :param forward_proxy_uri: The forward_proxy_uri of this GoogleCloudApigeeV1Environment.
        :param has_attached_flow_hooks: The has_attached_flow_hooks of this GoogleCloudApigeeV1Environment.
        :param last_modified_at: The last_modified_at of this GoogleCloudApigeeV1Environment.
        :param name: The name of this GoogleCloudApigeeV1Environment.
        :param node_config: The node_config of this GoogleCloudApigeeV1Environment.
        :param properties: The properties of this GoogleCloudApigeeV1Environment.
        :param state: The state of this GoogleCloudApigeeV1Environment.
        :param type: The type of this GoogleCloudApigeeV1Environment.
        """
        self.openapi_types = {
            'api_proxy_type': str,
            'created_at': str,
            'deployment_type': str,
            'description': str,
            'display_name': str,
            'forward_proxy_uri': str,
            'has_attached_flow_hooks': bool,
            'last_modified_at': str,
            'name': str,
            'node_config': GoogleCloudApigeeV1NodeConfig,
            'properties': GoogleCloudApigeeV1Properties,
            'state': str,
            'type': str
        }

        self.attribute_map = {
            'api_proxy_type': 'apiProxyType',
            'created_at': 'createdAt',
            'deployment_type': 'deploymentType',
            'description': 'description',
            'display_name': 'displayName',
            'forward_proxy_uri': 'forwardProxyUri',
            'has_attached_flow_hooks': 'hasAttachedFlowHooks',
            'last_modified_at': 'lastModifiedAt',
            'name': 'name',
            'node_config': 'nodeConfig',
            'properties': 'properties',
            'state': 'state',
            'type': 'type'
        }

        self._api_proxy_type = api_proxy_type
        self._created_at = created_at
        self._deployment_type = deployment_type
        self._description = description
        self._display_name = display_name
        self._forward_proxy_uri = forward_proxy_uri
        self._has_attached_flow_hooks = has_attached_flow_hooks
        self._last_modified_at = last_modified_at
        self._name = name
        self._node_config = node_config
        self._properties = properties
        self._state = state
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1Environment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1Environment of this GoogleCloudApigeeV1Environment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_proxy_type(self):
        """Gets the api_proxy_type of this GoogleCloudApigeeV1Environment.

        Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be changed.

        :return: The api_proxy_type of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._api_proxy_type

    @api_proxy_type.setter
    def api_proxy_type(self, api_proxy_type):
        """Sets the api_proxy_type of this GoogleCloudApigeeV1Environment.

        Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be changed.

        :param api_proxy_type: The api_proxy_type of this GoogleCloudApigeeV1Environment.
        :type api_proxy_type: str
        """
        allowed_values = ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]  # noqa: E501
        if api_proxy_type not in allowed_values:
            raise ValueError(
                "Invalid value for `api_proxy_type` ({0}), must be one of {1}"
                .format(api_proxy_type, allowed_values)
            )

        self._api_proxy_type = api_proxy_type

    @property
    def created_at(self):
        """Gets the created_at of this GoogleCloudApigeeV1Environment.

        Output only. Creation time of this environment as milliseconds since epoch.

        :return: The created_at of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GoogleCloudApigeeV1Environment.

        Output only. Creation time of this environment as milliseconds since epoch.

        :param created_at: The created_at of this GoogleCloudApigeeV1Environment.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def deployment_type(self):
        """Gets the deployment_type of this GoogleCloudApigeeV1Environment.

        Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and cannot be changed. When you enable archive deployment, you will be **prevented from performing** a [subset of actions](/apigee/docs/api-platform/local-development/overview#prevented-actions) within the environment, including: * Managing the deployment of API proxy or shared flow revisions * Creating, updating, or deleting resource files * Creating, updating, or deleting target servers

        :return: The deployment_type of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._deployment_type

    @deployment_type.setter
    def deployment_type(self, deployment_type):
        """Sets the deployment_type of this GoogleCloudApigeeV1Environment.

        Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and cannot be changed. When you enable archive deployment, you will be **prevented from performing** a [subset of actions](/apigee/docs/api-platform/local-development/overview#prevented-actions) within the environment, including: * Managing the deployment of API proxy or shared flow revisions * Creating, updating, or deleting resource files * Creating, updating, or deleting target servers

        :param deployment_type: The deployment_type of this GoogleCloudApigeeV1Environment.
        :type deployment_type: str
        """
        allowed_values = ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]  # noqa: E501
        if deployment_type not in allowed_values:
            raise ValueError(
                "Invalid value for `deployment_type` ({0}), must be one of {1}"
                .format(deployment_type, allowed_values)
            )

        self._deployment_type = deployment_type

    @property
    def description(self):
        """Gets the description of this GoogleCloudApigeeV1Environment.

        Optional. Description of the environment.

        :return: The description of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudApigeeV1Environment.

        Optional. Description of the environment.

        :param description: The description of this GoogleCloudApigeeV1Environment.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudApigeeV1Environment.

        Optional. Display name for this environment.

        :return: The display_name of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudApigeeV1Environment.

        Optional. Display name for this environment.

        :param display_name: The display_name of this GoogleCloudApigeeV1Environment.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def forward_proxy_uri(self):
        """Gets the forward_proxy_uri of this GoogleCloudApigeeV1Environment.

        Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of {scheme}://{hostname}:{port}. Note that the scheme must be one of \"http\" or \"https\", and the port must be supplied. To remove a forward proxy setting, update the field to an empty value. Note: At this time, PUT operations to add forwardProxyUri to an existing environment fail if the environment has nodeConfig set up. To successfully add the forwardProxyUri setting in this case, include the NodeConfig details with the request.

        :return: The forward_proxy_uri of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._forward_proxy_uri

    @forward_proxy_uri.setter
    def forward_proxy_uri(self, forward_proxy_uri):
        """Sets the forward_proxy_uri of this GoogleCloudApigeeV1Environment.

        Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of {scheme}://{hostname}:{port}. Note that the scheme must be one of \"http\" or \"https\", and the port must be supplied. To remove a forward proxy setting, update the field to an empty value. Note: At this time, PUT operations to add forwardProxyUri to an existing environment fail if the environment has nodeConfig set up. To successfully add the forwardProxyUri setting in this case, include the NodeConfig details with the request.

        :param forward_proxy_uri: The forward_proxy_uri of this GoogleCloudApigeeV1Environment.
        :type forward_proxy_uri: str
        """

        self._forward_proxy_uri = forward_proxy_uri

    @property
    def has_attached_flow_hooks(self):
        """Gets the has_attached_flow_hooks of this GoogleCloudApigeeV1Environment.


        :return: The has_attached_flow_hooks of this GoogleCloudApigeeV1Environment.
        :rtype: bool
        """
        return self._has_attached_flow_hooks

    @has_attached_flow_hooks.setter
    def has_attached_flow_hooks(self, has_attached_flow_hooks):
        """Sets the has_attached_flow_hooks of this GoogleCloudApigeeV1Environment.


        :param has_attached_flow_hooks: The has_attached_flow_hooks of this GoogleCloudApigeeV1Environment.
        :type has_attached_flow_hooks: bool
        """

        self._has_attached_flow_hooks = has_attached_flow_hooks

    @property
    def last_modified_at(self):
        """Gets the last_modified_at of this GoogleCloudApigeeV1Environment.

        Output only. Last modification time of this environment as milliseconds since epoch.

        :return: The last_modified_at of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._last_modified_at

    @last_modified_at.setter
    def last_modified_at(self, last_modified_at):
        """Sets the last_modified_at of this GoogleCloudApigeeV1Environment.

        Output only. Last modification time of this environment as milliseconds since epoch.

        :param last_modified_at: The last_modified_at of this GoogleCloudApigeeV1Environment.
        :type last_modified_at: str
        """

        self._last_modified_at = last_modified_at

    @property
    def name(self):
        """Gets the name of this GoogleCloudApigeeV1Environment.

        Required. Name of the environment. Values must match the regular expression `^[.\\\\p{Alnum}-_]{1,255}$`

        :return: The name of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudApigeeV1Environment.

        Required. Name of the environment. Values must match the regular expression `^[.\\\\p{Alnum}-_]{1,255}$`

        :param name: The name of this GoogleCloudApigeeV1Environment.
        :type name: str
        """

        self._name = name

    @property
    def node_config(self):
        """Gets the node_config of this GoogleCloudApigeeV1Environment.


        :return: The node_config of this GoogleCloudApigeeV1Environment.
        :rtype: GoogleCloudApigeeV1NodeConfig
        """
        return self._node_config

    @node_config.setter
    def node_config(self, node_config):
        """Sets the node_config of this GoogleCloudApigeeV1Environment.


        :param node_config: The node_config of this GoogleCloudApigeeV1Environment.
        :type node_config: GoogleCloudApigeeV1NodeConfig
        """

        self._node_config = node_config

    @property
    def properties(self):
        """Gets the properties of this GoogleCloudApigeeV1Environment.


        :return: The properties of this GoogleCloudApigeeV1Environment.
        :rtype: GoogleCloudApigeeV1Properties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this GoogleCloudApigeeV1Environment.


        :param properties: The properties of this GoogleCloudApigeeV1Environment.
        :type properties: GoogleCloudApigeeV1Properties
        """

        self._properties = properties

    @property
    def state(self):
        """Gets the state of this GoogleCloudApigeeV1Environment.

        Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.

        :return: The state of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudApigeeV1Environment.

        Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.

        :param state: The state of this GoogleCloudApigeeV1Environment.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "CREATING", "ACTIVE", "DELETING", "UPDATING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def type(self):
        """Gets the type of this GoogleCloudApigeeV1Environment.

        Optional. EnvironmentType selected for the environment.

        :return: The type of this GoogleCloudApigeeV1Environment.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudApigeeV1Environment.

        Optional. EnvironmentType selected for the environment.

        :param type: The type of this GoogleCloudApigeeV1Environment.
        :type type: str
        """
        allowed_values = ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
