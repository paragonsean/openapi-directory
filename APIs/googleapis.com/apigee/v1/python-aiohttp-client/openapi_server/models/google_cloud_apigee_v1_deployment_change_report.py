# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_deployment_change_report_routing_change import GoogleCloudApigeeV1DeploymentChangeReportRoutingChange
from openapi_server.models.google_cloud_apigee_v1_deployment_change_report_routing_conflict import GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict
from openapi_server.models.google_rpc_precondition_failure import GoogleRpcPreconditionFailure
from openapi_server import util


class GoogleCloudApigeeV1DeploymentChangeReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, routing_changes: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingChange]=None, routing_conflicts: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict]=None, validation_errors: GoogleRpcPreconditionFailure=None):
        """GoogleCloudApigeeV1DeploymentChangeReport - a model defined in OpenAPI

        :param routing_changes: The routing_changes of this GoogleCloudApigeeV1DeploymentChangeReport.
        :param routing_conflicts: The routing_conflicts of this GoogleCloudApigeeV1DeploymentChangeReport.
        :param validation_errors: The validation_errors of this GoogleCloudApigeeV1DeploymentChangeReport.
        """
        self.openapi_types = {
            'routing_changes': List[GoogleCloudApigeeV1DeploymentChangeReportRoutingChange],
            'routing_conflicts': List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict],
            'validation_errors': GoogleRpcPreconditionFailure
        }

        self.attribute_map = {
            'routing_changes': 'routingChanges',
            'routing_conflicts': 'routingConflicts',
            'validation_errors': 'validationErrors'
        }

        self._routing_changes = routing_changes
        self._routing_conflicts = routing_conflicts
        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1DeploymentChangeReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1DeploymentChangeReport of this GoogleCloudApigeeV1DeploymentChangeReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def routing_changes(self):
        """Gets the routing_changes of this GoogleCloudApigeeV1DeploymentChangeReport.

        All routing changes that may result from a deployment request.

        :return: The routing_changes of this GoogleCloudApigeeV1DeploymentChangeReport.
        :rtype: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingChange]
        """
        return self._routing_changes

    @routing_changes.setter
    def routing_changes(self, routing_changes):
        """Sets the routing_changes of this GoogleCloudApigeeV1DeploymentChangeReport.

        All routing changes that may result from a deployment request.

        :param routing_changes: The routing_changes of this GoogleCloudApigeeV1DeploymentChangeReport.
        :type routing_changes: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingChange]
        """

        self._routing_changes = routing_changes

    @property
    def routing_conflicts(self):
        """Gets the routing_conflicts of this GoogleCloudApigeeV1DeploymentChangeReport.

        All base path conflicts detected for a deployment request.

        :return: The routing_conflicts of this GoogleCloudApigeeV1DeploymentChangeReport.
        :rtype: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict]
        """
        return self._routing_conflicts

    @routing_conflicts.setter
    def routing_conflicts(self, routing_conflicts):
        """Sets the routing_conflicts of this GoogleCloudApigeeV1DeploymentChangeReport.

        All base path conflicts detected for a deployment request.

        :param routing_conflicts: The routing_conflicts of this GoogleCloudApigeeV1DeploymentChangeReport.
        :type routing_conflicts: List[GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict]
        """

        self._routing_conflicts = routing_conflicts

    @property
    def validation_errors(self):
        """Gets the validation_errors of this GoogleCloudApigeeV1DeploymentChangeReport.


        :return: The validation_errors of this GoogleCloudApigeeV1DeploymentChangeReport.
        :rtype: GoogleRpcPreconditionFailure
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this GoogleCloudApigeeV1DeploymentChangeReport.


        :param validation_errors: The validation_errors of this GoogleCloudApigeeV1DeploymentChangeReport.
        :type validation_errors: GoogleRpcPreconditionFailure
        """

        self._validation_errors = validation_errors
