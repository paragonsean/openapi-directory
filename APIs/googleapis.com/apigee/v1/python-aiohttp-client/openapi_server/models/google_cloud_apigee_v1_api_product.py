# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_apigee_v1_attribute import GoogleCloudApigeeV1Attribute
from openapi_server.models.google_cloud_apigee_v1_graph_ql_operation_group import GoogleCloudApigeeV1GraphQLOperationGroup
from openapi_server.models.google_cloud_apigee_v1_grpc_operation_group import GoogleCloudApigeeV1GrpcOperationGroup
from openapi_server.models.google_cloud_apigee_v1_operation_group import GoogleCloudApigeeV1OperationGroup
from openapi_server import util


class GoogleCloudApigeeV1ApiProduct(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_resources: List[str]=None, approval_type: str=None, attributes: List[GoogleCloudApigeeV1Attribute]=None, created_at: str=None, description: str=None, display_name: str=None, environments: List[str]=None, graphql_operation_group: GoogleCloudApigeeV1GraphQLOperationGroup=None, grpc_operation_group: GoogleCloudApigeeV1GrpcOperationGroup=None, last_modified_at: str=None, name: str=None, operation_group: GoogleCloudApigeeV1OperationGroup=None, proxies: List[str]=None, quota: str=None, quota_counter_scope: str=None, quota_interval: str=None, quota_time_unit: str=None, scopes: List[str]=None):
        """GoogleCloudApigeeV1ApiProduct - a model defined in OpenAPI

        :param api_resources: The api_resources of this GoogleCloudApigeeV1ApiProduct.
        :param approval_type: The approval_type of this GoogleCloudApigeeV1ApiProduct.
        :param attributes: The attributes of this GoogleCloudApigeeV1ApiProduct.
        :param created_at: The created_at of this GoogleCloudApigeeV1ApiProduct.
        :param description: The description of this GoogleCloudApigeeV1ApiProduct.
        :param display_name: The display_name of this GoogleCloudApigeeV1ApiProduct.
        :param environments: The environments of this GoogleCloudApigeeV1ApiProduct.
        :param graphql_operation_group: The graphql_operation_group of this GoogleCloudApigeeV1ApiProduct.
        :param grpc_operation_group: The grpc_operation_group of this GoogleCloudApigeeV1ApiProduct.
        :param last_modified_at: The last_modified_at of this GoogleCloudApigeeV1ApiProduct.
        :param name: The name of this GoogleCloudApigeeV1ApiProduct.
        :param operation_group: The operation_group of this GoogleCloudApigeeV1ApiProduct.
        :param proxies: The proxies of this GoogleCloudApigeeV1ApiProduct.
        :param quota: The quota of this GoogleCloudApigeeV1ApiProduct.
        :param quota_counter_scope: The quota_counter_scope of this GoogleCloudApigeeV1ApiProduct.
        :param quota_interval: The quota_interval of this GoogleCloudApigeeV1ApiProduct.
        :param quota_time_unit: The quota_time_unit of this GoogleCloudApigeeV1ApiProduct.
        :param scopes: The scopes of this GoogleCloudApigeeV1ApiProduct.
        """
        self.openapi_types = {
            'api_resources': List[str],
            'approval_type': str,
            'attributes': List[GoogleCloudApigeeV1Attribute],
            'created_at': str,
            'description': str,
            'display_name': str,
            'environments': List[str],
            'graphql_operation_group': GoogleCloudApigeeV1GraphQLOperationGroup,
            'grpc_operation_group': GoogleCloudApigeeV1GrpcOperationGroup,
            'last_modified_at': str,
            'name': str,
            'operation_group': GoogleCloudApigeeV1OperationGroup,
            'proxies': List[str],
            'quota': str,
            'quota_counter_scope': str,
            'quota_interval': str,
            'quota_time_unit': str,
            'scopes': List[str]
        }

        self.attribute_map = {
            'api_resources': 'apiResources',
            'approval_type': 'approvalType',
            'attributes': 'attributes',
            'created_at': 'createdAt',
            'description': 'description',
            'display_name': 'displayName',
            'environments': 'environments',
            'graphql_operation_group': 'graphqlOperationGroup',
            'grpc_operation_group': 'grpcOperationGroup',
            'last_modified_at': 'lastModifiedAt',
            'name': 'name',
            'operation_group': 'operationGroup',
            'proxies': 'proxies',
            'quota': 'quota',
            'quota_counter_scope': 'quotaCounterScope',
            'quota_interval': 'quotaInterval',
            'quota_time_unit': 'quotaTimeUnit',
            'scopes': 'scopes'
        }

        self._api_resources = api_resources
        self._approval_type = approval_type
        self._attributes = attributes
        self._created_at = created_at
        self._description = description
        self._display_name = display_name
        self._environments = environments
        self._graphql_operation_group = graphql_operation_group
        self._grpc_operation_group = grpc_operation_group
        self._last_modified_at = last_modified_at
        self._name = name
        self._operation_group = operation_group
        self._proxies = proxies
        self._quota = quota
        self._quota_counter_scope = quota_counter_scope
        self._quota_interval = quota_interval
        self._quota_time_unit = quota_time_unit
        self._scopes = scopes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudApigeeV1ApiProduct':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudApigeeV1ApiProduct of this GoogleCloudApigeeV1ApiProduct.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_resources(self):
        """Gets the api_resources of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.

        :return: The api_resources of this GoogleCloudApigeeV1ApiProduct.
        :rtype: List[str]
        """
        return self._api_resources

    @api_resources.setter
    def api_resources(self, api_resources):
        """Sets the api_resources of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.

        :param api_resources: The api_resources of this GoogleCloudApigeeV1ApiProduct.
        :type api_resources: List[str]
        """

        self._api_resources = api_resources

    @property
    def approval_type(self):
        """Gets the approval_type of this GoogleCloudApigeeV1ApiProduct.

        Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.

        :return: The approval_type of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._approval_type

    @approval_type.setter
    def approval_type(self, approval_type):
        """Sets the approval_type of this GoogleCloudApigeeV1ApiProduct.

        Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.

        :param approval_type: The approval_type of this GoogleCloudApigeeV1ApiProduct.
        :type approval_type: str
        """

        self._approval_type = approval_type

    @property
    def attributes(self):
        """Gets the attributes of this GoogleCloudApigeeV1ApiProduct.

        Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.

        :return: The attributes of this GoogleCloudApigeeV1ApiProduct.
        :rtype: List[GoogleCloudApigeeV1Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GoogleCloudApigeeV1ApiProduct.

        Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.

        :param attributes: The attributes of this GoogleCloudApigeeV1ApiProduct.
        :type attributes: List[GoogleCloudApigeeV1Attribute]
        """

        self._attributes = attributes

    @property
    def created_at(self):
        """Gets the created_at of this GoogleCloudApigeeV1ApiProduct.

        Response only. Creation time of this environment as milliseconds since epoch.

        :return: The created_at of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GoogleCloudApigeeV1ApiProduct.

        Response only. Creation time of this environment as milliseconds since epoch.

        :param created_at: The created_at of this GoogleCloudApigeeV1ApiProduct.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this GoogleCloudApigeeV1ApiProduct.

        Description of the API product. Include key information about the API product that is not captured by other fields.

        :return: The description of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudApigeeV1ApiProduct.

        Description of the API product. Include key information about the API product that is not captured by other fields.

        :param description: The description of this GoogleCloudApigeeV1ApiProduct.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudApigeeV1ApiProduct.

        Name displayed in the UI or developer portal to developers registering for API access.

        :return: The display_name of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudApigeeV1ApiProduct.

        Name displayed in the UI or developer portal to developers registering for API access.

        :param display_name: The display_name of this GoogleCloudApigeeV1ApiProduct.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def environments(self):
        """Gets the environments of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.

        :return: The environments of this GoogleCloudApigeeV1ApiProduct.
        :rtype: List[str]
        """
        return self._environments

    @environments.setter
    def environments(self, environments):
        """Sets the environments of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.

        :param environments: The environments of this GoogleCloudApigeeV1ApiProduct.
        :type environments: List[str]
        """

        self._environments = environments

    @property
    def graphql_operation_group(self):
        """Gets the graphql_operation_group of this GoogleCloudApigeeV1ApiProduct.


        :return: The graphql_operation_group of this GoogleCloudApigeeV1ApiProduct.
        :rtype: GoogleCloudApigeeV1GraphQLOperationGroup
        """
        return self._graphql_operation_group

    @graphql_operation_group.setter
    def graphql_operation_group(self, graphql_operation_group):
        """Sets the graphql_operation_group of this GoogleCloudApigeeV1ApiProduct.


        :param graphql_operation_group: The graphql_operation_group of this GoogleCloudApigeeV1ApiProduct.
        :type graphql_operation_group: GoogleCloudApigeeV1GraphQLOperationGroup
        """

        self._graphql_operation_group = graphql_operation_group

    @property
    def grpc_operation_group(self):
        """Gets the grpc_operation_group of this GoogleCloudApigeeV1ApiProduct.


        :return: The grpc_operation_group of this GoogleCloudApigeeV1ApiProduct.
        :rtype: GoogleCloudApigeeV1GrpcOperationGroup
        """
        return self._grpc_operation_group

    @grpc_operation_group.setter
    def grpc_operation_group(self, grpc_operation_group):
        """Sets the grpc_operation_group of this GoogleCloudApigeeV1ApiProduct.


        :param grpc_operation_group: The grpc_operation_group of this GoogleCloudApigeeV1ApiProduct.
        :type grpc_operation_group: GoogleCloudApigeeV1GrpcOperationGroup
        """

        self._grpc_operation_group = grpc_operation_group

    @property
    def last_modified_at(self):
        """Gets the last_modified_at of this GoogleCloudApigeeV1ApiProduct.

        Response only. Modified time of this environment as milliseconds since epoch.

        :return: The last_modified_at of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._last_modified_at

    @last_modified_at.setter
    def last_modified_at(self, last_modified_at):
        """Sets the last_modified_at of this GoogleCloudApigeeV1ApiProduct.

        Response only. Modified time of this environment as milliseconds since epoch.

        :param last_modified_at: The last_modified_at of this GoogleCloudApigeeV1ApiProduct.
        :type last_modified_at: str
        """

        self._last_modified_at = last_modified_at

    @property
    def name(self):
        """Gets the name of this GoogleCloudApigeeV1ApiProduct.

        Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\\-$ %`. **Note:** The internal name cannot be edited when updating the API product.

        :return: The name of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudApigeeV1ApiProduct.

        Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\\-$ %`. **Note:** The internal name cannot be edited when updating the API product.

        :param name: The name of this GoogleCloudApigeeV1ApiProduct.
        :type name: str
        """

        self._name = name

    @property
    def operation_group(self):
        """Gets the operation_group of this GoogleCloudApigeeV1ApiProduct.


        :return: The operation_group of this GoogleCloudApigeeV1ApiProduct.
        :rtype: GoogleCloudApigeeV1OperationGroup
        """
        return self._operation_group

    @operation_group.setter
    def operation_group(self, operation_group):
        """Sets the operation_group of this GoogleCloudApigeeV1ApiProduct.


        :param operation_group: The operation_group of this GoogleCloudApigeeV1ApiProduct.
        :type operation_group: GoogleCloudApigeeV1OperationGroup
        """

        self._operation_group = operation_group

    @property
    def proxies(self):
        """Gets the proxies of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.

        :return: The proxies of this GoogleCloudApigeeV1ApiProduct.
        :rtype: List[str]
        """
        return self._proxies

    @proxies.setter
    def proxies(self, proxies):
        """Sets the proxies of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation.

        :param proxies: The proxies of this GoogleCloudApigeeV1ApiProduct.
        :type proxies: List[str]
        """

        self._proxies = proxies

    @property
    def quota(self):
        """Gets the quota of this GoogleCloudApigeeV1ApiProduct.

        Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.

        :return: The quota of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """Sets the quota of this GoogleCloudApigeeV1ApiProduct.

        Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.

        :param quota: The quota of this GoogleCloudApigeeV1ApiProduct.
        :type quota: str
        """

        self._quota = quota

    @property
    def quota_counter_scope(self):
        """Gets the quota_counter_scope of this GoogleCloudApigeeV1ApiProduct.

        Scope of the quota decides how the quota counter gets applied and evaluate for quota violation. If the Scope is set as PROXY, then all the operations defined for the APIproduct that are associated with the same proxy will share the same quota counter set at the APIproduct level, making it a global counter at a proxy level. If the Scope is set as OPERATION, then each operations get the counter set at the API product dedicated, making it a local counter. Note that, the QuotaCounterScope applies only when an operation does not have dedicated quota set for itself.

        :return: The quota_counter_scope of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._quota_counter_scope

    @quota_counter_scope.setter
    def quota_counter_scope(self, quota_counter_scope):
        """Sets the quota_counter_scope of this GoogleCloudApigeeV1ApiProduct.

        Scope of the quota decides how the quota counter gets applied and evaluate for quota violation. If the Scope is set as PROXY, then all the operations defined for the APIproduct that are associated with the same proxy will share the same quota counter set at the APIproduct level, making it a global counter at a proxy level. If the Scope is set as OPERATION, then each operations get the counter set at the API product dedicated, making it a local counter. Note that, the QuotaCounterScope applies only when an operation does not have dedicated quota set for itself.

        :param quota_counter_scope: The quota_counter_scope of this GoogleCloudApigeeV1ApiProduct.
        :type quota_counter_scope: str
        """
        allowed_values = ["QUOTA_COUNTER_SCOPE_UNSPECIFIED", "PROXY", "OPERATION"]  # noqa: E501
        if quota_counter_scope not in allowed_values:
            raise ValueError(
                "Invalid value for `quota_counter_scope` ({0}), must be one of {1}"
                .format(quota_counter_scope, allowed_values)
            )

        self._quota_counter_scope = quota_counter_scope

    @property
    def quota_interval(self):
        """Gets the quota_interval of this GoogleCloudApigeeV1ApiProduct.

        Time interval over which the number of request messages is calculated.

        :return: The quota_interval of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._quota_interval

    @quota_interval.setter
    def quota_interval(self, quota_interval):
        """Sets the quota_interval of this GoogleCloudApigeeV1ApiProduct.

        Time interval over which the number of request messages is calculated.

        :param quota_interval: The quota_interval of this GoogleCloudApigeeV1ApiProduct.
        :type quota_interval: str
        """

        self._quota_interval = quota_interval

    @property
    def quota_time_unit(self):
        """Gets the quota_time_unit of this GoogleCloudApigeeV1ApiProduct.

        Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`.

        :return: The quota_time_unit of this GoogleCloudApigeeV1ApiProduct.
        :rtype: str
        """
        return self._quota_time_unit

    @quota_time_unit.setter
    def quota_time_unit(self, quota_time_unit):
        """Sets the quota_time_unit of this GoogleCloudApigeeV1ApiProduct.

        Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`.

        :param quota_time_unit: The quota_time_unit of this GoogleCloudApigeeV1ApiProduct.
        :type quota_time_unit: str
        """

        self._quota_time_unit = quota_time_unit

    @property
    def scopes(self):
        """Gets the scopes of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.

        :return: The scopes of this GoogleCloudApigeeV1ApiProduct.
        :rtype: List[str]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes):
        """Sets the scopes of this GoogleCloudApigeeV1ApiProduct.

        Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product.

        :param scopes: The scopes of this GoogleCloudApigeeV1ApiProduct.
        :type scopes: List[str]
        """

        self._scopes = scopes
