/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1AddonsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1AddonsConfig::OAIGoogleCloudApigeeV1AddonsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1AddonsConfig::OAIGoogleCloudApigeeV1AddonsConfig() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1AddonsConfig::~OAIGoogleCloudApigeeV1AddonsConfig() {}

void OAIGoogleCloudApigeeV1AddonsConfig::initializeModel() {

    m_advanced_api_ops_config_isSet = false;
    m_advanced_api_ops_config_isValid = false;

    m_analytics_config_isSet = false;
    m_analytics_config_isValid = false;

    m_api_security_config_isSet = false;
    m_api_security_config_isValid = false;

    m_connectors_platform_config_isSet = false;
    m_connectors_platform_config_isValid = false;

    m_integration_config_isSet = false;
    m_integration_config_isValid = false;

    m_monetization_config_isSet = false;
    m_monetization_config_isValid = false;
}

void OAIGoogleCloudApigeeV1AddonsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1AddonsConfig::fromJsonObject(QJsonObject json) {

    m_advanced_api_ops_config_isValid = ::OpenAPI::fromJsonValue(m_advanced_api_ops_config, json[QString("advancedApiOpsConfig")]);
    m_advanced_api_ops_config_isSet = !json[QString("advancedApiOpsConfig")].isNull() && m_advanced_api_ops_config_isValid;

    m_analytics_config_isValid = ::OpenAPI::fromJsonValue(m_analytics_config, json[QString("analyticsConfig")]);
    m_analytics_config_isSet = !json[QString("analyticsConfig")].isNull() && m_analytics_config_isValid;

    m_api_security_config_isValid = ::OpenAPI::fromJsonValue(m_api_security_config, json[QString("apiSecurityConfig")]);
    m_api_security_config_isSet = !json[QString("apiSecurityConfig")].isNull() && m_api_security_config_isValid;

    m_connectors_platform_config_isValid = ::OpenAPI::fromJsonValue(m_connectors_platform_config, json[QString("connectorsPlatformConfig")]);
    m_connectors_platform_config_isSet = !json[QString("connectorsPlatformConfig")].isNull() && m_connectors_platform_config_isValid;

    m_integration_config_isValid = ::OpenAPI::fromJsonValue(m_integration_config, json[QString("integrationConfig")]);
    m_integration_config_isSet = !json[QString("integrationConfig")].isNull() && m_integration_config_isValid;

    m_monetization_config_isValid = ::OpenAPI::fromJsonValue(m_monetization_config, json[QString("monetizationConfig")]);
    m_monetization_config_isSet = !json[QString("monetizationConfig")].isNull() && m_monetization_config_isValid;
}

QString OAIGoogleCloudApigeeV1AddonsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1AddonsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_advanced_api_ops_config.isSet()) {
        obj.insert(QString("advancedApiOpsConfig"), ::OpenAPI::toJsonValue(m_advanced_api_ops_config));
    }
    if (m_analytics_config.isSet()) {
        obj.insert(QString("analyticsConfig"), ::OpenAPI::toJsonValue(m_analytics_config));
    }
    if (m_api_security_config.isSet()) {
        obj.insert(QString("apiSecurityConfig"), ::OpenAPI::toJsonValue(m_api_security_config));
    }
    if (m_connectors_platform_config.isSet()) {
        obj.insert(QString("connectorsPlatformConfig"), ::OpenAPI::toJsonValue(m_connectors_platform_config));
    }
    if (m_integration_config.isSet()) {
        obj.insert(QString("integrationConfig"), ::OpenAPI::toJsonValue(m_integration_config));
    }
    if (m_monetization_config.isSet()) {
        obj.insert(QString("monetizationConfig"), ::OpenAPI::toJsonValue(m_monetization_config));
    }
    return obj;
}

OAIGoogleCloudApigeeV1AdvancedApiOpsConfig OAIGoogleCloudApigeeV1AddonsConfig::getAdvancedApiOpsConfig() const {
    return m_advanced_api_ops_config;
}
void OAIGoogleCloudApigeeV1AddonsConfig::setAdvancedApiOpsConfig(const OAIGoogleCloudApigeeV1AdvancedApiOpsConfig &advanced_api_ops_config) {
    m_advanced_api_ops_config = advanced_api_ops_config;
    m_advanced_api_ops_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_advanced_api_ops_config_Set() const{
    return m_advanced_api_ops_config_isSet;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_advanced_api_ops_config_Valid() const{
    return m_advanced_api_ops_config_isValid;
}

OAIGoogleCloudApigeeV1AnalyticsConfig OAIGoogleCloudApigeeV1AddonsConfig::getAnalyticsConfig() const {
    return m_analytics_config;
}
void OAIGoogleCloudApigeeV1AddonsConfig::setAnalyticsConfig(const OAIGoogleCloudApigeeV1AnalyticsConfig &analytics_config) {
    m_analytics_config = analytics_config;
    m_analytics_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_analytics_config_Set() const{
    return m_analytics_config_isSet;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_analytics_config_Valid() const{
    return m_analytics_config_isValid;
}

OAIGoogleCloudApigeeV1ApiSecurityConfig OAIGoogleCloudApigeeV1AddonsConfig::getApiSecurityConfig() const {
    return m_api_security_config;
}
void OAIGoogleCloudApigeeV1AddonsConfig::setApiSecurityConfig(const OAIGoogleCloudApigeeV1ApiSecurityConfig &api_security_config) {
    m_api_security_config = api_security_config;
    m_api_security_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_api_security_config_Set() const{
    return m_api_security_config_isSet;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_api_security_config_Valid() const{
    return m_api_security_config_isValid;
}

OAIGoogleCloudApigeeV1ConnectorsPlatformConfig OAIGoogleCloudApigeeV1AddonsConfig::getConnectorsPlatformConfig() const {
    return m_connectors_platform_config;
}
void OAIGoogleCloudApigeeV1AddonsConfig::setConnectorsPlatformConfig(const OAIGoogleCloudApigeeV1ConnectorsPlatformConfig &connectors_platform_config) {
    m_connectors_platform_config = connectors_platform_config;
    m_connectors_platform_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_connectors_platform_config_Set() const{
    return m_connectors_platform_config_isSet;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_connectors_platform_config_Valid() const{
    return m_connectors_platform_config_isValid;
}

OAIGoogleCloudApigeeV1IntegrationConfig OAIGoogleCloudApigeeV1AddonsConfig::getIntegrationConfig() const {
    return m_integration_config;
}
void OAIGoogleCloudApigeeV1AddonsConfig::setIntegrationConfig(const OAIGoogleCloudApigeeV1IntegrationConfig &integration_config) {
    m_integration_config = integration_config;
    m_integration_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_integration_config_Set() const{
    return m_integration_config_isSet;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_integration_config_Valid() const{
    return m_integration_config_isValid;
}

OAIGoogleCloudApigeeV1MonetizationConfig OAIGoogleCloudApigeeV1AddonsConfig::getMonetizationConfig() const {
    return m_monetization_config;
}
void OAIGoogleCloudApigeeV1AddonsConfig::setMonetizationConfig(const OAIGoogleCloudApigeeV1MonetizationConfig &monetization_config) {
    m_monetization_config = monetization_config;
    m_monetization_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_monetization_config_Set() const{
    return m_monetization_config_isSet;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::is_monetization_config_Valid() const{
    return m_monetization_config_isValid;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advanced_api_ops_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_analytics_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_security_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_connectors_platform_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_integration_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monetization_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1AddonsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
