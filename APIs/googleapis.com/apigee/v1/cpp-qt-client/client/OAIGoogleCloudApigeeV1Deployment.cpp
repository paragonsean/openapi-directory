/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Deployment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Deployment::OAIGoogleCloudApigeeV1Deployment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Deployment::OAIGoogleCloudApigeeV1Deployment() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Deployment::~OAIGoogleCloudApigeeV1Deployment() {}

void OAIGoogleCloudApigeeV1Deployment::initializeModel() {

    m_api_proxy_isSet = false;
    m_api_proxy_isValid = false;

    m_deploy_start_time_isSet = false;
    m_deploy_start_time_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_instances_isSet = false;
    m_instances_isValid = false;

    m_pods_isSet = false;
    m_pods_isValid = false;

    m_proxy_deployment_type_isSet = false;
    m_proxy_deployment_type_isValid = false;

    m_revision_isSet = false;
    m_revision_isValid = false;

    m_route_conflicts_isSet = false;
    m_route_conflicts_isValid = false;

    m_service_account_isSet = false;
    m_service_account_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudApigeeV1Deployment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Deployment::fromJsonObject(QJsonObject json) {

    m_api_proxy_isValid = ::OpenAPI::fromJsonValue(m_api_proxy, json[QString("apiProxy")]);
    m_api_proxy_isSet = !json[QString("apiProxy")].isNull() && m_api_proxy_isValid;

    m_deploy_start_time_isValid = ::OpenAPI::fromJsonValue(m_deploy_start_time, json[QString("deployStartTime")]);
    m_deploy_start_time_isSet = !json[QString("deployStartTime")].isNull() && m_deploy_start_time_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_instances_isValid = ::OpenAPI::fromJsonValue(m_instances, json[QString("instances")]);
    m_instances_isSet = !json[QString("instances")].isNull() && m_instances_isValid;

    m_pods_isValid = ::OpenAPI::fromJsonValue(m_pods, json[QString("pods")]);
    m_pods_isSet = !json[QString("pods")].isNull() && m_pods_isValid;

    m_proxy_deployment_type_isValid = ::OpenAPI::fromJsonValue(m_proxy_deployment_type, json[QString("proxyDeploymentType")]);
    m_proxy_deployment_type_isSet = !json[QString("proxyDeploymentType")].isNull() && m_proxy_deployment_type_isValid;

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("revision")]);
    m_revision_isSet = !json[QString("revision")].isNull() && m_revision_isValid;

    m_route_conflicts_isValid = ::OpenAPI::fromJsonValue(m_route_conflicts, json[QString("routeConflicts")]);
    m_route_conflicts_isSet = !json[QString("routeConflicts")].isNull() && m_route_conflicts_isValid;

    m_service_account_isValid = ::OpenAPI::fromJsonValue(m_service_account, json[QString("serviceAccount")]);
    m_service_account_isSet = !json[QString("serviceAccount")].isNull() && m_service_account_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudApigeeV1Deployment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Deployment::asJsonObject() const {
    QJsonObject obj;
    if (m_api_proxy_isSet) {
        obj.insert(QString("apiProxy"), ::OpenAPI::toJsonValue(m_api_proxy));
    }
    if (m_deploy_start_time_isSet) {
        obj.insert(QString("deployStartTime"), ::OpenAPI::toJsonValue(m_deploy_start_time));
    }
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_instances.size() > 0) {
        obj.insert(QString("instances"), ::OpenAPI::toJsonValue(m_instances));
    }
    if (m_pods.size() > 0) {
        obj.insert(QString("pods"), ::OpenAPI::toJsonValue(m_pods));
    }
    if (m_proxy_deployment_type_isSet) {
        obj.insert(QString("proxyDeploymentType"), ::OpenAPI::toJsonValue(m_proxy_deployment_type));
    }
    if (m_revision_isSet) {
        obj.insert(QString("revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    if (m_route_conflicts.size() > 0) {
        obj.insert(QString("routeConflicts"), ::OpenAPI::toJsonValue(m_route_conflicts));
    }
    if (m_service_account_isSet) {
        obj.insert(QString("serviceAccount"), ::OpenAPI::toJsonValue(m_service_account));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1Deployment::getApiProxy() const {
    return m_api_proxy;
}
void OAIGoogleCloudApigeeV1Deployment::setApiProxy(const QString &api_proxy) {
    m_api_proxy = api_proxy;
    m_api_proxy_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_api_proxy_Set() const{
    return m_api_proxy_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_api_proxy_Valid() const{
    return m_api_proxy_isValid;
}

QString OAIGoogleCloudApigeeV1Deployment::getDeployStartTime() const {
    return m_deploy_start_time;
}
void OAIGoogleCloudApigeeV1Deployment::setDeployStartTime(const QString &deploy_start_time) {
    m_deploy_start_time = deploy_start_time;
    m_deploy_start_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_deploy_start_time_Set() const{
    return m_deploy_start_time_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_deploy_start_time_Valid() const{
    return m_deploy_start_time_isValid;
}

QString OAIGoogleCloudApigeeV1Deployment::getEnvironment() const {
    return m_environment;
}
void OAIGoogleCloudApigeeV1Deployment::setEnvironment(const QString &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_environment_Valid() const{
    return m_environment_isValid;
}

QList<OAIGoogleRpcStatus> OAIGoogleCloudApigeeV1Deployment::getErrors() const {
    return m_errors;
}
void OAIGoogleCloudApigeeV1Deployment::setErrors(const QList<OAIGoogleRpcStatus> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_errors_Valid() const{
    return m_errors_isValid;
}

QList<OAIGoogleCloudApigeeV1InstanceDeploymentStatus> OAIGoogleCloudApigeeV1Deployment::getInstances() const {
    return m_instances;
}
void OAIGoogleCloudApigeeV1Deployment::setInstances(const QList<OAIGoogleCloudApigeeV1InstanceDeploymentStatus> &instances) {
    m_instances = instances;
    m_instances_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_instances_Set() const{
    return m_instances_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_instances_Valid() const{
    return m_instances_isValid;
}

QList<OAIGoogleCloudApigeeV1PodStatus> OAIGoogleCloudApigeeV1Deployment::getPods() const {
    return m_pods;
}
void OAIGoogleCloudApigeeV1Deployment::setPods(const QList<OAIGoogleCloudApigeeV1PodStatus> &pods) {
    m_pods = pods;
    m_pods_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_pods_Set() const{
    return m_pods_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_pods_Valid() const{
    return m_pods_isValid;
}

QString OAIGoogleCloudApigeeV1Deployment::getProxyDeploymentType() const {
    return m_proxy_deployment_type;
}
void OAIGoogleCloudApigeeV1Deployment::setProxyDeploymentType(const QString &proxy_deployment_type) {
    m_proxy_deployment_type = proxy_deployment_type;
    m_proxy_deployment_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_proxy_deployment_type_Set() const{
    return m_proxy_deployment_type_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_proxy_deployment_type_Valid() const{
    return m_proxy_deployment_type_isValid;
}

QString OAIGoogleCloudApigeeV1Deployment::getRevision() const {
    return m_revision;
}
void OAIGoogleCloudApigeeV1Deployment::setRevision(const QString &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_revision_Valid() const{
    return m_revision_isValid;
}

QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> OAIGoogleCloudApigeeV1Deployment::getRouteConflicts() const {
    return m_route_conflicts;
}
void OAIGoogleCloudApigeeV1Deployment::setRouteConflicts(const QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> &route_conflicts) {
    m_route_conflicts = route_conflicts;
    m_route_conflicts_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_route_conflicts_Set() const{
    return m_route_conflicts_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_route_conflicts_Valid() const{
    return m_route_conflicts_isValid;
}

QString OAIGoogleCloudApigeeV1Deployment::getServiceAccount() const {
    return m_service_account;
}
void OAIGoogleCloudApigeeV1Deployment::setServiceAccount(const QString &service_account) {
    m_service_account = service_account;
    m_service_account_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_service_account_Set() const{
    return m_service_account_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_service_account_Valid() const{
    return m_service_account_isValid;
}

QString OAIGoogleCloudApigeeV1Deployment::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1Deployment::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1Deployment::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1Deployment::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudApigeeV1Deployment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_proxy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deploy_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instances.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_proxy_deployment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_conflicts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Deployment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
