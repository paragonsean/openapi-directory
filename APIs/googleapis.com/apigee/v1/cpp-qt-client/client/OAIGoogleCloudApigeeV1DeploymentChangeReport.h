/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1DeploymentChangeReport.h
 *
 * Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some base path in the proxy will not receive traffic due to an existing deployment having already claimed that base path. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected.
 */

#ifndef OAIGoogleCloudApigeeV1DeploymentChangeReport_H
#define OAIGoogleCloudApigeeV1DeploymentChangeReport_H

#include <QJsonObject>

#include "OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange.h"
#include "OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.h"
#include "OAIGoogleRpcPreconditionFailure.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange;
class OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingConflict;
class OAIGoogleRpcPreconditionFailure;

class OAIGoogleCloudApigeeV1DeploymentChangeReport : public OAIObject {
public:
    OAIGoogleCloudApigeeV1DeploymentChangeReport();
    OAIGoogleCloudApigeeV1DeploymentChangeReport(QString json);
    ~OAIGoogleCloudApigeeV1DeploymentChangeReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange> getRoutingChanges() const;
    void setRoutingChanges(const QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange> &routing_changes);
    bool is_routing_changes_Set() const;
    bool is_routing_changes_Valid() const;

    QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> getRoutingConflicts() const;
    void setRoutingConflicts(const QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> &routing_conflicts);
    bool is_routing_conflicts_Set() const;
    bool is_routing_conflicts_Valid() const;

    OAIGoogleRpcPreconditionFailure getValidationErrors() const;
    void setValidationErrors(const OAIGoogleRpcPreconditionFailure &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange> m_routing_changes;
    bool m_routing_changes_isSet;
    bool m_routing_changes_isValid;

    QList<OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> m_routing_conflicts;
    bool m_routing_conflicts_isSet;
    bool m_routing_conflicts_isValid;

    OAIGoogleRpcPreconditionFailure m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1DeploymentChangeReport)

#endif // OAIGoogleCloudApigeeV1DeploymentChangeReport_H
