/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Organization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Organization::OAIGoogleCloudApigeeV1Organization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Organization::OAIGoogleCloudApigeeV1Organization() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Organization::~OAIGoogleCloudApigeeV1Organization() {}

void OAIGoogleCloudApigeeV1Organization::initializeModel() {

    m_addons_config_isSet = false;
    m_addons_config_isValid = false;

    m_analytics_region_isSet = false;
    m_analytics_region_isValid = false;

    m_api_consumer_data_encryption_key_name_isSet = false;
    m_api_consumer_data_encryption_key_name_isValid = false;

    m_api_consumer_data_location_isSet = false;
    m_api_consumer_data_location_isValid = false;

    m_apigee_project_id_isSet = false;
    m_apigee_project_id_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_authorized_network_isSet = false;
    m_authorized_network_isValid = false;

    m_billing_type_isSet = false;
    m_billing_type_isValid = false;

    m_ca_certificate_isSet = false;
    m_ca_certificate_isValid = false;

    m_control_plane_encryption_key_name_isSet = false;
    m_control_plane_encryption_key_name_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_disable_vpc_peering_isSet = false;
    m_disable_vpc_peering_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_environments_isSet = false;
    m_environments_isValid = false;

    m_expires_at_isSet = false;
    m_expires_at_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_portal_disabled_isSet = false;
    m_portal_disabled_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_runtime_database_encryption_key_name_isSet = false;
    m_runtime_database_encryption_key_name_isValid = false;

    m_runtime_type_isSet = false;
    m_runtime_type_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_subscription_plan_isSet = false;
    m_subscription_plan_isValid = false;

    m_subscription_type_isSet = false;
    m_subscription_type_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudApigeeV1Organization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Organization::fromJsonObject(QJsonObject json) {

    m_addons_config_isValid = ::OpenAPI::fromJsonValue(m_addons_config, json[QString("addonsConfig")]);
    m_addons_config_isSet = !json[QString("addonsConfig")].isNull() && m_addons_config_isValid;

    m_analytics_region_isValid = ::OpenAPI::fromJsonValue(m_analytics_region, json[QString("analyticsRegion")]);
    m_analytics_region_isSet = !json[QString("analyticsRegion")].isNull() && m_analytics_region_isValid;

    m_api_consumer_data_encryption_key_name_isValid = ::OpenAPI::fromJsonValue(m_api_consumer_data_encryption_key_name, json[QString("apiConsumerDataEncryptionKeyName")]);
    m_api_consumer_data_encryption_key_name_isSet = !json[QString("apiConsumerDataEncryptionKeyName")].isNull() && m_api_consumer_data_encryption_key_name_isValid;

    m_api_consumer_data_location_isValid = ::OpenAPI::fromJsonValue(m_api_consumer_data_location, json[QString("apiConsumerDataLocation")]);
    m_api_consumer_data_location_isSet = !json[QString("apiConsumerDataLocation")].isNull() && m_api_consumer_data_location_isValid;

    m_apigee_project_id_isValid = ::OpenAPI::fromJsonValue(m_apigee_project_id, json[QString("apigeeProjectId")]);
    m_apigee_project_id_isSet = !json[QString("apigeeProjectId")].isNull() && m_apigee_project_id_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_authorized_network_isValid = ::OpenAPI::fromJsonValue(m_authorized_network, json[QString("authorizedNetwork")]);
    m_authorized_network_isSet = !json[QString("authorizedNetwork")].isNull() && m_authorized_network_isValid;

    m_billing_type_isValid = ::OpenAPI::fromJsonValue(m_billing_type, json[QString("billingType")]);
    m_billing_type_isSet = !json[QString("billingType")].isNull() && m_billing_type_isValid;

    m_ca_certificate_isValid = ::OpenAPI::fromJsonValue(m_ca_certificate, json[QString("caCertificate")]);
    m_ca_certificate_isSet = !json[QString("caCertificate")].isNull() && m_ca_certificate_isValid;

    m_control_plane_encryption_key_name_isValid = ::OpenAPI::fromJsonValue(m_control_plane_encryption_key_name, json[QString("controlPlaneEncryptionKeyName")]);
    m_control_plane_encryption_key_name_isSet = !json[QString("controlPlaneEncryptionKeyName")].isNull() && m_control_plane_encryption_key_name_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customerName")]);
    m_customer_name_isSet = !json[QString("customerName")].isNull() && m_customer_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_disable_vpc_peering_isValid = ::OpenAPI::fromJsonValue(m_disable_vpc_peering, json[QString("disableVpcPeering")]);
    m_disable_vpc_peering_isSet = !json[QString("disableVpcPeering")].isNull() && m_disable_vpc_peering_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_environments_isValid = ::OpenAPI::fromJsonValue(m_environments, json[QString("environments")]);
    m_environments_isSet = !json[QString("environments")].isNull() && m_environments_isValid;

    m_expires_at_isValid = ::OpenAPI::fromJsonValue(m_expires_at, json[QString("expiresAt")]);
    m_expires_at_isSet = !json[QString("expiresAt")].isNull() && m_expires_at_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_portal_disabled_isValid = ::OpenAPI::fromJsonValue(m_portal_disabled, json[QString("portalDisabled")]);
    m_portal_disabled_isSet = !json[QString("portalDisabled")].isNull() && m_portal_disabled_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_runtime_database_encryption_key_name_isValid = ::OpenAPI::fromJsonValue(m_runtime_database_encryption_key_name, json[QString("runtimeDatabaseEncryptionKeyName")]);
    m_runtime_database_encryption_key_name_isSet = !json[QString("runtimeDatabaseEncryptionKeyName")].isNull() && m_runtime_database_encryption_key_name_isValid;

    m_runtime_type_isValid = ::OpenAPI::fromJsonValue(m_runtime_type, json[QString("runtimeType")]);
    m_runtime_type_isSet = !json[QString("runtimeType")].isNull() && m_runtime_type_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_subscription_plan_isValid = ::OpenAPI::fromJsonValue(m_subscription_plan, json[QString("subscriptionPlan")]);
    m_subscription_plan_isSet = !json[QString("subscriptionPlan")].isNull() && m_subscription_plan_isValid;

    m_subscription_type_isValid = ::OpenAPI::fromJsonValue(m_subscription_type, json[QString("subscriptionType")]);
    m_subscription_type_isSet = !json[QString("subscriptionType")].isNull() && m_subscription_type_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Organization::asJsonObject() const {
    QJsonObject obj;
    if (m_addons_config.isSet()) {
        obj.insert(QString("addonsConfig"), ::OpenAPI::toJsonValue(m_addons_config));
    }
    if (m_analytics_region_isSet) {
        obj.insert(QString("analyticsRegion"), ::OpenAPI::toJsonValue(m_analytics_region));
    }
    if (m_api_consumer_data_encryption_key_name_isSet) {
        obj.insert(QString("apiConsumerDataEncryptionKeyName"), ::OpenAPI::toJsonValue(m_api_consumer_data_encryption_key_name));
    }
    if (m_api_consumer_data_location_isSet) {
        obj.insert(QString("apiConsumerDataLocation"), ::OpenAPI::toJsonValue(m_api_consumer_data_location));
    }
    if (m_apigee_project_id_isSet) {
        obj.insert(QString("apigeeProjectId"), ::OpenAPI::toJsonValue(m_apigee_project_id));
    }
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_authorized_network_isSet) {
        obj.insert(QString("authorizedNetwork"), ::OpenAPI::toJsonValue(m_authorized_network));
    }
    if (m_billing_type_isSet) {
        obj.insert(QString("billingType"), ::OpenAPI::toJsonValue(m_billing_type));
    }
    if (m_ca_certificate_isSet) {
        obj.insert(QString("caCertificate"), ::OpenAPI::toJsonValue(m_ca_certificate));
    }
    if (m_control_plane_encryption_key_name_isSet) {
        obj.insert(QString("controlPlaneEncryptionKeyName"), ::OpenAPI::toJsonValue(m_control_plane_encryption_key_name));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customerName"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_disable_vpc_peering_isSet) {
        obj.insert(QString("disableVpcPeering"), ::OpenAPI::toJsonValue(m_disable_vpc_peering));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_environments.size() > 0) {
        obj.insert(QString("environments"), ::OpenAPI::toJsonValue(m_environments));
    }
    if (m_expires_at_isSet) {
        obj.insert(QString("expiresAt"), ::OpenAPI::toJsonValue(m_expires_at));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_portal_disabled_isSet) {
        obj.insert(QString("portalDisabled"), ::OpenAPI::toJsonValue(m_portal_disabled));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_runtime_database_encryption_key_name_isSet) {
        obj.insert(QString("runtimeDatabaseEncryptionKeyName"), ::OpenAPI::toJsonValue(m_runtime_database_encryption_key_name));
    }
    if (m_runtime_type_isSet) {
        obj.insert(QString("runtimeType"), ::OpenAPI::toJsonValue(m_runtime_type));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_subscription_plan_isSet) {
        obj.insert(QString("subscriptionPlan"), ::OpenAPI::toJsonValue(m_subscription_plan));
    }
    if (m_subscription_type_isSet) {
        obj.insert(QString("subscriptionType"), ::OpenAPI::toJsonValue(m_subscription_type));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIGoogleCloudApigeeV1AddonsConfig OAIGoogleCloudApigeeV1Organization::getAddonsConfig() const {
    return m_addons_config;
}
void OAIGoogleCloudApigeeV1Organization::setAddonsConfig(const OAIGoogleCloudApigeeV1AddonsConfig &addons_config) {
    m_addons_config = addons_config;
    m_addons_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_addons_config_Set() const{
    return m_addons_config_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_addons_config_Valid() const{
    return m_addons_config_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getAnalyticsRegion() const {
    return m_analytics_region;
}
void OAIGoogleCloudApigeeV1Organization::setAnalyticsRegion(const QString &analytics_region) {
    m_analytics_region = analytics_region;
    m_analytics_region_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_analytics_region_Set() const{
    return m_analytics_region_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_analytics_region_Valid() const{
    return m_analytics_region_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getApiConsumerDataEncryptionKeyName() const {
    return m_api_consumer_data_encryption_key_name;
}
void OAIGoogleCloudApigeeV1Organization::setApiConsumerDataEncryptionKeyName(const QString &api_consumer_data_encryption_key_name) {
    m_api_consumer_data_encryption_key_name = api_consumer_data_encryption_key_name;
    m_api_consumer_data_encryption_key_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_api_consumer_data_encryption_key_name_Set() const{
    return m_api_consumer_data_encryption_key_name_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_api_consumer_data_encryption_key_name_Valid() const{
    return m_api_consumer_data_encryption_key_name_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getApiConsumerDataLocation() const {
    return m_api_consumer_data_location;
}
void OAIGoogleCloudApigeeV1Organization::setApiConsumerDataLocation(const QString &api_consumer_data_location) {
    m_api_consumer_data_location = api_consumer_data_location;
    m_api_consumer_data_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_api_consumer_data_location_Set() const{
    return m_api_consumer_data_location_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_api_consumer_data_location_Valid() const{
    return m_api_consumer_data_location_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getApigeeProjectId() const {
    return m_apigee_project_id;
}
void OAIGoogleCloudApigeeV1Organization::setApigeeProjectId(const QString &apigee_project_id) {
    m_apigee_project_id = apigee_project_id;
    m_apigee_project_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_apigee_project_id_Set() const{
    return m_apigee_project_id_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_apigee_project_id_Valid() const{
    return m_apigee_project_id_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1Organization::getAttributes() const {
    return m_attributes;
}
void OAIGoogleCloudApigeeV1Organization::setAttributes(const QList<QString> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getAuthorizedNetwork() const {
    return m_authorized_network;
}
void OAIGoogleCloudApigeeV1Organization::setAuthorizedNetwork(const QString &authorized_network) {
    m_authorized_network = authorized_network;
    m_authorized_network_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_authorized_network_Set() const{
    return m_authorized_network_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_authorized_network_Valid() const{
    return m_authorized_network_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getBillingType() const {
    return m_billing_type;
}
void OAIGoogleCloudApigeeV1Organization::setBillingType(const QString &billing_type) {
    m_billing_type = billing_type;
    m_billing_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_billing_type_Set() const{
    return m_billing_type_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_billing_type_Valid() const{
    return m_billing_type_isValid;
}

QByteArray OAIGoogleCloudApigeeV1Organization::getCaCertificate() const {
    return m_ca_certificate;
}
void OAIGoogleCloudApigeeV1Organization::setCaCertificate(const QByteArray &ca_certificate) {
    m_ca_certificate = ca_certificate;
    m_ca_certificate_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_ca_certificate_Set() const{
    return m_ca_certificate_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_ca_certificate_Valid() const{
    return m_ca_certificate_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getControlPlaneEncryptionKeyName() const {
    return m_control_plane_encryption_key_name;
}
void OAIGoogleCloudApigeeV1Organization::setControlPlaneEncryptionKeyName(const QString &control_plane_encryption_key_name) {
    m_control_plane_encryption_key_name = control_plane_encryption_key_name;
    m_control_plane_encryption_key_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_control_plane_encryption_key_name_Set() const{
    return m_control_plane_encryption_key_name_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_control_plane_encryption_key_name_Valid() const{
    return m_control_plane_encryption_key_name_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getCreatedAt() const {
    return m_created_at;
}
void OAIGoogleCloudApigeeV1Organization::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getCustomerName() const {
    return m_customer_name;
}
void OAIGoogleCloudApigeeV1Organization::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1Organization::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIGoogleCloudApigeeV1Organization::isDisableVpcPeering() const {
    return m_disable_vpc_peering;
}
void OAIGoogleCloudApigeeV1Organization::setDisableVpcPeering(const bool &disable_vpc_peering) {
    m_disable_vpc_peering = disable_vpc_peering;
    m_disable_vpc_peering_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_disable_vpc_peering_Set() const{
    return m_disable_vpc_peering_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_disable_vpc_peering_Valid() const{
    return m_disable_vpc_peering_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1Organization::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1Organization::getEnvironments() const {
    return m_environments;
}
void OAIGoogleCloudApigeeV1Organization::setEnvironments(const QList<QString> &environments) {
    m_environments = environments;
    m_environments_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_environments_Set() const{
    return m_environments_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_environments_Valid() const{
    return m_environments_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getExpiresAt() const {
    return m_expires_at;
}
void OAIGoogleCloudApigeeV1Organization::setExpiresAt(const QString &expires_at) {
    m_expires_at = expires_at;
    m_expires_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_expires_at_Set() const{
    return m_expires_at_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_expires_at_Valid() const{
    return m_expires_at_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGoogleCloudApigeeV1Organization::setLastModifiedAt(const QString &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1Organization::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudApigeeV1Organization::isPortalDisabled() const {
    return m_portal_disabled;
}
void OAIGoogleCloudApigeeV1Organization::setPortalDisabled(const bool &portal_disabled) {
    m_portal_disabled = portal_disabled;
    m_portal_disabled_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_portal_disabled_Set() const{
    return m_portal_disabled_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_portal_disabled_Valid() const{
    return m_portal_disabled_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getProjectId() const {
    return m_project_id;
}
void OAIGoogleCloudApigeeV1Organization::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_project_id_Valid() const{
    return m_project_id_isValid;
}

OAIGoogleCloudApigeeV1Properties OAIGoogleCloudApigeeV1Organization::getProperties() const {
    return m_properties;
}
void OAIGoogleCloudApigeeV1Organization::setProperties(const OAIGoogleCloudApigeeV1Properties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getRuntimeDatabaseEncryptionKeyName() const {
    return m_runtime_database_encryption_key_name;
}
void OAIGoogleCloudApigeeV1Organization::setRuntimeDatabaseEncryptionKeyName(const QString &runtime_database_encryption_key_name) {
    m_runtime_database_encryption_key_name = runtime_database_encryption_key_name;
    m_runtime_database_encryption_key_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_runtime_database_encryption_key_name_Set() const{
    return m_runtime_database_encryption_key_name_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_runtime_database_encryption_key_name_Valid() const{
    return m_runtime_database_encryption_key_name_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getRuntimeType() const {
    return m_runtime_type;
}
void OAIGoogleCloudApigeeV1Organization::setRuntimeType(const QString &runtime_type) {
    m_runtime_type = runtime_type;
    m_runtime_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_runtime_type_Set() const{
    return m_runtime_type_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_runtime_type_Valid() const{
    return m_runtime_type_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1Organization::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getSubscriptionPlan() const {
    return m_subscription_plan;
}
void OAIGoogleCloudApigeeV1Organization::setSubscriptionPlan(const QString &subscription_plan) {
    m_subscription_plan = subscription_plan;
    m_subscription_plan_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_subscription_plan_Set() const{
    return m_subscription_plan_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_subscription_plan_Valid() const{
    return m_subscription_plan_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getSubscriptionType() const {
    return m_subscription_type;
}
void OAIGoogleCloudApigeeV1Organization::setSubscriptionType(const QString &subscription_type) {
    m_subscription_type = subscription_type;
    m_subscription_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_subscription_type_Set() const{
    return m_subscription_type_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_subscription_type_Valid() const{
    return m_subscription_type_isValid;
}

QString OAIGoogleCloudApigeeV1Organization::getType() const {
    return m_type;
}
void OAIGoogleCloudApigeeV1Organization::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1Organization::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudApigeeV1Organization::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudApigeeV1Organization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_addons_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_analytics_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_consumer_data_encryption_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_consumer_data_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apigee_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorized_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ca_certificate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_control_plane_encryption_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_vpc_peering_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_expires_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_portal_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_database_encryption_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_plan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Organization::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
