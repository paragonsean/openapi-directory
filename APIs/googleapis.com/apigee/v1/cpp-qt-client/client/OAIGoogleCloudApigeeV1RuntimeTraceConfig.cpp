/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1RuntimeTraceConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1RuntimeTraceConfig::OAIGoogleCloudApigeeV1RuntimeTraceConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1RuntimeTraceConfig::OAIGoogleCloudApigeeV1RuntimeTraceConfig() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1RuntimeTraceConfig::~OAIGoogleCloudApigeeV1RuntimeTraceConfig() {}

void OAIGoogleCloudApigeeV1RuntimeTraceConfig::initializeModel() {

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;

    m_exporter_isSet = false;
    m_exporter_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_overrides_isSet = false;
    m_overrides_isValid = false;

    m_revision_create_time_isSet = false;
    m_revision_create_time_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_sampling_config_isSet = false;
    m_sampling_config_isValid = false;
}

void OAIGoogleCloudApigeeV1RuntimeTraceConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1RuntimeTraceConfig::fromJsonObject(QJsonObject json) {

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;

    m_exporter_isValid = ::OpenAPI::fromJsonValue(m_exporter, json[QString("exporter")]);
    m_exporter_isSet = !json[QString("exporter")].isNull() && m_exporter_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_overrides_isValid = ::OpenAPI::fromJsonValue(m_overrides, json[QString("overrides")]);
    m_overrides_isSet = !json[QString("overrides")].isNull() && m_overrides_isValid;

    m_revision_create_time_isValid = ::OpenAPI::fromJsonValue(m_revision_create_time, json[QString("revisionCreateTime")]);
    m_revision_create_time_isSet = !json[QString("revisionCreateTime")].isNull() && m_revision_create_time_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;

    m_sampling_config_isValid = ::OpenAPI::fromJsonValue(m_sampling_config, json[QString("samplingConfig")]);
    m_sampling_config_isSet = !json[QString("samplingConfig")].isNull() && m_sampling_config_isValid;
}

QString OAIGoogleCloudApigeeV1RuntimeTraceConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1RuntimeTraceConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_endpoint_isSet) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    if (m_exporter_isSet) {
        obj.insert(QString("exporter"), ::OpenAPI::toJsonValue(m_exporter));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_overrides.size() > 0) {
        obj.insert(QString("overrides"), ::OpenAPI::toJsonValue(m_overrides));
    }
    if (m_revision_create_time_isSet) {
        obj.insert(QString("revisionCreateTime"), ::OpenAPI::toJsonValue(m_revision_create_time));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_sampling_config.isSet()) {
        obj.insert(QString("samplingConfig"), ::OpenAPI::toJsonValue(m_sampling_config));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1RuntimeTraceConfig::getEndpoint() const {
    return m_endpoint;
}
void OAIGoogleCloudApigeeV1RuntimeTraceConfig::setEndpoint(const QString &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

QString OAIGoogleCloudApigeeV1RuntimeTraceConfig::getExporter() const {
    return m_exporter;
}
void OAIGoogleCloudApigeeV1RuntimeTraceConfig::setExporter(const QString &exporter) {
    m_exporter = exporter;
    m_exporter_isSet = true;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_exporter_Set() const{
    return m_exporter_isSet;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_exporter_Valid() const{
    return m_exporter_isValid;
}

QString OAIGoogleCloudApigeeV1RuntimeTraceConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1RuntimeTraceConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleCloudApigeeV1RuntimeTraceConfigOverride> OAIGoogleCloudApigeeV1RuntimeTraceConfig::getOverrides() const {
    return m_overrides;
}
void OAIGoogleCloudApigeeV1RuntimeTraceConfig::setOverrides(const QList<OAIGoogleCloudApigeeV1RuntimeTraceConfigOverride> &overrides) {
    m_overrides = overrides;
    m_overrides_isSet = true;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_overrides_Set() const{
    return m_overrides_isSet;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_overrides_Valid() const{
    return m_overrides_isValid;
}

QString OAIGoogleCloudApigeeV1RuntimeTraceConfig::getRevisionCreateTime() const {
    return m_revision_create_time;
}
void OAIGoogleCloudApigeeV1RuntimeTraceConfig::setRevisionCreateTime(const QString &revision_create_time) {
    m_revision_create_time = revision_create_time;
    m_revision_create_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_revision_create_time_Set() const{
    return m_revision_create_time_isSet;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_revision_create_time_Valid() const{
    return m_revision_create_time_isValid;
}

QString OAIGoogleCloudApigeeV1RuntimeTraceConfig::getRevisionId() const {
    return m_revision_id;
}
void OAIGoogleCloudApigeeV1RuntimeTraceConfig::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

OAIGoogleCloudApigeeV1RuntimeTraceSamplingConfig OAIGoogleCloudApigeeV1RuntimeTraceConfig::getSamplingConfig() const {
    return m_sampling_config;
}
void OAIGoogleCloudApigeeV1RuntimeTraceConfig::setSamplingConfig(const OAIGoogleCloudApigeeV1RuntimeTraceSamplingConfig &sampling_config) {
    m_sampling_config = sampling_config;
    m_sampling_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_sampling_config_Set() const{
    return m_sampling_config_isSet;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::is_sampling_config_Valid() const{
    return m_sampling_config_isValid;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exporter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overrides.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sampling_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1RuntimeTraceConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
