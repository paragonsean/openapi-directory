/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1CustomReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1CustomReport::OAIGoogleCloudApigeeV1CustomReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1CustomReport::OAIGoogleCloudApigeeV1CustomReport() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1CustomReport::~OAIGoogleCloudApigeeV1CustomReport() {}

void OAIGoogleCloudApigeeV1CustomReport::initializeModel() {

    m_chart_type_isSet = false;
    m_chart_type_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_from_time_isSet = false;
    m_from_time_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_last_viewed_at_isSet = false;
    m_last_viewed_at_isValid = false;

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_offset_isSet = false;
    m_offset_isValid = false;

    m_organization_isSet = false;
    m_organization_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_sort_by_cols_isSet = false;
    m_sort_by_cols_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_time_unit_isSet = false;
    m_time_unit_isValid = false;

    m_to_time_isSet = false;
    m_to_time_isValid = false;

    m_topk_isSet = false;
    m_topk_isValid = false;
}

void OAIGoogleCloudApigeeV1CustomReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1CustomReport::fromJsonObject(QJsonObject json) {

    m_chart_type_isValid = ::OpenAPI::fromJsonValue(m_chart_type, json[QString("chartType")]);
    m_chart_type_isSet = !json[QString("chartType")].isNull() && m_chart_type_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_from_time_isValid = ::OpenAPI::fromJsonValue(m_from_time, json[QString("fromTime")]);
    m_from_time_isSet = !json[QString("fromTime")].isNull() && m_from_time_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_last_viewed_at_isValid = ::OpenAPI::fromJsonValue(m_last_viewed_at, json[QString("lastViewedAt")]);
    m_last_viewed_at_isSet = !json[QString("lastViewedAt")].isNull() && m_last_viewed_at_isValid;

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_offset_isValid = ::OpenAPI::fromJsonValue(m_offset, json[QString("offset")]);
    m_offset_isSet = !json[QString("offset")].isNull() && m_offset_isValid;

    m_organization_isValid = ::OpenAPI::fromJsonValue(m_organization, json[QString("organization")]);
    m_organization_isSet = !json[QString("organization")].isNull() && m_organization_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_sort_by_cols_isValid = ::OpenAPI::fromJsonValue(m_sort_by_cols, json[QString("sortByCols")]);
    m_sort_by_cols_isSet = !json[QString("sortByCols")].isNull() && m_sort_by_cols_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sortOrder")]);
    m_sort_order_isSet = !json[QString("sortOrder")].isNull() && m_sort_order_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_time_unit_isValid = ::OpenAPI::fromJsonValue(m_time_unit, json[QString("timeUnit")]);
    m_time_unit_isSet = !json[QString("timeUnit")].isNull() && m_time_unit_isValid;

    m_to_time_isValid = ::OpenAPI::fromJsonValue(m_to_time, json[QString("toTime")]);
    m_to_time_isSet = !json[QString("toTime")].isNull() && m_to_time_isValid;

    m_topk_isValid = ::OpenAPI::fromJsonValue(m_topk, json[QString("topk")]);
    m_topk_isSet = !json[QString("topk")].isNull() && m_topk_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1CustomReport::asJsonObject() const {
    QJsonObject obj;
    if (m_chart_type_isSet) {
        obj.insert(QString("chartType"), ::OpenAPI::toJsonValue(m_chart_type));
    }
    if (m_comments.size() > 0) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_from_time_isSet) {
        obj.insert(QString("fromTime"), ::OpenAPI::toJsonValue(m_from_time));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_last_viewed_at_isSet) {
        obj.insert(QString("lastViewedAt"), ::OpenAPI::toJsonValue(m_last_viewed_at));
    }
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_offset_isSet) {
        obj.insert(QString("offset"), ::OpenAPI::toJsonValue(m_offset));
    }
    if (m_organization_isSet) {
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(m_organization));
    }
    if (m_properties.size() > 0) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_sort_by_cols.size() > 0) {
        obj.insert(QString("sortByCols"), ::OpenAPI::toJsonValue(m_sort_by_cols));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sortOrder"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_time_unit_isSet) {
        obj.insert(QString("timeUnit"), ::OpenAPI::toJsonValue(m_time_unit));
    }
    if (m_to_time_isSet) {
        obj.insert(QString("toTime"), ::OpenAPI::toJsonValue(m_to_time));
    }
    if (m_topk_isSet) {
        obj.insert(QString("topk"), ::OpenAPI::toJsonValue(m_topk));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1CustomReport::getChartType() const {
    return m_chart_type;
}
void OAIGoogleCloudApigeeV1CustomReport::setChartType(const QString &chart_type) {
    m_chart_type = chart_type;
    m_chart_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_chart_type_Set() const{
    return m_chart_type_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_chart_type_Valid() const{
    return m_chart_type_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1CustomReport::getComments() const {
    return m_comments;
}
void OAIGoogleCloudApigeeV1CustomReport::setComments(const QList<QString> &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_comments_Valid() const{
    return m_comments_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getCreatedAt() const {
    return m_created_at;
}
void OAIGoogleCloudApigeeV1CustomReport::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1CustomReport::getDimensions() const {
    return m_dimensions;
}
void OAIGoogleCloudApigeeV1CustomReport::setDimensions(const QList<QString> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1CustomReport::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getEnvironment() const {
    return m_environment;
}
void OAIGoogleCloudApigeeV1CustomReport::setEnvironment(const QString &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_environment_Valid() const{
    return m_environment_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudApigeeV1CustomReport::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_filter_Valid() const{
    return m_filter_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getFromTime() const {
    return m_from_time;
}
void OAIGoogleCloudApigeeV1CustomReport::setFromTime(const QString &from_time) {
    m_from_time = from_time;
    m_from_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_from_time_Set() const{
    return m_from_time_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_from_time_Valid() const{
    return m_from_time_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGoogleCloudApigeeV1CustomReport::setLastModifiedAt(const QString &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getLastViewedAt() const {
    return m_last_viewed_at;
}
void OAIGoogleCloudApigeeV1CustomReport::setLastViewedAt(const QString &last_viewed_at) {
    m_last_viewed_at = last_viewed_at;
    m_last_viewed_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_last_viewed_at_Set() const{
    return m_last_viewed_at_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_last_viewed_at_Valid() const{
    return m_last_viewed_at_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getLimit() const {
    return m_limit;
}
void OAIGoogleCloudApigeeV1CustomReport::setLimit(const QString &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_limit_Valid() const{
    return m_limit_isValid;
}

QList<OAIGoogleCloudApigeeV1CustomReportMetric> OAIGoogleCloudApigeeV1CustomReport::getMetrics() const {
    return m_metrics;
}
void OAIGoogleCloudApigeeV1CustomReport::setMetrics(const QList<OAIGoogleCloudApigeeV1CustomReportMetric> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1CustomReport::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getOffset() const {
    return m_offset;
}
void OAIGoogleCloudApigeeV1CustomReport::setOffset(const QString &offset) {
    m_offset = offset;
    m_offset_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_offset_Set() const{
    return m_offset_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_offset_Valid() const{
    return m_offset_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getOrganization() const {
    return m_organization;
}
void OAIGoogleCloudApigeeV1CustomReport::setOrganization(const QString &organization) {
    m_organization = organization;
    m_organization_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_organization_Valid() const{
    return m_organization_isValid;
}

QList<OAIGoogleCloudApigeeV1ReportProperty> OAIGoogleCloudApigeeV1CustomReport::getProperties() const {
    return m_properties;
}
void OAIGoogleCloudApigeeV1CustomReport::setProperties(const QList<OAIGoogleCloudApigeeV1ReportProperty> &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_properties_Valid() const{
    return m_properties_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1CustomReport::getSortByCols() const {
    return m_sort_by_cols;
}
void OAIGoogleCloudApigeeV1CustomReport::setSortByCols(const QList<QString> &sort_by_cols) {
    m_sort_by_cols = sort_by_cols;
    m_sort_by_cols_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_sort_by_cols_Set() const{
    return m_sort_by_cols_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_sort_by_cols_Valid() const{
    return m_sort_by_cols_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getSortOrder() const {
    return m_sort_order;
}
void OAIGoogleCloudApigeeV1CustomReport::setSortOrder(const QString &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1CustomReport::getTags() const {
    return m_tags;
}
void OAIGoogleCloudApigeeV1CustomReport::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getTimeUnit() const {
    return m_time_unit;
}
void OAIGoogleCloudApigeeV1CustomReport::setTimeUnit(const QString &time_unit) {
    m_time_unit = time_unit;
    m_time_unit_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_time_unit_Set() const{
    return m_time_unit_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_time_unit_Valid() const{
    return m_time_unit_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getToTime() const {
    return m_to_time;
}
void OAIGoogleCloudApigeeV1CustomReport::setToTime(const QString &to_time) {
    m_to_time = to_time;
    m_to_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_to_time_Set() const{
    return m_to_time_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_to_time_Valid() const{
    return m_to_time_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReport::getTopk() const {
    return m_topk;
}
void OAIGoogleCloudApigeeV1CustomReport::setTopk(const QString &topk) {
    m_topk = topk;
    m_topk_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_topk_Set() const{
    return m_topk_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReport::is_topk_Valid() const{
    return m_topk_isValid;
}

bool OAIGoogleCloudApigeeV1CustomReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chart_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_viewed_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_by_cols.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topk_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1CustomReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
