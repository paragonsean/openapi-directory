/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1ProvisionOrganizationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::OAIGoogleCloudApigeeV1ProvisionOrganizationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::OAIGoogleCloudApigeeV1ProvisionOrganizationRequest() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::~OAIGoogleCloudApigeeV1ProvisionOrganizationRequest() {}

void OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::initializeModel() {

    m_analytics_region_isSet = false;
    m_analytics_region_isValid = false;

    m_authorized_network_isSet = false;
    m_authorized_network_isValid = false;

    m_disable_vpc_peering_isSet = false;
    m_disable_vpc_peering_isValid = false;

    m_runtime_location_isSet = false;
    m_runtime_location_isValid = false;
}

void OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::fromJsonObject(QJsonObject json) {

    m_analytics_region_isValid = ::OpenAPI::fromJsonValue(m_analytics_region, json[QString("analyticsRegion")]);
    m_analytics_region_isSet = !json[QString("analyticsRegion")].isNull() && m_analytics_region_isValid;

    m_authorized_network_isValid = ::OpenAPI::fromJsonValue(m_authorized_network, json[QString("authorizedNetwork")]);
    m_authorized_network_isSet = !json[QString("authorizedNetwork")].isNull() && m_authorized_network_isValid;

    m_disable_vpc_peering_isValid = ::OpenAPI::fromJsonValue(m_disable_vpc_peering, json[QString("disableVpcPeering")]);
    m_disable_vpc_peering_isSet = !json[QString("disableVpcPeering")].isNull() && m_disable_vpc_peering_isValid;

    m_runtime_location_isValid = ::OpenAPI::fromJsonValue(m_runtime_location, json[QString("runtimeLocation")]);
    m_runtime_location_isSet = !json[QString("runtimeLocation")].isNull() && m_runtime_location_isValid;
}

QString OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_analytics_region_isSet) {
        obj.insert(QString("analyticsRegion"), ::OpenAPI::toJsonValue(m_analytics_region));
    }
    if (m_authorized_network_isSet) {
        obj.insert(QString("authorizedNetwork"), ::OpenAPI::toJsonValue(m_authorized_network));
    }
    if (m_disable_vpc_peering_isSet) {
        obj.insert(QString("disableVpcPeering"), ::OpenAPI::toJsonValue(m_disable_vpc_peering));
    }
    if (m_runtime_location_isSet) {
        obj.insert(QString("runtimeLocation"), ::OpenAPI::toJsonValue(m_runtime_location));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::getAnalyticsRegion() const {
    return m_analytics_region;
}
void OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::setAnalyticsRegion(const QString &analytics_region) {
    m_analytics_region = analytics_region;
    m_analytics_region_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_analytics_region_Set() const{
    return m_analytics_region_isSet;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_analytics_region_Valid() const{
    return m_analytics_region_isValid;
}

QString OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::getAuthorizedNetwork() const {
    return m_authorized_network;
}
void OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::setAuthorizedNetwork(const QString &authorized_network) {
    m_authorized_network = authorized_network;
    m_authorized_network_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_authorized_network_Set() const{
    return m_authorized_network_isSet;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_authorized_network_Valid() const{
    return m_authorized_network_isValid;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::isDisableVpcPeering() const {
    return m_disable_vpc_peering;
}
void OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::setDisableVpcPeering(const bool &disable_vpc_peering) {
    m_disable_vpc_peering = disable_vpc_peering;
    m_disable_vpc_peering_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_disable_vpc_peering_Set() const{
    return m_disable_vpc_peering_isSet;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_disable_vpc_peering_Valid() const{
    return m_disable_vpc_peering_isValid;
}

QString OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::getRuntimeLocation() const {
    return m_runtime_location;
}
void OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::setRuntimeLocation(const QString &runtime_location) {
    m_runtime_location = runtime_location;
    m_runtime_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_runtime_location_Set() const{
    return m_runtime_location_isSet;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::is_runtime_location_Valid() const{
    return m_runtime_location_isValid;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analytics_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorized_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_vpc_peering_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1ProvisionOrganizationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
