/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1SharedFlowRevision.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1SharedFlowRevision::OAIGoogleCloudApigeeV1SharedFlowRevision(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1SharedFlowRevision::OAIGoogleCloudApigeeV1SharedFlowRevision() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1SharedFlowRevision::~OAIGoogleCloudApigeeV1SharedFlowRevision() {}

void OAIGoogleCloudApigeeV1SharedFlowRevision::initializeModel() {

    m_configuration_version_isSet = false;
    m_configuration_version_isValid = false;

    m_context_info_isSet = false;
    m_context_info_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_entity_meta_data_as_properties_isSet = false;
    m_entity_meta_data_as_properties_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_policies_isSet = false;
    m_policies_isValid = false;

    m_resource_files_isSet = false;
    m_resource_files_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;

    m_revision_isSet = false;
    m_revision_isValid = false;

    m_shared_flows_isSet = false;
    m_shared_flows_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudApigeeV1SharedFlowRevision::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1SharedFlowRevision::fromJsonObject(QJsonObject json) {

    m_configuration_version_isValid = ::OpenAPI::fromJsonValue(m_configuration_version, json[QString("configurationVersion")]);
    m_configuration_version_isSet = !json[QString("configurationVersion")].isNull() && m_configuration_version_isValid;

    m_context_info_isValid = ::OpenAPI::fromJsonValue(m_context_info, json[QString("contextInfo")]);
    m_context_info_isSet = !json[QString("contextInfo")].isNull() && m_context_info_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_entity_meta_data_as_properties_isValid = ::OpenAPI::fromJsonValue(m_entity_meta_data_as_properties, json[QString("entityMetaDataAsProperties")]);
    m_entity_meta_data_as_properties_isSet = !json[QString("entityMetaDataAsProperties")].isNull() && m_entity_meta_data_as_properties_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_policies_isValid = ::OpenAPI::fromJsonValue(m_policies, json[QString("policies")]);
    m_policies_isSet = !json[QString("policies")].isNull() && m_policies_isValid;

    m_resource_files_isValid = ::OpenAPI::fromJsonValue(m_resource_files, json[QString("resourceFiles")]);
    m_resource_files_isSet = !json[QString("resourceFiles")].isNull() && m_resource_files_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("revision")]);
    m_revision_isSet = !json[QString("revision")].isNull() && m_revision_isValid;

    m_shared_flows_isValid = ::OpenAPI::fromJsonValue(m_shared_flows, json[QString("sharedFlows")]);
    m_shared_flows_isSet = !json[QString("sharedFlows")].isNull() && m_shared_flows_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1SharedFlowRevision::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_version.isSet()) {
        obj.insert(QString("configurationVersion"), ::OpenAPI::toJsonValue(m_configuration_version));
    }
    if (m_context_info_isSet) {
        obj.insert(QString("contextInfo"), ::OpenAPI::toJsonValue(m_context_info));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_entity_meta_data_as_properties.size() > 0) {
        obj.insert(QString("entityMetaDataAsProperties"), ::OpenAPI::toJsonValue(m_entity_meta_data_as_properties));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_policies.size() > 0) {
        obj.insert(QString("policies"), ::OpenAPI::toJsonValue(m_policies));
    }
    if (m_resource_files.isSet()) {
        obj.insert(QString("resourceFiles"), ::OpenAPI::toJsonValue(m_resource_files));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    if (m_revision_isSet) {
        obj.insert(QString("revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    if (m_shared_flows.size() > 0) {
        obj.insert(QString("sharedFlows"), ::OpenAPI::toJsonValue(m_shared_flows));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIGoogleCloudApigeeV1ConfigVersion OAIGoogleCloudApigeeV1SharedFlowRevision::getConfigurationVersion() const {
    return m_configuration_version;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setConfigurationVersion(const OAIGoogleCloudApigeeV1ConfigVersion &configuration_version) {
    m_configuration_version = configuration_version;
    m_configuration_version_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_configuration_version_Set() const{
    return m_configuration_version_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_configuration_version_Valid() const{
    return m_configuration_version_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getContextInfo() const {
    return m_context_info;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setContextInfo(const QString &context_info) {
    m_context_info = context_info;
    m_context_info_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_context_info_Set() const{
    return m_context_info_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_context_info_Valid() const{
    return m_context_info_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getCreatedAt() const {
    return m_created_at;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QMap<QString, QString> OAIGoogleCloudApigeeV1SharedFlowRevision::getEntityMetaDataAsProperties() const {
    return m_entity_meta_data_as_properties;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setEntityMetaDataAsProperties(const QMap<QString, QString> &entity_meta_data_as_properties) {
    m_entity_meta_data_as_properties = entity_meta_data_as_properties;
    m_entity_meta_data_as_properties_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_entity_meta_data_as_properties_Set() const{
    return m_entity_meta_data_as_properties_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_entity_meta_data_as_properties_Valid() const{
    return m_entity_meta_data_as_properties_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setLastModifiedAt(const QString &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SharedFlowRevision::getPolicies() const {
    return m_policies;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setPolicies(const QList<QString> &policies) {
    m_policies = policies;
    m_policies_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_policies_Set() const{
    return m_policies_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_policies_Valid() const{
    return m_policies_isValid;
}

OAIGoogleCloudApigeeV1ResourceFiles OAIGoogleCloudApigeeV1SharedFlowRevision::getResourceFiles() const {
    return m_resource_files;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setResourceFiles(const OAIGoogleCloudApigeeV1ResourceFiles &resource_files) {
    m_resource_files = resource_files;
    m_resource_files_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_resource_files_Set() const{
    return m_resource_files_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_resource_files_Valid() const{
    return m_resource_files_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SharedFlowRevision::getResources() const {
    return m_resources;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setResources(const QList<QString> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_resources_Valid() const{
    return m_resources_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getRevision() const {
    return m_revision;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setRevision(const QString &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_revision_Valid() const{
    return m_revision_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SharedFlowRevision::getSharedFlows() const {
    return m_shared_flows;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setSharedFlows(const QList<QString> &shared_flows) {
    m_shared_flows = shared_flows;
    m_shared_flows_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_shared_flows_Set() const{
    return m_shared_flows_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_shared_flows_Valid() const{
    return m_shared_flows_isValid;
}

QString OAIGoogleCloudApigeeV1SharedFlowRevision::getType() const {
    return m_type;
}
void OAIGoogleCloudApigeeV1SharedFlowRevision::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_meta_data_as_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_files.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_flows.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1SharedFlowRevision::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
