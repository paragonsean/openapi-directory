/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1SecurityReportMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1SecurityReportMetadata::OAIGoogleCloudApigeeV1SecurityReportMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1SecurityReportMetadata::OAIGoogleCloudApigeeV1SecurityReportMetadata() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1SecurityReportMetadata::~OAIGoogleCloudApigeeV1SecurityReportMetadata() {}

void OAIGoogleCloudApigeeV1SecurityReportMetadata::initializeModel() {

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_end_timestamp_isSet = false;
    m_end_timestamp_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_mime_type_isSet = false;
    m_mime_type_isValid = false;

    m_start_timestamp_isSet = false;
    m_start_timestamp_isValid = false;

    m_time_unit_isSet = false;
    m_time_unit_isValid = false;
}

void OAIGoogleCloudApigeeV1SecurityReportMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1SecurityReportMetadata::fromJsonObject(QJsonObject json) {

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_end_timestamp_isValid = ::OpenAPI::fromJsonValue(m_end_timestamp, json[QString("endTimestamp")]);
    m_end_timestamp_isSet = !json[QString("endTimestamp")].isNull() && m_end_timestamp_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_mime_type_isValid = ::OpenAPI::fromJsonValue(m_mime_type, json[QString("mimeType")]);
    m_mime_type_isSet = !json[QString("mimeType")].isNull() && m_mime_type_isValid;

    m_start_timestamp_isValid = ::OpenAPI::fromJsonValue(m_start_timestamp, json[QString("startTimestamp")]);
    m_start_timestamp_isSet = !json[QString("startTimestamp")].isNull() && m_start_timestamp_isValid;

    m_time_unit_isValid = ::OpenAPI::fromJsonValue(m_time_unit, json[QString("timeUnit")]);
    m_time_unit_isSet = !json[QString("timeUnit")].isNull() && m_time_unit_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityReportMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1SecurityReportMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_end_timestamp_isSet) {
        obj.insert(QString("endTimestamp"), ::OpenAPI::toJsonValue(m_end_timestamp));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_mime_type_isSet) {
        obj.insert(QString("mimeType"), ::OpenAPI::toJsonValue(m_mime_type));
    }
    if (m_start_timestamp_isSet) {
        obj.insert(QString("startTimestamp"), ::OpenAPI::toJsonValue(m_start_timestamp));
    }
    if (m_time_unit_isSet) {
        obj.insert(QString("timeUnit"), ::OpenAPI::toJsonValue(m_time_unit));
    }
    return obj;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityReportMetadata::getDimensions() const {
    return m_dimensions;
}
void OAIGoogleCloudApigeeV1SecurityReportMetadata::setDimensions(const QList<QString> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityReportMetadata::getEndTimestamp() const {
    return m_end_timestamp;
}
void OAIGoogleCloudApigeeV1SecurityReportMetadata::setEndTimestamp(const QString &end_timestamp) {
    m_end_timestamp = end_timestamp;
    m_end_timestamp_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_end_timestamp_Set() const{
    return m_end_timestamp_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_end_timestamp_Valid() const{
    return m_end_timestamp_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityReportMetadata::getMetrics() const {
    return m_metrics;
}
void OAIGoogleCloudApigeeV1SecurityReportMetadata::setMetrics(const QList<QString> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityReportMetadata::getMimeType() const {
    return m_mime_type;
}
void OAIGoogleCloudApigeeV1SecurityReportMetadata::setMimeType(const QString &mime_type) {
    m_mime_type = mime_type;
    m_mime_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_mime_type_Set() const{
    return m_mime_type_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_mime_type_Valid() const{
    return m_mime_type_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityReportMetadata::getStartTimestamp() const {
    return m_start_timestamp;
}
void OAIGoogleCloudApigeeV1SecurityReportMetadata::setStartTimestamp(const QString &start_timestamp) {
    m_start_timestamp = start_timestamp;
    m_start_timestamp_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_start_timestamp_Set() const{
    return m_start_timestamp_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_start_timestamp_Valid() const{
    return m_start_timestamp_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityReportMetadata::getTimeUnit() const {
    return m_time_unit;
}
void OAIGoogleCloudApigeeV1SecurityReportMetadata::setTimeUnit(const QString &time_unit) {
    m_time_unit = time_unit;
    m_time_unit_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_time_unit_Set() const{
    return m_time_unit_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::is_time_unit_Valid() const{
    return m_time_unit_isValid;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_mime_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_unit_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1SecurityReportMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
