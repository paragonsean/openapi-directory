/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::~OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo() {}

void OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::initializeModel() {

    m_md5_isSet = false;
    m_md5_isValid = false;

    m_size_bytes_isSet = false;
    m_size_bytes_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::fromJsonObject(QJsonObject json) {

    m_md5_isValid = ::OpenAPI::fromJsonValue(m_md5, json[QString("md5")]);
    m_md5_isSet = !json[QString("md5")].isNull() && m_md5_isValid;

    m_size_bytes_isValid = ::OpenAPI::fromJsonValue(m_size_bytes, json[QString("sizeBytes")]);
    m_size_bytes_isSet = !json[QString("sizeBytes")].isNull() && m_size_bytes_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_md5_isSet) {
        obj.insert(QString("md5"), ::OpenAPI::toJsonValue(m_md5));
    }
    if (m_size_bytes_isSet) {
        obj.insert(QString("sizeBytes"), ::OpenAPI::toJsonValue(m_size_bytes));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::getMd5() const {
    return m_md5;
}
void OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::setMd5(const QString &md5) {
    m_md5 = md5;
    m_md5_isSet = true;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::is_md5_Set() const{
    return m_md5_isSet;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::is_md5_Valid() const{
    return m_md5_isValid;
}

QString OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::getSizeBytes() const {
    return m_size_bytes;
}
void OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::setSizeBytes(const QString &size_bytes) {
    m_size_bytes = size_bytes;
    m_size_bytes_isSet = true;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::is_size_bytes_Set() const{
    return m_size_bytes_isSet;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::is_size_bytes_Valid() const{
    return m_size_bytes_isValid;
}

QString OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::getUri() const {
    return m_uri;
}
void OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_md5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_bytes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
