/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1OrganizationProjectMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1OrganizationProjectMapping::OAIGoogleCloudApigeeV1OrganizationProjectMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1OrganizationProjectMapping::OAIGoogleCloudApigeeV1OrganizationProjectMapping() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1OrganizationProjectMapping::~OAIGoogleCloudApigeeV1OrganizationProjectMapping() {}

void OAIGoogleCloudApigeeV1OrganizationProjectMapping::initializeModel() {

    m_location_isSet = false;
    m_location_isValid = false;

    m_organization_isSet = false;
    m_organization_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_ids_isSet = false;
    m_project_ids_isValid = false;
}

void OAIGoogleCloudApigeeV1OrganizationProjectMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1OrganizationProjectMapping::fromJsonObject(QJsonObject json) {

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_organization_isValid = ::OpenAPI::fromJsonValue(m_organization, json[QString("organization")]);
    m_organization_isSet = !json[QString("organization")].isNull() && m_organization_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_project_ids_isValid = ::OpenAPI::fromJsonValue(m_project_ids, json[QString("projectIds")]);
    m_project_ids_isSet = !json[QString("projectIds")].isNull() && m_project_ids_isValid;
}

QString OAIGoogleCloudApigeeV1OrganizationProjectMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1OrganizationProjectMapping::asJsonObject() const {
    QJsonObject obj;
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_organization_isSet) {
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(m_organization));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_ids.size() > 0) {
        obj.insert(QString("projectIds"), ::OpenAPI::toJsonValue(m_project_ids));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1OrganizationProjectMapping::getLocation() const {
    return m_location;
}
void OAIGoogleCloudApigeeV1OrganizationProjectMapping::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGoogleCloudApigeeV1OrganizationProjectMapping::getOrganization() const {
    return m_organization;
}
void OAIGoogleCloudApigeeV1OrganizationProjectMapping::setOrganization(const QString &organization) {
    m_organization = organization;
    m_organization_isSet = true;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_organization_Valid() const{
    return m_organization_isValid;
}

QString OAIGoogleCloudApigeeV1OrganizationProjectMapping::getProjectId() const {
    return m_project_id;
}
void OAIGoogleCloudApigeeV1OrganizationProjectMapping::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1OrganizationProjectMapping::getProjectIds() const {
    return m_project_ids;
}
void OAIGoogleCloudApigeeV1OrganizationProjectMapping::setProjectIds(const QList<QString> &project_ids) {
    m_project_ids = project_ids;
    m_project_ids_isSet = true;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_project_ids_Set() const{
    return m_project_ids_isSet;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::is_project_ids_Valid() const{
    return m_project_ids_isValid;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1OrganizationProjectMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
