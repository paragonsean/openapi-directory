/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1SecurityActionConditionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1SecurityActionConditionConfig::OAIGoogleCloudApigeeV1SecurityActionConditionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1SecurityActionConditionConfig::OAIGoogleCloudApigeeV1SecurityActionConditionConfig() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1SecurityActionConditionConfig::~OAIGoogleCloudApigeeV1SecurityActionConditionConfig() {}

void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::initializeModel() {

    m_access_tokens_isSet = false;
    m_access_tokens_isValid = false;

    m_api_keys_isSet = false;
    m_api_keys_isValid = false;

    m_api_products_isSet = false;
    m_api_products_isValid = false;

    m_bot_reasons_isSet = false;
    m_bot_reasons_isValid = false;

    m_developer_apps_isSet = false;
    m_developer_apps_isValid = false;

    m_developers_isSet = false;
    m_developers_isValid = false;

    m_ip_address_ranges_isSet = false;
    m_ip_address_ranges_isValid = false;

    m_user_agents_isSet = false;
    m_user_agents_isValid = false;
}

void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::fromJsonObject(QJsonObject json) {

    m_access_tokens_isValid = ::OpenAPI::fromJsonValue(m_access_tokens, json[QString("accessTokens")]);
    m_access_tokens_isSet = !json[QString("accessTokens")].isNull() && m_access_tokens_isValid;

    m_api_keys_isValid = ::OpenAPI::fromJsonValue(m_api_keys, json[QString("apiKeys")]);
    m_api_keys_isSet = !json[QString("apiKeys")].isNull() && m_api_keys_isValid;

    m_api_products_isValid = ::OpenAPI::fromJsonValue(m_api_products, json[QString("apiProducts")]);
    m_api_products_isSet = !json[QString("apiProducts")].isNull() && m_api_products_isValid;

    m_bot_reasons_isValid = ::OpenAPI::fromJsonValue(m_bot_reasons, json[QString("botReasons")]);
    m_bot_reasons_isSet = !json[QString("botReasons")].isNull() && m_bot_reasons_isValid;

    m_developer_apps_isValid = ::OpenAPI::fromJsonValue(m_developer_apps, json[QString("developerApps")]);
    m_developer_apps_isSet = !json[QString("developerApps")].isNull() && m_developer_apps_isValid;

    m_developers_isValid = ::OpenAPI::fromJsonValue(m_developers, json[QString("developers")]);
    m_developers_isSet = !json[QString("developers")].isNull() && m_developers_isValid;

    m_ip_address_ranges_isValid = ::OpenAPI::fromJsonValue(m_ip_address_ranges, json[QString("ipAddressRanges")]);
    m_ip_address_ranges_isSet = !json[QString("ipAddressRanges")].isNull() && m_ip_address_ranges_isValid;

    m_user_agents_isValid = ::OpenAPI::fromJsonValue(m_user_agents, json[QString("userAgents")]);
    m_user_agents_isSet = !json[QString("userAgents")].isNull() && m_user_agents_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityActionConditionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1SecurityActionConditionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_access_tokens.size() > 0) {
        obj.insert(QString("accessTokens"), ::OpenAPI::toJsonValue(m_access_tokens));
    }
    if (m_api_keys.size() > 0) {
        obj.insert(QString("apiKeys"), ::OpenAPI::toJsonValue(m_api_keys));
    }
    if (m_api_products.size() > 0) {
        obj.insert(QString("apiProducts"), ::OpenAPI::toJsonValue(m_api_products));
    }
    if (m_bot_reasons.size() > 0) {
        obj.insert(QString("botReasons"), ::OpenAPI::toJsonValue(m_bot_reasons));
    }
    if (m_developer_apps.size() > 0) {
        obj.insert(QString("developerApps"), ::OpenAPI::toJsonValue(m_developer_apps));
    }
    if (m_developers.size() > 0) {
        obj.insert(QString("developers"), ::OpenAPI::toJsonValue(m_developers));
    }
    if (m_ip_address_ranges.size() > 0) {
        obj.insert(QString("ipAddressRanges"), ::OpenAPI::toJsonValue(m_ip_address_ranges));
    }
    if (m_user_agents.size() > 0) {
        obj.insert(QString("userAgents"), ::OpenAPI::toJsonValue(m_user_agents));
    }
    return obj;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getAccessTokens() const {
    return m_access_tokens;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setAccessTokens(const QList<QString> &access_tokens) {
    m_access_tokens = access_tokens;
    m_access_tokens_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_access_tokens_Set() const{
    return m_access_tokens_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_access_tokens_Valid() const{
    return m_access_tokens_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getApiKeys() const {
    return m_api_keys;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setApiKeys(const QList<QString> &api_keys) {
    m_api_keys = api_keys;
    m_api_keys_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_api_keys_Set() const{
    return m_api_keys_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_api_keys_Valid() const{
    return m_api_keys_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getApiProducts() const {
    return m_api_products;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setApiProducts(const QList<QString> &api_products) {
    m_api_products = api_products;
    m_api_products_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_api_products_Set() const{
    return m_api_products_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_api_products_Valid() const{
    return m_api_products_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getBotReasons() const {
    return m_bot_reasons;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setBotReasons(const QList<QString> &bot_reasons) {
    m_bot_reasons = bot_reasons;
    m_bot_reasons_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_bot_reasons_Set() const{
    return m_bot_reasons_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_bot_reasons_Valid() const{
    return m_bot_reasons_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getDeveloperApps() const {
    return m_developer_apps;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setDeveloperApps(const QList<QString> &developer_apps) {
    m_developer_apps = developer_apps;
    m_developer_apps_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_developer_apps_Set() const{
    return m_developer_apps_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_developer_apps_Valid() const{
    return m_developer_apps_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getDevelopers() const {
    return m_developers;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setDevelopers(const QList<QString> &developers) {
    m_developers = developers;
    m_developers_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_developers_Set() const{
    return m_developers_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_developers_Valid() const{
    return m_developers_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getIpAddressRanges() const {
    return m_ip_address_ranges;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setIpAddressRanges(const QList<QString> &ip_address_ranges) {
    m_ip_address_ranges = ip_address_ranges;
    m_ip_address_ranges_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_ip_address_ranges_Set() const{
    return m_ip_address_ranges_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_ip_address_ranges_Valid() const{
    return m_ip_address_ranges_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityActionConditionConfig::getUserAgents() const {
    return m_user_agents;
}
void OAIGoogleCloudApigeeV1SecurityActionConditionConfig::setUserAgents(const QList<QString> &user_agents) {
    m_user_agents = user_agents;
    m_user_agents_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_user_agents_Set() const{
    return m_user_agents_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::is_user_agents_Valid() const{
    return m_user_agents_isValid;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_tokens.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_keys.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_bot_reasons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_developer_apps.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_developers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_agents.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1SecurityActionConditionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
