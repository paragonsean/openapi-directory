/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1ReportInstanceStatusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::OAIGoogleCloudApigeeV1ReportInstanceStatusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::OAIGoogleCloudApigeeV1ReportInstanceStatusRequest() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::~OAIGoogleCloudApigeeV1ReportInstanceStatusRequest() {}

void OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::initializeModel() {

    m_instance_uid_isSet = false;
    m_instance_uid_isValid = false;

    m_report_time_isSet = false;
    m_report_time_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;
}

void OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::fromJsonObject(QJsonObject json) {

    m_instance_uid_isValid = ::OpenAPI::fromJsonValue(m_instance_uid, json[QString("instanceUid")]);
    m_instance_uid_isSet = !json[QString("instanceUid")].isNull() && m_instance_uid_isValid;

    m_report_time_isValid = ::OpenAPI::fromJsonValue(m_report_time, json[QString("reportTime")]);
    m_report_time_isSet = !json[QString("reportTime")].isNull() && m_report_time_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;
}

QString OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_uid_isSet) {
        obj.insert(QString("instanceUid"), ::OpenAPI::toJsonValue(m_instance_uid));
    }
    if (m_report_time_isSet) {
        obj.insert(QString("reportTime"), ::OpenAPI::toJsonValue(m_report_time));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::getInstanceUid() const {
    return m_instance_uid;
}
void OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::setInstanceUid(const QString &instance_uid) {
    m_instance_uid = instance_uid;
    m_instance_uid_isSet = true;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::is_instance_uid_Set() const{
    return m_instance_uid_isSet;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::is_instance_uid_Valid() const{
    return m_instance_uid_isValid;
}

QString OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::getReportTime() const {
    return m_report_time;
}
void OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::setReportTime(const QString &report_time) {
    m_report_time = report_time;
    m_report_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::is_report_time_Set() const{
    return m_report_time_isSet;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::is_report_time_Valid() const{
    return m_report_time_isValid;
}

QList<OAIGoogleCloudApigeeV1ResourceStatus> OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::getResources() const {
    return m_resources;
}
void OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::setResources(const QList<OAIGoogleCloudApigeeV1ResourceStatus> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::is_resources_Valid() const{
    return m_resources_isValid;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1ReportInstanceStatusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
