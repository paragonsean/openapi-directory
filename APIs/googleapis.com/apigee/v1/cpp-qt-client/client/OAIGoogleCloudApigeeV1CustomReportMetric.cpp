/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1CustomReportMetric.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1CustomReportMetric::OAIGoogleCloudApigeeV1CustomReportMetric(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1CustomReportMetric::OAIGoogleCloudApigeeV1CustomReportMetric() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1CustomReportMetric::~OAIGoogleCloudApigeeV1CustomReportMetric() {}

void OAIGoogleCloudApigeeV1CustomReportMetric::initializeModel() {

    m_function_isSet = false;
    m_function_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudApigeeV1CustomReportMetric::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1CustomReportMetric::fromJsonObject(QJsonObject json) {

    m_function_isValid = ::OpenAPI::fromJsonValue(m_function, json[QString("function")]);
    m_function_isSet = !json[QString("function")].isNull() && m_function_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReportMetric::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1CustomReportMetric::asJsonObject() const {
    QJsonObject obj;
    if (m_function_isSet) {
        obj.insert(QString("function"), ::OpenAPI::toJsonValue(m_function));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1CustomReportMetric::getFunction() const {
    return m_function;
}
void OAIGoogleCloudApigeeV1CustomReportMetric::setFunction(const QString &function) {
    m_function = function;
    m_function_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReportMetric::is_function_Set() const{
    return m_function_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReportMetric::is_function_Valid() const{
    return m_function_isValid;
}

QString OAIGoogleCloudApigeeV1CustomReportMetric::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1CustomReportMetric::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1CustomReportMetric::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1CustomReportMetric::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudApigeeV1CustomReportMetric::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_function_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1CustomReportMetric::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
