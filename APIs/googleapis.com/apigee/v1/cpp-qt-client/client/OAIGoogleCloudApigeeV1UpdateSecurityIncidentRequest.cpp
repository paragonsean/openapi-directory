/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::~OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest() {}

void OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::initializeModel() {

    m_security_incident_isSet = false;
    m_security_incident_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::fromJsonObject(QJsonObject json) {

    m_security_incident_isValid = ::OpenAPI::fromJsonValue(m_security_incident, json[QString("securityIncident")]);
    m_security_incident_isSet = !json[QString("securityIncident")].isNull() && m_security_incident_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_security_incident.isSet()) {
        obj.insert(QString("securityIncident"), ::OpenAPI::toJsonValue(m_security_incident));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAIGoogleCloudApigeeV1SecurityIncident OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::getSecurityIncident() const {
    return m_security_incident;
}
void OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::setSecurityIncident(const OAIGoogleCloudApigeeV1SecurityIncident &security_incident) {
    m_security_incident = security_incident;
    m_security_incident_isSet = true;
}

bool OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::is_security_incident_Set() const{
    return m_security_incident_isSet;
}

bool OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::is_security_incident_Valid() const{
    return m_security_incident_isValid;
}

QString OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_security_incident.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1UpdateSecurityIncidentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
