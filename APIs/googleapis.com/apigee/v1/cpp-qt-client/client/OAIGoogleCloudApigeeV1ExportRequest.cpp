/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1ExportRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1ExportRequest::OAIGoogleCloudApigeeV1ExportRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1ExportRequest::OAIGoogleCloudApigeeV1ExportRequest() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1ExportRequest::~OAIGoogleCloudApigeeV1ExportRequest() {}

void OAIGoogleCloudApigeeV1ExportRequest::initializeModel() {

    m_csv_delimiter_isSet = false;
    m_csv_delimiter_isValid = false;

    m_datastore_name_isSet = false;
    m_datastore_name_isValid = false;

    m_date_range_isSet = false;
    m_date_range_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_output_format_isSet = false;
    m_output_format_isValid = false;
}

void OAIGoogleCloudApigeeV1ExportRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1ExportRequest::fromJsonObject(QJsonObject json) {

    m_csv_delimiter_isValid = ::OpenAPI::fromJsonValue(m_csv_delimiter, json[QString("csvDelimiter")]);
    m_csv_delimiter_isSet = !json[QString("csvDelimiter")].isNull() && m_csv_delimiter_isValid;

    m_datastore_name_isValid = ::OpenAPI::fromJsonValue(m_datastore_name, json[QString("datastoreName")]);
    m_datastore_name_isSet = !json[QString("datastoreName")].isNull() && m_datastore_name_isValid;

    m_date_range_isValid = ::OpenAPI::fromJsonValue(m_date_range, json[QString("dateRange")]);
    m_date_range_isSet = !json[QString("dateRange")].isNull() && m_date_range_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_output_format_isValid = ::OpenAPI::fromJsonValue(m_output_format, json[QString("outputFormat")]);
    m_output_format_isSet = !json[QString("outputFormat")].isNull() && m_output_format_isValid;
}

QString OAIGoogleCloudApigeeV1ExportRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1ExportRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_csv_delimiter_isSet) {
        obj.insert(QString("csvDelimiter"), ::OpenAPI::toJsonValue(m_csv_delimiter));
    }
    if (m_datastore_name_isSet) {
        obj.insert(QString("datastoreName"), ::OpenAPI::toJsonValue(m_datastore_name));
    }
    if (m_date_range.isSet()) {
        obj.insert(QString("dateRange"), ::OpenAPI::toJsonValue(m_date_range));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_output_format_isSet) {
        obj.insert(QString("outputFormat"), ::OpenAPI::toJsonValue(m_output_format));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1ExportRequest::getCsvDelimiter() const {
    return m_csv_delimiter;
}
void OAIGoogleCloudApigeeV1ExportRequest::setCsvDelimiter(const QString &csv_delimiter) {
    m_csv_delimiter = csv_delimiter;
    m_csv_delimiter_isSet = true;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_csv_delimiter_Set() const{
    return m_csv_delimiter_isSet;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_csv_delimiter_Valid() const{
    return m_csv_delimiter_isValid;
}

QString OAIGoogleCloudApigeeV1ExportRequest::getDatastoreName() const {
    return m_datastore_name;
}
void OAIGoogleCloudApigeeV1ExportRequest::setDatastoreName(const QString &datastore_name) {
    m_datastore_name = datastore_name;
    m_datastore_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_datastore_name_Set() const{
    return m_datastore_name_isSet;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_datastore_name_Valid() const{
    return m_datastore_name_isValid;
}

OAIGoogleCloudApigeeV1DateRange OAIGoogleCloudApigeeV1ExportRequest::getDateRange() const {
    return m_date_range;
}
void OAIGoogleCloudApigeeV1ExportRequest::setDateRange(const OAIGoogleCloudApigeeV1DateRange &date_range) {
    m_date_range = date_range;
    m_date_range_isSet = true;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_date_range_Set() const{
    return m_date_range_isSet;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_date_range_Valid() const{
    return m_date_range_isValid;
}

QString OAIGoogleCloudApigeeV1ExportRequest::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1ExportRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudApigeeV1ExportRequest::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1ExportRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1ExportRequest::getOutputFormat() const {
    return m_output_format;
}
void OAIGoogleCloudApigeeV1ExportRequest::setOutputFormat(const QString &output_format) {
    m_output_format = output_format;
    m_output_format_isSet = true;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_output_format_Set() const{
    return m_output_format_isSet;
}

bool OAIGoogleCloudApigeeV1ExportRequest::is_output_format_Valid() const{
    return m_output_format_isValid;
}

bool OAIGoogleCloudApigeeV1ExportRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_csv_delimiter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datastore_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_format_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1ExportRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
