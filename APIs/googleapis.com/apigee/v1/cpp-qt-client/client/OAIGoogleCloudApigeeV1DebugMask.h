/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1DebugMask.h
 *
 * 
 */

#ifndef OAIGoogleCloudApigeeV1DebugMask_H
#define OAIGoogleCloudApigeeV1DebugMask_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudApigeeV1DebugMask : public OAIObject {
public:
    OAIGoogleCloudApigeeV1DebugMask();
    OAIGoogleCloudApigeeV1DebugMask(QString json);
    ~OAIGoogleCloudApigeeV1DebugMask() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getFaultJsonPaths() const;
    void setFaultJsonPaths(const QList<QString> &fault_json_paths);
    bool is_fault_json_paths_Set() const;
    bool is_fault_json_paths_Valid() const;

    QList<QString> getFaultXPaths() const;
    void setFaultXPaths(const QList<QString> &fault_x_paths);
    bool is_fault_x_paths_Set() const;
    bool is_fault_x_paths_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QMap<QString, QString> getNamespaces() const;
    void setNamespaces(const QMap<QString, QString> &namespaces);
    bool is_namespaces_Set() const;
    bool is_namespaces_Valid() const;

    QList<QString> getRequestJsonPaths() const;
    void setRequestJsonPaths(const QList<QString> &request_json_paths);
    bool is_request_json_paths_Set() const;
    bool is_request_json_paths_Valid() const;

    QList<QString> getRequestXPaths() const;
    void setRequestXPaths(const QList<QString> &request_x_paths);
    bool is_request_x_paths_Set() const;
    bool is_request_x_paths_Valid() const;

    QList<QString> getResponseJsonPaths() const;
    void setResponseJsonPaths(const QList<QString> &response_json_paths);
    bool is_response_json_paths_Set() const;
    bool is_response_json_paths_Valid() const;

    QList<QString> getResponseXPaths() const;
    void setResponseXPaths(const QList<QString> &response_x_paths);
    bool is_response_x_paths_Set() const;
    bool is_response_x_paths_Valid() const;

    QList<QString> getVariables() const;
    void setVariables(const QList<QString> &variables);
    bool is_variables_Set() const;
    bool is_variables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_fault_json_paths;
    bool m_fault_json_paths_isSet;
    bool m_fault_json_paths_isValid;

    QList<QString> m_fault_x_paths;
    bool m_fault_x_paths_isSet;
    bool m_fault_x_paths_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QMap<QString, QString> m_namespaces;
    bool m_namespaces_isSet;
    bool m_namespaces_isValid;

    QList<QString> m_request_json_paths;
    bool m_request_json_paths_isSet;
    bool m_request_json_paths_isValid;

    QList<QString> m_request_x_paths;
    bool m_request_x_paths_isSet;
    bool m_request_x_paths_isValid;

    QList<QString> m_response_json_paths;
    bool m_response_json_paths_isSet;
    bool m_response_json_paths_isValid;

    QList<QString> m_response_x_paths;
    bool m_response_x_paths_isSet;
    bool m_response_x_paths_isValid;

    QList<QString> m_variables;
    bool m_variables_isSet;
    bool m_variables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1DebugMask)

#endif // OAIGoogleCloudApigeeV1DebugMask_H
