/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Export.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Export::OAIGoogleCloudApigeeV1Export(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Export::OAIGoogleCloudApigeeV1Export() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Export::~OAIGoogleCloudApigeeV1Export() {}

void OAIGoogleCloudApigeeV1Export::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_datastore_name_isSet = false;
    m_datastore_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_execution_time_isSet = false;
    m_execution_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;
}

void OAIGoogleCloudApigeeV1Export::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Export::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_datastore_name_isValid = ::OpenAPI::fromJsonValue(m_datastore_name, json[QString("datastoreName")]);
    m_datastore_name_isSet = !json[QString("datastoreName")].isNull() && m_datastore_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_execution_time_isValid = ::OpenAPI::fromJsonValue(m_execution_time, json[QString("executionTime")]);
    m_execution_time_isSet = !json[QString("executionTime")].isNull() && m_execution_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;
}

QString OAIGoogleCloudApigeeV1Export::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Export::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_datastore_name_isSet) {
        obj.insert(QString("datastoreName"), ::OpenAPI::toJsonValue(m_datastore_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_execution_time_isSet) {
        obj.insert(QString("executionTime"), ::OpenAPI::toJsonValue(m_execution_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1Export::getCreated() const {
    return m_created;
}
void OAIGoogleCloudApigeeV1Export::setCreated(const QString &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_created_Set() const{
    return m_created_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_created_Valid() const{
    return m_created_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getDatastoreName() const {
    return m_datastore_name;
}
void OAIGoogleCloudApigeeV1Export::setDatastoreName(const QString &datastore_name) {
    m_datastore_name = datastore_name;
    m_datastore_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_datastore_name_Set() const{
    return m_datastore_name_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_datastore_name_Valid() const{
    return m_datastore_name_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1Export::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getError() const {
    return m_error;
}
void OAIGoogleCloudApigeeV1Export::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_error_Valid() const{
    return m_error_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getExecutionTime() const {
    return m_execution_time;
}
void OAIGoogleCloudApigeeV1Export::setExecutionTime(const QString &execution_time) {
    m_execution_time = execution_time;
    m_execution_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_execution_time_Set() const{
    return m_execution_time_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_execution_time_Valid() const{
    return m_execution_time_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1Export::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getSelf() const {
    return m_self;
}
void OAIGoogleCloudApigeeV1Export::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_self_Set() const{
    return m_self_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_self_Valid() const{
    return m_self_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1Export::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudApigeeV1Export::getUpdated() const {
    return m_updated;
}
void OAIGoogleCloudApigeeV1Export::setUpdated(const QString &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIGoogleCloudApigeeV1Export::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIGoogleCloudApigeeV1Export::is_updated_Valid() const{
    return m_updated_isValid;
}

bool OAIGoogleCloudApigeeV1Export::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datastore_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Export::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
