/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Instance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Instance::OAIGoogleCloudApigeeV1Instance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Instance::OAIGoogleCloudApigeeV1Instance() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Instance::~OAIGoogleCloudApigeeV1Instance() {}

void OAIGoogleCloudApigeeV1Instance::initializeModel() {

    m_consumer_accept_list_isSet = false;
    m_consumer_accept_list_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_disk_encryption_key_name_isSet = false;
    m_disk_encryption_key_name_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_host_isSet = false;
    m_host_isValid = false;

    m_ip_range_isSet = false;
    m_ip_range_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_peering_cidr_range_isSet = false;
    m_peering_cidr_range_isValid = false;

    m_port_isSet = false;
    m_port_isValid = false;

    m_runtime_version_isSet = false;
    m_runtime_version_isValid = false;

    m_service_attachment_isSet = false;
    m_service_attachment_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudApigeeV1Instance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Instance::fromJsonObject(QJsonObject json) {

    m_consumer_accept_list_isValid = ::OpenAPI::fromJsonValue(m_consumer_accept_list, json[QString("consumerAcceptList")]);
    m_consumer_accept_list_isSet = !json[QString("consumerAcceptList")].isNull() && m_consumer_accept_list_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_disk_encryption_key_name_isValid = ::OpenAPI::fromJsonValue(m_disk_encryption_key_name, json[QString("diskEncryptionKeyName")]);
    m_disk_encryption_key_name_isSet = !json[QString("diskEncryptionKeyName")].isNull() && m_disk_encryption_key_name_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_host_isValid = ::OpenAPI::fromJsonValue(m_host, json[QString("host")]);
    m_host_isSet = !json[QString("host")].isNull() && m_host_isValid;

    m_ip_range_isValid = ::OpenAPI::fromJsonValue(m_ip_range, json[QString("ipRange")]);
    m_ip_range_isSet = !json[QString("ipRange")].isNull() && m_ip_range_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_peering_cidr_range_isValid = ::OpenAPI::fromJsonValue(m_peering_cidr_range, json[QString("peeringCidrRange")]);
    m_peering_cidr_range_isSet = !json[QString("peeringCidrRange")].isNull() && m_peering_cidr_range_isValid;

    m_port_isValid = ::OpenAPI::fromJsonValue(m_port, json[QString("port")]);
    m_port_isSet = !json[QString("port")].isNull() && m_port_isValid;

    m_runtime_version_isValid = ::OpenAPI::fromJsonValue(m_runtime_version, json[QString("runtimeVersion")]);
    m_runtime_version_isSet = !json[QString("runtimeVersion")].isNull() && m_runtime_version_isValid;

    m_service_attachment_isValid = ::OpenAPI::fromJsonValue(m_service_attachment, json[QString("serviceAttachment")]);
    m_service_attachment_isSet = !json[QString("serviceAttachment")].isNull() && m_service_attachment_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Instance::asJsonObject() const {
    QJsonObject obj;
    if (m_consumer_accept_list.size() > 0) {
        obj.insert(QString("consumerAcceptList"), ::OpenAPI::toJsonValue(m_consumer_accept_list));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_disk_encryption_key_name_isSet) {
        obj.insert(QString("diskEncryptionKeyName"), ::OpenAPI::toJsonValue(m_disk_encryption_key_name));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_host_isSet) {
        obj.insert(QString("host"), ::OpenAPI::toJsonValue(m_host));
    }
    if (m_ip_range_isSet) {
        obj.insert(QString("ipRange"), ::OpenAPI::toJsonValue(m_ip_range));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_peering_cidr_range_isSet) {
        obj.insert(QString("peeringCidrRange"), ::OpenAPI::toJsonValue(m_peering_cidr_range));
    }
    if (m_port_isSet) {
        obj.insert(QString("port"), ::OpenAPI::toJsonValue(m_port));
    }
    if (m_runtime_version_isSet) {
        obj.insert(QString("runtimeVersion"), ::OpenAPI::toJsonValue(m_runtime_version));
    }
    if (m_service_attachment_isSet) {
        obj.insert(QString("serviceAttachment"), ::OpenAPI::toJsonValue(m_service_attachment));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QList<QString> OAIGoogleCloudApigeeV1Instance::getConsumerAcceptList() const {
    return m_consumer_accept_list;
}
void OAIGoogleCloudApigeeV1Instance::setConsumerAcceptList(const QList<QString> &consumer_accept_list) {
    m_consumer_accept_list = consumer_accept_list;
    m_consumer_accept_list_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_consumer_accept_list_Set() const{
    return m_consumer_accept_list_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_consumer_accept_list_Valid() const{
    return m_consumer_accept_list_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getCreatedAt() const {
    return m_created_at;
}
void OAIGoogleCloudApigeeV1Instance::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1Instance::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getDiskEncryptionKeyName() const {
    return m_disk_encryption_key_name;
}
void OAIGoogleCloudApigeeV1Instance::setDiskEncryptionKeyName(const QString &disk_encryption_key_name) {
    m_disk_encryption_key_name = disk_encryption_key_name;
    m_disk_encryption_key_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_disk_encryption_key_name_Set() const{
    return m_disk_encryption_key_name_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_disk_encryption_key_name_Valid() const{
    return m_disk_encryption_key_name_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1Instance::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getHost() const {
    return m_host;
}
void OAIGoogleCloudApigeeV1Instance::setHost(const QString &host) {
    m_host = host;
    m_host_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_host_Set() const{
    return m_host_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_host_Valid() const{
    return m_host_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getIpRange() const {
    return m_ip_range;
}
void OAIGoogleCloudApigeeV1Instance::setIpRange(const QString &ip_range) {
    m_ip_range = ip_range;
    m_ip_range_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_ip_range_Set() const{
    return m_ip_range_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_ip_range_Valid() const{
    return m_ip_range_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGoogleCloudApigeeV1Instance::setLastModifiedAt(const QString &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getLocation() const {
    return m_location;
}
void OAIGoogleCloudApigeeV1Instance::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1Instance::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getPeeringCidrRange() const {
    return m_peering_cidr_range;
}
void OAIGoogleCloudApigeeV1Instance::setPeeringCidrRange(const QString &peering_cidr_range) {
    m_peering_cidr_range = peering_cidr_range;
    m_peering_cidr_range_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_peering_cidr_range_Set() const{
    return m_peering_cidr_range_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_peering_cidr_range_Valid() const{
    return m_peering_cidr_range_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getPort() const {
    return m_port;
}
void OAIGoogleCloudApigeeV1Instance::setPort(const QString &port) {
    m_port = port;
    m_port_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_port_Set() const{
    return m_port_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_port_Valid() const{
    return m_port_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getRuntimeVersion() const {
    return m_runtime_version;
}
void OAIGoogleCloudApigeeV1Instance::setRuntimeVersion(const QString &runtime_version) {
    m_runtime_version = runtime_version;
    m_runtime_version_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_runtime_version_Set() const{
    return m_runtime_version_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_runtime_version_Valid() const{
    return m_runtime_version_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getServiceAttachment() const {
    return m_service_attachment;
}
void OAIGoogleCloudApigeeV1Instance::setServiceAttachment(const QString &service_attachment) {
    m_service_attachment = service_attachment;
    m_service_attachment_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_service_attachment_Set() const{
    return m_service_attachment_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_service_attachment_Valid() const{
    return m_service_attachment_isValid;
}

QString OAIGoogleCloudApigeeV1Instance::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1Instance::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1Instance::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1Instance::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudApigeeV1Instance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_consumer_accept_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disk_encryption_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_peering_cidr_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_attachment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Instance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
