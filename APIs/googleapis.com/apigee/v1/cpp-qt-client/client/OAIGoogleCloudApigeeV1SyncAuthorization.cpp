/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1SyncAuthorization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1SyncAuthorization::OAIGoogleCloudApigeeV1SyncAuthorization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1SyncAuthorization::OAIGoogleCloudApigeeV1SyncAuthorization() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1SyncAuthorization::~OAIGoogleCloudApigeeV1SyncAuthorization() {}

void OAIGoogleCloudApigeeV1SyncAuthorization::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_identities_isSet = false;
    m_identities_isValid = false;
}

void OAIGoogleCloudApigeeV1SyncAuthorization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1SyncAuthorization::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_identities_isValid = ::OpenAPI::fromJsonValue(m_identities, json[QString("identities")]);
    m_identities_isSet = !json[QString("identities")].isNull() && m_identities_isValid;
}

QString OAIGoogleCloudApigeeV1SyncAuthorization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1SyncAuthorization::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_identities.size() > 0) {
        obj.insert(QString("identities"), ::OpenAPI::toJsonValue(m_identities));
    }
    return obj;
}

QByteArray OAIGoogleCloudApigeeV1SyncAuthorization::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudApigeeV1SyncAuthorization::setEtag(const QByteArray &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudApigeeV1SyncAuthorization::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudApigeeV1SyncAuthorization::is_etag_Valid() const{
    return m_etag_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1SyncAuthorization::getIdentities() const {
    return m_identities;
}
void OAIGoogleCloudApigeeV1SyncAuthorization::setIdentities(const QList<QString> &identities) {
    m_identities = identities;
    m_identities_isSet = true;
}

bool OAIGoogleCloudApigeeV1SyncAuthorization::is_identities_Set() const{
    return m_identities_isSet;
}

bool OAIGoogleCloudApigeeV1SyncAuthorization::is_identities_Valid() const{
    return m_identities_isValid;
}

bool OAIGoogleCloudApigeeV1SyncAuthorization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1SyncAuthorization::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
