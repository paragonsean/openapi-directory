/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Datastore.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Datastore::OAIGoogleCloudApigeeV1Datastore(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Datastore::OAIGoogleCloudApigeeV1Datastore() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Datastore::~OAIGoogleCloudApigeeV1Datastore() {}

void OAIGoogleCloudApigeeV1Datastore::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_datastore_config_isSet = false;
    m_datastore_config_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_org_isSet = false;
    m_org_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;

    m_target_type_isSet = false;
    m_target_type_isValid = false;
}

void OAIGoogleCloudApigeeV1Datastore::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Datastore::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_datastore_config_isValid = ::OpenAPI::fromJsonValue(m_datastore_config, json[QString("datastoreConfig")]);
    m_datastore_config_isSet = !json[QString("datastoreConfig")].isNull() && m_datastore_config_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_org_isValid = ::OpenAPI::fromJsonValue(m_org, json[QString("org")]);
    m_org_isSet = !json[QString("org")].isNull() && m_org_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_target_type_isValid = ::OpenAPI::fromJsonValue(m_target_type, json[QString("targetType")]);
    m_target_type_isSet = !json[QString("targetType")].isNull() && m_target_type_isValid;
}

QString OAIGoogleCloudApigeeV1Datastore::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Datastore::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_datastore_config.isSet()) {
        obj.insert(QString("datastoreConfig"), ::OpenAPI::toJsonValue(m_datastore_config));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_org_isSet) {
        obj.insert(QString("org"), ::OpenAPI::toJsonValue(m_org));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_target_type_isSet) {
        obj.insert(QString("targetType"), ::OpenAPI::toJsonValue(m_target_type));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1Datastore::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudApigeeV1Datastore::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1Datastore::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudApigeeV1Datastore::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudApigeeV1DatastoreConfig OAIGoogleCloudApigeeV1Datastore::getDatastoreConfig() const {
    return m_datastore_config;
}
void OAIGoogleCloudApigeeV1Datastore::setDatastoreConfig(const OAIGoogleCloudApigeeV1DatastoreConfig &datastore_config) {
    m_datastore_config = datastore_config;
    m_datastore_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1Datastore::is_datastore_config_Set() const{
    return m_datastore_config_isSet;
}

bool OAIGoogleCloudApigeeV1Datastore::is_datastore_config_Valid() const{
    return m_datastore_config_isValid;
}

QString OAIGoogleCloudApigeeV1Datastore::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1Datastore::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Datastore::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1Datastore::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudApigeeV1Datastore::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleCloudApigeeV1Datastore::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1Datastore::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleCloudApigeeV1Datastore::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIGoogleCloudApigeeV1Datastore::getOrg() const {
    return m_org;
}
void OAIGoogleCloudApigeeV1Datastore::setOrg(const QString &org) {
    m_org = org;
    m_org_isSet = true;
}

bool OAIGoogleCloudApigeeV1Datastore::is_org_Set() const{
    return m_org_isSet;
}

bool OAIGoogleCloudApigeeV1Datastore::is_org_Valid() const{
    return m_org_isValid;
}

QString OAIGoogleCloudApigeeV1Datastore::getSelf() const {
    return m_self;
}
void OAIGoogleCloudApigeeV1Datastore::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIGoogleCloudApigeeV1Datastore::is_self_Set() const{
    return m_self_isSet;
}

bool OAIGoogleCloudApigeeV1Datastore::is_self_Valid() const{
    return m_self_isValid;
}

QString OAIGoogleCloudApigeeV1Datastore::getTargetType() const {
    return m_target_type;
}
void OAIGoogleCloudApigeeV1Datastore::setTargetType(const QString &target_type) {
    m_target_type = target_type;
    m_target_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1Datastore::is_target_type_Set() const{
    return m_target_type_isSet;
}

bool OAIGoogleCloudApigeeV1Datastore::is_target_type_Valid() const{
    return m_target_type_isValid;
}

bool OAIGoogleCloudApigeeV1Datastore::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datastore_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_org_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Datastore::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
