/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1ApiProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1ApiProduct::OAIGoogleCloudApigeeV1ApiProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1ApiProduct::OAIGoogleCloudApigeeV1ApiProduct() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1ApiProduct::~OAIGoogleCloudApigeeV1ApiProduct() {}

void OAIGoogleCloudApigeeV1ApiProduct::initializeModel() {

    m_api_resources_isSet = false;
    m_api_resources_isValid = false;

    m_approval_type_isSet = false;
    m_approval_type_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_environments_isSet = false;
    m_environments_isValid = false;

    m_graphql_operation_group_isSet = false;
    m_graphql_operation_group_isValid = false;

    m_grpc_operation_group_isSet = false;
    m_grpc_operation_group_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_operation_group_isSet = false;
    m_operation_group_isValid = false;

    m_proxies_isSet = false;
    m_proxies_isValid = false;

    m_quota_isSet = false;
    m_quota_isValid = false;

    m_quota_counter_scope_isSet = false;
    m_quota_counter_scope_isValid = false;

    m_quota_interval_isSet = false;
    m_quota_interval_isValid = false;

    m_quota_time_unit_isSet = false;
    m_quota_time_unit_isValid = false;

    m_scopes_isSet = false;
    m_scopes_isValid = false;
}

void OAIGoogleCloudApigeeV1ApiProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1ApiProduct::fromJsonObject(QJsonObject json) {

    m_api_resources_isValid = ::OpenAPI::fromJsonValue(m_api_resources, json[QString("apiResources")]);
    m_api_resources_isSet = !json[QString("apiResources")].isNull() && m_api_resources_isValid;

    m_approval_type_isValid = ::OpenAPI::fromJsonValue(m_approval_type, json[QString("approvalType")]);
    m_approval_type_isSet = !json[QString("approvalType")].isNull() && m_approval_type_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_environments_isValid = ::OpenAPI::fromJsonValue(m_environments, json[QString("environments")]);
    m_environments_isSet = !json[QString("environments")].isNull() && m_environments_isValid;

    m_graphql_operation_group_isValid = ::OpenAPI::fromJsonValue(m_graphql_operation_group, json[QString("graphqlOperationGroup")]);
    m_graphql_operation_group_isSet = !json[QString("graphqlOperationGroup")].isNull() && m_graphql_operation_group_isValid;

    m_grpc_operation_group_isValid = ::OpenAPI::fromJsonValue(m_grpc_operation_group, json[QString("grpcOperationGroup")]);
    m_grpc_operation_group_isSet = !json[QString("grpcOperationGroup")].isNull() && m_grpc_operation_group_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_operation_group_isValid = ::OpenAPI::fromJsonValue(m_operation_group, json[QString("operationGroup")]);
    m_operation_group_isSet = !json[QString("operationGroup")].isNull() && m_operation_group_isValid;

    m_proxies_isValid = ::OpenAPI::fromJsonValue(m_proxies, json[QString("proxies")]);
    m_proxies_isSet = !json[QString("proxies")].isNull() && m_proxies_isValid;

    m_quota_isValid = ::OpenAPI::fromJsonValue(m_quota, json[QString("quota")]);
    m_quota_isSet = !json[QString("quota")].isNull() && m_quota_isValid;

    m_quota_counter_scope_isValid = ::OpenAPI::fromJsonValue(m_quota_counter_scope, json[QString("quotaCounterScope")]);
    m_quota_counter_scope_isSet = !json[QString("quotaCounterScope")].isNull() && m_quota_counter_scope_isValid;

    m_quota_interval_isValid = ::OpenAPI::fromJsonValue(m_quota_interval, json[QString("quotaInterval")]);
    m_quota_interval_isSet = !json[QString("quotaInterval")].isNull() && m_quota_interval_isValid;

    m_quota_time_unit_isValid = ::OpenAPI::fromJsonValue(m_quota_time_unit, json[QString("quotaTimeUnit")]);
    m_quota_time_unit_isSet = !json[QString("quotaTimeUnit")].isNull() && m_quota_time_unit_isValid;

    m_scopes_isValid = ::OpenAPI::fromJsonValue(m_scopes, json[QString("scopes")]);
    m_scopes_isSet = !json[QString("scopes")].isNull() && m_scopes_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1ApiProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_api_resources.size() > 0) {
        obj.insert(QString("apiResources"), ::OpenAPI::toJsonValue(m_api_resources));
    }
    if (m_approval_type_isSet) {
        obj.insert(QString("approvalType"), ::OpenAPI::toJsonValue(m_approval_type));
    }
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_environments.size() > 0) {
        obj.insert(QString("environments"), ::OpenAPI::toJsonValue(m_environments));
    }
    if (m_graphql_operation_group.isSet()) {
        obj.insert(QString("graphqlOperationGroup"), ::OpenAPI::toJsonValue(m_graphql_operation_group));
    }
    if (m_grpc_operation_group.isSet()) {
        obj.insert(QString("grpcOperationGroup"), ::OpenAPI::toJsonValue(m_grpc_operation_group));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_operation_group.isSet()) {
        obj.insert(QString("operationGroup"), ::OpenAPI::toJsonValue(m_operation_group));
    }
    if (m_proxies.size() > 0) {
        obj.insert(QString("proxies"), ::OpenAPI::toJsonValue(m_proxies));
    }
    if (m_quota_isSet) {
        obj.insert(QString("quota"), ::OpenAPI::toJsonValue(m_quota));
    }
    if (m_quota_counter_scope_isSet) {
        obj.insert(QString("quotaCounterScope"), ::OpenAPI::toJsonValue(m_quota_counter_scope));
    }
    if (m_quota_interval_isSet) {
        obj.insert(QString("quotaInterval"), ::OpenAPI::toJsonValue(m_quota_interval));
    }
    if (m_quota_time_unit_isSet) {
        obj.insert(QString("quotaTimeUnit"), ::OpenAPI::toJsonValue(m_quota_time_unit));
    }
    if (m_scopes.size() > 0) {
        obj.insert(QString("scopes"), ::OpenAPI::toJsonValue(m_scopes));
    }
    return obj;
}

QList<QString> OAIGoogleCloudApigeeV1ApiProduct::getApiResources() const {
    return m_api_resources;
}
void OAIGoogleCloudApigeeV1ApiProduct::setApiResources(const QList<QString> &api_resources) {
    m_api_resources = api_resources;
    m_api_resources_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_api_resources_Set() const{
    return m_api_resources_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_api_resources_Valid() const{
    return m_api_resources_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getApprovalType() const {
    return m_approval_type;
}
void OAIGoogleCloudApigeeV1ApiProduct::setApprovalType(const QString &approval_type) {
    m_approval_type = approval_type;
    m_approval_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_approval_type_Set() const{
    return m_approval_type_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_approval_type_Valid() const{
    return m_approval_type_isValid;
}

QList<OAIGoogleCloudApigeeV1Attribute> OAIGoogleCloudApigeeV1ApiProduct::getAttributes() const {
    return m_attributes;
}
void OAIGoogleCloudApigeeV1ApiProduct::setAttributes(const QList<OAIGoogleCloudApigeeV1Attribute> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getCreatedAt() const {
    return m_created_at;
}
void OAIGoogleCloudApigeeV1ApiProduct::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1ApiProduct::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1ApiProduct::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1ApiProduct::getEnvironments() const {
    return m_environments;
}
void OAIGoogleCloudApigeeV1ApiProduct::setEnvironments(const QList<QString> &environments) {
    m_environments = environments;
    m_environments_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_environments_Set() const{
    return m_environments_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_environments_Valid() const{
    return m_environments_isValid;
}

OAIGoogleCloudApigeeV1GraphQLOperationGroup OAIGoogleCloudApigeeV1ApiProduct::getGraphqlOperationGroup() const {
    return m_graphql_operation_group;
}
void OAIGoogleCloudApigeeV1ApiProduct::setGraphqlOperationGroup(const OAIGoogleCloudApigeeV1GraphQLOperationGroup &graphql_operation_group) {
    m_graphql_operation_group = graphql_operation_group;
    m_graphql_operation_group_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_graphql_operation_group_Set() const{
    return m_graphql_operation_group_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_graphql_operation_group_Valid() const{
    return m_graphql_operation_group_isValid;
}

OAIGoogleCloudApigeeV1GrpcOperationGroup OAIGoogleCloudApigeeV1ApiProduct::getGrpcOperationGroup() const {
    return m_grpc_operation_group;
}
void OAIGoogleCloudApigeeV1ApiProduct::setGrpcOperationGroup(const OAIGoogleCloudApigeeV1GrpcOperationGroup &grpc_operation_group) {
    m_grpc_operation_group = grpc_operation_group;
    m_grpc_operation_group_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_grpc_operation_group_Set() const{
    return m_grpc_operation_group_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_grpc_operation_group_Valid() const{
    return m_grpc_operation_group_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGoogleCloudApigeeV1ApiProduct::setLastModifiedAt(const QString &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1ApiProduct::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudApigeeV1OperationGroup OAIGoogleCloudApigeeV1ApiProduct::getOperationGroup() const {
    return m_operation_group;
}
void OAIGoogleCloudApigeeV1ApiProduct::setOperationGroup(const OAIGoogleCloudApigeeV1OperationGroup &operation_group) {
    m_operation_group = operation_group;
    m_operation_group_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_operation_group_Set() const{
    return m_operation_group_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_operation_group_Valid() const{
    return m_operation_group_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1ApiProduct::getProxies() const {
    return m_proxies;
}
void OAIGoogleCloudApigeeV1ApiProduct::setProxies(const QList<QString> &proxies) {
    m_proxies = proxies;
    m_proxies_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_proxies_Set() const{
    return m_proxies_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_proxies_Valid() const{
    return m_proxies_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getQuota() const {
    return m_quota;
}
void OAIGoogleCloudApigeeV1ApiProduct::setQuota(const QString &quota) {
    m_quota = quota;
    m_quota_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_Set() const{
    return m_quota_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_Valid() const{
    return m_quota_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getQuotaCounterScope() const {
    return m_quota_counter_scope;
}
void OAIGoogleCloudApigeeV1ApiProduct::setQuotaCounterScope(const QString &quota_counter_scope) {
    m_quota_counter_scope = quota_counter_scope;
    m_quota_counter_scope_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_counter_scope_Set() const{
    return m_quota_counter_scope_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_counter_scope_Valid() const{
    return m_quota_counter_scope_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getQuotaInterval() const {
    return m_quota_interval;
}
void OAIGoogleCloudApigeeV1ApiProduct::setQuotaInterval(const QString &quota_interval) {
    m_quota_interval = quota_interval;
    m_quota_interval_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_interval_Set() const{
    return m_quota_interval_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_interval_Valid() const{
    return m_quota_interval_isValid;
}

QString OAIGoogleCloudApigeeV1ApiProduct::getQuotaTimeUnit() const {
    return m_quota_time_unit;
}
void OAIGoogleCloudApigeeV1ApiProduct::setQuotaTimeUnit(const QString &quota_time_unit) {
    m_quota_time_unit = quota_time_unit;
    m_quota_time_unit_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_time_unit_Set() const{
    return m_quota_time_unit_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_quota_time_unit_Valid() const{
    return m_quota_time_unit_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1ApiProduct::getScopes() const {
    return m_scopes;
}
void OAIGoogleCloudApigeeV1ApiProduct::setScopes(const QList<QString> &scopes) {
    m_scopes = scopes;
    m_scopes_isSet = true;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_scopes_Set() const{
    return m_scopes_isSet;
}

bool OAIGoogleCloudApigeeV1ApiProduct::is_scopes_Valid() const{
    return m_scopes_isValid;
}

bool OAIGoogleCloudApigeeV1ApiProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_graphql_operation_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_grpc_operation_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_proxies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_counter_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_time_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scopes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1ApiProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
