/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1TargetServer.h
 *
 * TargetServer configuration. TargetServers are used to decouple a proxy TargetEndpoint HTTPTargetConnections from concrete URLs for backend services.
 */

#ifndef OAIGoogleCloudApigeeV1TargetServer_H
#define OAIGoogleCloudApigeeV1TargetServer_H

#include <QJsonObject>

#include "OAIGoogleCloudApigeeV1TlsInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudApigeeV1TlsInfo;

class OAIGoogleCloudApigeeV1TargetServer : public OAIObject {
public:
    OAIGoogleCloudApigeeV1TargetServer();
    OAIGoogleCloudApigeeV1TargetServer(QString json);
    ~OAIGoogleCloudApigeeV1TargetServer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    bool isIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getProtocol() const;
    void setProtocol(const QString &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    OAIGoogleCloudApigeeV1TlsInfo getSSlInfo() const;
    void setSSlInfo(const OAIGoogleCloudApigeeV1TlsInfo &s_sl_info);
    bool is_s_sl_info_Set() const;
    bool is_s_sl_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    OAIGoogleCloudApigeeV1TlsInfo m_s_sl_info;
    bool m_s_sl_info_isSet;
    bool m_s_sl_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1TargetServer)

#endif // OAIGoogleCloudApigeeV1TargetServer_H
