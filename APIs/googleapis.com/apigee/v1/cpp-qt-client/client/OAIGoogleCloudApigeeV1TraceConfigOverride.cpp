/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1TraceConfigOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1TraceConfigOverride::OAIGoogleCloudApigeeV1TraceConfigOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1TraceConfigOverride::OAIGoogleCloudApigeeV1TraceConfigOverride() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1TraceConfigOverride::~OAIGoogleCloudApigeeV1TraceConfigOverride() {}

void OAIGoogleCloudApigeeV1TraceConfigOverride::initializeModel() {

    m_api_proxy_isSet = false;
    m_api_proxy_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sampling_config_isSet = false;
    m_sampling_config_isValid = false;
}

void OAIGoogleCloudApigeeV1TraceConfigOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1TraceConfigOverride::fromJsonObject(QJsonObject json) {

    m_api_proxy_isValid = ::OpenAPI::fromJsonValue(m_api_proxy, json[QString("apiProxy")]);
    m_api_proxy_isSet = !json[QString("apiProxy")].isNull() && m_api_proxy_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sampling_config_isValid = ::OpenAPI::fromJsonValue(m_sampling_config, json[QString("samplingConfig")]);
    m_sampling_config_isSet = !json[QString("samplingConfig")].isNull() && m_sampling_config_isValid;
}

QString OAIGoogleCloudApigeeV1TraceConfigOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1TraceConfigOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_api_proxy_isSet) {
        obj.insert(QString("apiProxy"), ::OpenAPI::toJsonValue(m_api_proxy));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sampling_config.isSet()) {
        obj.insert(QString("samplingConfig"), ::OpenAPI::toJsonValue(m_sampling_config));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1TraceConfigOverride::getApiProxy() const {
    return m_api_proxy;
}
void OAIGoogleCloudApigeeV1TraceConfigOverride::setApiProxy(const QString &api_proxy) {
    m_api_proxy = api_proxy;
    m_api_proxy_isSet = true;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::is_api_proxy_Set() const{
    return m_api_proxy_isSet;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::is_api_proxy_Valid() const{
    return m_api_proxy_isValid;
}

QString OAIGoogleCloudApigeeV1TraceConfigOverride::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1TraceConfigOverride::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudApigeeV1TraceSamplingConfig OAIGoogleCloudApigeeV1TraceConfigOverride::getSamplingConfig() const {
    return m_sampling_config;
}
void OAIGoogleCloudApigeeV1TraceConfigOverride::setSamplingConfig(const OAIGoogleCloudApigeeV1TraceSamplingConfig &sampling_config) {
    m_sampling_config = sampling_config;
    m_sampling_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::is_sampling_config_Set() const{
    return m_sampling_config_isSet;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::is_sampling_config_Valid() const{
    return m_sampling_config_isValid;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_proxy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sampling_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1TraceConfigOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
