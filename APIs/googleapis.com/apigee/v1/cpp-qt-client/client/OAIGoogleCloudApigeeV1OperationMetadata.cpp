/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1OperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1OperationMetadata::OAIGoogleCloudApigeeV1OperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1OperationMetadata::OAIGoogleCloudApigeeV1OperationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1OperationMetadata::~OAIGoogleCloudApigeeV1OperationMetadata() {}

void OAIGoogleCloudApigeeV1OperationMetadata::initializeModel() {

    m_operation_type_isSet = false;
    m_operation_type_isValid = false;

    m_progress_isSet = false;
    m_progress_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_target_resource_name_isSet = false;
    m_target_resource_name_isValid = false;

    m_warnings_isSet = false;
    m_warnings_isValid = false;
}

void OAIGoogleCloudApigeeV1OperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1OperationMetadata::fromJsonObject(QJsonObject json) {

    m_operation_type_isValid = ::OpenAPI::fromJsonValue(m_operation_type, json[QString("operationType")]);
    m_operation_type_isSet = !json[QString("operationType")].isNull() && m_operation_type_isValid;

    m_progress_isValid = ::OpenAPI::fromJsonValue(m_progress, json[QString("progress")]);
    m_progress_isSet = !json[QString("progress")].isNull() && m_progress_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_target_resource_name_isValid = ::OpenAPI::fromJsonValue(m_target_resource_name, json[QString("targetResourceName")]);
    m_target_resource_name_isSet = !json[QString("targetResourceName")].isNull() && m_target_resource_name_isValid;

    m_warnings_isValid = ::OpenAPI::fromJsonValue(m_warnings, json[QString("warnings")]);
    m_warnings_isSet = !json[QString("warnings")].isNull() && m_warnings_isValid;
}

QString OAIGoogleCloudApigeeV1OperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1OperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_operation_type_isSet) {
        obj.insert(QString("operationType"), ::OpenAPI::toJsonValue(m_operation_type));
    }
    if (m_progress.isSet()) {
        obj.insert(QString("progress"), ::OpenAPI::toJsonValue(m_progress));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_target_resource_name_isSet) {
        obj.insert(QString("targetResourceName"), ::OpenAPI::toJsonValue(m_target_resource_name));
    }
    if (m_warnings.size() > 0) {
        obj.insert(QString("warnings"), ::OpenAPI::toJsonValue(m_warnings));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1OperationMetadata::getOperationType() const {
    return m_operation_type;
}
void OAIGoogleCloudApigeeV1OperationMetadata::setOperationType(const QString &operation_type) {
    m_operation_type = operation_type;
    m_operation_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_operation_type_Set() const{
    return m_operation_type_isSet;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_operation_type_Valid() const{
    return m_operation_type_isValid;
}

OAIGoogleCloudApigeeV1OperationMetadataProgress OAIGoogleCloudApigeeV1OperationMetadata::getProgress() const {
    return m_progress;
}
void OAIGoogleCloudApigeeV1OperationMetadata::setProgress(const OAIGoogleCloudApigeeV1OperationMetadataProgress &progress) {
    m_progress = progress;
    m_progress_isSet = true;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_progress_Set() const{
    return m_progress_isSet;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_progress_Valid() const{
    return m_progress_isValid;
}

QString OAIGoogleCloudApigeeV1OperationMetadata::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1OperationMetadata::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudApigeeV1OperationMetadata::getTargetResourceName() const {
    return m_target_resource_name;
}
void OAIGoogleCloudApigeeV1OperationMetadata::setTargetResourceName(const QString &target_resource_name) {
    m_target_resource_name = target_resource_name;
    m_target_resource_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_target_resource_name_Set() const{
    return m_target_resource_name_isSet;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_target_resource_name_Valid() const{
    return m_target_resource_name_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1OperationMetadata::getWarnings() const {
    return m_warnings;
}
void OAIGoogleCloudApigeeV1OperationMetadata::setWarnings(const QList<QString> &warnings) {
    m_warnings = warnings;
    m_warnings_isSet = true;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_warnings_Set() const{
    return m_warnings_isSet;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::is_warnings_Valid() const{
    return m_warnings_isValid;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1OperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
