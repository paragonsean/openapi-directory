/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1ScoreComponentRecommendation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1ScoreComponentRecommendation::OAIGoogleCloudApigeeV1ScoreComponentRecommendation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1ScoreComponentRecommendation::OAIGoogleCloudApigeeV1ScoreComponentRecommendation() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1ScoreComponentRecommendation::~OAIGoogleCloudApigeeV1ScoreComponentRecommendation() {}

void OAIGoogleCloudApigeeV1ScoreComponentRecommendation::initializeModel() {

    m_actions_isSet = false;
    m_actions_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_impact_isSet = false;
    m_impact_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleCloudApigeeV1ScoreComponentRecommendation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1ScoreComponentRecommendation::fromJsonObject(QJsonObject json) {

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("actions")]);
    m_actions_isSet = !json[QString("actions")].isNull() && m_actions_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_impact_isValid = ::OpenAPI::fromJsonValue(m_impact, json[QString("impact")]);
    m_impact_isSet = !json[QString("impact")].isNull() && m_impact_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleCloudApigeeV1ScoreComponentRecommendation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1ScoreComponentRecommendation::asJsonObject() const {
    QJsonObject obj;
    if (m_actions.size() > 0) {
        obj.insert(QString("actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_impact_isSet) {
        obj.insert(QString("impact"), ::OpenAPI::toJsonValue(m_impact));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QList<OAIGoogleCloudApigeeV1ScoreComponentRecommendationAction> OAIGoogleCloudApigeeV1ScoreComponentRecommendation::getActions() const {
    return m_actions;
}
void OAIGoogleCloudApigeeV1ScoreComponentRecommendation::setActions(const QList<OAIGoogleCloudApigeeV1ScoreComponentRecommendationAction> &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_actions_Valid() const{
    return m_actions_isValid;
}

QString OAIGoogleCloudApigeeV1ScoreComponentRecommendation::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1ScoreComponentRecommendation::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIGoogleCloudApigeeV1ScoreComponentRecommendation::getImpact() const {
    return m_impact;
}
void OAIGoogleCloudApigeeV1ScoreComponentRecommendation::setImpact(const qint32 &impact) {
    m_impact = impact;
    m_impact_isSet = true;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_impact_Set() const{
    return m_impact_isSet;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_impact_Valid() const{
    return m_impact_isValid;
}

QString OAIGoogleCloudApigeeV1ScoreComponentRecommendation::getTitle() const {
    return m_title;
}
void OAIGoogleCloudApigeeV1ScoreComponentRecommendation::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_impact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1ScoreComponentRecommendation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
