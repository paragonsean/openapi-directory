/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1ProfileConfigCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1ProfileConfigCategory::OAIGoogleCloudApigeeV1ProfileConfigCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1ProfileConfigCategory::OAIGoogleCloudApigeeV1ProfileConfigCategory() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1ProfileConfigCategory::~OAIGoogleCloudApigeeV1ProfileConfigCategory() {}

void OAIGoogleCloudApigeeV1ProfileConfigCategory::initializeModel() {

    m_abuse_isSet = false;
    m_abuse_isValid = false;

    m_authorization_isSet = false;
    m_authorization_isValid = false;

    m_cors_isSet = false;
    m_cors_isValid = false;

    m_mediation_isSet = false;
    m_mediation_isValid = false;

    m_mtls_isSet = false;
    m_mtls_isValid = false;

    m_threat_isSet = false;
    m_threat_isValid = false;
}

void OAIGoogleCloudApigeeV1ProfileConfigCategory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1ProfileConfigCategory::fromJsonObject(QJsonObject json) {

    m_abuse_isValid = ::OpenAPI::fromJsonValue(m_abuse, json[QString("abuse")]);
    m_abuse_isSet = !json[QString("abuse")].isNull() && m_abuse_isValid;

    m_authorization_isValid = ::OpenAPI::fromJsonValue(m_authorization, json[QString("authorization")]);
    m_authorization_isSet = !json[QString("authorization")].isNull() && m_authorization_isValid;

    m_cors_isValid = ::OpenAPI::fromJsonValue(m_cors, json[QString("cors")]);
    m_cors_isSet = !json[QString("cors")].isNull() && m_cors_isValid;

    m_mediation_isValid = ::OpenAPI::fromJsonValue(m_mediation, json[QString("mediation")]);
    m_mediation_isSet = !json[QString("mediation")].isNull() && m_mediation_isValid;

    m_mtls_isValid = ::OpenAPI::fromJsonValue(m_mtls, json[QString("mtls")]);
    m_mtls_isSet = !json[QString("mtls")].isNull() && m_mtls_isValid;

    m_threat_isValid = ::OpenAPI::fromJsonValue(m_threat, json[QString("threat")]);
    m_threat_isSet = !json[QString("threat")].isNull() && m_threat_isValid;
}

QString OAIGoogleCloudApigeeV1ProfileConfigCategory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1ProfileConfigCategory::asJsonObject() const {
    QJsonObject obj;
    if (m_abuse_isSet) {
        obj.insert(QString("abuse"), ::OpenAPI::toJsonValue(m_abuse));
    }
    if (m_authorization_isSet) {
        obj.insert(QString("authorization"), ::OpenAPI::toJsonValue(m_authorization));
    }
    if (m_cors_isSet) {
        obj.insert(QString("cors"), ::OpenAPI::toJsonValue(m_cors));
    }
    if (m_mediation_isSet) {
        obj.insert(QString("mediation"), ::OpenAPI::toJsonValue(m_mediation));
    }
    if (m_mtls_isSet) {
        obj.insert(QString("mtls"), ::OpenAPI::toJsonValue(m_mtls));
    }
    if (m_threat_isSet) {
        obj.insert(QString("threat"), ::OpenAPI::toJsonValue(m_threat));
    }
    return obj;
}

OAIObject OAIGoogleCloudApigeeV1ProfileConfigCategory::getAbuse() const {
    return m_abuse;
}
void OAIGoogleCloudApigeeV1ProfileConfigCategory::setAbuse(const OAIObject &abuse) {
    m_abuse = abuse;
    m_abuse_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_abuse_Set() const{
    return m_abuse_isSet;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_abuse_Valid() const{
    return m_abuse_isValid;
}

OAIObject OAIGoogleCloudApigeeV1ProfileConfigCategory::getAuthorization() const {
    return m_authorization;
}
void OAIGoogleCloudApigeeV1ProfileConfigCategory::setAuthorization(const OAIObject &authorization) {
    m_authorization = authorization;
    m_authorization_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_authorization_Set() const{
    return m_authorization_isSet;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_authorization_Valid() const{
    return m_authorization_isValid;
}

OAIObject OAIGoogleCloudApigeeV1ProfileConfigCategory::getCors() const {
    return m_cors;
}
void OAIGoogleCloudApigeeV1ProfileConfigCategory::setCors(const OAIObject &cors) {
    m_cors = cors;
    m_cors_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_cors_Set() const{
    return m_cors_isSet;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_cors_Valid() const{
    return m_cors_isValid;
}

OAIObject OAIGoogleCloudApigeeV1ProfileConfigCategory::getMediation() const {
    return m_mediation;
}
void OAIGoogleCloudApigeeV1ProfileConfigCategory::setMediation(const OAIObject &mediation) {
    m_mediation = mediation;
    m_mediation_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_mediation_Set() const{
    return m_mediation_isSet;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_mediation_Valid() const{
    return m_mediation_isValid;
}

OAIObject OAIGoogleCloudApigeeV1ProfileConfigCategory::getMtls() const {
    return m_mtls;
}
void OAIGoogleCloudApigeeV1ProfileConfigCategory::setMtls(const OAIObject &mtls) {
    m_mtls = mtls;
    m_mtls_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_mtls_Set() const{
    return m_mtls_isSet;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_mtls_Valid() const{
    return m_mtls_isValid;
}

OAIObject OAIGoogleCloudApigeeV1ProfileConfigCategory::getThreat() const {
    return m_threat;
}
void OAIGoogleCloudApigeeV1ProfileConfigCategory::setThreat(const OAIObject &threat) {
    m_threat = threat;
    m_threat_isSet = true;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_threat_Set() const{
    return m_threat_isSet;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::is_threat_Valid() const{
    return m_threat_isValid;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_abuse_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cors_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mediation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mtls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threat_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1ProfileConfigCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
