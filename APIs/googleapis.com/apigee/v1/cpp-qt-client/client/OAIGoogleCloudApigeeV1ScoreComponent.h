/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1ScoreComponent.h
 *
 * Component is an individual security element that is scored.
 */

#ifndef OAIGoogleCloudApigeeV1ScoreComponent_H
#define OAIGoogleCloudApigeeV1ScoreComponent_H

#include <QJsonObject>

#include "OAIGoogleCloudApigeeV1ScoreComponentRecommendation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudApigeeV1ScoreComponentRecommendation;

class OAIGoogleCloudApigeeV1ScoreComponent : public OAIObject {
public:
    OAIGoogleCloudApigeeV1ScoreComponent();
    OAIGoogleCloudApigeeV1ScoreComponent(QString json);
    ~OAIGoogleCloudApigeeV1ScoreComponent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCalculateTime() const;
    void setCalculateTime(const QString &calculate_time);
    bool is_calculate_time_Set() const;
    bool is_calculate_time_Valid() const;

    QString getDataCaptureTime() const;
    void setDataCaptureTime(const QString &data_capture_time);
    bool is_data_capture_time_Set() const;
    bool is_data_capture_time_Valid() const;

    QList<QString> getDrilldownPaths() const;
    void setDrilldownPaths(const QList<QString> &drilldown_paths);
    bool is_drilldown_paths_Set() const;
    bool is_drilldown_paths_Valid() const;

    QList<OAIGoogleCloudApigeeV1ScoreComponentRecommendation> getRecommendations() const;
    void setRecommendations(const QList<OAIGoogleCloudApigeeV1ScoreComponentRecommendation> &recommendations);
    bool is_recommendations_Set() const;
    bool is_recommendations_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getScorePath() const;
    void setScorePath(const QString &score_path);
    bool is_score_path_Set() const;
    bool is_score_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calculate_time;
    bool m_calculate_time_isSet;
    bool m_calculate_time_isValid;

    QString m_data_capture_time;
    bool m_data_capture_time_isSet;
    bool m_data_capture_time_isValid;

    QList<QString> m_drilldown_paths;
    bool m_drilldown_paths_isSet;
    bool m_drilldown_paths_isValid;

    QList<OAIGoogleCloudApigeeV1ScoreComponentRecommendation> m_recommendations;
    bool m_recommendations_isSet;
    bool m_recommendations_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_score_path;
    bool m_score_path_isSet;
    bool m_score_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1ScoreComponent)

#endif // OAIGoogleCloudApigeeV1ScoreComponent_H
