/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1EntityMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1EntityMetadata::OAIGoogleCloudApigeeV1EntityMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1EntityMetadata::OAIGoogleCloudApigeeV1EntityMetadata() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1EntityMetadata::~OAIGoogleCloudApigeeV1EntityMetadata() {}

void OAIGoogleCloudApigeeV1EntityMetadata::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_sub_type_isSet = false;
    m_sub_type_isValid = false;
}

void OAIGoogleCloudApigeeV1EntityMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1EntityMetadata::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_sub_type_isValid = ::OpenAPI::fromJsonValue(m_sub_type, json[QString("subType")]);
    m_sub_type_isSet = !json[QString("subType")].isNull() && m_sub_type_isValid;
}

QString OAIGoogleCloudApigeeV1EntityMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1EntityMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_sub_type_isSet) {
        obj.insert(QString("subType"), ::OpenAPI::toJsonValue(m_sub_type));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1EntityMetadata::getCreatedAt() const {
    return m_created_at;
}
void OAIGoogleCloudApigeeV1EntityMetadata::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGoogleCloudApigeeV1EntityMetadata::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGoogleCloudApigeeV1EntityMetadata::setLastModifiedAt(const QString &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIGoogleCloudApigeeV1EntityMetadata::getSubType() const {
    return m_sub_type;
}
void OAIGoogleCloudApigeeV1EntityMetadata::setSubType(const QString &sub_type) {
    m_sub_type = sub_type;
    m_sub_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::is_sub_type_Set() const{
    return m_sub_type_isSet;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::is_sub_type_Valid() const{
    return m_sub_type_isValid;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1EntityMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
