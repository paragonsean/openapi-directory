/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1InstanceDeploymentStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1InstanceDeploymentStatus::OAIGoogleCloudApigeeV1InstanceDeploymentStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1InstanceDeploymentStatus::OAIGoogleCloudApigeeV1InstanceDeploymentStatus() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1InstanceDeploymentStatus::~OAIGoogleCloudApigeeV1InstanceDeploymentStatus() {}

void OAIGoogleCloudApigeeV1InstanceDeploymentStatus::initializeModel() {

    m_deployed_revisions_isSet = false;
    m_deployed_revisions_isValid = false;

    m_deployed_routes_isSet = false;
    m_deployed_routes_isValid = false;

    m_instance_isSet = false;
    m_instance_isValid = false;
}

void OAIGoogleCloudApigeeV1InstanceDeploymentStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1InstanceDeploymentStatus::fromJsonObject(QJsonObject json) {

    m_deployed_revisions_isValid = ::OpenAPI::fromJsonValue(m_deployed_revisions, json[QString("deployedRevisions")]);
    m_deployed_revisions_isSet = !json[QString("deployedRevisions")].isNull() && m_deployed_revisions_isValid;

    m_deployed_routes_isValid = ::OpenAPI::fromJsonValue(m_deployed_routes, json[QString("deployedRoutes")]);
    m_deployed_routes_isSet = !json[QString("deployedRoutes")].isNull() && m_deployed_routes_isValid;

    m_instance_isValid = ::OpenAPI::fromJsonValue(m_instance, json[QString("instance")]);
    m_instance_isSet = !json[QString("instance")].isNull() && m_instance_isValid;
}

QString OAIGoogleCloudApigeeV1InstanceDeploymentStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1InstanceDeploymentStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_deployed_revisions.size() > 0) {
        obj.insert(QString("deployedRevisions"), ::OpenAPI::toJsonValue(m_deployed_revisions));
    }
    if (m_deployed_routes.size() > 0) {
        obj.insert(QString("deployedRoutes"), ::OpenAPI::toJsonValue(m_deployed_routes));
    }
    if (m_instance_isSet) {
        obj.insert(QString("instance"), ::OpenAPI::toJsonValue(m_instance));
    }
    return obj;
}

QList<OAIGoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision> OAIGoogleCloudApigeeV1InstanceDeploymentStatus::getDeployedRevisions() const {
    return m_deployed_revisions;
}
void OAIGoogleCloudApigeeV1InstanceDeploymentStatus::setDeployedRevisions(const QList<OAIGoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision> &deployed_revisions) {
    m_deployed_revisions = deployed_revisions;
    m_deployed_revisions_isSet = true;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::is_deployed_revisions_Set() const{
    return m_deployed_revisions_isSet;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::is_deployed_revisions_Valid() const{
    return m_deployed_revisions_isValid;
}

QList<OAIGoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute> OAIGoogleCloudApigeeV1InstanceDeploymentStatus::getDeployedRoutes() const {
    return m_deployed_routes;
}
void OAIGoogleCloudApigeeV1InstanceDeploymentStatus::setDeployedRoutes(const QList<OAIGoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute> &deployed_routes) {
    m_deployed_routes = deployed_routes;
    m_deployed_routes_isSet = true;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::is_deployed_routes_Set() const{
    return m_deployed_routes_isSet;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::is_deployed_routes_Valid() const{
    return m_deployed_routes_isValid;
}

QString OAIGoogleCloudApigeeV1InstanceDeploymentStatus::getInstance() const {
    return m_instance;
}
void OAIGoogleCloudApigeeV1InstanceDeploymentStatus::setInstance(const QString &instance) {
    m_instance = instance;
    m_instance_isSet = true;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::is_instance_Set() const{
    return m_instance_isSet;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::is_instance_Valid() const{
    return m_instance_isValid;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deployed_revisions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployed_routes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1InstanceDeploymentStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
