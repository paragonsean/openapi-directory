/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1SecurityIncident.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1SecurityIncident::OAIGoogleCloudApigeeV1SecurityIncident(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1SecurityIncident::OAIGoogleCloudApigeeV1SecurityIncident() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1SecurityIncident::~OAIGoogleCloudApigeeV1SecurityIncident() {}

void OAIGoogleCloudApigeeV1SecurityIncident::initializeModel() {

    m_detection_types_isSet = false;
    m_detection_types_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_first_detected_time_isSet = false;
    m_first_detected_time_isValid = false;

    m_last_detected_time_isSet = false;
    m_last_detected_time_isValid = false;

    m_last_observability_change_time_isSet = false;
    m_last_observability_change_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_observability_isSet = false;
    m_observability_isValid = false;

    m_risk_level_isSet = false;
    m_risk_level_isValid = false;

    m_traffic_count_isSet = false;
    m_traffic_count_isValid = false;
}

void OAIGoogleCloudApigeeV1SecurityIncident::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1SecurityIncident::fromJsonObject(QJsonObject json) {

    m_detection_types_isValid = ::OpenAPI::fromJsonValue(m_detection_types, json[QString("detectionTypes")]);
    m_detection_types_isSet = !json[QString("detectionTypes")].isNull() && m_detection_types_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_first_detected_time_isValid = ::OpenAPI::fromJsonValue(m_first_detected_time, json[QString("firstDetectedTime")]);
    m_first_detected_time_isSet = !json[QString("firstDetectedTime")].isNull() && m_first_detected_time_isValid;

    m_last_detected_time_isValid = ::OpenAPI::fromJsonValue(m_last_detected_time, json[QString("lastDetectedTime")]);
    m_last_detected_time_isSet = !json[QString("lastDetectedTime")].isNull() && m_last_detected_time_isValid;

    m_last_observability_change_time_isValid = ::OpenAPI::fromJsonValue(m_last_observability_change_time, json[QString("lastObservabilityChangeTime")]);
    m_last_observability_change_time_isSet = !json[QString("lastObservabilityChangeTime")].isNull() && m_last_observability_change_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_observability_isValid = ::OpenAPI::fromJsonValue(m_observability, json[QString("observability")]);
    m_observability_isSet = !json[QString("observability")].isNull() && m_observability_isValid;

    m_risk_level_isValid = ::OpenAPI::fromJsonValue(m_risk_level, json[QString("riskLevel")]);
    m_risk_level_isSet = !json[QString("riskLevel")].isNull() && m_risk_level_isValid;

    m_traffic_count_isValid = ::OpenAPI::fromJsonValue(m_traffic_count, json[QString("trafficCount")]);
    m_traffic_count_isSet = !json[QString("trafficCount")].isNull() && m_traffic_count_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1SecurityIncident::asJsonObject() const {
    QJsonObject obj;
    if (m_detection_types.size() > 0) {
        obj.insert(QString("detectionTypes"), ::OpenAPI::toJsonValue(m_detection_types));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_first_detected_time_isSet) {
        obj.insert(QString("firstDetectedTime"), ::OpenAPI::toJsonValue(m_first_detected_time));
    }
    if (m_last_detected_time_isSet) {
        obj.insert(QString("lastDetectedTime"), ::OpenAPI::toJsonValue(m_last_detected_time));
    }
    if (m_last_observability_change_time_isSet) {
        obj.insert(QString("lastObservabilityChangeTime"), ::OpenAPI::toJsonValue(m_last_observability_change_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_observability_isSet) {
        obj.insert(QString("observability"), ::OpenAPI::toJsonValue(m_observability));
    }
    if (m_risk_level_isSet) {
        obj.insert(QString("riskLevel"), ::OpenAPI::toJsonValue(m_risk_level));
    }
    if (m_traffic_count_isSet) {
        obj.insert(QString("trafficCount"), ::OpenAPI::toJsonValue(m_traffic_count));
    }
    return obj;
}

QList<QString> OAIGoogleCloudApigeeV1SecurityIncident::getDetectionTypes() const {
    return m_detection_types;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setDetectionTypes(const QList<QString> &detection_types) {
    m_detection_types = detection_types;
    m_detection_types_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_detection_types_Set() const{
    return m_detection_types_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_detection_types_Valid() const{
    return m_detection_types_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getFirstDetectedTime() const {
    return m_first_detected_time;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setFirstDetectedTime(const QString &first_detected_time) {
    m_first_detected_time = first_detected_time;
    m_first_detected_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_first_detected_time_Set() const{
    return m_first_detected_time_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_first_detected_time_Valid() const{
    return m_first_detected_time_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getLastDetectedTime() const {
    return m_last_detected_time;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setLastDetectedTime(const QString &last_detected_time) {
    m_last_detected_time = last_detected_time;
    m_last_detected_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_last_detected_time_Set() const{
    return m_last_detected_time_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_last_detected_time_Valid() const{
    return m_last_detected_time_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getLastObservabilityChangeTime() const {
    return m_last_observability_change_time;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setLastObservabilityChangeTime(const QString &last_observability_change_time) {
    m_last_observability_change_time = last_observability_change_time;
    m_last_observability_change_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_last_observability_change_time_Set() const{
    return m_last_observability_change_time_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_last_observability_change_time_Valid() const{
    return m_last_observability_change_time_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getObservability() const {
    return m_observability;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setObservability(const QString &observability) {
    m_observability = observability;
    m_observability_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_observability_Set() const{
    return m_observability_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_observability_Valid() const{
    return m_observability_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getRiskLevel() const {
    return m_risk_level;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setRiskLevel(const QString &risk_level) {
    m_risk_level = risk_level;
    m_risk_level_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_risk_level_Set() const{
    return m_risk_level_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_risk_level_Valid() const{
    return m_risk_level_isValid;
}

QString OAIGoogleCloudApigeeV1SecurityIncident::getTrafficCount() const {
    return m_traffic_count;
}
void OAIGoogleCloudApigeeV1SecurityIncident::setTrafficCount(const QString &traffic_count) {
    m_traffic_count = traffic_count;
    m_traffic_count_isSet = true;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_traffic_count_Set() const{
    return m_traffic_count_isSet;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::is_traffic_count_Valid() const{
    return m_traffic_count_isValid;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detection_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_detected_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_detected_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_observability_change_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_observability_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_risk_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_traffic_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1SecurityIncident::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
