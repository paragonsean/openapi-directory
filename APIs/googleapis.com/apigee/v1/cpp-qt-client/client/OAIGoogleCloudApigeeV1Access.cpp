/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Access.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Access::OAIGoogleCloudApigeeV1Access(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Access::OAIGoogleCloudApigeeV1Access() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Access::~OAIGoogleCloudApigeeV1Access() {}

void OAIGoogleCloudApigeeV1Access::initializeModel() {

    m_get_isSet = false;
    m_get_isValid = false;

    m_remove_isSet = false;
    m_remove_isValid = false;

    m_r_set_isSet = false;
    m_r_set_isValid = false;
}

void OAIGoogleCloudApigeeV1Access::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Access::fromJsonObject(QJsonObject json) {

    m_get_isValid = ::OpenAPI::fromJsonValue(m_get, json[QString("Get")]);
    m_get_isSet = !json[QString("Get")].isNull() && m_get_isValid;

    m_remove_isValid = ::OpenAPI::fromJsonValue(m_remove, json[QString("Remove")]);
    m_remove_isSet = !json[QString("Remove")].isNull() && m_remove_isValid;

    m_r_set_isValid = ::OpenAPI::fromJsonValue(m_r_set, json[QString("Set")]);
    m_r_set_isSet = !json[QString("Set")].isNull() && m_r_set_isValid;
}

QString OAIGoogleCloudApigeeV1Access::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Access::asJsonObject() const {
    QJsonObject obj;
    if (m_get.isSet()) {
        obj.insert(QString("Get"), ::OpenAPI::toJsonValue(m_get));
    }
    if (m_remove.isSet()) {
        obj.insert(QString("Remove"), ::OpenAPI::toJsonValue(m_remove));
    }
    if (m_r_set.isSet()) {
        obj.insert(QString("Set"), ::OpenAPI::toJsonValue(m_r_set));
    }
    return obj;
}

OAIGoogleCloudApigeeV1AccessGet OAIGoogleCloudApigeeV1Access::getGet() const {
    return m_get;
}
void OAIGoogleCloudApigeeV1Access::setGet(const OAIGoogleCloudApigeeV1AccessGet &get) {
    m_get = get;
    m_get_isSet = true;
}

bool OAIGoogleCloudApigeeV1Access::is_get_Set() const{
    return m_get_isSet;
}

bool OAIGoogleCloudApigeeV1Access::is_get_Valid() const{
    return m_get_isValid;
}

OAIGoogleCloudApigeeV1AccessRemove OAIGoogleCloudApigeeV1Access::getRemove() const {
    return m_remove;
}
void OAIGoogleCloudApigeeV1Access::setRemove(const OAIGoogleCloudApigeeV1AccessRemove &remove) {
    m_remove = remove;
    m_remove_isSet = true;
}

bool OAIGoogleCloudApigeeV1Access::is_remove_Set() const{
    return m_remove_isSet;
}

bool OAIGoogleCloudApigeeV1Access::is_remove_Valid() const{
    return m_remove_isValid;
}

OAIGoogleCloudApigeeV1AccessSet OAIGoogleCloudApigeeV1Access::getRSet() const {
    return m_r_set;
}
void OAIGoogleCloudApigeeV1Access::setRSet(const OAIGoogleCloudApigeeV1AccessSet &r_set) {
    m_r_set = r_set;
    m_r_set_isSet = true;
}

bool OAIGoogleCloudApigeeV1Access::is_r_set_Set() const{
    return m_r_set_isSet;
}

bool OAIGoogleCloudApigeeV1Access::is_r_set_Valid() const{
    return m_r_set_isValid;
}

bool OAIGoogleCloudApigeeV1Access::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_get.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_set.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Access::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
