/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1EndpointAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1EndpointAttachment::OAIGoogleCloudApigeeV1EndpointAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1EndpointAttachment::OAIGoogleCloudApigeeV1EndpointAttachment() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1EndpointAttachment::~OAIGoogleCloudApigeeV1EndpointAttachment() {}

void OAIGoogleCloudApigeeV1EndpointAttachment::initializeModel() {

    m_connection_state_isSet = false;
    m_connection_state_isValid = false;

    m_host_isSet = false;
    m_host_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_service_attachment_isSet = false;
    m_service_attachment_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudApigeeV1EndpointAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1EndpointAttachment::fromJsonObject(QJsonObject json) {

    m_connection_state_isValid = ::OpenAPI::fromJsonValue(m_connection_state, json[QString("connectionState")]);
    m_connection_state_isSet = !json[QString("connectionState")].isNull() && m_connection_state_isValid;

    m_host_isValid = ::OpenAPI::fromJsonValue(m_host, json[QString("host")]);
    m_host_isSet = !json[QString("host")].isNull() && m_host_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_service_attachment_isValid = ::OpenAPI::fromJsonValue(m_service_attachment, json[QString("serviceAttachment")]);
    m_service_attachment_isSet = !json[QString("serviceAttachment")].isNull() && m_service_attachment_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudApigeeV1EndpointAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1EndpointAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_connection_state_isSet) {
        obj.insert(QString("connectionState"), ::OpenAPI::toJsonValue(m_connection_state));
    }
    if (m_host_isSet) {
        obj.insert(QString("host"), ::OpenAPI::toJsonValue(m_host));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_service_attachment_isSet) {
        obj.insert(QString("serviceAttachment"), ::OpenAPI::toJsonValue(m_service_attachment));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1EndpointAttachment::getConnectionState() const {
    return m_connection_state;
}
void OAIGoogleCloudApigeeV1EndpointAttachment::setConnectionState(const QString &connection_state) {
    m_connection_state = connection_state;
    m_connection_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_connection_state_Set() const{
    return m_connection_state_isSet;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_connection_state_Valid() const{
    return m_connection_state_isValid;
}

QString OAIGoogleCloudApigeeV1EndpointAttachment::getHost() const {
    return m_host;
}
void OAIGoogleCloudApigeeV1EndpointAttachment::setHost(const QString &host) {
    m_host = host;
    m_host_isSet = true;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_host_Set() const{
    return m_host_isSet;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_host_Valid() const{
    return m_host_isValid;
}

QString OAIGoogleCloudApigeeV1EndpointAttachment::getLocation() const {
    return m_location;
}
void OAIGoogleCloudApigeeV1EndpointAttachment::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGoogleCloudApigeeV1EndpointAttachment::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1EndpointAttachment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1EndpointAttachment::getServiceAttachment() const {
    return m_service_attachment;
}
void OAIGoogleCloudApigeeV1EndpointAttachment::setServiceAttachment(const QString &service_attachment) {
    m_service_attachment = service_attachment;
    m_service_attachment_isSet = true;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_service_attachment_Set() const{
    return m_service_attachment_isSet;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_service_attachment_Valid() const{
    return m_service_attachment_isValid;
}

QString OAIGoogleCloudApigeeV1EndpointAttachment::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1EndpointAttachment::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connection_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_attachment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1EndpointAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
