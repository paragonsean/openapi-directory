/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1EnvironmentConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1EnvironmentConfig::OAIGoogleCloudApigeeV1EnvironmentConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1EnvironmentConfig::OAIGoogleCloudApigeeV1EnvironmentConfig() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1EnvironmentConfig::~OAIGoogleCloudApigeeV1EnvironmentConfig() {}

void OAIGoogleCloudApigeeV1EnvironmentConfig::initializeModel() {

    m_addons_config_isSet = false;
    m_addons_config_isValid = false;

    m_arc_config_location_isSet = false;
    m_arc_config_location_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_collectors_isSet = false;
    m_data_collectors_isValid = false;

    m_debug_mask_isSet = false;
    m_debug_mask_isValid = false;

    m_deployment_groups_isSet = false;
    m_deployment_groups_isValid = false;

    m_deployments_isSet = false;
    m_deployments_isValid = false;

    m_env_scoped_revision_id_isSet = false;
    m_env_scoped_revision_id_isValid = false;

    m_feature_flags_isSet = false;
    m_feature_flags_isValid = false;

    m_flowhooks_isSet = false;
    m_flowhooks_isValid = false;

    m_forward_proxy_uri_isSet = false;
    m_forward_proxy_uri_isValid = false;

    m_gateway_config_location_isSet = false;
    m_gateway_config_location_isValid = false;

    m_keystores_isSet = false;
    m_keystores_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;

    m_pubsub_topic_isSet = false;
    m_pubsub_topic_isValid = false;

    m_resource_references_isSet = false;
    m_resource_references_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_sequence_number_isSet = false;
    m_sequence_number_isValid = false;

    m_targets_isSet = false;
    m_targets_isValid = false;

    m_trace_config_isSet = false;
    m_trace_config_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAIGoogleCloudApigeeV1EnvironmentConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1EnvironmentConfig::fromJsonObject(QJsonObject json) {

    m_addons_config_isValid = ::OpenAPI::fromJsonValue(m_addons_config, json[QString("addonsConfig")]);
    m_addons_config_isSet = !json[QString("addonsConfig")].isNull() && m_addons_config_isValid;

    m_arc_config_location_isValid = ::OpenAPI::fromJsonValue(m_arc_config_location, json[QString("arcConfigLocation")]);
    m_arc_config_location_isSet = !json[QString("arcConfigLocation")].isNull() && m_arc_config_location_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_collectors_isValid = ::OpenAPI::fromJsonValue(m_data_collectors, json[QString("dataCollectors")]);
    m_data_collectors_isSet = !json[QString("dataCollectors")].isNull() && m_data_collectors_isValid;

    m_debug_mask_isValid = ::OpenAPI::fromJsonValue(m_debug_mask, json[QString("debugMask")]);
    m_debug_mask_isSet = !json[QString("debugMask")].isNull() && m_debug_mask_isValid;

    m_deployment_groups_isValid = ::OpenAPI::fromJsonValue(m_deployment_groups, json[QString("deploymentGroups")]);
    m_deployment_groups_isSet = !json[QString("deploymentGroups")].isNull() && m_deployment_groups_isValid;

    m_deployments_isValid = ::OpenAPI::fromJsonValue(m_deployments, json[QString("deployments")]);
    m_deployments_isSet = !json[QString("deployments")].isNull() && m_deployments_isValid;

    m_env_scoped_revision_id_isValid = ::OpenAPI::fromJsonValue(m_env_scoped_revision_id, json[QString("envScopedRevisionId")]);
    m_env_scoped_revision_id_isSet = !json[QString("envScopedRevisionId")].isNull() && m_env_scoped_revision_id_isValid;

    m_feature_flags_isValid = ::OpenAPI::fromJsonValue(m_feature_flags, json[QString("featureFlags")]);
    m_feature_flags_isSet = !json[QString("featureFlags")].isNull() && m_feature_flags_isValid;

    m_flowhooks_isValid = ::OpenAPI::fromJsonValue(m_flowhooks, json[QString("flowhooks")]);
    m_flowhooks_isSet = !json[QString("flowhooks")].isNull() && m_flowhooks_isValid;

    m_forward_proxy_uri_isValid = ::OpenAPI::fromJsonValue(m_forward_proxy_uri, json[QString("forwardProxyUri")]);
    m_forward_proxy_uri_isSet = !json[QString("forwardProxyUri")].isNull() && m_forward_proxy_uri_isValid;

    m_gateway_config_location_isValid = ::OpenAPI::fromJsonValue(m_gateway_config_location, json[QString("gatewayConfigLocation")]);
    m_gateway_config_location_isSet = !json[QString("gatewayConfigLocation")].isNull() && m_gateway_config_location_isValid;

    m_keystores_isValid = ::OpenAPI::fromJsonValue(m_keystores, json[QString("keystores")]);
    m_keystores_isSet = !json[QString("keystores")].isNull() && m_keystores_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;

    m_pubsub_topic_isValid = ::OpenAPI::fromJsonValue(m_pubsub_topic, json[QString("pubsubTopic")]);
    m_pubsub_topic_isSet = !json[QString("pubsubTopic")].isNull() && m_pubsub_topic_isValid;

    m_resource_references_isValid = ::OpenAPI::fromJsonValue(m_resource_references, json[QString("resourceReferences")]);
    m_resource_references_isSet = !json[QString("resourceReferences")].isNull() && m_resource_references_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;

    m_sequence_number_isValid = ::OpenAPI::fromJsonValue(m_sequence_number, json[QString("sequenceNumber")]);
    m_sequence_number_isSet = !json[QString("sequenceNumber")].isNull() && m_sequence_number_isValid;

    m_targets_isValid = ::OpenAPI::fromJsonValue(m_targets, json[QString("targets")]);
    m_targets_isSet = !json[QString("targets")].isNull() && m_targets_isValid;

    m_trace_config_isValid = ::OpenAPI::fromJsonValue(m_trace_config, json[QString("traceConfig")]);
    m_trace_config_isSet = !json[QString("traceConfig")].isNull() && m_trace_config_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1EnvironmentConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_addons_config.isSet()) {
        obj.insert(QString("addonsConfig"), ::OpenAPI::toJsonValue(m_addons_config));
    }
    if (m_arc_config_location_isSet) {
        obj.insert(QString("arcConfigLocation"), ::OpenAPI::toJsonValue(m_arc_config_location));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_collectors.size() > 0) {
        obj.insert(QString("dataCollectors"), ::OpenAPI::toJsonValue(m_data_collectors));
    }
    if (m_debug_mask.isSet()) {
        obj.insert(QString("debugMask"), ::OpenAPI::toJsonValue(m_debug_mask));
    }
    if (m_deployment_groups.size() > 0) {
        obj.insert(QString("deploymentGroups"), ::OpenAPI::toJsonValue(m_deployment_groups));
    }
    if (m_deployments.size() > 0) {
        obj.insert(QString("deployments"), ::OpenAPI::toJsonValue(m_deployments));
    }
    if (m_env_scoped_revision_id_isSet) {
        obj.insert(QString("envScopedRevisionId"), ::OpenAPI::toJsonValue(m_env_scoped_revision_id));
    }
    if (m_feature_flags.size() > 0) {
        obj.insert(QString("featureFlags"), ::OpenAPI::toJsonValue(m_feature_flags));
    }
    if (m_flowhooks.size() > 0) {
        obj.insert(QString("flowhooks"), ::OpenAPI::toJsonValue(m_flowhooks));
    }
    if (m_forward_proxy_uri_isSet) {
        obj.insert(QString("forwardProxyUri"), ::OpenAPI::toJsonValue(m_forward_proxy_uri));
    }
    if (m_gateway_config_location_isSet) {
        obj.insert(QString("gatewayConfigLocation"), ::OpenAPI::toJsonValue(m_gateway_config_location));
    }
    if (m_keystores.size() > 0) {
        obj.insert(QString("keystores"), ::OpenAPI::toJsonValue(m_keystores));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    if (m_pubsub_topic_isSet) {
        obj.insert(QString("pubsubTopic"), ::OpenAPI::toJsonValue(m_pubsub_topic));
    }
    if (m_resource_references.size() > 0) {
        obj.insert(QString("resourceReferences"), ::OpenAPI::toJsonValue(m_resource_references));
    }
    if (m_resources.size() > 0) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_sequence_number_isSet) {
        obj.insert(QString("sequenceNumber"), ::OpenAPI::toJsonValue(m_sequence_number));
    }
    if (m_targets.size() > 0) {
        obj.insert(QString("targets"), ::OpenAPI::toJsonValue(m_targets));
    }
    if (m_trace_config.isSet()) {
        obj.insert(QString("traceConfig"), ::OpenAPI::toJsonValue(m_trace_config));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

OAIGoogleCloudApigeeV1RuntimeAddonsConfig OAIGoogleCloudApigeeV1EnvironmentConfig::getAddonsConfig() const {
    return m_addons_config;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setAddonsConfig(const OAIGoogleCloudApigeeV1RuntimeAddonsConfig &addons_config) {
    m_addons_config = addons_config;
    m_addons_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_addons_config_Set() const{
    return m_addons_config_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_addons_config_Valid() const{
    return m_addons_config_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getArcConfigLocation() const {
    return m_arc_config_location;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setArcConfigLocation(const QString &arc_config_location) {
    m_arc_config_location = arc_config_location;
    m_arc_config_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_arc_config_location_Set() const{
    return m_arc_config_location_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_arc_config_location_Valid() const{
    return m_arc_config_location_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<OAIGoogleCloudApigeeV1DataCollectorConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getDataCollectors() const {
    return m_data_collectors;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setDataCollectors(const QList<OAIGoogleCloudApigeeV1DataCollectorConfig> &data_collectors) {
    m_data_collectors = data_collectors;
    m_data_collectors_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_data_collectors_Set() const{
    return m_data_collectors_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_data_collectors_Valid() const{
    return m_data_collectors_isValid;
}

OAIGoogleCloudApigeeV1DebugMask OAIGoogleCloudApigeeV1EnvironmentConfig::getDebugMask() const {
    return m_debug_mask;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setDebugMask(const OAIGoogleCloudApigeeV1DebugMask &debug_mask) {
    m_debug_mask = debug_mask;
    m_debug_mask_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_debug_mask_Set() const{
    return m_debug_mask_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_debug_mask_Valid() const{
    return m_debug_mask_isValid;
}

QList<OAIGoogleCloudApigeeV1DeploymentGroupConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getDeploymentGroups() const {
    return m_deployment_groups;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setDeploymentGroups(const QList<OAIGoogleCloudApigeeV1DeploymentGroupConfig> &deployment_groups) {
    m_deployment_groups = deployment_groups;
    m_deployment_groups_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_deployment_groups_Set() const{
    return m_deployment_groups_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_deployment_groups_Valid() const{
    return m_deployment_groups_isValid;
}

QList<OAIGoogleCloudApigeeV1DeploymentConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getDeployments() const {
    return m_deployments;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setDeployments(const QList<OAIGoogleCloudApigeeV1DeploymentConfig> &deployments) {
    m_deployments = deployments;
    m_deployments_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_deployments_Set() const{
    return m_deployments_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_deployments_Valid() const{
    return m_deployments_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getEnvScopedRevisionId() const {
    return m_env_scoped_revision_id;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setEnvScopedRevisionId(const QString &env_scoped_revision_id) {
    m_env_scoped_revision_id = env_scoped_revision_id;
    m_env_scoped_revision_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_env_scoped_revision_id_Set() const{
    return m_env_scoped_revision_id_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_env_scoped_revision_id_Valid() const{
    return m_env_scoped_revision_id_isValid;
}

QMap<QString, QString> OAIGoogleCloudApigeeV1EnvironmentConfig::getFeatureFlags() const {
    return m_feature_flags;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setFeatureFlags(const QMap<QString, QString> &feature_flags) {
    m_feature_flags = feature_flags;
    m_feature_flags_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_feature_flags_Set() const{
    return m_feature_flags_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_feature_flags_Valid() const{
    return m_feature_flags_isValid;
}

QList<OAIGoogleCloudApigeeV1FlowHookConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getFlowhooks() const {
    return m_flowhooks;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setFlowhooks(const QList<OAIGoogleCloudApigeeV1FlowHookConfig> &flowhooks) {
    m_flowhooks = flowhooks;
    m_flowhooks_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_flowhooks_Set() const{
    return m_flowhooks_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_flowhooks_Valid() const{
    return m_flowhooks_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getForwardProxyUri() const {
    return m_forward_proxy_uri;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setForwardProxyUri(const QString &forward_proxy_uri) {
    m_forward_proxy_uri = forward_proxy_uri;
    m_forward_proxy_uri_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_forward_proxy_uri_Set() const{
    return m_forward_proxy_uri_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_forward_proxy_uri_Valid() const{
    return m_forward_proxy_uri_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getGatewayConfigLocation() const {
    return m_gateway_config_location;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setGatewayConfigLocation(const QString &gateway_config_location) {
    m_gateway_config_location = gateway_config_location;
    m_gateway_config_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_gateway_config_location_Set() const{
    return m_gateway_config_location_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_gateway_config_location_Valid() const{
    return m_gateway_config_location_isValid;
}

QList<OAIGoogleCloudApigeeV1KeystoreConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getKeystores() const {
    return m_keystores;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setKeystores(const QList<OAIGoogleCloudApigeeV1KeystoreConfig> &keystores) {
    m_keystores = keystores;
    m_keystores_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_keystores_Set() const{
    return m_keystores_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_keystores_Valid() const{
    return m_keystores_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getProvider() const {
    return m_provider;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_provider_Valid() const{
    return m_provider_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getPubsubTopic() const {
    return m_pubsub_topic;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setPubsubTopic(const QString &pubsub_topic) {
    m_pubsub_topic = pubsub_topic;
    m_pubsub_topic_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_pubsub_topic_Set() const{
    return m_pubsub_topic_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_pubsub_topic_Valid() const{
    return m_pubsub_topic_isValid;
}

QList<OAIGoogleCloudApigeeV1ReferenceConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getResourceReferences() const {
    return m_resource_references;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setResourceReferences(const QList<OAIGoogleCloudApigeeV1ReferenceConfig> &resource_references) {
    m_resource_references = resource_references;
    m_resource_references_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_resource_references_Set() const{
    return m_resource_references_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_resource_references_Valid() const{
    return m_resource_references_isValid;
}

QList<OAIGoogleCloudApigeeV1ResourceConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getResources() const {
    return m_resources;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setResources(const QList<OAIGoogleCloudApigeeV1ResourceConfig> &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_resources_Valid() const{
    return m_resources_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getRevisionId() const {
    return m_revision_id;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getSequenceNumber() const {
    return m_sequence_number;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setSequenceNumber(const QString &sequence_number) {
    m_sequence_number = sequence_number;
    m_sequence_number_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_sequence_number_Set() const{
    return m_sequence_number_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_sequence_number_Valid() const{
    return m_sequence_number_isValid;
}

QList<OAIGoogleCloudApigeeV1TargetServerConfig> OAIGoogleCloudApigeeV1EnvironmentConfig::getTargets() const {
    return m_targets;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setTargets(const QList<OAIGoogleCloudApigeeV1TargetServerConfig> &targets) {
    m_targets = targets;
    m_targets_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_targets_Set() const{
    return m_targets_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_targets_Valid() const{
    return m_targets_isValid;
}

OAIGoogleCloudApigeeV1RuntimeTraceConfig OAIGoogleCloudApigeeV1EnvironmentConfig::getTraceConfig() const {
    return m_trace_config;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setTraceConfig(const OAIGoogleCloudApigeeV1RuntimeTraceConfig &trace_config) {
    m_trace_config = trace_config;
    m_trace_config_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_trace_config_Set() const{
    return m_trace_config_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_trace_config_Valid() const{
    return m_trace_config_isValid;
}

QString OAIGoogleCloudApigeeV1EnvironmentConfig::getUid() const {
    return m_uid;
}
void OAIGoogleCloudApigeeV1EnvironmentConfig::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_addons_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_arc_config_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_collectors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_debug_mask.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_env_scoped_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_flags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_flowhooks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_forward_proxy_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gateway_config_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keystores.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pubsub_topic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_references.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sequence_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_targets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_trace_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1EnvironmentConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
