/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Query.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Query::OAIGoogleCloudApigeeV1Query(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Query::OAIGoogleCloudApigeeV1Query() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Query::~OAIGoogleCloudApigeeV1Query() {}

void OAIGoogleCloudApigeeV1Query::initializeModel() {

    m_csv_delimiter_isSet = false;
    m_csv_delimiter_isValid = false;

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_envgroup_hostname_isSet = false;
    m_envgroup_hostname_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_group_by_time_unit_isSet = false;
    m_group_by_time_unit_isValid = false;

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_output_format_isSet = false;
    m_output_format_isValid = false;

    m_report_definition_id_isSet = false;
    m_report_definition_id_isValid = false;

    m_time_range_isSet = false;
    m_time_range_isValid = false;
}

void OAIGoogleCloudApigeeV1Query::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Query::fromJsonObject(QJsonObject json) {

    m_csv_delimiter_isValid = ::OpenAPI::fromJsonValue(m_csv_delimiter, json[QString("csvDelimiter")]);
    m_csv_delimiter_isSet = !json[QString("csvDelimiter")].isNull() && m_csv_delimiter_isValid;

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_envgroup_hostname_isValid = ::OpenAPI::fromJsonValue(m_envgroup_hostname, json[QString("envgroupHostname")]);
    m_envgroup_hostname_isSet = !json[QString("envgroupHostname")].isNull() && m_envgroup_hostname_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_group_by_time_unit_isValid = ::OpenAPI::fromJsonValue(m_group_by_time_unit, json[QString("groupByTimeUnit")]);
    m_group_by_time_unit_isSet = !json[QString("groupByTimeUnit")].isNull() && m_group_by_time_unit_isValid;

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_output_format_isValid = ::OpenAPI::fromJsonValue(m_output_format, json[QString("outputFormat")]);
    m_output_format_isSet = !json[QString("outputFormat")].isNull() && m_output_format_isValid;

    m_report_definition_id_isValid = ::OpenAPI::fromJsonValue(m_report_definition_id, json[QString("reportDefinitionId")]);
    m_report_definition_id_isSet = !json[QString("reportDefinitionId")].isNull() && m_report_definition_id_isValid;

    m_time_range_isValid = ::OpenAPI::fromJsonValue(m_time_range, json[QString("timeRange")]);
    m_time_range_isSet = !json[QString("timeRange")].isNull() && m_time_range_isValid;
}

QString OAIGoogleCloudApigeeV1Query::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Query::asJsonObject() const {
    QJsonObject obj;
    if (m_csv_delimiter_isSet) {
        obj.insert(QString("csvDelimiter"), ::OpenAPI::toJsonValue(m_csv_delimiter));
    }
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_envgroup_hostname_isSet) {
        obj.insert(QString("envgroupHostname"), ::OpenAPI::toJsonValue(m_envgroup_hostname));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_group_by_time_unit_isSet) {
        obj.insert(QString("groupByTimeUnit"), ::OpenAPI::toJsonValue(m_group_by_time_unit));
    }
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_output_format_isSet) {
        obj.insert(QString("outputFormat"), ::OpenAPI::toJsonValue(m_output_format));
    }
    if (m_report_definition_id_isSet) {
        obj.insert(QString("reportDefinitionId"), ::OpenAPI::toJsonValue(m_report_definition_id));
    }
    if (m_time_range_isSet) {
        obj.insert(QString("timeRange"), ::OpenAPI::toJsonValue(m_time_range));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1Query::getCsvDelimiter() const {
    return m_csv_delimiter;
}
void OAIGoogleCloudApigeeV1Query::setCsvDelimiter(const QString &csv_delimiter) {
    m_csv_delimiter = csv_delimiter;
    m_csv_delimiter_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_csv_delimiter_Set() const{
    return m_csv_delimiter_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_csv_delimiter_Valid() const{
    return m_csv_delimiter_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1Query::getDimensions() const {
    return m_dimensions;
}
void OAIGoogleCloudApigeeV1Query::setDimensions(const QList<QString> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAIGoogleCloudApigeeV1Query::getEnvgroupHostname() const {
    return m_envgroup_hostname;
}
void OAIGoogleCloudApigeeV1Query::setEnvgroupHostname(const QString &envgroup_hostname) {
    m_envgroup_hostname = envgroup_hostname;
    m_envgroup_hostname_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_envgroup_hostname_Set() const{
    return m_envgroup_hostname_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_envgroup_hostname_Valid() const{
    return m_envgroup_hostname_isValid;
}

QString OAIGoogleCloudApigeeV1Query::getFilter() const {
    return m_filter;
}
void OAIGoogleCloudApigeeV1Query::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_filter_Valid() const{
    return m_filter_isValid;
}

QString OAIGoogleCloudApigeeV1Query::getGroupByTimeUnit() const {
    return m_group_by_time_unit;
}
void OAIGoogleCloudApigeeV1Query::setGroupByTimeUnit(const QString &group_by_time_unit) {
    m_group_by_time_unit = group_by_time_unit;
    m_group_by_time_unit_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_group_by_time_unit_Set() const{
    return m_group_by_time_unit_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_group_by_time_unit_Valid() const{
    return m_group_by_time_unit_isValid;
}

qint32 OAIGoogleCloudApigeeV1Query::getLimit() const {
    return m_limit;
}
void OAIGoogleCloudApigeeV1Query::setLimit(const qint32 &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_limit_Valid() const{
    return m_limit_isValid;
}

QList<OAIGoogleCloudApigeeV1QueryMetric> OAIGoogleCloudApigeeV1Query::getMetrics() const {
    return m_metrics;
}
void OAIGoogleCloudApigeeV1Query::setMetrics(const QList<OAIGoogleCloudApigeeV1QueryMetric> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QString OAIGoogleCloudApigeeV1Query::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1Query::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1Query::getOutputFormat() const {
    return m_output_format;
}
void OAIGoogleCloudApigeeV1Query::setOutputFormat(const QString &output_format) {
    m_output_format = output_format;
    m_output_format_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_output_format_Set() const{
    return m_output_format_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_output_format_Valid() const{
    return m_output_format_isValid;
}

QString OAIGoogleCloudApigeeV1Query::getReportDefinitionId() const {
    return m_report_definition_id;
}
void OAIGoogleCloudApigeeV1Query::setReportDefinitionId(const QString &report_definition_id) {
    m_report_definition_id = report_definition_id;
    m_report_definition_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_report_definition_id_Set() const{
    return m_report_definition_id_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_report_definition_id_Valid() const{
    return m_report_definition_id_isValid;
}

QJsonValue OAIGoogleCloudApigeeV1Query::getTimeRange() const {
    return m_time_range;
}
void OAIGoogleCloudApigeeV1Query::setTimeRange(const QJsonValue &time_range) {
    m_time_range = time_range;
    m_time_range_isSet = true;
}

bool OAIGoogleCloudApigeeV1Query::is_time_range_Set() const{
    return m_time_range_isSet;
}

bool OAIGoogleCloudApigeeV1Query::is_time_range_Valid() const{
    return m_time_range_isValid;
}

bool OAIGoogleCloudApigeeV1Query::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_csv_delimiter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_envgroup_hostname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_by_time_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_range_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Query::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
