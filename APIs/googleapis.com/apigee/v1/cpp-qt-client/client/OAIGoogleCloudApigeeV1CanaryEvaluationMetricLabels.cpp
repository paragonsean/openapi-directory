/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::~OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels() {}

void OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::initializeModel() {

    m_env_isSet = false;
    m_env_isValid = false;

    m_instance_id_isSet = false;
    m_instance_id_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;
}

void OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::fromJsonObject(QJsonObject json) {

    m_env_isValid = ::OpenAPI::fromJsonValue(m_env, json[QString("env")]);
    m_env_isSet = !json[QString("env")].isNull() && m_env_isValid;

    m_instance_id_isValid = ::OpenAPI::fromJsonValue(m_instance_id, json[QString("instance_id")]);
    m_instance_id_isSet = !json[QString("instance_id")].isNull() && m_instance_id_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::asJsonObject() const {
    QJsonObject obj;
    if (m_env_isSet) {
        obj.insert(QString("env"), ::OpenAPI::toJsonValue(m_env));
    }
    if (m_instance_id_isSet) {
        obj.insert(QString("instance_id"), ::OpenAPI::toJsonValue(m_instance_id));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::getEnv() const {
    return m_env;
}
void OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::setEnv(const QString &env) {
    m_env = env;
    m_env_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::is_env_Set() const{
    return m_env_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::is_env_Valid() const{
    return m_env_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::getInstanceId() const {
    return m_instance_id;
}
void OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::setInstanceId(const QString &instance_id) {
    m_instance_id = instance_id;
    m_instance_id_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::is_instance_id_Set() const{
    return m_instance_id_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::is_instance_id_Valid() const{
    return m_instance_id_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::getLocation() const {
    return m_location;
}
void OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::is_location_Valid() const{
    return m_location_isValid;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_env_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
