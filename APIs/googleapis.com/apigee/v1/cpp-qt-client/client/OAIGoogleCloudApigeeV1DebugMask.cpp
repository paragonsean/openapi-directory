/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1DebugMask.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1DebugMask::OAIGoogleCloudApigeeV1DebugMask(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1DebugMask::OAIGoogleCloudApigeeV1DebugMask() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1DebugMask::~OAIGoogleCloudApigeeV1DebugMask() {}

void OAIGoogleCloudApigeeV1DebugMask::initializeModel() {

    m_fault_json_paths_isSet = false;
    m_fault_json_paths_isValid = false;

    m_fault_x_paths_isSet = false;
    m_fault_x_paths_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_namespaces_isSet = false;
    m_namespaces_isValid = false;

    m_request_json_paths_isSet = false;
    m_request_json_paths_isValid = false;

    m_request_x_paths_isSet = false;
    m_request_x_paths_isValid = false;

    m_response_json_paths_isSet = false;
    m_response_json_paths_isValid = false;

    m_response_x_paths_isSet = false;
    m_response_x_paths_isValid = false;

    m_variables_isSet = false;
    m_variables_isValid = false;
}

void OAIGoogleCloudApigeeV1DebugMask::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1DebugMask::fromJsonObject(QJsonObject json) {

    m_fault_json_paths_isValid = ::OpenAPI::fromJsonValue(m_fault_json_paths, json[QString("faultJSONPaths")]);
    m_fault_json_paths_isSet = !json[QString("faultJSONPaths")].isNull() && m_fault_json_paths_isValid;

    m_fault_x_paths_isValid = ::OpenAPI::fromJsonValue(m_fault_x_paths, json[QString("faultXPaths")]);
    m_fault_x_paths_isSet = !json[QString("faultXPaths")].isNull() && m_fault_x_paths_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_namespaces_isValid = ::OpenAPI::fromJsonValue(m_namespaces, json[QString("namespaces")]);
    m_namespaces_isSet = !json[QString("namespaces")].isNull() && m_namespaces_isValid;

    m_request_json_paths_isValid = ::OpenAPI::fromJsonValue(m_request_json_paths, json[QString("requestJSONPaths")]);
    m_request_json_paths_isSet = !json[QString("requestJSONPaths")].isNull() && m_request_json_paths_isValid;

    m_request_x_paths_isValid = ::OpenAPI::fromJsonValue(m_request_x_paths, json[QString("requestXPaths")]);
    m_request_x_paths_isSet = !json[QString("requestXPaths")].isNull() && m_request_x_paths_isValid;

    m_response_json_paths_isValid = ::OpenAPI::fromJsonValue(m_response_json_paths, json[QString("responseJSONPaths")]);
    m_response_json_paths_isSet = !json[QString("responseJSONPaths")].isNull() && m_response_json_paths_isValid;

    m_response_x_paths_isValid = ::OpenAPI::fromJsonValue(m_response_x_paths, json[QString("responseXPaths")]);
    m_response_x_paths_isSet = !json[QString("responseXPaths")].isNull() && m_response_x_paths_isValid;

    m_variables_isValid = ::OpenAPI::fromJsonValue(m_variables, json[QString("variables")]);
    m_variables_isSet = !json[QString("variables")].isNull() && m_variables_isValid;
}

QString OAIGoogleCloudApigeeV1DebugMask::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1DebugMask::asJsonObject() const {
    QJsonObject obj;
    if (m_fault_json_paths.size() > 0) {
        obj.insert(QString("faultJSONPaths"), ::OpenAPI::toJsonValue(m_fault_json_paths));
    }
    if (m_fault_x_paths.size() > 0) {
        obj.insert(QString("faultXPaths"), ::OpenAPI::toJsonValue(m_fault_x_paths));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_namespaces.size() > 0) {
        obj.insert(QString("namespaces"), ::OpenAPI::toJsonValue(m_namespaces));
    }
    if (m_request_json_paths.size() > 0) {
        obj.insert(QString("requestJSONPaths"), ::OpenAPI::toJsonValue(m_request_json_paths));
    }
    if (m_request_x_paths.size() > 0) {
        obj.insert(QString("requestXPaths"), ::OpenAPI::toJsonValue(m_request_x_paths));
    }
    if (m_response_json_paths.size() > 0) {
        obj.insert(QString("responseJSONPaths"), ::OpenAPI::toJsonValue(m_response_json_paths));
    }
    if (m_response_x_paths.size() > 0) {
        obj.insert(QString("responseXPaths"), ::OpenAPI::toJsonValue(m_response_x_paths));
    }
    if (m_variables.size() > 0) {
        obj.insert(QString("variables"), ::OpenAPI::toJsonValue(m_variables));
    }
    return obj;
}

QList<QString> OAIGoogleCloudApigeeV1DebugMask::getFaultJsonPaths() const {
    return m_fault_json_paths;
}
void OAIGoogleCloudApigeeV1DebugMask::setFaultJsonPaths(const QList<QString> &fault_json_paths) {
    m_fault_json_paths = fault_json_paths;
    m_fault_json_paths_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_fault_json_paths_Set() const{
    return m_fault_json_paths_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_fault_json_paths_Valid() const{
    return m_fault_json_paths_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1DebugMask::getFaultXPaths() const {
    return m_fault_x_paths;
}
void OAIGoogleCloudApigeeV1DebugMask::setFaultXPaths(const QList<QString> &fault_x_paths) {
    m_fault_x_paths = fault_x_paths;
    m_fault_x_paths_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_fault_x_paths_Set() const{
    return m_fault_x_paths_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_fault_x_paths_Valid() const{
    return m_fault_x_paths_isValid;
}

QString OAIGoogleCloudApigeeV1DebugMask::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1DebugMask::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_name_Valid() const{
    return m_name_isValid;
}

QMap<QString, QString> OAIGoogleCloudApigeeV1DebugMask::getNamespaces() const {
    return m_namespaces;
}
void OAIGoogleCloudApigeeV1DebugMask::setNamespaces(const QMap<QString, QString> &namespaces) {
    m_namespaces = namespaces;
    m_namespaces_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_namespaces_Set() const{
    return m_namespaces_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_namespaces_Valid() const{
    return m_namespaces_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1DebugMask::getRequestJsonPaths() const {
    return m_request_json_paths;
}
void OAIGoogleCloudApigeeV1DebugMask::setRequestJsonPaths(const QList<QString> &request_json_paths) {
    m_request_json_paths = request_json_paths;
    m_request_json_paths_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_request_json_paths_Set() const{
    return m_request_json_paths_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_request_json_paths_Valid() const{
    return m_request_json_paths_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1DebugMask::getRequestXPaths() const {
    return m_request_x_paths;
}
void OAIGoogleCloudApigeeV1DebugMask::setRequestXPaths(const QList<QString> &request_x_paths) {
    m_request_x_paths = request_x_paths;
    m_request_x_paths_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_request_x_paths_Set() const{
    return m_request_x_paths_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_request_x_paths_Valid() const{
    return m_request_x_paths_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1DebugMask::getResponseJsonPaths() const {
    return m_response_json_paths;
}
void OAIGoogleCloudApigeeV1DebugMask::setResponseJsonPaths(const QList<QString> &response_json_paths) {
    m_response_json_paths = response_json_paths;
    m_response_json_paths_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_response_json_paths_Set() const{
    return m_response_json_paths_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_response_json_paths_Valid() const{
    return m_response_json_paths_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1DebugMask::getResponseXPaths() const {
    return m_response_x_paths;
}
void OAIGoogleCloudApigeeV1DebugMask::setResponseXPaths(const QList<QString> &response_x_paths) {
    m_response_x_paths = response_x_paths;
    m_response_x_paths_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_response_x_paths_Set() const{
    return m_response_x_paths_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_response_x_paths_Valid() const{
    return m_response_x_paths_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1DebugMask::getVariables() const {
    return m_variables;
}
void OAIGoogleCloudApigeeV1DebugMask::setVariables(const QList<QString> &variables) {
    m_variables = variables;
    m_variables_isSet = true;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_variables_Set() const{
    return m_variables_isSet;
}

bool OAIGoogleCloudApigeeV1DebugMask::is_variables_Valid() const{
    return m_variables_isValid;
}

bool OAIGoogleCloudApigeeV1DebugMask::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fault_json_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fault_x_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_namespaces.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_json_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_x_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_json_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_x_paths.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_variables.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1DebugMask::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
