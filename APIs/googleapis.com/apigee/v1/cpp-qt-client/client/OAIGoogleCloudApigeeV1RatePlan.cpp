/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1RatePlan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1RatePlan::OAIGoogleCloudApigeeV1RatePlan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1RatePlan::OAIGoogleCloudApigeeV1RatePlan() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1RatePlan::~OAIGoogleCloudApigeeV1RatePlan() {}

void OAIGoogleCloudApigeeV1RatePlan::initializeModel() {

    m_apiproduct_isSet = false;
    m_apiproduct_isValid = false;

    m_billing_period_isSet = false;
    m_billing_period_isValid = false;

    m_consumption_pricing_rates_isSet = false;
    m_consumption_pricing_rates_isValid = false;

    m_consumption_pricing_type_isSet = false;
    m_consumption_pricing_type_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_fixed_fee_frequency_isSet = false;
    m_fixed_fee_frequency_isValid = false;

    m_fixed_recurring_fee_isSet = false;
    m_fixed_recurring_fee_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_payment_funding_model_isSet = false;
    m_payment_funding_model_isValid = false;

    m_revenue_share_rates_isSet = false;
    m_revenue_share_rates_isValid = false;

    m_revenue_share_type_isSet = false;
    m_revenue_share_type_isValid = false;

    m_setup_fee_isSet = false;
    m_setup_fee_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGoogleCloudApigeeV1RatePlan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1RatePlan::fromJsonObject(QJsonObject json) {

    m_apiproduct_isValid = ::OpenAPI::fromJsonValue(m_apiproduct, json[QString("apiproduct")]);
    m_apiproduct_isSet = !json[QString("apiproduct")].isNull() && m_apiproduct_isValid;

    m_billing_period_isValid = ::OpenAPI::fromJsonValue(m_billing_period, json[QString("billingPeriod")]);
    m_billing_period_isSet = !json[QString("billingPeriod")].isNull() && m_billing_period_isValid;

    m_consumption_pricing_rates_isValid = ::OpenAPI::fromJsonValue(m_consumption_pricing_rates, json[QString("consumptionPricingRates")]);
    m_consumption_pricing_rates_isSet = !json[QString("consumptionPricingRates")].isNull() && m_consumption_pricing_rates_isValid;

    m_consumption_pricing_type_isValid = ::OpenAPI::fromJsonValue(m_consumption_pricing_type, json[QString("consumptionPricingType")]);
    m_consumption_pricing_type_isSet = !json[QString("consumptionPricingType")].isNull() && m_consumption_pricing_type_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_fixed_fee_frequency_isValid = ::OpenAPI::fromJsonValue(m_fixed_fee_frequency, json[QString("fixedFeeFrequency")]);
    m_fixed_fee_frequency_isSet = !json[QString("fixedFeeFrequency")].isNull() && m_fixed_fee_frequency_isValid;

    m_fixed_recurring_fee_isValid = ::OpenAPI::fromJsonValue(m_fixed_recurring_fee, json[QString("fixedRecurringFee")]);
    m_fixed_recurring_fee_isSet = !json[QString("fixedRecurringFee")].isNull() && m_fixed_recurring_fee_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_payment_funding_model_isValid = ::OpenAPI::fromJsonValue(m_payment_funding_model, json[QString("paymentFundingModel")]);
    m_payment_funding_model_isSet = !json[QString("paymentFundingModel")].isNull() && m_payment_funding_model_isValid;

    m_revenue_share_rates_isValid = ::OpenAPI::fromJsonValue(m_revenue_share_rates, json[QString("revenueShareRates")]);
    m_revenue_share_rates_isSet = !json[QString("revenueShareRates")].isNull() && m_revenue_share_rates_isValid;

    m_revenue_share_type_isValid = ::OpenAPI::fromJsonValue(m_revenue_share_type, json[QString("revenueShareType")]);
    m_revenue_share_type_isSet = !json[QString("revenueShareType")].isNull() && m_revenue_share_type_isValid;

    m_setup_fee_isValid = ::OpenAPI::fromJsonValue(m_setup_fee, json[QString("setupFee")]);
    m_setup_fee_isSet = !json[QString("setupFee")].isNull() && m_setup_fee_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1RatePlan::asJsonObject() const {
    QJsonObject obj;
    if (m_apiproduct_isSet) {
        obj.insert(QString("apiproduct"), ::OpenAPI::toJsonValue(m_apiproduct));
    }
    if (m_billing_period_isSet) {
        obj.insert(QString("billingPeriod"), ::OpenAPI::toJsonValue(m_billing_period));
    }
    if (m_consumption_pricing_rates.size() > 0) {
        obj.insert(QString("consumptionPricingRates"), ::OpenAPI::toJsonValue(m_consumption_pricing_rates));
    }
    if (m_consumption_pricing_type_isSet) {
        obj.insert(QString("consumptionPricingType"), ::OpenAPI::toJsonValue(m_consumption_pricing_type));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_fixed_fee_frequency_isSet) {
        obj.insert(QString("fixedFeeFrequency"), ::OpenAPI::toJsonValue(m_fixed_fee_frequency));
    }
    if (m_fixed_recurring_fee.isSet()) {
        obj.insert(QString("fixedRecurringFee"), ::OpenAPI::toJsonValue(m_fixed_recurring_fee));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_payment_funding_model_isSet) {
        obj.insert(QString("paymentFundingModel"), ::OpenAPI::toJsonValue(m_payment_funding_model));
    }
    if (m_revenue_share_rates.size() > 0) {
        obj.insert(QString("revenueShareRates"), ::OpenAPI::toJsonValue(m_revenue_share_rates));
    }
    if (m_revenue_share_type_isSet) {
        obj.insert(QString("revenueShareType"), ::OpenAPI::toJsonValue(m_revenue_share_type));
    }
    if (m_setup_fee.isSet()) {
        obj.insert(QString("setupFee"), ::OpenAPI::toJsonValue(m_setup_fee));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1RatePlan::getApiproduct() const {
    return m_apiproduct;
}
void OAIGoogleCloudApigeeV1RatePlan::setApiproduct(const QString &apiproduct) {
    m_apiproduct = apiproduct;
    m_apiproduct_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_apiproduct_Set() const{
    return m_apiproduct_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_apiproduct_Valid() const{
    return m_apiproduct_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getBillingPeriod() const {
    return m_billing_period;
}
void OAIGoogleCloudApigeeV1RatePlan::setBillingPeriod(const QString &billing_period) {
    m_billing_period = billing_period;
    m_billing_period_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_billing_period_Set() const{
    return m_billing_period_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_billing_period_Valid() const{
    return m_billing_period_isValid;
}

QList<OAIGoogleCloudApigeeV1RateRange> OAIGoogleCloudApigeeV1RatePlan::getConsumptionPricingRates() const {
    return m_consumption_pricing_rates;
}
void OAIGoogleCloudApigeeV1RatePlan::setConsumptionPricingRates(const QList<OAIGoogleCloudApigeeV1RateRange> &consumption_pricing_rates) {
    m_consumption_pricing_rates = consumption_pricing_rates;
    m_consumption_pricing_rates_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_consumption_pricing_rates_Set() const{
    return m_consumption_pricing_rates_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_consumption_pricing_rates_Valid() const{
    return m_consumption_pricing_rates_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getConsumptionPricingType() const {
    return m_consumption_pricing_type;
}
void OAIGoogleCloudApigeeV1RatePlan::setConsumptionPricingType(const QString &consumption_pricing_type) {
    m_consumption_pricing_type = consumption_pricing_type;
    m_consumption_pricing_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_consumption_pricing_type_Set() const{
    return m_consumption_pricing_type_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_consumption_pricing_type_Valid() const{
    return m_consumption_pricing_type_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getCreatedAt() const {
    return m_created_at;
}
void OAIGoogleCloudApigeeV1RatePlan::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getCurrencyCode() const {
    return m_currency_code;
}
void OAIGoogleCloudApigeeV1RatePlan::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1RatePlan::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudApigeeV1RatePlan::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudApigeeV1RatePlan::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_end_time_Valid() const{
    return m_end_time_isValid;
}

qint32 OAIGoogleCloudApigeeV1RatePlan::getFixedFeeFrequency() const {
    return m_fixed_fee_frequency;
}
void OAIGoogleCloudApigeeV1RatePlan::setFixedFeeFrequency(const qint32 &fixed_fee_frequency) {
    m_fixed_fee_frequency = fixed_fee_frequency;
    m_fixed_fee_frequency_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_fixed_fee_frequency_Set() const{
    return m_fixed_fee_frequency_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_fixed_fee_frequency_Valid() const{
    return m_fixed_fee_frequency_isValid;
}

OAIGoogleTypeMoney OAIGoogleCloudApigeeV1RatePlan::getFixedRecurringFee() const {
    return m_fixed_recurring_fee;
}
void OAIGoogleCloudApigeeV1RatePlan::setFixedRecurringFee(const OAIGoogleTypeMoney &fixed_recurring_fee) {
    m_fixed_recurring_fee = fixed_recurring_fee;
    m_fixed_recurring_fee_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_fixed_recurring_fee_Set() const{
    return m_fixed_recurring_fee_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_fixed_recurring_fee_Valid() const{
    return m_fixed_recurring_fee_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGoogleCloudApigeeV1RatePlan::setLastModifiedAt(const QString &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1RatePlan::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getPaymentFundingModel() const {
    return m_payment_funding_model;
}
void OAIGoogleCloudApigeeV1RatePlan::setPaymentFundingModel(const QString &payment_funding_model) {
    m_payment_funding_model = payment_funding_model;
    m_payment_funding_model_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_payment_funding_model_Set() const{
    return m_payment_funding_model_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_payment_funding_model_Valid() const{
    return m_payment_funding_model_isValid;
}

QList<OAIGoogleCloudApigeeV1RevenueShareRange> OAIGoogleCloudApigeeV1RatePlan::getRevenueShareRates() const {
    return m_revenue_share_rates;
}
void OAIGoogleCloudApigeeV1RatePlan::setRevenueShareRates(const QList<OAIGoogleCloudApigeeV1RevenueShareRange> &revenue_share_rates) {
    m_revenue_share_rates = revenue_share_rates;
    m_revenue_share_rates_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_revenue_share_rates_Set() const{
    return m_revenue_share_rates_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_revenue_share_rates_Valid() const{
    return m_revenue_share_rates_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getRevenueShareType() const {
    return m_revenue_share_type;
}
void OAIGoogleCloudApigeeV1RatePlan::setRevenueShareType(const QString &revenue_share_type) {
    m_revenue_share_type = revenue_share_type;
    m_revenue_share_type_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_revenue_share_type_Set() const{
    return m_revenue_share_type_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_revenue_share_type_Valid() const{
    return m_revenue_share_type_isValid;
}

OAIGoogleTypeMoney OAIGoogleCloudApigeeV1RatePlan::getSetupFee() const {
    return m_setup_fee;
}
void OAIGoogleCloudApigeeV1RatePlan::setSetupFee(const OAIGoogleTypeMoney &setup_fee) {
    m_setup_fee = setup_fee;
    m_setup_fee_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_setup_fee_Set() const{
    return m_setup_fee_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_setup_fee_Valid() const{
    return m_setup_fee_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudApigeeV1RatePlan::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudApigeeV1RatePlan::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1RatePlan::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1RatePlan::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGoogleCloudApigeeV1RatePlan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apiproduct_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consumption_pricing_rates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_consumption_pricing_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fixed_fee_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fixed_recurring_fee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_funding_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revenue_share_rates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_revenue_share_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_setup_fee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1RatePlan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
