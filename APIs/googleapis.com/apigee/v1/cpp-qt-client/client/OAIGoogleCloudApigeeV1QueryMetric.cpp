/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1QueryMetric.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1QueryMetric::OAIGoogleCloudApigeeV1QueryMetric(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1QueryMetric::OAIGoogleCloudApigeeV1QueryMetric() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1QueryMetric::~OAIGoogleCloudApigeeV1QueryMetric() {}

void OAIGoogleCloudApigeeV1QueryMetric::initializeModel() {

    m_alias_isSet = false;
    m_alias_isValid = false;

    m_function_isSet = false;
    m_function_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_r_operator_isSet = false;
    m_r_operator_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGoogleCloudApigeeV1QueryMetric::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1QueryMetric::fromJsonObject(QJsonObject json) {

    m_alias_isValid = ::OpenAPI::fromJsonValue(m_alias, json[QString("alias")]);
    m_alias_isSet = !json[QString("alias")].isNull() && m_alias_isValid;

    m_function_isValid = ::OpenAPI::fromJsonValue(m_function, json[QString("function")]);
    m_function_isSet = !json[QString("function")].isNull() && m_function_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_r_operator_isValid = ::OpenAPI::fromJsonValue(m_r_operator, json[QString("operator")]);
    m_r_operator_isSet = !json[QString("operator")].isNull() && m_r_operator_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIGoogleCloudApigeeV1QueryMetric::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1QueryMetric::asJsonObject() const {
    QJsonObject obj;
    if (m_alias_isSet) {
        obj.insert(QString("alias"), ::OpenAPI::toJsonValue(m_alias));
    }
    if (m_function_isSet) {
        obj.insert(QString("function"), ::OpenAPI::toJsonValue(m_function));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_r_operator_isSet) {
        obj.insert(QString("operator"), ::OpenAPI::toJsonValue(m_r_operator));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1QueryMetric::getAlias() const {
    return m_alias;
}
void OAIGoogleCloudApigeeV1QueryMetric::setAlias(const QString &alias) {
    m_alias = alias;
    m_alias_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_alias_Set() const{
    return m_alias_isSet;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_alias_Valid() const{
    return m_alias_isValid;
}

QString OAIGoogleCloudApigeeV1QueryMetric::getFunction() const {
    return m_function;
}
void OAIGoogleCloudApigeeV1QueryMetric::setFunction(const QString &function) {
    m_function = function;
    m_function_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_function_Set() const{
    return m_function_isSet;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_function_Valid() const{
    return m_function_isValid;
}

QString OAIGoogleCloudApigeeV1QueryMetric::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1QueryMetric::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1QueryMetric::getROperator() const {
    return m_r_operator;
}
void OAIGoogleCloudApigeeV1QueryMetric::setROperator(const QString &r_operator) {
    m_r_operator = r_operator;
    m_r_operator_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_r_operator_Set() const{
    return m_r_operator_isSet;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_r_operator_Valid() const{
    return m_r_operator_isValid;
}

QString OAIGoogleCloudApigeeV1QueryMetric::getValue() const {
    return m_value;
}
void OAIGoogleCloudApigeeV1QueryMetric::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleCloudApigeeV1QueryMetric::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGoogleCloudApigeeV1QueryMetric::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alias_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_function_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_operator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1QueryMetric::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
