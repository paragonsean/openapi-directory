/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1CertInfo.h
 *
 * X.509 certificate as defined in RFC 5280.
 */

#ifndef OAIGoogleCloudApigeeV1CertInfo_H
#define OAIGoogleCloudApigeeV1CertInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudApigeeV1CertInfo : public OAIObject {
public:
    OAIGoogleCloudApigeeV1CertInfo();
    OAIGoogleCloudApigeeV1CertInfo(QString json);
    ~OAIGoogleCloudApigeeV1CertInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBasicConstraints() const;
    void setBasicConstraints(const QString &basic_constraints);
    bool is_basic_constraints_Set() const;
    bool is_basic_constraints_Valid() const;

    QString getExpiryDate() const;
    void setExpiryDate(const QString &expiry_date);
    bool is_expiry_date_Set() const;
    bool is_expiry_date_Valid() const;

    QString getIsValid() const;
    void setIsValid(const QString &is_valid);
    bool is_is_valid_Set() const;
    bool is_is_valid_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getPublicKey() const;
    void setPublicKey(const QString &public_key);
    bool is_public_key_Set() const;
    bool is_public_key_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getSigAlgName() const;
    void setSigAlgName(const QString &sig_alg_name);
    bool is_sig_alg_name_Set() const;
    bool is_sig_alg_name_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QList<QString> getSubjectAlternativeNames() const;
    void setSubjectAlternativeNames(const QList<QString> &subject_alternative_names);
    bool is_subject_alternative_names_Set() const;
    bool is_subject_alternative_names_Valid() const;

    QString getValidFrom() const;
    void setValidFrom(const QString &valid_from);
    bool is_valid_from_Set() const;
    bool is_valid_from_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_basic_constraints;
    bool m_basic_constraints_isSet;
    bool m_basic_constraints_isValid;

    QString m_expiry_date;
    bool m_expiry_date_isSet;
    bool m_expiry_date_isValid;

    QString m_is_valid;
    bool m_is_valid_isSet;
    bool m_is_valid_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_public_key;
    bool m_public_key_isSet;
    bool m_public_key_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_sig_alg_name;
    bool m_sig_alg_name_isSet;
    bool m_sig_alg_name_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QList<QString> m_subject_alternative_names;
    bool m_subject_alternative_names_isSet;
    bool m_subject_alternative_names_isValid;

    QString m_valid_from;
    bool m_valid_from_isSet;
    bool m_valid_from_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1CertInfo)

#endif // OAIGoogleCloudApigeeV1CertInfo_H
