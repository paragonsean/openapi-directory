/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1OperationMetadata.h
 *
 * Metadata describing an Operation.
 */

#ifndef OAIGoogleCloudApigeeV1OperationMetadata_H
#define OAIGoogleCloudApigeeV1OperationMetadata_H

#include <QJsonObject>

#include "OAIGoogleCloudApigeeV1OperationMetadataProgress.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudApigeeV1OperationMetadataProgress;

class OAIGoogleCloudApigeeV1OperationMetadata : public OAIObject {
public:
    OAIGoogleCloudApigeeV1OperationMetadata();
    OAIGoogleCloudApigeeV1OperationMetadata(QString json);
    ~OAIGoogleCloudApigeeV1OperationMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOperationType() const;
    void setOperationType(const QString &operation_type);
    bool is_operation_type_Set() const;
    bool is_operation_type_Valid() const;

    OAIGoogleCloudApigeeV1OperationMetadataProgress getProgress() const;
    void setProgress(const OAIGoogleCloudApigeeV1OperationMetadataProgress &progress);
    bool is_progress_Set() const;
    bool is_progress_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTargetResourceName() const;
    void setTargetResourceName(const QString &target_resource_name);
    bool is_target_resource_name_Set() const;
    bool is_target_resource_name_Valid() const;

    QList<QString> getWarnings() const;
    void setWarnings(const QList<QString> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_operation_type;
    bool m_operation_type_isSet;
    bool m_operation_type_isValid;

    OAIGoogleCloudApigeeV1OperationMetadataProgress m_progress;
    bool m_progress_isSet;
    bool m_progress_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_target_resource_name;
    bool m_target_resource_name_isSet;
    bool m_target_resource_name_isValid;

    QList<QString> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1OperationMetadata)

#endif // OAIGoogleCloudApigeeV1OperationMetadata_H
