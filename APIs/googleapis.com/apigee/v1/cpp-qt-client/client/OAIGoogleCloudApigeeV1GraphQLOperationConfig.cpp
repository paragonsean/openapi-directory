/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1GraphQLOperationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1GraphQLOperationConfig::OAIGoogleCloudApigeeV1GraphQLOperationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1GraphQLOperationConfig::OAIGoogleCloudApigeeV1GraphQLOperationConfig() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1GraphQLOperationConfig::~OAIGoogleCloudApigeeV1GraphQLOperationConfig() {}

void OAIGoogleCloudApigeeV1GraphQLOperationConfig::initializeModel() {

    m_api_source_isSet = false;
    m_api_source_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_operations_isSet = false;
    m_operations_isValid = false;

    m_quota_isSet = false;
    m_quota_isValid = false;
}

void OAIGoogleCloudApigeeV1GraphQLOperationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1GraphQLOperationConfig::fromJsonObject(QJsonObject json) {

    m_api_source_isValid = ::OpenAPI::fromJsonValue(m_api_source, json[QString("apiSource")]);
    m_api_source_isSet = !json[QString("apiSource")].isNull() && m_api_source_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("attributes")]);
    m_attributes_isSet = !json[QString("attributes")].isNull() && m_attributes_isValid;

    m_operations_isValid = ::OpenAPI::fromJsonValue(m_operations, json[QString("operations")]);
    m_operations_isSet = !json[QString("operations")].isNull() && m_operations_isValid;

    m_quota_isValid = ::OpenAPI::fromJsonValue(m_quota, json[QString("quota")]);
    m_quota_isSet = !json[QString("quota")].isNull() && m_quota_isValid;
}

QString OAIGoogleCloudApigeeV1GraphQLOperationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1GraphQLOperationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_api_source_isSet) {
        obj.insert(QString("apiSource"), ::OpenAPI::toJsonValue(m_api_source));
    }
    if (m_attributes.size() > 0) {
        obj.insert(QString("attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_operations.size() > 0) {
        obj.insert(QString("operations"), ::OpenAPI::toJsonValue(m_operations));
    }
    if (m_quota.isSet()) {
        obj.insert(QString("quota"), ::OpenAPI::toJsonValue(m_quota));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1GraphQLOperationConfig::getApiSource() const {
    return m_api_source;
}
void OAIGoogleCloudApigeeV1GraphQLOperationConfig::setApiSource(const QString &api_source) {
    m_api_source = api_source;
    m_api_source_isSet = true;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_api_source_Set() const{
    return m_api_source_isSet;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_api_source_Valid() const{
    return m_api_source_isValid;
}

QList<OAIGoogleCloudApigeeV1Attribute> OAIGoogleCloudApigeeV1GraphQLOperationConfig::getAttributes() const {
    return m_attributes;
}
void OAIGoogleCloudApigeeV1GraphQLOperationConfig::setAttributes(const QList<OAIGoogleCloudApigeeV1Attribute> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QList<OAIGoogleCloudApigeeV1GraphQLOperation> OAIGoogleCloudApigeeV1GraphQLOperationConfig::getOperations() const {
    return m_operations;
}
void OAIGoogleCloudApigeeV1GraphQLOperationConfig::setOperations(const QList<OAIGoogleCloudApigeeV1GraphQLOperation> &operations) {
    m_operations = operations;
    m_operations_isSet = true;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_operations_Set() const{
    return m_operations_isSet;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_operations_Valid() const{
    return m_operations_isValid;
}

OAIGoogleCloudApigeeV1Quota OAIGoogleCloudApigeeV1GraphQLOperationConfig::getQuota() const {
    return m_quota;
}
void OAIGoogleCloudApigeeV1GraphQLOperationConfig::setQuota(const OAIGoogleCloudApigeeV1Quota &quota) {
    m_quota = quota;
    m_quota_isSet = true;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_quota_Set() const{
    return m_quota_isSet;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::is_quota_Valid() const{
    return m_quota_isValid;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_operations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1GraphQLOperationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
