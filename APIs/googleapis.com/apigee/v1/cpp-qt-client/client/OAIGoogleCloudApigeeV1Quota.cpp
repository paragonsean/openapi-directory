/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Quota.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Quota::OAIGoogleCloudApigeeV1Quota(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Quota::OAIGoogleCloudApigeeV1Quota() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Quota::~OAIGoogleCloudApigeeV1Quota() {}

void OAIGoogleCloudApigeeV1Quota::initializeModel() {

    m_interval_isSet = false;
    m_interval_isValid = false;

    m_limit_isSet = false;
    m_limit_isValid = false;

    m_time_unit_isSet = false;
    m_time_unit_isValid = false;
}

void OAIGoogleCloudApigeeV1Quota::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Quota::fromJsonObject(QJsonObject json) {

    m_interval_isValid = ::OpenAPI::fromJsonValue(m_interval, json[QString("interval")]);
    m_interval_isSet = !json[QString("interval")].isNull() && m_interval_isValid;

    m_limit_isValid = ::OpenAPI::fromJsonValue(m_limit, json[QString("limit")]);
    m_limit_isSet = !json[QString("limit")].isNull() && m_limit_isValid;

    m_time_unit_isValid = ::OpenAPI::fromJsonValue(m_time_unit, json[QString("timeUnit")]);
    m_time_unit_isSet = !json[QString("timeUnit")].isNull() && m_time_unit_isValid;
}

QString OAIGoogleCloudApigeeV1Quota::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Quota::asJsonObject() const {
    QJsonObject obj;
    if (m_interval_isSet) {
        obj.insert(QString("interval"), ::OpenAPI::toJsonValue(m_interval));
    }
    if (m_limit_isSet) {
        obj.insert(QString("limit"), ::OpenAPI::toJsonValue(m_limit));
    }
    if (m_time_unit_isSet) {
        obj.insert(QString("timeUnit"), ::OpenAPI::toJsonValue(m_time_unit));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1Quota::getInterval() const {
    return m_interval;
}
void OAIGoogleCloudApigeeV1Quota::setInterval(const QString &interval) {
    m_interval = interval;
    m_interval_isSet = true;
}

bool OAIGoogleCloudApigeeV1Quota::is_interval_Set() const{
    return m_interval_isSet;
}

bool OAIGoogleCloudApigeeV1Quota::is_interval_Valid() const{
    return m_interval_isValid;
}

QString OAIGoogleCloudApigeeV1Quota::getLimit() const {
    return m_limit;
}
void OAIGoogleCloudApigeeV1Quota::setLimit(const QString &limit) {
    m_limit = limit;
    m_limit_isSet = true;
}

bool OAIGoogleCloudApigeeV1Quota::is_limit_Set() const{
    return m_limit_isSet;
}

bool OAIGoogleCloudApigeeV1Quota::is_limit_Valid() const{
    return m_limit_isValid;
}

QString OAIGoogleCloudApigeeV1Quota::getTimeUnit() const {
    return m_time_unit;
}
void OAIGoogleCloudApigeeV1Quota::setTimeUnit(const QString &time_unit) {
    m_time_unit = time_unit;
    m_time_unit_isSet = true;
}

bool OAIGoogleCloudApigeeV1Quota::is_time_unit_Set() const{
    return m_time_unit_isSet;
}

bool OAIGoogleCloudApigeeV1Quota::is_time_unit_Valid() const{
    return m_time_unit_isValid;
}

bool OAIGoogleCloudApigeeV1Quota::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_unit_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Quota::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
