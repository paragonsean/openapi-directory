/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1RoutingRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1RoutingRule::OAIGoogleCloudApigeeV1RoutingRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1RoutingRule::OAIGoogleCloudApigeeV1RoutingRule() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1RoutingRule::~OAIGoogleCloudApigeeV1RoutingRule() {}

void OAIGoogleCloudApigeeV1RoutingRule::initializeModel() {

    m_basepath_isSet = false;
    m_basepath_isValid = false;

    m_deployment_group_isSet = false;
    m_deployment_group_isValid = false;

    m_env_group_revision_isSet = false;
    m_env_group_revision_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_other_targets_isSet = false;
    m_other_targets_isValid = false;

    m_receiver_isSet = false;
    m_receiver_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudApigeeV1RoutingRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1RoutingRule::fromJsonObject(QJsonObject json) {

    m_basepath_isValid = ::OpenAPI::fromJsonValue(m_basepath, json[QString("basepath")]);
    m_basepath_isSet = !json[QString("basepath")].isNull() && m_basepath_isValid;

    m_deployment_group_isValid = ::OpenAPI::fromJsonValue(m_deployment_group, json[QString("deploymentGroup")]);
    m_deployment_group_isSet = !json[QString("deploymentGroup")].isNull() && m_deployment_group_isValid;

    m_env_group_revision_isValid = ::OpenAPI::fromJsonValue(m_env_group_revision, json[QString("envGroupRevision")]);
    m_env_group_revision_isSet = !json[QString("envGroupRevision")].isNull() && m_env_group_revision_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_other_targets_isValid = ::OpenAPI::fromJsonValue(m_other_targets, json[QString("otherTargets")]);
    m_other_targets_isSet = !json[QString("otherTargets")].isNull() && m_other_targets_isValid;

    m_receiver_isValid = ::OpenAPI::fromJsonValue(m_receiver, json[QString("receiver")]);
    m_receiver_isSet = !json[QString("receiver")].isNull() && m_receiver_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudApigeeV1RoutingRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1RoutingRule::asJsonObject() const {
    QJsonObject obj;
    if (m_basepath_isSet) {
        obj.insert(QString("basepath"), ::OpenAPI::toJsonValue(m_basepath));
    }
    if (m_deployment_group_isSet) {
        obj.insert(QString("deploymentGroup"), ::OpenAPI::toJsonValue(m_deployment_group));
    }
    if (m_env_group_revision_isSet) {
        obj.insert(QString("envGroupRevision"), ::OpenAPI::toJsonValue(m_env_group_revision));
    }
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_other_targets.size() > 0) {
        obj.insert(QString("otherTargets"), ::OpenAPI::toJsonValue(m_other_targets));
    }
    if (m_receiver_isSet) {
        obj.insert(QString("receiver"), ::OpenAPI::toJsonValue(m_receiver));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1RoutingRule::getBasepath() const {
    return m_basepath;
}
void OAIGoogleCloudApigeeV1RoutingRule::setBasepath(const QString &basepath) {
    m_basepath = basepath;
    m_basepath_isSet = true;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_basepath_Set() const{
    return m_basepath_isSet;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_basepath_Valid() const{
    return m_basepath_isValid;
}

QString OAIGoogleCloudApigeeV1RoutingRule::getDeploymentGroup() const {
    return m_deployment_group;
}
void OAIGoogleCloudApigeeV1RoutingRule::setDeploymentGroup(const QString &deployment_group) {
    m_deployment_group = deployment_group;
    m_deployment_group_isSet = true;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_deployment_group_Set() const{
    return m_deployment_group_isSet;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_deployment_group_Valid() const{
    return m_deployment_group_isValid;
}

QString OAIGoogleCloudApigeeV1RoutingRule::getEnvGroupRevision() const {
    return m_env_group_revision;
}
void OAIGoogleCloudApigeeV1RoutingRule::setEnvGroupRevision(const QString &env_group_revision) {
    m_env_group_revision = env_group_revision;
    m_env_group_revision_isSet = true;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_env_group_revision_Set() const{
    return m_env_group_revision_isSet;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_env_group_revision_Valid() const{
    return m_env_group_revision_isValid;
}

QString OAIGoogleCloudApigeeV1RoutingRule::getEnvironment() const {
    return m_environment;
}
void OAIGoogleCloudApigeeV1RoutingRule::setEnvironment(const QString &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_environment_Valid() const{
    return m_environment_isValid;
}

QList<QString> OAIGoogleCloudApigeeV1RoutingRule::getOtherTargets() const {
    return m_other_targets;
}
void OAIGoogleCloudApigeeV1RoutingRule::setOtherTargets(const QList<QString> &other_targets) {
    m_other_targets = other_targets;
    m_other_targets_isSet = true;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_other_targets_Set() const{
    return m_other_targets_isSet;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_other_targets_Valid() const{
    return m_other_targets_isValid;
}

QString OAIGoogleCloudApigeeV1RoutingRule::getReceiver() const {
    return m_receiver;
}
void OAIGoogleCloudApigeeV1RoutingRule::setReceiver(const QString &receiver) {
    m_receiver = receiver;
    m_receiver_isSet = true;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_receiver_Set() const{
    return m_receiver_isSet;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_receiver_Valid() const{
    return m_receiver_isValid;
}

QString OAIGoogleCloudApigeeV1RoutingRule::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudApigeeV1RoutingRule::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudApigeeV1RoutingRule::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudApigeeV1RoutingRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_basepath_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_env_group_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_targets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1RoutingRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
