/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest.h
 *
 * QueryTimeSeriesStatsRequest represents a query that returns a collection of time series sequences grouped by their values.
 */

#ifndef OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest_H
#define OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudApigeeV1MetricAggregation.h"
#include "OAIGoogleTypeInterval.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudApigeeV1MetricAggregation;
class OAIGoogleTypeInterval;

class OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest : public OAIObject {
public:
    OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest();
    OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest(QString json);
    ~OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDimensions() const;
    void setDimensions(const QList<QString> &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QList<OAIGoogleCloudApigeeV1MetricAggregation> getMetrics() const;
    void setMetrics(const QList<OAIGoogleCloudApigeeV1MetricAggregation> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    OAIGoogleTypeInterval getTimeRange() const;
    void setTimeRange(const OAIGoogleTypeInterval &time_range);
    bool is_time_range_Set() const;
    bool is_time_range_Valid() const;

    QString getTimestampOrder() const;
    void setTimestampOrder(const QString &timestamp_order);
    bool is_timestamp_order_Set() const;
    bool is_timestamp_order_Valid() const;

    QString getWindowSize() const;
    void setWindowSize(const QString &window_size);
    bool is_window_size_Set() const;
    bool is_window_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QList<OAIGoogleCloudApigeeV1MetricAggregation> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    OAIGoogleTypeInterval m_time_range;
    bool m_time_range_isSet;
    bool m_time_range_isValid;

    QString m_timestamp_order;
    bool m_timestamp_order_isSet;
    bool m_timestamp_order_isValid;

    QString m_window_size;
    bool m_window_size_isSet;
    bool m_window_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest)

#endif // OAIGoogleCloudApigeeV1QueryTimeSeriesStatsRequest_H
