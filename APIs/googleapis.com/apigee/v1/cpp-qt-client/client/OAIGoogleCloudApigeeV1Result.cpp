/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1Result.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1Result::OAIGoogleCloudApigeeV1Result(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1Result::OAIGoogleCloudApigeeV1Result() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1Result::~OAIGoogleCloudApigeeV1Result() {}

void OAIGoogleCloudApigeeV1Result::initializeModel() {

    m_action_result_isSet = false;
    m_action_result_isValid = false;

    m_access_list_isSet = false;
    m_access_list_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_headers_isSet = false;
    m_headers_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_reason_phrase_isSet = false;
    m_reason_phrase_isValid = false;

    m_status_code_isSet = false;
    m_status_code_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;

    m_u_ri_isSet = false;
    m_u_ri_isValid = false;

    m_verb_isSet = false;
    m_verb_isValid = false;
}

void OAIGoogleCloudApigeeV1Result::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1Result::fromJsonObject(QJsonObject json) {

    m_action_result_isValid = ::OpenAPI::fromJsonValue(m_action_result, json[QString("ActionResult")]);
    m_action_result_isSet = !json[QString("ActionResult")].isNull() && m_action_result_isValid;

    m_access_list_isValid = ::OpenAPI::fromJsonValue(m_access_list, json[QString("accessList")]);
    m_access_list_isSet = !json[QString("accessList")].isNull() && m_access_list_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_headers_isValid = ::OpenAPI::fromJsonValue(m_headers, json[QString("headers")]);
    m_headers_isSet = !json[QString("headers")].isNull() && m_headers_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_reason_phrase_isValid = ::OpenAPI::fromJsonValue(m_reason_phrase, json[QString("reasonPhrase")]);
    m_reason_phrase_isSet = !json[QString("reasonPhrase")].isNull() && m_reason_phrase_isValid;

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("statusCode")]);
    m_status_code_isSet = !json[QString("statusCode")].isNull() && m_status_code_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;

    m_u_ri_isValid = ::OpenAPI::fromJsonValue(m_u_ri, json[QString("uRI")]);
    m_u_ri_isSet = !json[QString("uRI")].isNull() && m_u_ri_isValid;

    m_verb_isValid = ::OpenAPI::fromJsonValue(m_verb, json[QString("verb")]);
    m_verb_isSet = !json[QString("verb")].isNull() && m_verb_isValid;
}

QString OAIGoogleCloudApigeeV1Result::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1Result::asJsonObject() const {
    QJsonObject obj;
    if (m_action_result_isSet) {
        obj.insert(QString("ActionResult"), ::OpenAPI::toJsonValue(m_action_result));
    }
    if (m_access_list.size() > 0) {
        obj.insert(QString("accessList"), ::OpenAPI::toJsonValue(m_access_list));
    }
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_headers.size() > 0) {
        obj.insert(QString("headers"), ::OpenAPI::toJsonValue(m_headers));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_reason_phrase_isSet) {
        obj.insert(QString("reasonPhrase"), ::OpenAPI::toJsonValue(m_reason_phrase));
    }
    if (m_status_code_isSet) {
        obj.insert(QString("statusCode"), ::OpenAPI::toJsonValue(m_status_code));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    if (m_u_ri_isSet) {
        obj.insert(QString("uRI"), ::OpenAPI::toJsonValue(m_u_ri));
    }
    if (m_verb_isSet) {
        obj.insert(QString("verb"), ::OpenAPI::toJsonValue(m_verb));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1Result::getActionResult() const {
    return m_action_result;
}
void OAIGoogleCloudApigeeV1Result::setActionResult(const QString &action_result) {
    m_action_result = action_result;
    m_action_result_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_action_result_Set() const{
    return m_action_result_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_action_result_Valid() const{
    return m_action_result_isValid;
}

QList<OAIGoogleCloudApigeeV1Access> OAIGoogleCloudApigeeV1Result::getAccessList() const {
    return m_access_list;
}
void OAIGoogleCloudApigeeV1Result::setAccessList(const QList<OAIGoogleCloudApigeeV1Access> &access_list) {
    m_access_list = access_list;
    m_access_list_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_access_list_Set() const{
    return m_access_list_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_access_list_Valid() const{
    return m_access_list_isValid;
}

QString OAIGoogleCloudApigeeV1Result::getContent() const {
    return m_content;
}
void OAIGoogleCloudApigeeV1Result::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_content_Set() const{
    return m_content_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_content_Valid() const{
    return m_content_isValid;
}

QList<OAIGoogleCloudApigeeV1Property> OAIGoogleCloudApigeeV1Result::getHeaders() const {
    return m_headers;
}
void OAIGoogleCloudApigeeV1Result::setHeaders(const QList<OAIGoogleCloudApigeeV1Property> &headers) {
    m_headers = headers;
    m_headers_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_headers_Set() const{
    return m_headers_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_headers_Valid() const{
    return m_headers_isValid;
}

OAIGoogleCloudApigeeV1Properties OAIGoogleCloudApigeeV1Result::getProperties() const {
    return m_properties;
}
void OAIGoogleCloudApigeeV1Result::setProperties(const OAIGoogleCloudApigeeV1Properties &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIGoogleCloudApigeeV1Result::getReasonPhrase() const {
    return m_reason_phrase;
}
void OAIGoogleCloudApigeeV1Result::setReasonPhrase(const QString &reason_phrase) {
    m_reason_phrase = reason_phrase;
    m_reason_phrase_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_reason_phrase_Set() const{
    return m_reason_phrase_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_reason_phrase_Valid() const{
    return m_reason_phrase_isValid;
}

QString OAIGoogleCloudApigeeV1Result::getStatusCode() const {
    return m_status_code;
}
void OAIGoogleCloudApigeeV1Result::setStatusCode(const QString &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_status_code_Valid() const{
    return m_status_code_isValid;
}

QString OAIGoogleCloudApigeeV1Result::getTimestamp() const {
    return m_timestamp;
}
void OAIGoogleCloudApigeeV1Result::setTimestamp(const QString &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

QString OAIGoogleCloudApigeeV1Result::getURi() const {
    return m_u_ri;
}
void OAIGoogleCloudApigeeV1Result::setURi(const QString &u_ri) {
    m_u_ri = u_ri;
    m_u_ri_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_u_ri_Set() const{
    return m_u_ri_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_u_ri_Valid() const{
    return m_u_ri_isValid;
}

QString OAIGoogleCloudApigeeV1Result::getVerb() const {
    return m_verb;
}
void OAIGoogleCloudApigeeV1Result::setVerb(const QString &verb) {
    m_verb = verb;
    m_verb_isSet = true;
}

bool OAIGoogleCloudApigeeV1Result::is_verb_Set() const{
    return m_verb_isSet;
}

bool OAIGoogleCloudApigeeV1Result::is_verb_Valid() const{
    return m_verb_isValid;
}

bool OAIGoogleCloudApigeeV1Result::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_phrase_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_ri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1Result::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
