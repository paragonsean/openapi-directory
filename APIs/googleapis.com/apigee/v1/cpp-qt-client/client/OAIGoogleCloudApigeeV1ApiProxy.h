/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudApigeeV1ApiProxy.h
 *
 * Metadata describing the API proxy
 */

#ifndef OAIGoogleCloudApigeeV1ApiProxy_H
#define OAIGoogleCloudApigeeV1ApiProxy_H

#include <QJsonObject>

#include "OAIGoogleCloudApigeeV1EntityMetadata.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudApigeeV1EntityMetadata;

class OAIGoogleCloudApigeeV1ApiProxy : public OAIObject {
public:
    OAIGoogleCloudApigeeV1ApiProxy();
    OAIGoogleCloudApigeeV1ApiProxy(QString json);
    ~OAIGoogleCloudApigeeV1ApiProxy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiProxyType() const;
    void setApiProxyType(const QString &api_proxy_type);
    bool is_api_proxy_type_Set() const;
    bool is_api_proxy_type_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLatestRevisionId() const;
    void setLatestRevisionId(const QString &latest_revision_id);
    bool is_latest_revision_id_Set() const;
    bool is_latest_revision_id_Valid() const;

    OAIGoogleCloudApigeeV1EntityMetadata getMetaData() const;
    void setMetaData(const OAIGoogleCloudApigeeV1EntityMetadata &meta_data);
    bool is_meta_data_Set() const;
    bool is_meta_data_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isReadOnly() const;
    void setReadOnly(const bool &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    QList<QString> getRevision() const;
    void setRevision(const QList<QString> &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_proxy_type;
    bool m_api_proxy_type_isSet;
    bool m_api_proxy_type_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_latest_revision_id;
    bool m_latest_revision_id_isSet;
    bool m_latest_revision_id_isValid;

    OAIGoogleCloudApigeeV1EntityMetadata m_meta_data;
    bool m_meta_data_isSet;
    bool m_meta_data_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    QList<QString> m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudApigeeV1ApiProxy)

#endif // OAIGoogleCloudApigeeV1ApiProxy_H
