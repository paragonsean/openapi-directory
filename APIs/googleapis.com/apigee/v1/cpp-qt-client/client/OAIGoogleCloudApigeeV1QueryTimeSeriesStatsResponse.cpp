/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::~OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse() {}

void OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::initializeModel() {

    m_columns_isSet = false;
    m_columns_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::fromJsonObject(QJsonObject json) {

    m_columns_isValid = ::OpenAPI::fromJsonValue(m_columns, json[QString("columns")]);
    m_columns_isSet = !json[QString("columns")].isNull() && m_columns_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_columns.size() > 0) {
        obj.insert(QString("columns"), ::OpenAPI::toJsonValue(m_columns));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QList<QString> OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::getColumns() const {
    return m_columns;
}
void OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::setColumns(const QList<QString> &columns) {
    m_columns = columns;
    m_columns_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::is_columns_Set() const{
    return m_columns_isSet;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::is_columns_Valid() const{
    return m_columns_isValid;
}

QString OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence> OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::getValues() const {
    return m_values;
}
void OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::setValues(const QList<OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponseSequence> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::is_values_Set() const{
    return m_values_isSet;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1QueryTimeSeriesStatsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
