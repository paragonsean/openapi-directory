/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1CanaryEvaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1CanaryEvaluation::OAIGoogleCloudApigeeV1CanaryEvaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1CanaryEvaluation::OAIGoogleCloudApigeeV1CanaryEvaluation() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1CanaryEvaluation::~OAIGoogleCloudApigeeV1CanaryEvaluation() {}

void OAIGoogleCloudApigeeV1CanaryEvaluation::initializeModel() {

    m_control_isSet = false;
    m_control_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_metric_labels_isSet = false;
    m_metric_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_treatment_isSet = false;
    m_treatment_isValid = false;

    m_verdict_isSet = false;
    m_verdict_isValid = false;
}

void OAIGoogleCloudApigeeV1CanaryEvaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1CanaryEvaluation::fromJsonObject(QJsonObject json) {

    m_control_isValid = ::OpenAPI::fromJsonValue(m_control, json[QString("control")]);
    m_control_isSet = !json[QString("control")].isNull() && m_control_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_metric_labels_isValid = ::OpenAPI::fromJsonValue(m_metric_labels, json[QString("metricLabels")]);
    m_metric_labels_isSet = !json[QString("metricLabels")].isNull() && m_metric_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_treatment_isValid = ::OpenAPI::fromJsonValue(m_treatment, json[QString("treatment")]);
    m_treatment_isSet = !json[QString("treatment")].isNull() && m_treatment_isValid;

    m_verdict_isValid = ::OpenAPI::fromJsonValue(m_verdict, json[QString("verdict")]);
    m_verdict_isSet = !json[QString("verdict")].isNull() && m_verdict_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1CanaryEvaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_control_isSet) {
        obj.insert(QString("control"), ::OpenAPI::toJsonValue(m_control));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_metric_labels.isSet()) {
        obj.insert(QString("metricLabels"), ::OpenAPI::toJsonValue(m_metric_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_treatment_isSet) {
        obj.insert(QString("treatment"), ::OpenAPI::toJsonValue(m_treatment));
    }
    if (m_verdict_isSet) {
        obj.insert(QString("verdict"), ::OpenAPI::toJsonValue(m_verdict));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getControl() const {
    return m_control;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setControl(const QString &control) {
    m_control = control;
    m_control_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_control_Set() const{
    return m_control_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_control_Valid() const{
    return m_control_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels OAIGoogleCloudApigeeV1CanaryEvaluation::getMetricLabels() const {
    return m_metric_labels;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setMetricLabels(const OAIGoogleCloudApigeeV1CanaryEvaluationMetricLabels &metric_labels) {
    m_metric_labels = metric_labels;
    m_metric_labels_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_metric_labels_Set() const{
    return m_metric_labels_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_metric_labels_Valid() const{
    return m_metric_labels_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getName() const {
    return m_name;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getTreatment() const {
    return m_treatment;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setTreatment(const QString &treatment) {
    m_treatment = treatment;
    m_treatment_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_treatment_Set() const{
    return m_treatment_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_treatment_Valid() const{
    return m_treatment_isValid;
}

QString OAIGoogleCloudApigeeV1CanaryEvaluation::getVerdict() const {
    return m_verdict;
}
void OAIGoogleCloudApigeeV1CanaryEvaluation::setVerdict(const QString &verdict) {
    m_verdict = verdict;
    m_verdict_isSet = true;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_verdict_Set() const{
    return m_verdict_isSet;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::is_verdict_Valid() const{
    return m_verdict_isValid;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_control_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_labels.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_treatment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verdict_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1CanaryEvaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
