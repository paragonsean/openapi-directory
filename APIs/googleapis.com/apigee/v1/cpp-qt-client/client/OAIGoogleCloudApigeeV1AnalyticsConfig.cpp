/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1AnalyticsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1AnalyticsConfig::OAIGoogleCloudApigeeV1AnalyticsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1AnalyticsConfig::OAIGoogleCloudApigeeV1AnalyticsConfig() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1AnalyticsConfig::~OAIGoogleCloudApigeeV1AnalyticsConfig() {}

void OAIGoogleCloudApigeeV1AnalyticsConfig::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_expire_time_millis_isSet = false;
    m_expire_time_millis_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudApigeeV1AnalyticsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1AnalyticsConfig::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_expire_time_millis_isValid = ::OpenAPI::fromJsonValue(m_expire_time_millis, json[QString("expireTimeMillis")]);
    m_expire_time_millis_isSet = !json[QString("expireTimeMillis")].isNull() && m_expire_time_millis_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudApigeeV1AnalyticsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1AnalyticsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_expire_time_millis_isSet) {
        obj.insert(QString("expireTimeMillis"), ::OpenAPI::toJsonValue(m_expire_time_millis));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::isEnabled() const {
    return m_enabled;
}
void OAIGoogleCloudApigeeV1AnalyticsConfig::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIGoogleCloudApigeeV1AnalyticsConfig::getExpireTimeMillis() const {
    return m_expire_time_millis;
}
void OAIGoogleCloudApigeeV1AnalyticsConfig::setExpireTimeMillis(const QString &expire_time_millis) {
    m_expire_time_millis = expire_time_millis;
    m_expire_time_millis_isSet = true;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_expire_time_millis_Set() const{
    return m_expire_time_millis_isSet;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_expire_time_millis_Valid() const{
    return m_expire_time_millis_isValid;
}

QString OAIGoogleCloudApigeeV1AnalyticsConfig::getState() const {
    return m_state;
}
void OAIGoogleCloudApigeeV1AnalyticsConfig::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudApigeeV1AnalyticsConfig::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudApigeeV1AnalyticsConfig::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1AnalyticsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
