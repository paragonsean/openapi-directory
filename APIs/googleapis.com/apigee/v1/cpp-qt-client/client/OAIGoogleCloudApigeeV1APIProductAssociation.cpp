/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1APIProductAssociation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1APIProductAssociation::OAIGoogleCloudApigeeV1APIProductAssociation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1APIProductAssociation::OAIGoogleCloudApigeeV1APIProductAssociation() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1APIProductAssociation::~OAIGoogleCloudApigeeV1APIProductAssociation() {}

void OAIGoogleCloudApigeeV1APIProductAssociation::initializeModel() {

    m_apiproduct_isSet = false;
    m_apiproduct_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIGoogleCloudApigeeV1APIProductAssociation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1APIProductAssociation::fromJsonObject(QJsonObject json) {

    m_apiproduct_isValid = ::OpenAPI::fromJsonValue(m_apiproduct, json[QString("apiproduct")]);
    m_apiproduct_isSet = !json[QString("apiproduct")].isNull() && m_apiproduct_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIGoogleCloudApigeeV1APIProductAssociation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1APIProductAssociation::asJsonObject() const {
    QJsonObject obj;
    if (m_apiproduct_isSet) {
        obj.insert(QString("apiproduct"), ::OpenAPI::toJsonValue(m_apiproduct));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1APIProductAssociation::getApiproduct() const {
    return m_apiproduct;
}
void OAIGoogleCloudApigeeV1APIProductAssociation::setApiproduct(const QString &apiproduct) {
    m_apiproduct = apiproduct;
    m_apiproduct_isSet = true;
}

bool OAIGoogleCloudApigeeV1APIProductAssociation::is_apiproduct_Set() const{
    return m_apiproduct_isSet;
}

bool OAIGoogleCloudApigeeV1APIProductAssociation::is_apiproduct_Valid() const{
    return m_apiproduct_isValid;
}

QString OAIGoogleCloudApigeeV1APIProductAssociation::getStatus() const {
    return m_status;
}
void OAIGoogleCloudApigeeV1APIProductAssociation::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGoogleCloudApigeeV1APIProductAssociation::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGoogleCloudApigeeV1APIProductAssociation::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIGoogleCloudApigeeV1APIProductAssociation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apiproduct_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1APIProductAssociation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
