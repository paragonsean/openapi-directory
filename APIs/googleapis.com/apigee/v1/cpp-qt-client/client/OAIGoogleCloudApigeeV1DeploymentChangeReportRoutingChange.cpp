/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange() {
    this->initializeModel();
}

OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::~OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange() {}

void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_environment_group_isSet = false;
    m_environment_group_isValid = false;

    m_from_deployment_isSet = false;
    m_from_deployment_isValid = false;

    m_should_sequence_rollout_isSet = false;
    m_should_sequence_rollout_isValid = false;

    m_to_deployment_isSet = false;
    m_to_deployment_isValid = false;
}

void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_environment_group_isValid = ::OpenAPI::fromJsonValue(m_environment_group, json[QString("environmentGroup")]);
    m_environment_group_isSet = !json[QString("environmentGroup")].isNull() && m_environment_group_isValid;

    m_from_deployment_isValid = ::OpenAPI::fromJsonValue(m_from_deployment, json[QString("fromDeployment")]);
    m_from_deployment_isSet = !json[QString("fromDeployment")].isNull() && m_from_deployment_isValid;

    m_should_sequence_rollout_isValid = ::OpenAPI::fromJsonValue(m_should_sequence_rollout, json[QString("shouldSequenceRollout")]);
    m_should_sequence_rollout_isSet = !json[QString("shouldSequenceRollout")].isNull() && m_should_sequence_rollout_isValid;

    m_to_deployment_isValid = ::OpenAPI::fromJsonValue(m_to_deployment, json[QString("toDeployment")]);
    m_to_deployment_isSet = !json[QString("toDeployment")].isNull() && m_to_deployment_isValid;
}

QString OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_environment_group_isSet) {
        obj.insert(QString("environmentGroup"), ::OpenAPI::toJsonValue(m_environment_group));
    }
    if (m_from_deployment.isSet()) {
        obj.insert(QString("fromDeployment"), ::OpenAPI::toJsonValue(m_from_deployment));
    }
    if (m_should_sequence_rollout_isSet) {
        obj.insert(QString("shouldSequenceRollout"), ::OpenAPI::toJsonValue(m_should_sequence_rollout));
    }
    if (m_to_deployment.isSet()) {
        obj.insert(QString("toDeployment"), ::OpenAPI::toJsonValue(m_to_deployment));
    }
    return obj;
}

QString OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::getDescription() const {
    return m_description;
}
void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::getEnvironmentGroup() const {
    return m_environment_group;
}
void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::setEnvironmentGroup(const QString &environment_group) {
    m_environment_group = environment_group;
    m_environment_group_isSet = true;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_environment_group_Set() const{
    return m_environment_group_isSet;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_environment_group_Valid() const{
    return m_environment_group_isValid;
}

OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::getFromDeployment() const {
    return m_from_deployment;
}
void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::setFromDeployment(const OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment &from_deployment) {
    m_from_deployment = from_deployment;
    m_from_deployment_isSet = true;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_from_deployment_Set() const{
    return m_from_deployment_isSet;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_from_deployment_Valid() const{
    return m_from_deployment_isValid;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::isShouldSequenceRollout() const {
    return m_should_sequence_rollout;
}
void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::setShouldSequenceRollout(const bool &should_sequence_rollout) {
    m_should_sequence_rollout = should_sequence_rollout;
    m_should_sequence_rollout_isSet = true;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_should_sequence_rollout_Set() const{
    return m_should_sequence_rollout_isSet;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_should_sequence_rollout_Valid() const{
    return m_should_sequence_rollout_isValid;
}

OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::getToDeployment() const {
    return m_to_deployment;
}
void OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::setToDeployment(const OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment &to_deployment) {
    m_to_deployment = to_deployment;
    m_to_deployment_isSet = true;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_to_deployment_Set() const{
    return m_to_deployment_isSet;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::is_to_deployment_Valid() const{
    return m_to_deployment_isValid;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_deployment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_should_sequence_rollout_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_deployment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudApigeeV1DeploymentChangeReportRoutingChange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
