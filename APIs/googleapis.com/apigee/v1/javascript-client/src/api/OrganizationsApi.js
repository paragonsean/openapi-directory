/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleApiHttpBody from '../model/GoogleApiHttpBody';
import GoogleCloudApigeeV1AdjustDeveloperBalanceRequest from '../model/GoogleCloudApigeeV1AdjustDeveloperBalanceRequest';
import GoogleCloudApigeeV1Alias from '../model/GoogleCloudApigeeV1Alias';
import GoogleCloudApigeeV1ApiCategory from '../model/GoogleCloudApigeeV1ApiCategory';
import GoogleCloudApigeeV1ApiCategoryResponse from '../model/GoogleCloudApigeeV1ApiCategoryResponse';
import GoogleCloudApigeeV1ApiDoc from '../model/GoogleCloudApigeeV1ApiDoc';
import GoogleCloudApigeeV1ApiDocDocumentation from '../model/GoogleCloudApigeeV1ApiDocDocumentation';
import GoogleCloudApigeeV1ApiDocDocumentationResponse from '../model/GoogleCloudApigeeV1ApiDocDocumentationResponse';
import GoogleCloudApigeeV1ApiDocResponse from '../model/GoogleCloudApigeeV1ApiDocResponse';
import GoogleCloudApigeeV1ApiProduct from '../model/GoogleCloudApigeeV1ApiProduct';
import GoogleCloudApigeeV1ApiProxyRevision from '../model/GoogleCloudApigeeV1ApiProxyRevision';
import GoogleCloudApigeeV1AppGroup from '../model/GoogleCloudApigeeV1AppGroup';
import GoogleCloudApigeeV1ArchiveDeployment from '../model/GoogleCloudApigeeV1ArchiveDeployment';
import GoogleCloudApigeeV1AsyncQuery from '../model/GoogleCloudApigeeV1AsyncQuery';
import GoogleCloudApigeeV1Attributes from '../model/GoogleCloudApigeeV1Attributes';
import GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest from '../model/GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest';
import GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse from '../model/GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse';
import GoogleCloudApigeeV1CanaryEvaluation from '../model/GoogleCloudApigeeV1CanaryEvaluation';
import GoogleCloudApigeeV1ComputeEnvironmentScoresRequest from '../model/GoogleCloudApigeeV1ComputeEnvironmentScoresRequest';
import GoogleCloudApigeeV1ComputeEnvironmentScoresResponse from '../model/GoogleCloudApigeeV1ComputeEnvironmentScoresResponse';
import GoogleCloudApigeeV1CreditDeveloperBalanceRequest from '../model/GoogleCloudApigeeV1CreditDeveloperBalanceRequest';
import GoogleCloudApigeeV1CustomReport from '../model/GoogleCloudApigeeV1CustomReport';
import GoogleCloudApigeeV1DataCollector from '../model/GoogleCloudApigeeV1DataCollector';
import GoogleCloudApigeeV1Datastore from '../model/GoogleCloudApigeeV1Datastore';
import GoogleCloudApigeeV1DebugSession from '../model/GoogleCloudApigeeV1DebugSession';
import GoogleCloudApigeeV1DeleteResponse from '../model/GoogleCloudApigeeV1DeleteResponse';
import GoogleCloudApigeeV1Deployment from '../model/GoogleCloudApigeeV1Deployment';
import GoogleCloudApigeeV1DeploymentChangeReport from '../model/GoogleCloudApigeeV1DeploymentChangeReport';
import GoogleCloudApigeeV1Developer from '../model/GoogleCloudApigeeV1Developer';
import GoogleCloudApigeeV1DeveloperApp from '../model/GoogleCloudApigeeV1DeveloperApp';
import GoogleCloudApigeeV1DeveloperAppKey from '../model/GoogleCloudApigeeV1DeveloperAppKey';
import GoogleCloudApigeeV1DeveloperBalance from '../model/GoogleCloudApigeeV1DeveloperBalance';
import GoogleCloudApigeeV1DeveloperSubscription from '../model/GoogleCloudApigeeV1DeveloperSubscription';
import GoogleCloudApigeeV1EndpointAttachment from '../model/GoogleCloudApigeeV1EndpointAttachment';
import GoogleCloudApigeeV1EnvironmentGroup from '../model/GoogleCloudApigeeV1EnvironmentGroup';
import GoogleCloudApigeeV1Export from '../model/GoogleCloudApigeeV1Export';
import GoogleCloudApigeeV1ExportRequest from '../model/GoogleCloudApigeeV1ExportRequest';
import GoogleCloudApigeeV1GenerateDownloadUrlResponse from '../model/GoogleCloudApigeeV1GenerateDownloadUrlResponse';
import GoogleCloudApigeeV1GenerateUploadUrlResponse from '../model/GoogleCloudApigeeV1GenerateUploadUrlResponse';
import GoogleCloudApigeeV1Instance from '../model/GoogleCloudApigeeV1Instance';
import GoogleCloudApigeeV1InstanceAttachment from '../model/GoogleCloudApigeeV1InstanceAttachment';
import GoogleCloudApigeeV1KeyValueEntry from '../model/GoogleCloudApigeeV1KeyValueEntry';
import GoogleCloudApigeeV1KeyValueMap from '../model/GoogleCloudApigeeV1KeyValueMap';
import GoogleCloudApigeeV1Keystore from '../model/GoogleCloudApigeeV1Keystore';
import GoogleCloudApigeeV1ListApiCategoriesResponse from '../model/GoogleCloudApigeeV1ListApiCategoriesResponse';
import GoogleCloudApigeeV1ListApiDocsResponse from '../model/GoogleCloudApigeeV1ListApiDocsResponse';
import GoogleCloudApigeeV1ListApiProductsResponse from '../model/GoogleCloudApigeeV1ListApiProductsResponse';
import GoogleCloudApigeeV1ListApiProxiesResponse from '../model/GoogleCloudApigeeV1ListApiProxiesResponse';
import GoogleCloudApigeeV1ListAppGroupsResponse from '../model/GoogleCloudApigeeV1ListAppGroupsResponse';
import GoogleCloudApigeeV1ListArchiveDeploymentsResponse from '../model/GoogleCloudApigeeV1ListArchiveDeploymentsResponse';
import GoogleCloudApigeeV1ListAsyncQueriesResponse from '../model/GoogleCloudApigeeV1ListAsyncQueriesResponse';
import GoogleCloudApigeeV1ListCustomReportsResponse from '../model/GoogleCloudApigeeV1ListCustomReportsResponse';
import GoogleCloudApigeeV1ListDataCollectorsResponse from '../model/GoogleCloudApigeeV1ListDataCollectorsResponse';
import GoogleCloudApigeeV1ListDatastoresResponse from '../model/GoogleCloudApigeeV1ListDatastoresResponse';
import GoogleCloudApigeeV1ListDebugSessionsResponse from '../model/GoogleCloudApigeeV1ListDebugSessionsResponse';
import GoogleCloudApigeeV1ListDeploymentsResponse from '../model/GoogleCloudApigeeV1ListDeploymentsResponse';
import GoogleCloudApigeeV1ListDeveloperAppsResponse from '../model/GoogleCloudApigeeV1ListDeveloperAppsResponse';
import GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse from '../model/GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse';
import GoogleCloudApigeeV1ListEndpointAttachmentsResponse from '../model/GoogleCloudApigeeV1ListEndpointAttachmentsResponse';
import GoogleCloudApigeeV1ListEnvironmentGroupsResponse from '../model/GoogleCloudApigeeV1ListEnvironmentGroupsResponse';
import GoogleCloudApigeeV1ListEnvironmentResourcesResponse from '../model/GoogleCloudApigeeV1ListEnvironmentResourcesResponse';
import GoogleCloudApigeeV1ListExportsResponse from '../model/GoogleCloudApigeeV1ListExportsResponse';
import GoogleCloudApigeeV1ListInstanceAttachmentsResponse from '../model/GoogleCloudApigeeV1ListInstanceAttachmentsResponse';
import GoogleCloudApigeeV1ListInstancesResponse from '../model/GoogleCloudApigeeV1ListInstancesResponse';
import GoogleCloudApigeeV1ListKeyValueEntriesResponse from '../model/GoogleCloudApigeeV1ListKeyValueEntriesResponse';
import GoogleCloudApigeeV1ListNatAddressesResponse from '../model/GoogleCloudApigeeV1ListNatAddressesResponse';
import GoogleCloudApigeeV1ListOfDevelopersResponse from '../model/GoogleCloudApigeeV1ListOfDevelopersResponse';
import GoogleCloudApigeeV1ListOrganizationsResponse from '../model/GoogleCloudApigeeV1ListOrganizationsResponse';
import GoogleCloudApigeeV1ListRatePlansResponse from '../model/GoogleCloudApigeeV1ListRatePlansResponse';
import GoogleCloudApigeeV1ListSecurityActionsResponse from '../model/GoogleCloudApigeeV1ListSecurityActionsResponse';
import GoogleCloudApigeeV1ListSecurityIncidentsResponse from '../model/GoogleCloudApigeeV1ListSecurityIncidentsResponse';
import GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse from '../model/GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse';
import GoogleCloudApigeeV1ListSecurityProfilesResponse from '../model/GoogleCloudApigeeV1ListSecurityProfilesResponse';
import GoogleCloudApigeeV1ListSecurityReportsResponse from '../model/GoogleCloudApigeeV1ListSecurityReportsResponse';
import GoogleCloudApigeeV1ListSharedFlowsResponse from '../model/GoogleCloudApigeeV1ListSharedFlowsResponse';
import GoogleCloudApigeeV1ListTraceConfigOverridesResponse from '../model/GoogleCloudApigeeV1ListTraceConfigOverridesResponse';
import GoogleCloudApigeeV1NatAddress from '../model/GoogleCloudApigeeV1NatAddress';
import GoogleCloudApigeeV1Organization from '../model/GoogleCloudApigeeV1Organization';
import GoogleCloudApigeeV1OrganizationProjectMapping from '../model/GoogleCloudApigeeV1OrganizationProjectMapping';
import GoogleCloudApigeeV1Query from '../model/GoogleCloudApigeeV1Query';
import GoogleCloudApigeeV1QueryTabularStatsRequest from '../model/GoogleCloudApigeeV1QueryTabularStatsRequest';
import GoogleCloudApigeeV1QueryTabularStatsResponse from '../model/GoogleCloudApigeeV1QueryTabularStatsResponse';
import GoogleCloudApigeeV1QueryTimeSeriesStatsRequest from '../model/GoogleCloudApigeeV1QueryTimeSeriesStatsRequest';
import GoogleCloudApigeeV1QueryTimeSeriesStatsResponse from '../model/GoogleCloudApigeeV1QueryTimeSeriesStatsResponse';
import GoogleCloudApigeeV1RatePlan from '../model/GoogleCloudApigeeV1RatePlan';
import GoogleCloudApigeeV1Reference from '../model/GoogleCloudApigeeV1Reference';
import GoogleCloudApigeeV1ReportInstanceStatusRequest from '../model/GoogleCloudApigeeV1ReportInstanceStatusRequest';
import GoogleCloudApigeeV1ResourceFile from '../model/GoogleCloudApigeeV1ResourceFile';
import GoogleCloudApigeeV1SecurityAction from '../model/GoogleCloudApigeeV1SecurityAction';
import GoogleCloudApigeeV1SecurityProfile from '../model/GoogleCloudApigeeV1SecurityProfile';
import GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation from '../model/GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation';
import GoogleCloudApigeeV1SecurityReport from '../model/GoogleCloudApigeeV1SecurityReport';
import GoogleCloudApigeeV1SecurityReportQuery from '../model/GoogleCloudApigeeV1SecurityReportQuery';
import GoogleCloudApigeeV1SetAddonEnablementRequest from '../model/GoogleCloudApigeeV1SetAddonEnablementRequest';
import GoogleCloudApigeeV1SetAddonsRequest from '../model/GoogleCloudApigeeV1SetAddonsRequest';
import GoogleCloudApigeeV1SharedFlowRevision from '../model/GoogleCloudApigeeV1SharedFlowRevision';
import GoogleCloudApigeeV1Subscription from '../model/GoogleCloudApigeeV1Subscription';
import GoogleCloudApigeeV1SyncAuthorization from '../model/GoogleCloudApigeeV1SyncAuthorization';
import GoogleCloudApigeeV1TargetServer from '../model/GoogleCloudApigeeV1TargetServer';
import GoogleCloudApigeeV1TestDatastoreResponse from '../model/GoogleCloudApigeeV1TestDatastoreResponse';
import GoogleCloudApigeeV1TraceConfigOverride from '../model/GoogleCloudApigeeV1TraceConfigOverride';
import GoogleIamV1Policy from '../model/GoogleIamV1Policy';
import GoogleIamV1SetIamPolicyRequest from '../model/GoogleIamV1SetIamPolicyRequest';
import GoogleIamV1TestIamPermissionsRequest from '../model/GoogleIamV1TestIamPermissionsRequest';
import GoogleIamV1TestIamPermissionsResponse from '../model/GoogleIamV1TestIamPermissionsResponse';
import GoogleLongrunningListOperationsResponse from '../model/GoogleLongrunningListOperationsResponse';
import GoogleLongrunningOperation from '../model/GoogleLongrunningOperation';

/**
* Organizations service.
* @module api/OrganizationsApi
* @version v1
*/
export default class OrganizationsApi {

    /**
    * Constructs a new OrganizationsApi. 
    * @alias module:api/OrganizationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apigeeOrganizationsAnalyticsDatastoresCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsAnalyticsDatastoresCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Datastore} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Datastore for an org
     * @param {String} parent Required. The parent organization name. Must be of the form `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Datastore} [googleCloudApigeeV1Datastore] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsAnalyticsDatastoresCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Datastore}
     */
    apigeeOrganizationsAnalyticsDatastoresCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Datastore'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsAnalyticsDatastoresCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Datastore;
      return this.apiClient.callApi(
        '/v1/{parent}/analytics/datastores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsAnalyticsDatastoresList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsAnalyticsDatastoresListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListDatastoresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Datastores
     * @param {String} parent Required. The parent organization name. Must be of the form `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [targetType] Optional. TargetType is used to fetch all Datastores that match the type
     * @param {module:api/OrganizationsApi~apigeeOrganizationsAnalyticsDatastoresListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListDatastoresResponse}
     */
    apigeeOrganizationsAnalyticsDatastoresList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsAnalyticsDatastoresList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'targetType': opts['targetType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListDatastoresResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/analytics/datastores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsAnalyticsDatastoresTest operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsAnalyticsDatastoresTestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1TestDatastoreResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test if Datastore configuration is correct. This includes checking if credentials provided by customer have required permissions in target destination storage
     * @param {String} parent Required. The parent organization name Must be of the form `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Datastore} [googleCloudApigeeV1Datastore] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsAnalyticsDatastoresTestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1TestDatastoreResponse}
     */
    apigeeOrganizationsAnalyticsDatastoresTest(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Datastore'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsAnalyticsDatastoresTest");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1TestDatastoreResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/analytics/datastores:test', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsApiproductsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsApiproductsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ApiProduct} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an API product in an organization. You create API products after you have proxied backend services using API proxies. An API product is a collection of API resources combined with quota settings and metadata that you can use to deliver customized and productized API bundles to your developer community. This metadata can include: - Scope - Environments - API proxies - Extensible profile API products enable you repackage APIs on the fly, without having to do any additional coding or configuration. Apigee recommends that you start with a simple API product including only required elements. You then provision credentials to apps to enable them to start testing your APIs. After you have authentication and authorization working against a simple API product, you can iterate to create finer-grained API products, defining different sets of API resources for each API product. **WARNING:** - If you don't specify an API proxy in the request body, *any* app associated with the product can make calls to *any* API in your entire organization. - If you don't specify an environment in the request body, the product allows access to all environments. For more information, see What is an API product?
     * @param {String} parent Required. Name of the organization in which the API product will be created. Use the following structure in your request: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1ApiProduct} [googleCloudApigeeV1ApiProduct] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsApiproductsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ApiProduct}
     */
    apigeeOrganizationsApiproductsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ApiProduct'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsApiproductsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ApiProduct;
      return this.apiClient.callApi(
        '/v1/{parent}/apiproducts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsApiproductsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsApiproductsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListApiProductsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all API product names for an organization. Filter the list by passing an `attributename` and `attibutevalue`. The maximum number of API products returned is 1000. You can paginate the list of API products returned using the `startKey` and `count` query parameters.
     * @param {String} parent Required. Name of the organization. Use the following structure in your request: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [attributename] Name of the attribute used to filter the search.
     * @param {String} [attributevalue] Value of the attribute used to filter the search.
     * @param {String} [count] Enter the number of API products you want returned in the API call. The limit is 1000.
     * @param {Boolean} [expand] Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API.
     * @param {String} [startKey] Gets a list of API products starting with a specific API product in the list. For example, if you're returning 50 API products at a time (using the `count` query parameter), you can view products 50-99 by entering the name of the 50th API product in the first API (without using `startKey`). Product name is case sensitive.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsApiproductsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListApiProductsResponse}
     */
    apigeeOrganizationsApiproductsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsApiproductsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'attributename': opts['attributename'],
        'attributevalue': opts['attributevalue'],
        'count': opts['count'],
        'expand': opts['expand'],
        'startKey': opts['startKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListApiProductsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apiproducts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsApiproductsRateplansCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsApiproductsRateplansCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1RatePlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a rate plan that is associated with an API product in an organization. Using rate plans, API product owners can monetize their API products by configuring one or more of the following: - Billing frequency - Initial setup fees for using an API product - Payment funding model (postpaid only) - Fixed recurring or consumption-based charges for using an API product - Revenue sharing with developer partners An API product can have multiple rate plans associated with it but *only one* rate plan can be active at any point of time. **Note: From the developer's perspective, they purchase API products not rate plans.
     * @param {String} parent Required. Name of the API product that is associated with the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1RatePlan} [googleCloudApigeeV1RatePlan] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsApiproductsRateplansCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1RatePlan}
     */
    apigeeOrganizationsApiproductsRateplansCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1RatePlan'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsApiproductsRateplansCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1RatePlan;
      return this.apiClient.callApi(
        '/v1/{parent}/rateplans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsApiproductsRateplansList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsApiproductsRateplansListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListRatePlansResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the rate plans for an API product.
     * @param {String} parent Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to return rate plans for all API products within the organization.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [count] Number of rate plans to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The maximum limit is 1000. Defaults to 100.
     * @param {Boolean} [expand] Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API. Defaults to `false`.
     * @param {String} [orderBy] Name of the attribute used for sorting. Valid values include: * `name`: Name of the rate plan. * `state`: State of the rate plan (`DRAFT`, `PUBLISHED`). * `startTime`: Time when the rate plan becomes active. * `endTime`: Time when the rate plan expires. **Note**: Not supported by Apigee at this time.
     * @param {String} [startKey] Name of the rate plan from which to start displaying the list of rate plans. If omitted, the list starts from the first item. For example, to view the rate plans from 51-150, set the value of `startKey` to the name of the 51st rate plan and set the value of `count` to 100.
     * @param {module:model/String} [state] State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsApiproductsRateplansListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListRatePlansResponse}
     */
    apigeeOrganizationsApiproductsRateplansList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsApiproductsRateplansList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'count': opts['count'],
        'expand': opts['expand'],
        'orderBy': opts['orderBy'],
        'startKey': opts['startKey'],
        'state': opts['state']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListRatePlansResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/rateplans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsApisCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsApisCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ApiProxyRevision} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client.
     * @param {String} parent Required. Name of the organization in the following format: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [action] Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.
     * @param {String} [name] Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
     * @param {Boolean} [validate] Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.
     * @param {module:model/GoogleApiHttpBody} [googleApiHttpBody] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsApisCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ApiProxyRevision}
     */
    apigeeOrganizationsApisCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleApiHttpBody'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsApisCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'action': opts['action'],
        'name': opts['name'],
        'validate': opts['validate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ApiProxyRevision;
      return this.apiClient.callApi(
        '/v1/{parent}/apis', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsApisList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsApisListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListApiProxiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the names of all API proxies in an organization. The names returned correspond to the names defined in the configuration files for each API proxy.
     * @param {String} parent Required. Name of the organization in the following format: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [includeMetaData] Flag that specifies whether to include API proxy metadata in the response.
     * @param {Boolean} [includeRevisions] Flag that specifies whether to include a list of revisions in the response.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsApisListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListApiProxiesResponse}
     */
    apigeeOrganizationsApisList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsApisList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'includeMetaData': opts['includeMetaData'],
        'includeRevisions': opts['includeRevisions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListApiProxiesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsAppgroupsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsAppgroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1AppGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an AppGroup. Once created, user can register apps under the AppGroup to obtain secret key and password. At creation time, the AppGroup's state is set as `active`.
     * @param {String} parent Required. Name of the Apigee organization in which the AppGroup is created. Use the following structure in your request: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1AppGroup} [googleCloudApigeeV1AppGroup] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsAppgroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1AppGroup}
     */
    apigeeOrganizationsAppgroupsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1AppGroup'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsAppgroupsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1AppGroup;
      return this.apiClient.callApi(
        '/v1/{parent}/appgroups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsAppgroupsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsAppgroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListAppGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all AppGroups in an organization. A maximum of 1000 AppGroups are returned in the response if PageSize is not specified, or if the PageSize is greater than 1000.
     * @param {String} parent Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The filter expression to be used to get the list of AppGroups, where filtering can be done on status, channelId or channelUri of the app group. Examples: filter=status=active\", filter=channelId=, filter=channelUri=
     * @param {Number} [pageSize] Count of AppGroups a single page can have in the response. If unspecified, at most 1000 AppGroups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] The starting index record for listing the AppGroups.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsAppgroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListAppGroupsResponse}
     */
    apigeeOrganizationsAppgroupsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsAppgroupsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListAppGroupsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/appgroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Apigee organization. See [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [parent] Required. Name of the Google Cloud project in which to associate the Apigee organization. Pass the information as a query parameter using the following structure in your request: `projects/`
     * @param {module:model/GoogleCloudApigeeV1Organization} [googleCloudApigeeV1Organization] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Organization'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'parent': opts['parent']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/organizations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDatacollectorsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDatacollectorsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DataCollector} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new data collector.
     * @param {String} parent Required. Name of the organization in which to create the data collector in the following format: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [dataCollectorId] ID of the data collector. Overrides any ID in the data collector resource. Must be a string beginning with `dc_` that contains only letters, numbers, and underscores.
     * @param {module:model/GoogleCloudApigeeV1DataCollector} [googleCloudApigeeV1DataCollector] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDatacollectorsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DataCollector}
     */
    apigeeOrganizationsDatacollectorsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1DataCollector'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDatacollectorsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'dataCollectorId': opts['dataCollectorId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DataCollector;
      return this.apiClient.callApi(
        '/v1/{parent}/datacollectors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDatacollectorsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDatacollectorsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListDataCollectorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all data collectors.
     * @param {String} parent Required. Name of the organization for which to list data collectors in the following format: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of data collectors to return. The page size defaults to 25.
     * @param {String} [pageToken] Page token, returned from a previous ListDataCollectors call, that you can use to retrieve the next page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDatacollectorsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListDataCollectorsResponse}
     */
    apigeeOrganizationsDatacollectorsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDatacollectorsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListDataCollectorsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/datacollectors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersAppsAttributes operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Attributes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates attributes for a developer app. This API replaces the current attributes with those specified in the request.
     * @param {String} name Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Attributes} [googleCloudApigeeV1Attributes] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Attributes}
     */
    apigeeOrganizationsDevelopersAppsAttributes(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Attributes'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsDevelopersAppsAttributes");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Attributes;
      return this.apiClient.callApi(
        '/v1/{name}/attributes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersAppsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeveloperApp} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an app associated with a developer. This API associates the developer app with the specified API product and auto-generates an API key for the app to use in calls to API proxies inside that API product. The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name` appears in the UI.
     * @param {String} parent Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1DeveloperApp} [googleCloudApigeeV1DeveloperApp] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeveloperApp}
     */
    apigeeOrganizationsDevelopersAppsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1DeveloperApp'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersAppsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeveloperApp;
      return this.apiClient.callApi(
        '/v1/{parent}/apps', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersAppsKeysCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsKeysCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeveloperAppKey} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API. **Note**: All keys start out with status=approved, even if status=revoked is passed when the key is created. To revoke a key, use the UpdateDeveloperAppKey API.
     * @param {String} parent Parent of the developer app key. Use the following structure in your request: 'organizations/{org}/developers/{developerEmail}/apps/{appName}'
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1DeveloperAppKey} [googleCloudApigeeV1DeveloperAppKey] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsKeysCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeveloperAppKey}
     */
    apigeeOrganizationsDevelopersAppsKeysCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1DeveloperAppKey'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersAppsKeysCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeveloperAppKey;
      return this.apiClient.callApi(
        '/v1/{parent}/keys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersAppsKeysCreateCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsKeysCreateCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeveloperAppKey} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API. **Note**: All keys start out with status=approved, even if status=revoked is passed when the key is created. To revoke a key, use the UpdateDeveloperAppKey API.
     * @param {String} parent Parent of the developer app key. Use the following structure in your request: 'organizations/{org}/developers/{developerEmail}/apps/{appName}'
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1DeveloperAppKey} [googleCloudApigeeV1DeveloperAppKey] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsKeysCreateCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeveloperAppKey}
     */
    apigeeOrganizationsDevelopersAppsKeysCreateCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1DeveloperAppKey'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersAppsKeysCreateCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeveloperAppKey;
      return this.apiClient.callApi(
        '/v1/{parent}/keys/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersAppsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListDeveloperAppsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all apps created by a developer in an Apigee organization. Optionally, you can request an expanded view of the developer apps. A maximum of 100 developer apps are returned per API call. You can paginate the list of deveoper apps returned using the `startKey` and `count` query parameters.
     * @param {String} parent Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [count] Number of developer apps to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.
     * @param {Boolean} [expand] Optional. Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters.
     * @param {Boolean} [shallowExpand] Optional. Specifies whether to expand the results in shallow mode. Set to `true` to expand the results in shallow mode.
     * @param {String} [startKey] **Note**: Must be used in conjunction with the `count` parameter. Name of the developer app from which to start displaying the list of developer apps. For example, if you're returning 50 developer apps at a time (using the `count` query parameter), you can view developer apps 50-99 by entering the name of the 50th developer app. The developer app name is case sensitive.
     * @param {String} [ids] Optional. Comma-separated list of app IDs on which to filter.
     * @param {Boolean} [includeCred] Optional. Flag that specifies whether to include credentials in the response.
     * @param {String} [keyStatus] Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to `approved`.
     * @param {Number} [pageSize] Optional. Count of apps a single page can have in the response. If unspecified, at most 100 apps will be returned. The maximum value is 100; values above 100 will be coerced to 100. \"page_size\" is supported from ver 1.10.0 and above.
     * @param {String} [pageToken] Optional. The starting index record for listing the developers. \"page_token\" is supported from ver 1.10.0 and above.
     * @param {String} [rows] Optional. Maximum number of app IDs to return. Defaults to 10000.
     * @param {String} [status] Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to `approved`.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersAppsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListDeveloperAppsResponse}
     */
    apigeeOrganizationsDevelopersAppsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersAppsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'count': opts['count'],
        'expand': opts['expand'],
        'shallowExpand': opts['shallowExpand'],
        'startKey': opts['startKey'],
        'ids': opts['ids'],
        'includeCred': opts['includeCred'],
        'keyStatus': opts['keyStatus'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'rows': opts['rows'],
        'status': opts['status']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListDeveloperAppsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersAttributes operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersAttributesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Attributes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates developer attributes. This API replaces the existing attributes with those specified in the request. Add new attributes, and include or exclude any existing attributes that you want to retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
     * @param {String} parent Required. Email address of the developer for which attributes are being updated. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Attributes} [googleCloudApigeeV1Attributes] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersAttributesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Attributes}
     */
    apigeeOrganizationsDevelopersAttributes(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Attributes'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersAttributes");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Attributes;
      return this.apiClient.callApi(
        '/v1/{parent}/attributes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersAttributesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersAttributesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Attributes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of all developer attributes.
     * @param {String} parent Required. Email address of the developer for which attributes are being listed. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersAttributesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Attributes}
     */
    apigeeOrganizationsDevelopersAttributesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersAttributesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Attributes;
      return this.apiClient.callApi(
        '/v1/{parent}/attributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersBalanceAdjust operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersBalanceAdjustCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeveloperBalance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adjust the prepaid balance for the developer. This API will be used in scenarios where the developer has been under-charged or over-charged.
     * @param {String} name Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1AdjustDeveloperBalanceRequest} [googleCloudApigeeV1AdjustDeveloperBalanceRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersBalanceAdjustCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeveloperBalance}
     */
    apigeeOrganizationsDevelopersBalanceAdjust(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1AdjustDeveloperBalanceRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsDevelopersBalanceAdjust");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeveloperBalance;
      return this.apiClient.callApi(
        '/v1/{name}:adjust', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersBalanceCredit operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersBalanceCreditCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeveloperBalance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Credits the account balance for the developer.
     * @param {String} name Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1CreditDeveloperBalanceRequest} [googleCloudApigeeV1CreditDeveloperBalanceRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersBalanceCreditCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeveloperBalance}
     */
    apigeeOrganizationsDevelopersBalanceCredit(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1CreditDeveloperBalanceRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsDevelopersBalanceCredit");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeveloperBalance;
      return this.apiClient.callApi(
        '/v1/{name}:credit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Developer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a developer. Once created, the developer can register an app and obtain an API key. At creation time, a developer is set as `active`. To change the developer status, use the SetDeveloperStatus API.
     * @param {String} parent Required. Name of the Apigee organization in which the developer is created. Use the following structure in your request: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Developer} [googleCloudApigeeV1Developer] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Developer}
     */
    apigeeOrganizationsDevelopersCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Developer'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Developer;
      return this.apiClient.callApi(
        '/v1/{parent}/developers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListOfDevelopersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all developers in an organization by email address. By default, the response does not include company developers. Set the `includeCompany` query parameter to `true` to include company developers. **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of developers returned using the `startKey` and `count` query parameters.
     * @param {String} parent Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [app] Optional. List only Developers that are associated with the app. Note that start_key, count are not applicable for this filter criteria.
     * @param {String} [count] Optional. Number of developers to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.
     * @param {Boolean} [expand] Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters.
     * @param {String} [ids] Optional. List of IDs to include, separated by commas.
     * @param {Boolean} [includeCompany] Flag that specifies whether to include company details in the response.
     * @param {String} [startKey] **Note**: Must be used in conjunction with the `count` parameter. Email address of the developer from which to start displaying the list of developers. For example, if the an unfiltered list returns: ``` westley@example.com fezzik@example.com buttercup@example.com ``` and your `startKey` is `fezzik@example.com`, the list returned will be ``` fezzik@example.com buttercup@example.com ```
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListOfDevelopersResponse}
     */
    apigeeOrganizationsDevelopersList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'app': opts['app'],
        'count': opts['count'],
        'expand': opts['expand'],
        'ids': opts['ids'],
        'includeCompany': opts['includeCompany'],
        'startKey': opts['startKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListOfDevelopersResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/developers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersSubscriptionsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersSubscriptionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeveloperSubscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a subscription to an API product. 
     * @param {String} parent Required. Email address of the developer that is purchasing a subscription to the API product. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1DeveloperSubscription} [googleCloudApigeeV1DeveloperSubscription] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersSubscriptionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeveloperSubscription}
     */
    apigeeOrganizationsDevelopersSubscriptionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1DeveloperSubscription'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersSubscriptionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeveloperSubscription;
      return this.apiClient.callApi(
        '/v1/{parent}/subscriptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersSubscriptionsExpire operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersSubscriptionsExpireCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeveloperSubscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Expires an API product subscription immediately.
     * @param {String} name Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersSubscriptionsExpireCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeveloperSubscription}
     */
    apigeeOrganizationsDevelopersSubscriptionsExpire(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsDevelopersSubscriptionsExpire");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeveloperSubscription;
      return this.apiClient.callApi(
        '/v1/{name}:expire', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsDevelopersSubscriptionsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsDevelopersSubscriptionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all API product subscriptions for a developer.
     * @param {String} parent Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [count] Number of API product subscriptions to return in the API call. Use with `startKey` to provide more targeted filtering. Defaults to 100. The maximum limit is 1000.
     * @param {String} [startKey] Name of the API product subscription from which to start displaying the list of subscriptions. If omitted, the list starts from the first item. For example, to view the API product subscriptions from 51-150, set the value of `startKey` to the name of the 51st subscription and set the value of `count` to 100.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsDevelopersSubscriptionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse}
     */
    apigeeOrganizationsDevelopersSubscriptionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsDevelopersSubscriptionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'count': opts['count'],
        'startKey': opts['startKey']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/subscriptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEndpointAttachmentsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEndpointAttachmentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid.
     * @param {String} parent Required. Organization the endpoint attachment will be created in.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [endpointAttachmentId] ID to use for the endpoint attachment. ID must start with a lowercase letter followed by up to 31 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. The minimum length is 2.
     * @param {module:model/GoogleCloudApigeeV1EndpointAttachment} [googleCloudApigeeV1EndpointAttachment] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEndpointAttachmentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsEndpointAttachmentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1EndpointAttachment'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEndpointAttachmentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'endpointAttachmentId': opts['endpointAttachmentId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{parent}/endpointAttachments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEndpointAttachmentsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEndpointAttachmentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListEndpointAttachmentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the endpoint attachments in an organization.
     * @param {String} parent Required. Name of the organization for which to list endpoint attachments. Use the following structure in your request: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. Maximum number of endpoint attachments to return. If unspecified, at most 25 attachments will be returned.
     * @param {String} [pageToken] Optional. Page token, returned from a previous `ListEndpointAttachments` call, that you can use to retrieve the next page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEndpointAttachmentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListEndpointAttachmentsResponse}
     */
    apigeeOrganizationsEndpointAttachmentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEndpointAttachmentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListEndpointAttachmentsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/endpointAttachments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvgroupsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvgroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new environment group.
     * @param {String} parent Required. Name of the organization in which to create the environment group in the following format: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [name] Optional. ID of the environment group. Overrides any ID in the environment_group resource.
     * @param {module:model/GoogleCloudApigeeV1EnvironmentGroup} [googleCloudApigeeV1EnvironmentGroup] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvgroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsEnvgroupsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1EnvironmentGroup'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvgroupsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{parent}/envgroups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvgroupsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvgroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListEnvironmentGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all environment groups.
     * @param {String} parent Required. Name of the organization for which to list environment groups in the following format: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of environment groups to return. The page size defaults to 25.
     * @param {String} [pageToken] Page token, returned from a previous ListEnvironmentGroups call, that you can use to retrieve the next page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvgroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListEnvironmentGroupsResponse}
     */
    apigeeOrganizationsEnvgroupsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvgroupsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListEnvironmentGroupsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/envgroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsAddonsConfigSetAddonEnablement operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsAddonsConfigSetAddonEnablementCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an add-on enablement status of an environment.
     * @param {String} name Required. Name of the add-ons config. Must be in the format of `/organizations/{org}/environments/{env}/addonsConfig`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1SetAddonEnablementRequest} [googleCloudApigeeV1SetAddonEnablementRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsAddonsConfigSetAddonEnablementCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsEnvironmentsAddonsConfigSetAddonEnablement(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SetAddonEnablementRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsAddonsConfigSetAddonEnablement");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{name}:setAddonEnablement', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsAnalyticsExportsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsAnalyticsExportsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Export} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit a data export job to be processed in the background. If the request is successful, the API returns a 201 status, a URI that can be used to retrieve the status of the export job, and the `state` value of \"enqueued\".
     * @param {String} parent Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1ExportRequest} [googleCloudApigeeV1ExportRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsAnalyticsExportsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Export}
     */
    apigeeOrganizationsEnvironmentsAnalyticsExportsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ExportRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsAnalyticsExportsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Export;
      return this.apiClient.callApi(
        '/v1/{parent}/analytics/exports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsAnalyticsExportsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsAnalyticsExportsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListExportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the details and status of all analytics export jobs belonging to the parent organization and environment.
     * @param {String} parent Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsAnalyticsExportsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListExportsResponse}
     */
    apigeeOrganizationsEnvironmentsAnalyticsExportsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsAnalyticsExportsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListExportsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/analytics/exports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DebugSession} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a debug session for a deployed API Proxy revision.
     * @param {String} parent Required. The resource name of the API Proxy revision deployment for which to create the DebugSession. Must be of the form `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [timeout] Optional. The time in seconds after which this DebugSession should end. A timeout specified in DebugSession will overwrite this value.
     * @param {module:model/GoogleCloudApigeeV1DebugSession} [googleCloudApigeeV1DebugSession] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DebugSession}
     */
    apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1DebugSession'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DebugSession;
      return this.apiClient.callApi(
        '/v1/{parent}/debugsessions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsDeleteData operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsDeleteDataCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the data from a debug session. This does not cancel the debug session or prevent further data from being collected if the session is still active in runtime pods.
     * @param {String} name Required. The name of the debug session to delete. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsDeleteDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsDeleteData(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsDeleteData");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/{name}/data', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListDebugSessionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists debug sessions that are currently active in the given API Proxy revision.
     * @param {String} parent Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of debug sessions to return. The page size defaults to 25.
     * @param {String} [pageToken] Page token, returned from a previous ListDebugSessions call, that you can use to retrieve the next page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListDebugSessionsResponse}
     */
    apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsApisRevisionsDebugsessionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListDebugSessionsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/debugsessions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateDeployChangeReport operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateDeployChangeReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeploymentChangeReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a report for a dry run analysis of a DeployApiProxy request without committing the deployment. In addition to the standard validations performed when adding deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being created. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run DeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
     * @param {String} name Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [override] Flag that specifies whether to force the deployment of the new revision over the currently deployed revision by overriding conflict checks.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateDeployChangeReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeploymentChangeReport}
     */
    apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateDeployChangeReport(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateDeployChangeReport");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'override': opts['override']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeploymentChangeReport;
      return this.apiClient.callApi(
        '/v1/{name}/deployments:generateDeployChangeReport', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateUndeployChangeReport operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateUndeployChangeReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeploymentChangeReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a report for a dry run analysis of an UndeployApiProxy request without committing the undeploy. In addition to the standard validations performed when removing deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being removed. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run UndeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
     * @param {String} name Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateUndeployChangeReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeploymentChangeReport}
     */
    apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateUndeployChangeReport(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsApisRevisionsDeploymentsGenerateUndeployChangeReport");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeploymentChangeReport;
      return this.apiClient.callApi(
        '/v1/{name}/deployments:generateUndeployChangeReport', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsArchiveDeploymentsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new ArchiveDeployment.
     * @param {String} parent Required. The Environment this Archive Deployment will be created in.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1ArchiveDeployment} [googleCloudApigeeV1ArchiveDeployment] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsEnvironmentsArchiveDeploymentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ArchiveDeployment'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsArchiveDeploymentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{parent}/archiveDeployments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateDownloadUrl operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateDownloadUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1GenerateDownloadUrlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a signed URL for downloading the original zip file used to create an Archive Deployment. The URL is only valid for a limited period and should be used within minutes after generation. Each call returns a new upload URL.
     * @param {String} name Required. The name of the Archive Deployment you want to download.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateDownloadUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1GenerateDownloadUrlResponse}
     */
    apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateDownloadUrl(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateDownloadUrl");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1GenerateDownloadUrlResponse;
      return this.apiClient.callApi(
        '/v1/{name}:generateDownloadUrl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateUploadUrl operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateUploadUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1GenerateUploadUrlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a signed URL for uploading an Archive zip file to Google Cloud Storage. Once the upload is complete, the signed URL should be passed to CreateArchiveDeployment. When uploading to the generated signed URL, please follow these restrictions: * Source file type should be a zip file. * Source file size should not exceed 1GB limit. * No credentials should be attached - the signed URLs provide access to the target bucket using internal service identity; if credentials were attached, the identity from the credentials would be used, but that identity does not have permissions to upload files to the URL. When making a HTTP PUT request, these two headers need to be specified: * `content-type: application/zip` * `x-goog-content-length-range: 0,1073741824` And this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`
     * @param {String} parent Required. The organization and environment to upload to.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateUploadUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1GenerateUploadUrlResponse}
     */
    apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateUploadUrl(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsArchiveDeploymentsGenerateUploadUrl");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1GenerateUploadUrlResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/archiveDeployments:generateUploadUrl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsArchiveDeploymentsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListArchiveDeploymentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the ArchiveDeployments in the specified Environment.
     * @param {String} parent Required. Name of the Environment for which to list Archive Deployments in the format: `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. An optional query used to return a subset of Archive Deployments using the semantics defined in https://google.aip.dev/160.
     * @param {Number} [pageSize] Optional. Maximum number of Archive Deployments to return. If unspecified, at most 25 deployments will be returned.
     * @param {String} [pageToken] Optional. Page token, returned from a previous ListArchiveDeployments call, that you can use to retrieve the next page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsArchiveDeploymentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListArchiveDeploymentsResponse}
     */
    apigeeOrganizationsEnvironmentsArchiveDeploymentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsArchiveDeploymentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListArchiveDeploymentsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/archiveDeployments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsGetIamPolicy operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsGetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the IAM policy on an environment. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy` permission to call this API.
     * @param {String} resource REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [optionsRequestedPolicyVersion] Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsGetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    apigeeOrganizationsEnvironmentsGetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling apigeeOrganizationsEnvironmentsGetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'options.requestedPolicyVersion': opts['optionsRequestedPolicyVersion']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v1/{resource}:getIamPolicy', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsKeystoresAliasesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresAliasesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Alias} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an alias from a key/certificate pair. The structure of the request is controlled by the `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`, provide the file in the `file` field, and include the `password` field if the file is encrypted in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the request body.
     * @param {String} parent Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [password] DEPRECATED: For improved security, specify the password in the request body instead of using the query parameter. To specify the password in the request body, set `Content-type: multipart/form-data` part with name `password`. Password for the private key file, if required.
     * @param {String} [alias] Alias for the key/certificate pair. Values must match the regular expression `[\\w\\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the alias in either this parameter or the JSON body.
     * @param {String} [format] Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`
     * @param {Boolean} [ignoreExpiryValidation] Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.
     * @param {Boolean} [ignoreNewlineValidation] Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.
     * @param {module:model/GoogleApiHttpBody} [googleApiHttpBody] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresAliasesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Alias}
     */
    apigeeOrganizationsEnvironmentsKeystoresAliasesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleApiHttpBody'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsKeystoresAliasesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        '_password': opts['password'],
        'alias': opts['alias'],
        'format': opts['format'],
        'ignoreExpiryValidation': opts['ignoreExpiryValidation'],
        'ignoreNewlineValidation': opts['ignoreNewlineValidation']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Alias;
      return this.apiClient.callApi(
        '/v1/{parent}/aliases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsKeystoresAliasesCsr operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresAliasesCsrCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleApiHttpBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
     * @param {String} name Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresAliasesCsrCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleApiHttpBody}
     */
    apigeeOrganizationsEnvironmentsKeystoresAliasesCsr(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsKeystoresAliasesCsr");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleApiHttpBody;
      return this.apiClient.callApi(
        '/v1/{name}/csr', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsKeystoresAliasesGetCertificate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresAliasesGetCertificateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleApiHttpBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the certificate from an alias in PEM-encoded form.
     * @param {String} name Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresAliasesGetCertificateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleApiHttpBody}
     */
    apigeeOrganizationsEnvironmentsKeystoresAliasesGetCertificate(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsKeystoresAliasesGetCertificate");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleApiHttpBody;
      return this.apiClient.callApi(
        '/v1/{name}/certificate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsKeystoresCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Keystore} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.
     * @param {String} parent Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [name] Optional. Name of the keystore. Overrides the value in Keystore.
     * @param {module:model/GoogleCloudApigeeV1Keystore} [googleCloudApigeeV1Keystore] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsKeystoresCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Keystore}
     */
    apigeeOrganizationsEnvironmentsKeystoresCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Keystore'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsKeystoresCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Keystore;
      return this.apiClient.callApi(
        '/v1/{parent}/keystores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsQueriesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsQueriesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1AsyncQuery} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit a query to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded.
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Query} [googleCloudApigeeV1Query] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsQueriesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1AsyncQuery}
     */
    apigeeOrganizationsEnvironmentsQueriesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Query'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsQueriesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1AsyncQuery;
      return this.apiClient.callApi(
        '/v1/{parent}/queries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsQueriesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsQueriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListAsyncQueriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of Asynchronous Queries
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [dataset] Filter response list by dataset. Example: `api`, `mint`
     * @param {String} [from] Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
     * @param {String} [inclQueriesWithoutReport] Flag to include asynchronous queries that don't have a report denifition.
     * @param {String} [status] Filter response list by asynchronous query status.
     * @param {String} [submittedBy] Filter response list by user who submitted queries.
     * @param {String} [to] Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsQueriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListAsyncQueriesResponse}
     */
    apigeeOrganizationsEnvironmentsQueriesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsQueriesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'dataset': opts['dataset'],
        'from': opts['from'],
        'inclQueriesWithoutReport': opts['inclQueriesWithoutReport'],
        'status': opts['status'],
        'submittedBy': opts['submittedBy'],
        'to': opts['to']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListAsyncQueriesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/queries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsReferencesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsReferencesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Reference} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Reference in the specified environment.
     * @param {String} parent Required. The parent environment name under which the Reference will be created. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Reference} [googleCloudApigeeV1Reference] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsReferencesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Reference}
     */
    apigeeOrganizationsEnvironmentsReferencesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Reference'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsReferencesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Reference;
      return this.apiClient.callApi(
        '/v1/{parent}/references', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsResourcefilesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ResourceFile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
     * @param {String} parent Required. Name of the environment in which to create the resource file in the following format: `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [name] Required. Name of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
     * @param {String} [type] Required. Resource file type. {{ resource_file_type }}
     * @param {module:model/GoogleApiHttpBody} [googleApiHttpBody] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ResourceFile}
     */
    apigeeOrganizationsEnvironmentsResourcefilesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleApiHttpBody'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsResourcefilesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'name': opts['name'],
        'type': opts['type']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ResourceFile;
      return this.apiClient.callApi(
        '/v1/{parent}/resourcefiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsResourcefilesDelete operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ResourceFile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
     * @param {String} parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
     * @param {String} type Required. Resource file type. {{ resource_file_type }}
     * @param {String} name Required. ID of the resource file to delete. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ResourceFile}
     */
    apigeeOrganizationsEnvironmentsResourcefilesDelete(parent, type, name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsResourcefilesDelete");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling apigeeOrganizationsEnvironmentsResourcefilesDelete");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsResourcefilesDelete");
      }

      let pathParams = {
        'parent': parent,
        'type': type,
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ResourceFile;
      return this.apiClient.callApi(
        '/v1/{parent}/resourcefiles/{type}/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsResourcefilesGet operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleApiHttpBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the contents of a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
     * @param {String} parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
     * @param {String} type Required. Resource file type. {{ resource_file_type }}
     * @param {String} name Required. ID of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleApiHttpBody}
     */
    apigeeOrganizationsEnvironmentsResourcefilesGet(parent, type, name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsResourcefilesGet");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling apigeeOrganizationsEnvironmentsResourcefilesGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsResourcefilesGet");
      }

      let pathParams = {
        'parent': parent,
        'type': type,
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleApiHttpBody;
      return this.apiClient.callApi(
        '/v1/{parent}/resourcefiles/{type}/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsResourcefilesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListEnvironmentResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
     * @param {String} parent Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [type] Optional. Type of resource files to list. {{ resource_file_type }}
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListEnvironmentResourcesResponse}
     */
    apigeeOrganizationsEnvironmentsResourcefilesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsResourcefilesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'type': opts['type']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListEnvironmentResourcesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/resourcefiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsResourcefilesListEnvironmentResources operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesListEnvironmentResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListEnvironmentResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
     * @param {String} parent Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.
     * @param {String} type Optional. Type of resource files to list. {{ resource_file_type }}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesListEnvironmentResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListEnvironmentResourcesResponse}
     */
    apigeeOrganizationsEnvironmentsResourcefilesListEnvironmentResources(parent, type, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsResourcefilesListEnvironmentResources");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling apigeeOrganizationsEnvironmentsResourcefilesListEnvironmentResources");
      }

      let pathParams = {
        'parent': parent,
        'type': type
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListEnvironmentResourcesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/resourcefiles/{type}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsResourcefilesUpdate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ResourceFile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
     * @param {String} parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
     * @param {String} type Required. Resource file type. {{ resource_file_type }}
     * @param {String} name Required. ID of the resource file to update. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleApiHttpBody} [googleApiHttpBody] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsResourcefilesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ResourceFile}
     */
    apigeeOrganizationsEnvironmentsResourcefilesUpdate(parent, type, name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleApiHttpBody'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsResourcefilesUpdate");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling apigeeOrganizationsEnvironmentsResourcefilesUpdate");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsResourcefilesUpdate");
      }

      let pathParams = {
        'parent': parent,
        'type': type,
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ResourceFile;
      return this.apiClient.callApi(
        '/v1/{parent}/resourcefiles/{type}/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityActionsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SecurityAction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * CreateSecurityAction creates a SecurityAction.
     * @param {String} parent Required. The organization and environment that this SecurityAction applies to. Format: organizations/{org}/environments/{env}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [securityActionId] Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
     * @param {module:model/GoogleCloudApigeeV1SecurityAction} [googleCloudApigeeV1SecurityAction] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SecurityAction}
     */
    apigeeOrganizationsEnvironmentsSecurityActionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SecurityAction'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsSecurityActionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'securityActionId': opts['securityActionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SecurityAction;
      return this.apiClient.callApi(
        '/v1/{parent}/securityActions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityActionsDisable operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsDisableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SecurityAction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disable a SecurityAction. The `state` of the SecurityAction after disabling is `DISABLED`. `DisableSecurityAction` can be called on SecurityActions in the state `ENABLED`; SecurityActions in a different state (including `DISABLED`) return an error.
     * @param {String} name Required. The name of the SecurityAction to disable. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsDisableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SecurityAction}
     */
    apigeeOrganizationsEnvironmentsSecurityActionsDisable(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsSecurityActionsDisable");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SecurityAction;
      return this.apiClient.callApi(
        '/v1/{name}:disable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityActionsEnable operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsEnableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SecurityAction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable a SecurityAction. The `state` of the SecurityAction after enabling is `ENABLED`. `EnableSecurityAction` can be called on SecurityActions in the state `DISABLED`; SecurityActions in a different state (including `ENABLED) return an error.
     * @param {String} name Required. The name of the SecurityAction to enable. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsEnableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SecurityAction}
     */
    apigeeOrganizationsEnvironmentsSecurityActionsEnable(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsSecurityActionsEnable");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SecurityAction;
      return this.apiClient.callApi(
        '/v1/{name}:enable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityActionsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListSecurityActionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of SecurityActions. This returns both enabled and disabled actions.
     * @param {String} parent Required. The parent, which owns this collection of SecurityActions. Format: organizations/{org}/environments/{env}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The filter expression to filter List results. https://google.aip.dev/160. Allows for filtering over: state and api_proxies. E.g.: state = ACTIVE AND apiProxies:foo. Filtering by action is not supported https://github.com/aip-dev/google.aip.dev/issues/624
     * @param {Number} [pageSize] The maximum number of SecurityActions to return. If unspecified, at most 50 SecurityActions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous `ListSecurityActions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSecurityActions` must match the call that provided the page token.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityActionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListSecurityActionsResponse}
     */
    apigeeOrganizationsEnvironmentsSecurityActionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsSecurityActionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListSecurityActionsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/securityActions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityIncidentsBatchUpdate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityIncidentsBatchUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * BatchUpdateSecurityIncident updates multiple existing security incidents.
     * @param {String} parent Optional. The parent resource shared by all security incidents being updated. If this is set, the parent field in the UpdateSecurityIncidentRequest messages must either be empty or match this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest} [googleCloudApigeeV1BatchUpdateSecurityIncidentsRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityIncidentsBatchUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse}
     */
    apigeeOrganizationsEnvironmentsSecurityIncidentsBatchUpdate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1BatchUpdateSecurityIncidentsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsSecurityIncidentsBatchUpdate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/securityIncidents:batchUpdate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityIncidentsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityIncidentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListSecurityIncidentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ListSecurityIncidents lists all the security incident associated with the environment.
     * @param {String} parent Required. For a specific organization, list of all the security incidents. Format: `organizations/{org}/environments/{environment}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The filter expression to be used to get the list of security incidents, where filtering can be done on API Proxies. Example: filter = \"api_proxy = /\", \"first_detected_time >\", \"last_detected_time <\"
     * @param {Number} [pageSize] Optional. The maximum number of incidents to return. The service may return fewer than this value. If unspecified, at most 50 incidents will be returned.
     * @param {String} [pageToken] Optional. A page token, received from a previous `ListSecurityIncident` call. Provide this to retrieve the subsequent page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityIncidentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListSecurityIncidentsResponse}
     */
    apigeeOrganizationsEnvironmentsSecurityIncidentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsSecurityIncidentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListSecurityIncidentsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/securityIncidents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityReportsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityReportsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SecurityReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit a report request to be processed in the background. If the submission succeeds, the API returns a 200 status and an ID that refer to the report request. In addition to the HTTP status 200, the `state` of \"enqueued\" means that the request succeeded.
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1SecurityReportQuery} [googleCloudApigeeV1SecurityReportQuery] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityReportsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SecurityReport}
     */
    apigeeOrganizationsEnvironmentsSecurityReportsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SecurityReportQuery'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsSecurityReportsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SecurityReport;
      return this.apiClient.callApi(
        '/v1/{parent}/securityReports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityReportsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityReportsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListSecurityReportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of Security Reports
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [dataset] Filter response list by dataset. Example: `api`, `mint`
     * @param {String} [from] Filter response list by returning security reports that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
     * @param {Number} [pageSize] The maximum number of security report to return in the list response.
     * @param {String} [pageToken] Token returned from the previous list response to fetch the next page.
     * @param {String} [status] Filter response list by security reports status.
     * @param {String} [submittedBy] Filter response list by user who submitted queries.
     * @param {String} [to] Filter response list by returning security reports that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityReportsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListSecurityReportsResponse}
     */
    apigeeOrganizationsEnvironmentsSecurityReportsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsSecurityReportsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'dataset': opts['dataset'],
        'from': opts['from'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'status': opts['status'],
        'submittedBy': opts['submittedBy'],
        'to': opts['to']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListSecurityReportsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/securityReports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityStatsQueryTabularStats operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityStatsQueryTabularStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1QueryTabularStatsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve security statistics as tabular rows.
     * @param {String} orgenv Required. Should be of the form organizations//environments/.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1QueryTabularStatsRequest} [googleCloudApigeeV1QueryTabularStatsRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityStatsQueryTabularStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1QueryTabularStatsResponse}
     */
    apigeeOrganizationsEnvironmentsSecurityStatsQueryTabularStats(orgenv, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1QueryTabularStatsRequest'];
      // verify the required parameter 'orgenv' is set
      if (orgenv === undefined || orgenv === null) {
        throw new Error("Missing the required parameter 'orgenv' when calling apigeeOrganizationsEnvironmentsSecurityStatsQueryTabularStats");
      }

      let pathParams = {
        'orgenv': orgenv
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1QueryTabularStatsResponse;
      return this.apiClient.callApi(
        '/v1/{orgenv}/securityStats:queryTabularStats', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSecurityStatsQueryTimeSeriesStats operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityStatsQueryTimeSeriesStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1QueryTimeSeriesStatsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve security statistics as a collection of time series.
     * @param {String} orgenv Required. Should be of the form organizations//environments/.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1QueryTimeSeriesStatsRequest} [googleCloudApigeeV1QueryTimeSeriesStatsRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSecurityStatsQueryTimeSeriesStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1QueryTimeSeriesStatsResponse}
     */
    apigeeOrganizationsEnvironmentsSecurityStatsQueryTimeSeriesStats(orgenv, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1QueryTimeSeriesStatsRequest'];
      // verify the required parameter 'orgenv' is set
      if (orgenv === undefined || orgenv === null) {
        throw new Error("Missing the required parameter 'orgenv' when calling apigeeOrganizationsEnvironmentsSecurityStatsQueryTimeSeriesStats");
      }

      let pathParams = {
        'orgenv': orgenv
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1QueryTimeSeriesStatsResponse;
      return this.apiClient.callApi(
        '/v1/{orgenv}/securityStats:queryTimeSeriesStats', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSetIamPolicy operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.setIamPolicy` permission to call this API.
     * @param {String} resource REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleIamV1SetIamPolicyRequest} [googleIamV1SetIamPolicyRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    apigeeOrganizationsEnvironmentsSetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1SetIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling apigeeOrganizationsEnvironmentsSetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v1/{resource}:setIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSharedflowsRevisionsDeploy operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSharedflowsRevisionsDeployCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deploys a revision of a shared flow. If another revision of the same shared flow is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot use a shared flow until it has been deployed to an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
     * @param {String} name Required. Name of the shared flow revision to deploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [override] Flag that specifies whether the new deployment replaces other deployed revisions of the shared flow in the environment. Set `override` to `true` to replace other deployed revisions. By default, `override` is `false` and the deployment is rejected if other revisions of the shared flow are deployed in the environment.
     * @param {String} [serviceAccount] Google Cloud IAM service account. The service account represents the identity of the deployed proxy, and determines what permissions it has. The format must be `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSharedflowsRevisionsDeployCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Deployment}
     */
    apigeeOrganizationsEnvironmentsSharedflowsRevisionsDeploy(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsSharedflowsRevisionsDeploy");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'override': opts['override'],
        'serviceAccount': opts['serviceAccount']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Deployment;
      return this.apiClient.callApi(
        '/v1/{name}/deployments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSharedflowsRevisionsGetDeployments operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSharedflowsRevisionsGetDeploymentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Deployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the deployment of a shared flow revision and actual state reported by runtime pods.
     * @param {String} name Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSharedflowsRevisionsGetDeploymentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Deployment}
     */
    apigeeOrganizationsEnvironmentsSharedflowsRevisionsGetDeployments(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsSharedflowsRevisionsGetDeployments");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Deployment;
      return this.apiClient.callApi(
        '/v1/{name}/deployments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSharedflowsRevisionsUndeploy operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSharedflowsRevisionsUndeployCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Undeploys a shared flow revision from an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
     * @param {String} name Required. Name of the shared flow revision to undeploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [sequencedRollout] Flag that specifies whether to enable sequenced rollout. If set to `true`, the environment group routing rules corresponding to this deployment will be removed before removing the deployment from the runtime. This is likely to be a rare use case; it is only needed when the intended effect of undeploying this proxy is to cause the traffic it currently handles to be rerouted to some other existing proxy in the environment group. The GenerateUndeployChangeReport API may be used to examine routing changes before issuing the undeployment request, and its response will indicate if a sequenced rollout is recommended for the undeployment.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSharedflowsRevisionsUndeployCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    apigeeOrganizationsEnvironmentsSharedflowsRevisionsUndeploy(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsEnvironmentsSharedflowsRevisionsUndeploy");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'sequencedRollout': opts['sequencedRollout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/{name}/deployments', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsSubscribe operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSubscribeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1Subscription} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name for this subscription. The \"name\" and \"push_config\" must *not* be specified.
     * @param {String} parent Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsSubscribeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1Subscription}
     */
    apigeeOrganizationsEnvironmentsSubscribe(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsSubscribe");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1Subscription;
      return this.apiClient.callApi(
        '/v1/{parent}:subscribe', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsTargetserversCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTargetserversCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1TargetServer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TargetServer in the specified environment.
     * @param {String} parent Required. The parent environment name under which the TargetServer will be created. Must be of the form `organizations/{org}/environments/{env}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [name] Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer.
     * @param {module:model/GoogleCloudApigeeV1TargetServer} [googleCloudApigeeV1TargetServer] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTargetserversCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1TargetServer}
     */
    apigeeOrganizationsEnvironmentsTargetserversCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1TargetServer'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsTargetserversCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1TargetServer;
      return this.apiClient.callApi(
        '/v1/{parent}/targetservers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsTestIamPermissions operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTestIamPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1TestIamPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Tests the permissions of a user on an environment, and returns a subset of permissions that the user has on the environment. If the environment does not exist, an empty permission set is returned (a NOT_FOUND error is not returned).
     * @param {String} resource REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleIamV1TestIamPermissionsRequest} [googleIamV1TestIamPermissionsRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTestIamPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1TestIamPermissionsResponse}
     */
    apigeeOrganizationsEnvironmentsTestIamPermissions(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1TestIamPermissionsRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling apigeeOrganizationsEnvironmentsTestIamPermissions");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1TestIamPermissionsResponse;
      return this.apiClient.callApi(
        '/v1/{resource}:testIamPermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsTraceConfigOverridesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTraceConfigOverridesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1TraceConfigOverride} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a trace configuration override. The response contains a system-generated UUID, that can be used to view, update, or delete the configuration override. Use the List API to view the existing trace configuration overrides.
     * @param {String} parent Required. Parent resource of the trace configuration override. Use the following structure in your request. \"organizations/_*_/environments/_*_/traceConfig\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1TraceConfigOverride} [googleCloudApigeeV1TraceConfigOverride] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTraceConfigOverridesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1TraceConfigOverride}
     */
    apigeeOrganizationsEnvironmentsTraceConfigOverridesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1TraceConfigOverride'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsTraceConfigOverridesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1TraceConfigOverride;
      return this.apiClient.callApi(
        '/v1/{parent}/overrides', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsTraceConfigOverridesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTraceConfigOverridesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListTraceConfigOverridesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the distributed trace configuration overrides in an environment.
     * @param {String} parent Required. Parent resource of the trace configuration override. Use the following structure in your request: \"organizations/_*_/environments/_*_/traceConfig\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of trace configuration overrides to return. If not specified, the maximum number returned is 25. The maximum number cannot exceed 100.
     * @param {String} [pageToken] A page token, returned from a previous `ListTraceConfigOverrides` call. Token value that can be used to retrieve the subsequent page. When paginating, all other parameters provided to `ListTraceConfigOverrides` must match those specified in the call to obtain the page token.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsTraceConfigOverridesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListTraceConfigOverridesResponse}
     */
    apigeeOrganizationsEnvironmentsTraceConfigOverridesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsTraceConfigOverridesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListTraceConfigOverridesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/overrides', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsEnvironmentsUnsubscribe operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsUnsubscribeCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a subscription for the environment's Pub/Sub topic.
     * @param {String} parent Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Subscription} [googleCloudApigeeV1Subscription] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsEnvironmentsUnsubscribeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    apigeeOrganizationsEnvironmentsUnsubscribe(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Subscription'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsEnvironmentsUnsubscribe");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/{parent}:unsubscribe', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsGetProjectMapping operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsGetProjectMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1OrganizationProjectMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the project ID and region for an Apigee organization.
     * @param {String} name Required. Apigee organization name in the following format: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsGetProjectMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1OrganizationProjectMapping}
     */
    apigeeOrganizationsGetProjectMapping(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsGetProjectMapping");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1OrganizationProjectMapping;
      return this.apiClient.callApi(
        '/v1/{name}:getProjectMapping', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsGetSyncAuthorization operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsGetSyncAuthorizationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SyncAuthorization} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the service accounts with the permissions required to allow the Synchronizer to download environment data from the control plane. An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.
     * @param {String} name Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsGetSyncAuthorizationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SyncAuthorization}
     */
    apigeeOrganizationsGetSyncAuthorization(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsGetSyncAuthorization");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SyncAuthorization;
      return this.apiClient.callApi(
        '/v1/{name}:getSyncAuthorization', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsHostQueriesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsHostQueriesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1AsyncQuery} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded.
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Query} [googleCloudApigeeV1Query] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsHostQueriesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1AsyncQuery}
     */
    apigeeOrganizationsHostQueriesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Query'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsHostQueriesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1AsyncQuery;
      return this.apiClient.callApi(
        '/v1/{parent}/hostQueries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsHostQueriesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsHostQueriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListAsyncQueriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of Asynchronous Queries at host level.
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [dataset] Filter response list by dataset. Example: `api`, `mint`
     * @param {String} [envgroupHostname] Required. Filter response list by hostname.
     * @param {String} [from] Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
     * @param {String} [inclQueriesWithoutReport] Flag to include asynchronous queries that don't have a report denifition.
     * @param {String} [status] Filter response list by asynchronous query status.
     * @param {String} [submittedBy] Filter response list by user who submitted queries.
     * @param {String} [to] Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsHostQueriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListAsyncQueriesResponse}
     */
    apigeeOrganizationsHostQueriesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsHostQueriesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'dataset': opts['dataset'],
        'envgroupHostname': opts['envgroupHostname'],
        'from': opts['from'],
        'inclQueriesWithoutReport': opts['inclQueriesWithoutReport'],
        'status': opts['status'],
        'submittedBy': opts['submittedBy'],
        'to': opts['to']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListAsyncQueriesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/hostQueries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsHostSecurityReportsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsHostSecurityReportsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SecurityReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded.
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1SecurityReportQuery} [googleCloudApigeeV1SecurityReportQuery] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsHostSecurityReportsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SecurityReport}
     */
    apigeeOrganizationsHostSecurityReportsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SecurityReportQuery'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsHostSecurityReportsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SecurityReport;
      return this.apiClient.callApi(
        '/v1/{parent}/hostSecurityReports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsHostSecurityReportsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsHostSecurityReportsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListSecurityReportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of Security Reports at host level.
     * @param {String} parent Required. The parent resource name. Must be of the form `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [dataset] Filter response list by dataset. Example: `api`, `mint`
     * @param {String} [envgroupHostname] Required. Filter response list by hostname.
     * @param {String} [from] Filter response list by returning security reports that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
     * @param {Number} [pageSize] The maximum number of security report to return in the list response.
     * @param {String} [pageToken] Token returned from the previous list response to fetch the next page.
     * @param {String} [status] Filter response list by security report status.
     * @param {String} [submittedBy] Filter response list by user who submitted queries.
     * @param {String} [to] Filter response list by returning security reports that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsHostSecurityReportsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListSecurityReportsResponse}
     */
    apigeeOrganizationsHostSecurityReportsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsHostSecurityReportsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'dataset': opts['dataset'],
        'envgroupHostname': opts['envgroupHostname'],
        'from': opts['from'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'status': opts['status'],
        'submittedBy': opts['submittedBy'],
        'to': opts['to']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListSecurityReportsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/hostSecurityReports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesAttachmentsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesAttachmentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee hybrid.
     * @param {String} parent Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1InstanceAttachment} [googleCloudApigeeV1InstanceAttachment] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesAttachmentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsInstancesAttachmentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1InstanceAttachment'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsInstancesAttachmentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{parent}/attachments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesAttachmentsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesAttachmentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListInstanceAttachmentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid.
     * @param {String} parent Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of instance attachments to return. Defaults to 25.
     * @param {String} [pageToken] Page token, returned by a previous ListInstanceAttachments call, that you can use to retrieve the next page of content.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesAttachmentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListInstanceAttachmentsResponse}
     */
    apigeeOrganizationsInstancesAttachmentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsInstancesAttachmentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListInstanceAttachmentsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/attachments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesCanaryevaluationsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesCanaryevaluationsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new canary evaluation for an organization.
     * @param {String} parent Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1CanaryEvaluation} [googleCloudApigeeV1CanaryEvaluation] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesCanaryevaluationsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsInstancesCanaryevaluationsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1CanaryEvaluation'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsInstancesCanaryevaluationsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{parent}/canaryevaluations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Apigee runtime instance. The instance is accessible from the authorized network configured on the organization. **Note:** Not supported for Apigee hybrid.
     * @param {String} parent Required. Name of the organization. Use the following structure in your request: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1Instance} [googleCloudApigeeV1Instance] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsInstancesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1Instance'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsInstancesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{parent}/instances', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListInstancesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee hybrid.
     * @param {String} parent Required. Name of the organization. Use the following structure in your request: `organizations/{org}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of instances to return. Defaults to 25.
     * @param {String} [pageToken] Page token, returned from a previous ListInstances call, that you can use to retrieve the next page of content.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListInstancesResponse}
     */
    apigeeOrganizationsInstancesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsInstancesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListInstancesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesNatAddressesActivate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesNatAddressesActivateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activates the NAT address. The Apigee instance can now use this for Internet egress traffic. **Note:** Not supported for Apigee hybrid.
     * @param {String} name Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesNatAddressesActivateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsInstancesNatAddressesActivate(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsInstancesNatAddressesActivate");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{name}:activate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesNatAddressesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesNatAddressesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a NAT address. The address is created in the RESERVED state and a static external IP address will be provisioned. At this time, the instance will not use this IP address for Internet egress traffic. The address can be activated for use once any required firewall IP whitelisting has been completed. **Note:** Not supported for Apigee hybrid.
     * @param {String} parent Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1NatAddress} [googleCloudApigeeV1NatAddress] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesNatAddressesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsInstancesNatAddressesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1NatAddress'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsInstancesNatAddressesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{parent}/natAddresses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesNatAddressesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesNatAddressesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListNatAddressesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the NAT addresses for an Apigee instance. **Note:** Not supported for Apigee hybrid.
     * @param {String} parent Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Maximum number of natAddresses to return. Defaults to 25.
     * @param {String} [pageToken] Page token, returned from a previous ListNatAddresses call, that you can use to retrieve the next page of content.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesNatAddressesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListNatAddressesResponse}
     */
    apigeeOrganizationsInstancesNatAddressesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsInstancesNatAddressesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListNatAddressesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/natAddresses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsInstancesReportStatus operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsInstancesReportStatusCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reports the latest status for a runtime instance.
     * @param {String} instance The name of the instance reporting this status. For SaaS the request will be rejected if no instance exists under this name. Format is organizations/{org}/instances/{instance}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1ReportInstanceStatusRequest} [googleCloudApigeeV1ReportInstanceStatusRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsInstancesReportStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    apigeeOrganizationsInstancesReportStatus(instance, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ReportInstanceStatusRequest'];
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling apigeeOrganizationsInstancesReportStatus");
      }

      let pathParams = {
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/{instance}:reportStatus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsKeyvaluemapsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsKeyvaluemapsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1KeyValueMap} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a key value map in an organization.
     * @param {String} parent Required. Name of the organization in which to create the key value map file. Use the following structure in your request: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1KeyValueMap} [googleCloudApigeeV1KeyValueMap] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsKeyvaluemapsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1KeyValueMap}
     */
    apigeeOrganizationsKeyvaluemapsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1KeyValueMap'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsKeyvaluemapsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1KeyValueMap;
      return this.apiClient.callApi(
        '/v1/{parent}/keyvaluemaps', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsKeyvaluemapsEntriesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsKeyvaluemapsEntriesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1KeyValueEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates key value entries in a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
     * @param {String} parent Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1KeyValueEntry} [googleCloudApigeeV1KeyValueEntry] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsKeyvaluemapsEntriesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1KeyValueEntry}
     */
    apigeeOrganizationsKeyvaluemapsEntriesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1KeyValueEntry'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsKeyvaluemapsEntriesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1KeyValueEntry;
      return this.apiClient.callApi(
        '/v1/{parent}/entries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsKeyvaluemapsEntriesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsKeyvaluemapsEntriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListKeyValueEntriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists key value entries for key values maps scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
     * @param {String} parent Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will be returned.
     * @param {String} [pageToken] Optional. Page token. If provides, must be a valid key value entry returned from a previous call that can be used to retrieve the next page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsKeyvaluemapsEntriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListKeyValueEntriesResponse}
     */
    apigeeOrganizationsKeyvaluemapsEntriesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsKeyvaluemapsEntriesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListKeyValueEntriesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/entries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListOrganizationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the Apigee organizations and associated Google Cloud projects that you have permission to access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
     * @param {String} parent Required. Use the following structure in your request: `organizations`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListOrganizationsResponse}
     */
    apigeeOrganizationsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListOrganizationsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsOperationsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningListOperationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
     * @param {String} name The name of the operation's parent resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningListOperationsResponse}
     */
    apigeeOrganizationsOperationsList(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsOperationsList");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningListOperationsResponse;
      return this.apiClient.callApi(
        '/v1/{name}/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsReportsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsReportsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1CustomReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create custom dashboards in addition to the standard dashboards which are provided. The Custom Report in its simplest form contains specifications about metrics, dimensions and filters. It is important to note that the custom report by itself does not provide an executable entity. The Edge UI converts the custom report definition into an analytics query and displays the result in a chart.
     * @param {String} parent Required. The parent organization name under which the Custom Report will be created. Must be of the form: `organizations/{organization_id}/reports`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1CustomReport} [googleCloudApigeeV1CustomReport] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsReportsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1CustomReport}
     */
    apigeeOrganizationsReportsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1CustomReport'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsReportsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1CustomReport;
      return this.apiClient.callApi(
        '/v1/{parent}/reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsReportsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsReportsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListCustomReportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of Custom Reports
     * @param {String} parent Required. The parent organization name under which the API product will be listed `organizations/{organization_id}/reports`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [expand] Set to 'true' to get expanded details about each custom report.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsReportsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListCustomReportsResponse}
     */
    apigeeOrganizationsReportsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsReportsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListCustomReportsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSecurityProfilesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SecurityProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * CreateSecurityProfile create a new custom security profile.
     * @param {String} parent Required. Name of organization. Format: organizations/{org}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [securityProfileId] Required. The ID to use for the SecurityProfile, which will become the final component of the action's resource name. This value should be 1-63 characters and validated by \"(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)\".
     * @param {module:model/GoogleCloudApigeeV1SecurityProfile} [googleCloudApigeeV1SecurityProfile] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SecurityProfile}
     */
    apigeeOrganizationsSecurityProfilesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SecurityProfile'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSecurityProfilesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'securityProfileId': opts['securityProfileId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SecurityProfile;
      return this.apiClient.callApi(
        '/v1/{parent}/securityProfiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSecurityProfilesEnvironmentsComputeEnvironmentScores operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesEnvironmentsComputeEnvironmentScoresCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ComputeEnvironmentScoresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ComputeEnvironmentScores calculates scores for requested time range for the specified security profile and environment.
     * @param {String} profileEnvironment Required. Name of organization and environment and profile id for which score needs to be computed. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1ComputeEnvironmentScoresRequest} [googleCloudApigeeV1ComputeEnvironmentScoresRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesEnvironmentsComputeEnvironmentScoresCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ComputeEnvironmentScoresResponse}
     */
    apigeeOrganizationsSecurityProfilesEnvironmentsComputeEnvironmentScores(profileEnvironment, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ComputeEnvironmentScoresRequest'];
      // verify the required parameter 'profileEnvironment' is set
      if (profileEnvironment === undefined || profileEnvironment === null) {
        throw new Error("Missing the required parameter 'profileEnvironment' when calling apigeeOrganizationsSecurityProfilesEnvironmentsComputeEnvironmentScores");
      }

      let pathParams = {
        'profileEnvironment': profileEnvironment
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ComputeEnvironmentScoresResponse;
      return this.apiClient.callApi(
        '/v1/{profileEnvironment}:computeEnvironmentScores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSecurityProfilesEnvironmentsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesEnvironmentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * CreateSecurityProfileEnvironmentAssociation creates profile environment association i.e. attaches environment to security profile.
     * @param {String} parent Required. Name of organization and security profile ID. Format: organizations/{org}/securityProfiles/{profile}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [name] Optional. Name of the environment.
     * @param {module:model/GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation} [googleCloudApigeeV1SecurityProfileEnvironmentAssociation] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesEnvironmentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation}
     */
    apigeeOrganizationsSecurityProfilesEnvironmentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SecurityProfileEnvironmentAssociation'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSecurityProfilesEnvironmentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation;
      return this.apiClient.callApi(
        '/v1/{parent}/environments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSecurityProfilesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListSecurityProfilesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ListSecurityProfiles lists all the security profiles associated with the org including attached and unattached profiles.
     * @param {String} parent Required. For a specific organization, list of all the security profiles. Format: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of profiles to return. The service may return fewer than this value. If unspecified, at most 50 profiles will be returned.
     * @param {String} [pageToken] A page token, received from a previous `ListSecurityProfiles` call. Provide this to retrieve the subsequent page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListSecurityProfilesResponse}
     */
    apigeeOrganizationsSecurityProfilesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSecurityProfilesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListSecurityProfilesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/securityProfiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSecurityProfilesListRevisions operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesListRevisionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ListSecurityProfileRevisions lists all the revisions of the security profile.
     * @param {String} name Required. For a specific profile, list all the revisions. Format: `organizations/{org}/securityProfiles/{profile}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of profile revisions to return. The service may return fewer than this value. If unspecified, at most 50 revisions will be returned.
     * @param {String} [pageToken] A page token, received from a previous `ListSecurityProfileRevisions` call. Provide this to retrieve the subsequent page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSecurityProfilesListRevisionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse}
     */
    apigeeOrganizationsSecurityProfilesListRevisions(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsSecurityProfilesListRevisions");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse;
      return this.apiClient.callApi(
        '/v1/{name}:listRevisions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSetAddons operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSetAddonsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Configures the add-ons for the Apigee organization. The existing add-on configuration will be fully replaced.
     * @param {String} org Required. Name of the organization. Use the following structure in your request: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1SetAddonsRequest} [googleCloudApigeeV1SetAddonsRequest] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSetAddonsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    apigeeOrganizationsSetAddons(org, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SetAddonsRequest'];
      // verify the required parameter 'org' is set
      if (org === undefined || org === null) {
        throw new Error("Missing the required parameter 'org' when calling apigeeOrganizationsSetAddons");
      }

      let pathParams = {
        'org': org
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1/{org}:setAddons', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSetSyncAuthorization operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSetSyncAuthorizationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SyncAuthorization} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the permissions required to allow the Synchronizer to download environment data from the control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.
     * @param {String} name Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1SyncAuthorization} [googleCloudApigeeV1SyncAuthorization] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSetSyncAuthorizationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SyncAuthorization}
     */
    apigeeOrganizationsSetSyncAuthorization(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1SyncAuthorization'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsSetSyncAuthorization");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SyncAuthorization;
      return this.apiClient.callApi(
        '/v1/{name}:setSyncAuthorization', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSharedflowsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSharedflowsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SharedFlowRevision} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB.
     * @param {String} parent Required. The name of the parent organization under which to create the shared flow. Must be of the form: `organizations/{organization_id}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [action] Required. Must be set to either `import` or `validate`.
     * @param {String} [name] Required. The name to give the shared flow
     * @param {module:model/GoogleApiHttpBody} [googleApiHttpBody] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSharedflowsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SharedFlowRevision}
     */
    apigeeOrganizationsSharedflowsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleApiHttpBody'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSharedflowsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'action': opts['action'],
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SharedFlowRevision;
      return this.apiClient.callApi(
        '/v1/{parent}/sharedflows', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSharedflowsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSharedflowsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListSharedFlowsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all shared flows in the organization.
     * @param {String} parent Required. The name of the parent organization under which to get shared flows. Must be of the form: `organizations/{organization_id}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [includeMetaData] Indicates whether to include shared flow metadata in the response.
     * @param {Boolean} [includeRevisions] Indicates whether to include a list of revisions in the response.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSharedflowsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListSharedFlowsResponse}
     */
    apigeeOrganizationsSharedflowsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSharedflowsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'includeMetaData': opts['includeMetaData'],
        'includeRevisions': opts['includeRevisions']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListSharedFlowsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/sharedflows', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSharedflowsRevisionsDeploymentsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSharedflowsRevisionsDeploymentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListDeploymentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all deployments of a shared flow revision.
     * @param {String} parent Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [sharedFlows] Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSharedflowsRevisionsDeploymentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListDeploymentsResponse}
     */
    apigeeOrganizationsSharedflowsRevisionsDeploymentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSharedflowsRevisionsDeploymentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'sharedFlows': opts['sharedFlows']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListDeploymentsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/deployments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSharedflowsRevisionsUpdateSharedFlowRevision operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSharedflowsRevisionsUpdateSharedFlowRevisionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1SharedFlowRevision} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a shared flow revision. This operation is only allowed on revisions which have never been deployed. After deployment a revision becomes immutable, even if it becomes undeployed. The payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or application/octet-stream.
     * @param {String} name Required. The name of the shared flow revision to update. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [validate] Ignored. All uploads are validated regardless of the value of this field. It is kept for compatibility with existing APIs. Must be `true` or `false` if provided.
     * @param {module:model/GoogleApiHttpBody} [googleApiHttpBody] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSharedflowsRevisionsUpdateSharedFlowRevisionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1SharedFlowRevision}
     */
    apigeeOrganizationsSharedflowsRevisionsUpdateSharedFlowRevision(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleApiHttpBody'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsSharedflowsRevisionsUpdateSharedFlowRevision");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'validate': opts['validate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1SharedFlowRevision;
      return this.apiClient.callApi(
        '/v1/{name}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApicategoriesCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApicategoriesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ApiCategoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new API category.
     * @param {String} parent Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1ApiCategory} [googleCloudApigeeV1ApiCategory] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApicategoriesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ApiCategoryResponse}
     */
    apigeeOrganizationsSitesApicategoriesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ApiCategory'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSitesApicategoriesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ApiCategoryResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apicategories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApicategoriesList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApicategoriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListApiCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the API categories associated with a portal.
     * @param {String} parent Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApicategoriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListApiCategoriesResponse}
     */
    apigeeOrganizationsSitesApicategoriesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSitesApicategoriesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListApiCategoriesResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apicategories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApidocsCreate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ApiDocResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new catalog item.
     * @param {String} parent Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudApigeeV1ApiDoc} [googleCloudApigeeV1ApiDoc] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ApiDocResponse}
     */
    apigeeOrganizationsSitesApidocsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ApiDoc'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSitesApidocsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ApiDocResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apidocs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApidocsDelete operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1DeleteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a catalog item.
     * @param {String} name Required. Name of the catalog item. Use the following structure in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [retention] Optional. This setting is applicable only for organizations that are soft-deleted (i.e., BillingType is not EVALUATION). It controls how long Organization data will be retained after the initial delete operation completes. During this period, the Organization may be restored to its last known state. After this period, the Organization will no longer be able to be restored. **Note: During the data retention period specified using this field, the Apigee organization cannot be recreated in the same GCP project.**
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1DeleteResponse}
     */
    apigeeOrganizationsSitesApidocsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsSitesApidocsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'retention': opts['retention']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1DeleteResponse;
      return this.apiClient.callApi(
        '/v1/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApidocsGetDocumentation operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsGetDocumentationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ApiDocDocumentationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the documentation for the specified catalog item.
     * @param {String} name Required. Resource name of the catalog item documentation. Use the following structure in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [format] Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata is returned.
     * @param {String} [envgroupHostname] Required. Hostname for which the interactive query will be executed.
     * @param {String} [filter] Filter that enables you to drill-down on specific dimension values.
     * @param {String} [limit] Maximum number of result items to return. The default and maximum value that can be returned is 14400.
     * @param {String} [offset] Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`.
     * @param {Boolean} [realtime] No longer used by Apigee. Supported for backwards compatibility.
     * @param {String} [select] Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`
     * @param {String} [sort] Flag that specifies whether the sort order should be ascending or descending. Valid values include `DESC` and `ASC`.
     * @param {String} [sortby] Comma-separated list of columns used to sort the final result.
     * @param {String} [timeRange] Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`.
     * @param {String} [timeUnit] Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`.
     * @param {String} [topk] Top number of results to return. For example, to return the top 5 results, set `topk=5`.
     * @param {Boolean} [tsAscending] Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`.
     * @param {String} [tzo] Timezone offset value.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsGetDocumentationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ApiDocDocumentationResponse}
     */
    apigeeOrganizationsSitesApidocsGetDocumentation(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsSitesApidocsGetDocumentation");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'format': opts['format'],
        'envgroupHostname': opts['envgroupHostname'],
        'filter': opts['filter'],
        'limit': opts['limit'],
        'offset': opts['offset'],
        'realtime': opts['realtime'],
        'select': opts['select'],
        'sort': opts['sort'],
        'sortby': opts['sortby'],
        'timeRange': opts['timeRange'],
        'timeUnit': opts['timeUnit'],
        'topk': opts['topk'],
        'tsAscending': opts['tsAscending'],
        'tzo': opts['tzo']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ApiDocDocumentationResponse;
      return this.apiClient.callApi(
        '/v1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApidocsList operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ListApiDocsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the catalog items associated with a portal.
     * @param {String} parent Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return. The service may return fewer than this value. If unspecified, at most 25 books will be returned. The maximum value is 100; values above 100 will be coerced to 100.
     * @param {String} [pageToken] Optional. A page token, received from a previous `ListApiDocs` call. Provide this to retrieve the subsequent page.
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ListApiDocsResponse}
     */
    apigeeOrganizationsSitesApidocsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeOrganizationsSitesApidocsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ListApiDocsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apidocs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApidocsUpdate operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ApiDocResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a catalog item.
     * @param {String} name Required. Name of the catalog item. Use the following structure in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [ignoreExpiryValidation] Required. Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.
     * @param {Boolean} [ignoreNewlineValidation] Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.
     * @param {module:model/GoogleCloudApigeeV1ApiDoc} [googleCloudApigeeV1ApiDoc] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ApiDocResponse}
     */
    apigeeOrganizationsSitesApidocsUpdate(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ApiDoc'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsSitesApidocsUpdate");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'ignoreExpiryValidation': opts['ignoreExpiryValidation'],
        'ignoreNewlineValidation': opts['ignoreNewlineValidation']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ApiDocResponse;
      return this.apiClient.callApi(
        '/v1/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeOrganizationsSitesApidocsUpdateDocumentation operation.
     * @callback module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsUpdateDocumentationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudApigeeV1ApiDocDocumentationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the documentation for the specified catalog item. Note that the documentation file contents will not be populated in the return message.
     * @param {String} name Required. Resource name of the catalog item documentation. Use the following structure in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [updateMask] Required. The list of fields to update.
     * @param {module:model/GoogleCloudApigeeV1ApiDocDocumentation} [googleCloudApigeeV1ApiDocDocumentation] 
     * @param {module:api/OrganizationsApi~apigeeOrganizationsSitesApidocsUpdateDocumentationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudApigeeV1ApiDocDocumentationResponse}
     */
    apigeeOrganizationsSitesApidocsUpdateDocumentation(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudApigeeV1ApiDocDocumentation'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeOrganizationsSitesApidocsUpdateDocumentation");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudApigeeV1ApiDocDocumentationResponse;
      return this.apiClient.callApi(
        '/v1/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
