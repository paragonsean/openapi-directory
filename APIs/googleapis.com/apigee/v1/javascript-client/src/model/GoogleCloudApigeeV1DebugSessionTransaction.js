/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudApigeeV1Point from './GoogleCloudApigeeV1Point';

/**
 * The GoogleCloudApigeeV1DebugSessionTransaction model module.
 * @module model/GoogleCloudApigeeV1DebugSessionTransaction
 * @version v1
 */
class GoogleCloudApigeeV1DebugSessionTransaction {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1DebugSessionTransaction</code>.
     * A transaction contains all of the debug information of the entire message flow of an API call processed by the runtime plane. The information is collected and recorded at critical points of the message flow in the runtime apiproxy.
     * @alias module:model/GoogleCloudApigeeV1DebugSessionTransaction
     */
    constructor() { 
        
        GoogleCloudApigeeV1DebugSessionTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1DebugSessionTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1DebugSessionTransaction} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1DebugSessionTransaction} The populated <code>GoogleCloudApigeeV1DebugSessionTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1DebugSessionTransaction();

            if (data.hasOwnProperty('completed')) {
                obj['completed'] = ApiClient.convertToType(data['completed'], 'Boolean');
            }
            if (data.hasOwnProperty('point')) {
                obj['point'] = ApiClient.convertToType(data['point'], [GoogleCloudApigeeV1Point]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1DebugSessionTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1DebugSessionTransaction</code>.
     */
    static validateJSON(data) {
        if (data['point']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['point'])) {
                throw new Error("Expected the field `point` to be an array in the JSON data but got " + data['point']);
            }
            // validate the optional field `point` (array)
            for (const item of data['point']) {
                GoogleCloudApigeeV1Point.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Flag indicating whether a transaction is completed or not
 * @member {Boolean} completed
 */
GoogleCloudApigeeV1DebugSessionTransaction.prototype['completed'] = undefined;

/**
 * List of debug data collected by runtime plane at various defined points in the flow.
 * @member {Array.<module:model/GoogleCloudApigeeV1Point>} point
 */
GoogleCloudApigeeV1DebugSessionTransaction.prototype['point'] = undefined;






export default GoogleCloudApigeeV1DebugSessionTransaction;

