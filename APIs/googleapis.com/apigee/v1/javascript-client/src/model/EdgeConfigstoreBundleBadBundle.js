/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EdgeConfigstoreBundleBadBundleViolation from './EdgeConfigstoreBundleBadBundleViolation';

/**
 * The EdgeConfigstoreBundleBadBundle model module.
 * @module model/EdgeConfigstoreBundleBadBundle
 * @version v1
 */
class EdgeConfigstoreBundleBadBundle {
    /**
     * Constructs a new <code>EdgeConfigstoreBundleBadBundle</code>.
     * Describes why a bundle is invalid. Intended for use in error details.
     * @alias module:model/EdgeConfigstoreBundleBadBundle
     */
    constructor() { 
        
        EdgeConfigstoreBundleBadBundle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EdgeConfigstoreBundleBadBundle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EdgeConfigstoreBundleBadBundle} obj Optional instance to populate.
     * @return {module:model/EdgeConfigstoreBundleBadBundle} The populated <code>EdgeConfigstoreBundleBadBundle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EdgeConfigstoreBundleBadBundle();

            if (data.hasOwnProperty('violations')) {
                obj['violations'] = ApiClient.convertToType(data['violations'], [EdgeConfigstoreBundleBadBundleViolation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EdgeConfigstoreBundleBadBundle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EdgeConfigstoreBundleBadBundle</code>.
     */
    static validateJSON(data) {
        if (data['violations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['violations'])) {
                throw new Error("Expected the field `violations` to be an array in the JSON data but got " + data['violations']);
            }
            // validate the optional field `violations` (array)
            for (const item of data['violations']) {
                EdgeConfigstoreBundleBadBundleViolation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Describes all precondition violations.
 * @member {Array.<module:model/EdgeConfigstoreBundleBadBundleViolation>} violations
 */
EdgeConfigstoreBundleBadBundle.prototype['violations'] = undefined;






export default EdgeConfigstoreBundleBadBundle;

