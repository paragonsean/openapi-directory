/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudApigeeV1ApiProductRef from './GoogleCloudApigeeV1ApiProductRef';
import GoogleCloudApigeeV1Attribute from './GoogleCloudApigeeV1Attribute';

/**
 * The GoogleCloudApigeeV1Credential model module.
 * @module model/GoogleCloudApigeeV1Credential
 * @version v1
 */
class GoogleCloudApigeeV1Credential {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1Credential</code>.
     * @alias module:model/GoogleCloudApigeeV1Credential
     */
    constructor() { 
        
        GoogleCloudApigeeV1Credential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1Credential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1Credential} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1Credential} The populated <code>GoogleCloudApigeeV1Credential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1Credential();

            if (data.hasOwnProperty('apiProducts')) {
                obj['apiProducts'] = ApiClient.convertToType(data['apiProducts'], [GoogleCloudApigeeV1ApiProductRef]);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [GoogleCloudApigeeV1Attribute]);
            }
            if (data.hasOwnProperty('consumerKey')) {
                obj['consumerKey'] = ApiClient.convertToType(data['consumerKey'], 'String');
            }
            if (data.hasOwnProperty('consumerSecret')) {
                obj['consumerSecret'] = ApiClient.convertToType(data['consumerSecret'], 'String');
            }
            if (data.hasOwnProperty('expiresAt')) {
                obj['expiresAt'] = ApiClient.convertToType(data['expiresAt'], 'String');
            }
            if (data.hasOwnProperty('issuedAt')) {
                obj['issuedAt'] = ApiClient.convertToType(data['issuedAt'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1Credential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1Credential</code>.
     */
    static validateJSON(data) {
        if (data['apiProducts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['apiProducts'])) {
                throw new Error("Expected the field `apiProducts` to be an array in the JSON data but got " + data['apiProducts']);
            }
            // validate the optional field `apiProducts` (array)
            for (const item of data['apiProducts']) {
                GoogleCloudApigeeV1ApiProductRef.validateJSON(item);
            };
        }
        if (data['attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributes'])) {
                throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
            }
            // validate the optional field `attributes` (array)
            for (const item of data['attributes']) {
                GoogleCloudApigeeV1Attribute.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['consumerKey'] && !(typeof data['consumerKey'] === 'string' || data['consumerKey'] instanceof String)) {
            throw new Error("Expected the field `consumerKey` to be a primitive type in the JSON string but got " + data['consumerKey']);
        }
        // ensure the json data is a string
        if (data['consumerSecret'] && !(typeof data['consumerSecret'] === 'string' || data['consumerSecret'] instanceof String)) {
            throw new Error("Expected the field `consumerSecret` to be a primitive type in the JSON string but got " + data['consumerSecret']);
        }
        // ensure the json data is a string
        if (data['expiresAt'] && !(typeof data['expiresAt'] === 'string' || data['expiresAt'] instanceof String)) {
            throw new Error("Expected the field `expiresAt` to be a primitive type in the JSON string but got " + data['expiresAt']);
        }
        // ensure the json data is a string
        if (data['issuedAt'] && !(typeof data['issuedAt'] === 'string' || data['issuedAt'] instanceof String)) {
            throw new Error("Expected the field `issuedAt` to be a primitive type in the JSON string but got " + data['issuedAt']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scopes'])) {
            throw new Error("Expected the field `scopes` to be an array in the JSON data but got " + data['scopes']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * List of API products this credential can be used for.
 * @member {Array.<module:model/GoogleCloudApigeeV1ApiProductRef>} apiProducts
 */
GoogleCloudApigeeV1Credential.prototype['apiProducts'] = undefined;

/**
 * List of attributes associated with this credential.
 * @member {Array.<module:model/GoogleCloudApigeeV1Attribute>} attributes
 */
GoogleCloudApigeeV1Credential.prototype['attributes'] = undefined;

/**
 * Consumer key.
 * @member {String} consumerKey
 */
GoogleCloudApigeeV1Credential.prototype['consumerKey'] = undefined;

/**
 * Secret key.
 * @member {String} consumerSecret
 */
GoogleCloudApigeeV1Credential.prototype['consumerSecret'] = undefined;

/**
 * Time the credential will expire in milliseconds since epoch.
 * @member {String} expiresAt
 */
GoogleCloudApigeeV1Credential.prototype['expiresAt'] = undefined;

/**
 * Time the credential was issued in milliseconds since epoch.
 * @member {String} issuedAt
 */
GoogleCloudApigeeV1Credential.prototype['issuedAt'] = undefined;

/**
 * List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.
 * @member {Array.<String>} scopes
 */
GoogleCloudApigeeV1Credential.prototype['scopes'] = undefined;

/**
 * Status of the credential. Valid values include `approved` or `revoked`.
 * @member {String} status
 */
GoogleCloudApigeeV1Credential.prototype['status'] = undefined;






export default GoogleCloudApigeeV1Credential;

