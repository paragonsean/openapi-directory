/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudApigeeV1ProvisionOrganizationRequest model module.
 * @module model/GoogleCloudApigeeV1ProvisionOrganizationRequest
 * @version v1
 */
class GoogleCloudApigeeV1ProvisionOrganizationRequest {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1ProvisionOrganizationRequest</code>.
     * Request for ProvisionOrganization.
     * @alias module:model/GoogleCloudApigeeV1ProvisionOrganizationRequest
     */
    constructor() { 
        
        GoogleCloudApigeeV1ProvisionOrganizationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1ProvisionOrganizationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1ProvisionOrganizationRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1ProvisionOrganizationRequest} The populated <code>GoogleCloudApigeeV1ProvisionOrganizationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1ProvisionOrganizationRequest();

            if (data.hasOwnProperty('analyticsRegion')) {
                obj['analyticsRegion'] = ApiClient.convertToType(data['analyticsRegion'], 'String');
            }
            if (data.hasOwnProperty('authorizedNetwork')) {
                obj['authorizedNetwork'] = ApiClient.convertToType(data['authorizedNetwork'], 'String');
            }
            if (data.hasOwnProperty('disableVpcPeering')) {
                obj['disableVpcPeering'] = ApiClient.convertToType(data['disableVpcPeering'], 'Boolean');
            }
            if (data.hasOwnProperty('runtimeLocation')) {
                obj['runtimeLocation'] = ApiClient.convertToType(data['runtimeLocation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1ProvisionOrganizationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1ProvisionOrganizationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['analyticsRegion'] && !(typeof data['analyticsRegion'] === 'string' || data['analyticsRegion'] instanceof String)) {
            throw new Error("Expected the field `analyticsRegion` to be a primitive type in the JSON string but got " + data['analyticsRegion']);
        }
        // ensure the json data is a string
        if (data['authorizedNetwork'] && !(typeof data['authorizedNetwork'] === 'string' || data['authorizedNetwork'] instanceof String)) {
            throw new Error("Expected the field `authorizedNetwork` to be a primitive type in the JSON string but got " + data['authorizedNetwork']);
        }
        // ensure the json data is a string
        if (data['runtimeLocation'] && !(typeof data['runtimeLocation'] === 'string' || data['runtimeLocation'] instanceof String)) {
            throw new Error("Expected the field `runtimeLocation` to be a primitive type in the JSON string but got " + data['runtimeLocation']);
        }

        return true;
    }


}



/**
 * Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://cloud.google.com/apigee/docs/hybrid/latest/precog-provision). Defaults to `us-west1`.
 * @member {String} analyticsRegion
 */
GoogleCloudApigeeV1ProvisionOrganizationRequest.prototype['analyticsRegion'] = undefined;

/**
 * Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork`
 * @member {String} authorizedNetwork
 */
GoogleCloudApigeeV1ProvisionOrganizationRequest.prototype['authorizedNetwork'] = undefined;

/**
 * Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide 'authorizedNetwork', by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.
 * @member {Boolean} disableVpcPeering
 */
GoogleCloudApigeeV1ProvisionOrganizationRequest.prototype['disableVpcPeering'] = undefined;

/**
 * Cloud Platform location for the runtime instance. Defaults to zone `us-west1-a`. If a region is provided, `EVAL` organizations will use the region for automatically selecting a zone for the runtime instance.
 * @member {String} runtimeLocation
 */
GoogleCloudApigeeV1ProvisionOrganizationRequest.prototype['runtimeLocation'] = undefined;






export default GoogleCloudApigeeV1ProvisionOrganizationRequest;

