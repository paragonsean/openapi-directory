/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudApigeeV1Instance model module.
 * @module model/GoogleCloudApigeeV1Instance
 * @version v1
 */
class GoogleCloudApigeeV1Instance {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1Instance</code>.
     * Apigee runtime instance.
     * @alias module:model/GoogleCloudApigeeV1Instance
     */
    constructor() { 
        
        GoogleCloudApigeeV1Instance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1Instance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1Instance} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1Instance} The populated <code>GoogleCloudApigeeV1Instance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1Instance();

            if (data.hasOwnProperty('consumerAcceptList')) {
                obj['consumerAcceptList'] = ApiClient.convertToType(data['consumerAcceptList'], ['String']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('diskEncryptionKeyName')) {
                obj['diskEncryptionKeyName'] = ApiClient.convertToType(data['diskEncryptionKeyName'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('ipRange')) {
                obj['ipRange'] = ApiClient.convertToType(data['ipRange'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedAt')) {
                obj['lastModifiedAt'] = ApiClient.convertToType(data['lastModifiedAt'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('peeringCidrRange')) {
                obj['peeringCidrRange'] = ApiClient.convertToType(data['peeringCidrRange'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'String');
            }
            if (data.hasOwnProperty('runtimeVersion')) {
                obj['runtimeVersion'] = ApiClient.convertToType(data['runtimeVersion'], 'String');
            }
            if (data.hasOwnProperty('serviceAttachment')) {
                obj['serviceAttachment'] = ApiClient.convertToType(data['serviceAttachment'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1Instance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1Instance</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['consumerAcceptList'])) {
            throw new Error("Expected the field `consumerAcceptList` to be an array in the JSON data but got " + data['consumerAcceptList']);
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['diskEncryptionKeyName'] && !(typeof data['diskEncryptionKeyName'] === 'string' || data['diskEncryptionKeyName'] instanceof String)) {
            throw new Error("Expected the field `diskEncryptionKeyName` to be a primitive type in the JSON string but got " + data['diskEncryptionKeyName']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // ensure the json data is a string
        if (data['ipRange'] && !(typeof data['ipRange'] === 'string' || data['ipRange'] instanceof String)) {
            throw new Error("Expected the field `ipRange` to be a primitive type in the JSON string but got " + data['ipRange']);
        }
        // ensure the json data is a string
        if (data['lastModifiedAt'] && !(typeof data['lastModifiedAt'] === 'string' || data['lastModifiedAt'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedAt` to be a primitive type in the JSON string but got " + data['lastModifiedAt']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['peeringCidrRange'] && !(typeof data['peeringCidrRange'] === 'string' || data['peeringCidrRange'] instanceof String)) {
            throw new Error("Expected the field `peeringCidrRange` to be a primitive type in the JSON string but got " + data['peeringCidrRange']);
        }
        // ensure the json data is a string
        if (data['port'] && !(typeof data['port'] === 'string' || data['port'] instanceof String)) {
            throw new Error("Expected the field `port` to be a primitive type in the JSON string but got " + data['port']);
        }
        // ensure the json data is a string
        if (data['runtimeVersion'] && !(typeof data['runtimeVersion'] === 'string' || data['runtimeVersion'] instanceof String)) {
            throw new Error("Expected the field `runtimeVersion` to be a primitive type in the JSON string but got " + data['runtimeVersion']);
        }
        // ensure the json data is a string
        if (data['serviceAttachment'] && !(typeof data['serviceAttachment'] === 'string' || data['serviceAttachment'] instanceof String)) {
            throw new Error("Expected the field `serviceAttachment` to be a primitive type in the JSON string but got " + data['serviceAttachment']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect to the service attachment. It is an optional field which the customers can provide during the instance creation. By default, the customer project associated with the Apigee organization will be included to the list.
 * @member {Array.<String>} consumerAcceptList
 */
GoogleCloudApigeeV1Instance.prototype['consumerAcceptList'] = undefined;

/**
 * Output only. Time the instance was created in milliseconds since epoch.
 * @member {String} createdAt
 */
GoogleCloudApigeeV1Instance.prototype['createdAt'] = undefined;

/**
 * Optional. Description of the instance.
 * @member {String} description
 */
GoogleCloudApigeeV1Instance.prototype['description'] = undefined;

/**
 * Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only. Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`
 * @member {String} diskEncryptionKeyName
 */
GoogleCloudApigeeV1Instance.prototype['diskEncryptionKeyName'] = undefined;

/**
 * Optional. Display name for the instance.
 * @member {String} displayName
 */
GoogleCloudApigeeV1Instance.prototype['displayName'] = undefined;

/**
 * Output only. Internal hostname or IP address of the Apigee endpoint used by clients to connect to the service.
 * @member {String} host
 */
GoogleCloudApigeeV1Instance.prototype['host'] = undefined;

/**
 * Optional. Comma-separated list of CIDR blocks of length 22 and/or 28 used to create the Apigee instance. Providing CIDR ranges is optional. You can provide just /22 or /28 or both (or neither). Ranges you provide should be freely available as part of a larger named range you have allocated to the Service Networking peering. If this parameter is not provided, Apigee automatically requests an available /22 and /28 CIDR block from Service Networking. Use the /22 CIDR block for configuring your firewall needs to allow traffic from Apigee. Input formats: `a.b.c.d/22` or `e.f.g.h/28` or `a.b.c.d/22,e.f.g.h/28`
 * @member {String} ipRange
 */
GoogleCloudApigeeV1Instance.prototype['ipRange'] = undefined;

/**
 * Output only. Time the instance was last modified in milliseconds since epoch.
 * @member {String} lastModifiedAt
 */
GoogleCloudApigeeV1Instance.prototype['lastModifiedAt'] = undefined;

/**
 * Required. Compute Engine location where the instance resides.
 * @member {String} location
 */
GoogleCloudApigeeV1Instance.prototype['location'] = undefined;

/**
 * Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\\d]$`.
 * @member {String} name
 */
GoogleCloudApigeeV1Instance.prototype['name'] = undefined;

/**
 * Optional. Size of the CIDR block range that will be reserved by the instance. PAID organizations support `SLASH_16` to `SLASH_20` and defaults to `SLASH_16`. Evaluation organizations support only `SLASH_23`.
 * @member {module:model/GoogleCloudApigeeV1Instance.PeeringCidrRangeEnum} peeringCidrRange
 */
GoogleCloudApigeeV1Instance.prototype['peeringCidrRange'] = undefined;

/**
 * Output only. Port number of the exposed Apigee endpoint.
 * @member {String} port
 */
GoogleCloudApigeeV1Instance.prototype['port'] = undefined;

/**
 * Output only. Version of the runtime system running in the instance. The runtime system is the set of components that serve the API Proxy traffic in your Environments.
 * @member {String} runtimeVersion
 */
GoogleCloudApigeeV1Instance.prototype['runtimeVersion'] = undefined;

/**
 * Output only. Resource name of the service attachment created for the instance in the format: `projects/_*_/regions/_*_/serviceAttachments/_*` Apigee customers can privately forward traffic to this service attachment using the PSC endpoints.
 * @member {String} serviceAttachment
 */
GoogleCloudApigeeV1Instance.prototype['serviceAttachment'] = undefined;

/**
 * Output only. State of the instance. Values other than `ACTIVE` means the resource is not ready to use.
 * @member {module:model/GoogleCloudApigeeV1Instance.StateEnum} state
 */
GoogleCloudApigeeV1Instance.prototype['state'] = undefined;





/**
 * Allowed values for the <code>peeringCidrRange</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudApigeeV1Instance['PeeringCidrRangeEnum'] = {

    /**
     * value: "CIDR_RANGE_UNSPECIFIED"
     * @const
     */
    "CIDR_RANGE_UNSPECIFIED": "CIDR_RANGE_UNSPECIFIED",

    /**
     * value: "SLASH_16"
     * @const
     */
    "SLASH_16": "SLASH_16",

    /**
     * value: "SLASH_17"
     * @const
     */
    "SLASH_17": "SLASH_17",

    /**
     * value: "SLASH_18"
     * @const
     */
    "SLASH_18": "SLASH_18",

    /**
     * value: "SLASH_19"
     * @const
     */
    "SLASH_19": "SLASH_19",

    /**
     * value: "SLASH_20"
     * @const
     */
    "SLASH_20": "SLASH_20",

    /**
     * value: "SLASH_22"
     * @const
     */
    "SLASH_22": "SLASH_22",

    /**
     * value: "SLASH_23"
     * @const
     */
    "SLASH_23": "SLASH_23"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudApigeeV1Instance['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "UPDATING"
     * @const
     */
    "UPDATING": "UPDATING"
};



export default GoogleCloudApigeeV1Instance;

