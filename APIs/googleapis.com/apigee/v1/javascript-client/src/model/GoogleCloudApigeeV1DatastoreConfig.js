/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudApigeeV1DatastoreConfig model module.
 * @module model/GoogleCloudApigeeV1DatastoreConfig
 * @version v1
 */
class GoogleCloudApigeeV1DatastoreConfig {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1DatastoreConfig</code>.
     * Configuration detail for datastore
     * @alias module:model/GoogleCloudApigeeV1DatastoreConfig
     */
    constructor() { 
        
        GoogleCloudApigeeV1DatastoreConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1DatastoreConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1DatastoreConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1DatastoreConfig} The populated <code>GoogleCloudApigeeV1DatastoreConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1DatastoreConfig();

            if (data.hasOwnProperty('bucketName')) {
                obj['bucketName'] = ApiClient.convertToType(data['bucketName'], 'String');
            }
            if (data.hasOwnProperty('datasetName')) {
                obj['datasetName'] = ApiClient.convertToType(data['datasetName'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('tablePrefix')) {
                obj['tablePrefix'] = ApiClient.convertToType(data['tablePrefix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1DatastoreConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1DatastoreConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bucketName'] && !(typeof data['bucketName'] === 'string' || data['bucketName'] instanceof String)) {
            throw new Error("Expected the field `bucketName` to be a primitive type in the JSON string but got " + data['bucketName']);
        }
        // ensure the json data is a string
        if (data['datasetName'] && !(typeof data['datasetName'] === 'string' || data['datasetName'] instanceof String)) {
            throw new Error("Expected the field `datasetName` to be a primitive type in the JSON string but got " + data['datasetName']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }
        // ensure the json data is a string
        if (data['tablePrefix'] && !(typeof data['tablePrefix'] === 'string' || data['tablePrefix'] instanceof String)) {
            throw new Error("Expected the field `tablePrefix` to be a primitive type in the JSON string but got " + data['tablePrefix']);
        }

        return true;
    }


}



/**
 * Name of the Cloud Storage bucket. Required for `gcs` target_type.
 * @member {String} bucketName
 */
GoogleCloudApigeeV1DatastoreConfig.prototype['bucketName'] = undefined;

/**
 * BigQuery dataset name Required for `bigquery` target_type.
 * @member {String} datasetName
 */
GoogleCloudApigeeV1DatastoreConfig.prototype['datasetName'] = undefined;

/**
 * Path of Cloud Storage bucket Required for `gcs` target_type.
 * @member {String} path
 */
GoogleCloudApigeeV1DatastoreConfig.prototype['path'] = undefined;

/**
 * Required. GCP project in which the datastore exists
 * @member {String} projectId
 */
GoogleCloudApigeeV1DatastoreConfig.prototype['projectId'] = undefined;

/**
 * Prefix of BigQuery table Required for `bigquery` target_type.
 * @member {String} tablePrefix
 */
GoogleCloudApigeeV1DatastoreConfig.prototype['tablePrefix'] = undefined;






export default GoogleCloudApigeeV1DatastoreConfig;

