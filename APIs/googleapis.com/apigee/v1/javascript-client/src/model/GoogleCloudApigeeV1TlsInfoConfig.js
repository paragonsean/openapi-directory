/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudApigeeV1CommonNameConfig from './GoogleCloudApigeeV1CommonNameConfig';
import GoogleCloudApigeeV1KeyAliasReference from './GoogleCloudApigeeV1KeyAliasReference';

/**
 * The GoogleCloudApigeeV1TlsInfoConfig model module.
 * @module model/GoogleCloudApigeeV1TlsInfoConfig
 * @version v1
 */
class GoogleCloudApigeeV1TlsInfoConfig {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1TlsInfoConfig</code>.
     * @alias module:model/GoogleCloudApigeeV1TlsInfoConfig
     */
    constructor() { 
        
        GoogleCloudApigeeV1TlsInfoConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1TlsInfoConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1TlsInfoConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1TlsInfoConfig} The populated <code>GoogleCloudApigeeV1TlsInfoConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1TlsInfoConfig();

            if (data.hasOwnProperty('ciphers')) {
                obj['ciphers'] = ApiClient.convertToType(data['ciphers'], ['String']);
            }
            if (data.hasOwnProperty('clientAuthEnabled')) {
                obj['clientAuthEnabled'] = ApiClient.convertToType(data['clientAuthEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('commonName')) {
                obj['commonName'] = GoogleCloudApigeeV1CommonNameConfig.constructFromObject(data['commonName']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ignoreValidationErrors')) {
                obj['ignoreValidationErrors'] = ApiClient.convertToType(data['ignoreValidationErrors'], 'Boolean');
            }
            if (data.hasOwnProperty('keyAlias')) {
                obj['keyAlias'] = ApiClient.convertToType(data['keyAlias'], 'String');
            }
            if (data.hasOwnProperty('keyAliasReference')) {
                obj['keyAliasReference'] = GoogleCloudApigeeV1KeyAliasReference.constructFromObject(data['keyAliasReference']);
            }
            if (data.hasOwnProperty('protocols')) {
                obj['protocols'] = ApiClient.convertToType(data['protocols'], ['String']);
            }
            if (data.hasOwnProperty('trustStore')) {
                obj['trustStore'] = ApiClient.convertToType(data['trustStore'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1TlsInfoConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1TlsInfoConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['ciphers'])) {
            throw new Error("Expected the field `ciphers` to be an array in the JSON data but got " + data['ciphers']);
        }
        // validate the optional field `commonName`
        if (data['commonName']) { // data not null
          GoogleCloudApigeeV1CommonNameConfig.validateJSON(data['commonName']);
        }
        // ensure the json data is a string
        if (data['keyAlias'] && !(typeof data['keyAlias'] === 'string' || data['keyAlias'] instanceof String)) {
            throw new Error("Expected the field `keyAlias` to be a primitive type in the JSON string but got " + data['keyAlias']);
        }
        // validate the optional field `keyAliasReference`
        if (data['keyAliasReference']) { // data not null
          GoogleCloudApigeeV1KeyAliasReference.validateJSON(data['keyAliasReference']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['protocols'])) {
            throw new Error("Expected the field `protocols` to be an array in the JSON data but got " + data['protocols']);
        }
        // ensure the json data is a string
        if (data['trustStore'] && !(typeof data['trustStore'] === 'string' || data['trustStore'] instanceof String)) {
            throw new Error("Expected the field `trustStore` to be a primitive type in the JSON string but got " + data['trustStore']);
        }

        return true;
    }


}



/**
 * List of ciphers that are granted access.
 * @member {Array.<String>} ciphers
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['ciphers'] = undefined;

/**
 * Flag that specifies whether client-side authentication is enabled for the target server. Enables two-way TLS.
 * @member {Boolean} clientAuthEnabled
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['clientAuthEnabled'] = undefined;

/**
 * @member {module:model/GoogleCloudApigeeV1CommonNameConfig} commonName
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['commonName'] = undefined;

/**
 * Flag that specifies whether one-way TLS is enabled. Set to `true` to enable one-way TLS.
 * @member {Boolean} enabled
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['enabled'] = undefined;

/**
 * Flag that specifies whether to ignore TLS certificate validation errors. Set to `true` to ignore errors.
 * @member {Boolean} ignoreValidationErrors
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['ignoreValidationErrors'] = undefined;

/**
 * Name of the alias used for client-side authentication in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
 * @member {String} keyAlias
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['keyAlias'] = undefined;

/**
 * @member {module:model/GoogleCloudApigeeV1KeyAliasReference} keyAliasReference
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['keyAliasReference'] = undefined;

/**
 * List of TLS protocols that are granted access.
 * @member {Array.<String>} protocols
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['protocols'] = undefined;

/**
 * Name of the keystore or keystore reference containing trusted certificates for the server in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` or `organizations/{org}/environments/{env}/references/{reference}`
 * @member {String} trustStore
 */
GoogleCloudApigeeV1TlsInfoConfig.prototype['trustStore'] = undefined;






export default GoogleCloudApigeeV1TlsInfoConfig;

