/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudApigeeV1Attribute from './GoogleCloudApigeeV1Attribute';
import GoogleCloudApigeeV1GraphQLOperation from './GoogleCloudApigeeV1GraphQLOperation';
import GoogleCloudApigeeV1Quota from './GoogleCloudApigeeV1Quota';

/**
 * The GoogleCloudApigeeV1GraphQLOperationConfig model module.
 * @module model/GoogleCloudApigeeV1GraphQLOperationConfig
 * @version v1
 */
class GoogleCloudApigeeV1GraphQLOperationConfig {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1GraphQLOperationConfig</code>.
     * Binds the resources in a proxy or remote service with the GraphQL operation and its associated quota enforcement.
     * @alias module:model/GoogleCloudApigeeV1GraphQLOperationConfig
     */
    constructor() { 
        
        GoogleCloudApigeeV1GraphQLOperationConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1GraphQLOperationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1GraphQLOperationConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1GraphQLOperationConfig} The populated <code>GoogleCloudApigeeV1GraphQLOperationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1GraphQLOperationConfig();

            if (data.hasOwnProperty('apiSource')) {
                obj['apiSource'] = ApiClient.convertToType(data['apiSource'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [GoogleCloudApigeeV1Attribute]);
            }
            if (data.hasOwnProperty('operations')) {
                obj['operations'] = ApiClient.convertToType(data['operations'], [GoogleCloudApigeeV1GraphQLOperation]);
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = GoogleCloudApigeeV1Quota.constructFromObject(data['quota']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1GraphQLOperationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1GraphQLOperationConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiSource'] && !(typeof data['apiSource'] === 'string' || data['apiSource'] instanceof String)) {
            throw new Error("Expected the field `apiSource` to be a primitive type in the JSON string but got " + data['apiSource']);
        }
        if (data['attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributes'])) {
                throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
            }
            // validate the optional field `attributes` (array)
            for (const item of data['attributes']) {
                GoogleCloudApigeeV1Attribute.validateJSON(item);
            };
        }
        if (data['operations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['operations'])) {
                throw new Error("Expected the field `operations` to be an array in the JSON data but got " + data['operations']);
            }
            // validate the optional field `operations` (array)
            for (const item of data['operations']) {
                GoogleCloudApigeeV1GraphQLOperation.validateJSON(item);
            };
        }
        // validate the optional field `quota`
        if (data['quota']) { // data not null
          GoogleCloudApigeeV1Quota.validateJSON(data['quota']);
        }

        return true;
    }


}



/**
 * Required. Name of the API proxy endpoint or remote service with which the GraphQL operation and quota are associated.
 * @member {String} apiSource
 */
GoogleCloudApigeeV1GraphQLOperationConfig.prototype['apiSource'] = undefined;

/**
 * Custom attributes associated with the operation.
 * @member {Array.<module:model/GoogleCloudApigeeV1Attribute>} attributes
 */
GoogleCloudApigeeV1GraphQLOperationConfig.prototype['attributes'] = undefined;

/**
 * Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
 * @member {Array.<module:model/GoogleCloudApigeeV1GraphQLOperation>} operations
 */
GoogleCloudApigeeV1GraphQLOperationConfig.prototype['operations'] = undefined;

/**
 * @member {module:model/GoogleCloudApigeeV1Quota} quota
 */
GoogleCloudApigeeV1GraphQLOperationConfig.prototype['quota'] = undefined;






export default GoogleCloudApigeeV1GraphQLOperationConfig;

