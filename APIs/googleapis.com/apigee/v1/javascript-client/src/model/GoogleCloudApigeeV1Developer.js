/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudApigeeV1Attribute from './GoogleCloudApigeeV1Attribute';

/**
 * The GoogleCloudApigeeV1Developer model module.
 * @module model/GoogleCloudApigeeV1Developer
 * @version v1
 */
class GoogleCloudApigeeV1Developer {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1Developer</code>.
     * @alias module:model/GoogleCloudApigeeV1Developer
     */
    constructor() { 
        
        GoogleCloudApigeeV1Developer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1Developer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1Developer} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1Developer} The populated <code>GoogleCloudApigeeV1Developer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1Developer();

            if (data.hasOwnProperty('accessType')) {
                obj['accessType'] = ApiClient.convertToType(data['accessType'], 'String');
            }
            if (data.hasOwnProperty('appFamily')) {
                obj['appFamily'] = ApiClient.convertToType(data['appFamily'], 'String');
            }
            if (data.hasOwnProperty('apps')) {
                obj['apps'] = ApiClient.convertToType(data['apps'], ['String']);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [GoogleCloudApigeeV1Attribute]);
            }
            if (data.hasOwnProperty('companies')) {
                obj['companies'] = ApiClient.convertToType(data['companies'], ['String']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('developerId')) {
                obj['developerId'] = ApiClient.convertToType(data['developerId'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedAt')) {
                obj['lastModifiedAt'] = ApiClient.convertToType(data['lastModifiedAt'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('organizationName')) {
                obj['organizationName'] = ApiClient.convertToType(data['organizationName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1Developer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1Developer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessType'] && !(typeof data['accessType'] === 'string' || data['accessType'] instanceof String)) {
            throw new Error("Expected the field `accessType` to be a primitive type in the JSON string but got " + data['accessType']);
        }
        // ensure the json data is a string
        if (data['appFamily'] && !(typeof data['appFamily'] === 'string' || data['appFamily'] instanceof String)) {
            throw new Error("Expected the field `appFamily` to be a primitive type in the JSON string but got " + data['appFamily']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['apps'])) {
            throw new Error("Expected the field `apps` to be an array in the JSON data but got " + data['apps']);
        }
        if (data['attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributes'])) {
                throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
            }
            // validate the optional field `attributes` (array)
            for (const item of data['attributes']) {
                GoogleCloudApigeeV1Attribute.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['companies'])) {
            throw new Error("Expected the field `companies` to be an array in the JSON data but got " + data['companies']);
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['developerId'] && !(typeof data['developerId'] === 'string' || data['developerId'] instanceof String)) {
            throw new Error("Expected the field `developerId` to be a primitive type in the JSON string but got " + data['developerId']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastModifiedAt'] && !(typeof data['lastModifiedAt'] === 'string' || data['lastModifiedAt'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedAt` to be a primitive type in the JSON string but got " + data['lastModifiedAt']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['organizationName'] && !(typeof data['organizationName'] === 'string' || data['organizationName'] instanceof String)) {
            throw new Error("Expected the field `organizationName` to be a primitive type in the JSON string but got " + data['organizationName']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}



/**
 * Access type.
 * @member {String} accessType
 */
GoogleCloudApigeeV1Developer.prototype['accessType'] = undefined;

/**
 * Developer app family.
 * @member {String} appFamily
 */
GoogleCloudApigeeV1Developer.prototype['appFamily'] = undefined;

/**
 * List of apps associated with the developer.
 * @member {Array.<String>} apps
 */
GoogleCloudApigeeV1Developer.prototype['apps'] = undefined;

/**
 * Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.
 * @member {Array.<module:model/GoogleCloudApigeeV1Attribute>} attributes
 */
GoogleCloudApigeeV1Developer.prototype['attributes'] = undefined;

/**
 * List of companies associated with the developer.
 * @member {Array.<String>} companies
 */
GoogleCloudApigeeV1Developer.prototype['companies'] = undefined;

/**
 * Output only. Time at which the developer was created in milliseconds since epoch.
 * @member {String} createdAt
 */
GoogleCloudApigeeV1Developer.prototype['createdAt'] = undefined;

/**
 * ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time.
 * @member {String} developerId
 */
GoogleCloudApigeeV1Developer.prototype['developerId'] = undefined;

/**
 * Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only.
 * @member {String} email
 */
GoogleCloudApigeeV1Developer.prototype['email'] = undefined;

/**
 * Required. First name of the developer.
 * @member {String} firstName
 */
GoogleCloudApigeeV1Developer.prototype['firstName'] = undefined;

/**
 * Output only. Time at which the developer was last modified in milliseconds since epoch.
 * @member {String} lastModifiedAt
 */
GoogleCloudApigeeV1Developer.prototype['lastModifiedAt'] = undefined;

/**
 * Required. Last name of the developer.
 * @member {String} lastName
 */
GoogleCloudApigeeV1Developer.prototype['lastName'] = undefined;

/**
 * Output only. Name of the Apigee organization in which the developer resides.
 * @member {String} organizationName
 */
GoogleCloudApigeeV1Developer.prototype['organizationName'] = undefined;

/**
 * Output only. Status of the developer. Valid values are `active` and `inactive`.
 * @member {String} status
 */
GoogleCloudApigeeV1Developer.prototype['status'] = undefined;

/**
 * Required. User name of the developer. Not used by Apigee hybrid.
 * @member {String} userName
 */
GoogleCloudApigeeV1Developer.prototype['userName'] = undefined;






export default GoogleCloudApigeeV1Developer;

