/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudApigeeV1Attribute from './GoogleCloudApigeeV1Attribute';
import GoogleCloudApigeeV1Operation from './GoogleCloudApigeeV1Operation';
import GoogleCloudApigeeV1Quota from './GoogleCloudApigeeV1Quota';

/**
 * The GoogleCloudApigeeV1OperationConfig model module.
 * @module model/GoogleCloudApigeeV1OperationConfig
 * @version v1
 */
class GoogleCloudApigeeV1OperationConfig {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1OperationConfig</code>.
     * Binds the resources in an API proxy or remote service with the allowed REST methods and associated quota enforcement.
     * @alias module:model/GoogleCloudApigeeV1OperationConfig
     */
    constructor() { 
        
        GoogleCloudApigeeV1OperationConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1OperationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1OperationConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1OperationConfig} The populated <code>GoogleCloudApigeeV1OperationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1OperationConfig();

            if (data.hasOwnProperty('apiSource')) {
                obj['apiSource'] = ApiClient.convertToType(data['apiSource'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], [GoogleCloudApigeeV1Attribute]);
            }
            if (data.hasOwnProperty('operations')) {
                obj['operations'] = ApiClient.convertToType(data['operations'], [GoogleCloudApigeeV1Operation]);
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = GoogleCloudApigeeV1Quota.constructFromObject(data['quota']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1OperationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1OperationConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiSource'] && !(typeof data['apiSource'] === 'string' || data['apiSource'] instanceof String)) {
            throw new Error("Expected the field `apiSource` to be a primitive type in the JSON string but got " + data['apiSource']);
        }
        if (data['attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributes'])) {
                throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
            }
            // validate the optional field `attributes` (array)
            for (const item of data['attributes']) {
                GoogleCloudApigeeV1Attribute.validateJSON(item);
            };
        }
        if (data['operations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['operations'])) {
                throw new Error("Expected the field `operations` to be an array in the JSON data but got " + data['operations']);
            }
            // validate the optional field `operations` (array)
            for (const item of data['operations']) {
                GoogleCloudApigeeV1Operation.validateJSON(item);
            };
        }
        // validate the optional field `quota`
        if (data['quota']) { // data not null
          GoogleCloudApigeeV1Quota.validateJSON(data['quota']);
        }

        return true;
    }


}



/**
 * Required. Name of the API proxy or remote service with which the resources, methods, and quota are associated.
 * @member {String} apiSource
 */
GoogleCloudApigeeV1OperationConfig.prototype['apiSource'] = undefined;

/**
 * Custom attributes associated with the operation.
 * @member {Array.<module:model/GoogleCloudApigeeV1Attribute>} attributes
 */
GoogleCloudApigeeV1OperationConfig.prototype['attributes'] = undefined;

/**
 * List of resource/method pairs for the API proxy or remote service to which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided.
 * @member {Array.<module:model/GoogleCloudApigeeV1Operation>} operations
 */
GoogleCloudApigeeV1OperationConfig.prototype['operations'] = undefined;

/**
 * @member {module:model/GoogleCloudApigeeV1Quota} quota
 */
GoogleCloudApigeeV1OperationConfig.prototype['quota'] = undefined;






export default GoogleCloudApigeeV1OperationConfig;

