/**
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudApigeeV1DeploymentChangeReportRoutingChange from './GoogleCloudApigeeV1DeploymentChangeReportRoutingChange';
import GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict from './GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict';
import GoogleRpcPreconditionFailure from './GoogleRpcPreconditionFailure';

/**
 * The GoogleCloudApigeeV1DeploymentChangeReport model module.
 * @module model/GoogleCloudApigeeV1DeploymentChangeReport
 * @version v1
 */
class GoogleCloudApigeeV1DeploymentChangeReport {
    /**
     * Constructs a new <code>GoogleCloudApigeeV1DeploymentChangeReport</code>.
     * Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some base path in the proxy will not receive traffic due to an existing deployment having already claimed that base path. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected.
     * @alias module:model/GoogleCloudApigeeV1DeploymentChangeReport
     */
    constructor() { 
        
        GoogleCloudApigeeV1DeploymentChangeReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudApigeeV1DeploymentChangeReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudApigeeV1DeploymentChangeReport} obj Optional instance to populate.
     * @return {module:model/GoogleCloudApigeeV1DeploymentChangeReport} The populated <code>GoogleCloudApigeeV1DeploymentChangeReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudApigeeV1DeploymentChangeReport();

            if (data.hasOwnProperty('routingChanges')) {
                obj['routingChanges'] = ApiClient.convertToType(data['routingChanges'], [GoogleCloudApigeeV1DeploymentChangeReportRoutingChange]);
            }
            if (data.hasOwnProperty('routingConflicts')) {
                obj['routingConflicts'] = ApiClient.convertToType(data['routingConflicts'], [GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict]);
            }
            if (data.hasOwnProperty('validationErrors')) {
                obj['validationErrors'] = GoogleRpcPreconditionFailure.constructFromObject(data['validationErrors']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudApigeeV1DeploymentChangeReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudApigeeV1DeploymentChangeReport</code>.
     */
    static validateJSON(data) {
        if (data['routingChanges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['routingChanges'])) {
                throw new Error("Expected the field `routingChanges` to be an array in the JSON data but got " + data['routingChanges']);
            }
            // validate the optional field `routingChanges` (array)
            for (const item of data['routingChanges']) {
                GoogleCloudApigeeV1DeploymentChangeReportRoutingChange.validateJSON(item);
            };
        }
        if (data['routingConflicts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['routingConflicts'])) {
                throw new Error("Expected the field `routingConflicts` to be an array in the JSON data but got " + data['routingConflicts']);
            }
            // validate the optional field `routingConflicts` (array)
            for (const item of data['routingConflicts']) {
                GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.validateJSON(item);
            };
        }
        // validate the optional field `validationErrors`
        if (data['validationErrors']) { // data not null
          GoogleRpcPreconditionFailure.validateJSON(data['validationErrors']);
        }

        return true;
    }


}



/**
 * All routing changes that may result from a deployment request.
 * @member {Array.<module:model/GoogleCloudApigeeV1DeploymentChangeReportRoutingChange>} routingChanges
 */
GoogleCloudApigeeV1DeploymentChangeReport.prototype['routingChanges'] = undefined;

/**
 * All base path conflicts detected for a deployment request.
 * @member {Array.<module:model/GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict>} routingConflicts
 */
GoogleCloudApigeeV1DeploymentChangeReport.prototype['routingConflicts'] = undefined;

/**
 * @member {module:model/GoogleRpcPreconditionFailure} validationErrors
 */
GoogleCloudApigeeV1DeploymentChangeReport.prototype['validationErrors'] = undefined;






export default GoogleCloudApigeeV1DeploymentChangeReport;

