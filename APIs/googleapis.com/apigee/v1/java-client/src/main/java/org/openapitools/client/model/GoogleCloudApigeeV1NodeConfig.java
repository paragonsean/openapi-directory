/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NodeConfig for setting the min/max number of nodes associated with the environment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1NodeConfig {
  public static final String SERIALIZED_NAME_CURRENT_AGGREGATE_NODE_COUNT = "currentAggregateNodeCount";
  @SerializedName(SERIALIZED_NAME_CURRENT_AGGREGATE_NODE_COUNT)
  private String currentAggregateNodeCount;

  public static final String SERIALIZED_NAME_MAX_NODE_COUNT = "maxNodeCount";
  @SerializedName(SERIALIZED_NAME_MAX_NODE_COUNT)
  private String maxNodeCount;

  public static final String SERIALIZED_NAME_MIN_NODE_COUNT = "minNodeCount";
  @SerializedName(SERIALIZED_NAME_MIN_NODE_COUNT)
  private String minNodeCount;

  public GoogleCloudApigeeV1NodeConfig() {
  }

  public GoogleCloudApigeeV1NodeConfig(
     String currentAggregateNodeCount
  ) {
    this();
    this.currentAggregateNodeCount = currentAggregateNodeCount;
  }

  /**
   * Output only. The current total number of gateway nodes that each environment currently has across all instances.
   * @return currentAggregateNodeCount
   */
  @javax.annotation.Nullable
  public String getCurrentAggregateNodeCount() {
    return currentAggregateNodeCount;
  }



  public GoogleCloudApigeeV1NodeConfig maxNodeCount(String maxNodeCount) {
    this.maxNodeCount = maxNodeCount;
    return this;
  }

  /**
   * Optional. The maximum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended maximum number of nodes for that gateway.
   * @return maxNodeCount
   */
  @javax.annotation.Nullable
  public String getMaxNodeCount() {
    return maxNodeCount;
  }

  public void setMaxNodeCount(String maxNodeCount) {
    this.maxNodeCount = maxNodeCount;
  }


  public GoogleCloudApigeeV1NodeConfig minNodeCount(String minNodeCount) {
    this.minNodeCount = minNodeCount;
    return this;
  }

  /**
   * Optional. The minimum total number of gateway nodes that the is reserved for all instances that has the specified environment. If not specified, the default is determined by the recommended minimum number of nodes for that gateway.
   * @return minNodeCount
   */
  @javax.annotation.Nullable
  public String getMinNodeCount() {
    return minNodeCount;
  }

  public void setMinNodeCount(String minNodeCount) {
    this.minNodeCount = minNodeCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1NodeConfig googleCloudApigeeV1NodeConfig = (GoogleCloudApigeeV1NodeConfig) o;
    return Objects.equals(this.currentAggregateNodeCount, googleCloudApigeeV1NodeConfig.currentAggregateNodeCount) &&
        Objects.equals(this.maxNodeCount, googleCloudApigeeV1NodeConfig.maxNodeCount) &&
        Objects.equals(this.minNodeCount, googleCloudApigeeV1NodeConfig.minNodeCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentAggregateNodeCount, maxNodeCount, minNodeCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1NodeConfig {\n");
    sb.append("    currentAggregateNodeCount: ").append(toIndentedString(currentAggregateNodeCount)).append("\n");
    sb.append("    maxNodeCount: ").append(toIndentedString(maxNodeCount)).append("\n");
    sb.append("    minNodeCount: ").append(toIndentedString(minNodeCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currentAggregateNodeCount");
    openapiFields.add("maxNodeCount");
    openapiFields.add("minNodeCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1NodeConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1NodeConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1NodeConfig is not found in the empty JSON string", GoogleCloudApigeeV1NodeConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1NodeConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1NodeConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("currentAggregateNodeCount") != null && !jsonObj.get("currentAggregateNodeCount").isJsonNull()) && !jsonObj.get("currentAggregateNodeCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentAggregateNodeCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentAggregateNodeCount").toString()));
      }
      if ((jsonObj.get("maxNodeCount") != null && !jsonObj.get("maxNodeCount").isJsonNull()) && !jsonObj.get("maxNodeCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxNodeCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxNodeCount").toString()));
      }
      if ((jsonObj.get("minNodeCount") != null && !jsonObj.get("minNodeCount").isJsonNull()) && !jsonObj.get("minNodeCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minNodeCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minNodeCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1NodeConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1NodeConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1NodeConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1NodeConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1NodeConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1NodeConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1NodeConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1NodeConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1NodeConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1NodeConfig
   */
  public static GoogleCloudApigeeV1NodeConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1NodeConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1NodeConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

