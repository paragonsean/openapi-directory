/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1SecurityReportQueryMetric;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Body structure when user makes a request to create a security report.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1SecurityReportQuery {
  public static final String SERIALIZED_NAME_CSV_DELIMITER = "csvDelimiter";
  @SerializedName(SERIALIZED_NAME_CSV_DELIMITER)
  private String csvDelimiter;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<String> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENVGROUP_HOSTNAME = "envgroupHostname";
  @SerializedName(SERIALIZED_NAME_ENVGROUP_HOSTNAME)
  private String envgroupHostname;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_GROUP_BY_TIME_UNIT = "groupByTimeUnit";
  @SerializedName(SERIALIZED_NAME_GROUP_BY_TIME_UNIT)
  private String groupByTimeUnit;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<GoogleCloudApigeeV1SecurityReportQueryMetric> metrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_MIME_TYPE = "mimeType";
  @SerializedName(SERIALIZED_NAME_MIME_TYPE)
  private String mimeType;

  public static final String SERIALIZED_NAME_REPORT_DEFINITION_ID = "reportDefinitionId";
  @SerializedName(SERIALIZED_NAME_REPORT_DEFINITION_ID)
  private String reportDefinitionId;

  public static final String SERIALIZED_NAME_TIME_RANGE = "timeRange";
  @SerializedName(SERIALIZED_NAME_TIME_RANGE)
  private Object timeRange = null;

  public GoogleCloudApigeeV1SecurityReportQuery() {
  }

  public GoogleCloudApigeeV1SecurityReportQuery csvDelimiter(String csvDelimiter) {
    this.csvDelimiter = csvDelimiter;
    return this;
  }

  /**
   * Delimiter used in the CSV file, if &#x60;outputFormat&#x60; is set to &#x60;csv&#x60;. Defaults to the &#x60;,&#x60; (comma) character. Supported delimiter characters include comma (&#x60;,&#x60;), pipe (&#x60;|&#x60;), and tab (&#x60;\\t&#x60;).
   * @return csvDelimiter
   */
  @javax.annotation.Nullable
  public String getCsvDelimiter() {
    return csvDelimiter;
  }

  public void setCsvDelimiter(String csvDelimiter) {
    this.csvDelimiter = csvDelimiter;
  }


  public GoogleCloudApigeeV1SecurityReportQuery dimensions(List<String> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public GoogleCloudApigeeV1SecurityReportQuery addDimensionsItem(String dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<String> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<String> dimensions) {
    this.dimensions = dimensions;
  }


  public GoogleCloudApigeeV1SecurityReportQuery displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Security Report display name which users can specify.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudApigeeV1SecurityReportQuery envgroupHostname(String envgroupHostname) {
    this.envgroupHostname = envgroupHostname;
    return this;
  }

  /**
   * Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostSecurityReport where analytics data will be grouped by organization and hostname.
   * @return envgroupHostname
   */
  @javax.annotation.Nullable
  public String getEnvgroupHostname() {
    return envgroupHostname;
  }

  public void setEnvgroupHostname(String envgroupHostname) {
    this.envgroupHostname = envgroupHostname;
  }


  public GoogleCloudApigeeV1SecurityReportQuery filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudApigeeV1SecurityReportQuery groupByTimeUnit(String groupByTimeUnit) {
    this.groupByTimeUnit = groupByTimeUnit;
    return this;
  }

  /**
   * Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.
   * @return groupByTimeUnit
   */
  @javax.annotation.Nullable
  public String getGroupByTimeUnit() {
    return groupByTimeUnit;
  }

  public void setGroupByTimeUnit(String groupByTimeUnit) {
    this.groupByTimeUnit = groupByTimeUnit;
  }


  public GoogleCloudApigeeV1SecurityReportQuery limit(Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Maximum number of rows that can be returned in the result.
   * @return limit
   */
  @javax.annotation.Nullable
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public GoogleCloudApigeeV1SecurityReportQuery metrics(List<GoogleCloudApigeeV1SecurityReportQueryMetric> metrics) {
    this.metrics = metrics;
    return this;
  }

  public GoogleCloudApigeeV1SecurityReportQuery addMetricsItem(GoogleCloudApigeeV1SecurityReportQueryMetric metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

  /**
   * A list of Metrics.
   * @return metrics
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1SecurityReportQueryMetric> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<GoogleCloudApigeeV1SecurityReportQueryMetric> metrics) {
    this.metrics = metrics;
  }


  public GoogleCloudApigeeV1SecurityReportQuery mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * Valid values include: &#x60;csv&#x60; or &#x60;json&#x60;. Defaults to &#x60;json&#x60;. Note: Configure the delimiter for CSV output using the csvDelimiter property.
   * @return mimeType
   */
  @javax.annotation.Nullable
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public GoogleCloudApigeeV1SecurityReportQuery reportDefinitionId(String reportDefinitionId) {
    this.reportDefinitionId = reportDefinitionId;
    return this;
  }

  /**
   * Report Definition ID.
   * @return reportDefinitionId
   */
  @javax.annotation.Nullable
  public String getReportDefinitionId() {
    return reportDefinitionId;
  }

  public void setReportDefinitionId(String reportDefinitionId) {
    this.reportDefinitionId = reportDefinitionId;
  }


  public GoogleCloudApigeeV1SecurityReportQuery timeRange(Object timeRange) {
    this.timeRange = timeRange;
    return this;
  }

  /**
   * Required. Time range for the query. Can use the following predefined strings to specify the time range: &#x60;last60minutes&#x60; &#x60;last24hours&#x60; &#x60;last7days&#x60; Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: \&quot;timeRange\&quot;: { \&quot;start\&quot;: \&quot;2018-07-29T00:13:00Z\&quot;, \&quot;end\&quot;: \&quot;2018-08-01T00:18:00Z\&quot; }
   * @return timeRange
   */
  @javax.annotation.Nullable
  public Object getTimeRange() {
    return timeRange;
  }

  public void setTimeRange(Object timeRange) {
    this.timeRange = timeRange;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1SecurityReportQuery googleCloudApigeeV1SecurityReportQuery = (GoogleCloudApigeeV1SecurityReportQuery) o;
    return Objects.equals(this.csvDelimiter, googleCloudApigeeV1SecurityReportQuery.csvDelimiter) &&
        Objects.equals(this.dimensions, googleCloudApigeeV1SecurityReportQuery.dimensions) &&
        Objects.equals(this.displayName, googleCloudApigeeV1SecurityReportQuery.displayName) &&
        Objects.equals(this.envgroupHostname, googleCloudApigeeV1SecurityReportQuery.envgroupHostname) &&
        Objects.equals(this.filter, googleCloudApigeeV1SecurityReportQuery.filter) &&
        Objects.equals(this.groupByTimeUnit, googleCloudApigeeV1SecurityReportQuery.groupByTimeUnit) &&
        Objects.equals(this.limit, googleCloudApigeeV1SecurityReportQuery.limit) &&
        Objects.equals(this.metrics, googleCloudApigeeV1SecurityReportQuery.metrics) &&
        Objects.equals(this.mimeType, googleCloudApigeeV1SecurityReportQuery.mimeType) &&
        Objects.equals(this.reportDefinitionId, googleCloudApigeeV1SecurityReportQuery.reportDefinitionId) &&
        Objects.equals(this.timeRange, googleCloudApigeeV1SecurityReportQuery.timeRange);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(csvDelimiter, dimensions, displayName, envgroupHostname, filter, groupByTimeUnit, limit, metrics, mimeType, reportDefinitionId, timeRange);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1SecurityReportQuery {\n");
    sb.append("    csvDelimiter: ").append(toIndentedString(csvDelimiter)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    envgroupHostname: ").append(toIndentedString(envgroupHostname)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    groupByTimeUnit: ").append(toIndentedString(groupByTimeUnit)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    reportDefinitionId: ").append(toIndentedString(reportDefinitionId)).append("\n");
    sb.append("    timeRange: ").append(toIndentedString(timeRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("csvDelimiter");
    openapiFields.add("dimensions");
    openapiFields.add("displayName");
    openapiFields.add("envgroupHostname");
    openapiFields.add("filter");
    openapiFields.add("groupByTimeUnit");
    openapiFields.add("limit");
    openapiFields.add("metrics");
    openapiFields.add("mimeType");
    openapiFields.add("reportDefinitionId");
    openapiFields.add("timeRange");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1SecurityReportQuery
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1SecurityReportQuery.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1SecurityReportQuery is not found in the empty JSON string", GoogleCloudApigeeV1SecurityReportQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1SecurityReportQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1SecurityReportQuery` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("csvDelimiter") != null && !jsonObj.get("csvDelimiter").isJsonNull()) && !jsonObj.get("csvDelimiter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `csvDelimiter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("csvDelimiter").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull() && !jsonObj.get("dimensions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("envgroupHostname") != null && !jsonObj.get("envgroupHostname").isJsonNull()) && !jsonObj.get("envgroupHostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `envgroupHostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("envgroupHostname").toString()));
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("groupByTimeUnit") != null && !jsonObj.get("groupByTimeUnit").isJsonNull()) && !jsonObj.get("groupByTimeUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupByTimeUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupByTimeUnit").toString()));
      }
      if (jsonObj.get("metrics") != null && !jsonObj.get("metrics").isJsonNull()) {
        JsonArray jsonArraymetrics = jsonObj.getAsJsonArray("metrics");
        if (jsonArraymetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metrics` to be an array in the JSON string but got `%s`", jsonObj.get("metrics").toString()));
          }

          // validate the optional field `metrics` (array)
          for (int i = 0; i < jsonArraymetrics.size(); i++) {
            GoogleCloudApigeeV1SecurityReportQueryMetric.validateJsonElement(jsonArraymetrics.get(i));
          };
        }
      }
      if ((jsonObj.get("mimeType") != null && !jsonObj.get("mimeType").isJsonNull()) && !jsonObj.get("mimeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mimeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mimeType").toString()));
      }
      if ((jsonObj.get("reportDefinitionId") != null && !jsonObj.get("reportDefinitionId").isJsonNull()) && !jsonObj.get("reportDefinitionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportDefinitionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportDefinitionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1SecurityReportQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1SecurityReportQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1SecurityReportQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1SecurityReportQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1SecurityReportQuery>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1SecurityReportQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1SecurityReportQuery read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1SecurityReportQuery given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1SecurityReportQuery
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1SecurityReportQuery
   */
  public static GoogleCloudApigeeV1SecurityReportQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1SecurityReportQuery.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1SecurityReportQuery to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

