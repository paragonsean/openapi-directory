/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1MetricAggregation;
import org.openapitools.client.model.GoogleTypeInterval;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QueryTimeSeriesStatsRequest represents a query that returns a collection of time series sequences grouped by their values.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1QueryTimeSeriesStatsRequest {
  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<String> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<GoogleCloudApigeeV1MetricAggregation> metrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_TIME_RANGE = "timeRange";
  @SerializedName(SERIALIZED_NAME_TIME_RANGE)
  private GoogleTypeInterval timeRange;

  /**
   * Order the sequences in increasing or decreasing order of timestamps. Default is descending order of timestamps (latest first).
   */
  @JsonAdapter(TimestampOrderEnum.Adapter.class)
  public enum TimestampOrderEnum {
    ORDER_UNSPECIFIED("ORDER_UNSPECIFIED"),
    
    ASCENDING("ASCENDING"),
    
    DESCENDING("DESCENDING");

    private String value;

    TimestampOrderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TimestampOrderEnum fromValue(String value) {
      for (TimestampOrderEnum b : TimestampOrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TimestampOrderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TimestampOrderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TimestampOrderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TimestampOrderEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TimestampOrderEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TIMESTAMP_ORDER = "timestampOrder";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_ORDER)
  private TimestampOrderEnum timestampOrder;

  /**
   * Time buckets to group the stats by.
   */
  @JsonAdapter(WindowSizeEnum.Adapter.class)
  public enum WindowSizeEnum {
    WINDOW_SIZE_UNSPECIFIED("WINDOW_SIZE_UNSPECIFIED"),
    
    MINUTE("MINUTE"),
    
    HOUR("HOUR"),
    
    DAY("DAY"),
    
    MONTH("MONTH");

    private String value;

    WindowSizeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WindowSizeEnum fromValue(String value) {
      for (WindowSizeEnum b : WindowSizeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WindowSizeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WindowSizeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WindowSizeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WindowSizeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      WindowSizeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_WINDOW_SIZE = "windowSize";
  @SerializedName(SERIALIZED_NAME_WINDOW_SIZE)
  private WindowSizeEnum windowSize;

  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest() {
  }

  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest dimensions(List<String> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest addDimensionsItem(String dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * List of dimension names to group the aggregations by. If no dimensions are passed, a single trend line representing the requested metric aggregations grouped by environment is returned.
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<String> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<String> dimensions) {
    this.dimensions = dimensions;
  }


  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Filter further on specific dimension values. Follows the same grammar as custom report&#39;s filter expressions. Example, apiproxy eq &#39;foobar&#39;. https://cloud.google.com/apigee/docs/api-platform/analytics/analytics-reference#filters
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest metrics(List<GoogleCloudApigeeV1MetricAggregation> metrics) {
    this.metrics = metrics;
    return this;
  }

  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest addMetricsItem(GoogleCloudApigeeV1MetricAggregation metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

  /**
   * Required. List of metrics and their aggregations.
   * @return metrics
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1MetricAggregation> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<GoogleCloudApigeeV1MetricAggregation> metrics) {
    this.metrics = metrics;
  }


  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Page size represents the number of time series sequences, one per unique set of dimensions and their values.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * Page token stands for a specific collection of time series sequences.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest timeRange(GoogleTypeInterval timeRange) {
    this.timeRange = timeRange;
    return this;
  }

  /**
   * Get timeRange
   * @return timeRange
   */
  @javax.annotation.Nullable
  public GoogleTypeInterval getTimeRange() {
    return timeRange;
  }

  public void setTimeRange(GoogleTypeInterval timeRange) {
    this.timeRange = timeRange;
  }


  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest timestampOrder(TimestampOrderEnum timestampOrder) {
    this.timestampOrder = timestampOrder;
    return this;
  }

  /**
   * Order the sequences in increasing or decreasing order of timestamps. Default is descending order of timestamps (latest first).
   * @return timestampOrder
   */
  @javax.annotation.Nullable
  public TimestampOrderEnum getTimestampOrder() {
    return timestampOrder;
  }

  public void setTimestampOrder(TimestampOrderEnum timestampOrder) {
    this.timestampOrder = timestampOrder;
  }


  public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest windowSize(WindowSizeEnum windowSize) {
    this.windowSize = windowSize;
    return this;
  }

  /**
   * Time buckets to group the stats by.
   * @return windowSize
   */
  @javax.annotation.Nullable
  public WindowSizeEnum getWindowSize() {
    return windowSize;
  }

  public void setWindowSize(WindowSizeEnum windowSize) {
    this.windowSize = windowSize;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1QueryTimeSeriesStatsRequest googleCloudApigeeV1QueryTimeSeriesStatsRequest = (GoogleCloudApigeeV1QueryTimeSeriesStatsRequest) o;
    return Objects.equals(this.dimensions, googleCloudApigeeV1QueryTimeSeriesStatsRequest.dimensions) &&
        Objects.equals(this.filter, googleCloudApigeeV1QueryTimeSeriesStatsRequest.filter) &&
        Objects.equals(this.metrics, googleCloudApigeeV1QueryTimeSeriesStatsRequest.metrics) &&
        Objects.equals(this.pageSize, googleCloudApigeeV1QueryTimeSeriesStatsRequest.pageSize) &&
        Objects.equals(this.pageToken, googleCloudApigeeV1QueryTimeSeriesStatsRequest.pageToken) &&
        Objects.equals(this.timeRange, googleCloudApigeeV1QueryTimeSeriesStatsRequest.timeRange) &&
        Objects.equals(this.timestampOrder, googleCloudApigeeV1QueryTimeSeriesStatsRequest.timestampOrder) &&
        Objects.equals(this.windowSize, googleCloudApigeeV1QueryTimeSeriesStatsRequest.windowSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimensions, filter, metrics, pageSize, pageToken, timeRange, timestampOrder, windowSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1QueryTimeSeriesStatsRequest {\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    timeRange: ").append(toIndentedString(timeRange)).append("\n");
    sb.append("    timestampOrder: ").append(toIndentedString(timestampOrder)).append("\n");
    sb.append("    windowSize: ").append(toIndentedString(windowSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dimensions");
    openapiFields.add("filter");
    openapiFields.add("metrics");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("timeRange");
    openapiFields.add("timestampOrder");
    openapiFields.add("windowSize");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1QueryTimeSeriesStatsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1QueryTimeSeriesStatsRequest is not found in the empty JSON string", GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1QueryTimeSeriesStatsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull() && !jsonObj.get("dimensions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if (jsonObj.get("metrics") != null && !jsonObj.get("metrics").isJsonNull()) {
        JsonArray jsonArraymetrics = jsonObj.getAsJsonArray("metrics");
        if (jsonArraymetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metrics` to be an array in the JSON string but got `%s`", jsonObj.get("metrics").toString()));
          }

          // validate the optional field `metrics` (array)
          for (int i = 0; i < jsonArraymetrics.size(); i++) {
            GoogleCloudApigeeV1MetricAggregation.validateJsonElement(jsonArraymetrics.get(i));
          };
        }
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      // validate the optional field `timeRange`
      if (jsonObj.get("timeRange") != null && !jsonObj.get("timeRange").isJsonNull()) {
        GoogleTypeInterval.validateJsonElement(jsonObj.get("timeRange"));
      }
      if ((jsonObj.get("timestampOrder") != null && !jsonObj.get("timestampOrder").isJsonNull()) && !jsonObj.get("timestampOrder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestampOrder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timestampOrder").toString()));
      }
      // validate the optional field `timestampOrder`
      if (jsonObj.get("timestampOrder") != null && !jsonObj.get("timestampOrder").isJsonNull()) {
        TimestampOrderEnum.validateJsonElement(jsonObj.get("timestampOrder"));
      }
      if ((jsonObj.get("windowSize") != null && !jsonObj.get("windowSize").isJsonNull()) && !jsonObj.get("windowSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `windowSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("windowSize").toString()));
      }
      // validate the optional field `windowSize`
      if (jsonObj.get("windowSize") != null && !jsonObj.get("windowSize").isJsonNull()) {
        WindowSizeEnum.validateJsonElement(jsonObj.get("windowSize"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1QueryTimeSeriesStatsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1QueryTimeSeriesStatsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1QueryTimeSeriesStatsRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1QueryTimeSeriesStatsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1QueryTimeSeriesStatsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1QueryTimeSeriesStatsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1QueryTimeSeriesStatsRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1QueryTimeSeriesStatsRequest
   */
  public static GoogleCloudApigeeV1QueryTimeSeriesStatsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1QueryTimeSeriesStatsRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1QueryTimeSeriesStatsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

