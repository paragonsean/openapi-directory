/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1CustomReportMetric;
import org.openapitools.client.model.GoogleCloudApigeeV1ReportProperty;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudApigeeV1CustomReport
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1CustomReport {
  public static final String SERIALIZED_NAME_CHART_TYPE = "chartType";
  @SerializedName(SERIALIZED_NAME_CHART_TYPE)
  private String chartType;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<String> comments = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<String> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private String environment;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_FROM_TIME = "fromTime";
  @SerializedName(SERIALIZED_NAME_FROM_TIME)
  private String fromTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "lastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private String lastModifiedAt;

  public static final String SERIALIZED_NAME_LAST_VIEWED_AT = "lastViewedAt";
  @SerializedName(SERIALIZED_NAME_LAST_VIEWED_AT)
  private String lastViewedAt;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private String limit;

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<GoogleCloudApigeeV1CustomReportMetric> metrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private String offset;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<GoogleCloudApigeeV1ReportProperty> properties = new ArrayList<>();

  public static final String SERIALIZED_NAME_SORT_BY_COLS = "sortByCols";
  @SerializedName(SERIALIZED_NAME_SORT_BY_COLS)
  private List<String> sortByCols = new ArrayList<>();

  public static final String SERIALIZED_NAME_SORT_ORDER = "sortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private String sortOrder;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIME_UNIT = "timeUnit";
  @SerializedName(SERIALIZED_NAME_TIME_UNIT)
  private String timeUnit;

  public static final String SERIALIZED_NAME_TO_TIME = "toTime";
  @SerializedName(SERIALIZED_NAME_TO_TIME)
  private String toTime;

  public static final String SERIALIZED_NAME_TOPK = "topk";
  @SerializedName(SERIALIZED_NAME_TOPK)
  private String topk;

  public GoogleCloudApigeeV1CustomReport() {
  }

  public GoogleCloudApigeeV1CustomReport(
     String createdAt, 
     String environment, 
     String lastModifiedAt, 
     String lastViewedAt, 
     String organization
  ) {
    this();
    this.createdAt = createdAt;
    this.environment = environment;
    this.lastModifiedAt = lastModifiedAt;
    this.lastViewedAt = lastViewedAt;
    this.organization = organization;
  }

  public GoogleCloudApigeeV1CustomReport chartType(String chartType) {
    this.chartType = chartType;
    return this;
  }

  /**
   * This field contains the chart type for the report
   * @return chartType
   */
  @javax.annotation.Nullable
  public String getChartType() {
    return chartType;
  }

  public void setChartType(String chartType) {
    this.chartType = chartType;
  }


  public GoogleCloudApigeeV1CustomReport comments(List<String> comments) {
    this.comments = comments;
    return this;
  }

  public GoogleCloudApigeeV1CustomReport addCommentsItem(String commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * Legacy field: not used. This field contains a list of comments associated with custom report
   * @return comments
   */
  @javax.annotation.Nullable
  public List<String> getComments() {
    return comments;
  }

  public void setComments(List<String> comments) {
    this.comments = comments;
  }


  /**
   * Output only. Unix time when the app was created json key: createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }



  public GoogleCloudApigeeV1CustomReport dimensions(List<String> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public GoogleCloudApigeeV1CustomReport addDimensionsItem(String dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * This contains the list of dimensions for the report
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<String> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<String> dimensions) {
    this.dimensions = dimensions;
  }


  public GoogleCloudApigeeV1CustomReport displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * This is the display name for the report
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Output only. Environment name
   * @return environment
   */
  @javax.annotation.Nullable
  public String getEnvironment() {
    return environment;
  }



  public GoogleCloudApigeeV1CustomReport filter(String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * This field contains the filter expression
   * @return filter
   */
  @javax.annotation.Nullable
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }


  public GoogleCloudApigeeV1CustomReport fromTime(String fromTime) {
    this.fromTime = fromTime;
    return this;
  }

  /**
   * Legacy field: not used. Contains the from time for the report
   * @return fromTime
   */
  @javax.annotation.Nullable
  public String getFromTime() {
    return fromTime;
  }

  public void setFromTime(String fromTime) {
    this.fromTime = fromTime;
  }


  /**
   * Output only. Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public String getLastModifiedAt() {
    return lastModifiedAt;
  }



  /**
   * Output only. Last viewed time of this entity as milliseconds since epoch
   * @return lastViewedAt
   */
  @javax.annotation.Nullable
  public String getLastViewedAt() {
    return lastViewedAt;
  }



  public GoogleCloudApigeeV1CustomReport limit(String limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Legacy field: not used This field contains the limit for the result retrieved
   * @return limit
   */
  @javax.annotation.Nullable
  public String getLimit() {
    return limit;
  }

  public void setLimit(String limit) {
    this.limit = limit;
  }


  public GoogleCloudApigeeV1CustomReport metrics(List<GoogleCloudApigeeV1CustomReportMetric> metrics) {
    this.metrics = metrics;
    return this;
  }

  public GoogleCloudApigeeV1CustomReport addMetricsItem(GoogleCloudApigeeV1CustomReportMetric metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

  /**
   * Required. This contains the list of metrics
   * @return metrics
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1CustomReportMetric> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<GoogleCloudApigeeV1CustomReportMetric> metrics) {
    this.metrics = metrics;
  }


  public GoogleCloudApigeeV1CustomReport name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Unique identifier for the report T his is a legacy field used to encode custom report unique id
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudApigeeV1CustomReport offset(String offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Legacy field: not used. This field contains the offset for the data
   * @return offset
   */
  @javax.annotation.Nullable
  public String getOffset() {
    return offset;
  }

  public void setOffset(String offset) {
    this.offset = offset;
  }


  /**
   * Output only. Organization name
   * @return organization
   */
  @javax.annotation.Nullable
  public String getOrganization() {
    return organization;
  }



  public GoogleCloudApigeeV1CustomReport properties(List<GoogleCloudApigeeV1ReportProperty> properties) {
    this.properties = properties;
    return this;
  }

  public GoogleCloudApigeeV1CustomReport addPropertiesItem(GoogleCloudApigeeV1ReportProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

  /**
   * This field contains report properties such as ui metadata etc.
   * @return properties
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1ReportProperty> getProperties() {
    return properties;
  }

  public void setProperties(List<GoogleCloudApigeeV1ReportProperty> properties) {
    this.properties = properties;
  }


  public GoogleCloudApigeeV1CustomReport sortByCols(List<String> sortByCols) {
    this.sortByCols = sortByCols;
    return this;
  }

  public GoogleCloudApigeeV1CustomReport addSortByColsItem(String sortByColsItem) {
    if (this.sortByCols == null) {
      this.sortByCols = new ArrayList<>();
    }
    this.sortByCols.add(sortByColsItem);
    return this;
  }

  /**
   * Legacy field: not used much. Contains the list of sort by columns
   * @return sortByCols
   */
  @javax.annotation.Nullable
  public List<String> getSortByCols() {
    return sortByCols;
  }

  public void setSortByCols(List<String> sortByCols) {
    this.sortByCols = sortByCols;
  }


  public GoogleCloudApigeeV1CustomReport sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Legacy field: not used much. Contains the sort order for the sort columns
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }


  public GoogleCloudApigeeV1CustomReport tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public GoogleCloudApigeeV1CustomReport addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Legacy field: not used. This field contains a list of tags associated with custom report
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public GoogleCloudApigeeV1CustomReport timeUnit(String timeUnit) {
    this.timeUnit = timeUnit;
    return this;
  }

  /**
   * This field contains the time unit of aggregation for the report
   * @return timeUnit
   */
  @javax.annotation.Nullable
  public String getTimeUnit() {
    return timeUnit;
  }

  public void setTimeUnit(String timeUnit) {
    this.timeUnit = timeUnit;
  }


  public GoogleCloudApigeeV1CustomReport toTime(String toTime) {
    this.toTime = toTime;
    return this;
  }

  /**
   * Legacy field: not used. Contains the end time for the report
   * @return toTime
   */
  @javax.annotation.Nullable
  public String getToTime() {
    return toTime;
  }

  public void setToTime(String toTime) {
    this.toTime = toTime;
  }


  public GoogleCloudApigeeV1CustomReport topk(String topk) {
    this.topk = topk;
    return this;
  }

  /**
   * Legacy field: not used. This field contains the top k parameter value for restricting the result
   * @return topk
   */
  @javax.annotation.Nullable
  public String getTopk() {
    return topk;
  }

  public void setTopk(String topk) {
    this.topk = topk;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1CustomReport googleCloudApigeeV1CustomReport = (GoogleCloudApigeeV1CustomReport) o;
    return Objects.equals(this.chartType, googleCloudApigeeV1CustomReport.chartType) &&
        Objects.equals(this.comments, googleCloudApigeeV1CustomReport.comments) &&
        Objects.equals(this.createdAt, googleCloudApigeeV1CustomReport.createdAt) &&
        Objects.equals(this.dimensions, googleCloudApigeeV1CustomReport.dimensions) &&
        Objects.equals(this.displayName, googleCloudApigeeV1CustomReport.displayName) &&
        Objects.equals(this.environment, googleCloudApigeeV1CustomReport.environment) &&
        Objects.equals(this.filter, googleCloudApigeeV1CustomReport.filter) &&
        Objects.equals(this.fromTime, googleCloudApigeeV1CustomReport.fromTime) &&
        Objects.equals(this.lastModifiedAt, googleCloudApigeeV1CustomReport.lastModifiedAt) &&
        Objects.equals(this.lastViewedAt, googleCloudApigeeV1CustomReport.lastViewedAt) &&
        Objects.equals(this.limit, googleCloudApigeeV1CustomReport.limit) &&
        Objects.equals(this.metrics, googleCloudApigeeV1CustomReport.metrics) &&
        Objects.equals(this.name, googleCloudApigeeV1CustomReport.name) &&
        Objects.equals(this.offset, googleCloudApigeeV1CustomReport.offset) &&
        Objects.equals(this.organization, googleCloudApigeeV1CustomReport.organization) &&
        Objects.equals(this.properties, googleCloudApigeeV1CustomReport.properties) &&
        Objects.equals(this.sortByCols, googleCloudApigeeV1CustomReport.sortByCols) &&
        Objects.equals(this.sortOrder, googleCloudApigeeV1CustomReport.sortOrder) &&
        Objects.equals(this.tags, googleCloudApigeeV1CustomReport.tags) &&
        Objects.equals(this.timeUnit, googleCloudApigeeV1CustomReport.timeUnit) &&
        Objects.equals(this.toTime, googleCloudApigeeV1CustomReport.toTime) &&
        Objects.equals(this.topk, googleCloudApigeeV1CustomReport.topk);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chartType, comments, createdAt, dimensions, displayName, environment, filter, fromTime, lastModifiedAt, lastViewedAt, limit, metrics, name, offset, organization, properties, sortByCols, sortOrder, tags, timeUnit, toTime, topk);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1CustomReport {\n");
    sb.append("    chartType: ").append(toIndentedString(chartType)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    fromTime: ").append(toIndentedString(fromTime)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    lastViewedAt: ").append(toIndentedString(lastViewedAt)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    sortByCols: ").append(toIndentedString(sortByCols)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
    sb.append("    toTime: ").append(toIndentedString(toTime)).append("\n");
    sb.append("    topk: ").append(toIndentedString(topk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chartType");
    openapiFields.add("comments");
    openapiFields.add("createdAt");
    openapiFields.add("dimensions");
    openapiFields.add("displayName");
    openapiFields.add("environment");
    openapiFields.add("filter");
    openapiFields.add("fromTime");
    openapiFields.add("lastModifiedAt");
    openapiFields.add("lastViewedAt");
    openapiFields.add("limit");
    openapiFields.add("metrics");
    openapiFields.add("name");
    openapiFields.add("offset");
    openapiFields.add("organization");
    openapiFields.add("properties");
    openapiFields.add("sortByCols");
    openapiFields.add("sortOrder");
    openapiFields.add("tags");
    openapiFields.add("timeUnit");
    openapiFields.add("toTime");
    openapiFields.add("topk");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1CustomReport
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1CustomReport.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1CustomReport is not found in the empty JSON string", GoogleCloudApigeeV1CustomReport.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1CustomReport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1CustomReport` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("chartType") != null && !jsonObj.get("chartType").isJsonNull()) && !jsonObj.get("chartType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chartType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chartType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull() && !jsonObj.get("comments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be an array in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull() && !jsonObj.get("dimensions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("environment") != null && !jsonObj.get("environment").isJsonNull()) && !jsonObj.get("environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment").toString()));
      }
      if ((jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) && !jsonObj.get("filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter").toString()));
      }
      if ((jsonObj.get("fromTime") != null && !jsonObj.get("fromTime").isJsonNull()) && !jsonObj.get("fromTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fromTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fromTime").toString()));
      }
      if ((jsonObj.get("lastModifiedAt") != null && !jsonObj.get("lastModifiedAt").isJsonNull()) && !jsonObj.get("lastModifiedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedAt").toString()));
      }
      if ((jsonObj.get("lastViewedAt") != null && !jsonObj.get("lastViewedAt").isJsonNull()) && !jsonObj.get("lastViewedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastViewedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastViewedAt").toString()));
      }
      if ((jsonObj.get("limit") != null && !jsonObj.get("limit").isJsonNull()) && !jsonObj.get("limit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limit").toString()));
      }
      if (jsonObj.get("metrics") != null && !jsonObj.get("metrics").isJsonNull()) {
        JsonArray jsonArraymetrics = jsonObj.getAsJsonArray("metrics");
        if (jsonArraymetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metrics` to be an array in the JSON string but got `%s`", jsonObj.get("metrics").toString()));
          }

          // validate the optional field `metrics` (array)
          for (int i = 0; i < jsonArraymetrics.size(); i++) {
            GoogleCloudApigeeV1CustomReportMetric.validateJsonElement(jsonArraymetrics.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("offset") != null && !jsonObj.get("offset").isJsonNull()) && !jsonObj.get("offset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offset").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        JsonArray jsonArrayproperties = jsonObj.getAsJsonArray("properties");
        if (jsonArrayproperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("properties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `properties` to be an array in the JSON string but got `%s`", jsonObj.get("properties").toString()));
          }

          // validate the optional field `properties` (array)
          for (int i = 0; i < jsonArrayproperties.size(); i++) {
            GoogleCloudApigeeV1ReportProperty.validateJsonElement(jsonArrayproperties.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sortByCols") != null && !jsonObj.get("sortByCols").isJsonNull() && !jsonObj.get("sortByCols").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sortByCols` to be an array in the JSON string but got `%s`", jsonObj.get("sortByCols").toString()));
      }
      if ((jsonObj.get("sortOrder") != null && !jsonObj.get("sortOrder").isJsonNull()) && !jsonObj.get("sortOrder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sortOrder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sortOrder").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("timeUnit") != null && !jsonObj.get("timeUnit").isJsonNull()) && !jsonObj.get("timeUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeUnit").toString()));
      }
      if ((jsonObj.get("toTime") != null && !jsonObj.get("toTime").isJsonNull()) && !jsonObj.get("toTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toTime").toString()));
      }
      if ((jsonObj.get("topk") != null && !jsonObj.get("topk").isJsonNull()) && !jsonObj.get("topk").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topk` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topk").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1CustomReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1CustomReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1CustomReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1CustomReport.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1CustomReport>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1CustomReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1CustomReport read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1CustomReport given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1CustomReport
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1CustomReport
   */
  public static GoogleCloudApigeeV1CustomReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1CustomReport.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1CustomReport to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

