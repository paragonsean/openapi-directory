/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The following are a list of conditions. A valid SecurityAction must contain at least one condition. Within a condition, each element is ORed. Across conditions elements are ANDed. For example if a SecurityAction has the following: ip_address_ranges: [\&quot;ip1\&quot;, \&quot;ip2\&quot;] and bot_reasons: [\&quot;Flooder\&quot;, \&quot;Robot Abuser\&quot;] then this is interpreted as: enforce the action if the incoming request has ((ip_address_ranges &#x3D; \&quot;ip1\&quot; OR ip_address_ranges &#x3D; \&quot;ip2\&quot;) AND (bot_reasons&#x3D;\&quot;Flooder\&quot; OR bot_reasons&#x3D;\&quot;Robot Abuser\&quot;)). Conditions other than ip_address_ranges and bot_reasons cannot be ANDed.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1SecurityActionConditionConfig {
  public static final String SERIALIZED_NAME_ACCESS_TOKENS = "accessTokens";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKENS)
  private List<String> accessTokens = new ArrayList<>();

  public static final String SERIALIZED_NAME_API_KEYS = "apiKeys";
  @SerializedName(SERIALIZED_NAME_API_KEYS)
  private List<String> apiKeys = new ArrayList<>();

  public static final String SERIALIZED_NAME_API_PRODUCTS = "apiProducts";
  @SerializedName(SERIALIZED_NAME_API_PRODUCTS)
  private List<String> apiProducts = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOT_REASONS = "botReasons";
  @SerializedName(SERIALIZED_NAME_BOT_REASONS)
  private List<String> botReasons = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEVELOPER_APPS = "developerApps";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_APPS)
  private List<String> developerApps = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEVELOPERS = "developers";
  @SerializedName(SERIALIZED_NAME_DEVELOPERS)
  private List<String> developers = new ArrayList<>();

  public static final String SERIALIZED_NAME_IP_ADDRESS_RANGES = "ipAddressRanges";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS_RANGES)
  private List<String> ipAddressRanges = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_AGENTS = "userAgents";
  @SerializedName(SERIALIZED_NAME_USER_AGENTS)
  private List<String> userAgents = new ArrayList<>();

  public GoogleCloudApigeeV1SecurityActionConditionConfig() {
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig accessTokens(List<String> accessTokens) {
    this.accessTokens = accessTokens;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addAccessTokensItem(String accessTokensItem) {
    if (this.accessTokens == null) {
      this.accessTokens = new ArrayList<>();
    }
    this.accessTokens.add(accessTokensItem);
    return this;
  }

  /**
   * Optional. A list of access_tokens. Limit 1000 per action.
   * @return accessTokens
   */
  @javax.annotation.Nullable
  public List<String> getAccessTokens() {
    return accessTokens;
  }

  public void setAccessTokens(List<String> accessTokens) {
    this.accessTokens = accessTokens;
  }


  public GoogleCloudApigeeV1SecurityActionConditionConfig apiKeys(List<String> apiKeys) {
    this.apiKeys = apiKeys;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addApiKeysItem(String apiKeysItem) {
    if (this.apiKeys == null) {
      this.apiKeys = new ArrayList<>();
    }
    this.apiKeys.add(apiKeysItem);
    return this;
  }

  /**
   * Optional. A list of API keys. Limit 1000 per action.
   * @return apiKeys
   */
  @javax.annotation.Nullable
  public List<String> getApiKeys() {
    return apiKeys;
  }

  public void setApiKeys(List<String> apiKeys) {
    this.apiKeys = apiKeys;
  }


  public GoogleCloudApigeeV1SecurityActionConditionConfig apiProducts(List<String> apiProducts) {
    this.apiProducts = apiProducts;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addApiProductsItem(String apiProductsItem) {
    if (this.apiProducts == null) {
      this.apiProducts = new ArrayList<>();
    }
    this.apiProducts.add(apiProductsItem);
    return this;
  }

  /**
   * Optional. A list of API Products. Limit 1000 per action.
   * @return apiProducts
   */
  @javax.annotation.Nullable
  public List<String> getApiProducts() {
    return apiProducts;
  }

  public void setApiProducts(List<String> apiProducts) {
    this.apiProducts = apiProducts;
  }


  public GoogleCloudApigeeV1SecurityActionConditionConfig botReasons(List<String> botReasons) {
    this.botReasons = botReasons;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addBotReasonsItem(String botReasonsItem) {
    if (this.botReasons == null) {
      this.botReasons = new ArrayList<>();
    }
    this.botReasons.add(botReasonsItem);
    return this;
  }

  /**
   * Optional. A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper, OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper, Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
   * @return botReasons
   */
  @javax.annotation.Nullable
  public List<String> getBotReasons() {
    return botReasons;
  }

  public void setBotReasons(List<String> botReasons) {
    this.botReasons = botReasons;
  }


  public GoogleCloudApigeeV1SecurityActionConditionConfig developerApps(List<String> developerApps) {
    this.developerApps = developerApps;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addDeveloperAppsItem(String developerAppsItem) {
    if (this.developerApps == null) {
      this.developerApps = new ArrayList<>();
    }
    this.developerApps.add(developerAppsItem);
    return this;
  }

  /**
   * Optional. A list of developer apps. Limit 1000 per action.
   * @return developerApps
   */
  @javax.annotation.Nullable
  public List<String> getDeveloperApps() {
    return developerApps;
  }

  public void setDeveloperApps(List<String> developerApps) {
    this.developerApps = developerApps;
  }


  public GoogleCloudApigeeV1SecurityActionConditionConfig developers(List<String> developers) {
    this.developers = developers;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addDevelopersItem(String developersItem) {
    if (this.developers == null) {
      this.developers = new ArrayList<>();
    }
    this.developers.add(developersItem);
    return this;
  }

  /**
   * Optional. A list of developers. Limit 1000 per action.
   * @return developers
   */
  @javax.annotation.Nullable
  public List<String> getDevelopers() {
    return developers;
  }

  public void setDevelopers(List<String> developers) {
    this.developers = developers;
  }


  public GoogleCloudApigeeV1SecurityActionConditionConfig ipAddressRanges(List<String> ipAddressRanges) {
    this.ipAddressRanges = ipAddressRanges;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addIpAddressRangesItem(String ipAddressRangesItem) {
    if (this.ipAddressRanges == null) {
      this.ipAddressRanges = new ArrayList<>();
    }
    this.ipAddressRanges.add(ipAddressRangesItem);
    return this;
  }

  /**
   * Optional. A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
   * @return ipAddressRanges
   */
  @javax.annotation.Nullable
  public List<String> getIpAddressRanges() {
    return ipAddressRanges;
  }

  public void setIpAddressRanges(List<String> ipAddressRanges) {
    this.ipAddressRanges = ipAddressRanges;
  }


  public GoogleCloudApigeeV1SecurityActionConditionConfig userAgents(List<String> userAgents) {
    this.userAgents = userAgents;
    return this;
  }

  public GoogleCloudApigeeV1SecurityActionConditionConfig addUserAgentsItem(String userAgentsItem) {
    if (this.userAgents == null) {
      this.userAgents = new ArrayList<>();
    }
    this.userAgents.add(userAgentsItem);
    return this;
  }

  /**
   * Optional. A list of user agents to deny. We look for exact matches. Limit 50 per action.
   * @return userAgents
   */
  @javax.annotation.Nullable
  public List<String> getUserAgents() {
    return userAgents;
  }

  public void setUserAgents(List<String> userAgents) {
    this.userAgents = userAgents;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1SecurityActionConditionConfig googleCloudApigeeV1SecurityActionConditionConfig = (GoogleCloudApigeeV1SecurityActionConditionConfig) o;
    return Objects.equals(this.accessTokens, googleCloudApigeeV1SecurityActionConditionConfig.accessTokens) &&
        Objects.equals(this.apiKeys, googleCloudApigeeV1SecurityActionConditionConfig.apiKeys) &&
        Objects.equals(this.apiProducts, googleCloudApigeeV1SecurityActionConditionConfig.apiProducts) &&
        Objects.equals(this.botReasons, googleCloudApigeeV1SecurityActionConditionConfig.botReasons) &&
        Objects.equals(this.developerApps, googleCloudApigeeV1SecurityActionConditionConfig.developerApps) &&
        Objects.equals(this.developers, googleCloudApigeeV1SecurityActionConditionConfig.developers) &&
        Objects.equals(this.ipAddressRanges, googleCloudApigeeV1SecurityActionConditionConfig.ipAddressRanges) &&
        Objects.equals(this.userAgents, googleCloudApigeeV1SecurityActionConditionConfig.userAgents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessTokens, apiKeys, apiProducts, botReasons, developerApps, developers, ipAddressRanges, userAgents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1SecurityActionConditionConfig {\n");
    sb.append("    accessTokens: ").append(toIndentedString(accessTokens)).append("\n");
    sb.append("    apiKeys: ").append(toIndentedString(apiKeys)).append("\n");
    sb.append("    apiProducts: ").append(toIndentedString(apiProducts)).append("\n");
    sb.append("    botReasons: ").append(toIndentedString(botReasons)).append("\n");
    sb.append("    developerApps: ").append(toIndentedString(developerApps)).append("\n");
    sb.append("    developers: ").append(toIndentedString(developers)).append("\n");
    sb.append("    ipAddressRanges: ").append(toIndentedString(ipAddressRanges)).append("\n");
    sb.append("    userAgents: ").append(toIndentedString(userAgents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessTokens");
    openapiFields.add("apiKeys");
    openapiFields.add("apiProducts");
    openapiFields.add("botReasons");
    openapiFields.add("developerApps");
    openapiFields.add("developers");
    openapiFields.add("ipAddressRanges");
    openapiFields.add("userAgents");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1SecurityActionConditionConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1SecurityActionConditionConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1SecurityActionConditionConfig is not found in the empty JSON string", GoogleCloudApigeeV1SecurityActionConditionConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1SecurityActionConditionConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1SecurityActionConditionConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("accessTokens") != null && !jsonObj.get("accessTokens").isJsonNull() && !jsonObj.get("accessTokens").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessTokens` to be an array in the JSON string but got `%s`", jsonObj.get("accessTokens").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("apiKeys") != null && !jsonObj.get("apiKeys").isJsonNull() && !jsonObj.get("apiKeys").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiKeys` to be an array in the JSON string but got `%s`", jsonObj.get("apiKeys").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("apiProducts") != null && !jsonObj.get("apiProducts").isJsonNull() && !jsonObj.get("apiProducts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiProducts` to be an array in the JSON string but got `%s`", jsonObj.get("apiProducts").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("botReasons") != null && !jsonObj.get("botReasons").isJsonNull() && !jsonObj.get("botReasons").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `botReasons` to be an array in the JSON string but got `%s`", jsonObj.get("botReasons").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("developerApps") != null && !jsonObj.get("developerApps").isJsonNull() && !jsonObj.get("developerApps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `developerApps` to be an array in the JSON string but got `%s`", jsonObj.get("developerApps").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("developers") != null && !jsonObj.get("developers").isJsonNull() && !jsonObj.get("developers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `developers` to be an array in the JSON string but got `%s`", jsonObj.get("developers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ipAddressRanges") != null && !jsonObj.get("ipAddressRanges").isJsonNull() && !jsonObj.get("ipAddressRanges").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddressRanges` to be an array in the JSON string but got `%s`", jsonObj.get("ipAddressRanges").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("userAgents") != null && !jsonObj.get("userAgents").isJsonNull() && !jsonObj.get("userAgents").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `userAgents` to be an array in the JSON string but got `%s`", jsonObj.get("userAgents").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1SecurityActionConditionConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1SecurityActionConditionConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1SecurityActionConditionConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1SecurityActionConditionConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1SecurityActionConditionConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1SecurityActionConditionConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1SecurityActionConditionConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1SecurityActionConditionConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1SecurityActionConditionConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1SecurityActionConditionConfig
   */
  public static GoogleCloudApigeeV1SecurityActionConditionConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1SecurityActionConditionConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1SecurityActionConditionConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

