/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an SecurityIncident resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1SecurityIncident {
  public static final String SERIALIZED_NAME_DETECTION_TYPES = "detectionTypes";
  @SerializedName(SERIALIZED_NAME_DETECTION_TYPES)
  private List<String> detectionTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FIRST_DETECTED_TIME = "firstDetectedTime";
  @SerializedName(SERIALIZED_NAME_FIRST_DETECTED_TIME)
  private String firstDetectedTime;

  public static final String SERIALIZED_NAME_LAST_DETECTED_TIME = "lastDetectedTime";
  @SerializedName(SERIALIZED_NAME_LAST_DETECTED_TIME)
  private String lastDetectedTime;

  public static final String SERIALIZED_NAME_LAST_OBSERVABILITY_CHANGE_TIME = "lastObservabilityChangeTime";
  @SerializedName(SERIALIZED_NAME_LAST_OBSERVABILITY_CHANGE_TIME)
  private String lastObservabilityChangeTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Optional. Indicates if the user archived this incident.
   */
  @JsonAdapter(ObservabilityEnum.Adapter.class)
  public enum ObservabilityEnum {
    OBSERVABILITY_UNSPECIFIED("OBSERVABILITY_UNSPECIFIED"),
    
    ACTIVE("ACTIVE"),
    
    ARCHIVED("ARCHIVED");

    private String value;

    ObservabilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObservabilityEnum fromValue(String value) {
      for (ObservabilityEnum b : ObservabilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ObservabilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObservabilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObservabilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ObservabilityEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ObservabilityEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OBSERVABILITY = "observability";
  @SerializedName(SERIALIZED_NAME_OBSERVABILITY)
  private ObservabilityEnum observability;

  /**
   * Output only. Risk level of the incident.
   */
  @JsonAdapter(RiskLevelEnum.Adapter.class)
  public enum RiskLevelEnum {
    RISK_LEVEL_UNSPECIFIED("RISK_LEVEL_UNSPECIFIED"),
    
    LOW("LOW"),
    
    MODERATE("MODERATE"),
    
    SEVERE("SEVERE");

    private String value;

    RiskLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RiskLevelEnum fromValue(String value) {
      for (RiskLevelEnum b : RiskLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RiskLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RiskLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RiskLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RiskLevelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RiskLevelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RISK_LEVEL = "riskLevel";
  @SerializedName(SERIALIZED_NAME_RISK_LEVEL)
  private RiskLevelEnum riskLevel;

  public static final String SERIALIZED_NAME_TRAFFIC_COUNT = "trafficCount";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_COUNT)
  private String trafficCount;

  public GoogleCloudApigeeV1SecurityIncident() {
  }

  public GoogleCloudApigeeV1SecurityIncident(
     List<String> detectionTypes, 
     String firstDetectedTime, 
     String lastDetectedTime, 
     String lastObservabilityChangeTime, 
     RiskLevelEnum riskLevel
  ) {
    this();
    this.detectionTypes = detectionTypes;
    this.firstDetectedTime = firstDetectedTime;
    this.lastDetectedTime = lastDetectedTime;
    this.lastObservabilityChangeTime = lastObservabilityChangeTime;
    this.riskLevel = riskLevel;
  }

  /**
   * Output only. Detection types which are part of the incident. Examples: Flooder, OAuth Abuser, Static Content Scraper, Anomaly Detection.
   * @return detectionTypes
   */
  @javax.annotation.Nullable
  public List<String> getDetectionTypes() {
    return detectionTypes;
  }



  public GoogleCloudApigeeV1SecurityIncident displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. Display name of the security incident.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Output only. The time when events associated with the incident were first detected.
   * @return firstDetectedTime
   */
  @javax.annotation.Nullable
  public String getFirstDetectedTime() {
    return firstDetectedTime;
  }



  /**
   * Output only. The time when events associated with the incident were last detected.
   * @return lastDetectedTime
   */
  @javax.annotation.Nullable
  public String getLastDetectedTime() {
    return lastDetectedTime;
  }



  /**
   * Output only. The time when the incident observability was last changed.
   * @return lastObservabilityChangeTime
   */
  @javax.annotation.Nullable
  public String getLastObservabilityChangeTime() {
    return lastObservabilityChangeTime;
  }



  public GoogleCloudApigeeV1SecurityIncident name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. Name of the security incident resource. Format: organizations/{org}/environments/{environment}/securityIncidents/{incident} Example: organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudApigeeV1SecurityIncident observability(ObservabilityEnum observability) {
    this.observability = observability;
    return this;
  }

  /**
   * Optional. Indicates if the user archived this incident.
   * @return observability
   */
  @javax.annotation.Nullable
  public ObservabilityEnum getObservability() {
    return observability;
  }

  public void setObservability(ObservabilityEnum observability) {
    this.observability = observability;
  }


  /**
   * Output only. Risk level of the incident.
   * @return riskLevel
   */
  @javax.annotation.Nullable
  public RiskLevelEnum getRiskLevel() {
    return riskLevel;
  }



  public GoogleCloudApigeeV1SecurityIncident trafficCount(String trafficCount) {
    this.trafficCount = trafficCount;
    return this;
  }

  /**
   * Total traffic detected as part of the incident.
   * @return trafficCount
   */
  @javax.annotation.Nullable
  public String getTrafficCount() {
    return trafficCount;
  }

  public void setTrafficCount(String trafficCount) {
    this.trafficCount = trafficCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1SecurityIncident googleCloudApigeeV1SecurityIncident = (GoogleCloudApigeeV1SecurityIncident) o;
    return Objects.equals(this.detectionTypes, googleCloudApigeeV1SecurityIncident.detectionTypes) &&
        Objects.equals(this.displayName, googleCloudApigeeV1SecurityIncident.displayName) &&
        Objects.equals(this.firstDetectedTime, googleCloudApigeeV1SecurityIncident.firstDetectedTime) &&
        Objects.equals(this.lastDetectedTime, googleCloudApigeeV1SecurityIncident.lastDetectedTime) &&
        Objects.equals(this.lastObservabilityChangeTime, googleCloudApigeeV1SecurityIncident.lastObservabilityChangeTime) &&
        Objects.equals(this.name, googleCloudApigeeV1SecurityIncident.name) &&
        Objects.equals(this.observability, googleCloudApigeeV1SecurityIncident.observability) &&
        Objects.equals(this.riskLevel, googleCloudApigeeV1SecurityIncident.riskLevel) &&
        Objects.equals(this.trafficCount, googleCloudApigeeV1SecurityIncident.trafficCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectionTypes, displayName, firstDetectedTime, lastDetectedTime, lastObservabilityChangeTime, name, observability, riskLevel, trafficCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1SecurityIncident {\n");
    sb.append("    detectionTypes: ").append(toIndentedString(detectionTypes)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    firstDetectedTime: ").append(toIndentedString(firstDetectedTime)).append("\n");
    sb.append("    lastDetectedTime: ").append(toIndentedString(lastDetectedTime)).append("\n");
    sb.append("    lastObservabilityChangeTime: ").append(toIndentedString(lastObservabilityChangeTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    observability: ").append(toIndentedString(observability)).append("\n");
    sb.append("    riskLevel: ").append(toIndentedString(riskLevel)).append("\n");
    sb.append("    trafficCount: ").append(toIndentedString(trafficCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("detectionTypes");
    openapiFields.add("displayName");
    openapiFields.add("firstDetectedTime");
    openapiFields.add("lastDetectedTime");
    openapiFields.add("lastObservabilityChangeTime");
    openapiFields.add("name");
    openapiFields.add("observability");
    openapiFields.add("riskLevel");
    openapiFields.add("trafficCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1SecurityIncident
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1SecurityIncident.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1SecurityIncident is not found in the empty JSON string", GoogleCloudApigeeV1SecurityIncident.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1SecurityIncident.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1SecurityIncident` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("detectionTypes") != null && !jsonObj.get("detectionTypes").isJsonNull() && !jsonObj.get("detectionTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `detectionTypes` to be an array in the JSON string but got `%s`", jsonObj.get("detectionTypes").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("firstDetectedTime") != null && !jsonObj.get("firstDetectedTime").isJsonNull()) && !jsonObj.get("firstDetectedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstDetectedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstDetectedTime").toString()));
      }
      if ((jsonObj.get("lastDetectedTime") != null && !jsonObj.get("lastDetectedTime").isJsonNull()) && !jsonObj.get("lastDetectedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastDetectedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastDetectedTime").toString()));
      }
      if ((jsonObj.get("lastObservabilityChangeTime") != null && !jsonObj.get("lastObservabilityChangeTime").isJsonNull()) && !jsonObj.get("lastObservabilityChangeTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastObservabilityChangeTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastObservabilityChangeTime").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("observability") != null && !jsonObj.get("observability").isJsonNull()) && !jsonObj.get("observability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `observability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("observability").toString()));
      }
      // validate the optional field `observability`
      if (jsonObj.get("observability") != null && !jsonObj.get("observability").isJsonNull()) {
        ObservabilityEnum.validateJsonElement(jsonObj.get("observability"));
      }
      if ((jsonObj.get("riskLevel") != null && !jsonObj.get("riskLevel").isJsonNull()) && !jsonObj.get("riskLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `riskLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("riskLevel").toString()));
      }
      // validate the optional field `riskLevel`
      if (jsonObj.get("riskLevel") != null && !jsonObj.get("riskLevel").isJsonNull()) {
        RiskLevelEnum.validateJsonElement(jsonObj.get("riskLevel"));
      }
      if ((jsonObj.get("trafficCount") != null && !jsonObj.get("trafficCount").isJsonNull()) && !jsonObj.get("trafficCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trafficCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trafficCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1SecurityIncident.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1SecurityIncident' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1SecurityIncident> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1SecurityIncident.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1SecurityIncident>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1SecurityIncident value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1SecurityIncident read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1SecurityIncident given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1SecurityIncident
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1SecurityIncident
   */
  public static GoogleCloudApigeeV1SecurityIncident fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1SecurityIncident.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1SecurityIncident to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

