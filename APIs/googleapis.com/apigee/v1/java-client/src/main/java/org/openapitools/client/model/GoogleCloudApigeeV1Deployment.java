/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict;
import org.openapitools.client.model.GoogleCloudApigeeV1InstanceDeploymentStatus;
import org.openapitools.client.model.GoogleCloudApigeeV1PodStatus;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudApigeeV1Deployment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1Deployment {
  public static final String SERIALIZED_NAME_API_PROXY = "apiProxy";
  @SerializedName(SERIALIZED_NAME_API_PROXY)
  private String apiProxy;

  public static final String SERIALIZED_NAME_DEPLOY_START_TIME = "deployStartTime";
  @SerializedName(SERIALIZED_NAME_DEPLOY_START_TIME)
  private String deployStartTime;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private String environment;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<GoogleRpcStatus> errors = new ArrayList<>();

  public static final String SERIALIZED_NAME_INSTANCES = "instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List<GoogleCloudApigeeV1InstanceDeploymentStatus> instances = new ArrayList<>();

  public static final String SERIALIZED_NAME_PODS = "pods";
  @SerializedName(SERIALIZED_NAME_PODS)
  private List<GoogleCloudApigeeV1PodStatus> pods = new ArrayList<>();

  /**
   * Output only. The type of the deployment (standard or extensible) Deployed proxy revision will be marked as extensible in following 2 cases. 1. The deployed proxy revision uses extensible policies. 2. If a environment supports flowhooks and flow hook is configured.
   */
  @JsonAdapter(ProxyDeploymentTypeEnum.Adapter.class)
  public enum ProxyDeploymentTypeEnum {
    PROXY_DEPLOYMENT_TYPE_UNSPECIFIED("PROXY_DEPLOYMENT_TYPE_UNSPECIFIED"),
    
    STANDARD("STANDARD"),
    
    EXTENSIBLE("EXTENSIBLE");

    private String value;

    ProxyDeploymentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProxyDeploymentTypeEnum fromValue(String value) {
      for (ProxyDeploymentTypeEnum b : ProxyDeploymentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProxyDeploymentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProxyDeploymentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProxyDeploymentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProxyDeploymentTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProxyDeploymentTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROXY_DEPLOYMENT_TYPE = "proxyDeploymentType";
  @SerializedName(SERIALIZED_NAME_PROXY_DEPLOYMENT_TYPE)
  private ProxyDeploymentTypeEnum proxyDeploymentType;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private String revision;

  public static final String SERIALIZED_NAME_ROUTE_CONFLICTS = "routeConflicts";
  @SerializedName(SERIALIZED_NAME_ROUTE_CONFLICTS)
  private List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> routeConflicts = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  private String serviceAccount;

  /**
   * Current state of the deployment. **Note**: This field is displayed only when viewing deployment status.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    RUNTIME_STATE_UNSPECIFIED("RUNTIME_STATE_UNSPECIFIED"),
    
    READY("READY"),
    
    PROGRESSING("PROGRESSING"),
    
    ERROR("ERROR");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public GoogleCloudApigeeV1Deployment() {
  }

  public GoogleCloudApigeeV1Deployment(
     ProxyDeploymentTypeEnum proxyDeploymentType
  ) {
    this();
    this.proxyDeploymentType = proxyDeploymentType;
  }

  public GoogleCloudApigeeV1Deployment apiProxy(String apiProxy) {
    this.apiProxy = apiProxy;
    return this;
  }

  /**
   * API proxy.
   * @return apiProxy
   */
  @javax.annotation.Nullable
  public String getApiProxy() {
    return apiProxy;
  }

  public void setApiProxy(String apiProxy) {
    this.apiProxy = apiProxy;
  }


  public GoogleCloudApigeeV1Deployment deployStartTime(String deployStartTime) {
    this.deployStartTime = deployStartTime;
    return this;
  }

  /**
   * Time the API proxy was marked &#x60;deployed&#x60; in the control plane in millisconds since epoch.
   * @return deployStartTime
   */
  @javax.annotation.Nullable
  public String getDeployStartTime() {
    return deployStartTime;
  }

  public void setDeployStartTime(String deployStartTime) {
    this.deployStartTime = deployStartTime;
  }


  public GoogleCloudApigeeV1Deployment environment(String environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Environment.
   * @return environment
   */
  @javax.annotation.Nullable
  public String getEnvironment() {
    return environment;
  }

  public void setEnvironment(String environment) {
    this.environment = environment;
  }


  public GoogleCloudApigeeV1Deployment errors(List<GoogleRpcStatus> errors) {
    this.errors = errors;
    return this;
  }

  public GoogleCloudApigeeV1Deployment addErrorsItem(GoogleRpcStatus errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Errors reported for this deployment. Populated only when state &#x3D;&#x3D; ERROR. **Note**: This field is displayed only when viewing deployment status.
   * @return errors
   */
  @javax.annotation.Nullable
  public List<GoogleRpcStatus> getErrors() {
    return errors;
  }

  public void setErrors(List<GoogleRpcStatus> errors) {
    this.errors = errors;
  }


  public GoogleCloudApigeeV1Deployment instances(List<GoogleCloudApigeeV1InstanceDeploymentStatus> instances) {
    this.instances = instances;
    return this;
  }

  public GoogleCloudApigeeV1Deployment addInstancesItem(GoogleCloudApigeeV1InstanceDeploymentStatus instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<>();
    }
    this.instances.add(instancesItem);
    return this;
  }

  /**
   * Status reported by each runtime instance. **Note**: This field is displayed only when viewing deployment status.
   * @return instances
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1InstanceDeploymentStatus> getInstances() {
    return instances;
  }

  public void setInstances(List<GoogleCloudApigeeV1InstanceDeploymentStatus> instances) {
    this.instances = instances;
  }


  public GoogleCloudApigeeV1Deployment pods(List<GoogleCloudApigeeV1PodStatus> pods) {
    this.pods = pods;
    return this;
  }

  public GoogleCloudApigeeV1Deployment addPodsItem(GoogleCloudApigeeV1PodStatus podsItem) {
    if (this.pods == null) {
      this.pods = new ArrayList<>();
    }
    this.pods.add(podsItem);
    return this;
  }

  /**
   * Status reported by runtime pods. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status.
   * @return pods
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1PodStatus> getPods() {
    return pods;
  }

  public void setPods(List<GoogleCloudApigeeV1PodStatus> pods) {
    this.pods = pods;
  }


  /**
   * Output only. The type of the deployment (standard or extensible) Deployed proxy revision will be marked as extensible in following 2 cases. 1. The deployed proxy revision uses extensible policies. 2. If a environment supports flowhooks and flow hook is configured.
   * @return proxyDeploymentType
   */
  @javax.annotation.Nullable
  public ProxyDeploymentTypeEnum getProxyDeploymentType() {
    return proxyDeploymentType;
  }



  public GoogleCloudApigeeV1Deployment revision(String revision) {
    this.revision = revision;
    return this;
  }

  /**
   * API proxy revision.
   * @return revision
   */
  @javax.annotation.Nullable
  public String getRevision() {
    return revision;
  }

  public void setRevision(String revision) {
    this.revision = revision;
  }


  public GoogleCloudApigeeV1Deployment routeConflicts(List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> routeConflicts) {
    this.routeConflicts = routeConflicts;
    return this;
  }

  public GoogleCloudApigeeV1Deployment addRouteConflictsItem(GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict routeConflictsItem) {
    if (this.routeConflicts == null) {
      this.routeConflicts = new ArrayList<>();
    }
    this.routeConflicts.add(routeConflictsItem);
    return this;
  }

  /**
   * Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be &#x60;ERROR&#x60;, but it will mean that some of the deployment&#39;s base paths are not routed to its environment. If the conflicts change, the state will transition to &#x60;PROGRESSING&#x60; until the latest configuration is rolled out to all instances. **Note**: This field is displayed only when viewing deployment status.
   * @return routeConflicts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> getRouteConflicts() {
    return routeConflicts;
  }

  public void setRouteConflicts(List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> routeConflicts) {
    this.routeConflicts = routeConflicts;
  }


  public GoogleCloudApigeeV1Deployment serviceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * The full resource name of Cloud IAM Service Account that this deployment is using, eg, &#x60;projects/-/serviceAccounts/{email}&#x60;.
   * @return serviceAccount
   */
  @javax.annotation.Nullable
  public String getServiceAccount() {
    return serviceAccount;
  }

  public void setServiceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
  }


  public GoogleCloudApigeeV1Deployment state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * Current state of the deployment. **Note**: This field is displayed only when viewing deployment status.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1Deployment googleCloudApigeeV1Deployment = (GoogleCloudApigeeV1Deployment) o;
    return Objects.equals(this.apiProxy, googleCloudApigeeV1Deployment.apiProxy) &&
        Objects.equals(this.deployStartTime, googleCloudApigeeV1Deployment.deployStartTime) &&
        Objects.equals(this.environment, googleCloudApigeeV1Deployment.environment) &&
        Objects.equals(this.errors, googleCloudApigeeV1Deployment.errors) &&
        Objects.equals(this.instances, googleCloudApigeeV1Deployment.instances) &&
        Objects.equals(this.pods, googleCloudApigeeV1Deployment.pods) &&
        Objects.equals(this.proxyDeploymentType, googleCloudApigeeV1Deployment.proxyDeploymentType) &&
        Objects.equals(this.revision, googleCloudApigeeV1Deployment.revision) &&
        Objects.equals(this.routeConflicts, googleCloudApigeeV1Deployment.routeConflicts) &&
        Objects.equals(this.serviceAccount, googleCloudApigeeV1Deployment.serviceAccount) &&
        Objects.equals(this.state, googleCloudApigeeV1Deployment.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiProxy, deployStartTime, environment, errors, instances, pods, proxyDeploymentType, revision, routeConflicts, serviceAccount, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1Deployment {\n");
    sb.append("    apiProxy: ").append(toIndentedString(apiProxy)).append("\n");
    sb.append("    deployStartTime: ").append(toIndentedString(deployStartTime)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    pods: ").append(toIndentedString(pods)).append("\n");
    sb.append("    proxyDeploymentType: ").append(toIndentedString(proxyDeploymentType)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    routeConflicts: ").append(toIndentedString(routeConflicts)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiProxy");
    openapiFields.add("deployStartTime");
    openapiFields.add("environment");
    openapiFields.add("errors");
    openapiFields.add("instances");
    openapiFields.add("pods");
    openapiFields.add("proxyDeploymentType");
    openapiFields.add("revision");
    openapiFields.add("routeConflicts");
    openapiFields.add("serviceAccount");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1Deployment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1Deployment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1Deployment is not found in the empty JSON string", GoogleCloudApigeeV1Deployment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1Deployment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1Deployment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiProxy") != null && !jsonObj.get("apiProxy").isJsonNull()) && !jsonObj.get("apiProxy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiProxy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiProxy").toString()));
      }
      if ((jsonObj.get("deployStartTime") != null && !jsonObj.get("deployStartTime").isJsonNull()) && !jsonObj.get("deployStartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deployStartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deployStartTime").toString()));
      }
      if ((jsonObj.get("environment") != null && !jsonObj.get("environment").isJsonNull()) && !jsonObj.get("environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment").toString()));
      }
      if (jsonObj.get("errors") != null && !jsonObj.get("errors").isJsonNull()) {
        JsonArray jsonArrayerrors = jsonObj.getAsJsonArray("errors");
        if (jsonArrayerrors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errors` to be an array in the JSON string but got `%s`", jsonObj.get("errors").toString()));
          }

          // validate the optional field `errors` (array)
          for (int i = 0; i < jsonArrayerrors.size(); i++) {
            GoogleRpcStatus.validateJsonElement(jsonArrayerrors.get(i));
          };
        }
      }
      if (jsonObj.get("instances") != null && !jsonObj.get("instances").isJsonNull()) {
        JsonArray jsonArrayinstances = jsonObj.getAsJsonArray("instances");
        if (jsonArrayinstances != null) {
          // ensure the json data is an array
          if (!jsonObj.get("instances").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `instances` to be an array in the JSON string but got `%s`", jsonObj.get("instances").toString()));
          }

          // validate the optional field `instances` (array)
          for (int i = 0; i < jsonArrayinstances.size(); i++) {
            GoogleCloudApigeeV1InstanceDeploymentStatus.validateJsonElement(jsonArrayinstances.get(i));
          };
        }
      }
      if (jsonObj.get("pods") != null && !jsonObj.get("pods").isJsonNull()) {
        JsonArray jsonArraypods = jsonObj.getAsJsonArray("pods");
        if (jsonArraypods != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pods").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pods` to be an array in the JSON string but got `%s`", jsonObj.get("pods").toString()));
          }

          // validate the optional field `pods` (array)
          for (int i = 0; i < jsonArraypods.size(); i++) {
            GoogleCloudApigeeV1PodStatus.validateJsonElement(jsonArraypods.get(i));
          };
        }
      }
      if ((jsonObj.get("proxyDeploymentType") != null && !jsonObj.get("proxyDeploymentType").isJsonNull()) && !jsonObj.get("proxyDeploymentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxyDeploymentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxyDeploymentType").toString()));
      }
      // validate the optional field `proxyDeploymentType`
      if (jsonObj.get("proxyDeploymentType") != null && !jsonObj.get("proxyDeploymentType").isJsonNull()) {
        ProxyDeploymentTypeEnum.validateJsonElement(jsonObj.get("proxyDeploymentType"));
      }
      if ((jsonObj.get("revision") != null && !jsonObj.get("revision").isJsonNull()) && !jsonObj.get("revision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revision").toString()));
      }
      if (jsonObj.get("routeConflicts") != null && !jsonObj.get("routeConflicts").isJsonNull()) {
        JsonArray jsonArrayrouteConflicts = jsonObj.getAsJsonArray("routeConflicts");
        if (jsonArrayrouteConflicts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routeConflicts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routeConflicts` to be an array in the JSON string but got `%s`", jsonObj.get("routeConflicts").toString()));
          }

          // validate the optional field `routeConflicts` (array)
          for (int i = 0; i < jsonArrayrouteConflicts.size(); i++) {
            GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.validateJsonElement(jsonArrayrouteConflicts.get(i));
          };
        }
      }
      if ((jsonObj.get("serviceAccount") != null && !jsonObj.get("serviceAccount").isJsonNull()) && !jsonObj.get("serviceAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccount").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1Deployment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1Deployment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1Deployment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1Deployment.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1Deployment>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1Deployment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1Deployment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1Deployment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1Deployment
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1Deployment
   */
  public static GoogleCloudApigeeV1Deployment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1Deployment.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1Deployment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

