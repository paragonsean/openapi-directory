/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1Attribute;
import org.openapitools.client.model.GoogleCloudApigeeV1GraphQLOperation;
import org.openapitools.client.model.GoogleCloudApigeeV1Quota;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Binds the resources in a proxy or remote service with the GraphQL operation and its associated quota enforcement.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1GraphQLOperationConfig {
  public static final String SERIALIZED_NAME_API_SOURCE = "apiSource";
  @SerializedName(SERIALIZED_NAME_API_SOURCE)
  private String apiSource;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<GoogleCloudApigeeV1Attribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_OPERATIONS = "operations";
  @SerializedName(SERIALIZED_NAME_OPERATIONS)
  private List<GoogleCloudApigeeV1GraphQLOperation> operations = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUOTA = "quota";
  @SerializedName(SERIALIZED_NAME_QUOTA)
  private GoogleCloudApigeeV1Quota quota;

  public GoogleCloudApigeeV1GraphQLOperationConfig() {
  }

  public GoogleCloudApigeeV1GraphQLOperationConfig apiSource(String apiSource) {
    this.apiSource = apiSource;
    return this;
  }

  /**
   * Required. Name of the API proxy endpoint or remote service with which the GraphQL operation and quota are associated.
   * @return apiSource
   */
  @javax.annotation.Nullable
  public String getApiSource() {
    return apiSource;
  }

  public void setApiSource(String apiSource) {
    this.apiSource = apiSource;
  }


  public GoogleCloudApigeeV1GraphQLOperationConfig attributes(List<GoogleCloudApigeeV1Attribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GoogleCloudApigeeV1GraphQLOperationConfig addAttributesItem(GoogleCloudApigeeV1Attribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Custom attributes associated with the operation.
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1Attribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<GoogleCloudApigeeV1Attribute> attributes) {
    this.attributes = attributes;
  }


  public GoogleCloudApigeeV1GraphQLOperationConfig operations(List<GoogleCloudApigeeV1GraphQLOperation> operations) {
    this.operations = operations;
    return this;
  }

  public GoogleCloudApigeeV1GraphQLOperationConfig addOperationsItem(GoogleCloudApigeeV1GraphQLOperation operationsItem) {
    if (this.operations == null) {
      this.operations = new ArrayList<>();
    }
    this.operations.add(operationsItem);
    return this;
  }

  /**
   * Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
   * @return operations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1GraphQLOperation> getOperations() {
    return operations;
  }

  public void setOperations(List<GoogleCloudApigeeV1GraphQLOperation> operations) {
    this.operations = operations;
  }


  public GoogleCloudApigeeV1GraphQLOperationConfig quota(GoogleCloudApigeeV1Quota quota) {
    this.quota = quota;
    return this;
  }

  /**
   * Get quota
   * @return quota
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1Quota getQuota() {
    return quota;
  }

  public void setQuota(GoogleCloudApigeeV1Quota quota) {
    this.quota = quota;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1GraphQLOperationConfig googleCloudApigeeV1GraphQLOperationConfig = (GoogleCloudApigeeV1GraphQLOperationConfig) o;
    return Objects.equals(this.apiSource, googleCloudApigeeV1GraphQLOperationConfig.apiSource) &&
        Objects.equals(this.attributes, googleCloudApigeeV1GraphQLOperationConfig.attributes) &&
        Objects.equals(this.operations, googleCloudApigeeV1GraphQLOperationConfig.operations) &&
        Objects.equals(this.quota, googleCloudApigeeV1GraphQLOperationConfig.quota);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiSource, attributes, operations, quota);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1GraphQLOperationConfig {\n");
    sb.append("    apiSource: ").append(toIndentedString(apiSource)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    quota: ").append(toIndentedString(quota)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiSource");
    openapiFields.add("attributes");
    openapiFields.add("operations");
    openapiFields.add("quota");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1GraphQLOperationConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1GraphQLOperationConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1GraphQLOperationConfig is not found in the empty JSON string", GoogleCloudApigeeV1GraphQLOperationConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1GraphQLOperationConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1GraphQLOperationConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiSource") != null && !jsonObj.get("apiSource").isJsonNull()) && !jsonObj.get("apiSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiSource").toString()));
      }
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            GoogleCloudApigeeV1Attribute.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      if (jsonObj.get("operations") != null && !jsonObj.get("operations").isJsonNull()) {
        JsonArray jsonArrayoperations = jsonObj.getAsJsonArray("operations");
        if (jsonArrayoperations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("operations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `operations` to be an array in the JSON string but got `%s`", jsonObj.get("operations").toString()));
          }

          // validate the optional field `operations` (array)
          for (int i = 0; i < jsonArrayoperations.size(); i++) {
            GoogleCloudApigeeV1GraphQLOperation.validateJsonElement(jsonArrayoperations.get(i));
          };
        }
      }
      // validate the optional field `quota`
      if (jsonObj.get("quota") != null && !jsonObj.get("quota").isJsonNull()) {
        GoogleCloudApigeeV1Quota.validateJsonElement(jsonObj.get("quota"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1GraphQLOperationConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1GraphQLOperationConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1GraphQLOperationConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1GraphQLOperationConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1GraphQLOperationConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1GraphQLOperationConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1GraphQLOperationConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1GraphQLOperationConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1GraphQLOperationConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1GraphQLOperationConfig
   */
  public static GoogleCloudApigeeV1GraphQLOperationConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1GraphQLOperationConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1GraphQLOperationConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

