/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudApigeeV1OrganizationProjectMapping
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1OrganizationProjectMapping {
  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_PROJECT_IDS = "projectIds";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PROJECT_IDS)
  private List<String> projectIds = new ArrayList<>();

  public GoogleCloudApigeeV1OrganizationProjectMapping() {
  }

  public GoogleCloudApigeeV1OrganizationProjectMapping(
     String location
  ) {
    this();
    this.location = location;
  }

  /**
   * Output only. The Google Cloud region where control plane data is located. For more information, see https://cloud.google.com/about/locations/.
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }



  public GoogleCloudApigeeV1OrganizationProjectMapping organization(String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * Name of the Apigee organization.
   * @return organization
   */
  @javax.annotation.Nullable
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }


  public GoogleCloudApigeeV1OrganizationProjectMapping projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Google Cloud project associated with the Apigee organization
   * @return projectId
   */
  @javax.annotation.Nullable
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  @Deprecated
  public GoogleCloudApigeeV1OrganizationProjectMapping projectIds(List<String> projectIds) {
    this.projectIds = projectIds;
    return this;
  }

  public GoogleCloudApigeeV1OrganizationProjectMapping addProjectIdsItem(String projectIdsItem) {
    if (this.projectIds == null) {
      this.projectIds = new ArrayList<>();
    }
    this.projectIds.add(projectIdsItem);
    return this;
  }

  /**
   * DEPRECATED: Use &#x60;project_id&#x60;. An Apigee Organization is mapped to a single project.
   * @return projectIds
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<String> getProjectIds() {
    return projectIds;
  }

  @Deprecated
  public void setProjectIds(List<String> projectIds) {
    this.projectIds = projectIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1OrganizationProjectMapping googleCloudApigeeV1OrganizationProjectMapping = (GoogleCloudApigeeV1OrganizationProjectMapping) o;
    return Objects.equals(this.location, googleCloudApigeeV1OrganizationProjectMapping.location) &&
        Objects.equals(this.organization, googleCloudApigeeV1OrganizationProjectMapping.organization) &&
        Objects.equals(this.projectId, googleCloudApigeeV1OrganizationProjectMapping.projectId) &&
        Objects.equals(this.projectIds, googleCloudApigeeV1OrganizationProjectMapping.projectIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, organization, projectId, projectIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1OrganizationProjectMapping {\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectIds: ").append(toIndentedString(projectIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("location");
    openapiFields.add("organization");
    openapiFields.add("projectId");
    openapiFields.add("projectIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1OrganizationProjectMapping
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1OrganizationProjectMapping.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1OrganizationProjectMapping is not found in the empty JSON string", GoogleCloudApigeeV1OrganizationProjectMapping.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1OrganizationProjectMapping.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1OrganizationProjectMapping` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("organization") != null && !jsonObj.get("organization").isJsonNull()) && !jsonObj.get("organization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization").toString()));
      }
      if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull()) && !jsonObj.get("projectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("projectIds") != null && !jsonObj.get("projectIds").isJsonNull() && !jsonObj.get("projectIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectIds` to be an array in the JSON string but got `%s`", jsonObj.get("projectIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1OrganizationProjectMapping.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1OrganizationProjectMapping' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1OrganizationProjectMapping> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1OrganizationProjectMapping.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1OrganizationProjectMapping>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1OrganizationProjectMapping value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1OrganizationProjectMapping read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1OrganizationProjectMapping given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1OrganizationProjectMapping
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1OrganizationProjectMapping
   */
  public static GoogleCloudApigeeV1OrganizationProjectMapping fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1OrganizationProjectMapping.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1OrganizationProjectMapping to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

