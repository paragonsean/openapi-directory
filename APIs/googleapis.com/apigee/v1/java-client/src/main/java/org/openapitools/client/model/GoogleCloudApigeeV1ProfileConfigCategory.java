/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Advanced API Security provides security profile that scores the following categories.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1ProfileConfigCategory {
  public static final String SERIALIZED_NAME_ABUSE = "abuse";
  @SerializedName(SERIALIZED_NAME_ABUSE)
  private Object abuse;

  public static final String SERIALIZED_NAME_AUTHORIZATION = "authorization";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION)
  private Object authorization;

  public static final String SERIALIZED_NAME_CORS = "cors";
  @SerializedName(SERIALIZED_NAME_CORS)
  private Object cors;

  public static final String SERIALIZED_NAME_MEDIATION = "mediation";
  @SerializedName(SERIALIZED_NAME_MEDIATION)
  private Object mediation;

  public static final String SERIALIZED_NAME_MTLS = "mtls";
  @SerializedName(SERIALIZED_NAME_MTLS)
  private Object mtls;

  public static final String SERIALIZED_NAME_THREAT = "threat";
  @SerializedName(SERIALIZED_NAME_THREAT)
  private Object threat;

  public GoogleCloudApigeeV1ProfileConfigCategory() {
  }

  public GoogleCloudApigeeV1ProfileConfigCategory abuse(Object abuse) {
    this.abuse = abuse;
    return this;
  }

  /**
   * Checks for abuse, which includes any requests sent to the API for purposes other than what it is intended for, such as high volumes of requests, data scraping, and abuse related to authorization.
   * @return abuse
   */
  @javax.annotation.Nullable
  public Object getAbuse() {
    return abuse;
  }

  public void setAbuse(Object abuse) {
    this.abuse = abuse;
  }


  public GoogleCloudApigeeV1ProfileConfigCategory authorization(Object authorization) {
    this.authorization = authorization;
    return this;
  }

  /**
   * By default, following policies will be included: - JWS - JWT - OAuth - BasicAuth - APIKey
   * @return authorization
   */
  @javax.annotation.Nullable
  public Object getAuthorization() {
    return authorization;
  }

  public void setAuthorization(Object authorization) {
    this.authorization = authorization;
  }


  public GoogleCloudApigeeV1ProfileConfigCategory cors(Object cors) {
    this.cors = cors;
    return this;
  }

  /**
   * Checks to see if you have CORS policy in place.
   * @return cors
   */
  @javax.annotation.Nullable
  public Object getCors() {
    return cors;
  }

  public void setCors(Object cors) {
    this.cors = cors;
  }


  public GoogleCloudApigeeV1ProfileConfigCategory mediation(Object mediation) {
    this.mediation = mediation;
    return this;
  }

  /**
   * By default, following policies will be included: - OASValidation - SOAPMessageValidation
   * @return mediation
   */
  @javax.annotation.Nullable
  public Object getMediation() {
    return mediation;
  }

  public void setMediation(Object mediation) {
    this.mediation = mediation;
  }


  public GoogleCloudApigeeV1ProfileConfigCategory mtls(Object mtls) {
    this.mtls = mtls;
    return this;
  }

  /**
   * Checks to see if you have configured mTLS for the target server.
   * @return mtls
   */
  @javax.annotation.Nullable
  public Object getMtls() {
    return mtls;
  }

  public void setMtls(Object mtls) {
    this.mtls = mtls;
  }


  public GoogleCloudApigeeV1ProfileConfigCategory threat(Object threat) {
    this.threat = threat;
    return this;
  }

  /**
   * By default, following policies will be included: - XMLThreatProtection - JSONThreatProtection
   * @return threat
   */
  @javax.annotation.Nullable
  public Object getThreat() {
    return threat;
  }

  public void setThreat(Object threat) {
    this.threat = threat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1ProfileConfigCategory googleCloudApigeeV1ProfileConfigCategory = (GoogleCloudApigeeV1ProfileConfigCategory) o;
    return Objects.equals(this.abuse, googleCloudApigeeV1ProfileConfigCategory.abuse) &&
        Objects.equals(this.authorization, googleCloudApigeeV1ProfileConfigCategory.authorization) &&
        Objects.equals(this.cors, googleCloudApigeeV1ProfileConfigCategory.cors) &&
        Objects.equals(this.mediation, googleCloudApigeeV1ProfileConfigCategory.mediation) &&
        Objects.equals(this.mtls, googleCloudApigeeV1ProfileConfigCategory.mtls) &&
        Objects.equals(this.threat, googleCloudApigeeV1ProfileConfigCategory.threat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abuse, authorization, cors, mediation, mtls, threat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1ProfileConfigCategory {\n");
    sb.append("    abuse: ").append(toIndentedString(abuse)).append("\n");
    sb.append("    authorization: ").append(toIndentedString(authorization)).append("\n");
    sb.append("    cors: ").append(toIndentedString(cors)).append("\n");
    sb.append("    mediation: ").append(toIndentedString(mediation)).append("\n");
    sb.append("    mtls: ").append(toIndentedString(mtls)).append("\n");
    sb.append("    threat: ").append(toIndentedString(threat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("abuse");
    openapiFields.add("authorization");
    openapiFields.add("cors");
    openapiFields.add("mediation");
    openapiFields.add("mtls");
    openapiFields.add("threat");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1ProfileConfigCategory
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1ProfileConfigCategory.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1ProfileConfigCategory is not found in the empty JSON string", GoogleCloudApigeeV1ProfileConfigCategory.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1ProfileConfigCategory.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1ProfileConfigCategory` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1ProfileConfigCategory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1ProfileConfigCategory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1ProfileConfigCategory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1ProfileConfigCategory.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1ProfileConfigCategory>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1ProfileConfigCategory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1ProfileConfigCategory read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1ProfileConfigCategory given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1ProfileConfigCategory
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1ProfileConfigCategory
   */
  public static GoogleCloudApigeeV1ProfileConfigCategory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1ProfileConfigCategory.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1ProfileConfigCategory to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

