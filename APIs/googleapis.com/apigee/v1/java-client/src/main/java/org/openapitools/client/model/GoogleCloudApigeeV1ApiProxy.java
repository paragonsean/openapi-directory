/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudApigeeV1EntityMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata describing the API proxy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1ApiProxy {
  /**
   * Output only. The type of the API proxy.
   */
  @JsonAdapter(ApiProxyTypeEnum.Adapter.class)
  public enum ApiProxyTypeEnum {
    API_PROXY_TYPE_UNSPECIFIED("API_PROXY_TYPE_UNSPECIFIED"),
    
    PROGRAMMABLE("PROGRAMMABLE"),
    
    CONFIGURABLE("CONFIGURABLE");

    private String value;

    ApiProxyTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ApiProxyTypeEnum fromValue(String value) {
      for (ApiProxyTypeEnum b : ApiProxyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ApiProxyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ApiProxyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ApiProxyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ApiProxyTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ApiProxyTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_API_PROXY_TYPE = "apiProxyType";
  @SerializedName(SERIALIZED_NAME_API_PROXY_TYPE)
  private ApiProxyTypeEnum apiProxyType;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_LATEST_REVISION_ID = "latestRevisionId";
  @SerializedName(SERIALIZED_NAME_LATEST_REVISION_ID)
  private String latestRevisionId;

  public static final String SERIALIZED_NAME_META_DATA = "metaData";
  @SerializedName(SERIALIZED_NAME_META_DATA)
  private GoogleCloudApigeeV1EntityMetadata metaData;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_READ_ONLY = "readOnly";
  @SerializedName(SERIALIZED_NAME_READ_ONLY)
  private Boolean readOnly;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private List<String> revision = new ArrayList<>();

  public GoogleCloudApigeeV1ApiProxy() {
  }

  public GoogleCloudApigeeV1ApiProxy(
     ApiProxyTypeEnum apiProxyType, 
     String latestRevisionId, 
     String name, 
     Boolean readOnly, 
     List<String> revision
  ) {
    this();
    this.apiProxyType = apiProxyType;
    this.latestRevisionId = latestRevisionId;
    this.name = name;
    this.readOnly = readOnly;
    this.revision = revision;
  }

  /**
   * Output only. The type of the API proxy.
   * @return apiProxyType
   */
  @javax.annotation.Nullable
  public ApiProxyTypeEnum getApiProxyType() {
    return apiProxyType;
  }



  public GoogleCloudApigeeV1ApiProxy labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudApigeeV1ApiProxy putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * User labels applied to this API Proxy.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. The id of the most recently created revision for this api proxy.
   * @return latestRevisionId
   */
  @javax.annotation.Nullable
  public String getLatestRevisionId() {
    return latestRevisionId;
  }



  public GoogleCloudApigeeV1ApiProxy metaData(GoogleCloudApigeeV1EntityMetadata metaData) {
    this.metaData = metaData;
    return this;
  }

  /**
   * Get metaData
   * @return metaData
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1EntityMetadata getMetaData() {
    return metaData;
  }

  public void setMetaData(GoogleCloudApigeeV1EntityMetadata metaData) {
    this.metaData = metaData;
  }


  /**
   * Output only. Name of the API proxy.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive.
   * @return readOnly
   */
  @javax.annotation.Nullable
  public Boolean getReadOnly() {
    return readOnly;
  }



  /**
   * Output only. List of revisions defined for the API proxy.
   * @return revision
   */
  @javax.annotation.Nullable
  public List<String> getRevision() {
    return revision;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1ApiProxy googleCloudApigeeV1ApiProxy = (GoogleCloudApigeeV1ApiProxy) o;
    return Objects.equals(this.apiProxyType, googleCloudApigeeV1ApiProxy.apiProxyType) &&
        Objects.equals(this.labels, googleCloudApigeeV1ApiProxy.labels) &&
        Objects.equals(this.latestRevisionId, googleCloudApigeeV1ApiProxy.latestRevisionId) &&
        Objects.equals(this.metaData, googleCloudApigeeV1ApiProxy.metaData) &&
        Objects.equals(this.name, googleCloudApigeeV1ApiProxy.name) &&
        Objects.equals(this.readOnly, googleCloudApigeeV1ApiProxy.readOnly) &&
        Objects.equals(this.revision, googleCloudApigeeV1ApiProxy.revision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiProxyType, labels, latestRevisionId, metaData, name, readOnly, revision);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1ApiProxy {\n");
    sb.append("    apiProxyType: ").append(toIndentedString(apiProxyType)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    latestRevisionId: ").append(toIndentedString(latestRevisionId)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiProxyType");
    openapiFields.add("labels");
    openapiFields.add("latestRevisionId");
    openapiFields.add("metaData");
    openapiFields.add("name");
    openapiFields.add("readOnly");
    openapiFields.add("revision");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1ApiProxy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1ApiProxy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1ApiProxy is not found in the empty JSON string", GoogleCloudApigeeV1ApiProxy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1ApiProxy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1ApiProxy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiProxyType") != null && !jsonObj.get("apiProxyType").isJsonNull()) && !jsonObj.get("apiProxyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiProxyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiProxyType").toString()));
      }
      // validate the optional field `apiProxyType`
      if (jsonObj.get("apiProxyType") != null && !jsonObj.get("apiProxyType").isJsonNull()) {
        ApiProxyTypeEnum.validateJsonElement(jsonObj.get("apiProxyType"));
      }
      if ((jsonObj.get("latestRevisionId") != null && !jsonObj.get("latestRevisionId").isJsonNull()) && !jsonObj.get("latestRevisionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestRevisionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestRevisionId").toString()));
      }
      // validate the optional field `metaData`
      if (jsonObj.get("metaData") != null && !jsonObj.get("metaData").isJsonNull()) {
        GoogleCloudApigeeV1EntityMetadata.validateJsonElement(jsonObj.get("metaData"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("revision") != null && !jsonObj.get("revision").isJsonNull() && !jsonObj.get("revision").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `revision` to be an array in the JSON string but got `%s`", jsonObj.get("revision").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1ApiProxy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1ApiProxy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1ApiProxy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1ApiProxy.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1ApiProxy>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1ApiProxy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1ApiProxy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1ApiProxy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1ApiProxy
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1ApiProxy
   */
  public static GoogleCloudApigeeV1ApiProxy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1ApiProxy.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1ApiProxy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

