/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1Attribute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudApigeeV1Developer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1Developer {
  public static final String SERIALIZED_NAME_ACCESS_TYPE = "accessType";
  @SerializedName(SERIALIZED_NAME_ACCESS_TYPE)
  private String accessType;

  public static final String SERIALIZED_NAME_APP_FAMILY = "appFamily";
  @SerializedName(SERIALIZED_NAME_APP_FAMILY)
  private String appFamily;

  public static final String SERIALIZED_NAME_APPS = "apps";
  @SerializedName(SERIALIZED_NAME_APPS)
  private List<String> apps = new ArrayList<>();

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<GoogleCloudApigeeV1Attribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPANIES = "companies";
  @SerializedName(SERIALIZED_NAME_COMPANIES)
  private List<String> companies = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DEVELOPER_ID = "developerId";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_ID)
  private String developerId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "lastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private String lastModifiedAt;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_ORGANIZATION_NAME = "organizationName";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_NAME)
  private String organizationName;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public GoogleCloudApigeeV1Developer() {
  }

  public GoogleCloudApigeeV1Developer(
     String createdAt, 
     String lastModifiedAt, 
     String organizationName, 
     String status
  ) {
    this();
    this.createdAt = createdAt;
    this.lastModifiedAt = lastModifiedAt;
    this.organizationName = organizationName;
    this.status = status;
  }

  public GoogleCloudApigeeV1Developer accessType(String accessType) {
    this.accessType = accessType;
    return this;
  }

  /**
   * Access type.
   * @return accessType
   */
  @javax.annotation.Nullable
  public String getAccessType() {
    return accessType;
  }

  public void setAccessType(String accessType) {
    this.accessType = accessType;
  }


  public GoogleCloudApigeeV1Developer appFamily(String appFamily) {
    this.appFamily = appFamily;
    return this;
  }

  /**
   * Developer app family.
   * @return appFamily
   */
  @javax.annotation.Nullable
  public String getAppFamily() {
    return appFamily;
  }

  public void setAppFamily(String appFamily) {
    this.appFamily = appFamily;
  }


  public GoogleCloudApigeeV1Developer apps(List<String> apps) {
    this.apps = apps;
    return this;
  }

  public GoogleCloudApigeeV1Developer addAppsItem(String appsItem) {
    if (this.apps == null) {
      this.apps = new ArrayList<>();
    }
    this.apps.add(appsItem);
    return this;
  }

  /**
   * List of apps associated with the developer.
   * @return apps
   */
  @javax.annotation.Nullable
  public List<String> getApps() {
    return apps;
  }

  public void setApps(List<String> apps) {
    this.apps = apps;
  }


  public GoogleCloudApigeeV1Developer attributes(List<GoogleCloudApigeeV1Attribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GoogleCloudApigeeV1Developer addAttributesItem(GoogleCloudApigeeV1Attribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1Attribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<GoogleCloudApigeeV1Attribute> attributes) {
    this.attributes = attributes;
  }


  public GoogleCloudApigeeV1Developer companies(List<String> companies) {
    this.companies = companies;
    return this;
  }

  public GoogleCloudApigeeV1Developer addCompaniesItem(String companiesItem) {
    if (this.companies == null) {
      this.companies = new ArrayList<>();
    }
    this.companies.add(companiesItem);
    return this;
  }

  /**
   * List of companies associated with the developer.
   * @return companies
   */
  @javax.annotation.Nullable
  public List<String> getCompanies() {
    return companies;
  }

  public void setCompanies(List<String> companies) {
    this.companies = companies;
  }


  /**
   * Output only. Time at which the developer was created in milliseconds since epoch.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }



  public GoogleCloudApigeeV1Developer developerId(String developerId) {
    this.developerId = developerId;
    return this;
  }

  /**
   * ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time.
   * @return developerId
   */
  @javax.annotation.Nullable
  public String getDeveloperId() {
    return developerId;
  }

  public void setDeveloperId(String developerId) {
    this.developerId = developerId;
  }


  public GoogleCloudApigeeV1Developer email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only.
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public GoogleCloudApigeeV1Developer firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Required. First name of the developer.
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  /**
   * Output only. Time at which the developer was last modified in milliseconds since epoch.
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public String getLastModifiedAt() {
    return lastModifiedAt;
  }



  public GoogleCloudApigeeV1Developer lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Required. Last name of the developer.
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  /**
   * Output only. Name of the Apigee organization in which the developer resides.
   * @return organizationName
   */
  @javax.annotation.Nullable
  public String getOrganizationName() {
    return organizationName;
  }



  /**
   * Output only. Status of the developer. Valid values are &#x60;active&#x60; and &#x60;inactive&#x60;.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }



  public GoogleCloudApigeeV1Developer userName(String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * Required. User name of the developer. Not used by Apigee hybrid.
   * @return userName
   */
  @javax.annotation.Nullable
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1Developer googleCloudApigeeV1Developer = (GoogleCloudApigeeV1Developer) o;
    return Objects.equals(this.accessType, googleCloudApigeeV1Developer.accessType) &&
        Objects.equals(this.appFamily, googleCloudApigeeV1Developer.appFamily) &&
        Objects.equals(this.apps, googleCloudApigeeV1Developer.apps) &&
        Objects.equals(this.attributes, googleCloudApigeeV1Developer.attributes) &&
        Objects.equals(this.companies, googleCloudApigeeV1Developer.companies) &&
        Objects.equals(this.createdAt, googleCloudApigeeV1Developer.createdAt) &&
        Objects.equals(this.developerId, googleCloudApigeeV1Developer.developerId) &&
        Objects.equals(this.email, googleCloudApigeeV1Developer.email) &&
        Objects.equals(this.firstName, googleCloudApigeeV1Developer.firstName) &&
        Objects.equals(this.lastModifiedAt, googleCloudApigeeV1Developer.lastModifiedAt) &&
        Objects.equals(this.lastName, googleCloudApigeeV1Developer.lastName) &&
        Objects.equals(this.organizationName, googleCloudApigeeV1Developer.organizationName) &&
        Objects.equals(this.status, googleCloudApigeeV1Developer.status) &&
        Objects.equals(this.userName, googleCloudApigeeV1Developer.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessType, appFamily, apps, attributes, companies, createdAt, developerId, email, firstName, lastModifiedAt, lastName, organizationName, status, userName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1Developer {\n");
    sb.append("    accessType: ").append(toIndentedString(accessType)).append("\n");
    sb.append("    appFamily: ").append(toIndentedString(appFamily)).append("\n");
    sb.append("    apps: ").append(toIndentedString(apps)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    companies: ").append(toIndentedString(companies)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    developerId: ").append(toIndentedString(developerId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    organizationName: ").append(toIndentedString(organizationName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessType");
    openapiFields.add("appFamily");
    openapiFields.add("apps");
    openapiFields.add("attributes");
    openapiFields.add("companies");
    openapiFields.add("createdAt");
    openapiFields.add("developerId");
    openapiFields.add("email");
    openapiFields.add("firstName");
    openapiFields.add("lastModifiedAt");
    openapiFields.add("lastName");
    openapiFields.add("organizationName");
    openapiFields.add("status");
    openapiFields.add("userName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1Developer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1Developer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1Developer is not found in the empty JSON string", GoogleCloudApigeeV1Developer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1Developer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1Developer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accessType") != null && !jsonObj.get("accessType").isJsonNull()) && !jsonObj.get("accessType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessType").toString()));
      }
      if ((jsonObj.get("appFamily") != null && !jsonObj.get("appFamily").isJsonNull()) && !jsonObj.get("appFamily").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appFamily` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appFamily").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("apps") != null && !jsonObj.get("apps").isJsonNull() && !jsonObj.get("apps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `apps` to be an array in the JSON string but got `%s`", jsonObj.get("apps").toString()));
      }
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            GoogleCloudApigeeV1Attribute.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("companies") != null && !jsonObj.get("companies").isJsonNull() && !jsonObj.get("companies").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `companies` to be an array in the JSON string but got `%s`", jsonObj.get("companies").toString()));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("developerId") != null && !jsonObj.get("developerId").isJsonNull()) && !jsonObj.get("developerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `developerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("developerId").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastModifiedAt") != null && !jsonObj.get("lastModifiedAt").isJsonNull()) && !jsonObj.get("lastModifiedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedAt").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("organizationName") != null && !jsonObj.get("organizationName").isJsonNull()) && !jsonObj.get("organizationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationName").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1Developer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1Developer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1Developer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1Developer.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1Developer>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1Developer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1Developer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1Developer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1Developer
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1Developer
   */
  public static GoogleCloudApigeeV1Developer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1Developer.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1Developer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

