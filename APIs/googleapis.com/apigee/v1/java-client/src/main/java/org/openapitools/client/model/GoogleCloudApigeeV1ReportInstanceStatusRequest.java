/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1ResourceStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request for ReportInstanceStatus.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1ReportInstanceStatusRequest {
  public static final String SERIALIZED_NAME_INSTANCE_UID = "instanceUid";
  @SerializedName(SERIALIZED_NAME_INSTANCE_UID)
  private String instanceUid;

  public static final String SERIALIZED_NAME_REPORT_TIME = "reportTime";
  @SerializedName(SERIALIZED_NAME_REPORT_TIME)
  private String reportTime;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private List<GoogleCloudApigeeV1ResourceStatus> resources = new ArrayList<>();

  public GoogleCloudApigeeV1ReportInstanceStatusRequest() {
  }

  public GoogleCloudApigeeV1ReportInstanceStatusRequest instanceUid(String instanceUid) {
    this.instanceUid = instanceUid;
    return this;
  }

  /**
   * A unique ID for the instance which is guaranteed to be unique in case the user installs multiple hybrid runtimes with the same instance ID.
   * @return instanceUid
   */
  @javax.annotation.Nullable
  public String getInstanceUid() {
    return instanceUid;
  }

  public void setInstanceUid(String instanceUid) {
    this.instanceUid = instanceUid;
  }


  public GoogleCloudApigeeV1ReportInstanceStatusRequest reportTime(String reportTime) {
    this.reportTime = reportTime;
    return this;
  }

  /**
   * The time the report was generated in the runtime. Used to prevent an old status from overwriting a newer one. An instance should space out it&#39;s status reports so that clock skew does not play a factor.
   * @return reportTime
   */
  @javax.annotation.Nullable
  public String getReportTime() {
    return reportTime;
  }

  public void setReportTime(String reportTime) {
    this.reportTime = reportTime;
  }


  public GoogleCloudApigeeV1ReportInstanceStatusRequest resources(List<GoogleCloudApigeeV1ResourceStatus> resources) {
    this.resources = resources;
    return this;
  }

  public GoogleCloudApigeeV1ReportInstanceStatusRequest addResourcesItem(GoogleCloudApigeeV1ResourceStatus resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

  /**
   * Status for config resources
   * @return resources
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1ResourceStatus> getResources() {
    return resources;
  }

  public void setResources(List<GoogleCloudApigeeV1ResourceStatus> resources) {
    this.resources = resources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1ReportInstanceStatusRequest googleCloudApigeeV1ReportInstanceStatusRequest = (GoogleCloudApigeeV1ReportInstanceStatusRequest) o;
    return Objects.equals(this.instanceUid, googleCloudApigeeV1ReportInstanceStatusRequest.instanceUid) &&
        Objects.equals(this.reportTime, googleCloudApigeeV1ReportInstanceStatusRequest.reportTime) &&
        Objects.equals(this.resources, googleCloudApigeeV1ReportInstanceStatusRequest.resources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceUid, reportTime, resources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1ReportInstanceStatusRequest {\n");
    sb.append("    instanceUid: ").append(toIndentedString(instanceUid)).append("\n");
    sb.append("    reportTime: ").append(toIndentedString(reportTime)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceUid");
    openapiFields.add("reportTime");
    openapiFields.add("resources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1ReportInstanceStatusRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1ReportInstanceStatusRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1ReportInstanceStatusRequest is not found in the empty JSON string", GoogleCloudApigeeV1ReportInstanceStatusRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1ReportInstanceStatusRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1ReportInstanceStatusRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("instanceUid") != null && !jsonObj.get("instanceUid").isJsonNull()) && !jsonObj.get("instanceUid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceUid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instanceUid").toString()));
      }
      if ((jsonObj.get("reportTime") != null && !jsonObj.get("reportTime").isJsonNull()) && !jsonObj.get("reportTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportTime").toString()));
      }
      if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull()) {
        JsonArray jsonArrayresources = jsonObj.getAsJsonArray("resources");
        if (jsonArrayresources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("resources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resources` to be an array in the JSON string but got `%s`", jsonObj.get("resources").toString()));
          }

          // validate the optional field `resources` (array)
          for (int i = 0; i < jsonArrayresources.size(); i++) {
            GoogleCloudApigeeV1ResourceStatus.validateJsonElement(jsonArrayresources.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1ReportInstanceStatusRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1ReportInstanceStatusRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1ReportInstanceStatusRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1ReportInstanceStatusRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1ReportInstanceStatusRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1ReportInstanceStatusRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1ReportInstanceStatusRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1ReportInstanceStatusRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1ReportInstanceStatusRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1ReportInstanceStatusRequest
   */
  public static GoogleCloudApigeeV1ReportInstanceStatusRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1ReportInstanceStatusRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1ReportInstanceStatusRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

