/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1RateRange;
import org.openapitools.client.model.GoogleCloudApigeeV1RevenueShareRange;
import org.openapitools.client.model.GoogleTypeMoney;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Rate plan details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1RatePlan {
  public static final String SERIALIZED_NAME_APIPRODUCT = "apiproduct";
  @SerializedName(SERIALIZED_NAME_APIPRODUCT)
  private String apiproduct;

  /**
   * Frequency at which the customer will be billed.
   */
  @JsonAdapter(BillingPeriodEnum.Adapter.class)
  public enum BillingPeriodEnum {
    BILLING_PERIOD_UNSPECIFIED("BILLING_PERIOD_UNSPECIFIED"),
    
    WEEKLY("WEEKLY"),
    
    MONTHLY("MONTHLY");

    private String value;

    BillingPeriodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BillingPeriodEnum fromValue(String value) {
      for (BillingPeriodEnum b : BillingPeriodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BillingPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BillingPeriodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BillingPeriodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BillingPeriodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BillingPeriodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BILLING_PERIOD = "billingPeriod";
  @SerializedName(SERIALIZED_NAME_BILLING_PERIOD)
  private BillingPeriodEnum billingPeriod;

  public static final String SERIALIZED_NAME_CONSUMPTION_PRICING_RATES = "consumptionPricingRates";
  @SerializedName(SERIALIZED_NAME_CONSUMPTION_PRICING_RATES)
  private List<GoogleCloudApigeeV1RateRange> consumptionPricingRates = new ArrayList<>();

  /**
   * Pricing model used for consumption-based charges.
   */
  @JsonAdapter(ConsumptionPricingTypeEnum.Adapter.class)
  public enum ConsumptionPricingTypeEnum {
    CONSUMPTION_PRICING_TYPE_UNSPECIFIED("CONSUMPTION_PRICING_TYPE_UNSPECIFIED"),
    
    FIXED_PER_UNIT("FIXED_PER_UNIT"),
    
    BANDED("BANDED"),
    
    TIERED("TIERED"),
    
    STAIRSTEP("STAIRSTEP");

    private String value;

    ConsumptionPricingTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConsumptionPricingTypeEnum fromValue(String value) {
      for (ConsumptionPricingTypeEnum b : ConsumptionPricingTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ConsumptionPricingTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConsumptionPricingTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConsumptionPricingTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ConsumptionPricingTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ConsumptionPricingTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONSUMPTION_PRICING_TYPE = "consumptionPricingType";
  @SerializedName(SERIALIZED_NAME_CONSUMPTION_PRICING_TYPE)
  private ConsumptionPricingTypeEnum consumptionPricingType;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_FIXED_FEE_FREQUENCY = "fixedFeeFrequency";
  @SerializedName(SERIALIZED_NAME_FIXED_FEE_FREQUENCY)
  private Integer fixedFeeFrequency;

  public static final String SERIALIZED_NAME_FIXED_RECURRING_FEE = "fixedRecurringFee";
  @SerializedName(SERIALIZED_NAME_FIXED_RECURRING_FEE)
  private GoogleTypeMoney fixedRecurringFee;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "lastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private String lastModifiedAt;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * DEPRECATED: This field is no longer supported and will eventually be removed when Apigee Hybrid 1.5/1.6 is no longer supported. Instead, use the &#x60;billingType&#x60; field inside &#x60;DeveloperMonetizationConfig&#x60; resource. Flag that specifies the billing account type, prepaid or postpaid.
   */
  @JsonAdapter(PaymentFundingModelEnum.Adapter.class)
  public enum PaymentFundingModelEnum {
    PAYMENT_FUNDING_MODEL_UNSPECIFIED("PAYMENT_FUNDING_MODEL_UNSPECIFIED"),
    
    PREPAID("PREPAID"),
    
    POSTPAID("POSTPAID");

    private String value;

    PaymentFundingModelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentFundingModelEnum fromValue(String value) {
      for (PaymentFundingModelEnum b : PaymentFundingModelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PaymentFundingModelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentFundingModelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentFundingModelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PaymentFundingModelEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PaymentFundingModelEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PAYMENT_FUNDING_MODEL = "paymentFundingModel";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PAYMENT_FUNDING_MODEL)
  private PaymentFundingModelEnum paymentFundingModel;

  public static final String SERIALIZED_NAME_REVENUE_SHARE_RATES = "revenueShareRates";
  @SerializedName(SERIALIZED_NAME_REVENUE_SHARE_RATES)
  private List<GoogleCloudApigeeV1RevenueShareRange> revenueShareRates = new ArrayList<>();

  /**
   * Method used to calculate the revenue that is shared with developers.
   */
  @JsonAdapter(RevenueShareTypeEnum.Adapter.class)
  public enum RevenueShareTypeEnum {
    REVENUE_SHARE_TYPE_UNSPECIFIED("REVENUE_SHARE_TYPE_UNSPECIFIED"),
    
    FIXED("FIXED"),
    
    VOLUME_BANDED("VOLUME_BANDED");

    private String value;

    RevenueShareTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RevenueShareTypeEnum fromValue(String value) {
      for (RevenueShareTypeEnum b : RevenueShareTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RevenueShareTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RevenueShareTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RevenueShareTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RevenueShareTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RevenueShareTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REVENUE_SHARE_TYPE = "revenueShareType";
  @SerializedName(SERIALIZED_NAME_REVENUE_SHARE_TYPE)
  private RevenueShareTypeEnum revenueShareType;

  public static final String SERIALIZED_NAME_SETUP_FEE = "setupFee";
  @SerializedName(SERIALIZED_NAME_SETUP_FEE)
  private GoogleTypeMoney setupFee;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Current state of the rate plan (draft or published).
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    DRAFT("DRAFT"),
    
    PUBLISHED("PUBLISHED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public GoogleCloudApigeeV1RatePlan() {
  }

  public GoogleCloudApigeeV1RatePlan(
     String createdAt, 
     String lastModifiedAt, 
     String name
  ) {
    this();
    this.createdAt = createdAt;
    this.lastModifiedAt = lastModifiedAt;
    this.name = name;
  }

  public GoogleCloudApigeeV1RatePlan apiproduct(String apiproduct) {
    this.apiproduct = apiproduct;
    return this;
  }

  /**
   * Name of the API product that the rate plan is associated with.
   * @return apiproduct
   */
  @javax.annotation.Nullable
  public String getApiproduct() {
    return apiproduct;
  }

  public void setApiproduct(String apiproduct) {
    this.apiproduct = apiproduct;
  }


  public GoogleCloudApigeeV1RatePlan billingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
    return this;
  }

  /**
   * Frequency at which the customer will be billed.
   * @return billingPeriod
   */
  @javax.annotation.Nullable
  public BillingPeriodEnum getBillingPeriod() {
    return billingPeriod;
  }

  public void setBillingPeriod(BillingPeriodEnum billingPeriod) {
    this.billingPeriod = billingPeriod;
  }


  public GoogleCloudApigeeV1RatePlan consumptionPricingRates(List<GoogleCloudApigeeV1RateRange> consumptionPricingRates) {
    this.consumptionPricingRates = consumptionPricingRates;
    return this;
  }

  public GoogleCloudApigeeV1RatePlan addConsumptionPricingRatesItem(GoogleCloudApigeeV1RateRange consumptionPricingRatesItem) {
    if (this.consumptionPricingRates == null) {
      this.consumptionPricingRates = new ArrayList<>();
    }
    this.consumptionPricingRates.add(consumptionPricingRatesItem);
    return this;
  }

  /**
   * API call volume ranges and the fees charged when the total number of API calls is within a given range. The method used to calculate the final fee depends on the selected pricing model. For example, if the pricing model is &#x60;STAIRSTEP&#x60; and the ranges are defined as follows: &#x60;&#x60;&#x60; { \&quot;start\&quot;: 1, \&quot;end\&quot;: 100, \&quot;fee\&quot;: 75 }, { \&quot;start\&quot;: 101, \&quot;end\&quot;: 200, \&quot;fee\&quot;: 100 }, } &#x60;&#x60;&#x60; Then the following fees would be charged based on the total number of API calls (assuming the currency selected is &#x60;USD&#x60;): * 1 call costs $75 * 50 calls cost $75 * 150 calls cost $100 The number of API calls cannot exceed 200.
   * @return consumptionPricingRates
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1RateRange> getConsumptionPricingRates() {
    return consumptionPricingRates;
  }

  public void setConsumptionPricingRates(List<GoogleCloudApigeeV1RateRange> consumptionPricingRates) {
    this.consumptionPricingRates = consumptionPricingRates;
  }


  public GoogleCloudApigeeV1RatePlan consumptionPricingType(ConsumptionPricingTypeEnum consumptionPricingType) {
    this.consumptionPricingType = consumptionPricingType;
    return this;
  }

  /**
   * Pricing model used for consumption-based charges.
   * @return consumptionPricingType
   */
  @javax.annotation.Nullable
  public ConsumptionPricingTypeEnum getConsumptionPricingType() {
    return consumptionPricingType;
  }

  public void setConsumptionPricingType(ConsumptionPricingTypeEnum consumptionPricingType) {
    this.consumptionPricingType = consumptionPricingType;
  }


  /**
   * Output only. Time that the rate plan was created in milliseconds since epoch.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }



  public GoogleCloudApigeeV1RatePlan currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Currency to be used for billing. Consists of a three-letter code as defined by the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public GoogleCloudApigeeV1RatePlan description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the rate plan.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudApigeeV1RatePlan displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Display name of the rate plan.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudApigeeV1RatePlan endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Time when the rate plan will expire in milliseconds since epoch. Set to 0 or &#x60;null&#x60; to indicate that the rate plan should never expire.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public GoogleCloudApigeeV1RatePlan fixedFeeFrequency(Integer fixedFeeFrequency) {
    this.fixedFeeFrequency = fixedFeeFrequency;
    return this;
  }

  /**
   * Frequency at which the fixed fee is charged.
   * @return fixedFeeFrequency
   */
  @javax.annotation.Nullable
  public Integer getFixedFeeFrequency() {
    return fixedFeeFrequency;
  }

  public void setFixedFeeFrequency(Integer fixedFeeFrequency) {
    this.fixedFeeFrequency = fixedFeeFrequency;
  }


  public GoogleCloudApigeeV1RatePlan fixedRecurringFee(GoogleTypeMoney fixedRecurringFee) {
    this.fixedRecurringFee = fixedRecurringFee;
    return this;
  }

  /**
   * Get fixedRecurringFee
   * @return fixedRecurringFee
   */
  @javax.annotation.Nullable
  public GoogleTypeMoney getFixedRecurringFee() {
    return fixedRecurringFee;
  }

  public void setFixedRecurringFee(GoogleTypeMoney fixedRecurringFee) {
    this.fixedRecurringFee = fixedRecurringFee;
  }


  /**
   * Output only. Time the rate plan was last modified in milliseconds since epoch.
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public String getLastModifiedAt() {
    return lastModifiedAt;
  }



  /**
   * Output only. Name of the rate plan.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  @Deprecated
  public GoogleCloudApigeeV1RatePlan paymentFundingModel(PaymentFundingModelEnum paymentFundingModel) {
    this.paymentFundingModel = paymentFundingModel;
    return this;
  }

  /**
   * DEPRECATED: This field is no longer supported and will eventually be removed when Apigee Hybrid 1.5/1.6 is no longer supported. Instead, use the &#x60;billingType&#x60; field inside &#x60;DeveloperMonetizationConfig&#x60; resource. Flag that specifies the billing account type, prepaid or postpaid.
   * @return paymentFundingModel
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public PaymentFundingModelEnum getPaymentFundingModel() {
    return paymentFundingModel;
  }

  @Deprecated
  public void setPaymentFundingModel(PaymentFundingModelEnum paymentFundingModel) {
    this.paymentFundingModel = paymentFundingModel;
  }


  public GoogleCloudApigeeV1RatePlan revenueShareRates(List<GoogleCloudApigeeV1RevenueShareRange> revenueShareRates) {
    this.revenueShareRates = revenueShareRates;
    return this;
  }

  public GoogleCloudApigeeV1RatePlan addRevenueShareRatesItem(GoogleCloudApigeeV1RevenueShareRange revenueShareRatesItem) {
    if (this.revenueShareRates == null) {
      this.revenueShareRates = new ArrayList<>();
    }
    this.revenueShareRates.add(revenueShareRatesItem);
    return this;
  }

  /**
   * Details of the revenue sharing model.
   * @return revenueShareRates
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1RevenueShareRange> getRevenueShareRates() {
    return revenueShareRates;
  }

  public void setRevenueShareRates(List<GoogleCloudApigeeV1RevenueShareRange> revenueShareRates) {
    this.revenueShareRates = revenueShareRates;
  }


  public GoogleCloudApigeeV1RatePlan revenueShareType(RevenueShareTypeEnum revenueShareType) {
    this.revenueShareType = revenueShareType;
    return this;
  }

  /**
   * Method used to calculate the revenue that is shared with developers.
   * @return revenueShareType
   */
  @javax.annotation.Nullable
  public RevenueShareTypeEnum getRevenueShareType() {
    return revenueShareType;
  }

  public void setRevenueShareType(RevenueShareTypeEnum revenueShareType) {
    this.revenueShareType = revenueShareType;
  }


  public GoogleCloudApigeeV1RatePlan setupFee(GoogleTypeMoney setupFee) {
    this.setupFee = setupFee;
    return this;
  }

  /**
   * Get setupFee
   * @return setupFee
   */
  @javax.annotation.Nullable
  public GoogleTypeMoney getSetupFee() {
    return setupFee;
  }

  public void setSetupFee(GoogleTypeMoney setupFee) {
    this.setupFee = setupFee;
  }


  public GoogleCloudApigeeV1RatePlan startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Time when the rate plan becomes active in milliseconds since epoch.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public GoogleCloudApigeeV1RatePlan state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * Current state of the rate plan (draft or published).
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1RatePlan googleCloudApigeeV1RatePlan = (GoogleCloudApigeeV1RatePlan) o;
    return Objects.equals(this.apiproduct, googleCloudApigeeV1RatePlan.apiproduct) &&
        Objects.equals(this.billingPeriod, googleCloudApigeeV1RatePlan.billingPeriod) &&
        Objects.equals(this.consumptionPricingRates, googleCloudApigeeV1RatePlan.consumptionPricingRates) &&
        Objects.equals(this.consumptionPricingType, googleCloudApigeeV1RatePlan.consumptionPricingType) &&
        Objects.equals(this.createdAt, googleCloudApigeeV1RatePlan.createdAt) &&
        Objects.equals(this.currencyCode, googleCloudApigeeV1RatePlan.currencyCode) &&
        Objects.equals(this.description, googleCloudApigeeV1RatePlan.description) &&
        Objects.equals(this.displayName, googleCloudApigeeV1RatePlan.displayName) &&
        Objects.equals(this.endTime, googleCloudApigeeV1RatePlan.endTime) &&
        Objects.equals(this.fixedFeeFrequency, googleCloudApigeeV1RatePlan.fixedFeeFrequency) &&
        Objects.equals(this.fixedRecurringFee, googleCloudApigeeV1RatePlan.fixedRecurringFee) &&
        Objects.equals(this.lastModifiedAt, googleCloudApigeeV1RatePlan.lastModifiedAt) &&
        Objects.equals(this.name, googleCloudApigeeV1RatePlan.name) &&
        Objects.equals(this.paymentFundingModel, googleCloudApigeeV1RatePlan.paymentFundingModel) &&
        Objects.equals(this.revenueShareRates, googleCloudApigeeV1RatePlan.revenueShareRates) &&
        Objects.equals(this.revenueShareType, googleCloudApigeeV1RatePlan.revenueShareType) &&
        Objects.equals(this.setupFee, googleCloudApigeeV1RatePlan.setupFee) &&
        Objects.equals(this.startTime, googleCloudApigeeV1RatePlan.startTime) &&
        Objects.equals(this.state, googleCloudApigeeV1RatePlan.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiproduct, billingPeriod, consumptionPricingRates, consumptionPricingType, createdAt, currencyCode, description, displayName, endTime, fixedFeeFrequency, fixedRecurringFee, lastModifiedAt, name, paymentFundingModel, revenueShareRates, revenueShareType, setupFee, startTime, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1RatePlan {\n");
    sb.append("    apiproduct: ").append(toIndentedString(apiproduct)).append("\n");
    sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
    sb.append("    consumptionPricingRates: ").append(toIndentedString(consumptionPricingRates)).append("\n");
    sb.append("    consumptionPricingType: ").append(toIndentedString(consumptionPricingType)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    fixedFeeFrequency: ").append(toIndentedString(fixedFeeFrequency)).append("\n");
    sb.append("    fixedRecurringFee: ").append(toIndentedString(fixedRecurringFee)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    paymentFundingModel: ").append(toIndentedString(paymentFundingModel)).append("\n");
    sb.append("    revenueShareRates: ").append(toIndentedString(revenueShareRates)).append("\n");
    sb.append("    revenueShareType: ").append(toIndentedString(revenueShareType)).append("\n");
    sb.append("    setupFee: ").append(toIndentedString(setupFee)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiproduct");
    openapiFields.add("billingPeriod");
    openapiFields.add("consumptionPricingRates");
    openapiFields.add("consumptionPricingType");
    openapiFields.add("createdAt");
    openapiFields.add("currencyCode");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("endTime");
    openapiFields.add("fixedFeeFrequency");
    openapiFields.add("fixedRecurringFee");
    openapiFields.add("lastModifiedAt");
    openapiFields.add("name");
    openapiFields.add("paymentFundingModel");
    openapiFields.add("revenueShareRates");
    openapiFields.add("revenueShareType");
    openapiFields.add("setupFee");
    openapiFields.add("startTime");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1RatePlan
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1RatePlan.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1RatePlan is not found in the empty JSON string", GoogleCloudApigeeV1RatePlan.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1RatePlan.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1RatePlan` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiproduct") != null && !jsonObj.get("apiproduct").isJsonNull()) && !jsonObj.get("apiproduct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiproduct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiproduct").toString()));
      }
      if ((jsonObj.get("billingPeriod") != null && !jsonObj.get("billingPeriod").isJsonNull()) && !jsonObj.get("billingPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingPeriod").toString()));
      }
      // validate the optional field `billingPeriod`
      if (jsonObj.get("billingPeriod") != null && !jsonObj.get("billingPeriod").isJsonNull()) {
        BillingPeriodEnum.validateJsonElement(jsonObj.get("billingPeriod"));
      }
      if (jsonObj.get("consumptionPricingRates") != null && !jsonObj.get("consumptionPricingRates").isJsonNull()) {
        JsonArray jsonArrayconsumptionPricingRates = jsonObj.getAsJsonArray("consumptionPricingRates");
        if (jsonArrayconsumptionPricingRates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("consumptionPricingRates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `consumptionPricingRates` to be an array in the JSON string but got `%s`", jsonObj.get("consumptionPricingRates").toString()));
          }

          // validate the optional field `consumptionPricingRates` (array)
          for (int i = 0; i < jsonArrayconsumptionPricingRates.size(); i++) {
            GoogleCloudApigeeV1RateRange.validateJsonElement(jsonArrayconsumptionPricingRates.get(i));
          };
        }
      }
      if ((jsonObj.get("consumptionPricingType") != null && !jsonObj.get("consumptionPricingType").isJsonNull()) && !jsonObj.get("consumptionPricingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `consumptionPricingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("consumptionPricingType").toString()));
      }
      // validate the optional field `consumptionPricingType`
      if (jsonObj.get("consumptionPricingType") != null && !jsonObj.get("consumptionPricingType").isJsonNull()) {
        ConsumptionPricingTypeEnum.validateJsonElement(jsonObj.get("consumptionPricingType"));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      // validate the optional field `fixedRecurringFee`
      if (jsonObj.get("fixedRecurringFee") != null && !jsonObj.get("fixedRecurringFee").isJsonNull()) {
        GoogleTypeMoney.validateJsonElement(jsonObj.get("fixedRecurringFee"));
      }
      if ((jsonObj.get("lastModifiedAt") != null && !jsonObj.get("lastModifiedAt").isJsonNull()) && !jsonObj.get("lastModifiedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedAt").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("paymentFundingModel") != null && !jsonObj.get("paymentFundingModel").isJsonNull()) && !jsonObj.get("paymentFundingModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentFundingModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentFundingModel").toString()));
      }
      // validate the optional field `paymentFundingModel`
      if (jsonObj.get("paymentFundingModel") != null && !jsonObj.get("paymentFundingModel").isJsonNull()) {
        PaymentFundingModelEnum.validateJsonElement(jsonObj.get("paymentFundingModel"));
      }
      if (jsonObj.get("revenueShareRates") != null && !jsonObj.get("revenueShareRates").isJsonNull()) {
        JsonArray jsonArrayrevenueShareRates = jsonObj.getAsJsonArray("revenueShareRates");
        if (jsonArrayrevenueShareRates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("revenueShareRates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `revenueShareRates` to be an array in the JSON string but got `%s`", jsonObj.get("revenueShareRates").toString()));
          }

          // validate the optional field `revenueShareRates` (array)
          for (int i = 0; i < jsonArrayrevenueShareRates.size(); i++) {
            GoogleCloudApigeeV1RevenueShareRange.validateJsonElement(jsonArrayrevenueShareRates.get(i));
          };
        }
      }
      if ((jsonObj.get("revenueShareType") != null && !jsonObj.get("revenueShareType").isJsonNull()) && !jsonObj.get("revenueShareType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revenueShareType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revenueShareType").toString()));
      }
      // validate the optional field `revenueShareType`
      if (jsonObj.get("revenueShareType") != null && !jsonObj.get("revenueShareType").isJsonNull()) {
        RevenueShareTypeEnum.validateJsonElement(jsonObj.get("revenueShareType"));
      }
      // validate the optional field `setupFee`
      if (jsonObj.get("setupFee") != null && !jsonObj.get("setupFee").isJsonNull()) {
        GoogleTypeMoney.validateJsonElement(jsonObj.get("setupFee"));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1RatePlan.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1RatePlan' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1RatePlan> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1RatePlan.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1RatePlan>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1RatePlan value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1RatePlan read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1RatePlan given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1RatePlan
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1RatePlan
   */
  public static GoogleCloudApigeeV1RatePlan fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1RatePlan.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1RatePlan to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

