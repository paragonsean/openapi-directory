/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudApigeeV1NodeConfig;
import org.openapitools.client.model.GoogleCloudApigeeV1Properties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudApigeeV1Environment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1Environment {
  /**
   * Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be changed.
   */
  @JsonAdapter(ApiProxyTypeEnum.Adapter.class)
  public enum ApiProxyTypeEnum {
    API_PROXY_TYPE_UNSPECIFIED("API_PROXY_TYPE_UNSPECIFIED"),
    
    PROGRAMMABLE("PROGRAMMABLE"),
    
    CONFIGURABLE("CONFIGURABLE");

    private String value;

    ApiProxyTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ApiProxyTypeEnum fromValue(String value) {
      for (ApiProxyTypeEnum b : ApiProxyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ApiProxyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ApiProxyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ApiProxyTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ApiProxyTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ApiProxyTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_API_PROXY_TYPE = "apiProxyType";
  @SerializedName(SERIALIZED_NAME_API_PROXY_TYPE)
  private ApiProxyTypeEnum apiProxyType;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  /**
   * Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and cannot be changed. When you enable archive deployment, you will be **prevented from performing** a [subset of actions](/apigee/docs/api-platform/local-development/overview#prevented-actions) within the environment, including: * Managing the deployment of API proxy or shared flow revisions * Creating, updating, or deleting resource files * Creating, updating, or deleting target servers
   */
  @JsonAdapter(DeploymentTypeEnum.Adapter.class)
  public enum DeploymentTypeEnum {
    DEPLOYMENT_TYPE_UNSPECIFIED("DEPLOYMENT_TYPE_UNSPECIFIED"),
    
    PROXY("PROXY"),
    
    ARCHIVE("ARCHIVE");

    private String value;

    DeploymentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeploymentTypeEnum fromValue(String value) {
      for (DeploymentTypeEnum b : DeploymentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DeploymentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeploymentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeploymentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DeploymentTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DeploymentTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEPLOYMENT_TYPE = "deploymentType";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_TYPE)
  private DeploymentTypeEnum deploymentType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FORWARD_PROXY_URI = "forwardProxyUri";
  @SerializedName(SERIALIZED_NAME_FORWARD_PROXY_URI)
  private String forwardProxyUri;

  public static final String SERIALIZED_NAME_HAS_ATTACHED_FLOW_HOOKS = "hasAttachedFlowHooks";
  @SerializedName(SERIALIZED_NAME_HAS_ATTACHED_FLOW_HOOKS)
  private Boolean hasAttachedFlowHooks;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "lastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private String lastModifiedAt;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NODE_CONFIG = "nodeConfig";
  @SerializedName(SERIALIZED_NAME_NODE_CONFIG)
  private GoogleCloudApigeeV1NodeConfig nodeConfig;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private GoogleCloudApigeeV1Properties properties;

  /**
   * Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    CREATING("CREATING"),
    
    ACTIVE("ACTIVE"),
    
    DELETING("DELETING"),
    
    UPDATING("UPDATING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  /**
   * Optional. EnvironmentType selected for the environment.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ENVIRONMENT_TYPE_UNSPECIFIED("ENVIRONMENT_TYPE_UNSPECIFIED"),
    
    BASE("BASE"),
    
    INTERMEDIATE("INTERMEDIATE"),
    
    COMPREHENSIVE("COMPREHENSIVE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleCloudApigeeV1Environment() {
  }

  public GoogleCloudApigeeV1Environment(
     String createdAt, 
     String lastModifiedAt, 
     StateEnum state
  ) {
    this();
    this.createdAt = createdAt;
    this.lastModifiedAt = lastModifiedAt;
    this.state = state;
  }

  public GoogleCloudApigeeV1Environment apiProxyType(ApiProxyTypeEnum apiProxyType) {
    this.apiProxyType = apiProxyType;
    return this;
  }

  /**
   * Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be changed.
   * @return apiProxyType
   */
  @javax.annotation.Nullable
  public ApiProxyTypeEnum getApiProxyType() {
    return apiProxyType;
  }

  public void setApiProxyType(ApiProxyTypeEnum apiProxyType) {
    this.apiProxyType = apiProxyType;
  }


  /**
   * Output only. Creation time of this environment as milliseconds since epoch.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }



  public GoogleCloudApigeeV1Environment deploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
    return this;
  }

  /**
   * Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and cannot be changed. When you enable archive deployment, you will be **prevented from performing** a [subset of actions](/apigee/docs/api-platform/local-development/overview#prevented-actions) within the environment, including: * Managing the deployment of API proxy or shared flow revisions * Creating, updating, or deleting resource files * Creating, updating, or deleting target servers
   * @return deploymentType
   */
  @javax.annotation.Nullable
  public DeploymentTypeEnum getDeploymentType() {
    return deploymentType;
  }

  public void setDeploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
  }


  public GoogleCloudApigeeV1Environment description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Description of the environment.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudApigeeV1Environment displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. Display name for this environment.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudApigeeV1Environment forwardProxyUri(String forwardProxyUri) {
    this.forwardProxyUri = forwardProxyUri;
    return this;
  }

  /**
   * Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of {scheme}://{hostname}:{port}. Note that the scheme must be one of \&quot;http\&quot; or \&quot;https\&quot;, and the port must be supplied. To remove a forward proxy setting, update the field to an empty value. Note: At this time, PUT operations to add forwardProxyUri to an existing environment fail if the environment has nodeConfig set up. To successfully add the forwardProxyUri setting in this case, include the NodeConfig details with the request.
   * @return forwardProxyUri
   */
  @javax.annotation.Nullable
  public String getForwardProxyUri() {
    return forwardProxyUri;
  }

  public void setForwardProxyUri(String forwardProxyUri) {
    this.forwardProxyUri = forwardProxyUri;
  }


  public GoogleCloudApigeeV1Environment hasAttachedFlowHooks(Boolean hasAttachedFlowHooks) {
    this.hasAttachedFlowHooks = hasAttachedFlowHooks;
    return this;
  }

  /**
   * Get hasAttachedFlowHooks
   * @return hasAttachedFlowHooks
   */
  @javax.annotation.Nullable
  public Boolean getHasAttachedFlowHooks() {
    return hasAttachedFlowHooks;
  }

  public void setHasAttachedFlowHooks(Boolean hasAttachedFlowHooks) {
    this.hasAttachedFlowHooks = hasAttachedFlowHooks;
  }


  /**
   * Output only. Last modification time of this environment as milliseconds since epoch.
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public String getLastModifiedAt() {
    return lastModifiedAt;
  }



  public GoogleCloudApigeeV1Environment name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Name of the environment. Values must match the regular expression &#x60;^[.\\\\p{Alnum}-_]{1,255}$&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudApigeeV1Environment nodeConfig(GoogleCloudApigeeV1NodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
    return this;
  }

  /**
   * Get nodeConfig
   * @return nodeConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1NodeConfig getNodeConfig() {
    return nodeConfig;
  }

  public void setNodeConfig(GoogleCloudApigeeV1NodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
  }


  public GoogleCloudApigeeV1Environment properties(GoogleCloudApigeeV1Properties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1Properties getProperties() {
    return properties;
  }

  public void setProperties(GoogleCloudApigeeV1Properties properties) {
    this.properties = properties;
  }


  /**
   * Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudApigeeV1Environment type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Optional. EnvironmentType selected for the environment.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1Environment googleCloudApigeeV1Environment = (GoogleCloudApigeeV1Environment) o;
    return Objects.equals(this.apiProxyType, googleCloudApigeeV1Environment.apiProxyType) &&
        Objects.equals(this.createdAt, googleCloudApigeeV1Environment.createdAt) &&
        Objects.equals(this.deploymentType, googleCloudApigeeV1Environment.deploymentType) &&
        Objects.equals(this.description, googleCloudApigeeV1Environment.description) &&
        Objects.equals(this.displayName, googleCloudApigeeV1Environment.displayName) &&
        Objects.equals(this.forwardProxyUri, googleCloudApigeeV1Environment.forwardProxyUri) &&
        Objects.equals(this.hasAttachedFlowHooks, googleCloudApigeeV1Environment.hasAttachedFlowHooks) &&
        Objects.equals(this.lastModifiedAt, googleCloudApigeeV1Environment.lastModifiedAt) &&
        Objects.equals(this.name, googleCloudApigeeV1Environment.name) &&
        Objects.equals(this.nodeConfig, googleCloudApigeeV1Environment.nodeConfig) &&
        Objects.equals(this.properties, googleCloudApigeeV1Environment.properties) &&
        Objects.equals(this.state, googleCloudApigeeV1Environment.state) &&
        Objects.equals(this.type, googleCloudApigeeV1Environment.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiProxyType, createdAt, deploymentType, description, displayName, forwardProxyUri, hasAttachedFlowHooks, lastModifiedAt, name, nodeConfig, properties, state, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1Environment {\n");
    sb.append("    apiProxyType: ").append(toIndentedString(apiProxyType)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deploymentType: ").append(toIndentedString(deploymentType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    forwardProxyUri: ").append(toIndentedString(forwardProxyUri)).append("\n");
    sb.append("    hasAttachedFlowHooks: ").append(toIndentedString(hasAttachedFlowHooks)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeConfig: ").append(toIndentedString(nodeConfig)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiProxyType");
    openapiFields.add("createdAt");
    openapiFields.add("deploymentType");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("forwardProxyUri");
    openapiFields.add("hasAttachedFlowHooks");
    openapiFields.add("lastModifiedAt");
    openapiFields.add("name");
    openapiFields.add("nodeConfig");
    openapiFields.add("properties");
    openapiFields.add("state");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1Environment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1Environment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1Environment is not found in the empty JSON string", GoogleCloudApigeeV1Environment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1Environment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1Environment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiProxyType") != null && !jsonObj.get("apiProxyType").isJsonNull()) && !jsonObj.get("apiProxyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiProxyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiProxyType").toString()));
      }
      // validate the optional field `apiProxyType`
      if (jsonObj.get("apiProxyType") != null && !jsonObj.get("apiProxyType").isJsonNull()) {
        ApiProxyTypeEnum.validateJsonElement(jsonObj.get("apiProxyType"));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("deploymentType") != null && !jsonObj.get("deploymentType").isJsonNull()) && !jsonObj.get("deploymentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deploymentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deploymentType").toString()));
      }
      // validate the optional field `deploymentType`
      if (jsonObj.get("deploymentType") != null && !jsonObj.get("deploymentType").isJsonNull()) {
        DeploymentTypeEnum.validateJsonElement(jsonObj.get("deploymentType"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("forwardProxyUri") != null && !jsonObj.get("forwardProxyUri").isJsonNull()) && !jsonObj.get("forwardProxyUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `forwardProxyUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("forwardProxyUri").toString()));
      }
      if ((jsonObj.get("lastModifiedAt") != null && !jsonObj.get("lastModifiedAt").isJsonNull()) && !jsonObj.get("lastModifiedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedAt").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `nodeConfig`
      if (jsonObj.get("nodeConfig") != null && !jsonObj.get("nodeConfig").isJsonNull()) {
        GoogleCloudApigeeV1NodeConfig.validateJsonElement(jsonObj.get("nodeConfig"));
      }
      // validate the optional field `properties`
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        GoogleCloudApigeeV1Properties.validateJsonElement(jsonObj.get("properties"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1Environment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1Environment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1Environment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1Environment.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1Environment>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1Environment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1Environment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1Environment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1Environment
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1Environment
   */
  public static GoogleCloudApigeeV1Environment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1Environment.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1Environment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

