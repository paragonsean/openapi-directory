/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudApigeeV1CanaryEvaluationMetricLabels;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CanaryEvaluation represents the canary analysis between two versions of the runtime that is serving requests.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1CanaryEvaluation {
  public static final String SERIALIZED_NAME_CONTROL = "control";
  @SerializedName(SERIALIZED_NAME_CONTROL)
  private String control;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_METRIC_LABELS = "metricLabels";
  @SerializedName(SERIALIZED_NAME_METRIC_LABELS)
  private GoogleCloudApigeeV1CanaryEvaluationMetricLabels metricLabels;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. The current state of the canary evaluation.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    RUNNING("RUNNING"),
    
    SUCCEEDED("SUCCEEDED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TREATMENT = "treatment";
  @SerializedName(SERIALIZED_NAME_TREATMENT)
  private String treatment;

  /**
   * Output only. The resulting verdict of the canary evaluations: NONE, PASS, or FAIL.
   */
  @JsonAdapter(VerdictEnum.Adapter.class)
  public enum VerdictEnum {
    VERDICT_UNSPECIFIED("VERDICT_UNSPECIFIED"),
    
    NONE("NONE"),
    
    FAIL("FAIL"),
    
    PASS("PASS");

    private String value;

    VerdictEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VerdictEnum fromValue(String value) {
      for (VerdictEnum b : VerdictEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VerdictEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VerdictEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VerdictEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VerdictEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      VerdictEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VERDICT = "verdict";
  @SerializedName(SERIALIZED_NAME_VERDICT)
  private VerdictEnum verdict;

  public GoogleCloudApigeeV1CanaryEvaluation() {
  }

  public GoogleCloudApigeeV1CanaryEvaluation(
     String createTime, 
     String name, 
     StateEnum state, 
     VerdictEnum verdict
  ) {
    this();
    this.createTime = createTime;
    this.name = name;
    this.state = state;
    this.verdict = verdict;
  }

  public GoogleCloudApigeeV1CanaryEvaluation control(String control) {
    this.control = control;
    return this;
  }

  /**
   * Required. The stable version that is serving requests.
   * @return control
   */
  @javax.annotation.Nullable
  public String getControl() {
    return control;
  }

  public void setControl(String control) {
    this.control = control;
  }


  /**
   * Output only. Create time of the canary evaluation.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudApigeeV1CanaryEvaluation endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Required. End time for the evaluation&#39;s analysis.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public GoogleCloudApigeeV1CanaryEvaluation metricLabels(GoogleCloudApigeeV1CanaryEvaluationMetricLabels metricLabels) {
    this.metricLabels = metricLabels;
    return this;
  }

  /**
   * Get metricLabels
   * @return metricLabels
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1CanaryEvaluationMetricLabels getMetricLabels() {
    return metricLabels;
  }

  public void setMetricLabels(GoogleCloudApigeeV1CanaryEvaluationMetricLabels metricLabels) {
    this.metricLabels = metricLabels;
  }


  /**
   * Output only. Name of the canary evalution.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudApigeeV1CanaryEvaluation startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Required. Start time for the canary evaluation&#39;s analysis.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  /**
   * Output only. The current state of the canary evaluation.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudApigeeV1CanaryEvaluation treatment(String treatment) {
    this.treatment = treatment;
    return this;
  }

  /**
   * Required. The newer version that is serving requests.
   * @return treatment
   */
  @javax.annotation.Nullable
  public String getTreatment() {
    return treatment;
  }

  public void setTreatment(String treatment) {
    this.treatment = treatment;
  }


  /**
   * Output only. The resulting verdict of the canary evaluations: NONE, PASS, or FAIL.
   * @return verdict
   */
  @javax.annotation.Nullable
  public VerdictEnum getVerdict() {
    return verdict;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1CanaryEvaluation googleCloudApigeeV1CanaryEvaluation = (GoogleCloudApigeeV1CanaryEvaluation) o;
    return Objects.equals(this.control, googleCloudApigeeV1CanaryEvaluation.control) &&
        Objects.equals(this.createTime, googleCloudApigeeV1CanaryEvaluation.createTime) &&
        Objects.equals(this.endTime, googleCloudApigeeV1CanaryEvaluation.endTime) &&
        Objects.equals(this.metricLabels, googleCloudApigeeV1CanaryEvaluation.metricLabels) &&
        Objects.equals(this.name, googleCloudApigeeV1CanaryEvaluation.name) &&
        Objects.equals(this.startTime, googleCloudApigeeV1CanaryEvaluation.startTime) &&
        Objects.equals(this.state, googleCloudApigeeV1CanaryEvaluation.state) &&
        Objects.equals(this.treatment, googleCloudApigeeV1CanaryEvaluation.treatment) &&
        Objects.equals(this.verdict, googleCloudApigeeV1CanaryEvaluation.verdict);
  }

  @Override
  public int hashCode() {
    return Objects.hash(control, createTime, endTime, metricLabels, name, startTime, state, treatment, verdict);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1CanaryEvaluation {\n");
    sb.append("    control: ").append(toIndentedString(control)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    metricLabels: ").append(toIndentedString(metricLabels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    treatment: ").append(toIndentedString(treatment)).append("\n");
    sb.append("    verdict: ").append(toIndentedString(verdict)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("control");
    openapiFields.add("createTime");
    openapiFields.add("endTime");
    openapiFields.add("metricLabels");
    openapiFields.add("name");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("treatment");
    openapiFields.add("verdict");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1CanaryEvaluation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1CanaryEvaluation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1CanaryEvaluation is not found in the empty JSON string", GoogleCloudApigeeV1CanaryEvaluation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1CanaryEvaluation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1CanaryEvaluation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("control") != null && !jsonObj.get("control").isJsonNull()) && !jsonObj.get("control").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `control` to be a primitive type in the JSON string but got `%s`", jsonObj.get("control").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      // validate the optional field `metricLabels`
      if (jsonObj.get("metricLabels") != null && !jsonObj.get("metricLabels").isJsonNull()) {
        GoogleCloudApigeeV1CanaryEvaluationMetricLabels.validateJsonElement(jsonObj.get("metricLabels"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("treatment") != null && !jsonObj.get("treatment").isJsonNull()) && !jsonObj.get("treatment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `treatment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("treatment").toString()));
      }
      if ((jsonObj.get("verdict") != null && !jsonObj.get("verdict").isJsonNull()) && !jsonObj.get("verdict").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verdict` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verdict").toString()));
      }
      // validate the optional field `verdict`
      if (jsonObj.get("verdict") != null && !jsonObj.get("verdict").isJsonNull()) {
        VerdictEnum.validateJsonElement(jsonObj.get("verdict"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1CanaryEvaluation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1CanaryEvaluation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1CanaryEvaluation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1CanaryEvaluation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1CanaryEvaluation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1CanaryEvaluation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1CanaryEvaluation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1CanaryEvaluation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1CanaryEvaluation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1CanaryEvaluation
   */
  public static GoogleCloudApigeeV1CanaryEvaluation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1CanaryEvaluation.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1CanaryEvaluation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

