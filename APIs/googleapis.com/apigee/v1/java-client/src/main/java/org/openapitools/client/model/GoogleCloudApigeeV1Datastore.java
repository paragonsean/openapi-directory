/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudApigeeV1DatastoreConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1Datastore {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATASTORE_CONFIG = "datastoreConfig";
  @SerializedName(SERIALIZED_NAME_DATASTORE_CONFIG)
  private GoogleCloudApigeeV1DatastoreConfig datastoreConfig;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME = "lastUpdateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME)
  private String lastUpdateTime;

  public static final String SERIALIZED_NAME_ORG = "org";
  @SerializedName(SERIALIZED_NAME_ORG)
  private String org;

  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private String self;

  public static final String SERIALIZED_NAME_TARGET_TYPE = "targetType";
  @SerializedName(SERIALIZED_NAME_TARGET_TYPE)
  private String targetType;

  public GoogleCloudApigeeV1Datastore() {
  }

  public GoogleCloudApigeeV1Datastore(
     String createTime, 
     String lastUpdateTime, 
     String org, 
     String self
  ) {
    this();
    this.createTime = createTime;
    this.lastUpdateTime = lastUpdateTime;
    this.org = org;
    this.self = self;
  }

  /**
   * Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudApigeeV1Datastore datastoreConfig(GoogleCloudApigeeV1DatastoreConfig datastoreConfig) {
    this.datastoreConfig = datastoreConfig;
    return this;
  }

  /**
   * Get datastoreConfig
   * @return datastoreConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1DatastoreConfig getDatastoreConfig() {
    return datastoreConfig;
  }

  public void setDatastoreConfig(GoogleCloudApigeeV1DatastoreConfig datastoreConfig) {
    this.datastoreConfig = datastoreConfig;
  }


  public GoogleCloudApigeeV1Datastore displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. Display name in UI
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z
   * @return lastUpdateTime
   */
  @javax.annotation.Nullable
  public String getLastUpdateTime() {
    return lastUpdateTime;
  }



  /**
   * Output only. Organization that the datastore belongs to
   * @return org
   */
  @javax.annotation.Nullable
  public String getOrg() {
    return org;
  }



  /**
   * Output only. Resource link of Datastore. Example: &#x60;/organizations/{org}/analytics/datastores/{uuid}&#x60;
   * @return self
   */
  @javax.annotation.Nullable
  public String getSelf() {
    return self;
  }



  public GoogleCloudApigeeV1Datastore targetType(String targetType) {
    this.targetType = targetType;
    return this;
  }

  /**
   * Destination storage type. Supported types &#x60;gcs&#x60; or &#x60;bigquery&#x60;.
   * @return targetType
   */
  @javax.annotation.Nullable
  public String getTargetType() {
    return targetType;
  }

  public void setTargetType(String targetType) {
    this.targetType = targetType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1Datastore googleCloudApigeeV1Datastore = (GoogleCloudApigeeV1Datastore) o;
    return Objects.equals(this.createTime, googleCloudApigeeV1Datastore.createTime) &&
        Objects.equals(this.datastoreConfig, googleCloudApigeeV1Datastore.datastoreConfig) &&
        Objects.equals(this.displayName, googleCloudApigeeV1Datastore.displayName) &&
        Objects.equals(this.lastUpdateTime, googleCloudApigeeV1Datastore.lastUpdateTime) &&
        Objects.equals(this.org, googleCloudApigeeV1Datastore.org) &&
        Objects.equals(this.self, googleCloudApigeeV1Datastore.self) &&
        Objects.equals(this.targetType, googleCloudApigeeV1Datastore.targetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, datastoreConfig, displayName, lastUpdateTime, org, self, targetType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1Datastore {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    datastoreConfig: ").append(toIndentedString(datastoreConfig)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    org: ").append(toIndentedString(org)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("datastoreConfig");
    openapiFields.add("displayName");
    openapiFields.add("lastUpdateTime");
    openapiFields.add("org");
    openapiFields.add("self");
    openapiFields.add("targetType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1Datastore
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1Datastore.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1Datastore is not found in the empty JSON string", GoogleCloudApigeeV1Datastore.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1Datastore.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1Datastore` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `datastoreConfig`
      if (jsonObj.get("datastoreConfig") != null && !jsonObj.get("datastoreConfig").isJsonNull()) {
        GoogleCloudApigeeV1DatastoreConfig.validateJsonElement(jsonObj.get("datastoreConfig"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("lastUpdateTime") != null && !jsonObj.get("lastUpdateTime").isJsonNull()) && !jsonObj.get("lastUpdateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateTime").toString()));
      }
      if ((jsonObj.get("org") != null && !jsonObj.get("org").isJsonNull()) && !jsonObj.get("org").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `org` to be a primitive type in the JSON string but got `%s`", jsonObj.get("org").toString()));
      }
      if ((jsonObj.get("self") != null && !jsonObj.get("self").isJsonNull()) && !jsonObj.get("self").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `self` to be a primitive type in the JSON string but got `%s`", jsonObj.get("self").toString()));
      }
      if ((jsonObj.get("targetType") != null && !jsonObj.get("targetType").isJsonNull()) && !jsonObj.get("targetType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1Datastore.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1Datastore' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1Datastore> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1Datastore.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1Datastore>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1Datastore value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1Datastore read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1Datastore given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1Datastore
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1Datastore
   */
  public static GoogleCloudApigeeV1Datastore fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1Datastore.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1Datastore to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

