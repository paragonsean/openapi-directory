/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1AddonsConfig;
import org.openapitools.client.model.GoogleCloudApigeeV1Properties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudApigeeV1Organization
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1Organization {
  public static final String SERIALIZED_NAME_ADDONS_CONFIG = "addonsConfig";
  @SerializedName(SERIALIZED_NAME_ADDONS_CONFIG)
  private GoogleCloudApigeeV1AddonsConfig addonsConfig;

  public static final String SERIALIZED_NAME_ANALYTICS_REGION = "analyticsRegion";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_ANALYTICS_REGION)
  private String analyticsRegion;

  public static final String SERIALIZED_NAME_API_CONSUMER_DATA_ENCRYPTION_KEY_NAME = "apiConsumerDataEncryptionKeyName";
  @SerializedName(SERIALIZED_NAME_API_CONSUMER_DATA_ENCRYPTION_KEY_NAME)
  private String apiConsumerDataEncryptionKeyName;

  public static final String SERIALIZED_NAME_API_CONSUMER_DATA_LOCATION = "apiConsumerDataLocation";
  @SerializedName(SERIALIZED_NAME_API_CONSUMER_DATA_LOCATION)
  private String apiConsumerDataLocation;

  public static final String SERIALIZED_NAME_APIGEE_PROJECT_ID = "apigeeProjectId";
  @SerializedName(SERIALIZED_NAME_APIGEE_PROJECT_ID)
  private String apigeeProjectId;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<String> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTHORIZED_NETWORK = "authorizedNetwork";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_NETWORK)
  private String authorizedNetwork;

  /**
   * Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).
   */
  @JsonAdapter(BillingTypeEnum.Adapter.class)
  public enum BillingTypeEnum {
    BILLING_TYPE_UNSPECIFIED("BILLING_TYPE_UNSPECIFIED"),
    
    SUBSCRIPTION("SUBSCRIPTION"),
    
    EVALUATION("EVALUATION"),
    
    PAYG("PAYG");

    private String value;

    BillingTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BillingTypeEnum fromValue(String value) {
      for (BillingTypeEnum b : BillingTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BillingTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BillingTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BillingTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BillingTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BillingTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BILLING_TYPE = "billingType";
  @SerializedName(SERIALIZED_NAME_BILLING_TYPE)
  private BillingTypeEnum billingType;

  public static final String SERIALIZED_NAME_CA_CERTIFICATE = "caCertificate";
  @SerializedName(SERIALIZED_NAME_CA_CERTIFICATE)
  private byte[] caCertificate;

  public static final String SERIALIZED_NAME_CONTROL_PLANE_ENCRYPTION_KEY_NAME = "controlPlaneEncryptionKeyName";
  @SerializedName(SERIALIZED_NAME_CONTROL_PLANE_ENCRYPTION_KEY_NAME)
  private String controlPlaneEncryptionKeyName;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CUSTOMER_NAME = "customerName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NAME)
  private String customerName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISABLE_VPC_PEERING = "disableVpcPeering";
  @SerializedName(SERIALIZED_NAME_DISABLE_VPC_PEERING)
  private Boolean disableVpcPeering;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENVIRONMENTS = "environments";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENTS)
  private List<String> environments = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expiresAt";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private String expiresAt;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "lastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private String lastModifiedAt;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PORTAL_DISABLED = "portalDisabled";
  @SerializedName(SERIALIZED_NAME_PORTAL_DISABLED)
  private Boolean portalDisabled;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private GoogleCloudApigeeV1Properties properties;

  public static final String SERIALIZED_NAME_RUNTIME_DATABASE_ENCRYPTION_KEY_NAME = "runtimeDatabaseEncryptionKeyName";
  @SerializedName(SERIALIZED_NAME_RUNTIME_DATABASE_ENCRYPTION_KEY_NAME)
  private String runtimeDatabaseEncryptionKeyName;

  /**
   * Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.
   */
  @JsonAdapter(RuntimeTypeEnum.Adapter.class)
  public enum RuntimeTypeEnum {
    RUNTIME_TYPE_UNSPECIFIED("RUNTIME_TYPE_UNSPECIFIED"),
    
    CLOUD("CLOUD"),
    
    HYBRID("HYBRID");

    private String value;

    RuntimeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RuntimeTypeEnum fromValue(String value) {
      for (RuntimeTypeEnum b : RuntimeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RuntimeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RuntimeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RuntimeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RuntimeTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RuntimeTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RUNTIME_TYPE = "runtimeType";
  @SerializedName(SERIALIZED_NAME_RUNTIME_TYPE)
  private RuntimeTypeEnum runtimeType;

  /**
   * Output only. State of the organization. Values other than ACTIVE means the resource is not ready to use.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    CREATING("CREATING"),
    
    ACTIVE("ACTIVE"),
    
    DELETING("DELETING"),
    
    UPDATING("UPDATING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  /**
   * Output only. Subscription plan that the customer has purchased. Output only.
   */
  @JsonAdapter(SubscriptionPlanEnum.Adapter.class)
  public enum SubscriptionPlanEnum {
    PLAN_UNSPECIFIED("SUBSCRIPTION_PLAN_UNSPECIFIED"),
    
    _2021("SUBSCRIPTION_2021"),
    
    _2024("SUBSCRIPTION_2024");

    private String value;

    SubscriptionPlanEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SubscriptionPlanEnum fromValue(String value) {
      for (SubscriptionPlanEnum b : SubscriptionPlanEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SubscriptionPlanEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubscriptionPlanEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SubscriptionPlanEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SubscriptionPlanEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SubscriptionPlanEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUBSCRIPTION_PLAN = "subscriptionPlan";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_PLAN)
  private SubscriptionPlanEnum subscriptionPlan;

  /**
   * Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
   */
  @JsonAdapter(SubscriptionTypeEnum.Adapter.class)
  public enum SubscriptionTypeEnum {
    SUBSCRIPTION_TYPE_UNSPECIFIED("SUBSCRIPTION_TYPE_UNSPECIFIED"),
    
    PAID("PAID"),
    
    TRIAL("TRIAL");

    private String value;

    SubscriptionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SubscriptionTypeEnum fromValue(String value) {
      for (SubscriptionTypeEnum b : SubscriptionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SubscriptionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubscriptionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SubscriptionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SubscriptionTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SubscriptionTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUBSCRIPTION_TYPE = "subscriptionType";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_TYPE)
  private SubscriptionTypeEnum subscriptionType;

  /**
   * Not used by Apigee.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    UNSPECIFIED("TYPE_UNSPECIFIED"),
    
    TRIAL("TYPE_TRIAL"),
    
    PAID("TYPE_PAID"),
    
    INTERNAL("TYPE_INTERNAL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GoogleCloudApigeeV1Organization() {
  }

  public GoogleCloudApigeeV1Organization(
     String apigeeProjectId, 
     byte[] caCertificate, 
     String createdAt, 
     List<String> environments, 
     String expiresAt, 
     String lastModifiedAt, 
     String name, 
     String projectId, 
     StateEnum state, 
     SubscriptionPlanEnum subscriptionPlan, 
     SubscriptionTypeEnum subscriptionType
  ) {
    this();
    this.apigeeProjectId = apigeeProjectId;
    this.caCertificate = caCertificate;
    this.createdAt = createdAt;
    this.environments = environments;
    this.expiresAt = expiresAt;
    this.lastModifiedAt = lastModifiedAt;
    this.name = name;
    this.projectId = projectId;
    this.state = state;
    this.subscriptionPlan = subscriptionPlan;
    this.subscriptionType = subscriptionType;
  }

  public GoogleCloudApigeeV1Organization addonsConfig(GoogleCloudApigeeV1AddonsConfig addonsConfig) {
    this.addonsConfig = addonsConfig;
    return this;
  }

  /**
   * Get addonsConfig
   * @return addonsConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1AddonsConfig getAddonsConfig() {
    return addonsConfig;
  }

  public void setAddonsConfig(GoogleCloudApigeeV1AddonsConfig addonsConfig) {
    this.addonsConfig = addonsConfig;
  }


  @Deprecated
  public GoogleCloudApigeeV1Organization analyticsRegion(String analyticsRegion) {
    this.analyticsRegion = analyticsRegion;
    return this;
  }

  /**
   * Required. DEPRECATED: This field will eventually be deprecated and replaced with a differently-named field. Primary Google Cloud region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
   * @return analyticsRegion
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getAnalyticsRegion() {
    return analyticsRegion;
  }

  @Deprecated
  public void setAnalyticsRegion(String analyticsRegion) {
    this.analyticsRegion = analyticsRegion;
  }


  public GoogleCloudApigeeV1Organization apiConsumerDataEncryptionKeyName(String apiConsumerDataEncryptionKeyName) {
    this.apiConsumerDataEncryptionKeyName = apiConsumerDataEncryptionKeyName;
    return this;
  }

  /**
   * Cloud KMS key name used for encrypting API consumer data. Required for US/EU regions when [BillingType](#BillingType) is &#x60;SUBSCRIPTION&#x60;. When [BillingType](#BillingType) is &#x60;EVALUATION&#x60; or the region is not US/EU, a Google-Managed encryption key will be used. Format: &#x60;projects/_*_/locations/_*_/keyRings/_*_/cryptoKeys/_*&#x60;
   * @return apiConsumerDataEncryptionKeyName
   */
  @javax.annotation.Nullable
  public String getApiConsumerDataEncryptionKeyName() {
    return apiConsumerDataEncryptionKeyName;
  }

  public void setApiConsumerDataEncryptionKeyName(String apiConsumerDataEncryptionKeyName) {
    this.apiConsumerDataEncryptionKeyName = apiConsumerDataEncryptionKeyName;
  }


  public GoogleCloudApigeeV1Organization apiConsumerDataLocation(String apiConsumerDataLocation) {
    this.apiConsumerDataLocation = apiConsumerDataLocation;
    return this;
  }

  /**
   * This field is needed only for customers with control plane in US or EU. Apigee stores some control plane data only in single region. This field determines which single region Apigee should use. For example: \&quot;us-west1\&quot; when control plane is in US or \&quot;europe-west2\&quot; when control plane is in EU.
   * @return apiConsumerDataLocation
   */
  @javax.annotation.Nullable
  public String getApiConsumerDataLocation() {
    return apiConsumerDataLocation;
  }

  public void setApiConsumerDataLocation(String apiConsumerDataLocation) {
    this.apiConsumerDataLocation = apiConsumerDataLocation;
  }


  /**
   * Output only. Apigee Project ID associated with the organization. Use this project to allowlist Apigee in the Service Attachment when using private service connect with Apigee.
   * @return apigeeProjectId
   */
  @javax.annotation.Nullable
  public String getApigeeProjectId() {
    return apigeeProjectId;
  }



  public GoogleCloudApigeeV1Organization attributes(List<String> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GoogleCloudApigeeV1Organization addAttributesItem(String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Not used by Apigee.
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<String> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<String> attributes) {
    this.attributes = attributes;
  }


  public GoogleCloudApigeeV1Organization authorizedNetwork(String authorizedNetwork) {
    this.authorizedNetwork = authorizedNetwork;
    return this;
  }

  /**
   * Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to &#x60;CLOUD&#x60;. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: &#x60;default&#x60;. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: &#x60;projects/{host-project-id}/{region}/networks/{network-name}&#x60;. For example: &#x60;projects/my-sharedvpc-host/global/networks/mynetwork&#x60; **Note:** Not supported for Apigee hybrid.
   * @return authorizedNetwork
   */
  @javax.annotation.Nullable
  public String getAuthorizedNetwork() {
    return authorizedNetwork;
  }

  public void setAuthorizedNetwork(String authorizedNetwork) {
    this.authorizedNetwork = authorizedNetwork;
  }


  public GoogleCloudApigeeV1Organization billingType(BillingTypeEnum billingType) {
    this.billingType = billingType;
    return this;
  }

  /**
   * Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).
   * @return billingType
   */
  @javax.annotation.Nullable
  public BillingTypeEnum getBillingType() {
    return billingType;
  }

  public void setBillingType(BillingTypeEnum billingType) {
    this.billingType = billingType;
  }


  /**
   * Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is &#x60;CLOUD&#x60;.
   * @return caCertificate
   */
  @javax.annotation.Nullable
  public byte[] getCaCertificate() {
    return caCertificate;
  }



  public GoogleCloudApigeeV1Organization controlPlaneEncryptionKeyName(String controlPlaneEncryptionKeyName) {
    this.controlPlaneEncryptionKeyName = controlPlaneEncryptionKeyName;
    return this;
  }

  /**
   * Cloud KMS key name used for encrypting control plane data that is stored in a multi region. Required when [BillingType](#BillingType) is &#x60;SUBSCRIPTION&#x60;. When [BillingType](#BillingType) is &#x60;EVALUATION&#x60;, a Google-Managed encryption key will be used. Format: &#x60;projects/_*_/locations/_*_/keyRings/_*_/cryptoKeys/_*&#x60;
   * @return controlPlaneEncryptionKeyName
   */
  @javax.annotation.Nullable
  public String getControlPlaneEncryptionKeyName() {
    return controlPlaneEncryptionKeyName;
  }

  public void setControlPlaneEncryptionKeyName(String controlPlaneEncryptionKeyName) {
    this.controlPlaneEncryptionKeyName = controlPlaneEncryptionKeyName;
  }


  /**
   * Output only. Time that the Apigee organization was created in milliseconds since epoch.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }



  public GoogleCloudApigeeV1Organization customerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

  /**
   * Not used by Apigee.
   * @return customerName
   */
  @javax.annotation.Nullable
  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }


  public GoogleCloudApigeeV1Organization description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the Apigee organization.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudApigeeV1Organization disableVpcPeering(Boolean disableVpcPeering) {
    this.disableVpcPeering = disableVpcPeering;
    return this;
  }

  /**
   * Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Valid only when RuntimeType is set to CLOUD. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide &#39;authorizedNetwork&#39;, by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.
   * @return disableVpcPeering
   */
  @javax.annotation.Nullable
  public Boolean getDisableVpcPeering() {
    return disableVpcPeering;
  }

  public void setDisableVpcPeering(Boolean disableVpcPeering) {
    this.disableVpcPeering = disableVpcPeering;
  }


  public GoogleCloudApigeeV1Organization displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Display name for the Apigee organization. Unused, but reserved for future use.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Output only. List of environments in the Apigee organization.
   * @return environments
   */
  @javax.annotation.Nullable
  public List<String> getEnvironments() {
    return environments;
  }



  /**
   * Output only. Time that the Apigee organization is scheduled for deletion.
   * @return expiresAt
   */
  @javax.annotation.Nullable
  public String getExpiresAt() {
    return expiresAt;
  }



  /**
   * Output only. Time that the Apigee organization was last modified in milliseconds since epoch.
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public String getLastModifiedAt() {
    return lastModifiedAt;
  }



  /**
   * Output only. Name of the Apigee organization.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudApigeeV1Organization portalDisabled(Boolean portalDisabled) {
    this.portalDisabled = portalDisabled;
    return this;
  }

  /**
   * Configuration for the Portals settings.
   * @return portalDisabled
   */
  @javax.annotation.Nullable
  public Boolean getPortalDisabled() {
    return portalDisabled;
  }

  public void setPortalDisabled(Boolean portalDisabled) {
    this.portalDisabled = portalDisabled;
  }


  /**
   * Output only. Project ID associated with the Apigee organization.
   * @return projectId
   */
  @javax.annotation.Nullable
  public String getProjectId() {
    return projectId;
  }



  public GoogleCloudApigeeV1Organization properties(GoogleCloudApigeeV1Properties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public GoogleCloudApigeeV1Properties getProperties() {
    return properties;
  }

  public void setProperties(GoogleCloudApigeeV1Properties properties) {
    this.properties = properties;
  }


  public GoogleCloudApigeeV1Organization runtimeDatabaseEncryptionKeyName(String runtimeDatabaseEncryptionKeyName) {
    this.runtimeDatabaseEncryptionKeyName = runtimeDatabaseEncryptionKeyName;
    return this;
  }

  /**
   * Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is &#x60;CLOUD&#x60;. If not specified when [RuntimeType](#RuntimeType) is &#x60;TRIAL&#x60;, a Google-Managed encryption key will be used. For example: \&quot;projects/foo/locations/us/keyRings/bar/cryptoKeys/baz\&quot;. **Note:** Not supported for Apigee hybrid.
   * @return runtimeDatabaseEncryptionKeyName
   */
  @javax.annotation.Nullable
  public String getRuntimeDatabaseEncryptionKeyName() {
    return runtimeDatabaseEncryptionKeyName;
  }

  public void setRuntimeDatabaseEncryptionKeyName(String runtimeDatabaseEncryptionKeyName) {
    this.runtimeDatabaseEncryptionKeyName = runtimeDatabaseEncryptionKeyName;
  }


  public GoogleCloudApigeeV1Organization runtimeType(RuntimeTypeEnum runtimeType) {
    this.runtimeType = runtimeType;
    return this;
  }

  /**
   * Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.
   * @return runtimeType
   */
  @javax.annotation.Nullable
  public RuntimeTypeEnum getRuntimeType() {
    return runtimeType;
  }

  public void setRuntimeType(RuntimeTypeEnum runtimeType) {
    this.runtimeType = runtimeType;
  }


  /**
   * Output only. State of the organization. Values other than ACTIVE means the resource is not ready to use.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. Subscription plan that the customer has purchased. Output only.
   * @return subscriptionPlan
   */
  @javax.annotation.Nullable
  public SubscriptionPlanEnum getSubscriptionPlan() {
    return subscriptionPlan;
  }



  /**
   * Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
   * @return subscriptionType
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public SubscriptionTypeEnum getSubscriptionType() {
    return subscriptionType;
  }



  public GoogleCloudApigeeV1Organization type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Not used by Apigee.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1Organization googleCloudApigeeV1Organization = (GoogleCloudApigeeV1Organization) o;
    return Objects.equals(this.addonsConfig, googleCloudApigeeV1Organization.addonsConfig) &&
        Objects.equals(this.analyticsRegion, googleCloudApigeeV1Organization.analyticsRegion) &&
        Objects.equals(this.apiConsumerDataEncryptionKeyName, googleCloudApigeeV1Organization.apiConsumerDataEncryptionKeyName) &&
        Objects.equals(this.apiConsumerDataLocation, googleCloudApigeeV1Organization.apiConsumerDataLocation) &&
        Objects.equals(this.apigeeProjectId, googleCloudApigeeV1Organization.apigeeProjectId) &&
        Objects.equals(this.attributes, googleCloudApigeeV1Organization.attributes) &&
        Objects.equals(this.authorizedNetwork, googleCloudApigeeV1Organization.authorizedNetwork) &&
        Objects.equals(this.billingType, googleCloudApigeeV1Organization.billingType) &&
        Arrays.equals(this.caCertificate, googleCloudApigeeV1Organization.caCertificate) &&
        Objects.equals(this.controlPlaneEncryptionKeyName, googleCloudApigeeV1Organization.controlPlaneEncryptionKeyName) &&
        Objects.equals(this.createdAt, googleCloudApigeeV1Organization.createdAt) &&
        Objects.equals(this.customerName, googleCloudApigeeV1Organization.customerName) &&
        Objects.equals(this.description, googleCloudApigeeV1Organization.description) &&
        Objects.equals(this.disableVpcPeering, googleCloudApigeeV1Organization.disableVpcPeering) &&
        Objects.equals(this.displayName, googleCloudApigeeV1Organization.displayName) &&
        Objects.equals(this.environments, googleCloudApigeeV1Organization.environments) &&
        Objects.equals(this.expiresAt, googleCloudApigeeV1Organization.expiresAt) &&
        Objects.equals(this.lastModifiedAt, googleCloudApigeeV1Organization.lastModifiedAt) &&
        Objects.equals(this.name, googleCloudApigeeV1Organization.name) &&
        Objects.equals(this.portalDisabled, googleCloudApigeeV1Organization.portalDisabled) &&
        Objects.equals(this.projectId, googleCloudApigeeV1Organization.projectId) &&
        Objects.equals(this.properties, googleCloudApigeeV1Organization.properties) &&
        Objects.equals(this.runtimeDatabaseEncryptionKeyName, googleCloudApigeeV1Organization.runtimeDatabaseEncryptionKeyName) &&
        Objects.equals(this.runtimeType, googleCloudApigeeV1Organization.runtimeType) &&
        Objects.equals(this.state, googleCloudApigeeV1Organization.state) &&
        Objects.equals(this.subscriptionPlan, googleCloudApigeeV1Organization.subscriptionPlan) &&
        Objects.equals(this.subscriptionType, googleCloudApigeeV1Organization.subscriptionType) &&
        Objects.equals(this.type, googleCloudApigeeV1Organization.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addonsConfig, analyticsRegion, apiConsumerDataEncryptionKeyName, apiConsumerDataLocation, apigeeProjectId, attributes, authorizedNetwork, billingType, Arrays.hashCode(caCertificate), controlPlaneEncryptionKeyName, createdAt, customerName, description, disableVpcPeering, displayName, environments, expiresAt, lastModifiedAt, name, portalDisabled, projectId, properties, runtimeDatabaseEncryptionKeyName, runtimeType, state, subscriptionPlan, subscriptionType, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1Organization {\n");
    sb.append("    addonsConfig: ").append(toIndentedString(addonsConfig)).append("\n");
    sb.append("    analyticsRegion: ").append(toIndentedString(analyticsRegion)).append("\n");
    sb.append("    apiConsumerDataEncryptionKeyName: ").append(toIndentedString(apiConsumerDataEncryptionKeyName)).append("\n");
    sb.append("    apiConsumerDataLocation: ").append(toIndentedString(apiConsumerDataLocation)).append("\n");
    sb.append("    apigeeProjectId: ").append(toIndentedString(apigeeProjectId)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    authorizedNetwork: ").append(toIndentedString(authorizedNetwork)).append("\n");
    sb.append("    billingType: ").append(toIndentedString(billingType)).append("\n");
    sb.append("    caCertificate: ").append(toIndentedString(caCertificate)).append("\n");
    sb.append("    controlPlaneEncryptionKeyName: ").append(toIndentedString(controlPlaneEncryptionKeyName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disableVpcPeering: ").append(toIndentedString(disableVpcPeering)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    environments: ").append(toIndentedString(environments)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    portalDisabled: ").append(toIndentedString(portalDisabled)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    runtimeDatabaseEncryptionKeyName: ").append(toIndentedString(runtimeDatabaseEncryptionKeyName)).append("\n");
    sb.append("    runtimeType: ").append(toIndentedString(runtimeType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    subscriptionPlan: ").append(toIndentedString(subscriptionPlan)).append("\n");
    sb.append("    subscriptionType: ").append(toIndentedString(subscriptionType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addonsConfig");
    openapiFields.add("analyticsRegion");
    openapiFields.add("apiConsumerDataEncryptionKeyName");
    openapiFields.add("apiConsumerDataLocation");
    openapiFields.add("apigeeProjectId");
    openapiFields.add("attributes");
    openapiFields.add("authorizedNetwork");
    openapiFields.add("billingType");
    openapiFields.add("caCertificate");
    openapiFields.add("controlPlaneEncryptionKeyName");
    openapiFields.add("createdAt");
    openapiFields.add("customerName");
    openapiFields.add("description");
    openapiFields.add("disableVpcPeering");
    openapiFields.add("displayName");
    openapiFields.add("environments");
    openapiFields.add("expiresAt");
    openapiFields.add("lastModifiedAt");
    openapiFields.add("name");
    openapiFields.add("portalDisabled");
    openapiFields.add("projectId");
    openapiFields.add("properties");
    openapiFields.add("runtimeDatabaseEncryptionKeyName");
    openapiFields.add("runtimeType");
    openapiFields.add("state");
    openapiFields.add("subscriptionPlan");
    openapiFields.add("subscriptionType");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1Organization
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1Organization.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1Organization is not found in the empty JSON string", GoogleCloudApigeeV1Organization.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1Organization.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1Organization` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `addonsConfig`
      if (jsonObj.get("addonsConfig") != null && !jsonObj.get("addonsConfig").isJsonNull()) {
        GoogleCloudApigeeV1AddonsConfig.validateJsonElement(jsonObj.get("addonsConfig"));
      }
      if ((jsonObj.get("analyticsRegion") != null && !jsonObj.get("analyticsRegion").isJsonNull()) && !jsonObj.get("analyticsRegion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `analyticsRegion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("analyticsRegion").toString()));
      }
      if ((jsonObj.get("apiConsumerDataEncryptionKeyName") != null && !jsonObj.get("apiConsumerDataEncryptionKeyName").isJsonNull()) && !jsonObj.get("apiConsumerDataEncryptionKeyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiConsumerDataEncryptionKeyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiConsumerDataEncryptionKeyName").toString()));
      }
      if ((jsonObj.get("apiConsumerDataLocation") != null && !jsonObj.get("apiConsumerDataLocation").isJsonNull()) && !jsonObj.get("apiConsumerDataLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiConsumerDataLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiConsumerDataLocation").toString()));
      }
      if ((jsonObj.get("apigeeProjectId") != null && !jsonObj.get("apigeeProjectId").isJsonNull()) && !jsonObj.get("apigeeProjectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apigeeProjectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apigeeProjectId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull() && !jsonObj.get("attributes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
      }
      if ((jsonObj.get("authorizedNetwork") != null && !jsonObj.get("authorizedNetwork").isJsonNull()) && !jsonObj.get("authorizedNetwork").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedNetwork` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedNetwork").toString()));
      }
      if ((jsonObj.get("billingType") != null && !jsonObj.get("billingType").isJsonNull()) && !jsonObj.get("billingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingType").toString()));
      }
      // validate the optional field `billingType`
      if (jsonObj.get("billingType") != null && !jsonObj.get("billingType").isJsonNull()) {
        BillingTypeEnum.validateJsonElement(jsonObj.get("billingType"));
      }
      if ((jsonObj.get("controlPlaneEncryptionKeyName") != null && !jsonObj.get("controlPlaneEncryptionKeyName").isJsonNull()) && !jsonObj.get("controlPlaneEncryptionKeyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `controlPlaneEncryptionKeyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("controlPlaneEncryptionKeyName").toString()));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("customerName") != null && !jsonObj.get("customerName").isJsonNull()) && !jsonObj.get("customerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("environments") != null && !jsonObj.get("environments").isJsonNull() && !jsonObj.get("environments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `environments` to be an array in the JSON string but got `%s`", jsonObj.get("environments").toString()));
      }
      if ((jsonObj.get("expiresAt") != null && !jsonObj.get("expiresAt").isJsonNull()) && !jsonObj.get("expiresAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiresAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiresAt").toString()));
      }
      if ((jsonObj.get("lastModifiedAt") != null && !jsonObj.get("lastModifiedAt").isJsonNull()) && !jsonObj.get("lastModifiedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedAt").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull()) && !jsonObj.get("projectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectId").toString()));
      }
      // validate the optional field `properties`
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        GoogleCloudApigeeV1Properties.validateJsonElement(jsonObj.get("properties"));
      }
      if ((jsonObj.get("runtimeDatabaseEncryptionKeyName") != null && !jsonObj.get("runtimeDatabaseEncryptionKeyName").isJsonNull()) && !jsonObj.get("runtimeDatabaseEncryptionKeyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runtimeDatabaseEncryptionKeyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runtimeDatabaseEncryptionKeyName").toString()));
      }
      if ((jsonObj.get("runtimeType") != null && !jsonObj.get("runtimeType").isJsonNull()) && !jsonObj.get("runtimeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runtimeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runtimeType").toString()));
      }
      // validate the optional field `runtimeType`
      if (jsonObj.get("runtimeType") != null && !jsonObj.get("runtimeType").isJsonNull()) {
        RuntimeTypeEnum.validateJsonElement(jsonObj.get("runtimeType"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("subscriptionPlan") != null && !jsonObj.get("subscriptionPlan").isJsonNull()) && !jsonObj.get("subscriptionPlan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionPlan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionPlan").toString()));
      }
      // validate the optional field `subscriptionPlan`
      if (jsonObj.get("subscriptionPlan") != null && !jsonObj.get("subscriptionPlan").isJsonNull()) {
        SubscriptionPlanEnum.validateJsonElement(jsonObj.get("subscriptionPlan"));
      }
      if ((jsonObj.get("subscriptionType") != null && !jsonObj.get("subscriptionType").isJsonNull()) && !jsonObj.get("subscriptionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionType").toString()));
      }
      // validate the optional field `subscriptionType`
      if (jsonObj.get("subscriptionType") != null && !jsonObj.get("subscriptionType").isJsonNull()) {
        SubscriptionTypeEnum.validateJsonElement(jsonObj.get("subscriptionType"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1Organization.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1Organization' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1Organization> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1Organization.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1Organization>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1Organization value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1Organization read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1Organization given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1Organization
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1Organization
   */
  public static GoogleCloudApigeeV1Organization fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1Organization.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1Organization to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

