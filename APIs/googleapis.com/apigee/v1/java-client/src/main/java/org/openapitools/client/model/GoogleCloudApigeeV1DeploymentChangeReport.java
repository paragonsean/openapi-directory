/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1DeploymentChangeReportRoutingChange;
import org.openapitools.client.model.GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict;
import org.openapitools.client.model.GoogleRpcPreconditionFailure;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some base path in the proxy will not receive traffic due to an existing deployment having already claimed that base path. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1DeploymentChangeReport {
  public static final String SERIALIZED_NAME_ROUTING_CHANGES = "routingChanges";
  @SerializedName(SERIALIZED_NAME_ROUTING_CHANGES)
  private List<GoogleCloudApigeeV1DeploymentChangeReportRoutingChange> routingChanges = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROUTING_CONFLICTS = "routingConflicts";
  @SerializedName(SERIALIZED_NAME_ROUTING_CONFLICTS)
  private List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> routingConflicts = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALIDATION_ERRORS = "validationErrors";
  @SerializedName(SERIALIZED_NAME_VALIDATION_ERRORS)
  private GoogleRpcPreconditionFailure validationErrors;

  public GoogleCloudApigeeV1DeploymentChangeReport() {
  }

  public GoogleCloudApigeeV1DeploymentChangeReport routingChanges(List<GoogleCloudApigeeV1DeploymentChangeReportRoutingChange> routingChanges) {
    this.routingChanges = routingChanges;
    return this;
  }

  public GoogleCloudApigeeV1DeploymentChangeReport addRoutingChangesItem(GoogleCloudApigeeV1DeploymentChangeReportRoutingChange routingChangesItem) {
    if (this.routingChanges == null) {
      this.routingChanges = new ArrayList<>();
    }
    this.routingChanges.add(routingChangesItem);
    return this;
  }

  /**
   * All routing changes that may result from a deployment request.
   * @return routingChanges
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1DeploymentChangeReportRoutingChange> getRoutingChanges() {
    return routingChanges;
  }

  public void setRoutingChanges(List<GoogleCloudApigeeV1DeploymentChangeReportRoutingChange> routingChanges) {
    this.routingChanges = routingChanges;
  }


  public GoogleCloudApigeeV1DeploymentChangeReport routingConflicts(List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> routingConflicts) {
    this.routingConflicts = routingConflicts;
    return this;
  }

  public GoogleCloudApigeeV1DeploymentChangeReport addRoutingConflictsItem(GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict routingConflictsItem) {
    if (this.routingConflicts == null) {
      this.routingConflicts = new ArrayList<>();
    }
    this.routingConflicts.add(routingConflictsItem);
    return this;
  }

  /**
   * All base path conflicts detected for a deployment request.
   * @return routingConflicts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> getRoutingConflicts() {
    return routingConflicts;
  }

  public void setRoutingConflicts(List<GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict> routingConflicts) {
    this.routingConflicts = routingConflicts;
  }


  public GoogleCloudApigeeV1DeploymentChangeReport validationErrors(GoogleRpcPreconditionFailure validationErrors) {
    this.validationErrors = validationErrors;
    return this;
  }

  /**
   * Get validationErrors
   * @return validationErrors
   */
  @javax.annotation.Nullable
  public GoogleRpcPreconditionFailure getValidationErrors() {
    return validationErrors;
  }

  public void setValidationErrors(GoogleRpcPreconditionFailure validationErrors) {
    this.validationErrors = validationErrors;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1DeploymentChangeReport googleCloudApigeeV1DeploymentChangeReport = (GoogleCloudApigeeV1DeploymentChangeReport) o;
    return Objects.equals(this.routingChanges, googleCloudApigeeV1DeploymentChangeReport.routingChanges) &&
        Objects.equals(this.routingConflicts, googleCloudApigeeV1DeploymentChangeReport.routingConflicts) &&
        Objects.equals(this.validationErrors, googleCloudApigeeV1DeploymentChangeReport.validationErrors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(routingChanges, routingConflicts, validationErrors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1DeploymentChangeReport {\n");
    sb.append("    routingChanges: ").append(toIndentedString(routingChanges)).append("\n");
    sb.append("    routingConflicts: ").append(toIndentedString(routingConflicts)).append("\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("routingChanges");
    openapiFields.add("routingConflicts");
    openapiFields.add("validationErrors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1DeploymentChangeReport
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1DeploymentChangeReport.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1DeploymentChangeReport is not found in the empty JSON string", GoogleCloudApigeeV1DeploymentChangeReport.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1DeploymentChangeReport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1DeploymentChangeReport` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("routingChanges") != null && !jsonObj.get("routingChanges").isJsonNull()) {
        JsonArray jsonArrayroutingChanges = jsonObj.getAsJsonArray("routingChanges");
        if (jsonArrayroutingChanges != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routingChanges").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routingChanges` to be an array in the JSON string but got `%s`", jsonObj.get("routingChanges").toString()));
          }

          // validate the optional field `routingChanges` (array)
          for (int i = 0; i < jsonArrayroutingChanges.size(); i++) {
            GoogleCloudApigeeV1DeploymentChangeReportRoutingChange.validateJsonElement(jsonArrayroutingChanges.get(i));
          };
        }
      }
      if (jsonObj.get("routingConflicts") != null && !jsonObj.get("routingConflicts").isJsonNull()) {
        JsonArray jsonArrayroutingConflicts = jsonObj.getAsJsonArray("routingConflicts");
        if (jsonArrayroutingConflicts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routingConflicts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routingConflicts` to be an array in the JSON string but got `%s`", jsonObj.get("routingConflicts").toString()));
          }

          // validate the optional field `routingConflicts` (array)
          for (int i = 0; i < jsonArrayroutingConflicts.size(); i++) {
            GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict.validateJsonElement(jsonArrayroutingConflicts.get(i));
          };
        }
      }
      // validate the optional field `validationErrors`
      if (jsonObj.get("validationErrors") != null && !jsonObj.get("validationErrors").isJsonNull()) {
        GoogleRpcPreconditionFailure.validateJsonElement(jsonObj.get("validationErrors"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1DeploymentChangeReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1DeploymentChangeReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1DeploymentChangeReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1DeploymentChangeReport.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1DeploymentChangeReport>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1DeploymentChangeReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1DeploymentChangeReport read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1DeploymentChangeReport given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1DeploymentChangeReport
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1DeploymentChangeReport
   */
  public static GoogleCloudApigeeV1DeploymentChangeReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1DeploymentChangeReport.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1DeploymentChangeReport to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

