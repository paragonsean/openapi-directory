/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudApigeeV1Point;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A transaction contains all of the debug information of the entire message flow of an API call processed by the runtime plane. The information is collected and recorded at critical points of the message flow in the runtime apiproxy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1DebugSessionTransaction {
  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private Boolean completed;

  public static final String SERIALIZED_NAME_POINT = "point";
  @SerializedName(SERIALIZED_NAME_POINT)
  private List<GoogleCloudApigeeV1Point> point = new ArrayList<>();

  public GoogleCloudApigeeV1DebugSessionTransaction() {
  }

  public GoogleCloudApigeeV1DebugSessionTransaction completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

  /**
   * Flag indicating whether a transaction is completed or not
   * @return completed
   */
  @javax.annotation.Nullable
  public Boolean getCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  public GoogleCloudApigeeV1DebugSessionTransaction point(List<GoogleCloudApigeeV1Point> point) {
    this.point = point;
    return this;
  }

  public GoogleCloudApigeeV1DebugSessionTransaction addPointItem(GoogleCloudApigeeV1Point pointItem) {
    if (this.point == null) {
      this.point = new ArrayList<>();
    }
    this.point.add(pointItem);
    return this;
  }

  /**
   * List of debug data collected by runtime plane at various defined points in the flow.
   * @return point
   */
  @javax.annotation.Nullable
  public List<GoogleCloudApigeeV1Point> getPoint() {
    return point;
  }

  public void setPoint(List<GoogleCloudApigeeV1Point> point) {
    this.point = point;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1DebugSessionTransaction googleCloudApigeeV1DebugSessionTransaction = (GoogleCloudApigeeV1DebugSessionTransaction) o;
    return Objects.equals(this.completed, googleCloudApigeeV1DebugSessionTransaction.completed) &&
        Objects.equals(this.point, googleCloudApigeeV1DebugSessionTransaction.point);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completed, point);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1DebugSessionTransaction {\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    point: ").append(toIndentedString(point)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("completed");
    openapiFields.add("point");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1DebugSessionTransaction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1DebugSessionTransaction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1DebugSessionTransaction is not found in the empty JSON string", GoogleCloudApigeeV1DebugSessionTransaction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1DebugSessionTransaction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1DebugSessionTransaction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("point") != null && !jsonObj.get("point").isJsonNull()) {
        JsonArray jsonArraypoint = jsonObj.getAsJsonArray("point");
        if (jsonArraypoint != null) {
          // ensure the json data is an array
          if (!jsonObj.get("point").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `point` to be an array in the JSON string but got `%s`", jsonObj.get("point").toString()));
          }

          // validate the optional field `point` (array)
          for (int i = 0; i < jsonArraypoint.size(); i++) {
            GoogleCloudApigeeV1Point.validateJsonElement(jsonArraypoint.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1DebugSessionTransaction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1DebugSessionTransaction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1DebugSessionTransaction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1DebugSessionTransaction.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1DebugSessionTransaction>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1DebugSessionTransaction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1DebugSessionTransaction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1DebugSessionTransaction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1DebugSessionTransaction
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1DebugSessionTransaction
   */
  public static GoogleCloudApigeeV1DebugSessionTransaction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1DebugSessionTransaction.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1DebugSessionTransaction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

