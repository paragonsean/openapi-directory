/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request for ProvisionOrganization.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1ProvisionOrganizationRequest {
  public static final String SERIALIZED_NAME_ANALYTICS_REGION = "analyticsRegion";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_REGION)
  private String analyticsRegion;

  public static final String SERIALIZED_NAME_AUTHORIZED_NETWORK = "authorizedNetwork";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_NETWORK)
  private String authorizedNetwork;

  public static final String SERIALIZED_NAME_DISABLE_VPC_PEERING = "disableVpcPeering";
  @SerializedName(SERIALIZED_NAME_DISABLE_VPC_PEERING)
  private Boolean disableVpcPeering;

  public static final String SERIALIZED_NAME_RUNTIME_LOCATION = "runtimeLocation";
  @SerializedName(SERIALIZED_NAME_RUNTIME_LOCATION)
  private String runtimeLocation;

  public GoogleCloudApigeeV1ProvisionOrganizationRequest() {
  }

  public GoogleCloudApigeeV1ProvisionOrganizationRequest analyticsRegion(String analyticsRegion) {
    this.analyticsRegion = analyticsRegion;
    return this;
  }

  /**
   * Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://cloud.google.com/apigee/docs/hybrid/latest/precog-provision). Defaults to &#x60;us-west1&#x60;.
   * @return analyticsRegion
   */
  @javax.annotation.Nullable
  public String getAnalyticsRegion() {
    return analyticsRegion;
  }

  public void setAnalyticsRegion(String analyticsRegion) {
    this.analyticsRegion = analyticsRegion;
  }


  public GoogleCloudApigeeV1ProvisionOrganizationRequest authorizedNetwork(String authorizedNetwork) {
    this.authorizedNetwork = authorizedNetwork;
    return this;
  }

  /**
   * Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: &#x60;projects/{host-project-id}/{region}/networks/{network-name}&#x60;. For example: &#x60;projects/my-sharedvpc-host/global/networks/mynetwork&#x60;
   * @return authorizedNetwork
   */
  @javax.annotation.Nullable
  public String getAuthorizedNetwork() {
    return authorizedNetwork;
  }

  public void setAuthorizedNetwork(String authorizedNetwork) {
    this.authorizedNetwork = authorizedNetwork;
  }


  public GoogleCloudApigeeV1ProvisionOrganizationRequest disableVpcPeering(Boolean disableVpcPeering) {
    this.disableVpcPeering = disableVpcPeering;
    return this;
  }

  /**
   * Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide &#39;authorizedNetwork&#39;, by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.
   * @return disableVpcPeering
   */
  @javax.annotation.Nullable
  public Boolean getDisableVpcPeering() {
    return disableVpcPeering;
  }

  public void setDisableVpcPeering(Boolean disableVpcPeering) {
    this.disableVpcPeering = disableVpcPeering;
  }


  public GoogleCloudApigeeV1ProvisionOrganizationRequest runtimeLocation(String runtimeLocation) {
    this.runtimeLocation = runtimeLocation;
    return this;
  }

  /**
   * Cloud Platform location for the runtime instance. Defaults to zone &#x60;us-west1-a&#x60;. If a region is provided, &#x60;EVAL&#x60; organizations will use the region for automatically selecting a zone for the runtime instance.
   * @return runtimeLocation
   */
  @javax.annotation.Nullable
  public String getRuntimeLocation() {
    return runtimeLocation;
  }

  public void setRuntimeLocation(String runtimeLocation) {
    this.runtimeLocation = runtimeLocation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1ProvisionOrganizationRequest googleCloudApigeeV1ProvisionOrganizationRequest = (GoogleCloudApigeeV1ProvisionOrganizationRequest) o;
    return Objects.equals(this.analyticsRegion, googleCloudApigeeV1ProvisionOrganizationRequest.analyticsRegion) &&
        Objects.equals(this.authorizedNetwork, googleCloudApigeeV1ProvisionOrganizationRequest.authorizedNetwork) &&
        Objects.equals(this.disableVpcPeering, googleCloudApigeeV1ProvisionOrganizationRequest.disableVpcPeering) &&
        Objects.equals(this.runtimeLocation, googleCloudApigeeV1ProvisionOrganizationRequest.runtimeLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyticsRegion, authorizedNetwork, disableVpcPeering, runtimeLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1ProvisionOrganizationRequest {\n");
    sb.append("    analyticsRegion: ").append(toIndentedString(analyticsRegion)).append("\n");
    sb.append("    authorizedNetwork: ").append(toIndentedString(authorizedNetwork)).append("\n");
    sb.append("    disableVpcPeering: ").append(toIndentedString(disableVpcPeering)).append("\n");
    sb.append("    runtimeLocation: ").append(toIndentedString(runtimeLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("analyticsRegion");
    openapiFields.add("authorizedNetwork");
    openapiFields.add("disableVpcPeering");
    openapiFields.add("runtimeLocation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1ProvisionOrganizationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1ProvisionOrganizationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1ProvisionOrganizationRequest is not found in the empty JSON string", GoogleCloudApigeeV1ProvisionOrganizationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1ProvisionOrganizationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1ProvisionOrganizationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("analyticsRegion") != null && !jsonObj.get("analyticsRegion").isJsonNull()) && !jsonObj.get("analyticsRegion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `analyticsRegion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("analyticsRegion").toString()));
      }
      if ((jsonObj.get("authorizedNetwork") != null && !jsonObj.get("authorizedNetwork").isJsonNull()) && !jsonObj.get("authorizedNetwork").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedNetwork` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedNetwork").toString()));
      }
      if ((jsonObj.get("runtimeLocation") != null && !jsonObj.get("runtimeLocation").isJsonNull()) && !jsonObj.get("runtimeLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runtimeLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runtimeLocation").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1ProvisionOrganizationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1ProvisionOrganizationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1ProvisionOrganizationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1ProvisionOrganizationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1ProvisionOrganizationRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1ProvisionOrganizationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1ProvisionOrganizationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1ProvisionOrganizationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1ProvisionOrganizationRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1ProvisionOrganizationRequest
   */
  public static GoogleCloudApigeeV1ProvisionOrganizationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1ProvisionOrganizationRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1ProvisionOrganizationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

