/*
 * Apigee API
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudApigeeV1FlowHook
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:44:08.695175-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudApigeeV1FlowHook {
  public static final String SERIALIZED_NAME_CONTINUE_ON_ERROR = "continueOnError";
  @SerializedName(SERIALIZED_NAME_CONTINUE_ON_ERROR)
  private Boolean continueOnError;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FLOW_HOOK_POINT = "flowHookPoint";
  @SerializedName(SERIALIZED_NAME_FLOW_HOOK_POINT)
  private String flowHookPoint;

  public static final String SERIALIZED_NAME_SHARED_FLOW = "sharedFlow";
  @SerializedName(SERIALIZED_NAME_SHARED_FLOW)
  private String sharedFlow;

  public GoogleCloudApigeeV1FlowHook() {
  }

  public GoogleCloudApigeeV1FlowHook(
     String flowHookPoint
  ) {
    this();
    this.flowHookPoint = flowHookPoint;
  }

  public GoogleCloudApigeeV1FlowHook continueOnError(Boolean continueOnError) {
    this.continueOnError = continueOnError;
    return this;
  }

  /**
   * Optional. Flag that specifies whether execution should continue if the flow hook throws an exception. Set to &#x60;true&#x60; to continue execution. Set to &#x60;false&#x60; to stop execution if the flow hook throws an exception. Defaults to &#x60;true&#x60;.
   * @return continueOnError
   */
  @javax.annotation.Nullable
  public Boolean getContinueOnError() {
    return continueOnError;
  }

  public void setContinueOnError(Boolean continueOnError) {
    this.continueOnError = continueOnError;
  }


  public GoogleCloudApigeeV1FlowHook description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the flow hook.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Output only. Where in the API call flow the flow hook is invoked. Must be one of &#x60;PreProxyFlowHook&#x60;, &#x60;PostProxyFlowHook&#x60;, &#x60;PreTargetFlowHook&#x60;, or &#x60;PostTargetFlowHook&#x60;.
   * @return flowHookPoint
   */
  @javax.annotation.Nullable
  public String getFlowHookPoint() {
    return flowHookPoint;
  }



  public GoogleCloudApigeeV1FlowHook sharedFlow(String sharedFlow) {
    this.sharedFlow = sharedFlow;
    return this;
  }

  /**
   * Shared flow attached to this flow hook, or empty if there is none attached.
   * @return sharedFlow
   */
  @javax.annotation.Nullable
  public String getSharedFlow() {
    return sharedFlow;
  }

  public void setSharedFlow(String sharedFlow) {
    this.sharedFlow = sharedFlow;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudApigeeV1FlowHook googleCloudApigeeV1FlowHook = (GoogleCloudApigeeV1FlowHook) o;
    return Objects.equals(this.continueOnError, googleCloudApigeeV1FlowHook.continueOnError) &&
        Objects.equals(this.description, googleCloudApigeeV1FlowHook.description) &&
        Objects.equals(this.flowHookPoint, googleCloudApigeeV1FlowHook.flowHookPoint) &&
        Objects.equals(this.sharedFlow, googleCloudApigeeV1FlowHook.sharedFlow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(continueOnError, description, flowHookPoint, sharedFlow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudApigeeV1FlowHook {\n");
    sb.append("    continueOnError: ").append(toIndentedString(continueOnError)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flowHookPoint: ").append(toIndentedString(flowHookPoint)).append("\n");
    sb.append("    sharedFlow: ").append(toIndentedString(sharedFlow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("continueOnError");
    openapiFields.add("description");
    openapiFields.add("flowHookPoint");
    openapiFields.add("sharedFlow");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudApigeeV1FlowHook
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudApigeeV1FlowHook.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudApigeeV1FlowHook is not found in the empty JSON string", GoogleCloudApigeeV1FlowHook.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudApigeeV1FlowHook.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudApigeeV1FlowHook` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("flowHookPoint") != null && !jsonObj.get("flowHookPoint").isJsonNull()) && !jsonObj.get("flowHookPoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flowHookPoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flowHookPoint").toString()));
      }
      if ((jsonObj.get("sharedFlow") != null && !jsonObj.get("sharedFlow").isJsonNull()) && !jsonObj.get("sharedFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sharedFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sharedFlow").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudApigeeV1FlowHook.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudApigeeV1FlowHook' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudApigeeV1FlowHook> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudApigeeV1FlowHook.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudApigeeV1FlowHook>() {
           @Override
           public void write(JsonWriter out, GoogleCloudApigeeV1FlowHook value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudApigeeV1FlowHook read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudApigeeV1FlowHook given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudApigeeV1FlowHook
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudApigeeV1FlowHook
   */
  public static GoogleCloudApigeeV1FlowHook fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudApigeeV1FlowHook.class);
  }

  /**
   * Convert an instance of GoogleCloudApigeeV1FlowHook to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

