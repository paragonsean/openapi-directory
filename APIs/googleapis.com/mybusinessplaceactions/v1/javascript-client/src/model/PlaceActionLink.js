/**
 * My Business Place Actions API
 * The My Business Place Actions API provides an interface for managing place action links of a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlaceActionLink model module.
 * @module model/PlaceActionLink
 * @version v1
 */
class PlaceActionLink {
    /**
     * Constructs a new <code>PlaceActionLink</code>.
     * Represents a place action link and its attributes.
     * @alias module:model/PlaceActionLink
     */
    constructor() { 
        
        PlaceActionLink.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlaceActionLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlaceActionLink} obj Optional instance to populate.
     * @return {module:model/PlaceActionLink} The populated <code>PlaceActionLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlaceActionLink();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('isEditable')) {
                obj['isEditable'] = ApiClient.convertToType(data['isEditable'], 'Boolean');
            }
            if (data.hasOwnProperty('isPreferred')) {
                obj['isPreferred'] = ApiClient.convertToType(data['isPreferred'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('placeActionType')) {
                obj['placeActionType'] = ApiClient.convertToType(data['placeActionType'], 'String');
            }
            if (data.hasOwnProperty('providerType')) {
                obj['providerType'] = ApiClient.convertToType(data['providerType'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlaceActionLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlaceActionLink</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['placeActionType'] && !(typeof data['placeActionType'] === 'string' || data['placeActionType'] instanceof String)) {
            throw new Error("Expected the field `placeActionType` to be a primitive type in the JSON string but got " + data['placeActionType']);
        }
        // ensure the json data is a string
        if (data['providerType'] && !(typeof data['providerType'] === 'string' || data['providerType'] instanceof String)) {
            throw new Error("Expected the field `providerType` to be a primitive type in the JSON string but got " + data['providerType']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Output only. The time when the place action link was created.
 * @member {String} createTime
 */
PlaceActionLink.prototype['createTime'] = undefined;

/**
 * Output only. Indicates whether this link can be edited by the client.
 * @member {Boolean} isEditable
 */
PlaceActionLink.prototype['isEditable'] = undefined;

/**
 * Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference.
 * @member {Boolean} isPreferred
 */
PlaceActionLink.prototype['isPreferred'] = undefined;

/**
 * Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.
 * @member {String} name
 */
PlaceActionLink.prototype['name'] = undefined;

/**
 * Required. The type of place action that can be performed using this link.
 * @member {module:model/PlaceActionLink.PlaceActionTypeEnum} placeActionType
 */
PlaceActionLink.prototype['placeActionType'] = undefined;

/**
 * Output only. Specifies the provider type.
 * @member {module:model/PlaceActionLink.ProviderTypeEnum} providerType
 */
PlaceActionLink.prototype['providerType'] = undefined;

/**
 * Output only. The time when the place action link was last modified.
 * @member {String} updateTime
 */
PlaceActionLink.prototype['updateTime'] = undefined;

/**
 * Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location).
 * @member {String} uri
 */
PlaceActionLink.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>placeActionType</code> property.
 * @enum {String}
 * @readonly
 */
PlaceActionLink['PlaceActionTypeEnum'] = {

    /**
     * value: "PLACE_ACTION_TYPE_UNSPECIFIED"
     * @const
     */
    "PLACE_ACTION_TYPE_UNSPECIFIED": "PLACE_ACTION_TYPE_UNSPECIFIED",

    /**
     * value: "APPOINTMENT"
     * @const
     */
    "APPOINTMENT": "APPOINTMENT",

    /**
     * value: "ONLINE_APPOINTMENT"
     * @const
     */
    "ONLINE_APPOINTMENT": "ONLINE_APPOINTMENT",

    /**
     * value: "DINING_RESERVATION"
     * @const
     */
    "DINING_RESERVATION": "DINING_RESERVATION",

    /**
     * value: "FOOD_ORDERING"
     * @const
     */
    "FOOD_ORDERING": "FOOD_ORDERING",

    /**
     * value: "FOOD_DELIVERY"
     * @const
     */
    "FOOD_DELIVERY": "FOOD_DELIVERY",

    /**
     * value: "FOOD_TAKEOUT"
     * @const
     */
    "FOOD_TAKEOUT": "FOOD_TAKEOUT",

    /**
     * value: "SHOP_ONLINE"
     * @const
     */
    "SHOP_ONLINE": "SHOP_ONLINE"
};


/**
 * Allowed values for the <code>providerType</code> property.
 * @enum {String}
 * @readonly
 */
PlaceActionLink['ProviderTypeEnum'] = {

    /**
     * value: "PROVIDER_TYPE_UNSPECIFIED"
     * @const
     */
    "PROVIDER_TYPE_UNSPECIFIED": "PROVIDER_TYPE_UNSPECIFIED",

    /**
     * value: "MERCHANT"
     * @const
     */
    "MERCHANT": "MERCHANT",

    /**
     * value: "AGGREGATOR_3P"
     * @const
     */
    "AGGREGATOR_3P": "AGGREGATOR_3P"
};



export default PlaceActionLink;

