/**
 * My Business Place Actions API
 * The My Business Place Actions API provides an interface for managing place action links of a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ListPlaceActionLinksResponse from './model/ListPlaceActionLinksResponse';
import ListPlaceActionTypeMetadataResponse from './model/ListPlaceActionTypeMetadataResponse';
import PlaceActionLink from './model/PlaceActionLink';
import PlaceActionTypeMetadata from './model/PlaceActionTypeMetadata';
import LocationsApi from './api/LocationsApi';
import PlaceActionTypeMetadataApi from './api/PlaceActionTypeMetadataApi';


/**
* The My Business Place Actions API provides an interface for managing place action links of a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MyBusinessPlaceActionsApi = require('index'); // See note below*.
* var xxxSvc = new MyBusinessPlaceActionsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MyBusinessPlaceActionsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MyBusinessPlaceActionsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MyBusinessPlaceActionsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ListPlaceActionLinksResponse model constructor.
     * @property {module:model/ListPlaceActionLinksResponse}
     */
    ListPlaceActionLinksResponse,

    /**
     * The ListPlaceActionTypeMetadataResponse model constructor.
     * @property {module:model/ListPlaceActionTypeMetadataResponse}
     */
    ListPlaceActionTypeMetadataResponse,

    /**
     * The PlaceActionLink model constructor.
     * @property {module:model/PlaceActionLink}
     */
    PlaceActionLink,

    /**
     * The PlaceActionTypeMetadata model constructor.
     * @property {module:model/PlaceActionTypeMetadata}
     */
    PlaceActionTypeMetadata,

    /**
    * The LocationsApi service constructor.
    * @property {module:api/LocationsApi}
    */
    LocationsApi,

    /**
    * The PlaceActionTypeMetadataApi service constructor.
    * @property {module:api/PlaceActionTypeMetadataApi}
    */
    PlaceActionTypeMetadataApi
};
