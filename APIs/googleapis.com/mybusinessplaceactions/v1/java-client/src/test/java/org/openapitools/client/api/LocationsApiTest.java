/*
 * My Business Place Actions API
 * The My Business Place Actions API provides an interface for managing place action links of a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListPlaceActionLinksResponse;
import org.openapitools.client.model.PlaceActionLink;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationsApi
 */
@Disabled
public class LocationsApiTest {

    private final LocationsApi api = new LocationsApi();

    /**
     * Creates a place action link associated with the specified location, and returns it. The request is considered duplicate if the &#x60;parent&#x60;, &#x60;place_action_link.uri&#x60; and &#x60;place_action_link.place_action_type&#x60; are the same as a previous request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mybusinessplaceactionsLocationsPlaceActionLinksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        PlaceActionLink placeActionLink = null;
        PlaceActionLink response = api.mybusinessplaceactionsLocationsPlaceActionLinksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, placeActionLink);
        // TODO: test validations
    }

    /**
     * Deletes a place action link from the specified location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mybusinessplaceactionsLocationsPlaceActionLinksDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.mybusinessplaceactionsLocationsPlaceActionLinksDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets the specified place action link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mybusinessplaceactionsLocationsPlaceActionLinksGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        PlaceActionLink response = api.mybusinessplaceactionsLocationsPlaceActionLinksGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists the place action links for the specified location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mybusinessplaceactionsLocationsPlaceActionLinksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ListPlaceActionLinksResponse response = api.mybusinessplaceactionsLocationsPlaceActionLinksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates the specified place action link and returns it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mybusinessplaceactionsLocationsPlaceActionLinksPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        PlaceActionLink placeActionLink = null;
        PlaceActionLink response = api.mybusinessplaceactionsLocationsPlaceActionLinksPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, placeActionLink);
        // TODO: test validations
    }

}
