/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnvVariable from './EnvVariable';

/**
 * The Action model module.
 * @module model/Action
 * @version v1beta1
 */
class Action {
    /**
     * Constructs a new <code>Action</code>.
     * An action that gets executed during initialization of the replicas.
     * @alias module:model/Action
     */
    constructor() { 
        
        Action.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Action</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Action} obj Optional instance to populate.
     * @return {module:model/Action} The populated <code>Action</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Action();

            if (data.hasOwnProperty('commands')) {
                obj['commands'] = ApiClient.convertToType(data['commands'], ['String']);
            }
            if (data.hasOwnProperty('envVariables')) {
                obj['envVariables'] = ApiClient.convertToType(data['envVariables'], [EnvVariable]);
            }
            if (data.hasOwnProperty('timeoutMilliSeconds')) {
                obj['timeoutMilliSeconds'] = ApiClient.convertToType(data['timeoutMilliSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Action</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Action</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['commands'])) {
            throw new Error("Expected the field `commands` to be an array in the JSON data but got " + data['commands']);
        }
        if (data['envVariables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['envVariables'])) {
                throw new Error("Expected the field `envVariables` to be an array in the JSON data but got " + data['envVariables']);
            }
            // validate the optional field `envVariables` (array)
            for (const item of data['envVariables']) {
                EnvVariable.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of commands to run, one per line. If any command fails, the whole action is considered a failure and no further actions are run. This also marks the virtual machine or replica as a failure.
 * @member {Array.<String>} commands
 */
Action.prototype['commands'] = undefined;

/**
 * A list of environment variables to use for the commands in this action.
 * @member {Array.<module:model/EnvVariable>} envVariables
 */
Action.prototype['envVariables'] = undefined;

/**
 * If an action's commands on a particular replica do not finish in the specified timeoutMilliSeconds, the replica is considered to be in a FAILING state. No efforts are made to stop any processes that were spawned or created as the result of running the action's commands. The default is the max allowed value, 1 hour (i.e. 3600000 milliseconds).
 * @member {Number} timeoutMilliSeconds
 */
Action.prototype['timeoutMilliSeconds'] = undefined;






export default Action;

