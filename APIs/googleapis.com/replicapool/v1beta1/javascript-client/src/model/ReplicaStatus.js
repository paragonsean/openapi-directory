/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplicaStatus model module.
 * @module model/ReplicaStatus
 * @version v1beta1
 */
class ReplicaStatus {
    /**
     * Constructs a new <code>ReplicaStatus</code>.
     * The current status of a Replica.
     * @alias module:model/ReplicaStatus
     */
    constructor() { 
        
        ReplicaStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReplicaStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplicaStatus} obj Optional instance to populate.
     * @return {module:model/ReplicaStatus} The populated <code>ReplicaStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplicaStatus();

            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('templateVersion')) {
                obj['templateVersion'] = ApiClient.convertToType(data['templateVersion'], 'String');
            }
            if (data.hasOwnProperty('vmLink')) {
                obj['vmLink'] = ApiClient.convertToType(data['vmLink'], 'String');
            }
            if (data.hasOwnProperty('vmStartTime')) {
                obj['vmStartTime'] = ApiClient.convertToType(data['vmStartTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplicaStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplicaStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['details'] && !(typeof data['details'] === 'string' || data['details'] instanceof String)) {
            throw new Error("Expected the field `details` to be a primitive type in the JSON string but got " + data['details']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['templateVersion'] && !(typeof data['templateVersion'] === 'string' || data['templateVersion'] instanceof String)) {
            throw new Error("Expected the field `templateVersion` to be a primitive type in the JSON string but got " + data['templateVersion']);
        }
        // ensure the json data is a string
        if (data['vmLink'] && !(typeof data['vmLink'] === 'string' || data['vmLink'] instanceof String)) {
            throw new Error("Expected the field `vmLink` to be a primitive type in the JSON string but got " + data['vmLink']);
        }
        // ensure the json data is a string
        if (data['vmStartTime'] && !(typeof data['vmStartTime'] === 'string' || data['vmStartTime'] instanceof String)) {
            throw new Error("Expected the field `vmStartTime` to be a primitive type in the JSON string but got " + data['vmStartTime']);
        }

        return true;
    }


}



/**
 * [Output Only] Human-readable details about the current state of the replica
 * @member {String} details
 */
ReplicaStatus.prototype['details'] = undefined;

/**
 * [Output Only] The state of the Replica.
 * @member {String} state
 */
ReplicaStatus.prototype['state'] = undefined;

/**
 * [Output Only] The template used to build the replica.
 * @member {String} templateVersion
 */
ReplicaStatus.prototype['templateVersion'] = undefined;

/**
 * [Output Only] Link to the virtual machine that this Replica represents.
 * @member {String} vmLink
 */
ReplicaStatus.prototype['vmLink'] = undefined;

/**
 * [Output Only] The time that this Replica got to the RUNNING state, in RFC 3339 format. If the start time is unknown, UNKNOWN is returned.
 * @member {String} vmStartTime
 */
ReplicaStatus.prototype['vmStartTime'] = undefined;






export default ReplicaStatus;

