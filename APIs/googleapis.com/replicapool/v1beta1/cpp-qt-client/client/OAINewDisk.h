/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewDisk.h
 *
 * A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica in READ_WRITE mode.
 */

#ifndef OAINewDisk_H
#define OAINewDisk_H

#include <QJsonObject>

#include "OAIDiskAttachment.h"
#include "OAINewDiskInitializeParams.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiskAttachment;
class OAINewDiskInitializeParams;

class OAINewDisk : public OAIObject {
public:
    OAINewDisk();
    OAINewDisk(QString json);
    ~OAINewDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiskAttachment getAttachment() const;
    void setAttachment(const OAIDiskAttachment &attachment);
    bool is_attachment_Set() const;
    bool is_attachment_Valid() const;

    bool isAutoDelete() const;
    void setAutoDelete(const bool &auto_delete);
    bool is_auto_delete_Set() const;
    bool is_auto_delete_Valid() const;

    bool isBoot() const;
    void setBoot(const bool &boot);
    bool is_boot_Set() const;
    bool is_boot_Valid() const;

    OAINewDiskInitializeParams getInitializeParams() const;
    void setInitializeParams(const OAINewDiskInitializeParams &initialize_params);
    bool is_initialize_params_Set() const;
    bool is_initialize_params_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiskAttachment m_attachment;
    bool m_attachment_isSet;
    bool m_attachment_isValid;

    bool m_auto_delete;
    bool m_auto_delete_isSet;
    bool m_auto_delete_isValid;

    bool m_boot;
    bool m_boot_isSet;
    bool m_boot_isValid;

    OAINewDiskInitializeParams m_initialize_params;
    bool m_initialize_params_isSet;
    bool m_initialize_params_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewDisk)

#endif // OAINewDisk_H
