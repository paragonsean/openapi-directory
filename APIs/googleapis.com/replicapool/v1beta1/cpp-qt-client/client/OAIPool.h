/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPool.h
 *
 * 
 */

#ifndef OAIPool_H
#define OAIPool_H

#include <QJsonObject>

#include "OAIHealthCheck.h"
#include "OAILabel.h"
#include "OAITemplate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHealthCheck;
class OAILabel;
class OAITemplate;

class OAIPool : public OAIObject {
public:
    OAIPool();
    OAIPool(QString json);
    ~OAIPool() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoRestart() const;
    void setAutoRestart(const bool &auto_restart);
    bool is_auto_restart_Set() const;
    bool is_auto_restart_Valid() const;

    QString getBaseInstanceName() const;
    void setBaseInstanceName(const QString &base_instance_name);
    bool is_base_instance_name_Set() const;
    bool is_base_instance_name_Valid() const;

    qint32 getCurrentNumReplicas() const;
    void setCurrentNumReplicas(const qint32 &current_num_replicas);
    bool is_current_num_replicas_Set() const;
    bool is_current_num_replicas_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIHealthCheck> getHealthChecks() const;
    void setHealthChecks(const QList<OAIHealthCheck> &health_checks);
    bool is_health_checks_Set() const;
    bool is_health_checks_Valid() const;

    qint32 getInitialNumReplicas() const;
    void setInitialNumReplicas(const qint32 &initial_num_replicas);
    bool is_initial_num_replicas_Set() const;
    bool is_initial_num_replicas_Valid() const;

    QList<OAILabel> getLabels() const;
    void setLabels(const QList<OAILabel> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumReplicas() const;
    void setNumReplicas(const qint32 &num_replicas);
    bool is_num_replicas_Set() const;
    bool is_num_replicas_Valid() const;

    QList<QString> getResourceViews() const;
    void setResourceViews(const QList<QString> &resource_views);
    bool is_resource_views_Set() const;
    bool is_resource_views_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    QString getTargetPool() const;
    void setTargetPool(const QString &target_pool);
    bool is_target_pool_Set() const;
    bool is_target_pool_Valid() const;

    QList<QString> getTargetPools() const;
    void setTargetPools(const QList<QString> &target_pools);
    bool is_target_pools_Set() const;
    bool is_target_pools_Valid() const;

    OAITemplate getRTemplate() const;
    void setRTemplate(const OAITemplate &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_restart;
    bool m_auto_restart_isSet;
    bool m_auto_restart_isValid;

    QString m_base_instance_name;
    bool m_base_instance_name_isSet;
    bool m_base_instance_name_isValid;

    qint32 m_current_num_replicas;
    bool m_current_num_replicas_isSet;
    bool m_current_num_replicas_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIHealthCheck> m_health_checks;
    bool m_health_checks_isSet;
    bool m_health_checks_isValid;

    qint32 m_initial_num_replicas;
    bool m_initial_num_replicas_isSet;
    bool m_initial_num_replicas_isValid;

    QList<OAILabel> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_num_replicas;
    bool m_num_replicas_isSet;
    bool m_num_replicas_isValid;

    QList<QString> m_resource_views;
    bool m_resource_views_isSet;
    bool m_resource_views_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QString m_target_pool;
    bool m_target_pool_isSet;
    bool m_target_pool_isValid;

    QList<QString> m_target_pools;
    bool m_target_pools_isSet;
    bool m_target_pools_isValid;

    OAITemplate m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPool)

#endif // OAIPool_H
