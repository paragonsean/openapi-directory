/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITemplate.h
 *
 * The template used for creating replicas in the pool.
 */

#ifndef OAITemplate_H
#define OAITemplate_H

#include <QJsonObject>

#include "OAIAction.h"
#include "OAIHealthCheck.h"
#include "OAIVmParams.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAction;
class OAIHealthCheck;
class OAIVmParams;

class OAITemplate : public OAIObject {
public:
    OAITemplate();
    OAITemplate(QString json);
    ~OAITemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAction getAction() const;
    void setAction(const OAIAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QList<OAIHealthCheck> getHealthChecks() const;
    void setHealthChecks(const QList<OAIHealthCheck> &health_checks);
    bool is_health_checks_Set() const;
    bool is_health_checks_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIVmParams getVmParams() const;
    void setVmParams(const OAIVmParams &vm_params);
    bool is_vm_params_Set() const;
    bool is_vm_params_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QList<OAIHealthCheck> m_health_checks;
    bool m_health_checks_isSet;
    bool m_health_checks_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIVmParams m_vm_params;
    bool m_vm_params_isSet;
    bool m_vm_params_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITemplate)

#endif // OAITemplate_H
