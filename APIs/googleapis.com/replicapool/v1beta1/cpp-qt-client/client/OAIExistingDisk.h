/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExistingDisk.h
 *
 * A pre-existing persistent disk that will be attached to every Replica in the Pool in READ_ONLY mode.
 */

#ifndef OAIExistingDisk_H
#define OAIExistingDisk_H

#include <QJsonObject>

#include "OAIDiskAttachment.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiskAttachment;

class OAIExistingDisk : public OAIObject {
public:
    OAIExistingDisk();
    OAIExistingDisk(QString json);
    ~OAIExistingDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiskAttachment getAttachment() const;
    void setAttachment(const OAIDiskAttachment &attachment);
    bool is_attachment_Set() const;
    bool is_attachment_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiskAttachment m_attachment;
    bool m_attachment_isSet;
    bool m_attachment_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExistingDisk)

#endif // OAIExistingDisk_H
