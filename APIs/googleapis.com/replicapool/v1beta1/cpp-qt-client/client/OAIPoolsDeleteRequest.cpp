/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPoolsDeleteRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPoolsDeleteRequest::OAIPoolsDeleteRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPoolsDeleteRequest::OAIPoolsDeleteRequest() {
    this->initializeModel();
}

OAIPoolsDeleteRequest::~OAIPoolsDeleteRequest() {}

void OAIPoolsDeleteRequest::initializeModel() {

    m_abandon_instances_isSet = false;
    m_abandon_instances_isValid = false;
}

void OAIPoolsDeleteRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPoolsDeleteRequest::fromJsonObject(QJsonObject json) {

    m_abandon_instances_isValid = ::OpenAPI::fromJsonValue(m_abandon_instances, json[QString("abandonInstances")]);
    m_abandon_instances_isSet = !json[QString("abandonInstances")].isNull() && m_abandon_instances_isValid;
}

QString OAIPoolsDeleteRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPoolsDeleteRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_abandon_instances.size() > 0) {
        obj.insert(QString("abandonInstances"), ::OpenAPI::toJsonValue(m_abandon_instances));
    }
    return obj;
}

QList<QString> OAIPoolsDeleteRequest::getAbandonInstances() const {
    return m_abandon_instances;
}
void OAIPoolsDeleteRequest::setAbandonInstances(const QList<QString> &abandon_instances) {
    m_abandon_instances = abandon_instances;
    m_abandon_instances_isSet = true;
}

bool OAIPoolsDeleteRequest::is_abandon_instances_Set() const{
    return m_abandon_instances_isSet;
}

bool OAIPoolsDeleteRequest::is_abandon_instances_Valid() const{
    return m_abandon_instances_isValid;
}

bool OAIPoolsDeleteRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_abandon_instances.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPoolsDeleteRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
