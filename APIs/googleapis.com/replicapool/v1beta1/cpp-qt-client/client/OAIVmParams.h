/**
 * Replica Pool
 * The Replica Pool API allows users to declaratively provision and manage groups of Google Compute Engine instances based on a common template.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVmParams.h
 *
 * Parameters for creating a Compute Engine Instance resource. Most fields are identical to the corresponding Compute Engine resource.
 */

#ifndef OAIVmParams_H
#define OAIVmParams_H

#include <QJsonObject>

#include "OAIExistingDisk.h"
#include "OAIMetadata.h"
#include "OAINetworkInterface.h"
#include "OAINewDisk.h"
#include "OAIServiceAccount.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExistingDisk;
class OAINewDisk;
class OAIMetadata;
class OAINetworkInterface;
class OAIServiceAccount;
class OAITag;

class OAIVmParams : public OAIObject {
public:
    OAIVmParams();
    OAIVmParams(QString json);
    ~OAIVmParams() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseInstanceName() const;
    void setBaseInstanceName(const QString &base_instance_name);
    bool is_base_instance_name_Set() const;
    bool is_base_instance_name_Valid() const;

    bool isCanIpForward() const;
    void setCanIpForward(const bool &can_ip_forward);
    bool is_can_ip_forward_Set() const;
    bool is_can_ip_forward_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIExistingDisk> getDisksToAttach() const;
    void setDisksToAttach(const QList<OAIExistingDisk> &disks_to_attach);
    bool is_disks_to_attach_Set() const;
    bool is_disks_to_attach_Valid() const;

    QList<OAINewDisk> getDisksToCreate() const;
    void setDisksToCreate(const QList<OAINewDisk> &disks_to_create);
    bool is_disks_to_create_Set() const;
    bool is_disks_to_create_Valid() const;

    QString getMachineType() const;
    void setMachineType(const QString &machine_type);
    bool is_machine_type_Set() const;
    bool is_machine_type_Valid() const;

    OAIMetadata getMetadata() const;
    void setMetadata(const OAIMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<OAINetworkInterface> getNetworkInterfaces() const;
    void setNetworkInterfaces(const QList<OAINetworkInterface> &network_interfaces);
    bool is_network_interfaces_Set() const;
    bool is_network_interfaces_Valid() const;

    QString getOnHostMaintenance() const;
    void setOnHostMaintenance(const QString &on_host_maintenance);
    bool is_on_host_maintenance_Set() const;
    bool is_on_host_maintenance_Valid() const;

    QList<OAIServiceAccount> getServiceAccounts() const;
    void setServiceAccounts(const QList<OAIServiceAccount> &service_accounts);
    bool is_service_accounts_Set() const;
    bool is_service_accounts_Valid() const;

    OAITag getTags() const;
    void setTags(const OAITag &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_instance_name;
    bool m_base_instance_name_isSet;
    bool m_base_instance_name_isValid;

    bool m_can_ip_forward;
    bool m_can_ip_forward_isSet;
    bool m_can_ip_forward_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIExistingDisk> m_disks_to_attach;
    bool m_disks_to_attach_isSet;
    bool m_disks_to_attach_isValid;

    QList<OAINewDisk> m_disks_to_create;
    bool m_disks_to_create_isSet;
    bool m_disks_to_create_isValid;

    QString m_machine_type;
    bool m_machine_type_isSet;
    bool m_machine_type_isValid;

    OAIMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<OAINetworkInterface> m_network_interfaces;
    bool m_network_interfaces_isSet;
    bool m_network_interfaces_isValid;

    QString m_on_host_maintenance;
    bool m_on_host_maintenance_isSet;
    bool m_on_host_maintenance_isValid;

    QList<OAIServiceAccount> m_service_accounts;
    bool m_service_accounts_isSet;
    bool m_service_accounts_isValid;

    OAITag m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVmParams)

#endif // OAIVmParams_H
