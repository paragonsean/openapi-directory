# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server.models.health_check import HealthCheck
from openapi_server.models.vm_params import VmParams
from openapi_server import util


class Template(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: Action=None, health_checks: List[HealthCheck]=None, version: str=None, vm_params: VmParams=None):
        """Template - a model defined in OpenAPI

        :param action: The action of this Template.
        :param health_checks: The health_checks of this Template.
        :param version: The version of this Template.
        :param vm_params: The vm_params of this Template.
        """
        self.openapi_types = {
            'action': Action,
            'health_checks': List[HealthCheck],
            'version': str,
            'vm_params': VmParams
        }

        self.attribute_map = {
            'action': 'action',
            'health_checks': 'healthChecks',
            'version': 'version',
            'vm_params': 'vmParams'
        }

        self._action = action
        self._health_checks = health_checks
        self._version = version
        self._vm_params = vm_params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Template':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Template of this Template.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this Template.


        :return: The action of this Template.
        :rtype: Action
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this Template.


        :param action: The action of this Template.
        :type action: Action
        """

        self._action = action

    @property
    def health_checks(self):
        """Gets the health_checks of this Template.

        A list of HTTP Health Checks to configure for this replica pool and all virtual machines in this replica pool.

        :return: The health_checks of this Template.
        :rtype: List[HealthCheck]
        """
        return self._health_checks

    @health_checks.setter
    def health_checks(self, health_checks):
        """Sets the health_checks of this Template.

        A list of HTTP Health Checks to configure for this replica pool and all virtual machines in this replica pool.

        :param health_checks: The health_checks of this Template.
        :type health_checks: List[HealthCheck]
        """

        self._health_checks = health_checks

    @property
    def version(self):
        """Gets the version of this Template.

        A free-form string describing the version of this template. You can provide any versioning string you would like. For example, version1 or template-v1.

        :return: The version of this Template.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Template.

        A free-form string describing the version of this template. You can provide any versioning string you would like. For example, version1 or template-v1.

        :param version: The version of this Template.
        :type version: str
        """

        self._version = version

    @property
    def vm_params(self):
        """Gets the vm_params of this Template.


        :return: The vm_params of this Template.
        :rtype: VmParams
        """
        return self._vm_params

    @vm_params.setter
    def vm_params(self, vm_params):
        """Sets the vm_params of this Template.


        :param vm_params: The vm_params of this Template.
        :type vm_params: VmParams
        """

        self._vm_params = vm_params
