# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PoolsDeleteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abandon_instances: List[str]=None):
        """PoolsDeleteRequest - a model defined in OpenAPI

        :param abandon_instances: The abandon_instances of this PoolsDeleteRequest.
        """
        self.openapi_types = {
            'abandon_instances': List[str]
        }

        self.attribute_map = {
            'abandon_instances': 'abandonInstances'
        }

        self._abandon_instances = abandon_instances

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PoolsDeleteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PoolsDeleteRequest of this PoolsDeleteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abandon_instances(self):
        """Gets the abandon_instances of this PoolsDeleteRequest.

        If there are instances you would like to keep, you can specify them here. These instances won't be deleted, but the associated replica objects will be removed.

        :return: The abandon_instances of this PoolsDeleteRequest.
        :rtype: List[str]
        """
        return self._abandon_instances

    @abandon_instances.setter
    def abandon_instances(self, abandon_instances):
        """Sets the abandon_instances of this PoolsDeleteRequest.

        If there are instances you would like to keep, you can specify them here. These instances won't be deleted, but the associated replica objects will be removed.

        :param abandon_instances: The abandon_instances of this PoolsDeleteRequest.
        :type abandon_instances: List[str]
        """

        self._abandon_instances = abandon_instances
