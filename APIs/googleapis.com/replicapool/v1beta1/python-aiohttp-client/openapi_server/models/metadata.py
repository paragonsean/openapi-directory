# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metadata_item import MetadataItem
from openapi_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finger_print: str=None, items: List[MetadataItem]=None):
        """Metadata - a model defined in OpenAPI

        :param finger_print: The finger_print of this Metadata.
        :param items: The items of this Metadata.
        """
        self.openapi_types = {
            'finger_print': str,
            'items': List[MetadataItem]
        }

        self.attribute_map = {
            'finger_print': 'fingerPrint',
            'items': 'items'
        }

        self._finger_print = finger_print
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata of this Metadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finger_print(self):
        """Gets the finger_print of this Metadata.

        The fingerprint of the metadata. Required for updating the metadata entries for this instance.

        :return: The finger_print of this Metadata.
        :rtype: str
        """
        return self._finger_print

    @finger_print.setter
    def finger_print(self, finger_print):
        """Sets the finger_print of this Metadata.

        The fingerprint of the metadata. Required for updating the metadata entries for this instance.

        :param finger_print: The finger_print of this Metadata.
        :type finger_print: str
        """

        self._finger_print = finger_print

    @property
    def items(self):
        """Gets the items of this Metadata.

        A list of metadata items.

        :return: The items of this Metadata.
        :rtype: List[MetadataItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Metadata.

        A list of metadata items.

        :param items: The items of this Metadata.
        :type items: List[MetadataItem]
        """

        self._items = items
