# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplicaStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: str=None, state: str=None, template_version: str=None, vm_link: str=None, vm_start_time: str=None):
        """ReplicaStatus - a model defined in OpenAPI

        :param details: The details of this ReplicaStatus.
        :param state: The state of this ReplicaStatus.
        :param template_version: The template_version of this ReplicaStatus.
        :param vm_link: The vm_link of this ReplicaStatus.
        :param vm_start_time: The vm_start_time of this ReplicaStatus.
        """
        self.openapi_types = {
            'details': str,
            'state': str,
            'template_version': str,
            'vm_link': str,
            'vm_start_time': str
        }

        self.attribute_map = {
            'details': 'details',
            'state': 'state',
            'template_version': 'templateVersion',
            'vm_link': 'vmLink',
            'vm_start_time': 'vmStartTime'
        }

        self._details = details
        self._state = state
        self._template_version = template_version
        self._vm_link = vm_link
        self._vm_start_time = vm_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicaStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicaStatus of this ReplicaStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this ReplicaStatus.

        [Output Only] Human-readable details about the current state of the replica

        :return: The details of this ReplicaStatus.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this ReplicaStatus.

        [Output Only] Human-readable details about the current state of the replica

        :param details: The details of this ReplicaStatus.
        :type details: str
        """

        self._details = details

    @property
    def state(self):
        """Gets the state of this ReplicaStatus.

        [Output Only] The state of the Replica.

        :return: The state of this ReplicaStatus.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ReplicaStatus.

        [Output Only] The state of the Replica.

        :param state: The state of this ReplicaStatus.
        :type state: str
        """

        self._state = state

    @property
    def template_version(self):
        """Gets the template_version of this ReplicaStatus.

        [Output Only] The template used to build the replica.

        :return: The template_version of this ReplicaStatus.
        :rtype: str
        """
        return self._template_version

    @template_version.setter
    def template_version(self, template_version):
        """Sets the template_version of this ReplicaStatus.

        [Output Only] The template used to build the replica.

        :param template_version: The template_version of this ReplicaStatus.
        :type template_version: str
        """

        self._template_version = template_version

    @property
    def vm_link(self):
        """Gets the vm_link of this ReplicaStatus.

        [Output Only] Link to the virtual machine that this Replica represents.

        :return: The vm_link of this ReplicaStatus.
        :rtype: str
        """
        return self._vm_link

    @vm_link.setter
    def vm_link(self, vm_link):
        """Sets the vm_link of this ReplicaStatus.

        [Output Only] Link to the virtual machine that this Replica represents.

        :param vm_link: The vm_link of this ReplicaStatus.
        :type vm_link: str
        """

        self._vm_link = vm_link

    @property
    def vm_start_time(self):
        """Gets the vm_start_time of this ReplicaStatus.

        [Output Only] The time that this Replica got to the RUNNING state, in RFC 3339 format. If the start time is unknown, UNKNOWN is returned.

        :return: The vm_start_time of this ReplicaStatus.
        :rtype: str
        """
        return self._vm_start_time

    @vm_start_time.setter
    def vm_start_time(self, vm_start_time):
        """Sets the vm_start_time of this ReplicaStatus.

        [Output Only] The time that this Replica got to the RUNNING state, in RFC 3339 format. If the start time is unknown, UNKNOWN is returned.

        :param vm_start_time: The vm_start_time of this ReplicaStatus.
        :type vm_start_time: str
        """

        self._vm_start_time = vm_start_time
