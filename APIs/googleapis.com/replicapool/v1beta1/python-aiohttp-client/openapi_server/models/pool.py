# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_check import HealthCheck
from openapi_server.models.label import Label
from openapi_server.models.template import Template
from openapi_server import util


class Pool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_restart: bool=None, base_instance_name: str=None, current_num_replicas: int=None, description: str=None, health_checks: List[HealthCheck]=None, initial_num_replicas: int=None, labels: List[Label]=None, name: str=None, num_replicas: int=None, resource_views: List[str]=None, self_link: str=None, target_pool: str=None, target_pools: List[str]=None, template: Template=None, type: str=None):
        """Pool - a model defined in OpenAPI

        :param auto_restart: The auto_restart of this Pool.
        :param base_instance_name: The base_instance_name of this Pool.
        :param current_num_replicas: The current_num_replicas of this Pool.
        :param description: The description of this Pool.
        :param health_checks: The health_checks of this Pool.
        :param initial_num_replicas: The initial_num_replicas of this Pool.
        :param labels: The labels of this Pool.
        :param name: The name of this Pool.
        :param num_replicas: The num_replicas of this Pool.
        :param resource_views: The resource_views of this Pool.
        :param self_link: The self_link of this Pool.
        :param target_pool: The target_pool of this Pool.
        :param target_pools: The target_pools of this Pool.
        :param template: The template of this Pool.
        :param type: The type of this Pool.
        """
        self.openapi_types = {
            'auto_restart': bool,
            'base_instance_name': str,
            'current_num_replicas': int,
            'description': str,
            'health_checks': List[HealthCheck],
            'initial_num_replicas': int,
            'labels': List[Label],
            'name': str,
            'num_replicas': int,
            'resource_views': List[str],
            'self_link': str,
            'target_pool': str,
            'target_pools': List[str],
            'template': Template,
            'type': str
        }

        self.attribute_map = {
            'auto_restart': 'autoRestart',
            'base_instance_name': 'baseInstanceName',
            'current_num_replicas': 'currentNumReplicas',
            'description': 'description',
            'health_checks': 'healthChecks',
            'initial_num_replicas': 'initialNumReplicas',
            'labels': 'labels',
            'name': 'name',
            'num_replicas': 'numReplicas',
            'resource_views': 'resourceViews',
            'self_link': 'selfLink',
            'target_pool': 'targetPool',
            'target_pools': 'targetPools',
            'template': 'template',
            'type': 'type'
        }

        self._auto_restart = auto_restart
        self._base_instance_name = base_instance_name
        self._current_num_replicas = current_num_replicas
        self._description = description
        self._health_checks = health_checks
        self._initial_num_replicas = initial_num_replicas
        self._labels = labels
        self._name = name
        self._num_replicas = num_replicas
        self._resource_views = resource_views
        self._self_link = self_link
        self._target_pool = target_pool
        self._target_pools = target_pools
        self._template = template
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pool of this Pool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_restart(self):
        """Gets the auto_restart of this Pool.

        Whether replicas in this pool should be restarted if they experience a failure. The default value is true.

        :return: The auto_restart of this Pool.
        :rtype: bool
        """
        return self._auto_restart

    @auto_restart.setter
    def auto_restart(self, auto_restart):
        """Sets the auto_restart of this Pool.

        Whether replicas in this pool should be restarted if they experience a failure. The default value is true.

        :param auto_restart: The auto_restart of this Pool.
        :type auto_restart: bool
        """

        self._auto_restart = auto_restart

    @property
    def base_instance_name(self):
        """Gets the base_instance_name of this Pool.

        The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format <base-instance-name>-<ID>. The <ID> postfix will be a four character alphanumeric identifier generated by the service.  If this is not specified by the user, a random base instance name is generated by the service.

        :return: The base_instance_name of this Pool.
        :rtype: str
        """
        return self._base_instance_name

    @base_instance_name.setter
    def base_instance_name(self, base_instance_name):
        """Sets the base_instance_name of this Pool.

        The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format <base-instance-name>-<ID>. The <ID> postfix will be a four character alphanumeric identifier generated by the service.  If this is not specified by the user, a random base instance name is generated by the service.

        :param base_instance_name: The base_instance_name of this Pool.
        :type base_instance_name: str
        """

        self._base_instance_name = base_instance_name

    @property
    def current_num_replicas(self):
        """Gets the current_num_replicas of this Pool.

        [Output Only] The current number of replicas in the pool.

        :return: The current_num_replicas of this Pool.
        :rtype: int
        """
        return self._current_num_replicas

    @current_num_replicas.setter
    def current_num_replicas(self, current_num_replicas):
        """Sets the current_num_replicas of this Pool.

        [Output Only] The current number of replicas in the pool.

        :param current_num_replicas: The current_num_replicas of this Pool.
        :type current_num_replicas: int
        """

        self._current_num_replicas = current_num_replicas

    @property
    def description(self):
        """Gets the description of this Pool.

        An optional description of the replica pool.

        :return: The description of this Pool.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Pool.

        An optional description of the replica pool.

        :param description: The description of this Pool.
        :type description: str
        """

        self._description = description

    @property
    def health_checks(self):
        """Gets the health_checks of this Pool.

        Deprecated. Please use template[].healthChecks instead.

        :return: The health_checks of this Pool.
        :rtype: List[HealthCheck]
        """
        return self._health_checks

    @health_checks.setter
    def health_checks(self, health_checks):
        """Sets the health_checks of this Pool.

        Deprecated. Please use template[].healthChecks instead.

        :param health_checks: The health_checks of this Pool.
        :type health_checks: List[HealthCheck]
        """

        self._health_checks = health_checks

    @property
    def initial_num_replicas(self):
        """Gets the initial_num_replicas of this Pool.

        The initial number of replicas this pool should have. You must provide a value greater than or equal to 0.

        :return: The initial_num_replicas of this Pool.
        :rtype: int
        """
        return self._initial_num_replicas

    @initial_num_replicas.setter
    def initial_num_replicas(self, initial_num_replicas):
        """Sets the initial_num_replicas of this Pool.

        The initial number of replicas this pool should have. You must provide a value greater than or equal to 0.

        :param initial_num_replicas: The initial_num_replicas of this Pool.
        :type initial_num_replicas: int
        """

        self._initial_num_replicas = initial_num_replicas

    @property
    def labels(self):
        """Gets the labels of this Pool.

        A list of labels to attach to this replica pool and all created virtual machines in this replica pool.

        :return: The labels of this Pool.
        :rtype: List[Label]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this Pool.

        A list of labels to attach to this replica pool and all created virtual machines in this replica pool.

        :param labels: The labels of this Pool.
        :type labels: List[Label]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this Pool.

        The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28 characters long.

        :return: The name of this Pool.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Pool.

        The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28 characters long.

        :param name: The name of this Pool.
        :type name: str
        """

        self._name = name

    @property
    def num_replicas(self):
        """Gets the num_replicas of this Pool.

        Deprecated! Use initial_num_replicas instead.

        :return: The num_replicas of this Pool.
        :rtype: int
        """
        return self._num_replicas

    @num_replicas.setter
    def num_replicas(self, num_replicas):
        """Sets the num_replicas of this Pool.

        Deprecated! Use initial_num_replicas instead.

        :param num_replicas: The num_replicas of this Pool.
        :type num_replicas: int
        """

        self._num_replicas = num_replicas

    @property
    def resource_views(self):
        """Gets the resource_views of this Pool.

        The list of resource views that should be updated with all the replicas that are managed by this pool.

        :return: The resource_views of this Pool.
        :rtype: List[str]
        """
        return self._resource_views

    @resource_views.setter
    def resource_views(self, resource_views):
        """Sets the resource_views of this Pool.

        The list of resource views that should be updated with all the replicas that are managed by this pool.

        :param resource_views: The resource_views of this Pool.
        :type resource_views: List[str]
        """

        self._resource_views = resource_views

    @property
    def self_link(self):
        """Gets the self_link of this Pool.

        [Output Only] A self-link to the replica pool.

        :return: The self_link of this Pool.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this Pool.

        [Output Only] A self-link to the replica pool.

        :param self_link: The self_link of this Pool.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def target_pool(self):
        """Gets the target_pool of this Pool.

        Deprecated, please use target_pools instead.

        :return: The target_pool of this Pool.
        :rtype: str
        """
        return self._target_pool

    @target_pool.setter
    def target_pool(self, target_pool):
        """Sets the target_pool of this Pool.

        Deprecated, please use target_pools instead.

        :param target_pool: The target_pool of this Pool.
        :type target_pool: str
        """

        self._target_pool = target_pool

    @property
    def target_pools(self):
        """Gets the target_pools of this Pool.

        A list of target pools to update with the replicas that are managed by this pool. If specified, the replicas in this replica pool will be added to the specified target pools for load balancing purposes. The replica pool must live in the same region as the specified target pools. These values must be the target pool resource names, and not fully qualified URLs.

        :return: The target_pools of this Pool.
        :rtype: List[str]
        """
        return self._target_pools

    @target_pools.setter
    def target_pools(self, target_pools):
        """Sets the target_pools of this Pool.

        A list of target pools to update with the replicas that are managed by this pool. If specified, the replicas in this replica pool will be added to the specified target pools for load balancing purposes. The replica pool must live in the same region as the specified target pools. These values must be the target pool resource names, and not fully qualified URLs.

        :param target_pools: The target_pools of this Pool.
        :type target_pools: List[str]
        """

        self._target_pools = target_pools

    @property
    def template(self):
        """Gets the template of this Pool.


        :return: The template of this Pool.
        :rtype: Template
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this Pool.


        :param template: The template of this Pool.
        :type template: Template
        """

        self._template = template

    @property
    def type(self):
        """Gets the type of this Pool.

        Deprecated! Do not set.

        :return: The type of this Pool.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Pool.

        Deprecated! Do not set.

        :param type: The type of this Pool.
        :type type: str
        """

        self._type = type
