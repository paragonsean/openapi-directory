openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: The Replica Pool API allows users to declaratively provision and manage
    groups of Google Compute Engine instances based on a common template.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Replica Pool
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - backend
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.31
    format: google
    url: https://www.googleapis.com/discovery/v1/apis/replicapool/v1beta1/rest
    version: v1
  x-providerName: googleapis.com
  x-serviceName: replicapool
externalDocs:
  url: https://developers.google.com/compute/docs/replica-pool/
servers:
- url: https://www.googleapis.com/replicapool/v1beta1/projects
tags:
- name: pools
- name: replicas
paths:
  /{projectName}/zones/{zone}/pools:
    get:
      description: List all replica pools.
      operationId: replicapool_pools_list
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this request.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone for this replica pool.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: "Maximum count of results to be returned. Acceptable values are\
          \ 0 to 100, inclusive. (Default: 50)"
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          default: 500
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: Set this to the nextPageToken value returned by a previous list
          request to obtain the next page of results from the previous list request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PoolsListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool.readonly
      tags:
      - pools
      x-openapi-router-controller: openapi_server.controllers.pools_controller
    post:
      description: Inserts a new replica pool.
      operationId: replicapool_pools_insert
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this replica pool.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone for this replica pool.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pool'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      tags:
      - pools
      x-openapi-router-controller: openapi_server.controllers.pools_controller
      x-codegen-request-body-name: body
  /{projectName}/zones/{zone}/pools/{poolName}:
    get:
      description: Gets information about a single replica pool.
      operationId: replicapool_pools_get
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this replica pool.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone for this replica pool.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the replica pool for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pool'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool.readonly
      tags:
      - pools
      x-openapi-router-controller: openapi_server.controllers.pools_controller
    post:
      description: Deletes a replica pool.
      operationId: replicapool_pools_delete
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this replica pool.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone for this replica pool.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the replica pool for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolsDeleteRequest'
        x-body-name: body
      responses:
        "200":
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      tags:
      - pools
      x-openapi-router-controller: openapi_server.controllers.pools_controller
      x-codegen-request-body-name: body
  /{projectName}/zones/{zone}/pools/{poolName}/replicas:
    get:
      description: Lists all replicas in a pool.
      operationId: replicapool_replicas_list
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this request.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone where the replica pool lives.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The replica pool name for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      - description: "Maximum count of results to be returned. Acceptable values are\
          \ 0 to 100, inclusive. (Default: 50)"
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          default: 500
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: Set this to the nextPageToken value returned by a previous list
          request to obtain the next page of results from the previous list request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReplicasListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool.readonly
      tags:
      - replicas
      x-openapi-router-controller: openapi_server.controllers.replicas_controller
  /{projectName}/zones/{zone}/pools/{poolName}/replicas/{replicaName}:
    get:
      description: Gets information about a specific replica.
      operationId: replicapool_replicas_get
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this request.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone where the replica lives.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The replica pool name for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the replica for this request.
        explode: false
        in: path
        name: replicaName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Replica'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool.readonly
      tags:
      - replicas
      x-openapi-router-controller: openapi_server.controllers.replicas_controller
    post:
      description: Deletes a replica from the pool.
      operationId: replicapool_replicas_delete
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this request.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone where the replica lives.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The replica pool name for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the replica for this request.
        explode: false
        in: path
        name: replicaName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicasDeleteRequest'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Replica'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      tags:
      - replicas
      x-openapi-router-controller: openapi_server.controllers.replicas_controller
      x-codegen-request-body-name: body
  /{projectName}/zones/{zone}/pools/{poolName}/replicas/{replicaName}/restart:
    post:
      description: Restarts a replica in a pool.
      operationId: replicapool_replicas_restart
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this request.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone where the replica lives.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The replica pool name for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the replica for this request.
        explode: false
        in: path
        name: replicaName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Replica'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      tags:
      - replicas
      x-openapi-router-controller: openapi_server.controllers.replicas_controller
  /{projectName}/zones/{zone}/pools/{poolName}/resize:
    post:
      description: "Resize a pool. This is an asynchronous operation, and multiple\
        \ overlapping resize requests can be made. Replica Pools will use the information\
        \ from the last resize request."
      operationId: replicapool_pools_resize
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this replica pool.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone for this replica pool.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the replica pool for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      - description: "The desired number of replicas to resize to. If this number\
          \ is larger than the existing number of replicas, new replicas will be added.\
          \ If the number is smaller, then existing replicas will be deleted."
        explode: true
        in: query
        name: numReplicas
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pool'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      tags:
      - pools
      x-openapi-router-controller: openapi_server.controllers.pools_controller
  /{projectName}/zones/{zone}/pools/{poolName}/updateTemplate:
    post:
      description: Update the template used by the pool.
      operationId: replicapool_pools_updatetemplate
      parameters:
      - description: Data format for the response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: An opaque string that represents a user for quota purposes. Must
          not exceed 40 characters.
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Deprecated. Please use quotaUser instead.
        explode: true
        in: query
        name: userIp
        required: false
        schema:
          type: string
        style: form
      - description: The project ID for this replica pool.
        explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      - description: The zone for this replica pool.
        explode: false
        in: path
        name: zone
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the replica pool for this request.
        explode: false
        in: path
        name: poolName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        x-body-name: body
      responses:
        "200":
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/ndev.cloudman
        Oauth2c:
        - https://www.googleapis.com/auth/ndev.cloudman
      - Oauth2:
        - https://www.googleapis.com/auth/replicapool
        Oauth2c:
        - https://www.googleapis.com/auth/replicapool
      tags:
      - pools
      x-openapi-router-controller: openapi_server.controllers.pools_controller
      x-codegen-request-body-name: body
components:
  parameters:
    alt:
      description: Data format for the response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        default: json
        enum:
        - json
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        default: true
        type: boolean
      style: form
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must
        not exceed 40 characters.
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    userIp:
      description: Deprecated. Please use quotaUser instead.
      explode: true
      in: query
      name: userIp
      required: false
      schema:
        type: string
      style: form
  schemas:
    AccessConfig:
      description: A Compute Engine network accessConfig. Identical to the accessConfig
        on corresponding Compute Engine resource.
      example:
        natIp: natIp
        name: name
        type: type
      properties:
        name:
          description: Name of this access configuration.
          title: name
          type: string
        natIp:
          description: An external IP address associated with this instance.
          title: natIp
          type: string
        type:
          description: Type of this access configuration file. Currently only ONE_TO_ONE_NAT
            is supported.
          title: type
          type: string
      title: AccessConfig
      type: object
    Action:
      description: An action that gets executed during initialization of the replicas.
      example:
        timeoutMilliSeconds: 3
        envVariables:
        - hidden: true
          name: name
          value: value
        - hidden: true
          name: name
          value: value
        commands:
        - commands
        - commands
      properties:
        commands:
          description: "A list of commands to run, one per line. If any command fails,\
            \ the whole action is considered a failure and no further actions are\
            \ run. This also marks the virtual machine or replica as a failure."
          items:
            type: string
          title: commands
          type: array
        envVariables:
          description: A list of environment variables to use for the commands in
            this action.
          items:
            $ref: '#/components/schemas/EnvVariable'
          title: envVariables
          type: array
        timeoutMilliSeconds:
          description: "If an action's commands on a particular replica do not finish\
            \ in the specified timeoutMilliSeconds, the replica is considered to be\
            \ in a FAILING state. No efforts are made to stop any processes that were\
            \ spawned or created as the result of running the action's commands. The\
            \ default is the max allowed value, 1 hour (i.e. 3600000 milliseconds)."
          format: int32
          title: timeoutMilliSeconds
          type: integer
      title: Action
      type: object
    DiskAttachment:
      description: Specifies how to attach a disk to a Replica.
      example:
        index: 2
        deviceName: deviceName
      properties:
        deviceName:
          description: The device name of this disk.
          title: deviceName
          type: string
        index:
          description: "A zero-based index to assign to this disk, where 0 is reserved\
            \ for the boot disk. If not specified, this is assigned by the server."
          format: uint32
          title: index
          type: integer
      title: DiskAttachment
      type: object
    EnvVariable:
      description: An environment variable to set for an action.
      example:
        hidden: true
        name: name
        value: value
      properties:
        hidden:
          description: "Deprecated, do not use."
          title: hidden
          type: boolean
        name:
          description: The name of the environment variable.
          title: name
          type: string
        value:
          description: The value of the variable.
          title: value
          type: string
      title: EnvVariable
      type: object
    ExistingDisk:
      description: A pre-existing persistent disk that will be attached to every Replica
        in the Pool in READ_ONLY mode.
      example:
        attachment:
          index: 2
          deviceName: deviceName
        source: source
      properties:
        attachment:
          $ref: '#/components/schemas/DiskAttachment'
        source:
          description: The name of the Persistent Disk resource. The Persistent Disk
            resource must be in the same zone as the Pool.
          title: source
          type: string
      title: ExistingDisk
      type: object
    HealthCheck:
      example:
        path: path
        port: 5
        checkIntervalSec: 6
        host: host
        name: name
        description: description
        unhealthyThreshold: 2
        healthyThreshold: 1
        timeoutSec: 5
      properties:
        checkIntervalSec:
          description: How often (in seconds) to make HTTP requests for this healthcheck.
            The default value is 5 seconds.
          format: int32
          title: checkIntervalSec
          type: integer
        description:
          description: The description for this health check.
          title: description
          type: string
        healthyThreshold:
          description: The number of consecutive health check requests that need to
            succeed before the replica is considered healthy again. The default value
            is 2.
          format: int32
          title: healthyThreshold
          type: integer
        host:
          description: "The value of the host header in the HTTP health check request.\
            \ If left empty (default value), the localhost IP 127.0.0.1 will be used."
          title: host
          type: string
        name:
          description: The name of this health check.
          title: name
          type: string
        path:
          description: "The localhost request path to send this health check, in the\
            \ format /path/to/use. For example, /healthcheck."
          title: path
          type: string
        port:
          description: The TCP port for the health check requests.
          format: int32
          title: port
          type: integer
        timeoutSec:
          description: How long (in seconds) to wait before a timeout failure for
            this healthcheck. The default value is 5 seconds.
          format: int32
          title: timeoutSec
          type: integer
        unhealthyThreshold:
          description: The number of consecutive health check requests that need to
            fail in order to consider the replica unhealthy. The default value is
            2.
          format: int32
          title: unhealthyThreshold
          type: integer
      title: HealthCheck
      type: object
    Label:
      description: A label to apply to this replica pool.
      example:
        value: value
        key: key
      properties:
        key:
          description: The key for this label.
          title: key
          type: string
        value:
          description: The value of this label.
          title: value
          type: string
      title: Label
      type: object
    Metadata:
      description: A Compute Engine metadata entry. Identical to the metadata on the
        corresponding Compute Engine resource.
      example:
        fingerPrint: fingerPrint
        items:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        fingerPrint:
          description: The fingerprint of the metadata. Required for updating the
            metadata entries for this instance.
          title: fingerPrint
          type: string
        items:
          description: A list of metadata items.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: items
          type: array
      title: Metadata
      type: object
    MetadataItem:
      description: "A Compute Engine metadata item, defined as a key:value pair. Identical\
        \ to the metadata on the corresponding Compute Engine resource."
      example:
        value: value
        key: key
      properties:
        key:
          description: A metadata key.
          title: key
          type: string
        value:
          description: A metadata value.
          title: value
          type: string
      title: MetadataItem
      type: object
    NetworkInterface:
      description: A Compute Engine NetworkInterface resource. Identical to the NetworkInterface
        on the corresponding Compute Engine resource.
      example:
        networkIp: networkIp
        accessConfigs:
        - natIp: natIp
          name: name
          type: type
        - natIp: natIp
          name: name
          type: type
        network: network
      properties:
        accessConfigs:
          description: An array of configurations for this interface. This specifies
            how this interface is configured to interact with other network services.
          items:
            $ref: '#/components/schemas/AccessConfig'
          title: accessConfigs
          type: array
        network:
          description: Name the Network resource to which this interface applies.
          title: network
          type: string
        networkIp:
          description: An optional IPV4 internal network address to assign to the
            instance for this network interface.
          title: networkIp
          type: string
      title: NetworkInterface
      type: object
    NewDisk:
      description: A Persistent Disk resource that will be created and attached to
        each Replica in the Pool. Each Replica will have a unique persistent disk
        that is created and attached to that Replica in READ_WRITE mode.
      example:
        attachment:
          index: 2
          deviceName: deviceName
        autoDelete: true
        boot: true
        initializeParams:
          diskType: diskType
          sourceImage: sourceImage
          diskSizeGb: diskSizeGb
      properties:
        attachment:
          $ref: '#/components/schemas/DiskAttachment'
        autoDelete:
          description: "If true, then this disk will be deleted when the instance\
            \ is deleted. The default value is true."
          title: autoDelete
          type: boolean
        boot:
          description: "If true, indicates that this is the root persistent disk."
          title: boot
          type: boolean
        initializeParams:
          $ref: '#/components/schemas/NewDiskInitializeParams'
      title: NewDisk
      type: object
    NewDiskInitializeParams:
      description: Initialization parameters for creating a new disk.
      example:
        diskType: diskType
        sourceImage: sourceImage
        diskSizeGb: diskSizeGb
      properties:
        diskSizeGb:
          description: The size of the created disk in gigabytes.
          format: int64
          title: diskSizeGb
          type: string
        diskType:
          description: Name of the disk type resource describing which disk type to
            use to create the disk. For example 'pd-ssd' or 'pd-standard'. Default
            is 'pd-standard'
          title: diskType
          type: string
        sourceImage:
          description: |-
            The name or fully-qualified URL of a source image to use to create this disk. If you provide a name of the source image, Replica Pool will look for an image with that name in your project. If you are specifying an image provided by Compute Engine, you will need to provide the full URL with the correct project, such as:
            http://www.googleapis.com/compute/v1/projects/debian-cloud/ global/images/debian-wheezy-7-vYYYYMMDD
          title: sourceImage
          type: string
      title: NewDiskInitializeParams
      type: object
    Pool:
      example:
        autoRestart: true
        template:
          healthChecks:
          - path: path
            port: 5
            checkIntervalSec: 6
            host: host
            name: name
            description: description
            unhealthyThreshold: 2
            healthyThreshold: 1
            timeoutSec: 5
          - path: path
            port: 5
            checkIntervalSec: 6
            host: host
            name: name
            description: description
            unhealthyThreshold: 2
            healthyThreshold: 1
            timeoutSec: 5
          action:
            timeoutMilliSeconds: 3
            envVariables:
            - hidden: true
              name: name
              value: value
            - hidden: true
              name: name
              value: value
            commands:
            - commands
            - commands
          vmParams:
            canIpForward: true
            metadata:
              fingerPrint: fingerPrint
              items:
              - value: value
                key: key
              - value: value
                key: key
            networkInterfaces:
            - networkIp: networkIp
              accessConfigs:
              - natIp: natIp
                name: name
                type: type
              - natIp: natIp
                name: name
                type: type
              network: network
            - networkIp: networkIp
              accessConfigs:
              - natIp: natIp
                name: name
                type: type
              - natIp: natIp
                name: name
                type: type
              network: network
            serviceAccounts:
            - scopes:
              - scopes
              - scopes
              email: email
            - scopes:
              - scopes
              - scopes
              email: email
            disksToAttach:
            - attachment:
                index: 2
                deviceName: deviceName
              source: source
            - attachment:
                index: 2
                deviceName: deviceName
              source: source
            onHostMaintenance: onHostMaintenance
            disksToCreate:
            - attachment:
                index: 2
                deviceName: deviceName
              autoDelete: true
              boot: true
              initializeParams:
                diskType: diskType
                sourceImage: sourceImage
                diskSizeGb: diskSizeGb
            - attachment:
                index: 2
                deviceName: deviceName
              autoDelete: true
              boot: true
              initializeParams:
                diskType: diskType
                sourceImage: sourceImage
                diskSizeGb: diskSizeGb
            description: description
            baseInstanceName: baseInstanceName
            machineType: machineType
            tags:
              fingerPrint: fingerPrint
              items:
              - items
              - items
          version: version
        healthChecks:
        - path: path
          port: 5
          checkIntervalSec: 6
          host: host
          name: name
          description: description
          unhealthyThreshold: 2
          healthyThreshold: 1
          timeoutSec: 5
        - path: path
          port: 5
          checkIntervalSec: 6
          host: host
          name: name
          description: description
          unhealthyThreshold: 2
          healthyThreshold: 1
          timeoutSec: 5
        initialNumReplicas: 7
        description: description
        baseInstanceName: baseInstanceName
        targetPools:
        - targetPools
        - targetPools
        type: type
        labels:
        - value: value
          key: key
        - value: value
          key: key
        selfLink: selfLink
        numReplicas: 9
        targetPool: targetPool
        currentNumReplicas: 0
        name: name
        resourceViews:
        - resourceViews
        - resourceViews
      properties:
        autoRestart:
          description: Whether replicas in this pool should be restarted if they experience
            a failure. The default value is true.
          title: autoRestart
          type: boolean
        baseInstanceName:
          description: |-
            The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format <base-instance-name>-<ID>. The <ID> postfix will be a four character alphanumeric identifier generated by the service.

            If this is not specified by the user, a random base instance name is generated by the service.
          title: baseInstanceName
          type: string
        currentNumReplicas:
          description: "[Output Only] The current number of replicas in the pool."
          format: int32
          title: currentNumReplicas
          type: integer
        description:
          description: An optional description of the replica pool.
          title: description
          type: string
        healthChecks:
          description: "Deprecated. Please use template[].healthChecks instead."
          items:
            $ref: '#/components/schemas/HealthCheck'
          title: healthChecks
          type: array
        initialNumReplicas:
          description: The initial number of replicas this pool should have. You must
            provide a value greater than or equal to 0.
          format: int32
          title: initialNumReplicas
          type: integer
        labels:
          description: A list of labels to attach to this replica pool and all created
            virtual machines in this replica pool.
          items:
            $ref: '#/components/schemas/Label'
          title: labels
          type: array
        name:
          description: "The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])?\
            \ and be 1-28 characters long."
          title: name
          type: string
        numReplicas:
          description: Deprecated! Use initial_num_replicas instead.
          format: int32
          title: numReplicas
          type: integer
        resourceViews:
          description: The list of resource views that should be updated with all
            the replicas that are managed by this pool.
          items:
            type: string
          title: resourceViews
          type: array
        selfLink:
          description: "[Output Only] A self-link to the replica pool."
          title: selfLink
          type: string
        targetPool:
          description: "Deprecated, please use target_pools instead."
          title: targetPool
          type: string
        targetPools:
          description: "A list of target pools to update with the replicas that are\
            \ managed by this pool. If specified, the replicas in this replica pool\
            \ will be added to the specified target pools for load balancing purposes.\
            \ The replica pool must live in the same region as the specified target\
            \ pools. These values must be the target pool resource names, and not\
            \ fully qualified URLs."
          items:
            type: string
          title: targetPools
          type: array
        template:
          $ref: '#/components/schemas/Template'
        type:
          description: Deprecated! Do not set.
          title: type
          type: string
      title: Pool
      type: object
    PoolsDeleteRequest:
      example:
        abandonInstances:
        - abandonInstances
        - abandonInstances
      properties:
        abandonInstances:
          description: "If there are instances you would like to keep, you can specify\
            \ them here. These instances won't be deleted, but the associated replica\
            \ objects will be removed."
          items:
            type: string
          title: abandonInstances
          type: array
      title: PoolsDeleteRequest
      type: object
    PoolsListResponse:
      example:
        nextPageToken: nextPageToken
        resources:
        - autoRestart: true
          template:
            healthChecks:
            - path: path
              port: 5
              checkIntervalSec: 6
              host: host
              name: name
              description: description
              unhealthyThreshold: 2
              healthyThreshold: 1
              timeoutSec: 5
            - path: path
              port: 5
              checkIntervalSec: 6
              host: host
              name: name
              description: description
              unhealthyThreshold: 2
              healthyThreshold: 1
              timeoutSec: 5
            action:
              timeoutMilliSeconds: 3
              envVariables:
              - hidden: true
                name: name
                value: value
              - hidden: true
                name: name
                value: value
              commands:
              - commands
              - commands
            vmParams:
              canIpForward: true
              metadata:
                fingerPrint: fingerPrint
                items:
                - value: value
                  key: key
                - value: value
                  key: key
              networkInterfaces:
              - networkIp: networkIp
                accessConfigs:
                - natIp: natIp
                  name: name
                  type: type
                - natIp: natIp
                  name: name
                  type: type
                network: network
              - networkIp: networkIp
                accessConfigs:
                - natIp: natIp
                  name: name
                  type: type
                - natIp: natIp
                  name: name
                  type: type
                network: network
              serviceAccounts:
              - scopes:
                - scopes
                - scopes
                email: email
              - scopes:
                - scopes
                - scopes
                email: email
              disksToAttach:
              - attachment:
                  index: 2
                  deviceName: deviceName
                source: source
              - attachment:
                  index: 2
                  deviceName: deviceName
                source: source
              onHostMaintenance: onHostMaintenance
              disksToCreate:
              - attachment:
                  index: 2
                  deviceName: deviceName
                autoDelete: true
                boot: true
                initializeParams:
                  diskType: diskType
                  sourceImage: sourceImage
                  diskSizeGb: diskSizeGb
              - attachment:
                  index: 2
                  deviceName: deviceName
                autoDelete: true
                boot: true
                initializeParams:
                  diskType: diskType
                  sourceImage: sourceImage
                  diskSizeGb: diskSizeGb
              description: description
              baseInstanceName: baseInstanceName
              machineType: machineType
              tags:
                fingerPrint: fingerPrint
                items:
                - items
                - items
            version: version
          healthChecks:
          - path: path
            port: 5
            checkIntervalSec: 6
            host: host
            name: name
            description: description
            unhealthyThreshold: 2
            healthyThreshold: 1
            timeoutSec: 5
          - path: path
            port: 5
            checkIntervalSec: 6
            host: host
            name: name
            description: description
            unhealthyThreshold: 2
            healthyThreshold: 1
            timeoutSec: 5
          initialNumReplicas: 7
          description: description
          baseInstanceName: baseInstanceName
          targetPools:
          - targetPools
          - targetPools
          type: type
          labels:
          - value: value
            key: key
          - value: value
            key: key
          selfLink: selfLink
          numReplicas: 9
          targetPool: targetPool
          currentNumReplicas: 0
          name: name
          resourceViews:
          - resourceViews
          - resourceViews
        - autoRestart: true
          template:
            healthChecks:
            - path: path
              port: 5
              checkIntervalSec: 6
              host: host
              name: name
              description: description
              unhealthyThreshold: 2
              healthyThreshold: 1
              timeoutSec: 5
            - path: path
              port: 5
              checkIntervalSec: 6
              host: host
              name: name
              description: description
              unhealthyThreshold: 2
              healthyThreshold: 1
              timeoutSec: 5
            action:
              timeoutMilliSeconds: 3
              envVariables:
              - hidden: true
                name: name
                value: value
              - hidden: true
                name: name
                value: value
              commands:
              - commands
              - commands
            vmParams:
              canIpForward: true
              metadata:
                fingerPrint: fingerPrint
                items:
                - value: value
                  key: key
                - value: value
                  key: key
              networkInterfaces:
              - networkIp: networkIp
                accessConfigs:
                - natIp: natIp
                  name: name
                  type: type
                - natIp: natIp
                  name: name
                  type: type
                network: network
              - networkIp: networkIp
                accessConfigs:
                - natIp: natIp
                  name: name
                  type: type
                - natIp: natIp
                  name: name
                  type: type
                network: network
              serviceAccounts:
              - scopes:
                - scopes
                - scopes
                email: email
              - scopes:
                - scopes
                - scopes
                email: email
              disksToAttach:
              - attachment:
                  index: 2
                  deviceName: deviceName
                source: source
              - attachment:
                  index: 2
                  deviceName: deviceName
                source: source
              onHostMaintenance: onHostMaintenance
              disksToCreate:
              - attachment:
                  index: 2
                  deviceName: deviceName
                autoDelete: true
                boot: true
                initializeParams:
                  diskType: diskType
                  sourceImage: sourceImage
                  diskSizeGb: diskSizeGb
              - attachment:
                  index: 2
                  deviceName: deviceName
                autoDelete: true
                boot: true
                initializeParams:
                  diskType: diskType
                  sourceImage: sourceImage
                  diskSizeGb: diskSizeGb
              description: description
              baseInstanceName: baseInstanceName
              machineType: machineType
              tags:
                fingerPrint: fingerPrint
                items:
                - items
                - items
            version: version
          healthChecks:
          - path: path
            port: 5
            checkIntervalSec: 6
            host: host
            name: name
            description: description
            unhealthyThreshold: 2
            healthyThreshold: 1
            timeoutSec: 5
          - path: path
            port: 5
            checkIntervalSec: 6
            host: host
            name: name
            description: description
            unhealthyThreshold: 2
            healthyThreshold: 1
            timeoutSec: 5
          initialNumReplicas: 7
          description: description
          baseInstanceName: baseInstanceName
          targetPools:
          - targetPools
          - targetPools
          type: type
          labels:
          - value: value
            key: key
          - value: value
            key: key
          selfLink: selfLink
          numReplicas: 9
          targetPool: targetPool
          currentNumReplicas: 0
          name: name
          resourceViews:
          - resourceViews
          - resourceViews
      properties:
        nextPageToken:
          title: nextPageToken
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Pool'
          title: resources
          type: array
      title: PoolsListResponse
      type: object
    Replica:
      description: "An individual Replica within a Pool. Replicas are automatically\
        \ created by the replica pool, using the template provided by the user. You\
        \ cannot directly create replicas."
      example:
        name: name
        selfLink: selfLink
        status:
          details: details
          templateVersion: templateVersion
          state: state
          vmLink: vmLink
          vmStartTime: vmStartTime
      properties:
        name:
          description: "[Output Only] The name of the Replica object."
          title: name
          type: string
        selfLink:
          description: "[Output Only] The self-link of the Replica."
          title: selfLink
          type: string
        status:
          $ref: '#/components/schemas/ReplicaStatus'
      title: Replica
      type: object
    ReplicaStatus:
      description: The current status of a Replica.
      example:
        details: details
        templateVersion: templateVersion
        state: state
        vmLink: vmLink
        vmStartTime: vmStartTime
      properties:
        details:
          description: "[Output Only] Human-readable details about the current state\
            \ of the replica"
          title: details
          type: string
        state:
          description: "[Output Only] The state of the Replica."
          title: state
          type: string
        templateVersion:
          description: "[Output Only] The template used to build the replica."
          title: templateVersion
          type: string
        vmLink:
          description: "[Output Only] Link to the virtual machine that this Replica\
            \ represents."
          title: vmLink
          type: string
        vmStartTime:
          description: "[Output Only] The time that this Replica got to the RUNNING\
            \ state, in RFC 3339 format. If the start time is unknown, UNKNOWN is\
            \ returned."
          title: vmStartTime
          type: string
      title: ReplicaStatus
      type: object
    ReplicasDeleteRequest:
      example:
        abandonInstance: true
      properties:
        abandonInstance:
          description: "Whether the instance resource represented by this replica\
            \ should be deleted or abandoned. If abandoned, the replica will be deleted\
            \ but the virtual machine instance will remain. By default, this is set\
            \ to false and the instance will be deleted along with the replica."
          title: abandonInstance
          type: boolean
      title: ReplicasDeleteRequest
      type: object
    ReplicasListResponse:
      example:
        nextPageToken: nextPageToken
        resources:
        - name: name
          selfLink: selfLink
          status:
            details: details
            templateVersion: templateVersion
            state: state
            vmLink: vmLink
            vmStartTime: vmStartTime
        - name: name
          selfLink: selfLink
          status:
            details: details
            templateVersion: templateVersion
            state: state
            vmLink: vmLink
            vmStartTime: vmStartTime
      properties:
        nextPageToken:
          title: nextPageToken
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Replica'
          title: resources
          type: array
      title: ReplicasListResponse
      type: object
    ServiceAccount:
      description: "A Compute Engine service account, identical to the Compute Engine\
        \ resource."
      example:
        scopes:
        - scopes
        - scopes
        email: email
      properties:
        email:
          description: "The service account email address, for example: 123845678986@project.gserviceaccount.com"
          title: email
          type: string
        scopes:
          description: "The list of OAuth2 scopes to obtain for the service account,\
            \ for example: https://www.googleapis.com/auth/devstorage.full_control"
          items:
            type: string
          title: scopes
          type: array
      title: ServiceAccount
      type: object
    Tag:
      description: "A Compute Engine Instance tag, identical to the tags on the corresponding\
        \ Compute Engine Instance resource."
      example:
        fingerPrint: fingerPrint
        items:
        - items
        - items
      properties:
        fingerPrint:
          description: The fingerprint of the tag. Required for updating the list
            of tags.
          title: fingerPrint
          type: string
        items:
          description: Items contained in this tag.
          items:
            type: string
          title: items
          type: array
      title: Tag
      type: object
    Template:
      description: The template used for creating replicas in the pool.
      example:
        healthChecks:
        - path: path
          port: 5
          checkIntervalSec: 6
          host: host
          name: name
          description: description
          unhealthyThreshold: 2
          healthyThreshold: 1
          timeoutSec: 5
        - path: path
          port: 5
          checkIntervalSec: 6
          host: host
          name: name
          description: description
          unhealthyThreshold: 2
          healthyThreshold: 1
          timeoutSec: 5
        action:
          timeoutMilliSeconds: 3
          envVariables:
          - hidden: true
            name: name
            value: value
          - hidden: true
            name: name
            value: value
          commands:
          - commands
          - commands
        vmParams:
          canIpForward: true
          metadata:
            fingerPrint: fingerPrint
            items:
            - value: value
              key: key
            - value: value
              key: key
          networkInterfaces:
          - networkIp: networkIp
            accessConfigs:
            - natIp: natIp
              name: name
              type: type
            - natIp: natIp
              name: name
              type: type
            network: network
          - networkIp: networkIp
            accessConfigs:
            - natIp: natIp
              name: name
              type: type
            - natIp: natIp
              name: name
              type: type
            network: network
          serviceAccounts:
          - scopes:
            - scopes
            - scopes
            email: email
          - scopes:
            - scopes
            - scopes
            email: email
          disksToAttach:
          - attachment:
              index: 2
              deviceName: deviceName
            source: source
          - attachment:
              index: 2
              deviceName: deviceName
            source: source
          onHostMaintenance: onHostMaintenance
          disksToCreate:
          - attachment:
              index: 2
              deviceName: deviceName
            autoDelete: true
            boot: true
            initializeParams:
              diskType: diskType
              sourceImage: sourceImage
              diskSizeGb: diskSizeGb
          - attachment:
              index: 2
              deviceName: deviceName
            autoDelete: true
            boot: true
            initializeParams:
              diskType: diskType
              sourceImage: sourceImage
              diskSizeGb: diskSizeGb
          description: description
          baseInstanceName: baseInstanceName
          machineType: machineType
          tags:
            fingerPrint: fingerPrint
            items:
            - items
            - items
        version: version
      properties:
        action:
          $ref: '#/components/schemas/Action'
        healthChecks:
          description: A list of HTTP Health Checks to configure for this replica
            pool and all virtual machines in this replica pool.
          items:
            $ref: '#/components/schemas/HealthCheck'
          title: healthChecks
          type: array
        version:
          description: "A free-form string describing the version of this template.\
            \ You can provide any versioning string you would like. For example, version1\
            \ or template-v1."
          title: version
          type: string
        vmParams:
          $ref: '#/components/schemas/VmParams'
      title: Template
      type: object
    VmParams:
      description: Parameters for creating a Compute Engine Instance resource. Most
        fields are identical to the corresponding Compute Engine resource.
      example:
        canIpForward: true
        metadata:
          fingerPrint: fingerPrint
          items:
          - value: value
            key: key
          - value: value
            key: key
        networkInterfaces:
        - networkIp: networkIp
          accessConfigs:
          - natIp: natIp
            name: name
            type: type
          - natIp: natIp
            name: name
            type: type
          network: network
        - networkIp: networkIp
          accessConfigs:
          - natIp: natIp
            name: name
            type: type
          - natIp: natIp
            name: name
            type: type
          network: network
        serviceAccounts:
        - scopes:
          - scopes
          - scopes
          email: email
        - scopes:
          - scopes
          - scopes
          email: email
        disksToAttach:
        - attachment:
            index: 2
            deviceName: deviceName
          source: source
        - attachment:
            index: 2
            deviceName: deviceName
          source: source
        onHostMaintenance: onHostMaintenance
        disksToCreate:
        - attachment:
            index: 2
            deviceName: deviceName
          autoDelete: true
          boot: true
          initializeParams:
            diskType: diskType
            sourceImage: sourceImage
            diskSizeGb: diskSizeGb
        - attachment:
            index: 2
            deviceName: deviceName
          autoDelete: true
          boot: true
          initializeParams:
            diskType: diskType
            sourceImage: sourceImage
            diskSizeGb: diskSizeGb
        description: description
        baseInstanceName: baseInstanceName
        machineType: machineType
        tags:
          fingerPrint: fingerPrint
          items:
          - items
          - items
      properties:
        baseInstanceName:
          description: Deprecated. Please use baseInstanceName instead.
          title: baseInstanceName
          type: string
        canIpForward:
          description: "Enables IP Forwarding, which allows this instance to receive\
            \ packets destined for a different IP address, and send packets with a\
            \ different source IP. See IP Forwarding for more information."
          title: canIpForward
          type: boolean
        description:
          description: An optional textual description of the instance.
          title: description
          type: string
        disksToAttach:
          description: A list of existing Persistent Disk resources to attach to each
            replica in the pool. Each disk will be attached in read-only mode to every
            replica.
          items:
            $ref: '#/components/schemas/ExistingDisk'
          title: disksToAttach
          type: array
        disksToCreate:
          description: "A list of Disk resources to create and attach to each Replica\
            \ in the Pool. Currently, you can only define one disk and it must be\
            \ a root persistent disk. Note that Replica Pool will create a root persistent\
            \ disk for each replica."
          items:
            $ref: '#/components/schemas/NewDisk'
          title: disksToCreate
          type: array
        machineType:
          description: The machine type for this instance. The resource name (e.g.
            n1-standard-1).
          title: machineType
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        networkInterfaces:
          description: "A list of network interfaces for the instance. Currently only\
            \ one interface is supported by Google Compute Engine, ONE_TO_ONE_NAT."
          items:
            $ref: '#/components/schemas/NetworkInterface'
          title: networkInterfaces
          type: array
        onHostMaintenance:
          title: onHostMaintenance
          type: string
        serviceAccounts:
          description: A list of Service Accounts to enable for this instance.
          items:
            $ref: '#/components/schemas/ServiceAccount'
          title: serviceAccounts
          type: array
        tags:
          $ref: '#/components/schemas/Tag'
      title: VmParams
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data
              across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data
              across Google Cloud Platform services
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google
              Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google
              Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/replicapool: View and manage replica pools
            https://www.googleapis.com/auth/replicapool.readonly: View replica pools
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data
              across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data
              across Google Cloud Platform services
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google
              Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google
              Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/replicapool: View and manage replica pools
            https://www.googleapis.com/auth/replicapool.readonly: View replica pools
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
