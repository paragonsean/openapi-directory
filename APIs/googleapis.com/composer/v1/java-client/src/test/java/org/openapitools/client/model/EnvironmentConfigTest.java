/*
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DataRetentionConfig;
import org.openapitools.client.model.DatabaseConfig;
import org.openapitools.client.model.EncryptionConfig;
import org.openapitools.client.model.MaintenanceWindow;
import org.openapitools.client.model.MasterAuthorizedNetworksConfig;
import org.openapitools.client.model.NodeConfig;
import org.openapitools.client.model.PrivateEnvironmentConfig;
import org.openapitools.client.model.RecoveryConfig;
import org.openapitools.client.model.SoftwareConfig;
import org.openapitools.client.model.WebServerConfig;
import org.openapitools.client.model.WebServerNetworkAccessControl;
import org.openapitools.client.model.WorkloadsConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EnvironmentConfig
 */
public class EnvironmentConfigTest {
    private final EnvironmentConfig model = new EnvironmentConfig();

    /**
     * Model tests for EnvironmentConfig
     */
    @Test
    public void testEnvironmentConfig() {
        // TODO: test EnvironmentConfig
    }

    /**
     * Test the property 'airflowByoidUri'
     */
    @Test
    public void airflowByoidUriTest() {
        // TODO: test airflowByoidUri
    }

    /**
     * Test the property 'airflowUri'
     */
    @Test
    public void airflowUriTest() {
        // TODO: test airflowUri
    }

    /**
     * Test the property 'dagGcsPrefix'
     */
    @Test
    public void dagGcsPrefixTest() {
        // TODO: test dagGcsPrefix
    }

    /**
     * Test the property 'dataRetentionConfig'
     */
    @Test
    public void dataRetentionConfigTest() {
        // TODO: test dataRetentionConfig
    }

    /**
     * Test the property 'databaseConfig'
     */
    @Test
    public void databaseConfigTest() {
        // TODO: test databaseConfig
    }

    /**
     * Test the property 'encryptionConfig'
     */
    @Test
    public void encryptionConfigTest() {
        // TODO: test encryptionConfig
    }

    /**
     * Test the property 'environmentSize'
     */
    @Test
    public void environmentSizeTest() {
        // TODO: test environmentSize
    }

    /**
     * Test the property 'gkeCluster'
     */
    @Test
    public void gkeClusterTest() {
        // TODO: test gkeCluster
    }

    /**
     * Test the property 'maintenanceWindow'
     */
    @Test
    public void maintenanceWindowTest() {
        // TODO: test maintenanceWindow
    }

    /**
     * Test the property 'masterAuthorizedNetworksConfig'
     */
    @Test
    public void masterAuthorizedNetworksConfigTest() {
        // TODO: test masterAuthorizedNetworksConfig
    }

    /**
     * Test the property 'nodeConfig'
     */
    @Test
    public void nodeConfigTest() {
        // TODO: test nodeConfig
    }

    /**
     * Test the property 'nodeCount'
     */
    @Test
    public void nodeCountTest() {
        // TODO: test nodeCount
    }

    /**
     * Test the property 'privateEnvironmentConfig'
     */
    @Test
    public void privateEnvironmentConfigTest() {
        // TODO: test privateEnvironmentConfig
    }

    /**
     * Test the property 'recoveryConfig'
     */
    @Test
    public void recoveryConfigTest() {
        // TODO: test recoveryConfig
    }

    /**
     * Test the property 'resilienceMode'
     */
    @Test
    public void resilienceModeTest() {
        // TODO: test resilienceMode
    }

    /**
     * Test the property 'softwareConfig'
     */
    @Test
    public void softwareConfigTest() {
        // TODO: test softwareConfig
    }

    /**
     * Test the property 'webServerConfig'
     */
    @Test
    public void webServerConfigTest() {
        // TODO: test webServerConfig
    }

    /**
     * Test the property 'webServerNetworkAccessControl'
     */
    @Test
    public void webServerNetworkAccessControlTest() {
        // TODO: test webServerNetworkAccessControl
    }

    /**
     * Test the property 'workloadsConfig'
     */
    @Test
    public void workloadsConfigTest() {
        // TODO: test workloadsConfig
    }

}
