/*
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DataRetentionConfig;
import org.openapitools.client.model.DatabaseConfig;
import org.openapitools.client.model.EncryptionConfig;
import org.openapitools.client.model.MaintenanceWindow;
import org.openapitools.client.model.MasterAuthorizedNetworksConfig;
import org.openapitools.client.model.NodeConfig;
import org.openapitools.client.model.PrivateEnvironmentConfig;
import org.openapitools.client.model.RecoveryConfig;
import org.openapitools.client.model.SoftwareConfig;
import org.openapitools.client.model.WebServerConfig;
import org.openapitools.client.model.WebServerNetworkAccessControl;
import org.openapitools.client.model.WorkloadsConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration information for an environment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:37:43.595125-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnvironmentConfig {
  public static final String SERIALIZED_NAME_AIRFLOW_BYOID_URI = "airflowByoidUri";
  @SerializedName(SERIALIZED_NAME_AIRFLOW_BYOID_URI)
  private String airflowByoidUri;

  public static final String SERIALIZED_NAME_AIRFLOW_URI = "airflowUri";
  @SerializedName(SERIALIZED_NAME_AIRFLOW_URI)
  private String airflowUri;

  public static final String SERIALIZED_NAME_DAG_GCS_PREFIX = "dagGcsPrefix";
  @SerializedName(SERIALIZED_NAME_DAG_GCS_PREFIX)
  private String dagGcsPrefix;

  public static final String SERIALIZED_NAME_DATA_RETENTION_CONFIG = "dataRetentionConfig";
  @SerializedName(SERIALIZED_NAME_DATA_RETENTION_CONFIG)
  private DataRetentionConfig dataRetentionConfig;

  public static final String SERIALIZED_NAME_DATABASE_CONFIG = "databaseConfig";
  @SerializedName(SERIALIZED_NAME_DATABASE_CONFIG)
  private DatabaseConfig databaseConfig;

  public static final String SERIALIZED_NAME_ENCRYPTION_CONFIG = "encryptionConfig";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_CONFIG)
  private EncryptionConfig encryptionConfig;

  /**
   * Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
   */
  @JsonAdapter(EnvironmentSizeEnum.Adapter.class)
  public enum EnvironmentSizeEnum {
    UNSPECIFIED("ENVIRONMENT_SIZE_UNSPECIFIED"),
    
    SMALL("ENVIRONMENT_SIZE_SMALL"),
    
    MEDIUM("ENVIRONMENT_SIZE_MEDIUM"),
    
    LARGE("ENVIRONMENT_SIZE_LARGE");

    private String value;

    EnvironmentSizeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EnvironmentSizeEnum fromValue(String value) {
      for (EnvironmentSizeEnum b : EnvironmentSizeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EnvironmentSizeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnvironmentSizeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EnvironmentSizeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EnvironmentSizeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EnvironmentSizeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENVIRONMENT_SIZE = "environmentSize";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_SIZE)
  private EnvironmentSizeEnum environmentSize;

  public static final String SERIALIZED_NAME_GKE_CLUSTER = "gkeCluster";
  @SerializedName(SERIALIZED_NAME_GKE_CLUSTER)
  private String gkeCluster;

  public static final String SERIALIZED_NAME_MAINTENANCE_WINDOW = "maintenanceWindow";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_WINDOW)
  private MaintenanceWindow maintenanceWindow;

  public static final String SERIALIZED_NAME_MASTER_AUTHORIZED_NETWORKS_CONFIG = "masterAuthorizedNetworksConfig";
  @SerializedName(SERIALIZED_NAME_MASTER_AUTHORIZED_NETWORKS_CONFIG)
  private MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig;

  public static final String SERIALIZED_NAME_NODE_CONFIG = "nodeConfig";
  @SerializedName(SERIALIZED_NAME_NODE_CONFIG)
  private NodeConfig nodeConfig;

  public static final String SERIALIZED_NAME_NODE_COUNT = "nodeCount";
  @SerializedName(SERIALIZED_NAME_NODE_COUNT)
  private Integer nodeCount;

  public static final String SERIALIZED_NAME_PRIVATE_ENVIRONMENT_CONFIG = "privateEnvironmentConfig";
  @SerializedName(SERIALIZED_NAME_PRIVATE_ENVIRONMENT_CONFIG)
  private PrivateEnvironmentConfig privateEnvironmentConfig;

  public static final String SERIALIZED_NAME_RECOVERY_CONFIG = "recoveryConfig";
  @SerializedName(SERIALIZED_NAME_RECOVERY_CONFIG)
  private RecoveryConfig recoveryConfig;

  /**
   * Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow-*.*.* and newer.
   */
  @JsonAdapter(ResilienceModeEnum.Adapter.class)
  public enum ResilienceModeEnum {
    RESILIENCE_MODE_UNSPECIFIED("RESILIENCE_MODE_UNSPECIFIED"),
    
    HIGH_RESILIENCE("HIGH_RESILIENCE");

    private String value;

    ResilienceModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResilienceModeEnum fromValue(String value) {
      for (ResilienceModeEnum b : ResilienceModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResilienceModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResilienceModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResilienceModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResilienceModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResilienceModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESILIENCE_MODE = "resilienceMode";
  @SerializedName(SERIALIZED_NAME_RESILIENCE_MODE)
  private ResilienceModeEnum resilienceMode;

  public static final String SERIALIZED_NAME_SOFTWARE_CONFIG = "softwareConfig";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_CONFIG)
  private SoftwareConfig softwareConfig;

  public static final String SERIALIZED_NAME_WEB_SERVER_CONFIG = "webServerConfig";
  @SerializedName(SERIALIZED_NAME_WEB_SERVER_CONFIG)
  private WebServerConfig webServerConfig;

  public static final String SERIALIZED_NAME_WEB_SERVER_NETWORK_ACCESS_CONTROL = "webServerNetworkAccessControl";
  @SerializedName(SERIALIZED_NAME_WEB_SERVER_NETWORK_ACCESS_CONTROL)
  private WebServerNetworkAccessControl webServerNetworkAccessControl;

  public static final String SERIALIZED_NAME_WORKLOADS_CONFIG = "workloadsConfig";
  @SerializedName(SERIALIZED_NAME_WORKLOADS_CONFIG)
  private WorkloadsConfig workloadsConfig;

  public EnvironmentConfig() {
  }

  public EnvironmentConfig(
     String airflowByoidUri
  ) {
    this();
    this.airflowByoidUri = airflowByoidUri;
  }

  /**
   * Output only. The &#39;bring your own identity&#39; variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see [Access environments with workforce identity federation](/composer/docs/composer-2/access-environments-with-workforce-identity-federation)).
   * @return airflowByoidUri
   */
  @javax.annotation.Nullable
  public String getAirflowByoidUri() {
    return airflowByoidUri;
  }



  public EnvironmentConfig airflowUri(String airflowUri) {
    this.airflowUri = airflowUri;
    return this;
  }

  /**
   * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow web interface](/composer/docs/how-to/accessing/airflow-web-interface)).
   * @return airflowUri
   */
  @javax.annotation.Nullable
  public String getAirflowUri() {
    return airflowUri;
  }

  public void setAirflowUri(String airflowUri) {
    this.airflowUri = airflowUri;
  }


  public EnvironmentConfig dagGcsPrefix(String dagGcsPrefix) {
    this.dagGcsPrefix = dagGcsPrefix;
    return this;
  }

  /**
   * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \&quot;/\&quot;-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix.
   * @return dagGcsPrefix
   */
  @javax.annotation.Nullable
  public String getDagGcsPrefix() {
    return dagGcsPrefix;
  }

  public void setDagGcsPrefix(String dagGcsPrefix) {
    this.dagGcsPrefix = dagGcsPrefix;
  }


  public EnvironmentConfig dataRetentionConfig(DataRetentionConfig dataRetentionConfig) {
    this.dataRetentionConfig = dataRetentionConfig;
    return this;
  }

  /**
   * Get dataRetentionConfig
   * @return dataRetentionConfig
   */
  @javax.annotation.Nullable
  public DataRetentionConfig getDataRetentionConfig() {
    return dataRetentionConfig;
  }

  public void setDataRetentionConfig(DataRetentionConfig dataRetentionConfig) {
    this.dataRetentionConfig = dataRetentionConfig;
  }


  public EnvironmentConfig databaseConfig(DatabaseConfig databaseConfig) {
    this.databaseConfig = databaseConfig;
    return this;
  }

  /**
   * Get databaseConfig
   * @return databaseConfig
   */
  @javax.annotation.Nullable
  public DatabaseConfig getDatabaseConfig() {
    return databaseConfig;
  }

  public void setDatabaseConfig(DatabaseConfig databaseConfig) {
    this.databaseConfig = databaseConfig;
  }


  public EnvironmentConfig encryptionConfig(EncryptionConfig encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
    return this;
  }

  /**
   * Get encryptionConfig
   * @return encryptionConfig
   */
  @javax.annotation.Nullable
  public EncryptionConfig getEncryptionConfig() {
    return encryptionConfig;
  }

  public void setEncryptionConfig(EncryptionConfig encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
  }


  public EnvironmentConfig environmentSize(EnvironmentSizeEnum environmentSize) {
    this.environmentSize = environmentSize;
    return this;
  }

  /**
   * Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
   * @return environmentSize
   */
  @javax.annotation.Nullable
  public EnvironmentSizeEnum getEnvironmentSize() {
    return environmentSize;
  }

  public void setEnvironmentSize(EnvironmentSizeEnum environmentSize) {
    this.environmentSize = environmentSize;
  }


  public EnvironmentConfig gkeCluster(String gkeCluster) {
    this.gkeCluster = gkeCluster;
    return this;
  }

  /**
   * Output only. The Kubernetes Engine cluster used to run this environment.
   * @return gkeCluster
   */
  @javax.annotation.Nullable
  public String getGkeCluster() {
    return gkeCluster;
  }

  public void setGkeCluster(String gkeCluster) {
    this.gkeCluster = gkeCluster;
  }


  public EnvironmentConfig maintenanceWindow(MaintenanceWindow maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
    return this;
  }

  /**
   * Get maintenanceWindow
   * @return maintenanceWindow
   */
  @javax.annotation.Nullable
  public MaintenanceWindow getMaintenanceWindow() {
    return maintenanceWindow;
  }

  public void setMaintenanceWindow(MaintenanceWindow maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
  }


  public EnvironmentConfig masterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig) {
    this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
    return this;
  }

  /**
   * Get masterAuthorizedNetworksConfig
   * @return masterAuthorizedNetworksConfig
   */
  @javax.annotation.Nullable
  public MasterAuthorizedNetworksConfig getMasterAuthorizedNetworksConfig() {
    return masterAuthorizedNetworksConfig;
  }

  public void setMasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig) {
    this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
  }


  public EnvironmentConfig nodeConfig(NodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
    return this;
  }

  /**
   * Get nodeConfig
   * @return nodeConfig
   */
  @javax.annotation.Nullable
  public NodeConfig getNodeConfig() {
    return nodeConfig;
  }

  public void setNodeConfig(NodeConfig nodeConfig) {
    this.nodeConfig = nodeConfig;
  }


  public EnvironmentConfig nodeCount(Integer nodeCount) {
    this.nodeCount = nodeCount;
    return this;
  }

  /**
   * The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
   * @return nodeCount
   */
  @javax.annotation.Nullable
  public Integer getNodeCount() {
    return nodeCount;
  }

  public void setNodeCount(Integer nodeCount) {
    this.nodeCount = nodeCount;
  }


  public EnvironmentConfig privateEnvironmentConfig(PrivateEnvironmentConfig privateEnvironmentConfig) {
    this.privateEnvironmentConfig = privateEnvironmentConfig;
    return this;
  }

  /**
   * Get privateEnvironmentConfig
   * @return privateEnvironmentConfig
   */
  @javax.annotation.Nullable
  public PrivateEnvironmentConfig getPrivateEnvironmentConfig() {
    return privateEnvironmentConfig;
  }

  public void setPrivateEnvironmentConfig(PrivateEnvironmentConfig privateEnvironmentConfig) {
    this.privateEnvironmentConfig = privateEnvironmentConfig;
  }


  public EnvironmentConfig recoveryConfig(RecoveryConfig recoveryConfig) {
    this.recoveryConfig = recoveryConfig;
    return this;
  }

  /**
   * Get recoveryConfig
   * @return recoveryConfig
   */
  @javax.annotation.Nullable
  public RecoveryConfig getRecoveryConfig() {
    return recoveryConfig;
  }

  public void setRecoveryConfig(RecoveryConfig recoveryConfig) {
    this.recoveryConfig = recoveryConfig;
  }


  public EnvironmentConfig resilienceMode(ResilienceModeEnum resilienceMode) {
    this.resilienceMode = resilienceMode;
    return this;
  }

  /**
   * Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow-*.*.* and newer.
   * @return resilienceMode
   */
  @javax.annotation.Nullable
  public ResilienceModeEnum getResilienceMode() {
    return resilienceMode;
  }

  public void setResilienceMode(ResilienceModeEnum resilienceMode) {
    this.resilienceMode = resilienceMode;
  }


  public EnvironmentConfig softwareConfig(SoftwareConfig softwareConfig) {
    this.softwareConfig = softwareConfig;
    return this;
  }

  /**
   * Get softwareConfig
   * @return softwareConfig
   */
  @javax.annotation.Nullable
  public SoftwareConfig getSoftwareConfig() {
    return softwareConfig;
  }

  public void setSoftwareConfig(SoftwareConfig softwareConfig) {
    this.softwareConfig = softwareConfig;
  }


  public EnvironmentConfig webServerConfig(WebServerConfig webServerConfig) {
    this.webServerConfig = webServerConfig;
    return this;
  }

  /**
   * Get webServerConfig
   * @return webServerConfig
   */
  @javax.annotation.Nullable
  public WebServerConfig getWebServerConfig() {
    return webServerConfig;
  }

  public void setWebServerConfig(WebServerConfig webServerConfig) {
    this.webServerConfig = webServerConfig;
  }


  public EnvironmentConfig webServerNetworkAccessControl(WebServerNetworkAccessControl webServerNetworkAccessControl) {
    this.webServerNetworkAccessControl = webServerNetworkAccessControl;
    return this;
  }

  /**
   * Get webServerNetworkAccessControl
   * @return webServerNetworkAccessControl
   */
  @javax.annotation.Nullable
  public WebServerNetworkAccessControl getWebServerNetworkAccessControl() {
    return webServerNetworkAccessControl;
  }

  public void setWebServerNetworkAccessControl(WebServerNetworkAccessControl webServerNetworkAccessControl) {
    this.webServerNetworkAccessControl = webServerNetworkAccessControl;
  }


  public EnvironmentConfig workloadsConfig(WorkloadsConfig workloadsConfig) {
    this.workloadsConfig = workloadsConfig;
    return this;
  }

  /**
   * Get workloadsConfig
   * @return workloadsConfig
   */
  @javax.annotation.Nullable
  public WorkloadsConfig getWorkloadsConfig() {
    return workloadsConfig;
  }

  public void setWorkloadsConfig(WorkloadsConfig workloadsConfig) {
    this.workloadsConfig = workloadsConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentConfig environmentConfig = (EnvironmentConfig) o;
    return Objects.equals(this.airflowByoidUri, environmentConfig.airflowByoidUri) &&
        Objects.equals(this.airflowUri, environmentConfig.airflowUri) &&
        Objects.equals(this.dagGcsPrefix, environmentConfig.dagGcsPrefix) &&
        Objects.equals(this.dataRetentionConfig, environmentConfig.dataRetentionConfig) &&
        Objects.equals(this.databaseConfig, environmentConfig.databaseConfig) &&
        Objects.equals(this.encryptionConfig, environmentConfig.encryptionConfig) &&
        Objects.equals(this.environmentSize, environmentConfig.environmentSize) &&
        Objects.equals(this.gkeCluster, environmentConfig.gkeCluster) &&
        Objects.equals(this.maintenanceWindow, environmentConfig.maintenanceWindow) &&
        Objects.equals(this.masterAuthorizedNetworksConfig, environmentConfig.masterAuthorizedNetworksConfig) &&
        Objects.equals(this.nodeConfig, environmentConfig.nodeConfig) &&
        Objects.equals(this.nodeCount, environmentConfig.nodeCount) &&
        Objects.equals(this.privateEnvironmentConfig, environmentConfig.privateEnvironmentConfig) &&
        Objects.equals(this.recoveryConfig, environmentConfig.recoveryConfig) &&
        Objects.equals(this.resilienceMode, environmentConfig.resilienceMode) &&
        Objects.equals(this.softwareConfig, environmentConfig.softwareConfig) &&
        Objects.equals(this.webServerConfig, environmentConfig.webServerConfig) &&
        Objects.equals(this.webServerNetworkAccessControl, environmentConfig.webServerNetworkAccessControl) &&
        Objects.equals(this.workloadsConfig, environmentConfig.workloadsConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(airflowByoidUri, airflowUri, dagGcsPrefix, dataRetentionConfig, databaseConfig, encryptionConfig, environmentSize, gkeCluster, maintenanceWindow, masterAuthorizedNetworksConfig, nodeConfig, nodeCount, privateEnvironmentConfig, recoveryConfig, resilienceMode, softwareConfig, webServerConfig, webServerNetworkAccessControl, workloadsConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentConfig {\n");
    sb.append("    airflowByoidUri: ").append(toIndentedString(airflowByoidUri)).append("\n");
    sb.append("    airflowUri: ").append(toIndentedString(airflowUri)).append("\n");
    sb.append("    dagGcsPrefix: ").append(toIndentedString(dagGcsPrefix)).append("\n");
    sb.append("    dataRetentionConfig: ").append(toIndentedString(dataRetentionConfig)).append("\n");
    sb.append("    databaseConfig: ").append(toIndentedString(databaseConfig)).append("\n");
    sb.append("    encryptionConfig: ").append(toIndentedString(encryptionConfig)).append("\n");
    sb.append("    environmentSize: ").append(toIndentedString(environmentSize)).append("\n");
    sb.append("    gkeCluster: ").append(toIndentedString(gkeCluster)).append("\n");
    sb.append("    maintenanceWindow: ").append(toIndentedString(maintenanceWindow)).append("\n");
    sb.append("    masterAuthorizedNetworksConfig: ").append(toIndentedString(masterAuthorizedNetworksConfig)).append("\n");
    sb.append("    nodeConfig: ").append(toIndentedString(nodeConfig)).append("\n");
    sb.append("    nodeCount: ").append(toIndentedString(nodeCount)).append("\n");
    sb.append("    privateEnvironmentConfig: ").append(toIndentedString(privateEnvironmentConfig)).append("\n");
    sb.append("    recoveryConfig: ").append(toIndentedString(recoveryConfig)).append("\n");
    sb.append("    resilienceMode: ").append(toIndentedString(resilienceMode)).append("\n");
    sb.append("    softwareConfig: ").append(toIndentedString(softwareConfig)).append("\n");
    sb.append("    webServerConfig: ").append(toIndentedString(webServerConfig)).append("\n");
    sb.append("    webServerNetworkAccessControl: ").append(toIndentedString(webServerNetworkAccessControl)).append("\n");
    sb.append("    workloadsConfig: ").append(toIndentedString(workloadsConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("airflowByoidUri");
    openapiFields.add("airflowUri");
    openapiFields.add("dagGcsPrefix");
    openapiFields.add("dataRetentionConfig");
    openapiFields.add("databaseConfig");
    openapiFields.add("encryptionConfig");
    openapiFields.add("environmentSize");
    openapiFields.add("gkeCluster");
    openapiFields.add("maintenanceWindow");
    openapiFields.add("masterAuthorizedNetworksConfig");
    openapiFields.add("nodeConfig");
    openapiFields.add("nodeCount");
    openapiFields.add("privateEnvironmentConfig");
    openapiFields.add("recoveryConfig");
    openapiFields.add("resilienceMode");
    openapiFields.add("softwareConfig");
    openapiFields.add("webServerConfig");
    openapiFields.add("webServerNetworkAccessControl");
    openapiFields.add("workloadsConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnvironmentConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnvironmentConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnvironmentConfig is not found in the empty JSON string", EnvironmentConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnvironmentConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnvironmentConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("airflowByoidUri") != null && !jsonObj.get("airflowByoidUri").isJsonNull()) && !jsonObj.get("airflowByoidUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `airflowByoidUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("airflowByoidUri").toString()));
      }
      if ((jsonObj.get("airflowUri") != null && !jsonObj.get("airflowUri").isJsonNull()) && !jsonObj.get("airflowUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `airflowUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("airflowUri").toString()));
      }
      if ((jsonObj.get("dagGcsPrefix") != null && !jsonObj.get("dagGcsPrefix").isJsonNull()) && !jsonObj.get("dagGcsPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dagGcsPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dagGcsPrefix").toString()));
      }
      // validate the optional field `dataRetentionConfig`
      if (jsonObj.get("dataRetentionConfig") != null && !jsonObj.get("dataRetentionConfig").isJsonNull()) {
        DataRetentionConfig.validateJsonElement(jsonObj.get("dataRetentionConfig"));
      }
      // validate the optional field `databaseConfig`
      if (jsonObj.get("databaseConfig") != null && !jsonObj.get("databaseConfig").isJsonNull()) {
        DatabaseConfig.validateJsonElement(jsonObj.get("databaseConfig"));
      }
      // validate the optional field `encryptionConfig`
      if (jsonObj.get("encryptionConfig") != null && !jsonObj.get("encryptionConfig").isJsonNull()) {
        EncryptionConfig.validateJsonElement(jsonObj.get("encryptionConfig"));
      }
      if ((jsonObj.get("environmentSize") != null && !jsonObj.get("environmentSize").isJsonNull()) && !jsonObj.get("environmentSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environmentSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environmentSize").toString()));
      }
      // validate the optional field `environmentSize`
      if (jsonObj.get("environmentSize") != null && !jsonObj.get("environmentSize").isJsonNull()) {
        EnvironmentSizeEnum.validateJsonElement(jsonObj.get("environmentSize"));
      }
      if ((jsonObj.get("gkeCluster") != null && !jsonObj.get("gkeCluster").isJsonNull()) && !jsonObj.get("gkeCluster").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gkeCluster` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gkeCluster").toString()));
      }
      // validate the optional field `maintenanceWindow`
      if (jsonObj.get("maintenanceWindow") != null && !jsonObj.get("maintenanceWindow").isJsonNull()) {
        MaintenanceWindow.validateJsonElement(jsonObj.get("maintenanceWindow"));
      }
      // validate the optional field `masterAuthorizedNetworksConfig`
      if (jsonObj.get("masterAuthorizedNetworksConfig") != null && !jsonObj.get("masterAuthorizedNetworksConfig").isJsonNull()) {
        MasterAuthorizedNetworksConfig.validateJsonElement(jsonObj.get("masterAuthorizedNetworksConfig"));
      }
      // validate the optional field `nodeConfig`
      if (jsonObj.get("nodeConfig") != null && !jsonObj.get("nodeConfig").isJsonNull()) {
        NodeConfig.validateJsonElement(jsonObj.get("nodeConfig"));
      }
      // validate the optional field `privateEnvironmentConfig`
      if (jsonObj.get("privateEnvironmentConfig") != null && !jsonObj.get("privateEnvironmentConfig").isJsonNull()) {
        PrivateEnvironmentConfig.validateJsonElement(jsonObj.get("privateEnvironmentConfig"));
      }
      // validate the optional field `recoveryConfig`
      if (jsonObj.get("recoveryConfig") != null && !jsonObj.get("recoveryConfig").isJsonNull()) {
        RecoveryConfig.validateJsonElement(jsonObj.get("recoveryConfig"));
      }
      if ((jsonObj.get("resilienceMode") != null && !jsonObj.get("resilienceMode").isJsonNull()) && !jsonObj.get("resilienceMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resilienceMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resilienceMode").toString()));
      }
      // validate the optional field `resilienceMode`
      if (jsonObj.get("resilienceMode") != null && !jsonObj.get("resilienceMode").isJsonNull()) {
        ResilienceModeEnum.validateJsonElement(jsonObj.get("resilienceMode"));
      }
      // validate the optional field `softwareConfig`
      if (jsonObj.get("softwareConfig") != null && !jsonObj.get("softwareConfig").isJsonNull()) {
        SoftwareConfig.validateJsonElement(jsonObj.get("softwareConfig"));
      }
      // validate the optional field `webServerConfig`
      if (jsonObj.get("webServerConfig") != null && !jsonObj.get("webServerConfig").isJsonNull()) {
        WebServerConfig.validateJsonElement(jsonObj.get("webServerConfig"));
      }
      // validate the optional field `webServerNetworkAccessControl`
      if (jsonObj.get("webServerNetworkAccessControl") != null && !jsonObj.get("webServerNetworkAccessControl").isJsonNull()) {
        WebServerNetworkAccessControl.validateJsonElement(jsonObj.get("webServerNetworkAccessControl"));
      }
      // validate the optional field `workloadsConfig`
      if (jsonObj.get("workloadsConfig") != null && !jsonObj.get("workloadsConfig").isJsonNull()) {
        WorkloadsConfig.validateJsonElement(jsonObj.get("workloadsConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnvironmentConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnvironmentConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnvironmentConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnvironmentConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<EnvironmentConfig>() {
           @Override
           public void write(JsonWriter out, EnvironmentConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnvironmentConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnvironmentConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnvironmentConfig
   * @throws IOException if the JSON string is invalid with respect to EnvironmentConfig
   */
  public static EnvironmentConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnvironmentConfig.class);
  }

  /**
   * Convert an instance of EnvironmentConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

