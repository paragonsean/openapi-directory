/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIPAllocationPolicy.h
 *
 * Configuration for controlling how IPs are allocated in the GKE cluster running the Apache Airflow software.
 */

#ifndef OAIIPAllocationPolicy_H
#define OAIIPAllocationPolicy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIPAllocationPolicy : public OAIObject {
public:
    OAIIPAllocationPolicy();
    OAIIPAllocationPolicy(QString json);
    ~OAIIPAllocationPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterIpv4CidrBlock() const;
    void setClusterIpv4CidrBlock(const QString &cluster_ipv4_cidr_block);
    bool is_cluster_ipv4_cidr_block_Set() const;
    bool is_cluster_ipv4_cidr_block_Valid() const;

    QString getClusterSecondaryRangeName() const;
    void setClusterSecondaryRangeName(const QString &cluster_secondary_range_name);
    bool is_cluster_secondary_range_name_Set() const;
    bool is_cluster_secondary_range_name_Valid() const;

    QString getServicesIpv4CidrBlock() const;
    void setServicesIpv4CidrBlock(const QString &services_ipv4_cidr_block);
    bool is_services_ipv4_cidr_block_Set() const;
    bool is_services_ipv4_cidr_block_Valid() const;

    QString getServicesSecondaryRangeName() const;
    void setServicesSecondaryRangeName(const QString &services_secondary_range_name);
    bool is_services_secondary_range_name_Set() const;
    bool is_services_secondary_range_name_Valid() const;

    bool isUseIpAliases() const;
    void setUseIpAliases(const bool &use_ip_aliases);
    bool is_use_ip_aliases_Set() const;
    bool is_use_ip_aliases_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_ipv4_cidr_block;
    bool m_cluster_ipv4_cidr_block_isSet;
    bool m_cluster_ipv4_cidr_block_isValid;

    QString m_cluster_secondary_range_name;
    bool m_cluster_secondary_range_name_isSet;
    bool m_cluster_secondary_range_name_isValid;

    QString m_services_ipv4_cidr_block;
    bool m_services_ipv4_cidr_block_isSet;
    bool m_services_ipv4_cidr_block_isValid;

    QString m_services_secondary_range_name;
    bool m_services_secondary_range_name_isSet;
    bool m_services_secondary_range_name_isValid;

    bool m_use_ip_aliases;
    bool m_use_ip_aliases_isSet;
    bool m_use_ip_aliases_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIPAllocationPolicy)

#endif // OAIIPAllocationPolicy_H
