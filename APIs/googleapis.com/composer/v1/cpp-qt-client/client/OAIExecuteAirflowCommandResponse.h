/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecuteAirflowCommandResponse.h
 *
 * Response to ExecuteAirflowCommandRequest.
 */

#ifndef OAIExecuteAirflowCommandResponse_H
#define OAIExecuteAirflowCommandResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExecuteAirflowCommandResponse : public OAIObject {
public:
    OAIExecuteAirflowCommandResponse();
    OAIExecuteAirflowCommandResponse(QString json);
    ~OAIExecuteAirflowCommandResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getExecutionId() const;
    void setExecutionId(const QString &execution_id);
    bool is_execution_id_Set() const;
    bool is_execution_id_Valid() const;

    QString getPod() const;
    void setPod(const QString &pod);
    bool is_pod_Set() const;
    bool is_pod_Valid() const;

    QString getPodNamespace() const;
    void setPodNamespace(const QString &pod_namespace);
    bool is_pod_namespace_Set() const;
    bool is_pod_namespace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_execution_id;
    bool m_execution_id_isSet;
    bool m_execution_id_isValid;

    QString m_pod;
    bool m_pod_isSet;
    bool m_pod_isValid;

    QString m_pod_namespace;
    bool m_pod_namespace_isSet;
    bool m_pod_namespace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecuteAirflowCommandResponse)

#endif // OAIExecuteAirflowCommandResponse_H
