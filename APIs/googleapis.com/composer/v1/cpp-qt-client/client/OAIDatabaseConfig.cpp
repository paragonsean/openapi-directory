/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseConfig::OAIDatabaseConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseConfig::OAIDatabaseConfig() {
    this->initializeModel();
}

OAIDatabaseConfig::~OAIDatabaseConfig() {}

void OAIDatabaseConfig::initializeModel() {

    m_machine_type_isSet = false;
    m_machine_type_isValid = false;

    m_zone_isSet = false;
    m_zone_isValid = false;
}

void OAIDatabaseConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseConfig::fromJsonObject(QJsonObject json) {

    m_machine_type_isValid = ::OpenAPI::fromJsonValue(m_machine_type, json[QString("machineType")]);
    m_machine_type_isSet = !json[QString("machineType")].isNull() && m_machine_type_isValid;

    m_zone_isValid = ::OpenAPI::fromJsonValue(m_zone, json[QString("zone")]);
    m_zone_isSet = !json[QString("zone")].isNull() && m_zone_isValid;
}

QString OAIDatabaseConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_machine_type_isSet) {
        obj.insert(QString("machineType"), ::OpenAPI::toJsonValue(m_machine_type));
    }
    if (m_zone_isSet) {
        obj.insert(QString("zone"), ::OpenAPI::toJsonValue(m_zone));
    }
    return obj;
}

QString OAIDatabaseConfig::getMachineType() const {
    return m_machine_type;
}
void OAIDatabaseConfig::setMachineType(const QString &machine_type) {
    m_machine_type = machine_type;
    m_machine_type_isSet = true;
}

bool OAIDatabaseConfig::is_machine_type_Set() const{
    return m_machine_type_isSet;
}

bool OAIDatabaseConfig::is_machine_type_Valid() const{
    return m_machine_type_isValid;
}

QString OAIDatabaseConfig::getZone() const {
    return m_zone;
}
void OAIDatabaseConfig::setZone(const QString &zone) {
    m_zone = zone;
    m_zone_isSet = true;
}

bool OAIDatabaseConfig::is_zone_Set() const{
    return m_zone_isSet;
}

bool OAIDatabaseConfig::is_zone_Valid() const{
    return m_zone_isValid;
}

bool OAIDatabaseConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_machine_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
