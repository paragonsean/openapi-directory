/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPollAirflowCommandResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPollAirflowCommandResponse::OAIPollAirflowCommandResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPollAirflowCommandResponse::OAIPollAirflowCommandResponse() {
    this->initializeModel();
}

OAIPollAirflowCommandResponse::~OAIPollAirflowCommandResponse() {}

void OAIPollAirflowCommandResponse::initializeModel() {

    m_exit_info_isSet = false;
    m_exit_info_isValid = false;

    m_output_isSet = false;
    m_output_isValid = false;

    m_output_end_isSet = false;
    m_output_end_isValid = false;
}

void OAIPollAirflowCommandResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPollAirflowCommandResponse::fromJsonObject(QJsonObject json) {

    m_exit_info_isValid = ::OpenAPI::fromJsonValue(m_exit_info, json[QString("exitInfo")]);
    m_exit_info_isSet = !json[QString("exitInfo")].isNull() && m_exit_info_isValid;

    m_output_isValid = ::OpenAPI::fromJsonValue(m_output, json[QString("output")]);
    m_output_isSet = !json[QString("output")].isNull() && m_output_isValid;

    m_output_end_isValid = ::OpenAPI::fromJsonValue(m_output_end, json[QString("outputEnd")]);
    m_output_end_isSet = !json[QString("outputEnd")].isNull() && m_output_end_isValid;
}

QString OAIPollAirflowCommandResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPollAirflowCommandResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_exit_info.isSet()) {
        obj.insert(QString("exitInfo"), ::OpenAPI::toJsonValue(m_exit_info));
    }
    if (m_output.size() > 0) {
        obj.insert(QString("output"), ::OpenAPI::toJsonValue(m_output));
    }
    if (m_output_end_isSet) {
        obj.insert(QString("outputEnd"), ::OpenAPI::toJsonValue(m_output_end));
    }
    return obj;
}

OAIExitInfo OAIPollAirflowCommandResponse::getExitInfo() const {
    return m_exit_info;
}
void OAIPollAirflowCommandResponse::setExitInfo(const OAIExitInfo &exit_info) {
    m_exit_info = exit_info;
    m_exit_info_isSet = true;
}

bool OAIPollAirflowCommandResponse::is_exit_info_Set() const{
    return m_exit_info_isSet;
}

bool OAIPollAirflowCommandResponse::is_exit_info_Valid() const{
    return m_exit_info_isValid;
}

QList<OAILine> OAIPollAirflowCommandResponse::getOutput() const {
    return m_output;
}
void OAIPollAirflowCommandResponse::setOutput(const QList<OAILine> &output) {
    m_output = output;
    m_output_isSet = true;
}

bool OAIPollAirflowCommandResponse::is_output_Set() const{
    return m_output_isSet;
}

bool OAIPollAirflowCommandResponse::is_output_Valid() const{
    return m_output_isValid;
}

bool OAIPollAirflowCommandResponse::isOutputEnd() const {
    return m_output_end;
}
void OAIPollAirflowCommandResponse::setOutputEnd(const bool &output_end) {
    m_output_end = output_end;
    m_output_end_isSet = true;
}

bool OAIPollAirflowCommandResponse::is_output_end_Set() const{
    return m_output_end_isSet;
}

bool OAIPollAirflowCommandResponse::is_output_end_Valid() const{
    return m_output_end_isValid;
}

bool OAIPollAirflowCommandResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exit_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_end_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPollAirflowCommandResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
