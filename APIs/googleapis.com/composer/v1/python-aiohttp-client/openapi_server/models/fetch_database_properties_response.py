# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FetchDatabasePropertiesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_failover_replica_available: bool=None, primary_gce_zone: str=None, secondary_gce_zone: str=None):
        """FetchDatabasePropertiesResponse - a model defined in OpenAPI

        :param is_failover_replica_available: The is_failover_replica_available of this FetchDatabasePropertiesResponse.
        :param primary_gce_zone: The primary_gce_zone of this FetchDatabasePropertiesResponse.
        :param secondary_gce_zone: The secondary_gce_zone of this FetchDatabasePropertiesResponse.
        """
        self.openapi_types = {
            'is_failover_replica_available': bool,
            'primary_gce_zone': str,
            'secondary_gce_zone': str
        }

        self.attribute_map = {
            'is_failover_replica_available': 'isFailoverReplicaAvailable',
            'primary_gce_zone': 'primaryGceZone',
            'secondary_gce_zone': 'secondaryGceZone'
        }

        self._is_failover_replica_available = is_failover_replica_available
        self._primary_gce_zone = primary_gce_zone
        self._secondary_gce_zone = secondary_gce_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FetchDatabasePropertiesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FetchDatabasePropertiesResponse of this FetchDatabasePropertiesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_failover_replica_available(self):
        """Gets the is_failover_replica_available of this FetchDatabasePropertiesResponse.

        The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only fail over to the failover replica when the status is true.

        :return: The is_failover_replica_available of this FetchDatabasePropertiesResponse.
        :rtype: bool
        """
        return self._is_failover_replica_available

    @is_failover_replica_available.setter
    def is_failover_replica_available(self, is_failover_replica_available):
        """Sets the is_failover_replica_available of this FetchDatabasePropertiesResponse.

        The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only fail over to the failover replica when the status is true.

        :param is_failover_replica_available: The is_failover_replica_available of this FetchDatabasePropertiesResponse.
        :type is_failover_replica_available: bool
        """

        self._is_failover_replica_available = is_failover_replica_available

    @property
    def primary_gce_zone(self):
        """Gets the primary_gce_zone of this FetchDatabasePropertiesResponse.

        The Compute Engine zone that the instance is currently serving from.

        :return: The primary_gce_zone of this FetchDatabasePropertiesResponse.
        :rtype: str
        """
        return self._primary_gce_zone

    @primary_gce_zone.setter
    def primary_gce_zone(self, primary_gce_zone):
        """Sets the primary_gce_zone of this FetchDatabasePropertiesResponse.

        The Compute Engine zone that the instance is currently serving from.

        :param primary_gce_zone: The primary_gce_zone of this FetchDatabasePropertiesResponse.
        :type primary_gce_zone: str
        """

        self._primary_gce_zone = primary_gce_zone

    @property
    def secondary_gce_zone(self):
        """Gets the secondary_gce_zone of this FetchDatabasePropertiesResponse.

        The Compute Engine zone that the failover instance is currently serving from for a regional Cloud SQL instance.

        :return: The secondary_gce_zone of this FetchDatabasePropertiesResponse.
        :rtype: str
        """
        return self._secondary_gce_zone

    @secondary_gce_zone.setter
    def secondary_gce_zone(self, secondary_gce_zone):
        """Sets the secondary_gce_zone of this FetchDatabasePropertiesResponse.

        The Compute Engine zone that the failover instance is currently serving from for a regional Cloud SQL instance.

        :param secondary_gce_zone: The secondary_gce_zone of this FetchDatabasePropertiesResponse.
        :type secondary_gce_zone: str
        """

        self._secondary_gce_zone = secondary_gce_zone
