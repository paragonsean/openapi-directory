# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.environment import Environment
from openapi_server import util


class ListEnvironmentsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environments: List[Environment]=None, next_page_token: str=None):
        """ListEnvironmentsResponse - a model defined in OpenAPI

        :param environments: The environments of this ListEnvironmentsResponse.
        :param next_page_token: The next_page_token of this ListEnvironmentsResponse.
        """
        self.openapi_types = {
            'environments': List[Environment],
            'next_page_token': str
        }

        self.attribute_map = {
            'environments': 'environments',
            'next_page_token': 'nextPageToken'
        }

        self._environments = environments
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListEnvironmentsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListEnvironmentsResponse of this ListEnvironmentsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environments(self):
        """Gets the environments of this ListEnvironmentsResponse.

        The list of environments returned by a ListEnvironmentsRequest.

        :return: The environments of this ListEnvironmentsResponse.
        :rtype: List[Environment]
        """
        return self._environments

    @environments.setter
    def environments(self, environments):
        """Sets the environments of this ListEnvironmentsResponse.

        The list of environments returned by a ListEnvironmentsRequest.

        :param environments: The environments of this ListEnvironmentsResponse.
        :type environments: List[Environment]
        """

        self._environments = environments

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListEnvironmentsResponse.

        The page token used to query for the next page if one exists.

        :return: The next_page_token of this ListEnvironmentsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListEnvironmentsResponse.

        The page token used to query for the next page if one exists.

        :param next_page_token: The next_page_token of this ListEnvironmentsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
