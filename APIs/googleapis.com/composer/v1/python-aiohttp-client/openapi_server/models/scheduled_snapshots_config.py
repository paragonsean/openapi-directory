# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScheduledSnapshotsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, snapshot_creation_schedule: str=None, snapshot_location: str=None, time_zone: str=None):
        """ScheduledSnapshotsConfig - a model defined in OpenAPI

        :param enabled: The enabled of this ScheduledSnapshotsConfig.
        :param snapshot_creation_schedule: The snapshot_creation_schedule of this ScheduledSnapshotsConfig.
        :param snapshot_location: The snapshot_location of this ScheduledSnapshotsConfig.
        :param time_zone: The time_zone of this ScheduledSnapshotsConfig.
        """
        self.openapi_types = {
            'enabled': bool,
            'snapshot_creation_schedule': str,
            'snapshot_location': str,
            'time_zone': str
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'snapshot_creation_schedule': 'snapshotCreationSchedule',
            'snapshot_location': 'snapshotLocation',
            'time_zone': 'timeZone'
        }

        self._enabled = enabled
        self._snapshot_creation_schedule = snapshot_creation_schedule
        self._snapshot_location = snapshot_location
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduledSnapshotsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduledSnapshotsConfig of this ScheduledSnapshotsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this ScheduledSnapshotsConfig.

        Optional. Whether scheduled snapshots creation is enabled.

        :return: The enabled of this ScheduledSnapshotsConfig.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ScheduledSnapshotsConfig.

        Optional. Whether scheduled snapshots creation is enabled.

        :param enabled: The enabled of this ScheduledSnapshotsConfig.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def snapshot_creation_schedule(self):
        """Gets the snapshot_creation_schedule of this ScheduledSnapshotsConfig.

        Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution.

        :return: The snapshot_creation_schedule of this ScheduledSnapshotsConfig.
        :rtype: str
        """
        return self._snapshot_creation_schedule

    @snapshot_creation_schedule.setter
    def snapshot_creation_schedule(self, snapshot_creation_schedule):
        """Sets the snapshot_creation_schedule of this ScheduledSnapshotsConfig.

        Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution.

        :param snapshot_creation_schedule: The snapshot_creation_schedule of this ScheduledSnapshotsConfig.
        :type snapshot_creation_schedule: str
        """

        self._snapshot_creation_schedule = snapshot_creation_schedule

    @property
    def snapshot_location(self):
        """Gets the snapshot_location of this ScheduledSnapshotsConfig.

        Optional. The Cloud Storage location for storing automatically created snapshots.

        :return: The snapshot_location of this ScheduledSnapshotsConfig.
        :rtype: str
        """
        return self._snapshot_location

    @snapshot_location.setter
    def snapshot_location(self, snapshot_location):
        """Sets the snapshot_location of this ScheduledSnapshotsConfig.

        Optional. The Cloud Storage location for storing automatically created snapshots.

        :param snapshot_location: The snapshot_location of this ScheduledSnapshotsConfig.
        :type snapshot_location: str
        """

        self._snapshot_location = snapshot_location

    @property
    def time_zone(self):
        """Gets the time_zone of this ScheduledSnapshotsConfig.

        Optional. Time zone that sets the context to interpret snapshot_creation_schedule.

        :return: The time_zone of this ScheduledSnapshotsConfig.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this ScheduledSnapshotsConfig.

        Optional. Time zone that sets the context to interpret snapshot_creation_schedule.

        :param time_zone: The time_zone of this ScheduledSnapshotsConfig.
        :type time_zone: str
        """

        self._time_zone = time_zone
