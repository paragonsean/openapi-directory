# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.allowed_ip_range import AllowedIpRange
from openapi_server import util


class WebServerNetworkAccessControl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_ip_ranges: List[AllowedIpRange]=None):
        """WebServerNetworkAccessControl - a model defined in OpenAPI

        :param allowed_ip_ranges: The allowed_ip_ranges of this WebServerNetworkAccessControl.
        """
        self.openapi_types = {
            'allowed_ip_ranges': List[AllowedIpRange]
        }

        self.attribute_map = {
            'allowed_ip_ranges': 'allowedIpRanges'
        }

        self._allowed_ip_ranges = allowed_ip_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebServerNetworkAccessControl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebServerNetworkAccessControl of this WebServerNetworkAccessControl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_ip_ranges(self):
        """Gets the allowed_ip_ranges of this WebServerNetworkAccessControl.

        A collection of allowed IP ranges with descriptions.

        :return: The allowed_ip_ranges of this WebServerNetworkAccessControl.
        :rtype: List[AllowedIpRange]
        """
        return self._allowed_ip_ranges

    @allowed_ip_ranges.setter
    def allowed_ip_ranges(self, allowed_ip_ranges):
        """Sets the allowed_ip_ranges of this WebServerNetworkAccessControl.

        A collection of allowed IP ranges with descriptions.

        :param allowed_ip_ranges: The allowed_ip_ranges of this WebServerNetworkAccessControl.
        :type allowed_ip_ranges: List[AllowedIpRange]
        """

        self._allowed_ip_ranges = allowed_ip_ranges
