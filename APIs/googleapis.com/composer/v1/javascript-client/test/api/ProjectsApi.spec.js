/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudComposerApi);
  }
}(this, function(expect, CloudComposerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudComposerApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('composerProjectsLocationsEnvironmentsCreate', function() {
      it('should call composerProjectsLocationsEnvironmentsCreate successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsCreate
        //instance.composerProjectsLocationsEnvironmentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsDatabaseFailover', function() {
      it('should call composerProjectsLocationsEnvironmentsDatabaseFailover successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsDatabaseFailover
        //instance.composerProjectsLocationsEnvironmentsDatabaseFailover(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsExecuteAirflowCommand', function() {
      it('should call composerProjectsLocationsEnvironmentsExecuteAirflowCommand successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsExecuteAirflowCommand
        //instance.composerProjectsLocationsEnvironmentsExecuteAirflowCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsFetchDatabaseProperties', function() {
      it('should call composerProjectsLocationsEnvironmentsFetchDatabaseProperties successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsFetchDatabaseProperties
        //instance.composerProjectsLocationsEnvironmentsFetchDatabaseProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsList', function() {
      it('should call composerProjectsLocationsEnvironmentsList successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsList
        //instance.composerProjectsLocationsEnvironmentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsLoadSnapshot', function() {
      it('should call composerProjectsLocationsEnvironmentsLoadSnapshot successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsLoadSnapshot
        //instance.composerProjectsLocationsEnvironmentsLoadSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsPatch', function() {
      it('should call composerProjectsLocationsEnvironmentsPatch successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsPatch
        //instance.composerProjectsLocationsEnvironmentsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsPollAirflowCommand', function() {
      it('should call composerProjectsLocationsEnvironmentsPollAirflowCommand successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsPollAirflowCommand
        //instance.composerProjectsLocationsEnvironmentsPollAirflowCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsSaveSnapshot', function() {
      it('should call composerProjectsLocationsEnvironmentsSaveSnapshot successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsSaveSnapshot
        //instance.composerProjectsLocationsEnvironmentsSaveSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsStopAirflowCommand', function() {
      it('should call composerProjectsLocationsEnvironmentsStopAirflowCommand successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsStopAirflowCommand
        //instance.composerProjectsLocationsEnvironmentsStopAirflowCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsCreate', function() {
      it('should call composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsCreate successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsCreate
        //instance.composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsList', function() {
      it('should call composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsList successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsList
        //instance.composerProjectsLocationsEnvironmentsUserWorkloadsConfigMapsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsUserWorkloadsSecretsCreate', function() {
      it('should call composerProjectsLocationsEnvironmentsUserWorkloadsSecretsCreate successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsUserWorkloadsSecretsCreate
        //instance.composerProjectsLocationsEnvironmentsUserWorkloadsSecretsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsUserWorkloadsSecretsList', function() {
      it('should call composerProjectsLocationsEnvironmentsUserWorkloadsSecretsList successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsUserWorkloadsSecretsList
        //instance.composerProjectsLocationsEnvironmentsUserWorkloadsSecretsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsUserWorkloadsSecretsUpdate', function() {
      it('should call composerProjectsLocationsEnvironmentsUserWorkloadsSecretsUpdate successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsUserWorkloadsSecretsUpdate
        //instance.composerProjectsLocationsEnvironmentsUserWorkloadsSecretsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsEnvironmentsWorkloadsList', function() {
      it('should call composerProjectsLocationsEnvironmentsWorkloadsList successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsEnvironmentsWorkloadsList
        //instance.composerProjectsLocationsEnvironmentsWorkloadsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsImageVersionsList', function() {
      it('should call composerProjectsLocationsImageVersionsList successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsImageVersionsList
        //instance.composerProjectsLocationsImageVersionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsOperationsDelete', function() {
      it('should call composerProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsOperationsDelete
        //instance.composerProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsOperationsGet', function() {
      it('should call composerProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsOperationsGet
        //instance.composerProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('composerProjectsLocationsOperationsList', function() {
      it('should call composerProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test composerProjectsLocationsOperationsList
        //instance.composerProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
