/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExitInfo from './ExitInfo';
import Line from './Line';

/**
 * The PollAirflowCommandResponse model module.
 * @module model/PollAirflowCommandResponse
 * @version v1
 */
class PollAirflowCommandResponse {
    /**
     * Constructs a new <code>PollAirflowCommandResponse</code>.
     * Response to PollAirflowCommandRequest.
     * @alias module:model/PollAirflowCommandResponse
     */
    constructor() { 
        
        PollAirflowCommandResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PollAirflowCommandResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PollAirflowCommandResponse} obj Optional instance to populate.
     * @return {module:model/PollAirflowCommandResponse} The populated <code>PollAirflowCommandResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PollAirflowCommandResponse();

            if (data.hasOwnProperty('exitInfo')) {
                obj['exitInfo'] = ExitInfo.constructFromObject(data['exitInfo']);
            }
            if (data.hasOwnProperty('output')) {
                obj['output'] = ApiClient.convertToType(data['output'], [Line]);
            }
            if (data.hasOwnProperty('outputEnd')) {
                obj['outputEnd'] = ApiClient.convertToType(data['outputEnd'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PollAirflowCommandResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PollAirflowCommandResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `exitInfo`
        if (data['exitInfo']) { // data not null
          ExitInfo.validateJSON(data['exitInfo']);
        }
        if (data['output']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['output'])) {
                throw new Error("Expected the field `output` to be an array in the JSON data but got " + data['output']);
            }
            // validate the optional field `output` (array)
            for (const item of data['output']) {
                Line.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ExitInfo} exitInfo
 */
PollAirflowCommandResponse.prototype['exitInfo'] = undefined;

/**
 * Output from the command execution. It may not contain the full output and the caller may need to poll for more lines.
 * @member {Array.<module:model/Line>} output
 */
PollAirflowCommandResponse.prototype['output'] = undefined;

/**
 * Whether the command execution has finished and there is no more output.
 * @member {Boolean} outputEnd
 */
PollAirflowCommandResponse.prototype['outputEnd'] = undefined;






export default PollAirflowCommandResponse;

