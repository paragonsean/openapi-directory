/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateEnvironmentConfig.h
 *
 * The configuration information for configuring a Private IP Cloud Composer environment.
 */

#ifndef OAIPrivateEnvironmentConfig_H
#define OAIPrivateEnvironmentConfig_H

#include <QJsonObject>

#include "OAINetworkingConfig.h"
#include "OAIPrivateClusterConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetworkingConfig;
class OAIPrivateClusterConfig;

class OAIPrivateEnvironmentConfig : public OAIObject {
public:
    OAIPrivateEnvironmentConfig();
    OAIPrivateEnvironmentConfig(QString json);
    ~OAIPrivateEnvironmentConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCloudComposerConnectionSubnetwork() const;
    void setCloudComposerConnectionSubnetwork(const QString &cloud_composer_connection_subnetwork);
    bool is_cloud_composer_connection_subnetwork_Set() const;
    bool is_cloud_composer_connection_subnetwork_Valid() const;

    QString getCloudComposerNetworkIpv4CidrBlock() const;
    void setCloudComposerNetworkIpv4CidrBlock(const QString &cloud_composer_network_ipv4_cidr_block);
    bool is_cloud_composer_network_ipv4_cidr_block_Set() const;
    bool is_cloud_composer_network_ipv4_cidr_block_Valid() const;

    QString getCloudComposerNetworkIpv4ReservedRange() const;
    void setCloudComposerNetworkIpv4ReservedRange(const QString &cloud_composer_network_ipv4_reserved_range);
    bool is_cloud_composer_network_ipv4_reserved_range_Set() const;
    bool is_cloud_composer_network_ipv4_reserved_range_Valid() const;

    QString getCloudSqlIpv4CidrBlock() const;
    void setCloudSqlIpv4CidrBlock(const QString &cloud_sql_ipv4_cidr_block);
    bool is_cloud_sql_ipv4_cidr_block_Set() const;
    bool is_cloud_sql_ipv4_cidr_block_Valid() const;

    bool isEnablePrivateBuildsOnly() const;
    void setEnablePrivateBuildsOnly(const bool &enable_private_builds_only);
    bool is_enable_private_builds_only_Set() const;
    bool is_enable_private_builds_only_Valid() const;

    bool isEnablePrivateEnvironment() const;
    void setEnablePrivateEnvironment(const bool &enable_private_environment);
    bool is_enable_private_environment_Set() const;
    bool is_enable_private_environment_Valid() const;

    bool isEnablePrivatelyUsedPublicIps() const;
    void setEnablePrivatelyUsedPublicIps(const bool &enable_privately_used_public_ips);
    bool is_enable_privately_used_public_ips_Set() const;
    bool is_enable_privately_used_public_ips_Valid() const;

    OAINetworkingConfig getNetworkingConfig() const;
    void setNetworkingConfig(const OAINetworkingConfig &networking_config);
    bool is_networking_config_Set() const;
    bool is_networking_config_Valid() const;

    OAIPrivateClusterConfig getPrivateClusterConfig() const;
    void setPrivateClusterConfig(const OAIPrivateClusterConfig &private_cluster_config);
    bool is_private_cluster_config_Set() const;
    bool is_private_cluster_config_Valid() const;

    QString getWebServerIpv4CidrBlock() const;
    void setWebServerIpv4CidrBlock(const QString &web_server_ipv4_cidr_block);
    bool is_web_server_ipv4_cidr_block_Set() const;
    bool is_web_server_ipv4_cidr_block_Valid() const;

    QString getWebServerIpv4ReservedRange() const;
    void setWebServerIpv4ReservedRange(const QString &web_server_ipv4_reserved_range);
    bool is_web_server_ipv4_reserved_range_Set() const;
    bool is_web_server_ipv4_reserved_range_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cloud_composer_connection_subnetwork;
    bool m_cloud_composer_connection_subnetwork_isSet;
    bool m_cloud_composer_connection_subnetwork_isValid;

    QString m_cloud_composer_network_ipv4_cidr_block;
    bool m_cloud_composer_network_ipv4_cidr_block_isSet;
    bool m_cloud_composer_network_ipv4_cidr_block_isValid;

    QString m_cloud_composer_network_ipv4_reserved_range;
    bool m_cloud_composer_network_ipv4_reserved_range_isSet;
    bool m_cloud_composer_network_ipv4_reserved_range_isValid;

    QString m_cloud_sql_ipv4_cidr_block;
    bool m_cloud_sql_ipv4_cidr_block_isSet;
    bool m_cloud_sql_ipv4_cidr_block_isValid;

    bool m_enable_private_builds_only;
    bool m_enable_private_builds_only_isSet;
    bool m_enable_private_builds_only_isValid;

    bool m_enable_private_environment;
    bool m_enable_private_environment_isSet;
    bool m_enable_private_environment_isValid;

    bool m_enable_privately_used_public_ips;
    bool m_enable_privately_used_public_ips_isSet;
    bool m_enable_privately_used_public_ips_isValid;

    OAINetworkingConfig m_networking_config;
    bool m_networking_config_isSet;
    bool m_networking_config_isValid;

    OAIPrivateClusterConfig m_private_cluster_config;
    bool m_private_cluster_config_isSet;
    bool m_private_cluster_config_isValid;

    QString m_web_server_ipv4_cidr_block;
    bool m_web_server_ipv4_cidr_block_isSet;
    bool m_web_server_ipv4_cidr_block_isValid;

    QString m_web_server_ipv4_reserved_range;
    bool m_web_server_ipv4_reserved_range_isSet;
    bool m_web_server_ipv4_reserved_range_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateEnvironmentConfig)

#endif // OAIPrivateEnvironmentConfig_H
