/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataRetentionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataRetentionConfig::OAIDataRetentionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataRetentionConfig::OAIDataRetentionConfig() {
    this->initializeModel();
}

OAIDataRetentionConfig::~OAIDataRetentionConfig() {}

void OAIDataRetentionConfig::initializeModel() {

    m_task_logs_retention_config_isSet = false;
    m_task_logs_retention_config_isValid = false;
}

void OAIDataRetentionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataRetentionConfig::fromJsonObject(QJsonObject json) {

    m_task_logs_retention_config_isValid = ::OpenAPI::fromJsonValue(m_task_logs_retention_config, json[QString("taskLogsRetentionConfig")]);
    m_task_logs_retention_config_isSet = !json[QString("taskLogsRetentionConfig")].isNull() && m_task_logs_retention_config_isValid;
}

QString OAIDataRetentionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataRetentionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_task_logs_retention_config.isSet()) {
        obj.insert(QString("taskLogsRetentionConfig"), ::OpenAPI::toJsonValue(m_task_logs_retention_config));
    }
    return obj;
}

OAITaskLogsRetentionConfig OAIDataRetentionConfig::getTaskLogsRetentionConfig() const {
    return m_task_logs_retention_config;
}
void OAIDataRetentionConfig::setTaskLogsRetentionConfig(const OAITaskLogsRetentionConfig &task_logs_retention_config) {
    m_task_logs_retention_config = task_logs_retention_config;
    m_task_logs_retention_config_isSet = true;
}

bool OAIDataRetentionConfig::is_task_logs_retention_config_Set() const{
    return m_task_logs_retention_config_isSet;
}

bool OAIDataRetentionConfig::is_task_logs_retention_config_Valid() const{
    return m_task_logs_retention_config_isValid;
}

bool OAIDataRetentionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_logs_retention_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataRetentionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
