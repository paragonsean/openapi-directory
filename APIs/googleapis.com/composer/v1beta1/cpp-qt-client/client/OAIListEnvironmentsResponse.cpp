/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListEnvironmentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListEnvironmentsResponse::OAIListEnvironmentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListEnvironmentsResponse::OAIListEnvironmentsResponse() {
    this->initializeModel();
}

OAIListEnvironmentsResponse::~OAIListEnvironmentsResponse() {}

void OAIListEnvironmentsResponse::initializeModel() {

    m_environments_isSet = false;
    m_environments_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListEnvironmentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListEnvironmentsResponse::fromJsonObject(QJsonObject json) {

    m_environments_isValid = ::OpenAPI::fromJsonValue(m_environments, json[QString("environments")]);
    m_environments_isSet = !json[QString("environments")].isNull() && m_environments_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListEnvironmentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListEnvironmentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_environments.size() > 0) {
        obj.insert(QString("environments"), ::OpenAPI::toJsonValue(m_environments));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList<OAIEnvironment> OAIListEnvironmentsResponse::getEnvironments() const {
    return m_environments;
}
void OAIListEnvironmentsResponse::setEnvironments(const QList<OAIEnvironment> &environments) {
    m_environments = environments;
    m_environments_isSet = true;
}

bool OAIListEnvironmentsResponse::is_environments_Set() const{
    return m_environments_isSet;
}

bool OAIListEnvironmentsResponse::is_environments_Valid() const{
    return m_environments_isValid;
}

QString OAIListEnvironmentsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListEnvironmentsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListEnvironmentsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListEnvironmentsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListEnvironmentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListEnvironmentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
