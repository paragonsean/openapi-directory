/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPollAirflowCommandRequest.h
 *
 * Poll Airflow Command request.
 */

#ifndef OAIPollAirflowCommandRequest_H
#define OAIPollAirflowCommandRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPollAirflowCommandRequest : public OAIObject {
public:
    OAIPollAirflowCommandRequest();
    OAIPollAirflowCommandRequest(QString json);
    ~OAIPollAirflowCommandRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExecutionId() const;
    void setExecutionId(const QString &execution_id);
    bool is_execution_id_Set() const;
    bool is_execution_id_Valid() const;

    qint32 getNextLineNumber() const;
    void setNextLineNumber(const qint32 &next_line_number);
    bool is_next_line_number_Set() const;
    bool is_next_line_number_Valid() const;

    QString getPod() const;
    void setPod(const QString &pod);
    bool is_pod_Set() const;
    bool is_pod_Valid() const;

    QString getPodNamespace() const;
    void setPodNamespace(const QString &pod_namespace);
    bool is_pod_namespace_Set() const;
    bool is_pod_namespace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_execution_id;
    bool m_execution_id_isSet;
    bool m_execution_id_isValid;

    qint32 m_next_line_number;
    bool m_next_line_number_isSet;
    bool m_next_line_number_isValid;

    QString m_pod;
    bool m_pod_isSet;
    bool m_pod_isValid;

    QString m_pod_namespace;
    bool m_pod_namespace_isSet;
    bool m_pod_namespace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPollAirflowCommandRequest)

#endif // OAIPollAirflowCommandRequest_H
