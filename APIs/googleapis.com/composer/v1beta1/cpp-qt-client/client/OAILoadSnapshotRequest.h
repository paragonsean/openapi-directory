/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoadSnapshotRequest.h
 *
 * Request to load a snapshot into a Cloud Composer environment.
 */

#ifndef OAILoadSnapshotRequest_H
#define OAILoadSnapshotRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoadSnapshotRequest : public OAIObject {
public:
    OAILoadSnapshotRequest();
    OAILoadSnapshotRequest(QString json);
    ~OAILoadSnapshotRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isSkipAirflowOverridesSetting() const;
    void setSkipAirflowOverridesSetting(const bool &skip_airflow_overrides_setting);
    bool is_skip_airflow_overrides_setting_Set() const;
    bool is_skip_airflow_overrides_setting_Valid() const;

    bool isSkipEnvironmentVariablesSetting() const;
    void setSkipEnvironmentVariablesSetting(const bool &skip_environment_variables_setting);
    bool is_skip_environment_variables_setting_Set() const;
    bool is_skip_environment_variables_setting_Valid() const;

    bool isSkipGcsDataCopying() const;
    void setSkipGcsDataCopying(const bool &skip_gcs_data_copying);
    bool is_skip_gcs_data_copying_Set() const;
    bool is_skip_gcs_data_copying_Valid() const;

    bool isSkipPypiPackagesInstallation() const;
    void setSkipPypiPackagesInstallation(const bool &skip_pypi_packages_installation);
    bool is_skip_pypi_packages_installation_Set() const;
    bool is_skip_pypi_packages_installation_Valid() const;

    QString getSnapshotPath() const;
    void setSnapshotPath(const QString &snapshot_path);
    bool is_snapshot_path_Set() const;
    bool is_snapshot_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_skip_airflow_overrides_setting;
    bool m_skip_airflow_overrides_setting_isSet;
    bool m_skip_airflow_overrides_setting_isValid;

    bool m_skip_environment_variables_setting;
    bool m_skip_environment_variables_setting_isSet;
    bool m_skip_environment_variables_setting_isValid;

    bool m_skip_gcs_data_copying;
    bool m_skip_gcs_data_copying_isSet;
    bool m_skip_gcs_data_copying_isValid;

    bool m_skip_pypi_packages_installation;
    bool m_skip_pypi_packages_installation_isSet;
    bool m_skip_pypi_packages_installation_isValid;

    QString m_snapshot_path;
    bool m_snapshot_path_isSet;
    bool m_snapshot_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoadSnapshotRequest)

#endif // OAILoadSnapshotRequest_H
