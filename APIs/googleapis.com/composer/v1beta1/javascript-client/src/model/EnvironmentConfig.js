/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataRetentionConfig from './DataRetentionConfig';
import DatabaseConfig from './DatabaseConfig';
import EncryptionConfig from './EncryptionConfig';
import MaintenanceWindow from './MaintenanceWindow';
import MasterAuthorizedNetworksConfig from './MasterAuthorizedNetworksConfig';
import NodeConfig from './NodeConfig';
import PrivateEnvironmentConfig from './PrivateEnvironmentConfig';
import RecoveryConfig from './RecoveryConfig';
import SoftwareConfig from './SoftwareConfig';
import WebServerConfig from './WebServerConfig';
import WebServerNetworkAccessControl from './WebServerNetworkAccessControl';
import WorkloadsConfig from './WorkloadsConfig';

/**
 * The EnvironmentConfig model module.
 * @module model/EnvironmentConfig
 * @version v1beta1
 */
class EnvironmentConfig {
    /**
     * Constructs a new <code>EnvironmentConfig</code>.
     * Configuration information for an environment.
     * @alias module:model/EnvironmentConfig
     */
    constructor() { 
        
        EnvironmentConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnvironmentConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentConfig} obj Optional instance to populate.
     * @return {module:model/EnvironmentConfig} The populated <code>EnvironmentConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentConfig();

            if (data.hasOwnProperty('airflowByoidUri')) {
                obj['airflowByoidUri'] = ApiClient.convertToType(data['airflowByoidUri'], 'String');
            }
            if (data.hasOwnProperty('airflowUri')) {
                obj['airflowUri'] = ApiClient.convertToType(data['airflowUri'], 'String');
            }
            if (data.hasOwnProperty('dagGcsPrefix')) {
                obj['dagGcsPrefix'] = ApiClient.convertToType(data['dagGcsPrefix'], 'String');
            }
            if (data.hasOwnProperty('dataRetentionConfig')) {
                obj['dataRetentionConfig'] = DataRetentionConfig.constructFromObject(data['dataRetentionConfig']);
            }
            if (data.hasOwnProperty('databaseConfig')) {
                obj['databaseConfig'] = DatabaseConfig.constructFromObject(data['databaseConfig']);
            }
            if (data.hasOwnProperty('encryptionConfig')) {
                obj['encryptionConfig'] = EncryptionConfig.constructFromObject(data['encryptionConfig']);
            }
            if (data.hasOwnProperty('environmentSize')) {
                obj['environmentSize'] = ApiClient.convertToType(data['environmentSize'], 'String');
            }
            if (data.hasOwnProperty('gkeCluster')) {
                obj['gkeCluster'] = ApiClient.convertToType(data['gkeCluster'], 'String');
            }
            if (data.hasOwnProperty('maintenanceWindow')) {
                obj['maintenanceWindow'] = MaintenanceWindow.constructFromObject(data['maintenanceWindow']);
            }
            if (data.hasOwnProperty('masterAuthorizedNetworksConfig')) {
                obj['masterAuthorizedNetworksConfig'] = MasterAuthorizedNetworksConfig.constructFromObject(data['masterAuthorizedNetworksConfig']);
            }
            if (data.hasOwnProperty('nodeConfig')) {
                obj['nodeConfig'] = NodeConfig.constructFromObject(data['nodeConfig']);
            }
            if (data.hasOwnProperty('nodeCount')) {
                obj['nodeCount'] = ApiClient.convertToType(data['nodeCount'], 'Number');
            }
            if (data.hasOwnProperty('privateEnvironmentConfig')) {
                obj['privateEnvironmentConfig'] = PrivateEnvironmentConfig.constructFromObject(data['privateEnvironmentConfig']);
            }
            if (data.hasOwnProperty('recoveryConfig')) {
                obj['recoveryConfig'] = RecoveryConfig.constructFromObject(data['recoveryConfig']);
            }
            if (data.hasOwnProperty('resilienceMode')) {
                obj['resilienceMode'] = ApiClient.convertToType(data['resilienceMode'], 'String');
            }
            if (data.hasOwnProperty('softwareConfig')) {
                obj['softwareConfig'] = SoftwareConfig.constructFromObject(data['softwareConfig']);
            }
            if (data.hasOwnProperty('webServerConfig')) {
                obj['webServerConfig'] = WebServerConfig.constructFromObject(data['webServerConfig']);
            }
            if (data.hasOwnProperty('webServerNetworkAccessControl')) {
                obj['webServerNetworkAccessControl'] = WebServerNetworkAccessControl.constructFromObject(data['webServerNetworkAccessControl']);
            }
            if (data.hasOwnProperty('workloadsConfig')) {
                obj['workloadsConfig'] = WorkloadsConfig.constructFromObject(data['workloadsConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['airflowByoidUri'] && !(typeof data['airflowByoidUri'] === 'string' || data['airflowByoidUri'] instanceof String)) {
            throw new Error("Expected the field `airflowByoidUri` to be a primitive type in the JSON string but got " + data['airflowByoidUri']);
        }
        // ensure the json data is a string
        if (data['airflowUri'] && !(typeof data['airflowUri'] === 'string' || data['airflowUri'] instanceof String)) {
            throw new Error("Expected the field `airflowUri` to be a primitive type in the JSON string but got " + data['airflowUri']);
        }
        // ensure the json data is a string
        if (data['dagGcsPrefix'] && !(typeof data['dagGcsPrefix'] === 'string' || data['dagGcsPrefix'] instanceof String)) {
            throw new Error("Expected the field `dagGcsPrefix` to be a primitive type in the JSON string but got " + data['dagGcsPrefix']);
        }
        // validate the optional field `dataRetentionConfig`
        if (data['dataRetentionConfig']) { // data not null
          DataRetentionConfig.validateJSON(data['dataRetentionConfig']);
        }
        // validate the optional field `databaseConfig`
        if (data['databaseConfig']) { // data not null
          DatabaseConfig.validateJSON(data['databaseConfig']);
        }
        // validate the optional field `encryptionConfig`
        if (data['encryptionConfig']) { // data not null
          EncryptionConfig.validateJSON(data['encryptionConfig']);
        }
        // ensure the json data is a string
        if (data['environmentSize'] && !(typeof data['environmentSize'] === 'string' || data['environmentSize'] instanceof String)) {
            throw new Error("Expected the field `environmentSize` to be a primitive type in the JSON string but got " + data['environmentSize']);
        }
        // ensure the json data is a string
        if (data['gkeCluster'] && !(typeof data['gkeCluster'] === 'string' || data['gkeCluster'] instanceof String)) {
            throw new Error("Expected the field `gkeCluster` to be a primitive type in the JSON string but got " + data['gkeCluster']);
        }
        // validate the optional field `maintenanceWindow`
        if (data['maintenanceWindow']) { // data not null
          MaintenanceWindow.validateJSON(data['maintenanceWindow']);
        }
        // validate the optional field `masterAuthorizedNetworksConfig`
        if (data['masterAuthorizedNetworksConfig']) { // data not null
          MasterAuthorizedNetworksConfig.validateJSON(data['masterAuthorizedNetworksConfig']);
        }
        // validate the optional field `nodeConfig`
        if (data['nodeConfig']) { // data not null
          NodeConfig.validateJSON(data['nodeConfig']);
        }
        // validate the optional field `privateEnvironmentConfig`
        if (data['privateEnvironmentConfig']) { // data not null
          PrivateEnvironmentConfig.validateJSON(data['privateEnvironmentConfig']);
        }
        // validate the optional field `recoveryConfig`
        if (data['recoveryConfig']) { // data not null
          RecoveryConfig.validateJSON(data['recoveryConfig']);
        }
        // ensure the json data is a string
        if (data['resilienceMode'] && !(typeof data['resilienceMode'] === 'string' || data['resilienceMode'] instanceof String)) {
            throw new Error("Expected the field `resilienceMode` to be a primitive type in the JSON string but got " + data['resilienceMode']);
        }
        // validate the optional field `softwareConfig`
        if (data['softwareConfig']) { // data not null
          SoftwareConfig.validateJSON(data['softwareConfig']);
        }
        // validate the optional field `webServerConfig`
        if (data['webServerConfig']) { // data not null
          WebServerConfig.validateJSON(data['webServerConfig']);
        }
        // validate the optional field `webServerNetworkAccessControl`
        if (data['webServerNetworkAccessControl']) { // data not null
          WebServerNetworkAccessControl.validateJSON(data['webServerNetworkAccessControl']);
        }
        // validate the optional field `workloadsConfig`
        if (data['workloadsConfig']) { // data not null
          WorkloadsConfig.validateJSON(data['workloadsConfig']);
        }

        return true;
    }


}



/**
 * Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see [Access environments with workforce identity federation](/composer/docs/composer-2/access-environments-with-workforce-identity-federation)).
 * @member {String} airflowByoidUri
 */
EnvironmentConfig.prototype['airflowByoidUri'] = undefined;

/**
 * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow web interface](/composer/docs/how-to/accessing/airflow-web-interface)).
 * @member {String} airflowUri
 */
EnvironmentConfig.prototype['airflowUri'] = undefined;

/**
 * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \"/\"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix.
 * @member {String} dagGcsPrefix
 */
EnvironmentConfig.prototype['dagGcsPrefix'] = undefined;

/**
 * @member {module:model/DataRetentionConfig} dataRetentionConfig
 */
EnvironmentConfig.prototype['dataRetentionConfig'] = undefined;

/**
 * @member {module:model/DatabaseConfig} databaseConfig
 */
EnvironmentConfig.prototype['databaseConfig'] = undefined;

/**
 * @member {module:model/EncryptionConfig} encryptionConfig
 */
EnvironmentConfig.prototype['encryptionConfig'] = undefined;

/**
 * Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
 * @member {module:model/EnvironmentConfig.EnvironmentSizeEnum} environmentSize
 */
EnvironmentConfig.prototype['environmentSize'] = undefined;

/**
 * Output only. The Kubernetes Engine cluster used to run this environment.
 * @member {String} gkeCluster
 */
EnvironmentConfig.prototype['gkeCluster'] = undefined;

/**
 * @member {module:model/MaintenanceWindow} maintenanceWindow
 */
EnvironmentConfig.prototype['maintenanceWindow'] = undefined;

/**
 * @member {module:model/MasterAuthorizedNetworksConfig} masterAuthorizedNetworksConfig
 */
EnvironmentConfig.prototype['masterAuthorizedNetworksConfig'] = undefined;

/**
 * @member {module:model/NodeConfig} nodeConfig
 */
EnvironmentConfig.prototype['nodeConfig'] = undefined;

/**
 * The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
 * @member {Number} nodeCount
 */
EnvironmentConfig.prototype['nodeCount'] = undefined;

/**
 * @member {module:model/PrivateEnvironmentConfig} privateEnvironmentConfig
 */
EnvironmentConfig.prototype['privateEnvironmentConfig'] = undefined;

/**
 * @member {module:model/RecoveryConfig} recoveryConfig
 */
EnvironmentConfig.prototype['recoveryConfig'] = undefined;

/**
 * Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow-*.*.* and newer.
 * @member {module:model/EnvironmentConfig.ResilienceModeEnum} resilienceMode
 */
EnvironmentConfig.prototype['resilienceMode'] = undefined;

/**
 * @member {module:model/SoftwareConfig} softwareConfig
 */
EnvironmentConfig.prototype['softwareConfig'] = undefined;

/**
 * @member {module:model/WebServerConfig} webServerConfig
 */
EnvironmentConfig.prototype['webServerConfig'] = undefined;

/**
 * @member {module:model/WebServerNetworkAccessControl} webServerNetworkAccessControl
 */
EnvironmentConfig.prototype['webServerNetworkAccessControl'] = undefined;

/**
 * @member {module:model/WorkloadsConfig} workloadsConfig
 */
EnvironmentConfig.prototype['workloadsConfig'] = undefined;





/**
 * Allowed values for the <code>environmentSize</code> property.
 * @enum {String}
 * @readonly
 */
EnvironmentConfig['EnvironmentSizeEnum'] = {

    /**
     * value: "ENVIRONMENT_SIZE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ENVIRONMENT_SIZE_UNSPECIFIED",

    /**
     * value: "ENVIRONMENT_SIZE_SMALL"
     * @const
     */
    "SMALL": "ENVIRONMENT_SIZE_SMALL",

    /**
     * value: "ENVIRONMENT_SIZE_MEDIUM"
     * @const
     */
    "MEDIUM": "ENVIRONMENT_SIZE_MEDIUM",

    /**
     * value: "ENVIRONMENT_SIZE_LARGE"
     * @const
     */
    "LARGE": "ENVIRONMENT_SIZE_LARGE"
};


/**
 * Allowed values for the <code>resilienceMode</code> property.
 * @enum {String}
 * @readonly
 */
EnvironmentConfig['ResilienceModeEnum'] = {

    /**
     * value: "RESILIENCE_MODE_UNSPECIFIED"
     * @const
     */
    "RESILIENCE_MODE_UNSPECIFIED": "RESILIENCE_MODE_UNSPECIFIED",

    /**
     * value: "HIGH_RESILIENCE"
     * @const
     */
    "HIGH_RESILIENCE": "HIGH_RESILIENCE"
};



export default EnvironmentConfig;

