/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ComposerWorkloadStatus model module.
 * @module model/ComposerWorkloadStatus
 * @version v1beta1
 */
class ComposerWorkloadStatus {
    /**
     * Constructs a new <code>ComposerWorkloadStatus</code>.
     * Workload status.
     * @alias module:model/ComposerWorkloadStatus
     */
    constructor() { 
        
        ComposerWorkloadStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ComposerWorkloadStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComposerWorkloadStatus} obj Optional instance to populate.
     * @return {module:model/ComposerWorkloadStatus} The populated <code>ComposerWorkloadStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComposerWorkloadStatus();

            if (data.hasOwnProperty('detailedStatusMessage')) {
                obj['detailedStatusMessage'] = ApiClient.convertToType(data['detailedStatusMessage'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ComposerWorkloadStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ComposerWorkloadStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['detailedStatusMessage'] && !(typeof data['detailedStatusMessage'] === 'string' || data['detailedStatusMessage'] instanceof String)) {
            throw new Error("Expected the field `detailedStatusMessage` to be a primitive type in the JSON string but got " + data['detailedStatusMessage']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['statusMessage'] && !(typeof data['statusMessage'] === 'string' || data['statusMessage'] instanceof String)) {
            throw new Error("Expected the field `statusMessage` to be a primitive type in the JSON string but got " + data['statusMessage']);
        }

        return true;
    }


}



/**
 * Output only. Detailed message of the status.
 * @member {String} detailedStatusMessage
 */
ComposerWorkloadStatus.prototype['detailedStatusMessage'] = undefined;

/**
 * Output only. Workload state.
 * @member {module:model/ComposerWorkloadStatus.StateEnum} state
 */
ComposerWorkloadStatus.prototype['state'] = undefined;

/**
 * Output only. Text to provide more descriptive status.
 * @member {String} statusMessage
 */
ComposerWorkloadStatus.prototype['statusMessage'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ComposerWorkloadStatus['StateEnum'] = {

    /**
     * value: "COMPOSER_WORKLOAD_STATE_UNSPECIFIED"
     * @const
     */
    "COMPOSER_WORKLOAD_STATE_UNSPECIFIED": "COMPOSER_WORKLOAD_STATE_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default ComposerWorkloadStatus;

