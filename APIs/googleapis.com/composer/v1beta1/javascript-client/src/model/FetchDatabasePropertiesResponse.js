/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FetchDatabasePropertiesResponse model module.
 * @module model/FetchDatabasePropertiesResponse
 * @version v1beta1
 */
class FetchDatabasePropertiesResponse {
    /**
     * Constructs a new <code>FetchDatabasePropertiesResponse</code>.
     * Response for FetchDatabasePropertiesRequest.
     * @alias module:model/FetchDatabasePropertiesResponse
     */
    constructor() { 
        
        FetchDatabasePropertiesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FetchDatabasePropertiesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FetchDatabasePropertiesResponse} obj Optional instance to populate.
     * @return {module:model/FetchDatabasePropertiesResponse} The populated <code>FetchDatabasePropertiesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FetchDatabasePropertiesResponse();

            if (data.hasOwnProperty('isFailoverReplicaAvailable')) {
                obj['isFailoverReplicaAvailable'] = ApiClient.convertToType(data['isFailoverReplicaAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('primaryGceZone')) {
                obj['primaryGceZone'] = ApiClient.convertToType(data['primaryGceZone'], 'String');
            }
            if (data.hasOwnProperty('secondaryGceZone')) {
                obj['secondaryGceZone'] = ApiClient.convertToType(data['secondaryGceZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FetchDatabasePropertiesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FetchDatabasePropertiesResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['primaryGceZone'] && !(typeof data['primaryGceZone'] === 'string' || data['primaryGceZone'] instanceof String)) {
            throw new Error("Expected the field `primaryGceZone` to be a primitive type in the JSON string but got " + data['primaryGceZone']);
        }
        // ensure the json data is a string
        if (data['secondaryGceZone'] && !(typeof data['secondaryGceZone'] === 'string' || data['secondaryGceZone'] instanceof String)) {
            throw new Error("Expected the field `secondaryGceZone` to be a primitive type in the JSON string but got " + data['secondaryGceZone']);
        }

        return true;
    }


}



/**
 * The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only fail over to the failover replica when the status is true.
 * @member {Boolean} isFailoverReplicaAvailable
 */
FetchDatabasePropertiesResponse.prototype['isFailoverReplicaAvailable'] = undefined;

/**
 * The Compute Engine zone that the instance is currently serving from.
 * @member {String} primaryGceZone
 */
FetchDatabasePropertiesResponse.prototype['primaryGceZone'] = undefined;

/**
 * The Compute Engine zone that the failover instance is currently serving from for a regional Cloud SQL instance.
 * @member {String} secondaryGceZone
 */
FetchDatabasePropertiesResponse.prototype['secondaryGceZone'] = undefined;






export default FetchDatabasePropertiesResponse;

