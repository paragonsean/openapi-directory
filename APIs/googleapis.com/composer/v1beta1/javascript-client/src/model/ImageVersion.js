/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';

/**
 * The ImageVersion model module.
 * @module model/ImageVersion
 * @version v1beta1
 */
class ImageVersion {
    /**
     * Constructs a new <code>ImageVersion</code>.
     * Image Version information
     * @alias module:model/ImageVersion
     */
    constructor() { 
        
        ImageVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageVersion} obj Optional instance to populate.
     * @return {module:model/ImageVersion} The populated <code>ImageVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageVersion();

            if (data.hasOwnProperty('creationDisabled')) {
                obj['creationDisabled'] = ApiClient.convertToType(data['creationDisabled'], 'Boolean');
            }
            if (data.hasOwnProperty('imageVersionId')) {
                obj['imageVersionId'] = ApiClient.convertToType(data['imageVersionId'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('releaseDate')) {
                obj['releaseDate'] = ModelDate.constructFromObject(data['releaseDate']);
            }
            if (data.hasOwnProperty('supportedPythonVersions')) {
                obj['supportedPythonVersions'] = ApiClient.convertToType(data['supportedPythonVersions'], ['String']);
            }
            if (data.hasOwnProperty('upgradeDisabled')) {
                obj['upgradeDisabled'] = ApiClient.convertToType(data['upgradeDisabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageVersion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['imageVersionId'] && !(typeof data['imageVersionId'] === 'string' || data['imageVersionId'] instanceof String)) {
            throw new Error("Expected the field `imageVersionId` to be a primitive type in the JSON string but got " + data['imageVersionId']);
        }
        // validate the optional field `releaseDate`
        if (data['releaseDate']) { // data not null
          ModelDate.validateJSON(data['releaseDate']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedPythonVersions'])) {
            throw new Error("Expected the field `supportedPythonVersions` to be an array in the JSON data but got " + data['supportedPythonVersions']);
        }

        return true;
    }


}



/**
 * Whether it is impossible to create an environment with the image version.
 * @member {Boolean} creationDisabled
 */
ImageVersion.prototype['creationDisabled'] = undefined;

/**
 * The string identifier of the ImageVersion, in the form: \"composer-x.y.z-airflow-a.b.c\"
 * @member {String} imageVersionId
 */
ImageVersion.prototype['imageVersionId'] = undefined;

/**
 * Whether this is the default ImageVersion used by Composer during environment creation if no input ImageVersion is specified.
 * @member {Boolean} isDefault
 */
ImageVersion.prototype['isDefault'] = undefined;

/**
 * @member {module:model/ModelDate} releaseDate
 */
ImageVersion.prototype['releaseDate'] = undefined;

/**
 * supported python versions
 * @member {Array.<String>} supportedPythonVersions
 */
ImageVersion.prototype['supportedPythonVersions'] = undefined;

/**
 * Whether it is impossible to upgrade an environment running with the image version.
 * @member {Boolean} upgradeDisabled
 */
ImageVersion.prototype['upgradeDisabled'] = undefined;






export default ImageVersion;

