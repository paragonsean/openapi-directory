/**
 * Cloud Composer API
 * Manages Apache Airflow environments on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MaintenanceWindow model module.
 * @module model/MaintenanceWindow
 * @version v1beta1
 */
class MaintenanceWindow {
    /**
     * Constructs a new <code>MaintenanceWindow</code>.
     * The configuration settings for Cloud Composer maintenance window. The following example: &#x60;&#x60;&#x60; { \&quot;startTime\&quot;:\&quot;2019-08-01T01:00:00Z\&quot; \&quot;endTime\&quot;:\&quot;2019-08-01T07:00:00Z\&quot; \&quot;recurrence\&quot;:\&quot;FREQ&#x3D;WEEKLY;BYDAY&#x3D;TU,WE\&quot; } &#x60;&#x60;&#x60; would define a maintenance window between 01 and 07 hours UTC during each Tuesday and Wednesday.
     * @alias module:model/MaintenanceWindow
     */
    constructor() { 
        
        MaintenanceWindow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaintenanceWindow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaintenanceWindow} obj Optional instance to populate.
     * @return {module:model/MaintenanceWindow} The populated <code>MaintenanceWindow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaintenanceWindow();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('recurrence')) {
                obj['recurrence'] = ApiClient.convertToType(data['recurrence'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaintenanceWindow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaintenanceWindow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['recurrence'] && !(typeof data['recurrence'] === 'string' || data['recurrence'] instanceof String)) {
            throw new Error("Expected the field `recurrence` to be a primitive type in the JSON string but got " + data['recurrence']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end_time must be in the future, relative to `start_time`.
 * @member {String} endTime
 */
MaintenanceWindow.prototype['endTime'] = undefined;

/**
 * Required. Maintenance window recurrence. Format is a subset of [RFC-5545](https://tools.ietf.org/html/rfc5545) `RRULE`. The only allowed values for `FREQ` field are `FREQ=DAILY` and `FREQ=WEEKLY;BYDAY=...` Example values: `FREQ=WEEKLY;BYDAY=TU,WE`, `FREQ=DAILY`.
 * @member {String} recurrence
 */
MaintenanceWindow.prototype['recurrence'] = undefined;

/**
 * Required. Start time of the first recurrence of the maintenance window.
 * @member {String} startTime
 */
MaintenanceWindow.prototype['startTime'] = undefined;






export default MaintenanceWindow;

