# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExitInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: str=None, exit_code: int=None):
        """ExitInfo - a model defined in OpenAPI

        :param error: The error of this ExitInfo.
        :param exit_code: The exit_code of this ExitInfo.
        """
        self.openapi_types = {
            'error': str,
            'exit_code': int
        }

        self.attribute_map = {
            'error': 'error',
            'exit_code': 'exitCode'
        }

        self._error = error
        self._exit_code = exit_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExitInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExitInfo of this ExitInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this ExitInfo.

        Error message. Empty if there was no error.

        :return: The error of this ExitInfo.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ExitInfo.

        Error message. Empty if there was no error.

        :param error: The error of this ExitInfo.
        :type error: str
        """

        self._error = error

    @property
    def exit_code(self):
        """Gets the exit_code of this ExitInfo.

        The exit code from the command execution.

        :return: The exit_code of this ExitInfo.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """Sets the exit_code of this ExitInfo.

        The exit code from the command execution.

        :param exit_code: The exit_code of this ExitInfo.
        :type exit_code: int
        """

        self._exit_code = exit_code
