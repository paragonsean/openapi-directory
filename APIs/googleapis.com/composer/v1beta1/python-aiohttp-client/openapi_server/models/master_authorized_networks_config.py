# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cidr_block import CidrBlock
from openapi_server import util


class MasterAuthorizedNetworksConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cidr_blocks: List[CidrBlock]=None, enabled: bool=None):
        """MasterAuthorizedNetworksConfig - a model defined in OpenAPI

        :param cidr_blocks: The cidr_blocks of this MasterAuthorizedNetworksConfig.
        :param enabled: The enabled of this MasterAuthorizedNetworksConfig.
        """
        self.openapi_types = {
            'cidr_blocks': List[CidrBlock],
            'enabled': bool
        }

        self.attribute_map = {
            'cidr_blocks': 'cidrBlocks',
            'enabled': 'enabled'
        }

        self._cidr_blocks = cidr_blocks
        self._enabled = enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MasterAuthorizedNetworksConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MasterAuthorizedNetworksConfig of this MasterAuthorizedNetworksConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cidr_blocks(self):
        """Gets the cidr_blocks of this MasterAuthorizedNetworksConfig.

        Up to 50 external networks that could access Kubernetes master through HTTPS.

        :return: The cidr_blocks of this MasterAuthorizedNetworksConfig.
        :rtype: List[CidrBlock]
        """
        return self._cidr_blocks

    @cidr_blocks.setter
    def cidr_blocks(self, cidr_blocks):
        """Sets the cidr_blocks of this MasterAuthorizedNetworksConfig.

        Up to 50 external networks that could access Kubernetes master through HTTPS.

        :param cidr_blocks: The cidr_blocks of this MasterAuthorizedNetworksConfig.
        :type cidr_blocks: List[CidrBlock]
        """

        self._cidr_blocks = cidr_blocks

    @property
    def enabled(self):
        """Gets the enabled of this MasterAuthorizedNetworksConfig.

        Whether or not master authorized networks feature is enabled.

        :return: The enabled of this MasterAuthorizedNetworksConfig.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this MasterAuthorizedNetworksConfig.

        Whether or not master authorized networks feature is enabled.

        :param enabled: The enabled of this MasterAuthorizedNetworksConfig.
        :type enabled: bool
        """

        self._enabled = enabled
