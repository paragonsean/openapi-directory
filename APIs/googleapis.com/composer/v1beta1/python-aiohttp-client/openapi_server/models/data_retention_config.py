# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_logs_retention_config import TaskLogsRetentionConfig
from openapi_server import util


class DataRetentionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_logs_retention_config: TaskLogsRetentionConfig=None):
        """DataRetentionConfig - a model defined in OpenAPI

        :param task_logs_retention_config: The task_logs_retention_config of this DataRetentionConfig.
        """
        self.openapi_types = {
            'task_logs_retention_config': TaskLogsRetentionConfig
        }

        self.attribute_map = {
            'task_logs_retention_config': 'taskLogsRetentionConfig'
        }

        self._task_logs_retention_config = task_logs_retention_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataRetentionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataRetentionConfig of this DataRetentionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_logs_retention_config(self):
        """Gets the task_logs_retention_config of this DataRetentionConfig.


        :return: The task_logs_retention_config of this DataRetentionConfig.
        :rtype: TaskLogsRetentionConfig
        """
        return self._task_logs_retention_config

    @task_logs_retention_config.setter
    def task_logs_retention_config(self, task_logs_retention_config):
        """Sets the task_logs_retention_config of this DataRetentionConfig.


        :param task_logs_retention_config: The task_logs_retention_config of this DataRetentionConfig.
        :type task_logs_retention_config: TaskLogsRetentionConfig
        """

        self._task_logs_retention_config = task_logs_retention_config
