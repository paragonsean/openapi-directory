# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AllowedIpRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, value: str=None):
        """AllowedIpRange - a model defined in OpenAPI

        :param description: The description of this AllowedIpRange.
        :param value: The value of this AllowedIpRange.
        """
        self.openapi_types = {
            'description': str,
            'value': str
        }

        self.attribute_map = {
            'description': 'description',
            'value': 'value'
        }

        self._description = description
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllowedIpRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AllowedIpRange of this AllowedIpRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this AllowedIpRange.

        Optional. User-provided description. It must contain at most 300 characters.

        :return: The description of this AllowedIpRange.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AllowedIpRange.

        Optional. User-provided description. It must contain at most 300 characters.

        :param description: The description of this AllowedIpRange.
        :type description: str
        """

        self._description = description

    @property
    def value(self):
        """Gets the value of this AllowedIpRange.

        IP address or range, defined using CIDR notation, of requests that this rule applies to. Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`. IP range prefixes should be properly truncated. For example, `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`.

        :return: The value of this AllowedIpRange.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AllowedIpRange.

        IP address or range, defined using CIDR notation, of requests that this rule applies to. Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`. IP range prefixes should be properly truncated. For example, `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`.

        :param value: The value of this AllowedIpRange.
        :type value: str
        """

        self._value = value
