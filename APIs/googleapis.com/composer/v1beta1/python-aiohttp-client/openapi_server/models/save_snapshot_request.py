# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SaveSnapshotRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshot_location: str=None):
        """SaveSnapshotRequest - a model defined in OpenAPI

        :param snapshot_location: The snapshot_location of this SaveSnapshotRequest.
        """
        self.openapi_types = {
            'snapshot_location': str
        }

        self.attribute_map = {
            'snapshot_location': 'snapshotLocation'
        }

        self._snapshot_location = snapshot_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SaveSnapshotRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SaveSnapshotRequest of this SaveSnapshotRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshot_location(self):
        """Gets the snapshot_location of this SaveSnapshotRequest.

        Location in a Cloud Storage where the snapshot is going to be stored, e.g.: \"gs://my-bucket/snapshots\".

        :return: The snapshot_location of this SaveSnapshotRequest.
        :rtype: str
        """
        return self._snapshot_location

    @snapshot_location.setter
    def snapshot_location(self, snapshot_location):
        """Sets the snapshot_location of this SaveSnapshotRequest.

        Location in a Cloud Storage where the snapshot is going to be stored, e.g.: \"gs://my-bucket/snapshots\".

        :param snapshot_location: The snapshot_location of this SaveSnapshotRequest.
        :type snapshot_location: str
        """

        self._snapshot_location = snapshot_location
