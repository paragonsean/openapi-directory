/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GooglePlayGameServices);
  }
}(this, function(expect, GooglePlayGameServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GooglePlayGameServices.AchievementDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AchievementDefinition', function() {
    it('should create an instance of AchievementDefinition', function() {
      // uncomment below and update the code to test AchievementDefinition
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be.a(GooglePlayGameServices.AchievementDefinition);
    });

    it('should have the property achievementType (base name: "achievementType")', function() {
      // uncomment below and update the code to test the property achievementType
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property experiencePoints (base name: "experiencePoints")', function() {
      // uncomment below and update the code to test the property experiencePoints
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property formattedTotalSteps (base name: "formattedTotalSteps")', function() {
      // uncomment below and update the code to test the property formattedTotalSteps
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property initialState (base name: "initialState")', function() {
      // uncomment below and update the code to test the property initialState
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isRevealedIconUrlDefault (base name: "isRevealedIconUrlDefault")', function() {
      // uncomment below and update the code to test the property isRevealedIconUrlDefault
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property isUnlockedIconUrlDefault (base name: "isUnlockedIconUrlDefault")', function() {
      // uncomment below and update the code to test the property isUnlockedIconUrlDefault
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property revealedIconUrl (base name: "revealedIconUrl")', function() {
      // uncomment below and update the code to test the property revealedIconUrl
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property totalSteps (base name: "totalSteps")', function() {
      // uncomment below and update the code to test the property totalSteps
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

    it('should have the property unlockedIconUrl (base name: "unlockedIconUrl")', function() {
      // uncomment below and update the code to test the property unlockedIconUrl
      //var instance = new GooglePlayGameServices.AchievementDefinition();
      //expect(instance).to.be();
    });

  });

}));
