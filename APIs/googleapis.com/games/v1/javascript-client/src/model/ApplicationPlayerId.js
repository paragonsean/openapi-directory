/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationPlayerId model module.
 * @module model/ApplicationPlayerId
 * @version v1
 */
class ApplicationPlayerId {
    /**
     * Constructs a new <code>ApplicationPlayerId</code>.
     * Primary scoped player identifier for an application.
     * @alias module:model/ApplicationPlayerId
     */
    constructor() { 
        
        ApplicationPlayerId.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplicationPlayerId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplicationPlayerId} obj Optional instance to populate.
     * @return {module:model/ApplicationPlayerId} The populated <code>ApplicationPlayerId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationPlayerId();

            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'String');
            }
            if (data.hasOwnProperty('playerId')) {
                obj['playerId'] = ApiClient.convertToType(data['playerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationPlayerId</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationPlayerId</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicationId'] && !(typeof data['applicationId'] === 'string' || data['applicationId'] instanceof String)) {
            throw new Error("Expected the field `applicationId` to be a primitive type in the JSON string but got " + data['applicationId']);
        }
        // ensure the json data is a string
        if (data['playerId'] && !(typeof data['playerId'] === 'string' || data['playerId'] instanceof String)) {
            throw new Error("Expected the field `playerId` to be a primitive type in the JSON string but got " + data['playerId']);
        }

        return true;
    }


}



/**
 * The application that this player identifier is for.
 * @member {String} applicationId
 */
ApplicationPlayerId.prototype['applicationId'] = undefined;

/**
 * The player identifier for the application.
 * @member {String} playerId
 */
ApplicationPlayerId.prototype['playerId'] = undefined;






export default ApplicationPlayerId;

