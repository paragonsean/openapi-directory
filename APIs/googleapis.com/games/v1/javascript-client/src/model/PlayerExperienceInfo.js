/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlayerLevel from './PlayerLevel';

/**
 * The PlayerExperienceInfo model module.
 * @module model/PlayerExperienceInfo
 * @version v1
 */
class PlayerExperienceInfo {
    /**
     * Constructs a new <code>PlayerExperienceInfo</code>.
     * 1P/3P metadata about the player&#39;s experience.
     * @alias module:model/PlayerExperienceInfo
     */
    constructor() { 
        
        PlayerExperienceInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlayerExperienceInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlayerExperienceInfo} obj Optional instance to populate.
     * @return {module:model/PlayerExperienceInfo} The populated <code>PlayerExperienceInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlayerExperienceInfo();

            if (data.hasOwnProperty('currentExperiencePoints')) {
                obj['currentExperiencePoints'] = ApiClient.convertToType(data['currentExperiencePoints'], 'String');
            }
            if (data.hasOwnProperty('currentLevel')) {
                obj['currentLevel'] = PlayerLevel.constructFromObject(data['currentLevel']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('lastLevelUpTimestampMillis')) {
                obj['lastLevelUpTimestampMillis'] = ApiClient.convertToType(data['lastLevelUpTimestampMillis'], 'String');
            }
            if (data.hasOwnProperty('nextLevel')) {
                obj['nextLevel'] = PlayerLevel.constructFromObject(data['nextLevel']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlayerExperienceInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlayerExperienceInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currentExperiencePoints'] && !(typeof data['currentExperiencePoints'] === 'string' || data['currentExperiencePoints'] instanceof String)) {
            throw new Error("Expected the field `currentExperiencePoints` to be a primitive type in the JSON string but got " + data['currentExperiencePoints']);
        }
        // validate the optional field `currentLevel`
        if (data['currentLevel']) { // data not null
          PlayerLevel.validateJSON(data['currentLevel']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['lastLevelUpTimestampMillis'] && !(typeof data['lastLevelUpTimestampMillis'] === 'string' || data['lastLevelUpTimestampMillis'] instanceof String)) {
            throw new Error("Expected the field `lastLevelUpTimestampMillis` to be a primitive type in the JSON string but got " + data['lastLevelUpTimestampMillis']);
        }
        // validate the optional field `nextLevel`
        if (data['nextLevel']) { // data not null
          PlayerLevel.validateJSON(data['nextLevel']);
        }

        return true;
    }


}



/**
 * The current number of experience points for the player.
 * @member {String} currentExperiencePoints
 */
PlayerExperienceInfo.prototype['currentExperiencePoints'] = undefined;

/**
 * @member {module:model/PlayerLevel} currentLevel
 */
PlayerExperienceInfo.prototype['currentLevel'] = undefined;

/**
 * Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.
 * @member {String} kind
 */
PlayerExperienceInfo.prototype['kind'] = undefined;

/**
 * The timestamp when the player was leveled up, in millis since Unix epoch UTC.
 * @member {String} lastLevelUpTimestampMillis
 */
PlayerExperienceInfo.prototype['lastLevelUpTimestampMillis'] = undefined;

/**
 * @member {module:model/PlayerLevel} nextLevel
 */
PlayerExperienceInfo.prototype['nextLevel'] = undefined;






export default PlayerExperienceInfo;

