/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AchievementRevealResponse model module.
 * @module model/AchievementRevealResponse
 * @version v1
 */
class AchievementRevealResponse {
    /**
     * Constructs a new <code>AchievementRevealResponse</code>.
     * An achievement reveal response
     * @alias module:model/AchievementRevealResponse
     */
    constructor() { 
        
        AchievementRevealResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AchievementRevealResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AchievementRevealResponse} obj Optional instance to populate.
     * @return {module:model/AchievementRevealResponse} The populated <code>AchievementRevealResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AchievementRevealResponse();

            if (data.hasOwnProperty('currentState')) {
                obj['currentState'] = ApiClient.convertToType(data['currentState'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AchievementRevealResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AchievementRevealResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currentState'] && !(typeof data['currentState'] === 'string' || data['currentState'] instanceof String)) {
            throw new Error("Expected the field `currentState` to be a primitive type in the JSON string but got " + data['currentState']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.
 * @member {module:model/AchievementRevealResponse.CurrentStateEnum} currentState
 */
AchievementRevealResponse.prototype['currentState'] = undefined;

/**
 * Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`.
 * @member {String} kind
 */
AchievementRevealResponse.prototype['kind'] = undefined;





/**
 * Allowed values for the <code>currentState</code> property.
 * @enum {String}
 * @readonly
 */
AchievementRevealResponse['CurrentStateEnum'] = {

    /**
     * value: "REVEALED"
     * @const
     */
    "REVEALED": "REVEALED",

    /**
     * value: "UNLOCKED"
     * @const
     */
    "UNLOCKED": "UNLOCKED"
};



export default AchievementRevealResponse;

