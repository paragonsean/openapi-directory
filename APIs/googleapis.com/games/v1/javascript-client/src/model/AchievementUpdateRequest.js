/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GamesAchievementIncrement from './GamesAchievementIncrement';
import GamesAchievementSetStepsAtLeast from './GamesAchievementSetStepsAtLeast';

/**
 * The AchievementUpdateRequest model module.
 * @module model/AchievementUpdateRequest
 * @version v1
 */
class AchievementUpdateRequest {
    /**
     * Constructs a new <code>AchievementUpdateRequest</code>.
     * A request to update an achievement.
     * @alias module:model/AchievementUpdateRequest
     */
    constructor() { 
        
        AchievementUpdateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AchievementUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AchievementUpdateRequest} obj Optional instance to populate.
     * @return {module:model/AchievementUpdateRequest} The populated <code>AchievementUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AchievementUpdateRequest();

            if (data.hasOwnProperty('achievementId')) {
                obj['achievementId'] = ApiClient.convertToType(data['achievementId'], 'String');
            }
            if (data.hasOwnProperty('incrementPayload')) {
                obj['incrementPayload'] = GamesAchievementIncrement.constructFromObject(data['incrementPayload']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('setStepsAtLeastPayload')) {
                obj['setStepsAtLeastPayload'] = GamesAchievementSetStepsAtLeast.constructFromObject(data['setStepsAtLeastPayload']);
            }
            if (data.hasOwnProperty('updateType')) {
                obj['updateType'] = ApiClient.convertToType(data['updateType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AchievementUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AchievementUpdateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['achievementId'] && !(typeof data['achievementId'] === 'string' || data['achievementId'] instanceof String)) {
            throw new Error("Expected the field `achievementId` to be a primitive type in the JSON string but got " + data['achievementId']);
        }
        // validate the optional field `incrementPayload`
        if (data['incrementPayload']) { // data not null
          GamesAchievementIncrement.validateJSON(data['incrementPayload']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `setStepsAtLeastPayload`
        if (data['setStepsAtLeastPayload']) { // data not null
          GamesAchievementSetStepsAtLeast.validateJSON(data['setStepsAtLeastPayload']);
        }
        // ensure the json data is a string
        if (data['updateType'] && !(typeof data['updateType'] === 'string' || data['updateType'] instanceof String)) {
            throw new Error("Expected the field `updateType` to be a primitive type in the JSON string but got " + data['updateType']);
        }

        return true;
    }


}



/**
 * The achievement this update is being applied to.
 * @member {String} achievementId
 */
AchievementUpdateRequest.prototype['achievementId'] = undefined;

/**
 * @member {module:model/GamesAchievementIncrement} incrementPayload
 */
AchievementUpdateRequest.prototype['incrementPayload'] = undefined;

/**
 * Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`.
 * @member {String} kind
 */
AchievementUpdateRequest.prototype['kind'] = undefined;

/**
 * @member {module:model/GamesAchievementSetStepsAtLeast} setStepsAtLeastPayload
 */
AchievementUpdateRequest.prototype['setStepsAtLeastPayload'] = undefined;

/**
 * The type of update being applied.
 * @member {module:model/AchievementUpdateRequest.UpdateTypeEnum} updateType
 */
AchievementUpdateRequest.prototype['updateType'] = undefined;





/**
 * Allowed values for the <code>updateType</code> property.
 * @enum {String}
 * @readonly
 */
AchievementUpdateRequest['UpdateTypeEnum'] = {

    /**
     * value: "REVEAL"
     * @const
     */
    "REVEAL": "REVEAL",

    /**
     * value: "UNLOCK"
     * @const
     */
    "UNLOCK": "UNLOCK",

    /**
     * value: "INCREMENT"
     * @const
     */
    "INCREMENT": "INCREMENT",

    /**
     * value: "SET_STEPS_AT_LEAST"
     * @const
     */
    "SET_STEPS_AT_LEAST": "SET_STEPS_AT_LEAST"
};



export default AchievementUpdateRequest;

