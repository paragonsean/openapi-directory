/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StatsResponse model module.
 * @module model/StatsResponse
 * @version v1
 */
class StatsResponse {
    /**
     * Constructs a new <code>StatsResponse</code>.
     * A third party stats resource.
     * @alias module:model/StatsResponse
     */
    constructor() { 
        
        StatsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StatsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatsResponse} obj Optional instance to populate.
     * @return {module:model/StatsResponse} The populated <code>StatsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatsResponse();

            if (data.hasOwnProperty('avg_session_length_minutes')) {
                obj['avg_session_length_minutes'] = ApiClient.convertToType(data['avg_session_length_minutes'], 'Number');
            }
            if (data.hasOwnProperty('churn_probability')) {
                obj['churn_probability'] = ApiClient.convertToType(data['churn_probability'], 'Number');
            }
            if (data.hasOwnProperty('days_since_last_played')) {
                obj['days_since_last_played'] = ApiClient.convertToType(data['days_since_last_played'], 'Number');
            }
            if (data.hasOwnProperty('high_spender_probability')) {
                obj['high_spender_probability'] = ApiClient.convertToType(data['high_spender_probability'], 'Number');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('num_purchases')) {
                obj['num_purchases'] = ApiClient.convertToType(data['num_purchases'], 'Number');
            }
            if (data.hasOwnProperty('num_sessions')) {
                obj['num_sessions'] = ApiClient.convertToType(data['num_sessions'], 'Number');
            }
            if (data.hasOwnProperty('num_sessions_percentile')) {
                obj['num_sessions_percentile'] = ApiClient.convertToType(data['num_sessions_percentile'], 'Number');
            }
            if (data.hasOwnProperty('spend_percentile')) {
                obj['spend_percentile'] = ApiClient.convertToType(data['spend_percentile'], 'Number');
            }
            if (data.hasOwnProperty('spend_probability')) {
                obj['spend_probability'] = ApiClient.convertToType(data['spend_probability'], 'Number');
            }
            if (data.hasOwnProperty('total_spend_next_28_days')) {
                obj['total_spend_next_28_days'] = ApiClient.convertToType(data['total_spend_next_28_days'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * Average session length in minutes of the player. E.g., 1, 30, 60, ... . Not populated if there is not enough information.
 * @member {Number} avg_session_length_minutes
 */
StatsResponse.prototype['avg_session_length_minutes'] = undefined;

/**
 * The probability of the player not returning to play the game in the next day. E.g., 0, 0.1, 0.5, ..., 1.0. Not populated if there is not enough information.
 * @member {Number} churn_probability
 */
StatsResponse.prototype['churn_probability'] = undefined;

/**
 * Number of days since the player last played this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
 * @member {Number} days_since_last_played
 */
StatsResponse.prototype['days_since_last_played'] = undefined;

/**
 * The probability of the player going to spend beyond a threshold amount of money. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.
 * @member {Number} high_spender_probability
 */
StatsResponse.prototype['high_spender_probability'] = undefined;

/**
 * Uniquely identifies the type of this resource. Value is always the fixed string `games#statsResponse`.
 * @member {String} kind
 */
StatsResponse.prototype['kind'] = undefined;

/**
 * Number of in-app purchases made by the player in this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
 * @member {Number} num_purchases
 */
StatsResponse.prototype['num_purchases'] = undefined;

/**
 * The approximate number of sessions of the player within the last 28 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.
 * @member {Number} num_sessions
 */
StatsResponse.prototype['num_sessions'] = undefined;

/**
 * The approximation of the sessions percentile of the player within the last 30 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.
 * @member {Number} num_sessions_percentile
 */
StatsResponse.prototype['num_sessions_percentile'] = undefined;

/**
 * The approximate spend percentile of the player in this game. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.
 * @member {Number} spend_percentile
 */
StatsResponse.prototype['spend_percentile'] = undefined;

/**
 * The probability of the player going to spend the game in the next seven days. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.
 * @member {Number} spend_probability
 */
StatsResponse.prototype['spend_probability'] = undefined;

/**
 * The predicted amount of money that the player going to spend in the next 28 days. E.g., 1, 30, 60, ... . Not populated if there is not enough information.
 * @member {Number} total_spend_next_28_days
 */
StatsResponse.prototype['total_spend_next_28_days'] = undefined;






export default StatsResponse;

