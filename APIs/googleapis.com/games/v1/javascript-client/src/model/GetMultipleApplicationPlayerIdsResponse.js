/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationPlayerId from './ApplicationPlayerId';

/**
 * The GetMultipleApplicationPlayerIdsResponse model module.
 * @module model/GetMultipleApplicationPlayerIdsResponse
 * @version v1
 */
class GetMultipleApplicationPlayerIdsResponse {
    /**
     * Constructs a new <code>GetMultipleApplicationPlayerIdsResponse</code>.
     * Response message for GetMultipleApplicationPlayerIds rpc.
     * @alias module:model/GetMultipleApplicationPlayerIdsResponse
     */
    constructor() { 
        
        GetMultipleApplicationPlayerIdsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetMultipleApplicationPlayerIdsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetMultipleApplicationPlayerIdsResponse} obj Optional instance to populate.
     * @return {module:model/GetMultipleApplicationPlayerIdsResponse} The populated <code>GetMultipleApplicationPlayerIdsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetMultipleApplicationPlayerIdsResponse();

            if (data.hasOwnProperty('playerIds')) {
                obj['playerIds'] = ApiClient.convertToType(data['playerIds'], [ApplicationPlayerId]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetMultipleApplicationPlayerIdsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetMultipleApplicationPlayerIdsResponse</code>.
     */
    static validateJSON(data) {
        if (data['playerIds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['playerIds'])) {
                throw new Error("Expected the field `playerIds` to be an array in the JSON data but got " + data['playerIds']);
            }
            // validate the optional field `playerIds` (array)
            for (const item of data['playerIds']) {
                ApplicationPlayerId.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. The requested applications along with the scoped ids for tha player, if that player has an id for the application. If not, the application is not included in the response.
 * @member {Array.<module:model/ApplicationPlayerId>} playerIds
 */
GetMultipleApplicationPlayerIdsResponse.prototype['playerIds'] = undefined;






export default GetMultipleApplicationPlayerIdsResponse;

