/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScopedPlayerIds model module.
 * @module model/ScopedPlayerIds
 * @version v1
 */
class ScopedPlayerIds {
    /**
     * Constructs a new <code>ScopedPlayerIds</code>.
     * Scoped player identifiers.
     * @alias module:model/ScopedPlayerIds
     */
    constructor() { 
        
        ScopedPlayerIds.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScopedPlayerIds</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScopedPlayerIds} obj Optional instance to populate.
     * @return {module:model/ScopedPlayerIds} The populated <code>ScopedPlayerIds</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScopedPlayerIds();

            if (data.hasOwnProperty('developerPlayerKey')) {
                obj['developerPlayerKey'] = ApiClient.convertToType(data['developerPlayerKey'], 'String');
            }
            if (data.hasOwnProperty('gamePlayerId')) {
                obj['gamePlayerId'] = ApiClient.convertToType(data['gamePlayerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScopedPlayerIds</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScopedPlayerIds</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['developerPlayerKey'] && !(typeof data['developerPlayerKey'] === 'string' || data['developerPlayerKey'] instanceof String)) {
            throw new Error("Expected the field `developerPlayerKey` to be a primitive type in the JSON string but got " + data['developerPlayerKey']);
        }
        // ensure the json data is a string
        if (data['gamePlayerId'] && !(typeof data['gamePlayerId'] === 'string' || data['gamePlayerId'] instanceof String)) {
            throw new Error("Expected the field `gamePlayerId` to be a primitive type in the JSON string but got " + data['gamePlayerId']);
        }

        return true;
    }


}



/**
 * Identifier of the player across all games of the given developer. Every player has the same developer_player_key in all games of one developer. Developer player key changes for the game if the game is transferred to another developer. Note that game_player_id will stay unchanged.
 * @member {String} developerPlayerKey
 */
ScopedPlayerIds.prototype['developerPlayerKey'] = undefined;

/**
 * Game-scoped player identifier. This is the same id that is returned in GetPlayer game_player_id field.
 * @member {String} gamePlayerId
 */
ScopedPlayerIds.prototype['gamePlayerId'] = undefined;






export default ScopedPlayerIds;

