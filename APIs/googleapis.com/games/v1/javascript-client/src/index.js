/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AchievementDefinition from './model/AchievementDefinition';
import AchievementDefinitionsListResponse from './model/AchievementDefinitionsListResponse';
import AchievementIncrementResponse from './model/AchievementIncrementResponse';
import AchievementRevealResponse from './model/AchievementRevealResponse';
import AchievementSetStepsAtLeastResponse from './model/AchievementSetStepsAtLeastResponse';
import AchievementUnlockResponse from './model/AchievementUnlockResponse';
import AchievementUpdateMultipleRequest from './model/AchievementUpdateMultipleRequest';
import AchievementUpdateMultipleResponse from './model/AchievementUpdateMultipleResponse';
import AchievementUpdateRequest from './model/AchievementUpdateRequest';
import AchievementUpdateResponse from './model/AchievementUpdateResponse';
import Application from './model/Application';
import ApplicationCategory from './model/ApplicationCategory';
import ApplicationPlayerId from './model/ApplicationPlayerId';
import ApplicationVerifyResponse from './model/ApplicationVerifyResponse';
import Category from './model/Category';
import CategoryListResponse from './model/CategoryListResponse';
import EndPoint from './model/EndPoint';
import EventBatchRecordFailure from './model/EventBatchRecordFailure';
import EventChild from './model/EventChild';
import EventDefinition from './model/EventDefinition';
import EventDefinitionListResponse from './model/EventDefinitionListResponse';
import EventPeriodRange from './model/EventPeriodRange';
import EventPeriodUpdate from './model/EventPeriodUpdate';
import EventRecordFailure from './model/EventRecordFailure';
import EventRecordRequest from './model/EventRecordRequest';
import EventUpdateRequest from './model/EventUpdateRequest';
import EventUpdateResponse from './model/EventUpdateResponse';
import GamesAchievementIncrement from './model/GamesAchievementIncrement';
import GamesAchievementSetStepsAtLeast from './model/GamesAchievementSetStepsAtLeast';
import GetMultipleApplicationPlayerIdsResponse from './model/GetMultipleApplicationPlayerIdsResponse';
import ImageAsset from './model/ImageAsset';
import Instance from './model/Instance';
import InstanceAndroidDetails from './model/InstanceAndroidDetails';
import InstanceIosDetails from './model/InstanceIosDetails';
import InstanceWebDetails from './model/InstanceWebDetails';
import Leaderboard from './model/Leaderboard';
import LeaderboardEntry from './model/LeaderboardEntry';
import LeaderboardListResponse from './model/LeaderboardListResponse';
import LeaderboardScoreRank from './model/LeaderboardScoreRank';
import LeaderboardScores from './model/LeaderboardScores';
import LinkPersonaRequest from './model/LinkPersonaRequest';
import LinkPersonaResponse from './model/LinkPersonaResponse';
import MetagameConfig from './model/MetagameConfig';
import Player from './model/Player';
import PlayerAchievement from './model/PlayerAchievement';
import PlayerAchievementListResponse from './model/PlayerAchievementListResponse';
import PlayerEvent from './model/PlayerEvent';
import PlayerEventListResponse from './model/PlayerEventListResponse';
import PlayerExperienceInfo from './model/PlayerExperienceInfo';
import PlayerLeaderboardScore from './model/PlayerLeaderboardScore';
import PlayerLeaderboardScoreListResponse from './model/PlayerLeaderboardScoreListResponse';
import PlayerLevel from './model/PlayerLevel';
import PlayerListResponse from './model/PlayerListResponse';
import PlayerName from './model/PlayerName';
import PlayerScore from './model/PlayerScore';
import PlayerScoreListResponse from './model/PlayerScoreListResponse';
import PlayerScoreResponse from './model/PlayerScoreResponse';
import PlayerScoreSubmissionList from './model/PlayerScoreSubmissionList';
import ProfileSettings from './model/ProfileSettings';
import RecallToken from './model/RecallToken';
import ResetPersonaRequest from './model/ResetPersonaRequest';
import ResetPersonaResponse from './model/ResetPersonaResponse';
import RetrievePlayerTokensResponse from './model/RetrievePlayerTokensResponse';
import RevisionCheckResponse from './model/RevisionCheckResponse';
import ScopedPlayerIds from './model/ScopedPlayerIds';
import ScoreSubmission from './model/ScoreSubmission';
import Snapshot from './model/Snapshot';
import SnapshotImage from './model/SnapshotImage';
import SnapshotListResponse from './model/SnapshotListResponse';
import StatsResponse from './model/StatsResponse';
import UnlinkPersonaRequest from './model/UnlinkPersonaRequest';
import UnlinkPersonaResponse from './model/UnlinkPersonaResponse';
import AchievementDefinitionsApi from './api/AchievementDefinitionsApi';
import AchievementsApi from './api/AchievementsApi';
import ApplicationsApi from './api/ApplicationsApi';
import EventsApi from './api/EventsApi';
import LeaderboardsApi from './api/LeaderboardsApi';
import MetagameApi from './api/MetagameApi';
import PlayersApi from './api/PlayersApi';
import RecallApi from './api/RecallApi';
import RevisionsApi from './api/RevisionsApi';
import ScoresApi from './api/ScoresApi';
import SnapshotsApi from './api/SnapshotsApi';
import StatsApi from './api/StatsApi';


/**
* The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GooglePlayGameServices = require('index'); // See note below*.
* var xxxSvc = new GooglePlayGameServices.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GooglePlayGameServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GooglePlayGameServices.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GooglePlayGameServices.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AchievementDefinition model constructor.
     * @property {module:model/AchievementDefinition}
     */
    AchievementDefinition,

    /**
     * The AchievementDefinitionsListResponse model constructor.
     * @property {module:model/AchievementDefinitionsListResponse}
     */
    AchievementDefinitionsListResponse,

    /**
     * The AchievementIncrementResponse model constructor.
     * @property {module:model/AchievementIncrementResponse}
     */
    AchievementIncrementResponse,

    /**
     * The AchievementRevealResponse model constructor.
     * @property {module:model/AchievementRevealResponse}
     */
    AchievementRevealResponse,

    /**
     * The AchievementSetStepsAtLeastResponse model constructor.
     * @property {module:model/AchievementSetStepsAtLeastResponse}
     */
    AchievementSetStepsAtLeastResponse,

    /**
     * The AchievementUnlockResponse model constructor.
     * @property {module:model/AchievementUnlockResponse}
     */
    AchievementUnlockResponse,

    /**
     * The AchievementUpdateMultipleRequest model constructor.
     * @property {module:model/AchievementUpdateMultipleRequest}
     */
    AchievementUpdateMultipleRequest,

    /**
     * The AchievementUpdateMultipleResponse model constructor.
     * @property {module:model/AchievementUpdateMultipleResponse}
     */
    AchievementUpdateMultipleResponse,

    /**
     * The AchievementUpdateRequest model constructor.
     * @property {module:model/AchievementUpdateRequest}
     */
    AchievementUpdateRequest,

    /**
     * The AchievementUpdateResponse model constructor.
     * @property {module:model/AchievementUpdateResponse}
     */
    AchievementUpdateResponse,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The ApplicationCategory model constructor.
     * @property {module:model/ApplicationCategory}
     */
    ApplicationCategory,

    /**
     * The ApplicationPlayerId model constructor.
     * @property {module:model/ApplicationPlayerId}
     */
    ApplicationPlayerId,

    /**
     * The ApplicationVerifyResponse model constructor.
     * @property {module:model/ApplicationVerifyResponse}
     */
    ApplicationVerifyResponse,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The CategoryListResponse model constructor.
     * @property {module:model/CategoryListResponse}
     */
    CategoryListResponse,

    /**
     * The EndPoint model constructor.
     * @property {module:model/EndPoint}
     */
    EndPoint,

    /**
     * The EventBatchRecordFailure model constructor.
     * @property {module:model/EventBatchRecordFailure}
     */
    EventBatchRecordFailure,

    /**
     * The EventChild model constructor.
     * @property {module:model/EventChild}
     */
    EventChild,

    /**
     * The EventDefinition model constructor.
     * @property {module:model/EventDefinition}
     */
    EventDefinition,

    /**
     * The EventDefinitionListResponse model constructor.
     * @property {module:model/EventDefinitionListResponse}
     */
    EventDefinitionListResponse,

    /**
     * The EventPeriodRange model constructor.
     * @property {module:model/EventPeriodRange}
     */
    EventPeriodRange,

    /**
     * The EventPeriodUpdate model constructor.
     * @property {module:model/EventPeriodUpdate}
     */
    EventPeriodUpdate,

    /**
     * The EventRecordFailure model constructor.
     * @property {module:model/EventRecordFailure}
     */
    EventRecordFailure,

    /**
     * The EventRecordRequest model constructor.
     * @property {module:model/EventRecordRequest}
     */
    EventRecordRequest,

    /**
     * The EventUpdateRequest model constructor.
     * @property {module:model/EventUpdateRequest}
     */
    EventUpdateRequest,

    /**
     * The EventUpdateResponse model constructor.
     * @property {module:model/EventUpdateResponse}
     */
    EventUpdateResponse,

    /**
     * The GamesAchievementIncrement model constructor.
     * @property {module:model/GamesAchievementIncrement}
     */
    GamesAchievementIncrement,

    /**
     * The GamesAchievementSetStepsAtLeast model constructor.
     * @property {module:model/GamesAchievementSetStepsAtLeast}
     */
    GamesAchievementSetStepsAtLeast,

    /**
     * The GetMultipleApplicationPlayerIdsResponse model constructor.
     * @property {module:model/GetMultipleApplicationPlayerIdsResponse}
     */
    GetMultipleApplicationPlayerIdsResponse,

    /**
     * The ImageAsset model constructor.
     * @property {module:model/ImageAsset}
     */
    ImageAsset,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceAndroidDetails model constructor.
     * @property {module:model/InstanceAndroidDetails}
     */
    InstanceAndroidDetails,

    /**
     * The InstanceIosDetails model constructor.
     * @property {module:model/InstanceIosDetails}
     */
    InstanceIosDetails,

    /**
     * The InstanceWebDetails model constructor.
     * @property {module:model/InstanceWebDetails}
     */
    InstanceWebDetails,

    /**
     * The Leaderboard model constructor.
     * @property {module:model/Leaderboard}
     */
    Leaderboard,

    /**
     * The LeaderboardEntry model constructor.
     * @property {module:model/LeaderboardEntry}
     */
    LeaderboardEntry,

    /**
     * The LeaderboardListResponse model constructor.
     * @property {module:model/LeaderboardListResponse}
     */
    LeaderboardListResponse,

    /**
     * The LeaderboardScoreRank model constructor.
     * @property {module:model/LeaderboardScoreRank}
     */
    LeaderboardScoreRank,

    /**
     * The LeaderboardScores model constructor.
     * @property {module:model/LeaderboardScores}
     */
    LeaderboardScores,

    /**
     * The LinkPersonaRequest model constructor.
     * @property {module:model/LinkPersonaRequest}
     */
    LinkPersonaRequest,

    /**
     * The LinkPersonaResponse model constructor.
     * @property {module:model/LinkPersonaResponse}
     */
    LinkPersonaResponse,

    /**
     * The MetagameConfig model constructor.
     * @property {module:model/MetagameConfig}
     */
    MetagameConfig,

    /**
     * The Player model constructor.
     * @property {module:model/Player}
     */
    Player,

    /**
     * The PlayerAchievement model constructor.
     * @property {module:model/PlayerAchievement}
     */
    PlayerAchievement,

    /**
     * The PlayerAchievementListResponse model constructor.
     * @property {module:model/PlayerAchievementListResponse}
     */
    PlayerAchievementListResponse,

    /**
     * The PlayerEvent model constructor.
     * @property {module:model/PlayerEvent}
     */
    PlayerEvent,

    /**
     * The PlayerEventListResponse model constructor.
     * @property {module:model/PlayerEventListResponse}
     */
    PlayerEventListResponse,

    /**
     * The PlayerExperienceInfo model constructor.
     * @property {module:model/PlayerExperienceInfo}
     */
    PlayerExperienceInfo,

    /**
     * The PlayerLeaderboardScore model constructor.
     * @property {module:model/PlayerLeaderboardScore}
     */
    PlayerLeaderboardScore,

    /**
     * The PlayerLeaderboardScoreListResponse model constructor.
     * @property {module:model/PlayerLeaderboardScoreListResponse}
     */
    PlayerLeaderboardScoreListResponse,

    /**
     * The PlayerLevel model constructor.
     * @property {module:model/PlayerLevel}
     */
    PlayerLevel,

    /**
     * The PlayerListResponse model constructor.
     * @property {module:model/PlayerListResponse}
     */
    PlayerListResponse,

    /**
     * The PlayerName model constructor.
     * @property {module:model/PlayerName}
     */
    PlayerName,

    /**
     * The PlayerScore model constructor.
     * @property {module:model/PlayerScore}
     */
    PlayerScore,

    /**
     * The PlayerScoreListResponse model constructor.
     * @property {module:model/PlayerScoreListResponse}
     */
    PlayerScoreListResponse,

    /**
     * The PlayerScoreResponse model constructor.
     * @property {module:model/PlayerScoreResponse}
     */
    PlayerScoreResponse,

    /**
     * The PlayerScoreSubmissionList model constructor.
     * @property {module:model/PlayerScoreSubmissionList}
     */
    PlayerScoreSubmissionList,

    /**
     * The ProfileSettings model constructor.
     * @property {module:model/ProfileSettings}
     */
    ProfileSettings,

    /**
     * The RecallToken model constructor.
     * @property {module:model/RecallToken}
     */
    RecallToken,

    /**
     * The ResetPersonaRequest model constructor.
     * @property {module:model/ResetPersonaRequest}
     */
    ResetPersonaRequest,

    /**
     * The ResetPersonaResponse model constructor.
     * @property {module:model/ResetPersonaResponse}
     */
    ResetPersonaResponse,

    /**
     * The RetrievePlayerTokensResponse model constructor.
     * @property {module:model/RetrievePlayerTokensResponse}
     */
    RetrievePlayerTokensResponse,

    /**
     * The RevisionCheckResponse model constructor.
     * @property {module:model/RevisionCheckResponse}
     */
    RevisionCheckResponse,

    /**
     * The ScopedPlayerIds model constructor.
     * @property {module:model/ScopedPlayerIds}
     */
    ScopedPlayerIds,

    /**
     * The ScoreSubmission model constructor.
     * @property {module:model/ScoreSubmission}
     */
    ScoreSubmission,

    /**
     * The Snapshot model constructor.
     * @property {module:model/Snapshot}
     */
    Snapshot,

    /**
     * The SnapshotImage model constructor.
     * @property {module:model/SnapshotImage}
     */
    SnapshotImage,

    /**
     * The SnapshotListResponse model constructor.
     * @property {module:model/SnapshotListResponse}
     */
    SnapshotListResponse,

    /**
     * The StatsResponse model constructor.
     * @property {module:model/StatsResponse}
     */
    StatsResponse,

    /**
     * The UnlinkPersonaRequest model constructor.
     * @property {module:model/UnlinkPersonaRequest}
     */
    UnlinkPersonaRequest,

    /**
     * The UnlinkPersonaResponse model constructor.
     * @property {module:model/UnlinkPersonaResponse}
     */
    UnlinkPersonaResponse,

    /**
    * The AchievementDefinitionsApi service constructor.
    * @property {module:api/AchievementDefinitionsApi}
    */
    AchievementDefinitionsApi,

    /**
    * The AchievementsApi service constructor.
    * @property {module:api/AchievementsApi}
    */
    AchievementsApi,

    /**
    * The ApplicationsApi service constructor.
    * @property {module:api/ApplicationsApi}
    */
    ApplicationsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The LeaderboardsApi service constructor.
    * @property {module:api/LeaderboardsApi}
    */
    LeaderboardsApi,

    /**
    * The MetagameApi service constructor.
    * @property {module:api/MetagameApi}
    */
    MetagameApi,

    /**
    * The PlayersApi service constructor.
    * @property {module:api/PlayersApi}
    */
    PlayersApi,

    /**
    * The RecallApi service constructor.
    * @property {module:api/RecallApi}
    */
    RecallApi,

    /**
    * The RevisionsApi service constructor.
    * @property {module:api/RevisionsApi}
    */
    RevisionsApi,

    /**
    * The ScoresApi service constructor.
    * @property {module:api/ScoresApi}
    */
    ScoresApi,

    /**
    * The SnapshotsApi service constructor.
    * @property {module:api/SnapshotsApi}
    */
    SnapshotsApi,

    /**
    * The StatsApi service constructor.
    * @property {module:api/StatsApi}
    */
    StatsApi
};
