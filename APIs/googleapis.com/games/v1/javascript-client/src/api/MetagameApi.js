/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CategoryListResponse from '../model/CategoryListResponse';
import MetagameConfig from '../model/MetagameConfig';

/**
* Metagame service.
* @module api/MetagameApi
* @version v1
*/
export default class MetagameApi {

    /**
    * Constructs a new MetagameApi. 
    * @alias module:api/MetagameApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the gamesMetagameGetMetagameConfig operation.
     * @callback module:api/MetagameApi~gamesMetagameGetMetagameConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MetagameConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return the metagame configuration data for the calling application.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/MetagameApi~gamesMetagameGetMetagameConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MetagameConfig}
     */
    gamesMetagameGetMetagameConfig(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MetagameConfig;
      return this.apiClient.callApi(
        '/games/v1/metagameConfig', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the gamesMetagameListCategoriesByPlayer operation.
     * @callback module:api/MetagameApi~gamesMetagameListCategoriesByPlayerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoryListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List play data aggregated per category for the player corresponding to `playerId`.
     * @param {String} playerId A player ID. A value of `me` may be used in place of the authenticated player's ID.
     * @param {module:model/String} collection The collection of categories for which data will be returned.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [language] The preferred language to use for strings returned by this method.
     * @param {Number} [maxResults] The maximum number of category resources to return in the response, used for paging. For any response, the actual number of category resources returned may be less than the specified `maxResults`.
     * @param {String} [pageToken] The token returned by the previous request.
     * @param {module:api/MetagameApi~gamesMetagameListCategoriesByPlayerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoryListResponse}
     */
    gamesMetagameListCategoriesByPlayer(playerId, collection, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'playerId' is set
      if (playerId === undefined || playerId === null) {
        throw new Error("Missing the required parameter 'playerId' when calling gamesMetagameListCategoriesByPlayer");
      }
      // verify the required parameter 'collection' is set
      if (collection === undefined || collection === null) {
        throw new Error("Missing the required parameter 'collection' when calling gamesMetagameListCategoriesByPlayer");
      }

      let pathParams = {
        'playerId': playerId,
        'collection': collection
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'language': opts['language'],
        'maxResults': opts['maxResults'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CategoryListResponse;
      return this.apiClient.callApi(
        '/games/v1/players/{playerId}/categories/{collection}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
