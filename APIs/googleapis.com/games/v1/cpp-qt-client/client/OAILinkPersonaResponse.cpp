/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkPersonaResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkPersonaResponse::OAILinkPersonaResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkPersonaResponse::OAILinkPersonaResponse() {
    this->initializeModel();
}

OAILinkPersonaResponse::~OAILinkPersonaResponse() {}

void OAILinkPersonaResponse::initializeModel() {

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAILinkPersonaResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkPersonaResponse::fromJsonObject(QJsonObject json) {

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAILinkPersonaResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkPersonaResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAILinkPersonaResponse::getState() const {
    return m_state;
}
void OAILinkPersonaResponse::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAILinkPersonaResponse::is_state_Set() const{
    return m_state_isSet;
}

bool OAILinkPersonaResponse::is_state_Valid() const{
    return m_state_isValid;
}

bool OAILinkPersonaResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkPersonaResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
