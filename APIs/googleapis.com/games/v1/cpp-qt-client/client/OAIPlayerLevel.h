/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerLevel.h
 *
 * 1P/3P metadata about a user&#39;s level.
 */

#ifndef OAIPlayerLevel_H
#define OAIPlayerLevel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerLevel : public OAIObject {
public:
    OAIPlayerLevel();
    OAIPlayerLevel(QString json);
    ~OAIPlayerLevel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    qint32 getLevel() const;
    void setLevel(const qint32 &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    QString getMaxExperiencePoints() const;
    void setMaxExperiencePoints(const QString &max_experience_points);
    bool is_max_experience_points_Set() const;
    bool is_max_experience_points_Valid() const;

    QString getMinExperiencePoints() const;
    void setMinExperiencePoints(const QString &min_experience_points);
    bool is_min_experience_points_Set() const;
    bool is_min_experience_points_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    qint32 m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    QString m_max_experience_points;
    bool m_max_experience_points_isSet;
    bool m_max_experience_points_isValid;

    QString m_min_experience_points;
    bool m_min_experience_points_isSet;
    bool m_min_experience_points_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerLevel)

#endif // OAIPlayerLevel_H
