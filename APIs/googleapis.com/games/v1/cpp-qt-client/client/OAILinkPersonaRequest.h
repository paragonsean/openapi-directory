/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILinkPersonaRequest.h
 *
 * Request to link an in-game account with a PGS principal (encoded in the session id).
 */

#ifndef OAILinkPersonaRequest_H
#define OAILinkPersonaRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILinkPersonaRequest : public OAIObject {
public:
    OAILinkPersonaRequest();
    OAILinkPersonaRequest(QString json);
    ~OAILinkPersonaRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardinalityConstraint() const;
    void setCardinalityConstraint(const QString &cardinality_constraint);
    bool is_cardinality_constraint_Set() const;
    bool is_cardinality_constraint_Valid() const;

    QString getConflictingLinksResolutionPolicy() const;
    void setConflictingLinksResolutionPolicy(const QString &conflicting_links_resolution_policy);
    bool is_conflicting_links_resolution_policy_Set() const;
    bool is_conflicting_links_resolution_policy_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    QString getPersona() const;
    void setPersona(const QString &persona);
    bool is_persona_Set() const;
    bool is_persona_Valid() const;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getTtl() const;
    void setTtl(const QString &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cardinality_constraint;
    bool m_cardinality_constraint_isSet;
    bool m_cardinality_constraint_isValid;

    QString m_conflicting_links_resolution_policy;
    bool m_conflicting_links_resolution_policy_isSet;
    bool m_conflicting_links_resolution_policy_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    QString m_persona;
    bool m_persona_isSet;
    bool m_persona_isValid;

    QString m_session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILinkPersonaRequest)

#endif // OAILinkPersonaRequest_H
