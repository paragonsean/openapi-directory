/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayerEvent.h
 *
 * An event status resource.
 */

#ifndef OAIPlayerEvent_H
#define OAIPlayerEvent_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlayerEvent : public OAIObject {
public:
    OAIPlayerEvent();
    OAIPlayerEvent(QString json);
    ~OAIPlayerEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefinitionId() const;
    void setDefinitionId(const QString &definition_id);
    bool is_definition_id_Set() const;
    bool is_definition_id_Valid() const;

    QString getFormattedNumEvents() const;
    void setFormattedNumEvents(const QString &formatted_num_events);
    bool is_formatted_num_events_Set() const;
    bool is_formatted_num_events_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getNumEvents() const;
    void setNumEvents(const QString &num_events);
    bool is_num_events_Set() const;
    bool is_num_events_Valid() const;

    QString getPlayerId() const;
    void setPlayerId(const QString &player_id);
    bool is_player_id_Set() const;
    bool is_player_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_definition_id;
    bool m_definition_id_isSet;
    bool m_definition_id_isValid;

    QString m_formatted_num_events;
    bool m_formatted_num_events_isSet;
    bool m_formatted_num_events_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_num_events;
    bool m_num_events_isSet;
    bool m_num_events_isValid;

    QString m_player_id;
    bool m_player_id_isSet;
    bool m_player_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayerEvent)

#endif // OAIPlayerEvent_H
