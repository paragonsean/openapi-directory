/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstance.h
 *
 * The Instance resource.
 */

#ifndef OAIInstance_H
#define OAIInstance_H

#include <QJsonObject>

#include "OAIInstanceAndroidDetails.h"
#include "OAIInstanceIosDetails.h"
#include "OAIInstanceWebDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstanceAndroidDetails;
class OAIInstanceIosDetails;
class OAIInstanceWebDetails;

class OAIInstance : public OAIObject {
public:
    OAIInstance();
    OAIInstance(QString json);
    ~OAIInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcquisitionUri() const;
    void setAcquisitionUri(const QString &acquisition_uri);
    bool is_acquisition_uri_Set() const;
    bool is_acquisition_uri_Valid() const;

    OAIInstanceAndroidDetails getAndroidInstance() const;
    void setAndroidInstance(const OAIInstanceAndroidDetails &android_instance);
    bool is_android_instance_Set() const;
    bool is_android_instance_Valid() const;

    OAIInstanceIosDetails getIosInstance() const;
    void setIosInstance(const OAIInstanceIosDetails &ios_instance);
    bool is_ios_instance_Set() const;
    bool is_ios_instance_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPlatformType() const;
    void setPlatformType(const QString &platform_type);
    bool is_platform_type_Set() const;
    bool is_platform_type_Valid() const;

    bool isRealtimePlay() const;
    void setRealtimePlay(const bool &realtime_play);
    bool is_realtime_play_Set() const;
    bool is_realtime_play_Valid() const;

    bool isTurnBasedPlay() const;
    void setTurnBasedPlay(const bool &turn_based_play);
    bool is_turn_based_play_Set() const;
    bool is_turn_based_play_Valid() const;

    OAIInstanceWebDetails getWebInstance() const;
    void setWebInstance(const OAIInstanceWebDetails &web_instance);
    bool is_web_instance_Set() const;
    bool is_web_instance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_acquisition_uri;
    bool m_acquisition_uri_isSet;
    bool m_acquisition_uri_isValid;

    OAIInstanceAndroidDetails m_android_instance;
    bool m_android_instance_isSet;
    bool m_android_instance_isValid;

    OAIInstanceIosDetails m_ios_instance;
    bool m_ios_instance_isSet;
    bool m_ios_instance_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_platform_type;
    bool m_platform_type_isSet;
    bool m_platform_type_isValid;

    bool m_realtime_play;
    bool m_realtime_play_isSet;
    bool m_realtime_play_isValid;

    bool m_turn_based_play;
    bool m_turn_based_play_isSet;
    bool m_turn_based_play_isValid;

    OAIInstanceWebDetails m_web_instance;
    bool m_web_instance_isSet;
    bool m_web_instance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstance)

#endif // OAIInstance_H
