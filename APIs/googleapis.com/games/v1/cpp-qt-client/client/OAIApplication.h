/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplication.h
 *
 * The Application resource.
 */

#ifndef OAIApplication_H
#define OAIApplication_H

#include <QJsonObject>

#include "OAIApplicationCategory.h"
#include "OAIImageAsset.h"
#include "OAIInstance.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageAsset;
class OAIApplicationCategory;
class OAIInstance;

class OAIApplication : public OAIObject {
public:
    OAIApplication();
    OAIApplication(QString json);
    ~OAIApplication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAchievementCount() const;
    void setAchievementCount(const qint32 &achievement_count);
    bool is_achievement_count_Set() const;
    bool is_achievement_count_Valid() const;

    QList<OAIImageAsset> getAssets() const;
    void setAssets(const QList<OAIImageAsset> &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAIApplicationCategory getCategory() const;
    void setCategory(const OAIApplicationCategory &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<QString> getEnabledFeatures() const;
    void setEnabledFeatures(const QList<QString> &enabled_features);
    bool is_enabled_features_Set() const;
    bool is_enabled_features_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIInstance> getInstances() const;
    void setInstances(const QList<OAIInstance> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLastUpdatedTimestamp() const;
    void setLastUpdatedTimestamp(const QString &last_updated_timestamp);
    bool is_last_updated_timestamp_Set() const;
    bool is_last_updated_timestamp_Valid() const;

    qint32 getLeaderboardCount() const;
    void setLeaderboardCount(const qint32 &leaderboard_count);
    bool is_leaderboard_count_Set() const;
    bool is_leaderboard_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getThemeColor() const;
    void setThemeColor(const QString &theme_color);
    bool is_theme_color_Set() const;
    bool is_theme_color_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_achievement_count;
    bool m_achievement_count_isSet;
    bool m_achievement_count_isValid;

    QList<OAIImageAsset> m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAIApplicationCategory m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<QString> m_enabled_features;
    bool m_enabled_features_isSet;
    bool m_enabled_features_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIInstance> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_last_updated_timestamp;
    bool m_last_updated_timestamp_isSet;
    bool m_last_updated_timestamp_isValid;

    qint32 m_leaderboard_count;
    bool m_leaderboard_count_isSet;
    bool m_leaderboard_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_theme_color;
    bool m_theme_color_isSet;
    bool m_theme_color_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplication)

#endif // OAIApplication_H
