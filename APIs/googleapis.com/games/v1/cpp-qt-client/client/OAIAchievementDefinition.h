/**
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAchievementDefinition.h
 *
 * An achievement definition object.
 */

#ifndef OAIAchievementDefinition_H
#define OAIAchievementDefinition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAchievementDefinition : public OAIObject {
public:
    OAIAchievementDefinition();
    OAIAchievementDefinition(QString json);
    ~OAIAchievementDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAchievementType() const;
    void setAchievementType(const QString &achievement_type);
    bool is_achievement_type_Set() const;
    bool is_achievement_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExperiencePoints() const;
    void setExperiencePoints(const QString &experience_points);
    bool is_experience_points_Set() const;
    bool is_experience_points_Valid() const;

    QString getFormattedTotalSteps() const;
    void setFormattedTotalSteps(const QString &formatted_total_steps);
    bool is_formatted_total_steps_Set() const;
    bool is_formatted_total_steps_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInitialState() const;
    void setInitialState(const QString &initial_state);
    bool is_initial_state_Set() const;
    bool is_initial_state_Valid() const;

    bool isIsRevealedIconUrlDefault() const;
    void setIsRevealedIconUrlDefault(const bool &is_revealed_icon_url_default);
    bool is_is_revealed_icon_url_default_Set() const;
    bool is_is_revealed_icon_url_default_Valid() const;

    bool isIsUnlockedIconUrlDefault() const;
    void setIsUnlockedIconUrlDefault(const bool &is_unlocked_icon_url_default);
    bool is_is_unlocked_icon_url_default_Set() const;
    bool is_is_unlocked_icon_url_default_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRevealedIconUrl() const;
    void setRevealedIconUrl(const QString &revealed_icon_url);
    bool is_revealed_icon_url_Set() const;
    bool is_revealed_icon_url_Valid() const;

    qint32 getTotalSteps() const;
    void setTotalSteps(const qint32 &total_steps);
    bool is_total_steps_Set() const;
    bool is_total_steps_Valid() const;

    QString getUnlockedIconUrl() const;
    void setUnlockedIconUrl(const QString &unlocked_icon_url);
    bool is_unlocked_icon_url_Set() const;
    bool is_unlocked_icon_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_achievement_type;
    bool m_achievement_type_isSet;
    bool m_achievement_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_experience_points;
    bool m_experience_points_isSet;
    bool m_experience_points_isValid;

    QString m_formatted_total_steps;
    bool m_formatted_total_steps_isSet;
    bool m_formatted_total_steps_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_initial_state;
    bool m_initial_state_isSet;
    bool m_initial_state_isValid;

    bool m_is_revealed_icon_url_default;
    bool m_is_revealed_icon_url_default_isSet;
    bool m_is_revealed_icon_url_default_isValid;

    bool m_is_unlocked_icon_url_default;
    bool m_is_unlocked_icon_url_default_isSet;
    bool m_is_unlocked_icon_url_default_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_revealed_icon_url;
    bool m_revealed_icon_url_isSet;
    bool m_revealed_icon_url_isValid;

    qint32 m_total_steps;
    bool m_total_steps_isSet;
    bool m_total_steps_isValid;

    QString m_unlocked_icon_url;
    bool m_unlocked_icon_url_isSet;
    bool m_unlocked_icon_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAchievementDefinition)

#endif // OAIAchievementDefinition_H
