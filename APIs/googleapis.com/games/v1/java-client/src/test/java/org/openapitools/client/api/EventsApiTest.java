/*
 * Google Play Game Services
 * The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.EventDefinitionListResponse;
import org.openapitools.client.model.EventRecordRequest;
import org.openapitools.client.model.EventUpdateResponse;
import org.openapitools.client.model.PlayerEventListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
@Disabled
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * Returns a list showing the current progress on events in this application for the currently authenticated user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gamesEventsListByPlayerTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String language = null;
        Integer maxResults = null;
        String pageToken = null;
        PlayerEventListResponse response = api.gamesEventsListByPlayer($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, language, maxResults, pageToken);
        // TODO: test validations
    }

    /**
     * Returns a list of the event definitions in this application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gamesEventsListDefinitionsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String language = null;
        Integer maxResults = null;
        String pageToken = null;
        EventDefinitionListResponse response = api.gamesEventsListDefinitions($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, language, maxResults, pageToken);
        // TODO: test validations
    }

    /**
     * Records a batch of changes to the number of times events have occurred for the currently authenticated user of this application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gamesEventsRecordTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String language = null;
        EventRecordRequest eventRecordRequest = null;
        EventUpdateResponse response = api.gamesEventsRecord($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, language, eventRecordRequest);
        // TODO: test validations
    }

}
