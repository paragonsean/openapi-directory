openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "The Google Play games service allows developers to enhance games with\
    \ social leaderboards, achievements, game state, sign-in with Google, and more."
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Play Game Services
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://games.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: games
externalDocs:
  url: https://developers.google.com/games/
servers:
- url: https://games.googleapis.com/
tags:
- name: achievementDefinitions
- name: achievements
- name: applications
- name: events
- name: leaderboards
- name: metagame
- name: players
- name: recall
- name: revisions
- name: scores
- name: snapshots
- name: stats
paths:
  /games/v1/achievements:
    get:
      description: Lists all the achievement definitions for your application.
      operationId: games.achievementDefinitions.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of achievement resources to return in the\
          \ response, used for paging. For any response, the actual number of achievement\
          \ resources returned may be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementDefinitionsListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - achievementDefinitions
      x-accepts:
      - application/json
  /games/v1/achievements/updateMultiple:
    post:
      description: Updates multiple achievements for the currently authenticated player.
      operationId: games.achievements.updateMultiple
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AchievementUpdateMultipleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementUpdateMultipleResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - achievements
      x-content-type: application/json
      x-accepts:
      - application/json
  /games/v1/achievements/{achievementId}/increment:
    post:
      description: Increments the steps of the achievement with the given ID for the
        currently authenticated player.
      operationId: games.achievements.increment
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the achievement used by this method.
        explode: false
        in: path
        name: achievementId
        required: true
        schema:
          type: string
        style: simple
      - description: Required. The number of steps to increment.
        explode: true
        in: query
        name: stepsToIncrement
        required: true
        schema:
          type: integer
        style: form
      - description: A randomly generated numeric ID for each request specified by
          the caller. This number is used at the server to ensure that the request
          is handled correctly across retries.
        explode: true
        in: query
        name: requestId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementIncrementResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - achievements
      x-accepts:
      - application/json
  /games/v1/achievements/{achievementId}/reveal:
    post:
      description: Sets the state of the achievement with the given ID to `REVEALED`
        for the currently authenticated player.
      operationId: games.achievements.reveal
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the achievement used by this method.
        explode: false
        in: path
        name: achievementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementRevealResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - achievements
      x-accepts:
      - application/json
  /games/v1/achievements/{achievementId}/setStepsAtLeast:
    post:
      description: "Sets the steps for the currently authenticated player towards\
        \ unlocking an achievement. If the steps parameter is less than the current\
        \ number of steps that the player already gained for the achievement, the\
        \ achievement is not modified."
      operationId: games.achievements.setStepsAtLeast
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the achievement used by this method.
        explode: false
        in: path
        name: achievementId
        required: true
        schema:
          type: string
        style: simple
      - description: Required. The minimum value to set the steps to.
        explode: true
        in: query
        name: steps
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementSetStepsAtLeastResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - achievements
      x-accepts:
      - application/json
  /games/v1/achievements/{achievementId}/unlock:
    post:
      description: Unlocks this achievement for the currently authenticated player.
      operationId: games.achievements.unlock
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the achievement used by this method.
        explode: false
        in: path
        name: achievementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementUnlockResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - achievements
      x-accepts:
      - application/json
  /games/v1/applications/getEndPoint:
    post:
      description: Returns a URL for the requested end point type.
      operationId: games.applications.getEndPoint
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The application ID from the Google Play developer console.
        explode: true
        in: query
        name: applicationId
        required: false
        schema:
          type: string
        style: form
      - description: Type of endpoint being requested.
        explode: true
        in: query
        name: endPointType
        required: false
        schema:
          enum:
          - PROFILE_CREATION
          - PROFILE_SETTINGS
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndPoint'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - applications
      x-accepts:
      - application/json
  /games/v1/applications/played:
    post:
      description: Indicate that the currently authenticated user is playing your
        application.
      operationId: games.applications.played
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - applications
      x-accepts:
      - application/json
  /games/v1/applications/{applicationId}:
    get:
      description: "Retrieves the metadata of the application with the given ID. If\
        \ the requested application is not available for the specified `platformType`,\
        \ the returned response will not include any instance data."
      operationId: games.applications.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The application ID from the Google Play developer console.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: Restrict application details returned to the specific platform.
        explode: true
        in: query
        name: platformType
        required: false
        schema:
          enum:
          - ANDROID
          - IOS
          - WEB_APP
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - applications
      x-accepts:
      - application/json
  /games/v1/applications/{applicationId}/verify:
    get:
      description: "Verifies the auth token provided with this request is for the\
        \ application with the specified ID, and returns the ID of the player it was\
        \ granted for."
      operationId: games.applications.verify
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The application ID from the Google Play developer console.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVerifyResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - applications
      x-accepts:
      - application/json
  /games/v1/eventDefinitions:
    get:
      description: Returns a list of the event definitions in this application.
      operationId: games.events.listDefinitions
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of event definitions to return in the response,\
          \ used for paging. For any response, the actual number of event definitions\
          \ to return may be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDefinitionListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - events
      x-accepts:
      - application/json
  /games/v1/events:
    get:
      description: Returns a list showing the current progress on events in this application
        for the currently authenticated user.
      operationId: games.events.listByPlayer
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of events to return in the response, used\
          \ for paging. For any response, the actual number of events to return may\
          \ be less than the specified maxResults."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerEventListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - events
      x-accepts:
      - application/json
    post:
      description: Records a batch of changes to the number of times events have occurred
        for the currently authenticated user of this application.
      operationId: games.events.record
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRecordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventUpdateResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - events
      x-content-type: application/json
      x-accepts:
      - application/json
  /games/v1/leaderboards:
    get:
      description: Lists all the leaderboard metadata for your application.
      operationId: games.leaderboards.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of leaderboards to return in the response.\
          \ For any response, the actual number of leaderboards returned may be less\
          \ than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - leaderboards
      x-accepts:
      - application/json
  /games/v1/leaderboards/scores:
    post:
      description: Submits multiple scores to leaderboards.
      operationId: games.scores.submitMultiple
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerScoreSubmissionList'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerScoreListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - scores
      x-content-type: application/json
      x-accepts:
      - application/json
  /games/v1/leaderboards/{leaderboardId}:
    get:
      description: Retrieves the metadata of the leaderboard with the given ID.
      operationId: games.leaderboards.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the leaderboard.
        explode: false
        in: path
        name: leaderboardId
        required: true
        schema:
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leaderboard'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - leaderboards
      x-accepts:
      - application/json
  /games/v1/leaderboards/{leaderboardId}/scores:
    post:
      description: Submits a score to the specified leaderboard.
      operationId: games.scores.submit
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the leaderboard.
        explode: false
        in: path
        name: leaderboardId
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The score you're submitting. The submitted score is\
          \ ignored if it is worse than a previously submitted score, where worse\
          \ depends on the leaderboard sort order. The meaning of the score value\
          \ depends on the leaderboard format type. For fixed-point, the score represents\
          \ the raw value. For time, the score represents elapsed time in milliseconds.\
          \ For currency, the score represents a value in micro units."
        explode: true
        in: query
        name: score
        required: true
        schema:
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: Additional information about the score you're submitting. Values
          must contain no more than 64 URI-safe characters as defined by section 2.3
          of RFC 3986.
        explode: true
        in: query
        name: scoreTag
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerScoreResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - scores
      x-accepts:
      - application/json
  /games/v1/leaderboards/{leaderboardId}/scores/{collection}:
    get:
      description: "Lists the scores in a leaderboard, starting from the top."
      operationId: games.scores.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the leaderboard.
        explode: false
        in: path
        name: leaderboardId
        required: true
        schema:
          type: string
        style: simple
      - description: The collection of scores you're requesting.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - PUBLIC
          - SOCIAL
          - FRIENDS
          type: string
        style: simple
      - description: Required. The time span for the scores and ranks you're requesting.
        explode: true
        in: query
        name: timeSpan
        required: true
        schema:
          enum:
          - ALL_TIME
          - WEEKLY
          - DAILY
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of leaderboard scores to return in the response.\
          \ For any response, the actual number of leaderboard scores returned may\
          \ be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardScores'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - scores
      x-accepts:
      - application/json
  /games/v1/leaderboards/{leaderboardId}/window/{collection}:
    get:
      description: Lists the scores in a leaderboard around (and including) a player's
        score.
      operationId: games.scores.listWindow
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the leaderboard.
        explode: false
        in: path
        name: leaderboardId
        required: true
        schema:
          type: string
        style: simple
      - description: The collection of scores you're requesting.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - PUBLIC
          - SOCIAL
          - FRIENDS
          type: string
        style: simple
      - description: Required. The time span for the scores and ranks you're requesting.
        explode: true
        in: query
        name: timeSpan
        required: true
        schema:
          enum:
          - ALL_TIME
          - WEEKLY
          - DAILY
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of leaderboard scores to return in the response.\
          \ For any response, the actual number of leaderboard scores returned may\
          \ be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: The preferred number of scores to return above the player's score.
          More scores may be returned if the player is at the bottom of the leaderboard;
          fewer may be returned if the player is at the top. Must be less than or
          equal to maxResults.
        explode: true
        in: query
        name: resultsAbove
        required: false
        schema:
          type: integer
        style: form
      - description: True if the top scores should be returned when the player is
          not in the leaderboard. Defaults to true.
        explode: true
        in: query
        name: returnTopIfAbsent
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardScores'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - scores
      x-accepts:
      - application/json
  /games/v1/metagameConfig:
    get:
      description: Return the metagame configuration data for the calling application.
      operationId: games.metagame.getMetagameConfig
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetagameConfig'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - metagame
      x-accepts:
      - application/json
  /games/v1/players/me/multipleApplicationPlayerIds:
    get:
      description: Get the application player ids for the currently authenticated
        player across all requested games by the same developer as the calling application.
        This will only return ids for players that actually have an id (scoped or
        otherwise) with that game.
      operationId: games.players.getMultipleApplicationPlayerIds
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The application IDs from the Google Play developer
          console for the games to return scoped ids for.
        explode: true
        in: query
        name: applicationIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMultipleApplicationPlayerIdsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - players
      x-accepts:
      - application/json
  /games/v1/players/me/players/{collection}:
    get:
      description: Get the collection of players for the currently authenticated user.
      operationId: games.players.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Collection of players being retrieved
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - CONNECTED
          - VISIBLE
          - FRIENDS_ALL
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of player resources to return in the response,\
          \ used for paging. For any response, the actual number of player resources\
          \ returned may be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - players
      x-accepts:
      - application/json
  /games/v1/players/me/scopedIds:
    get:
      description: Retrieves scoped player identifiers for currently authenticated
        user.
      operationId: games.players.getScopedPlayerIds
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedPlayerIds'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - players
      x-accepts:
      - application/json
  /games/v1/players/{playerId}:
    get:
      description: "Retrieves the Player resource with the given ID. To retrieve the\
        \ player for the currently authenticated user, set `playerId` to `me`."
      operationId: games.players.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: A player ID. A value of `me` may be used in place of the authenticated
          player's ID.
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: Consistency token of the player id. The call returns a 'not found'
          result when the token is present and invalid. Empty value is ignored. See
          also GlobalPlayerIdConsistencyTokenProto
        explode: true
        in: query
        name: playerIdConsistencyToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - players
      x-accepts:
      - application/json
  /games/v1/players/{playerId}/achievements:
    get:
      description: Lists the progress for all your application's achievements for
        the currently authenticated player.
      operationId: games.achievements.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: A player ID. A value of `me` may be used in place of the authenticated
          player's ID.
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of achievement resources to return in the\
          \ response, used for paging. For any response, the actual number of achievement\
          \ resources returned may be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "Tells the server to return only achievements with the specified\
          \ state. If this parameter isn't specified, all achievements are returned."
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - ALL
          - HIDDEN
          - REVEALED
          - UNLOCKED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerAchievementListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - achievements
      x-accepts:
      - application/json
  /games/v1/players/{playerId}/categories/{collection}:
    get:
      description: List play data aggregated per category for the player corresponding
        to `playerId`.
      operationId: games.metagame.listCategoriesByPlayer
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: A player ID. A value of `me` may be used in place of the authenticated
          player's ID.
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: string
        style: simple
      - description: The collection of categories for which data will be returned.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - ALL
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of category resources to return in the response,\
          \ used for paging. For any response, the actual number of category resources\
          \ returned may be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - metagame
      x-accepts:
      - application/json
  /games/v1/players/{playerId}/leaderboards/{leaderboardId}/scores/{timeSpan}:
    get:
      description: "Get high scores, and optionally ranks, in leaderboards for the\
        \ currently authenticated player. For a specific time span, `leaderboardId`\
        \ can be set to `ALL` to retrieve data for all leaderboards in a given time\
        \ span. `NOTE: You cannot ask for 'ALL' leaderboards and 'ALL' timeSpans in\
        \ the same request; only one parameter may be set to 'ALL'."
      operationId: games.scores.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: A player ID. A value of `me` may be used in place of the authenticated
          player's ID.
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the leaderboard. Can be set to 'ALL' to retrieve data
          for all leaderboards for this application.
        explode: false
        in: path
        name: leaderboardId
        required: true
        schema:
          type: string
        style: simple
      - description: The time span for the scores and ranks you're requesting.
        explode: false
        in: path
        name: timeSpan
        required: true
        schema:
          enum:
          - ALL
          - ALL_TIME
          - WEEKLY
          - DAILY
          type: string
        style: simple
      - description: "The types of ranks to return. If the parameter is omitted, no\
          \ ranks will be returned."
        explode: true
        in: query
        name: includeRankType
        required: false
        schema:
          enum:
          - ALL
          - PUBLIC
          - SOCIAL
          - FRIENDS
          type: string
        style: form
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of leaderboard scores to return in the response.\
          \ For any response, the actual number of leaderboard scores returned may\
          \ be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerLeaderboardScoreListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - scores
      x-accepts:
      - application/json
  /games/v1/players/{playerId}/snapshots:
    get:
      description: Retrieves a list of snapshots created by your application for the
        player corresponding to the player ID.
      operationId: games.snapshots.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: A player ID. A value of `me` may be used in place of the authenticated
          player's ID.
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of snapshot resources to return in the response,\
          \ used for paging. For any response, the actual number of snapshot resources\
          \ returned may be less than the specified `maxResults`."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The token returned by the previous request.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotListResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive.appdata
        Oauth2c:
        - https://www.googleapis.com/auth/drive.appdata
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - snapshots
      x-accepts:
      - application/json
  /games/v1/recall/tokens/{sessionId}:
    get:
      description: Retrieve all Recall tokens associated with the PGS Player principal
        encoded in the provided recall session id. The API is only available for users
        that have active PGS Player profile.
      operationId: games.recall.retrieveTokens
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. Opaque server-generated string that encodes all the
          necessary information to identify the PGS player / Google user and application.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrievePlayerTokensResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/androidpublisher
        Oauth2c:
        - https://www.googleapis.com/auth/androidpublisher
      tags:
      - recall
      x-accepts:
      - application/json
  /games/v1/recall:linkPersona:
    post:
      description: Associate the PGS Player principal encoded in the provided recall
        session id with an in-game account
      operationId: games.recall.linkPersona
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkPersonaRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkPersonaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/androidpublisher
        Oauth2c:
        - https://www.googleapis.com/auth/androidpublisher
      tags:
      - recall
      x-content-type: application/json
      x-accepts:
      - application/json
  /games/v1/recall:resetPersona:
    post:
      description: Delete all Recall tokens linking the given persona to any player
        (with or without a profile).
      operationId: games.recall.resetPersona
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPersonaRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPersonaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/androidpublisher
        Oauth2c:
        - https://www.googleapis.com/auth/androidpublisher
      tags:
      - recall
      x-content-type: application/json
      x-accepts:
      - application/json
  /games/v1/recall:unlinkPersona:
    post:
      description: Delete a Recall token linking the PGS Player principal identified
        by the Recall session and an in-game account identified either by the 'persona'
        or by the token value.
      operationId: games.recall.unlinkPersona
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnlinkPersonaRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnlinkPersonaResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/androidpublisher
        Oauth2c:
        - https://www.googleapis.com/auth/androidpublisher
      tags:
      - recall
      x-content-type: application/json
      x-accepts:
      - application/json
  /games/v1/revisions/check:
    get:
      description: Checks whether the games client is out of date.
      operationId: games.revisions.check
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The revision of the client SDK used by your application.\
          \ Format: `[PLATFORM_TYPE]:[VERSION_NUMBER]`. Possible values of `PLATFORM_TYPE`\
          \ are: * `ANDROID` - Client is running the Android SDK. * `IOS` - Client\
          \ is running the iOS SDK. * `WEB_APP` - Client is running as a Web App."
        explode: true
        in: query
        name: clientRevision
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionCheckResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - revisions
      x-accepts:
      - application/json
  /games/v1/snapshots/{snapshotId}:
    get:
      description: Retrieves the metadata for a given snapshot ID.
      operationId: games.snapshots.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the snapshot.
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          type: string
        style: simple
      - description: The preferred language to use for strings returned by this method.
        explode: true
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive.appdata
        Oauth2c:
        - https://www.googleapis.com/auth/drive.appdata
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - snapshots
      x-accepts:
      - application/json
  /games/v1/stats:
    get:
      description: Returns engagement and spend statistics in this application for
        the currently authenticated user.
      operationId: games.stats.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/games
        Oauth2c:
        - https://www.googleapis.com/auth/games
      tags:
      - stats
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AchievementDefinition:
      description: An achievement definition object.
      example:
        achievementType: STANDARD
        initialState: HIDDEN
        isUnlockedIconUrlDefault: true
        kind: kind
        experiencePoints: experiencePoints
        totalSteps: 0
        description: description
        formattedTotalSteps: formattedTotalSteps
        unlockedIconUrl: unlockedIconUrl
        name: name
        revealedIconUrl: revealedIconUrl
        id: id
        isRevealedIconUrlDefault: true
      properties:
        achievementType:
          description: The type of the achievement.
          enum:
          - STANDARD
          - INCREMENTAL
          type: string
        description:
          description: The description of the achievement.
          type: string
        experiencePoints:
          description: Experience points which will be earned when unlocking this
            achievement.
          format: int64
          type: string
        formattedTotalSteps:
          description: The total steps for an incremental achievement as a string.
          type: string
        id:
          description: The ID of the achievement.
          type: string
        initialState:
          description: The initial state of the achievement.
          enum:
          - HIDDEN
          - REVEALED
          - UNLOCKED
          type: string
        isRevealedIconUrlDefault:
          description: "Indicates whether the revealed icon image being returned is\
            \ a default image, or is provided by the game."
          type: boolean
        isUnlockedIconUrlDefault:
          description: "Indicates whether the unlocked icon image being returned is\
            \ a default image, or is game-provided."
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementDefinition`.
          type: string
        name:
          description: The name of the achievement.
          type: string
        revealedIconUrl:
          description: The image URL for the revealed achievement icon.
          type: string
        totalSteps:
          description: The total steps for an incremental achievement.
          format: int32
          type: integer
        unlockedIconUrl:
          description: The image URL for the unlocked achievement icon.
          type: string
      type: object
    AchievementDefinitionsListResponse:
      description: A list of achievement definition objects.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - achievementType: STANDARD
          initialState: HIDDEN
          isUnlockedIconUrlDefault: true
          kind: kind
          experiencePoints: experiencePoints
          totalSteps: 0
          description: description
          formattedTotalSteps: formattedTotalSteps
          unlockedIconUrl: unlockedIconUrl
          name: name
          revealedIconUrl: revealedIconUrl
          id: id
          isRevealedIconUrlDefault: true
        - achievementType: STANDARD
          initialState: HIDDEN
          isUnlockedIconUrlDefault: true
          kind: kind
          experiencePoints: experiencePoints
          totalSteps: 0
          description: description
          formattedTotalSteps: formattedTotalSteps
          unlockedIconUrl: unlockedIconUrl
          name: name
          revealedIconUrl: revealedIconUrl
          id: id
          isRevealedIconUrlDefault: true
      properties:
        items:
          description: The achievement definitions.
          items:
            $ref: '#/components/schemas/AchievementDefinition'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementDefinitionsListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    AchievementIncrementResponse:
      description: An achievement increment response
      example:
        kind: kind
        currentSteps: 0
        newlyUnlocked: true
      properties:
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementIncrementResponse`.
          type: string
        newlyUnlocked:
          description: Whether the current steps for the achievement has reached the
            number of steps required to unlock.
          type: boolean
      type: object
    AchievementRevealResponse:
      description: An achievement reveal response
      example:
        kind: kind
        currentState: REVEALED
      properties:
        currentState:
          description: The current state of the achievement for which a reveal was
            attempted. This might be `UNLOCKED` if the achievement was already unlocked.
          enum:
          - REVEALED
          - UNLOCKED
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementRevealResponse`.
          type: string
      type: object
    AchievementSetStepsAtLeastResponse:
      description: An achievement set steps at least response.
      example:
        kind: kind
        currentSteps: 0
        newlyUnlocked: true
      properties:
        currentSteps:
          description: The current steps recorded for this incremental achievement.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementSetStepsAtLeastResponse`.
          type: string
        newlyUnlocked:
          description: Whether the current steps for the achievement has reached the
            number of steps required to unlock.
          type: boolean
      type: object
    AchievementUnlockResponse:
      description: An achievement unlock response
      example:
        kind: kind
        newlyUnlocked: true
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementUnlockResponse`.
          type: string
        newlyUnlocked:
          description: "Whether this achievement was newly unlocked (that is, whether\
            \ the unlock request for the achievement was the first for the player)."
          type: boolean
      type: object
    AchievementUpdateMultipleRequest:
      description: A list of achievement update requests.
      example:
        kind: kind
        updates:
        - incrementPayload:
            kind: kind
            requestId: requestId
            steps: 0
          kind: kind
          achievementId: achievementId
          setStepsAtLeastPayload:
            kind: kind
            steps: 6
          updateType: REVEAL
        - incrementPayload:
            kind: kind
            requestId: requestId
            steps: 0
          kind: kind
          achievementId: achievementId
          setStepsAtLeastPayload:
            kind: kind
            steps: 6
          updateType: REVEAL
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementUpdateMultipleRequest`.
          type: string
        updates:
          description: The individual achievement update requests.
          items:
            $ref: '#/components/schemas/AchievementUpdateRequest'
          type: array
      type: object
    AchievementUpdateMultipleResponse:
      description: Response message for UpdateMultipleAchievements rpc.
      example:
        updatedAchievements:
        - updateOccurred: true
          kind: kind
          achievementId: achievementId
          currentSteps: 0
          currentState: HIDDEN
          newlyUnlocked: true
        - updateOccurred: true
          kind: kind
          achievementId: achievementId
          currentSteps: 0
          currentState: HIDDEN
          newlyUnlocked: true
        kind: kind
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementUpdateMultipleResponse`.
          type: string
        updatedAchievements:
          description: The updated state of the achievements.
          items:
            $ref: '#/components/schemas/AchievementUpdateResponse'
          type: array
      type: object
    AchievementUpdateRequest:
      description: A request to update an achievement.
      example:
        incrementPayload:
          kind: kind
          requestId: requestId
          steps: 0
        kind: kind
        achievementId: achievementId
        setStepsAtLeastPayload:
          kind: kind
          steps: 6
        updateType: REVEAL
      properties:
        achievementId:
          description: The achievement this update is being applied to.
          type: string
        incrementPayload:
          $ref: '#/components/schemas/GamesAchievementIncrement'
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementUpdateRequest`.
          type: string
        setStepsAtLeastPayload:
          $ref: '#/components/schemas/GamesAchievementSetStepsAtLeast'
        updateType:
          description: The type of update being applied.
          enum:
          - REVEAL
          - UNLOCK
          - INCREMENT
          - SET_STEPS_AT_LEAST
          type: string
      type: object
    AchievementUpdateResponse:
      description: An updated achievement.
      example:
        updateOccurred: true
        kind: kind
        achievementId: achievementId
        currentSteps: 0
        currentState: HIDDEN
        newlyUnlocked: true
      properties:
        achievementId:
          description: The achievement this update is was applied to.
          type: string
        currentState:
          description: The current state of the achievement.
          enum:
          - HIDDEN
          - REVEALED
          - UNLOCKED
          type: string
        currentSteps:
          description: The current steps recorded for this achievement if it is incremental.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#achievementUpdateResponse`.
          type: string
        newlyUnlocked:
          description: "Whether this achievement was newly unlocked (that is, whether\
            \ the unlock request for the achievement was the first for the player)."
          type: boolean
        updateOccurred:
          description: Whether the requested updates actually affected the achievement.
          type: boolean
      type: object
    Application:
      description: The Application resource.
      example:
        lastUpdatedTimestamp: lastUpdatedTimestamp
        enabledFeatures:
        - SNAPSHOTS
        - SNAPSHOTS
        instances:
        - acquisitionUri: acquisitionUri
          turnBasedPlay: true
          webInstance:
            kind: kind
            launchUrl: launchUrl
            preferred: true
          iosInstance:
            preferredForIphone: true
            kind: kind
            preferredForIpad: true
            supportIphone: true
            bundleIdentifier: bundleIdentifier
            supportIpad: true
            itunesAppId: itunesAppId
          kind: kind
          name: name
          platformType: ANDROID
          androidInstance:
            kind: kind
            enablePiracyCheck: true
            packageName: packageName
            preferred: true
          realtimePlay: true
        - acquisitionUri: acquisitionUri
          turnBasedPlay: true
          webInstance:
            kind: kind
            launchUrl: launchUrl
            preferred: true
          iosInstance:
            preferredForIphone: true
            kind: kind
            preferredForIpad: true
            supportIphone: true
            bundleIdentifier: bundleIdentifier
            supportIpad: true
            itunesAppId: itunesAppId
          kind: kind
          name: name
          platformType: ANDROID
          androidInstance:
            kind: kind
            enablePiracyCheck: true
            packageName: packageName
            preferred: true
          realtimePlay: true
        author: author
        kind: kind
        description: description
        assets:
        - kind: kind
          name: name
          width: 1
          url: url
          height: 6
        - kind: kind
          name: name
          width: 1
          url: url
          height: 6
        achievement_count: 0
        themeColor: themeColor
        name: name
        leaderboard_count: 5
        id: id
        category:
          secondary: secondary
          kind: kind
          primary: primary
      properties:
        achievement_count:
          description: The number of achievements visible to the currently authenticated
            player.
          format: int32
          type: integer
        assets:
          description: The assets of the application.
          items:
            $ref: '#/components/schemas/ImageAsset'
          type: array
        author:
          description: The author of the application.
          type: string
        category:
          $ref: '#/components/schemas/ApplicationCategory'
        description:
          description: The description of the application.
          type: string
        enabledFeatures:
          description: A list of features that have been enabled for the application.
          items:
            enum:
            - SNAPSHOTS
            type: string
          type: array
        id:
          description: The ID of the application.
          type: string
        instances:
          description: The instances of the application.
          items:
            $ref: '#/components/schemas/Instance'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#application`.
          type: string
        lastUpdatedTimestamp:
          description: The last updated timestamp of the application.
          format: int64
          type: string
        leaderboard_count:
          description: The number of leaderboards visible to the currently authenticated
            player.
          format: int32
          type: integer
        name:
          description: The name of the application.
          type: string
        themeColor:
          description: A hint to the client UI for what color to use as an app-themed
            color. The color is given as an RGB triplet (e.g. "E0E0E0").
          type: string
      type: object
    ApplicationCategory:
      description: An application category object.
      example:
        secondary: secondary
        kind: kind
        primary: primary
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#applicationCategory`.
          type: string
        primary:
          description: The primary category.
          type: string
        secondary:
          description: The secondary category.
          type: string
      type: object
    ApplicationPlayerId:
      description: Primary scoped player identifier for an application.
      example:
        applicationId: applicationId
        playerId: playerId
      properties:
        applicationId:
          description: The application that this player identifier is for.
          type: string
        playerId:
          description: The player identifier for the application.
          type: string
      type: object
    ApplicationVerifyResponse:
      description: A third party application verification response resource.
      example:
        player_id: player_id
        kind: kind
        alternate_player_id: alternate_player_id
      properties:
        alternate_player_id:
          description: An alternate ID that was once used for the player that was
            issued the auth token used in this request. (This field is not normally
            populated.)
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#applicationVerifyResponse`.
          type: string
        player_id:
          description: The ID of the player that was issued the auth token used in
            this request.
          type: string
      type: object
    Category:
      description: Data related to individual game categories.
      example:
        kind: kind
        experiencePoints: experiencePoints
        category: category
      properties:
        category:
          description: The category name.
          type: string
        experiencePoints:
          description: Experience points earned in this category.
          format: int64
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#category`.
          type: string
      type: object
    CategoryListResponse:
      description: A third party list metagame categories response.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - kind: kind
          experiencePoints: experiencePoints
          category: category
        - kind: kind
          experiencePoints: experiencePoints
          category: category
      properties:
        items:
          description: The list of categories with usage data.
          items:
            $ref: '#/components/schemas/Category'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#categoryListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    EndPoint:
      description: Container for a URL end point of the requested type.
      example:
        url: url
      properties:
        url:
          description: A URL suitable for loading in a web browser for the requested
            endpoint.
          type: string
      type: object
    EventBatchRecordFailure:
      description: A batch update failure resource.
      example:
        kind: kind
        range:
          periodEndMillis: periodEndMillis
          periodStartMillis: periodStartMillis
          kind: kind
        failureCause: TOO_LARGE
      properties:
        failureCause:
          description: The cause for the update failure.
          enum:
          - TOO_LARGE
          - TIME_PERIOD_EXPIRED
          - TIME_PERIOD_SHORT
          - TIME_PERIOD_LONG
          - ALREADY_UPDATED
          - RECORD_RATE_HIGH
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventBatchRecordFailure`.
          type: string
        range:
          $ref: '#/components/schemas/EventPeriodRange'
      type: object
    EventChild:
      description: An event child relationship resource.
      example:
        kind: kind
        childId: childId
      properties:
        childId:
          description: The ID of the child event.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventChild`.
          type: string
      type: object
    EventDefinition:
      description: An event definition resource.
      example:
        visibility: REVEALED
        childEvents:
        - kind: kind
          childId: childId
        - kind: kind
          childId: childId
        displayName: displayName
        kind: kind
        imageUrl: imageUrl
        description: description
        isDefaultImageUrl: true
        id: id
      properties:
        childEvents:
          description: A list of events that are a child of this event.
          items:
            $ref: '#/components/schemas/EventChild'
          type: array
        description:
          description: Description of what this event represents.
          type: string
        displayName:
          description: The name to display for the event.
          type: string
        id:
          description: The ID of the event.
          type: string
        imageUrl:
          description: The base URL for the image that represents the event.
          type: string
        isDefaultImageUrl:
          description: "Indicates whether the icon image being returned is a default\
            \ image, or is game-provided."
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventDefinition`.
          type: string
        visibility:
          description: The visibility of event being tracked in this definition.
          enum:
          - REVEALED
          - HIDDEN
          type: string
      type: object
    EventDefinitionListResponse:
      description: A ListDefinitions response.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - visibility: REVEALED
          childEvents:
          - kind: kind
            childId: childId
          - kind: kind
            childId: childId
          displayName: displayName
          kind: kind
          imageUrl: imageUrl
          description: description
          isDefaultImageUrl: true
          id: id
        - visibility: REVEALED
          childEvents:
          - kind: kind
            childId: childId
          - kind: kind
            childId: childId
          displayName: displayName
          kind: kind
          imageUrl: imageUrl
          description: description
          isDefaultImageUrl: true
          id: id
      properties:
        items:
          description: The event definitions.
          items:
            $ref: '#/components/schemas/EventDefinition'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventDefinitionListResponse`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    EventPeriodRange:
      description: An event period time range.
      example:
        periodEndMillis: periodEndMillis
        periodStartMillis: periodStartMillis
        kind: kind
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventPeriodRange`.
          type: string
        periodEndMillis:
          description: "The time when this update period ends, in millis, since 1970\
            \ UTC (Unix Epoch)."
          format: int64
          type: string
        periodStartMillis:
          description: "The time when this update period begins, in millis, since\
            \ 1970 UTC (Unix Epoch)."
          format: int64
          type: string
      type: object
    EventPeriodUpdate:
      description: An event period update resource.
      example:
        kind: kind
        timePeriod:
          periodEndMillis: periodEndMillis
          periodStartMillis: periodStartMillis
          kind: kind
        updates:
        - updateCount: updateCount
          kind: kind
          definitionId: definitionId
        - updateCount: updateCount
          kind: kind
          definitionId: definitionId
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventPeriodUpdate`.
          type: string
        timePeriod:
          $ref: '#/components/schemas/EventPeriodRange'
        updates:
          description: The updates being made for this time period.
          items:
            $ref: '#/components/schemas/EventUpdateRequest'
          type: array
      type: object
    EventRecordFailure:
      description: An event update failure resource.
      example:
        eventId: eventId
        kind: kind
        failureCause: NOT_FOUND
      properties:
        eventId:
          description: The ID of the event that was not updated.
          type: string
        failureCause:
          description: The cause for the update failure.
          enum:
          - NOT_FOUND
          - INVALID_UPDATE_VALUE
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventRecordFailure`.
          type: string
      type: object
    EventRecordRequest:
      description: An event period update resource.
      example:
        kind: kind
        requestId: requestId
        currentTimeMillis: currentTimeMillis
        timePeriods:
        - kind: kind
          timePeriod:
            periodEndMillis: periodEndMillis
            periodStartMillis: periodStartMillis
            kind: kind
          updates:
          - updateCount: updateCount
            kind: kind
            definitionId: definitionId
          - updateCount: updateCount
            kind: kind
            definitionId: definitionId
        - kind: kind
          timePeriod:
            periodEndMillis: periodEndMillis
            periodStartMillis: periodStartMillis
            kind: kind
          updates:
          - updateCount: updateCount
            kind: kind
            definitionId: definitionId
          - updateCount: updateCount
            kind: kind
            definitionId: definitionId
      properties:
        currentTimeMillis:
          description: "The current time when this update was sent, in milliseconds,\
            \ since 1970 UTC (Unix Epoch)."
          format: int64
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventRecordRequest`.
          type: string
        requestId:
          description: The request ID used to identify this attempt to record events.
          format: int64
          type: string
        timePeriods:
          description: A list of the time period updates being made in this request.
          items:
            $ref: '#/components/schemas/EventPeriodUpdate'
          type: array
      type: object
    EventUpdateRequest:
      description: An event period update resource.
      example:
        updateCount: updateCount
        kind: kind
        definitionId: definitionId
      properties:
        definitionId:
          description: The ID of the event being modified in this update.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventUpdateRequest`.
          type: string
        updateCount:
          description: The number of times this event occurred in this time period.
          format: int64
          type: string
      type: object
    EventUpdateResponse:
      description: An event period update resource.
      example:
        eventFailures:
        - eventId: eventId
          kind: kind
          failureCause: NOT_FOUND
        - eventId: eventId
          kind: kind
          failureCause: NOT_FOUND
        batchFailures:
        - kind: kind
          range:
            periodEndMillis: periodEndMillis
            periodStartMillis: periodStartMillis
            kind: kind
          failureCause: TOO_LARGE
        - kind: kind
          range:
            periodEndMillis: periodEndMillis
            periodStartMillis: periodStartMillis
            kind: kind
          failureCause: TOO_LARGE
        playerEvents:
        - formattedNumEvents: formattedNumEvents
          kind: kind
          numEvents: numEvents
          definitionId: definitionId
          playerId: playerId
        - formattedNumEvents: formattedNumEvents
          kind: kind
          numEvents: numEvents
          definitionId: definitionId
          playerId: playerId
        kind: kind
      properties:
        batchFailures:
          description: Any batch-wide failures which occurred applying updates.
          items:
            $ref: '#/components/schemas/EventBatchRecordFailure'
          type: array
        eventFailures:
          description: Any failures updating a particular event.
          items:
            $ref: '#/components/schemas/EventRecordFailure'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#eventUpdateResponse`.
          type: string
        playerEvents:
          description: The current status of any updated events
          items:
            $ref: '#/components/schemas/PlayerEvent'
          type: array
      type: object
    GamesAchievementIncrement:
      description: The payload to request to increment an achievement.
      example:
        kind: kind
        requestId: requestId
        steps: 0
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#GamesAchievementIncrement`.
          type: string
        requestId:
          description: The requestId associated with an increment to an achievement.
          format: int64
          type: string
        steps:
          description: The number of steps to be incremented.
          format: int32
          type: integer
      type: object
    GamesAchievementSetStepsAtLeast:
      description: The payload to request to increment an achievement.
      example:
        kind: kind
        steps: 6
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#GamesAchievementSetStepsAtLeast`.
          type: string
        steps:
          description: The minimum number of steps for the achievement to be set to.
          format: int32
          type: integer
      type: object
    GetMultipleApplicationPlayerIdsResponse:
      description: Response message for GetMultipleApplicationPlayerIds rpc.
      example:
        playerIds:
        - applicationId: applicationId
          playerId: playerId
        - applicationId: applicationId
          playerId: playerId
      properties:
        playerIds:
          description: "Output only. The requested applications along with the scoped\
            \ ids for tha player, if that player has an id for the application. If\
            \ not, the application is not included in the response."
          items:
            $ref: '#/components/schemas/ApplicationPlayerId'
          readOnly: true
          type: array
      type: object
    ImageAsset:
      description: An image asset object.
      example:
        kind: kind
        name: name
        width: 1
        url: url
        height: 6
      properties:
        height:
          description: The height of the asset.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#imageAsset`.
          type: string
        name:
          description: The name of the asset.
          type: string
        url:
          description: The URL of the asset.
          type: string
        width:
          description: The width of the asset.
          format: int32
          type: integer
      type: object
    Instance:
      description: The Instance resource.
      example:
        acquisitionUri: acquisitionUri
        turnBasedPlay: true
        webInstance:
          kind: kind
          launchUrl: launchUrl
          preferred: true
        iosInstance:
          preferredForIphone: true
          kind: kind
          preferredForIpad: true
          supportIphone: true
          bundleIdentifier: bundleIdentifier
          supportIpad: true
          itunesAppId: itunesAppId
        kind: kind
        name: name
        platformType: ANDROID
        androidInstance:
          kind: kind
          enablePiracyCheck: true
          packageName: packageName
          preferred: true
        realtimePlay: true
      properties:
        acquisitionUri:
          description: URI which shows where a user can acquire this instance.
          type: string
        androidInstance:
          $ref: '#/components/schemas/InstanceAndroidDetails'
        iosInstance:
          $ref: '#/components/schemas/InstanceIosDetails'
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#instance`.
          type: string
        name:
          description: Localized display name.
          type: string
        platformType:
          description: The platform type.
          enum:
          - ANDROID
          - IOS
          - WEB_APP
          type: string
        realtimePlay:
          description: Flag to show if this game instance supports realtime play.
          type: boolean
        turnBasedPlay:
          description: Flag to show if this game instance supports turn based play.
          type: boolean
        webInstance:
          $ref: '#/components/schemas/InstanceWebDetails'
      type: object
    InstanceAndroidDetails:
      description: The Android instance details resource.
      example:
        kind: kind
        enablePiracyCheck: true
        packageName: packageName
        preferred: true
      properties:
        enablePiracyCheck:
          description: Flag indicating whether the anti-piracy check is enabled.
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#instanceAndroidDetails`.
          type: string
        packageName:
          description: Android package name which maps to Google Play URL.
          type: string
        preferred:
          description: Indicates that this instance is the default for new installations.
          type: boolean
      type: object
    InstanceIosDetails:
      description: The iOS details resource.
      example:
        preferredForIphone: true
        kind: kind
        preferredForIpad: true
        supportIphone: true
        bundleIdentifier: bundleIdentifier
        supportIpad: true
        itunesAppId: itunesAppId
      properties:
        bundleIdentifier:
          description: Bundle identifier.
          type: string
        itunesAppId:
          description: iTunes App ID.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#instanceIosDetails`.
          type: string
        preferredForIpad:
          description: Indicates that this instance is the default for new installations
            on iPad devices.
          type: boolean
        preferredForIphone:
          description: Indicates that this instance is the default for new installations
            on iPhone devices.
          type: boolean
        supportIpad:
          description: Flag to indicate if this instance supports iPad.
          type: boolean
        supportIphone:
          description: Flag to indicate if this instance supports iPhone.
          type: boolean
      type: object
    InstanceWebDetails:
      description: The Web details resource.
      example:
        kind: kind
        launchUrl: launchUrl
        preferred: true
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#instanceWebDetails`.
          type: string
        launchUrl:
          description: Launch URL for the game.
          type: string
        preferred:
          description: Indicates that this instance is the default for new installations.
          type: boolean
      type: object
    Leaderboard:
      description: The Leaderboard resource.
      example:
        isIconUrlDefault: true
        kind: kind
        name: name
        iconUrl: iconUrl
        id: id
        order: LARGER_IS_BETTER
      properties:
        iconUrl:
          description: The icon for the leaderboard.
          type: string
        id:
          description: The leaderboard ID.
          type: string
        isIconUrlDefault:
          description: "Indicates whether the icon image being returned is a default\
            \ image, or is game-provided."
          type: boolean
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#leaderboard`.
          type: string
        name:
          description: The name of the leaderboard.
          type: string
        order:
          description: How scores are ordered.
          enum:
          - LARGER_IS_BETTER
          - SMALLER_IS_BETTER
          type: string
      type: object
    LeaderboardEntry:
      description: The Leaderboard Entry resource.
      example:
        formattedScoreRank: formattedScoreRank
        formattedScore: formattedScore
        kind: kind
        scoreTag: scoreTag
        scoreRank: scoreRank
        timeSpan: ALL_TIME
        writeTimestampMillis: writeTimestampMillis
        player:
          displayName: displayName
          kind: kind
          avatarImageUrl: avatarImageUrl
          gamePlayerId: gamePlayerId
          title: title
          friendStatus: NO_RELATIONSHIP
          experienceInfo:
            currentLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
            currentExperiencePoints: currentExperiencePoints
            kind: kind
            lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
            nextLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
          bannerUrlLandscape: bannerUrlLandscape
          profileSettings:
            kind: kind
            friendsListVisibility: VISIBLE
            profileVisible: true
          name:
            familyName: familyName
            givenName: givenName
          originalPlayerId: originalPlayerId
          bannerUrlPortrait: bannerUrlPortrait
          playerId: playerId
        scoreValue: scoreValue
      properties:
        formattedScore:
          description: The localized string for the numerical value of this score.
          type: string
        formattedScoreRank:
          description: The localized string for the rank of this score for this leaderboard.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#leaderboardEntry`.
          type: string
        player:
          $ref: '#/components/schemas/Player'
        scoreRank:
          description: The rank of this score for this leaderboard.
          format: int64
          type: string
        scoreTag:
          description: Additional information about the score. Values must contain
            no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        scoreValue:
          description: The numerical value of this score.
          format: int64
          type: string
        timeSpan:
          description: The time span of this high score.
          enum:
          - ALL_TIME
          - WEEKLY
          - DAILY
          type: string
        writeTimestampMillis:
          description: "The timestamp at which this score was recorded, in milliseconds\
            \ since the epoch in UTC."
          format: int64
          type: string
      type: object
    LeaderboardListResponse:
      description: A list of leaderboard objects.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - isIconUrlDefault: true
          kind: kind
          name: name
          iconUrl: iconUrl
          id: id
          order: LARGER_IS_BETTER
        - isIconUrlDefault: true
          kind: kind
          name: name
          iconUrl: iconUrl
          id: id
          order: LARGER_IS_BETTER
      properties:
        items:
          description: The leaderboards.
          items:
            $ref: '#/components/schemas/Leaderboard'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#leaderboardListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    LeaderboardScoreRank:
      description: A score rank in a leaderboard.
      example:
        formattedNumScores: formattedNumScores
        kind: kind
        numScores: numScores
        rank: rank
        formattedRank: formattedRank
      properties:
        formattedNumScores:
          description: The number of scores in the leaderboard as a string.
          type: string
        formattedRank:
          description: The rank in the leaderboard as a string.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#leaderboardScoreRank`.
          type: string
        numScores:
          description: The number of scores in the leaderboard.
          format: int64
          type: string
        rank:
          description: The rank in the leaderboard.
          format: int64
          type: string
      type: object
    LeaderboardScores:
      description: A ListScores response.
      example:
        prevPageToken: prevPageToken
        playerScore:
          formattedScoreRank: formattedScoreRank
          formattedScore: formattedScore
          kind: kind
          scoreTag: scoreTag
          scoreRank: scoreRank
          timeSpan: ALL_TIME
          writeTimestampMillis: writeTimestampMillis
          player:
            displayName: displayName
            kind: kind
            avatarImageUrl: avatarImageUrl
            gamePlayerId: gamePlayerId
            title: title
            friendStatus: NO_RELATIONSHIP
            experienceInfo:
              currentLevel:
                level: 0
                kind: kind
                minExperiencePoints: minExperiencePoints
                maxExperiencePoints: maxExperiencePoints
              currentExperiencePoints: currentExperiencePoints
              kind: kind
              lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
              nextLevel:
                level: 0
                kind: kind
                minExperiencePoints: minExperiencePoints
                maxExperiencePoints: maxExperiencePoints
            bannerUrlLandscape: bannerUrlLandscape
            profileSettings:
              kind: kind
              friendsListVisibility: VISIBLE
              profileVisible: true
            name:
              familyName: familyName
              givenName: givenName
            originalPlayerId: originalPlayerId
            bannerUrlPortrait: bannerUrlPortrait
            playerId: playerId
          scoreValue: scoreValue
        kind: kind
        nextPageToken: nextPageToken
        numScores: numScores
        items:
        - formattedScoreRank: formattedScoreRank
          formattedScore: formattedScore
          kind: kind
          scoreTag: scoreTag
          scoreRank: scoreRank
          timeSpan: ALL_TIME
          writeTimestampMillis: writeTimestampMillis
          player:
            displayName: displayName
            kind: kind
            avatarImageUrl: avatarImageUrl
            gamePlayerId: gamePlayerId
            title: title
            friendStatus: NO_RELATIONSHIP
            experienceInfo:
              currentLevel:
                level: 0
                kind: kind
                minExperiencePoints: minExperiencePoints
                maxExperiencePoints: maxExperiencePoints
              currentExperiencePoints: currentExperiencePoints
              kind: kind
              lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
              nextLevel:
                level: 0
                kind: kind
                minExperiencePoints: minExperiencePoints
                maxExperiencePoints: maxExperiencePoints
            bannerUrlLandscape: bannerUrlLandscape
            profileSettings:
              kind: kind
              friendsListVisibility: VISIBLE
              profileVisible: true
            name:
              familyName: familyName
              givenName: givenName
            originalPlayerId: originalPlayerId
            bannerUrlPortrait: bannerUrlPortrait
            playerId: playerId
          scoreValue: scoreValue
        - formattedScoreRank: formattedScoreRank
          formattedScore: formattedScore
          kind: kind
          scoreTag: scoreTag
          scoreRank: scoreRank
          timeSpan: ALL_TIME
          writeTimestampMillis: writeTimestampMillis
          player:
            displayName: displayName
            kind: kind
            avatarImageUrl: avatarImageUrl
            gamePlayerId: gamePlayerId
            title: title
            friendStatus: NO_RELATIONSHIP
            experienceInfo:
              currentLevel:
                level: 0
                kind: kind
                minExperiencePoints: minExperiencePoints
                maxExperiencePoints: maxExperiencePoints
              currentExperiencePoints: currentExperiencePoints
              kind: kind
              lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
              nextLevel:
                level: 0
                kind: kind
                minExperiencePoints: minExperiencePoints
                maxExperiencePoints: maxExperiencePoints
            bannerUrlLandscape: bannerUrlLandscape
            profileSettings:
              kind: kind
              friendsListVisibility: VISIBLE
              profileVisible: true
            name:
              familyName: familyName
              givenName: givenName
            originalPlayerId: originalPlayerId
            bannerUrlPortrait: bannerUrlPortrait
            playerId: playerId
          scoreValue: scoreValue
      properties:
        items:
          description: The scores in the leaderboard.
          items:
            $ref: '#/components/schemas/LeaderboardEntry'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#leaderboardScores`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
        numScores:
          description: The total number of scores in the leaderboard.
          format: int64
          type: string
        playerScore:
          $ref: '#/components/schemas/LeaderboardEntry'
        prevPageToken:
          description: The pagination token for the previous page of results.
          type: string
      type: object
    LinkPersonaRequest:
      description: Request to link an in-game account with a PGS principal (encoded
        in the session id).
      example:
        expireTime: expireTime
        persona: persona
        conflictingLinksResolutionPolicy: KEEP_EXISTING_LINKS
        cardinalityConstraint: ONE_PERSONA_TO_ONE_PLAYER
        sessionId: sessionId
        ttl: ttl
        token: token
      properties:
        cardinalityConstraint:
          description: Required. Cardinality constraint to observe when linking a
            persona to a player in the scope of a game.
          enum:
          - ONE_PERSONA_TO_ONE_PLAYER
          type: string
        conflictingLinksResolutionPolicy:
          description: Required. Resolution policy to apply when the linking of a
            persona to a player would result in violating the specified cardinality
            constraint.
          enum:
          - KEEP_EXISTING_LINKS
          - CREATE_NEW_LINK
          type: string
        expireTime:
          description: Input only. Optional expiration time.
          format: google-datetime
          type: string
        persona:
          description: Required. Stable identifier of the in-game account. Please
            refrain from re-using the same persona for different games.
          type: string
        sessionId:
          description: Required. Opaque server-generated string that encodes all the
            necessary information to identify the PGS player / Google user and application.
          type: string
        token:
          description: Required. Value of the token to create. Opaque to Play Games
            and assumed to be non-stable (encrypted with key rotation).
          type: string
        ttl:
          description: Input only. Optional time-to-live.
          format: google-duration
          type: string
      type: object
    LinkPersonaResponse:
      description: Outcome of a persona linking attempt.
      example:
        state: LINK_CREATED
      properties:
        state:
          description: Output only. State of a persona linking attempt.
          enum:
          - LINK_CREATED
          - PERSONA_OR_PLAYER_ALREADY_LINKED
          readOnly: true
          type: string
      type: object
    MetagameConfig:
      description: The metagame config resource
      example:
        playerLevels:
        - level: 0
          kind: kind
          minExperiencePoints: minExperiencePoints
          maxExperiencePoints: maxExperiencePoints
        - level: 0
          kind: kind
          minExperiencePoints: minExperiencePoints
          maxExperiencePoints: maxExperiencePoints
        kind: kind
        currentVersion: 0
      properties:
        currentVersion:
          description: "Current version of the metagame configuration data. When this\
            \ data is updated, the version number will be increased by one."
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#metagameConfig`.
          type: string
        playerLevels:
          description: The list of player levels.
          items:
            $ref: '#/components/schemas/PlayerLevel'
          type: array
      type: object
    Player:
      description: A Player resource.
      example:
        displayName: displayName
        kind: kind
        avatarImageUrl: avatarImageUrl
        gamePlayerId: gamePlayerId
        title: title
        friendStatus: NO_RELATIONSHIP
        experienceInfo:
          currentLevel:
            level: 0
            kind: kind
            minExperiencePoints: minExperiencePoints
            maxExperiencePoints: maxExperiencePoints
          currentExperiencePoints: currentExperiencePoints
          kind: kind
          lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
          nextLevel:
            level: 0
            kind: kind
            minExperiencePoints: minExperiencePoints
            maxExperiencePoints: maxExperiencePoints
        bannerUrlLandscape: bannerUrlLandscape
        profileSettings:
          kind: kind
          friendsListVisibility: VISIBLE
          profileVisible: true
        name:
          familyName: familyName
          givenName: givenName
        originalPlayerId: originalPlayerId
        bannerUrlPortrait: bannerUrlPortrait
        playerId: playerId
      properties:
        avatarImageUrl:
          description: The base URL for the image that represents the player.
          type: string
        bannerUrlLandscape:
          description: The url to the landscape mode player banner image.
          type: string
        bannerUrlPortrait:
          description: The url to the portrait mode player banner image.
          type: string
        displayName:
          description: The name to display for the player.
          type: string
        experienceInfo:
          $ref: '#/components/schemas/PlayerExperienceInfo'
        friendStatus:
          description: "The friend status of the given player, relative to the requester.\
            \ This is unset if the player is not sharing their friends list with the\
            \ game."
          enum:
          - NO_RELATIONSHIP
          - FRIEND
          type: string
        gamePlayerId:
          description: Per-application unique player identifier.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#player`
          type: string
        name:
          $ref: '#/components/schemas/Player_name'
        originalPlayerId:
          description: "The player ID that was used for this player the first time\
            \ they signed into the game in question. This is only populated for calls\
            \ to player.get for the requesting player, only if the player ID has subsequently\
            \ changed, and only to clients that support remapping player IDs."
          type: string
        playerId:
          description: The ID of the player.
          type: string
        profileSettings:
          $ref: '#/components/schemas/ProfileSettings'
        title:
          description: The player's title rewarded for their game activities.
          type: string
      type: object
    PlayerAchievement:
      description: An achievement object.
      example:
        achievementState: HIDDEN
        lastUpdatedTimestamp: lastUpdatedTimestamp
        formattedCurrentStepsString: formattedCurrentStepsString
        kind: kind
        experiencePoints: experiencePoints
        currentSteps: 0
        id: id
      properties:
        achievementState:
          description: The state of the achievement.
          enum:
          - HIDDEN
          - REVEALED
          - UNLOCKED
          type: string
        currentSteps:
          description: The current steps for an incremental achievement.
          format: int32
          type: integer
        experiencePoints:
          description: Experience points earned for the achievement. This field is
            absent for achievements that have not yet been unlocked and 0 for achievements
            that have been unlocked by testers but that are unpublished.
          format: int64
          type: string
        formattedCurrentStepsString:
          description: The current steps for an incremental achievement as a string.
          type: string
        id:
          description: The ID of the achievement.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerAchievement`.
          type: string
        lastUpdatedTimestamp:
          description: The timestamp of the last modification to this achievement's
            state.
          format: int64
          type: string
      type: object
    PlayerAchievementListResponse:
      description: A list of achievement objects.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - achievementState: HIDDEN
          lastUpdatedTimestamp: lastUpdatedTimestamp
          formattedCurrentStepsString: formattedCurrentStepsString
          kind: kind
          experiencePoints: experiencePoints
          currentSteps: 0
          id: id
        - achievementState: HIDDEN
          lastUpdatedTimestamp: lastUpdatedTimestamp
          formattedCurrentStepsString: formattedCurrentStepsString
          kind: kind
          experiencePoints: experiencePoints
          currentSteps: 0
          id: id
      properties:
        items:
          description: The achievements.
          items:
            $ref: '#/components/schemas/PlayerAchievement'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerAchievementListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    PlayerEvent:
      description: An event status resource.
      example:
        formattedNumEvents: formattedNumEvents
        kind: kind
        numEvents: numEvents
        definitionId: definitionId
        playerId: playerId
      properties:
        definitionId:
          description: The ID of the event definition.
          type: string
        formattedNumEvents:
          description: "The current number of times this event has occurred, as a\
            \ string. The formatting of this string depends on the configuration of\
            \ your event in the Play Games Developer Console."
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerEvent`.
          type: string
        numEvents:
          description: The current number of times this event has occurred.
          format: int64
          type: string
        playerId:
          description: The ID of the player.
          type: string
      type: object
    PlayerEventListResponse:
      description: A ListByPlayer response.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - formattedNumEvents: formattedNumEvents
          kind: kind
          numEvents: numEvents
          definitionId: definitionId
          playerId: playerId
        - formattedNumEvents: formattedNumEvents
          kind: kind
          numEvents: numEvents
          definitionId: definitionId
          playerId: playerId
      properties:
        items:
          description: The player events.
          items:
            $ref: '#/components/schemas/PlayerEvent'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerEventListResponse`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
      type: object
    PlayerExperienceInfo:
      description: 1P/3P metadata about the player's experience.
      example:
        currentLevel:
          level: 0
          kind: kind
          minExperiencePoints: minExperiencePoints
          maxExperiencePoints: maxExperiencePoints
        currentExperiencePoints: currentExperiencePoints
        kind: kind
        lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
        nextLevel:
          level: 0
          kind: kind
          minExperiencePoints: minExperiencePoints
          maxExperiencePoints: maxExperiencePoints
      properties:
        currentExperiencePoints:
          description: The current number of experience points for the player.
          format: int64
          type: string
        currentLevel:
          $ref: '#/components/schemas/PlayerLevel'
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerExperienceInfo`.
          type: string
        lastLevelUpTimestampMillis:
          description: "The timestamp when the player was leveled up, in millis since\
            \ Unix epoch UTC."
          format: int64
          type: string
        nextLevel:
          $ref: '#/components/schemas/PlayerLevel'
      type: object
    PlayerLeaderboardScore:
      description: A player leaderboard score object.
      example:
        leaderboard_id: leaderboard_id
        socialRank:
          formattedNumScores: formattedNumScores
          kind: kind
          numScores: numScores
          rank: rank
          formattedRank: formattedRank
        writeTimestamp: writeTimestamp
        kind: kind
        publicRank:
          formattedNumScores: formattedNumScores
          kind: kind
          numScores: numScores
          rank: rank
          formattedRank: formattedRank
        scoreString: scoreString
        scoreTag: scoreTag
        friendsRank:
          formattedNumScores: formattedNumScores
          kind: kind
          numScores: numScores
          rank: rank
          formattedRank: formattedRank
        timeSpan: ALL_TIME
        scoreValue: scoreValue
      properties:
        friendsRank:
          $ref: '#/components/schemas/LeaderboardScoreRank'
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerLeaderboardScore`.
          type: string
        leaderboard_id:
          description: The ID of the leaderboard this score is in.
          type: string
        publicRank:
          $ref: '#/components/schemas/LeaderboardScoreRank'
        scoreString:
          description: The formatted value of this score.
          type: string
        scoreTag:
          description: Additional information about the score. Values must contain
            no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        scoreValue:
          description: The numerical value of this score.
          format: int64
          type: string
        socialRank:
          $ref: '#/components/schemas/LeaderboardScoreRank'
        timeSpan:
          description: The time span of this score.
          enum:
          - ALL_TIME
          - WEEKLY
          - DAILY
          type: string
        writeTimestamp:
          description: "The timestamp at which this score was recorded, in milliseconds\
            \ since the epoch in UTC."
          format: int64
          type: string
      type: object
    PlayerLeaderboardScoreListResponse:
      description: A list of player leaderboard scores.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - leaderboard_id: leaderboard_id
          socialRank:
            formattedNumScores: formattedNumScores
            kind: kind
            numScores: numScores
            rank: rank
            formattedRank: formattedRank
          writeTimestamp: writeTimestamp
          kind: kind
          publicRank:
            formattedNumScores: formattedNumScores
            kind: kind
            numScores: numScores
            rank: rank
            formattedRank: formattedRank
          scoreString: scoreString
          scoreTag: scoreTag
          friendsRank:
            formattedNumScores: formattedNumScores
            kind: kind
            numScores: numScores
            rank: rank
            formattedRank: formattedRank
          timeSpan: ALL_TIME
          scoreValue: scoreValue
        - leaderboard_id: leaderboard_id
          socialRank:
            formattedNumScores: formattedNumScores
            kind: kind
            numScores: numScores
            rank: rank
            formattedRank: formattedRank
          writeTimestamp: writeTimestamp
          kind: kind
          publicRank:
            formattedNumScores: formattedNumScores
            kind: kind
            numScores: numScores
            rank: rank
            formattedRank: formattedRank
          scoreString: scoreString
          scoreTag: scoreTag
          friendsRank:
            formattedNumScores: formattedNumScores
            kind: kind
            numScores: numScores
            rank: rank
            formattedRank: formattedRank
          timeSpan: ALL_TIME
          scoreValue: scoreValue
        player:
          displayName: displayName
          kind: kind
          avatarImageUrl: avatarImageUrl
          gamePlayerId: gamePlayerId
          title: title
          friendStatus: NO_RELATIONSHIP
          experienceInfo:
            currentLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
            currentExperiencePoints: currentExperiencePoints
            kind: kind
            lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
            nextLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
          bannerUrlLandscape: bannerUrlLandscape
          profileSettings:
            kind: kind
            friendsListVisibility: VISIBLE
            profileVisible: true
          name:
            familyName: familyName
            givenName: givenName
          originalPlayerId: originalPlayerId
          bannerUrlPortrait: bannerUrlPortrait
          playerId: playerId
      properties:
        items:
          description: The leaderboard scores.
          items:
            $ref: '#/components/schemas/PlayerLeaderboardScore'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerLeaderboardScoreListResponse`.
          type: string
        nextPageToken:
          description: The pagination token for the next page of results.
          type: string
        player:
          $ref: '#/components/schemas/Player'
      type: object
    PlayerLevel:
      description: 1P/3P metadata about a user's level.
      example:
        level: 0
        kind: kind
        minExperiencePoints: minExperiencePoints
        maxExperiencePoints: maxExperiencePoints
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerLevel`.
          type: string
        level:
          description: The level for the user.
          format: int32
          type: integer
        maxExperiencePoints:
          description: The maximum experience points for this level.
          format: int64
          type: string
        minExperiencePoints:
          description: The minimum experience points for this level.
          format: int64
          type: string
      type: object
    PlayerListResponse:
      description: A third party player list response.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - displayName: displayName
          kind: kind
          avatarImageUrl: avatarImageUrl
          gamePlayerId: gamePlayerId
          title: title
          friendStatus: NO_RELATIONSHIP
          experienceInfo:
            currentLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
            currentExperiencePoints: currentExperiencePoints
            kind: kind
            lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
            nextLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
          bannerUrlLandscape: bannerUrlLandscape
          profileSettings:
            kind: kind
            friendsListVisibility: VISIBLE
            profileVisible: true
          name:
            familyName: familyName
            givenName: givenName
          originalPlayerId: originalPlayerId
          bannerUrlPortrait: bannerUrlPortrait
          playerId: playerId
        - displayName: displayName
          kind: kind
          avatarImageUrl: avatarImageUrl
          gamePlayerId: gamePlayerId
          title: title
          friendStatus: NO_RELATIONSHIP
          experienceInfo:
            currentLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
            currentExperiencePoints: currentExperiencePoints
            kind: kind
            lastLevelUpTimestampMillis: lastLevelUpTimestampMillis
            nextLevel:
              level: 0
              kind: kind
              minExperiencePoints: minExperiencePoints
              maxExperiencePoints: maxExperiencePoints
          bannerUrlLandscape: bannerUrlLandscape
          profileSettings:
            kind: kind
            friendsListVisibility: VISIBLE
            profileVisible: true
          name:
            familyName: familyName
            givenName: givenName
          originalPlayerId: originalPlayerId
          bannerUrlPortrait: bannerUrlPortrait
          playerId: playerId
      properties:
        items:
          description: The players.
          items:
            $ref: '#/components/schemas/Player'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerListResponse`.
          type: string
        nextPageToken:
          description: Token corresponding to the next page of results.
          type: string
      type: object
    PlayerScore:
      description: A player score.
      example:
        score: score
        formattedScore: formattedScore
        kind: kind
        scoreTag: scoreTag
        timeSpan: ALL_TIME
      properties:
        formattedScore:
          description: The formatted score for this player score.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerScore`.
          type: string
        score:
          description: The numerical value for this player score.
          format: int64
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain
            no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        timeSpan:
          description: The time span for this player score.
          enum:
          - ALL_TIME
          - WEEKLY
          - DAILY
          type: string
      type: object
    PlayerScoreListResponse:
      description: A list of score submission statuses.
      example:
        kind: kind
        submittedScores:
        - unbeatenScores:
          - score: score
            formattedScore: formattedScore
            kind: kind
            scoreTag: scoreTag
            timeSpan: ALL_TIME
          - score: score
            formattedScore: formattedScore
            kind: kind
            scoreTag: scoreTag
            timeSpan: ALL_TIME
          formattedScore: formattedScore
          kind: kind
          scoreTag: scoreTag
          beatenScoreTimeSpans:
          - ALL_TIME
          - ALL_TIME
          leaderboardId: leaderboardId
        - unbeatenScores:
          - score: score
            formattedScore: formattedScore
            kind: kind
            scoreTag: scoreTag
            timeSpan: ALL_TIME
          - score: score
            formattedScore: formattedScore
            kind: kind
            scoreTag: scoreTag
            timeSpan: ALL_TIME
          formattedScore: formattedScore
          kind: kind
          scoreTag: scoreTag
          beatenScoreTimeSpans:
          - ALL_TIME
          - ALL_TIME
          leaderboardId: leaderboardId
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerScoreListResponse`.
          type: string
        submittedScores:
          description: The score submissions statuses.
          items:
            $ref: '#/components/schemas/PlayerScoreResponse'
          type: array
      type: object
    PlayerScoreResponse:
      description: A list of leaderboard entry resources.
      example:
        unbeatenScores:
        - score: score
          formattedScore: formattedScore
          kind: kind
          scoreTag: scoreTag
          timeSpan: ALL_TIME
        - score: score
          formattedScore: formattedScore
          kind: kind
          scoreTag: scoreTag
          timeSpan: ALL_TIME
        formattedScore: formattedScore
        kind: kind
        scoreTag: scoreTag
        beatenScoreTimeSpans:
        - ALL_TIME
        - ALL_TIME
        leaderboardId: leaderboardId
      properties:
        beatenScoreTimeSpans:
          description: The time spans where the submitted score is better than the
            existing score for that time span.
          items:
            enum:
            - ALL_TIME
            - WEEKLY
            - DAILY
            type: string
          type: array
        formattedScore:
          description: The formatted value of the submitted score.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerScoreResponse`.
          type: string
        leaderboardId:
          description: The leaderboard ID that this score was submitted to.
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain
            no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        unbeatenScores:
          description: "The scores in time spans that have not been beaten. As an\
            \ example, the submitted score may be better than the player's `DAILY`\
            \ score, but not better than the player's scores for the `WEEKLY` or `ALL_TIME`\
            \ time spans."
          items:
            $ref: '#/components/schemas/PlayerScore'
          type: array
      type: object
    PlayerScoreSubmissionList:
      description: A list of score submission requests.
      example:
        scores:
        - score: score
          signature: signature
          kind: kind
          scoreTag: scoreTag
          leaderboardId: leaderboardId
        - score: score
          signature: signature
          kind: kind
          scoreTag: scoreTag
          leaderboardId: leaderboardId
        kind: kind
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#playerScoreSubmissionList`.
          type: string
        scores:
          description: The score submissions.
          items:
            $ref: '#/components/schemas/ScoreSubmission'
          type: array
      type: object
    ProfileSettings:
      description: Profile settings
      example:
        kind: kind
        friendsListVisibility: VISIBLE
        profileVisible: true
      properties:
        friendsListVisibility:
          enum:
          - VISIBLE
          - REQUEST_REQUIRED
          - UNAVAILABLE
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#profileSettings`.
          type: string
        profileVisible:
          description: Whether the player's profile is visible to the currently signed
            in player.
          type: boolean
      type: object
    RecallToken:
      description: Recall token data returned from RetrievePlayerTokens RPC
      example:
        expireTime: expireTime
        multiPlayerPersona: true
        token: token
      properties:
        expireTime:
          description: Optional. Optional expiration time of the token
          format: google-datetime
          type: string
        multiPlayerPersona:
          description: Required. Whether the persona identified by the token is linked
            to multiple PGS Players
          type: boolean
        token:
          description: Required. Value of the Recall token as it is provided by the
            client via LinkPersona RPC
          type: string
      type: object
    ResetPersonaRequest:
      description: Request to remove all Recall tokens associated with a persona for
        an app.
      example:
        persona: persona
      properties:
        persona:
          description: Value of the 'persona' field as it was provided by the client
            in LinkPersona RPC
          type: string
      type: object
    ResetPersonaResponse:
      description: Response for the ResetPersona RPC
      example:
        unlinked: true
      properties:
        unlinked:
          description: Required. Whether any tokens were unlinked as a result of this
            request.
          type: boolean
      type: object
    RetrievePlayerTokensResponse:
      description: Response for the RetrievePlayerTokens RPC
      example:
        tokens:
        - expireTime: expireTime
          multiPlayerPersona: true
          token: token
        - expireTime: expireTime
          multiPlayerPersona: true
          token: token
      properties:
        tokens:
          description: Required. Recall tokens associated with the requested PGS Player
            principal
          items:
            $ref: '#/components/schemas/RecallToken'
          type: array
      type: object
    RevisionCheckResponse:
      description: A third party checking a revision response.
      example:
        apiVersion: apiVersion
        kind: kind
        revisionStatus: OK
      properties:
        apiVersion:
          description: The version of the API this client revision should use when
            calling API methods.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#revisionCheckResponse`.
          type: string
        revisionStatus:
          description: The result of the revision check.
          enum:
          - OK
          - DEPRECATED
          - INVALID
          type: string
      type: object
    ScopedPlayerIds:
      description: Scoped player identifiers.
      example:
        developerPlayerKey: developerPlayerKey
        gamePlayerId: gamePlayerId
      properties:
        developerPlayerKey:
          description: Identifier of the player across all games of the given developer.
            Every player has the same developer_player_key in all games of one developer.
            Developer player key changes for the game if the game is transferred to
            another developer. Note that game_player_id will stay unchanged.
          type: string
        gamePlayerId:
          description: Game-scoped player identifier. This is the same id that is
            returned in GetPlayer game_player_id field.
          type: string
      type: object
    ScoreSubmission:
      description: A request to submit a score to leaderboards.
      example:
        score: score
        signature: signature
        kind: kind
        scoreTag: scoreTag
        leaderboardId: leaderboardId
      properties:
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#scoreSubmission`.
          type: string
        leaderboardId:
          description: The leaderboard this score is being submitted to.
          type: string
        score:
          description: The new score being submitted.
          format: int64
          type: string
        scoreTag:
          description: Additional information about this score. Values will contain
            no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          type: string
        signature:
          description: Signature Values will contain URI-safe characters as defined
            by section 2.3 of RFC 3986.
          type: string
      type: object
    Snapshot:
      description: An snapshot object.
      example:
        driveId: driveId
        uniqueName: uniqueName
        kind: kind
        coverImage:
          mime_type: mime_type
          kind: kind
          width: 6
          url: url
          height: 0
        description: description
        lastModifiedMillis: lastModifiedMillis
        durationMillis: durationMillis
        id: id
        progressValue: progressValue
        title: title
        type: SAVE_GAME
      properties:
        coverImage:
          $ref: '#/components/schemas/SnapshotImage'
        description:
          description: The description of this snapshot.
          type: string
        driveId:
          description: The ID of the file underlying this snapshot in the Drive API.
            Only present if the snapshot is a view on a Drive file and the file is
            owned by the caller.
          type: string
        durationMillis:
          description: "The duration associated with this snapshot, in millis."
          format: int64
          type: string
        id:
          description: The ID of the snapshot.
          type: string
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#snapshot`.
          type: string
        lastModifiedMillis:
          description: The timestamp (in millis since Unix epoch) of the last modification
            to this snapshot.
          format: int64
          type: string
        progressValue:
          description: The progress value (64-bit integer set by developer) associated
            with this snapshot.
          format: int64
          type: string
        title:
          description: The title of this snapshot.
          type: string
        type:
          description: The type of this snapshot.
          enum:
          - SAVE_GAME
          type: string
        uniqueName:
          description: The unique name provided when the snapshot was created.
          type: string
      type: object
    SnapshotImage:
      description: An image of a snapshot.
      example:
        mime_type: mime_type
        kind: kind
        width: 6
        url: url
        height: 0
      properties:
        height:
          description: The height of the image.
          format: int32
          type: integer
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#snapshotImage`.
          type: string
        mime_type:
          description: The MIME type of the image.
          type: string
        url:
          description: The URL of the image. This URL may be invalidated at any time
            and should not be cached.
          type: string
        width:
          description: The width of the image.
          format: int32
          type: integer
      type: object
    SnapshotListResponse:
      description: A third party list snapshots response.
      example:
        kind: kind
        nextPageToken: nextPageToken
        items:
        - driveId: driveId
          uniqueName: uniqueName
          kind: kind
          coverImage:
            mime_type: mime_type
            kind: kind
            width: 6
            url: url
            height: 0
          description: description
          lastModifiedMillis: lastModifiedMillis
          durationMillis: durationMillis
          id: id
          progressValue: progressValue
          title: title
          type: SAVE_GAME
        - driveId: driveId
          uniqueName: uniqueName
          kind: kind
          coverImage:
            mime_type: mime_type
            kind: kind
            width: 6
            url: url
            height: 0
          description: description
          lastModifiedMillis: lastModifiedMillis
          durationMillis: durationMillis
          id: id
          progressValue: progressValue
          title: title
          type: SAVE_GAME
      properties:
        items:
          description: The snapshots.
          items:
            $ref: '#/components/schemas/Snapshot'
          type: array
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#snapshotListResponse`.
          type: string
        nextPageToken:
          description: "Token corresponding to the next page of results. If there\
            \ are no more results, the token is omitted."
          type: string
      type: object
    StatsResponse:
      description: A third party stats resource.
      example:
        avg_session_length_minutes: 0.8008282
        days_since_last_played: 1
        num_sessions: 2
        high_spender_probability: 5.962134
        total_spend_next_28_days: 2.027123
        kind: kind
        churn_probability: 6.0274563
        num_sessions_percentile: 7.0614014
        spend_percentile: 9.301444
        num_purchases: 5
        spend_probability: 3.6160767
      properties:
        avg_session_length_minutes:
          description: "Average session length in minutes of the player. E.g., 1,\
            \ 30, 60, ... . Not populated if there is not enough information."
          format: float
          type: number
        churn_probability:
          description: "The probability of the player not returning to play the game\
            \ in the next day. E.g., 0, 0.1, 0.5, ..., 1.0. Not populated if there\
            \ is not enough information."
          format: float
          type: number
        days_since_last_played:
          description: "Number of days since the player last played this game. E.g.,\
            \ 0, 1, 5, 10, ... . Not populated if there is not enough information."
          format: int32
          type: integer
        high_spender_probability:
          description: "The probability of the player going to spend beyond a threshold\
            \ amount of money. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is\
            \ not enough information."
          format: float
          type: number
        kind:
          description: Uniquely identifies the type of this resource. Value is always
            the fixed string `games#statsResponse`.
          type: string
        num_purchases:
          description: "Number of in-app purchases made by the player in this game.\
            \ E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information."
          format: int32
          type: integer
        num_sessions:
          description: "The approximate number of sessions of the player within the\
            \ last 28 days, where a session begins when the player is connected to\
            \ Play Games Services and ends when they are disconnected. E.g., 0, 1,\
            \ 5, 10, ... . Not populated if there is not enough information."
          format: int32
          type: integer
        num_sessions_percentile:
          description: "The approximation of the sessions percentile of the player\
            \ within the last 30 days, where a session begins when the player is connected\
            \ to Play Games Services and ends when they are disconnected. E.g., 0,\
            \ 0.25, 0.5, 0.75. Not populated if there is not enough information."
          format: float
          type: number
        spend_percentile:
          description: "The approximate spend percentile of the player in this game.\
            \ E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information."
          format: float
          type: number
        spend_probability:
          description: "The probability of the player going to spend the game in the\
            \ next seven days. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is\
            \ not enough information."
          format: float
          type: number
        total_spend_next_28_days:
          description: "The predicted amount of money that the player going to spend\
            \ in the next 28 days. E.g., 1, 30, 60, ... . Not populated if there is\
            \ not enough information."
          format: float
          type: number
      type: object
    UnlinkPersonaRequest:
      description: Request to remove a Recall token linking PGS principal and an in-game
        account
      example:
        persona: persona
        sessionId: sessionId
        token: token
      properties:
        persona:
          description: Value of the 'persona' field as it was provided by the client
            in LinkPersona RPC
          type: string
        sessionId:
          description: Required. Opaque server-generated string that encodes all the
            necessary information to identify the PGS player / Google user and application.
          type: string
        token:
          description: Value of the Recall token as it was provided by the client
            in LinkPersona RPC
          type: string
      type: object
    UnlinkPersonaResponse:
      description: Response for the UnlinkPersona RPC
      example:
        unlinked: true
      properties:
        unlinked:
          description: Required. Whether a Recall token specified by the request was
            deleted. Can be 'false' when there were no Recall tokens satisfied the
            criteria from the request.
          type: boolean
      type: object
    Player_name:
      description: A representation of the individual components of the name.
      example:
        familyName: familyName
        givenName: givenName
      properties:
        familyName:
          description: "The family name of this player. In some places, this is known\
            \ as the last name."
          type: string
        givenName:
          description: "The given name of this player. In some places, this is known\
            \ as the first name."
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/androidpublisher: View and manage your
              Google Play Developer account
            https://www.googleapis.com/auth/drive.appdata: "See, create, and delete\
              \ its own configuration data in your Google Drive"
            https://www.googleapis.com/auth/games: "Create, edit, and delete your\
              \ Google Play Games activity"
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/androidpublisher: View and manage your
              Google Play Developer account
            https://www.googleapis.com/auth/drive.appdata: "See, create, and delete\
              \ its own configuration data in your Google Drive"
            https://www.googleapis.com/auth/games: "Create, edit, and delete your\
              \ Google Play Games activity"
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

