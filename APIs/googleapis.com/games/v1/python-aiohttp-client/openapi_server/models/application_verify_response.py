# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationVerifyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternate_player_id: str=None, kind: str=None, player_id: str=None):
        """ApplicationVerifyResponse - a model defined in OpenAPI

        :param alternate_player_id: The alternate_player_id of this ApplicationVerifyResponse.
        :param kind: The kind of this ApplicationVerifyResponse.
        :param player_id: The player_id of this ApplicationVerifyResponse.
        """
        self.openapi_types = {
            'alternate_player_id': str,
            'kind': str,
            'player_id': str
        }

        self.attribute_map = {
            'alternate_player_id': 'alternate_player_id',
            'kind': 'kind',
            'player_id': 'player_id'
        }

        self._alternate_player_id = alternate_player_id
        self._kind = kind
        self._player_id = player_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationVerifyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationVerifyResponse of this ApplicationVerifyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternate_player_id(self):
        """Gets the alternate_player_id of this ApplicationVerifyResponse.

        An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)

        :return: The alternate_player_id of this ApplicationVerifyResponse.
        :rtype: str
        """
        return self._alternate_player_id

    @alternate_player_id.setter
    def alternate_player_id(self, alternate_player_id):
        """Sets the alternate_player_id of this ApplicationVerifyResponse.

        An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)

        :param alternate_player_id: The alternate_player_id of this ApplicationVerifyResponse.
        :type alternate_player_id: str
        """

        self._alternate_player_id = alternate_player_id

    @property
    def kind(self):
        """Gets the kind of this ApplicationVerifyResponse.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationVerifyResponse`.

        :return: The kind of this ApplicationVerifyResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ApplicationVerifyResponse.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationVerifyResponse`.

        :param kind: The kind of this ApplicationVerifyResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def player_id(self):
        """Gets the player_id of this ApplicationVerifyResponse.

        The ID of the player that was issued the auth token used in this request.

        :return: The player_id of this ApplicationVerifyResponse.
        :rtype: str
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this ApplicationVerifyResponse.

        The ID of the player that was issued the auth token used in this request.

        :param player_id: The player_id of this ApplicationVerifyResponse.
        :type player_id: str
        """

        self._player_id = player_id
