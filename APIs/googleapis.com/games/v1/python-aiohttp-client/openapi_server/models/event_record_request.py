# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_period_update import EventPeriodUpdate
from openapi_server import util


class EventRecordRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_time_millis: str=None, kind: str=None, request_id: str=None, time_periods: List[EventPeriodUpdate]=None):
        """EventRecordRequest - a model defined in OpenAPI

        :param current_time_millis: The current_time_millis of this EventRecordRequest.
        :param kind: The kind of this EventRecordRequest.
        :param request_id: The request_id of this EventRecordRequest.
        :param time_periods: The time_periods of this EventRecordRequest.
        """
        self.openapi_types = {
            'current_time_millis': str,
            'kind': str,
            'request_id': str,
            'time_periods': List[EventPeriodUpdate]
        }

        self.attribute_map = {
            'current_time_millis': 'currentTimeMillis',
            'kind': 'kind',
            'request_id': 'requestId',
            'time_periods': 'timePeriods'
        }

        self._current_time_millis = current_time_millis
        self._kind = kind
        self._request_id = request_id
        self._time_periods = time_periods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventRecordRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventRecordRequest of this EventRecordRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_time_millis(self):
        """Gets the current_time_millis of this EventRecordRequest.

        The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).

        :return: The current_time_millis of this EventRecordRequest.
        :rtype: str
        """
        return self._current_time_millis

    @current_time_millis.setter
    def current_time_millis(self, current_time_millis):
        """Sets the current_time_millis of this EventRecordRequest.

        The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).

        :param current_time_millis: The current_time_millis of this EventRecordRequest.
        :type current_time_millis: str
        """

        self._current_time_millis = current_time_millis

    @property
    def kind(self):
        """Gets the kind of this EventRecordRequest.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`.

        :return: The kind of this EventRecordRequest.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this EventRecordRequest.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`.

        :param kind: The kind of this EventRecordRequest.
        :type kind: str
        """

        self._kind = kind

    @property
    def request_id(self):
        """Gets the request_id of this EventRecordRequest.

        The request ID used to identify this attempt to record events.

        :return: The request_id of this EventRecordRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this EventRecordRequest.

        The request ID used to identify this attempt to record events.

        :param request_id: The request_id of this EventRecordRequest.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def time_periods(self):
        """Gets the time_periods of this EventRecordRequest.

        A list of the time period updates being made in this request.

        :return: The time_periods of this EventRecordRequest.
        :rtype: List[EventPeriodUpdate]
        """
        return self._time_periods

    @time_periods.setter
    def time_periods(self, time_periods):
        """Sets the time_periods of this EventRecordRequest.

        A list of the time period updates being made in this request.

        :param time_periods: The time_periods of this EventRecordRequest.
        :type time_periods: List[EventPeriodUpdate]
        """

        self._time_periods = time_periods
