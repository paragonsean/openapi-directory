# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, definition_id: str=None, kind: str=None, update_count: str=None):
        """EventUpdateRequest - a model defined in OpenAPI

        :param definition_id: The definition_id of this EventUpdateRequest.
        :param kind: The kind of this EventUpdateRequest.
        :param update_count: The update_count of this EventUpdateRequest.
        """
        self.openapi_types = {
            'definition_id': str,
            'kind': str,
            'update_count': str
        }

        self.attribute_map = {
            'definition_id': 'definitionId',
            'kind': 'kind',
            'update_count': 'updateCount'
        }

        self._definition_id = definition_id
        self._kind = kind
        self._update_count = update_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventUpdateRequest of this EventUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def definition_id(self):
        """Gets the definition_id of this EventUpdateRequest.

        The ID of the event being modified in this update.

        :return: The definition_id of this EventUpdateRequest.
        :rtype: str
        """
        return self._definition_id

    @definition_id.setter
    def definition_id(self, definition_id):
        """Sets the definition_id of this EventUpdateRequest.

        The ID of the event being modified in this update.

        :param definition_id: The definition_id of this EventUpdateRequest.
        :type definition_id: str
        """

        self._definition_id = definition_id

    @property
    def kind(self):
        """Gets the kind of this EventUpdateRequest.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`.

        :return: The kind of this EventUpdateRequest.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this EventUpdateRequest.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`.

        :param kind: The kind of this EventUpdateRequest.
        :type kind: str
        """

        self._kind = kind

    @property
    def update_count(self):
        """Gets the update_count of this EventUpdateRequest.

        The number of times this event occurred in this time period.

        :return: The update_count of this EventUpdateRequest.
        :rtype: str
        """
        return self._update_count

    @update_count.setter
    def update_count(self, update_count):
        """Sets the update_count of this EventUpdateRequest.

        The number of times this event occurred in this time period.

        :param update_count: The update_count of this EventUpdateRequest.
        :type update_count: str
        """

        self._update_count = update_count
