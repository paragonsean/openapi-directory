# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerLevel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, level: int=None, max_experience_points: str=None, min_experience_points: str=None):
        """PlayerLevel - a model defined in OpenAPI

        :param kind: The kind of this PlayerLevel.
        :param level: The level of this PlayerLevel.
        :param max_experience_points: The max_experience_points of this PlayerLevel.
        :param min_experience_points: The min_experience_points of this PlayerLevel.
        """
        self.openapi_types = {
            'kind': str,
            'level': int,
            'max_experience_points': str,
            'min_experience_points': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'level': 'level',
            'max_experience_points': 'maxExperiencePoints',
            'min_experience_points': 'minExperiencePoints'
        }

        self._kind = kind
        self._level = level
        self._max_experience_points = max_experience_points
        self._min_experience_points = min_experience_points

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerLevel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerLevel of this PlayerLevel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this PlayerLevel.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.

        :return: The kind of this PlayerLevel.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PlayerLevel.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.

        :param kind: The kind of this PlayerLevel.
        :type kind: str
        """

        self._kind = kind

    @property
    def level(self):
        """Gets the level of this PlayerLevel.

        The level for the user.

        :return: The level of this PlayerLevel.
        :rtype: int
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this PlayerLevel.

        The level for the user.

        :param level: The level of this PlayerLevel.
        :type level: int
        """

        self._level = level

    @property
    def max_experience_points(self):
        """Gets the max_experience_points of this PlayerLevel.

        The maximum experience points for this level.

        :return: The max_experience_points of this PlayerLevel.
        :rtype: str
        """
        return self._max_experience_points

    @max_experience_points.setter
    def max_experience_points(self, max_experience_points):
        """Sets the max_experience_points of this PlayerLevel.

        The maximum experience points for this level.

        :param max_experience_points: The max_experience_points of this PlayerLevel.
        :type max_experience_points: str
        """

        self._max_experience_points = max_experience_points

    @property
    def min_experience_points(self):
        """Gets the min_experience_points of this PlayerLevel.

        The minimum experience points for this level.

        :return: The min_experience_points of this PlayerLevel.
        :rtype: str
        """
        return self._min_experience_points

    @min_experience_points.setter
    def min_experience_points(self, min_experience_points):
        """Sets the min_experience_points of this PlayerLevel.

        The minimum experience points for this level.

        :param min_experience_points: The min_experience_points of this PlayerLevel.
        :type min_experience_points: str
        """

        self._min_experience_points = min_experience_points
