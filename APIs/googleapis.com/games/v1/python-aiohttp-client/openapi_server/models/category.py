# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Category(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, experience_points: str=None, kind: str=None):
        """Category - a model defined in OpenAPI

        :param category: The category of this Category.
        :param experience_points: The experience_points of this Category.
        :param kind: The kind of this Category.
        """
        self.openapi_types = {
            'category': str,
            'experience_points': str,
            'kind': str
        }

        self.attribute_map = {
            'category': 'category',
            'experience_points': 'experiencePoints',
            'kind': 'kind'
        }

        self._category = category
        self._experience_points = experience_points
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Category':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Category of this Category.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this Category.

        The category name.

        :return: The category of this Category.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Category.

        The category name.

        :param category: The category of this Category.
        :type category: str
        """

        self._category = category

    @property
    def experience_points(self):
        """Gets the experience_points of this Category.

        Experience points earned in this category.

        :return: The experience_points of this Category.
        :rtype: str
        """
        return self._experience_points

    @experience_points.setter
    def experience_points(self, experience_points):
        """Sets the experience_points of this Category.

        Experience points earned in this category.

        :param experience_points: The experience_points of this Category.
        :type experience_points: str
        """

        self._experience_points = experience_points

    @property
    def kind(self):
        """Gets the kind of this Category.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#category`.

        :return: The kind of this Category.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Category.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#category`.

        :param kind: The kind of this Category.
        :type kind: str
        """

        self._kind = kind
