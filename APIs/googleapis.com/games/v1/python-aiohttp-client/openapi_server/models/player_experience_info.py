# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player_level import PlayerLevel
from openapi_server import util


class PlayerExperienceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_experience_points: str=None, current_level: PlayerLevel=None, kind: str=None, last_level_up_timestamp_millis: str=None, next_level: PlayerLevel=None):
        """PlayerExperienceInfo - a model defined in OpenAPI

        :param current_experience_points: The current_experience_points of this PlayerExperienceInfo.
        :param current_level: The current_level of this PlayerExperienceInfo.
        :param kind: The kind of this PlayerExperienceInfo.
        :param last_level_up_timestamp_millis: The last_level_up_timestamp_millis of this PlayerExperienceInfo.
        :param next_level: The next_level of this PlayerExperienceInfo.
        """
        self.openapi_types = {
            'current_experience_points': str,
            'current_level': PlayerLevel,
            'kind': str,
            'last_level_up_timestamp_millis': str,
            'next_level': PlayerLevel
        }

        self.attribute_map = {
            'current_experience_points': 'currentExperiencePoints',
            'current_level': 'currentLevel',
            'kind': 'kind',
            'last_level_up_timestamp_millis': 'lastLevelUpTimestampMillis',
            'next_level': 'nextLevel'
        }

        self._current_experience_points = current_experience_points
        self._current_level = current_level
        self._kind = kind
        self._last_level_up_timestamp_millis = last_level_up_timestamp_millis
        self._next_level = next_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerExperienceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerExperienceInfo of this PlayerExperienceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_experience_points(self):
        """Gets the current_experience_points of this PlayerExperienceInfo.

        The current number of experience points for the player.

        :return: The current_experience_points of this PlayerExperienceInfo.
        :rtype: str
        """
        return self._current_experience_points

    @current_experience_points.setter
    def current_experience_points(self, current_experience_points):
        """Sets the current_experience_points of this PlayerExperienceInfo.

        The current number of experience points for the player.

        :param current_experience_points: The current_experience_points of this PlayerExperienceInfo.
        :type current_experience_points: str
        """

        self._current_experience_points = current_experience_points

    @property
    def current_level(self):
        """Gets the current_level of this PlayerExperienceInfo.


        :return: The current_level of this PlayerExperienceInfo.
        :rtype: PlayerLevel
        """
        return self._current_level

    @current_level.setter
    def current_level(self, current_level):
        """Sets the current_level of this PlayerExperienceInfo.


        :param current_level: The current_level of this PlayerExperienceInfo.
        :type current_level: PlayerLevel
        """

        self._current_level = current_level

    @property
    def kind(self):
        """Gets the kind of this PlayerExperienceInfo.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.

        :return: The kind of this PlayerExperienceInfo.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PlayerExperienceInfo.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.

        :param kind: The kind of this PlayerExperienceInfo.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_level_up_timestamp_millis(self):
        """Gets the last_level_up_timestamp_millis of this PlayerExperienceInfo.

        The timestamp when the player was leveled up, in millis since Unix epoch UTC.

        :return: The last_level_up_timestamp_millis of this PlayerExperienceInfo.
        :rtype: str
        """
        return self._last_level_up_timestamp_millis

    @last_level_up_timestamp_millis.setter
    def last_level_up_timestamp_millis(self, last_level_up_timestamp_millis):
        """Sets the last_level_up_timestamp_millis of this PlayerExperienceInfo.

        The timestamp when the player was leveled up, in millis since Unix epoch UTC.

        :param last_level_up_timestamp_millis: The last_level_up_timestamp_millis of this PlayerExperienceInfo.
        :type last_level_up_timestamp_millis: str
        """

        self._last_level_up_timestamp_millis = last_level_up_timestamp_millis

    @property
    def next_level(self):
        """Gets the next_level of this PlayerExperienceInfo.


        :return: The next_level of this PlayerExperienceInfo.
        :rtype: PlayerLevel
        """
        return self._next_level

    @next_level.setter
    def next_level(self, next_level):
        """Sets the next_level of this PlayerExperienceInfo.


        :param next_level: The next_level of this PlayerExperienceInfo.
        :type next_level: PlayerLevel
        """

        self._next_level = next_level
