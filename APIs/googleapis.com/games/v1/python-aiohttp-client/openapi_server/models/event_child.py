# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventChild(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_id: str=None, kind: str=None):
        """EventChild - a model defined in OpenAPI

        :param child_id: The child_id of this EventChild.
        :param kind: The kind of this EventChild.
        """
        self.openapi_types = {
            'child_id': str,
            'kind': str
        }

        self.attribute_map = {
            'child_id': 'childId',
            'kind': 'kind'
        }

        self._child_id = child_id
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventChild':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventChild of this EventChild.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_id(self):
        """Gets the child_id of this EventChild.

        The ID of the child event.

        :return: The child_id of this EventChild.
        :rtype: str
        """
        return self._child_id

    @child_id.setter
    def child_id(self, child_id):
        """Sets the child_id of this EventChild.

        The ID of the child event.

        :param child_id: The child_id of this EventChild.
        :type child_id: str
        """

        self._child_id = child_id

    @property
    def kind(self):
        """Gets the kind of this EventChild.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#eventChild`.

        :return: The kind of this EventChild.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this EventChild.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#eventChild`.

        :param kind: The kind of this EventChild.
        :type kind: str
        """

        self._kind = kind
