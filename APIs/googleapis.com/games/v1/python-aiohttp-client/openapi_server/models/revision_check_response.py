# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RevisionCheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_version: str=None, kind: str=None, revision_status: str=None):
        """RevisionCheckResponse - a model defined in OpenAPI

        :param api_version: The api_version of this RevisionCheckResponse.
        :param kind: The kind of this RevisionCheckResponse.
        :param revision_status: The revision_status of this RevisionCheckResponse.
        """
        self.openapi_types = {
            'api_version': str,
            'kind': str,
            'revision_status': str
        }

        self.attribute_map = {
            'api_version': 'apiVersion',
            'kind': 'kind',
            'revision_status': 'revisionStatus'
        }

        self._api_version = api_version
        self._kind = kind
        self._revision_status = revision_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RevisionCheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RevisionCheckResponse of this RevisionCheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self):
        """Gets the api_version of this RevisionCheckResponse.

        The version of the API this client revision should use when calling API methods.

        :return: The api_version of this RevisionCheckResponse.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this RevisionCheckResponse.

        The version of the API this client revision should use when calling API methods.

        :param api_version: The api_version of this RevisionCheckResponse.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def kind(self):
        """Gets the kind of this RevisionCheckResponse.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#revisionCheckResponse`.

        :return: The kind of this RevisionCheckResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this RevisionCheckResponse.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#revisionCheckResponse`.

        :param kind: The kind of this RevisionCheckResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def revision_status(self):
        """Gets the revision_status of this RevisionCheckResponse.

        The result of the revision check.

        :return: The revision_status of this RevisionCheckResponse.
        :rtype: str
        """
        return self._revision_status

    @revision_status.setter
    def revision_status(self, revision_status):
        """Sets the revision_status of this RevisionCheckResponse.

        The result of the revision check.

        :param revision_status: The revision_status of this RevisionCheckResponse.
        :type revision_status: str
        """
        allowed_values = ["OK", "DEPRECATED", "INVALID"]  # noqa: E501
        if revision_status not in allowed_values:
            raise ValueError(
                "Invalid value for `revision_status` ({0}), must be one of {1}"
                .format(revision_status, allowed_values)
            )

        self._revision_status = revision_status
