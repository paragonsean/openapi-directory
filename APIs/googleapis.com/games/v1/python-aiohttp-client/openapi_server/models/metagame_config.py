# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player_level import PlayerLevel
from openapi_server import util


class MetagameConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_version: int=None, kind: str=None, player_levels: List[PlayerLevel]=None):
        """MetagameConfig - a model defined in OpenAPI

        :param current_version: The current_version of this MetagameConfig.
        :param kind: The kind of this MetagameConfig.
        :param player_levels: The player_levels of this MetagameConfig.
        """
        self.openapi_types = {
            'current_version': int,
            'kind': str,
            'player_levels': List[PlayerLevel]
        }

        self.attribute_map = {
            'current_version': 'currentVersion',
            'kind': 'kind',
            'player_levels': 'playerLevels'
        }

        self._current_version = current_version
        self._kind = kind
        self._player_levels = player_levels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetagameConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetagameConfig of this MetagameConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_version(self):
        """Gets the current_version of this MetagameConfig.

        Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.

        :return: The current_version of this MetagameConfig.
        :rtype: int
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this MetagameConfig.

        Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.

        :param current_version: The current_version of this MetagameConfig.
        :type current_version: int
        """

        self._current_version = current_version

    @property
    def kind(self):
        """Gets the kind of this MetagameConfig.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`.

        :return: The kind of this MetagameConfig.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this MetagameConfig.

        Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`.

        :param kind: The kind of this MetagameConfig.
        :type kind: str
        """

        self._kind = kind

    @property
    def player_levels(self):
        """Gets the player_levels of this MetagameConfig.

        The list of player levels.

        :return: The player_levels of this MetagameConfig.
        :rtype: List[PlayerLevel]
        """
        return self._player_levels

    @player_levels.setter
    def player_levels(self, player_levels):
        """Sets the player_levels of this MetagameConfig.

        The list of player levels.

        :param player_levels: The player_levels of this MetagameConfig.
        :type player_levels: List[PlayerLevel]
        """

        self._player_levels = player_levels
