/**
 * Workflows API
 * Manage workflow definitions. To execute workflows and manage executions, see the Workflows Executions API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkflow.h
 *
 * Workflow program to be executed by Workflows.
 */

#ifndef OAIWorkflow_H
#define OAIWorkflow_H

#include <QJsonObject>

#include "OAIStateError.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStateError;

class OAIWorkflow : public OAIObject {
public:
    OAIWorkflow();
    OAIWorkflow(QString json);
    ~OAIWorkflow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallLogLevel() const;
    void setCallLogLevel(const QString &call_log_level);
    bool is_call_log_level_Set() const;
    bool is_call_log_level_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getCryptoKeyName() const;
    void setCryptoKeyName(const QString &crypto_key_name);
    bool is_crypto_key_name_Set() const;
    bool is_crypto_key_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRevisionCreateTime() const;
    void setRevisionCreateTime(const QString &revision_create_time);
    bool is_revision_create_time_Set() const;
    bool is_revision_create_time_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    QString getServiceAccount() const;
    void setServiceAccount(const QString &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    QString getSourceContents() const;
    void setSourceContents(const QString &source_contents);
    bool is_source_contents_Set() const;
    bool is_source_contents_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIStateError getStateError() const;
    void setStateError(const OAIStateError &state_error);
    bool is_state_error_Set() const;
    bool is_state_error_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QMap<QString, QString> getUserEnvVars() const;
    void setUserEnvVars(const QMap<QString, QString> &user_env_vars);
    bool is_user_env_vars_Set() const;
    bool is_user_env_vars_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_call_log_level;
    bool m_call_log_level_isSet;
    bool m_call_log_level_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_crypto_key_name;
    bool m_crypto_key_name_isSet;
    bool m_crypto_key_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_revision_create_time;
    bool m_revision_create_time_isSet;
    bool m_revision_create_time_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;

    QString m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    QString m_source_contents;
    bool m_source_contents_isSet;
    bool m_source_contents_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIStateError m_state_error;
    bool m_state_error_isSet;
    bool m_state_error_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QMap<QString, QString> m_user_env_vars;
    bool m_user_env_vars_isSet;
    bool m_user_env_vars_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkflow)

#endif // OAIWorkflow_H
