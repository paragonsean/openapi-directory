/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BackfillAllStrategy from './model/BackfillAllStrategy';
import BackfillJob from './model/BackfillJob';
import ConnectionProfile from './model/ConnectionProfile';
import DestinationConfig from './model/DestinationConfig';
import DiscoverConnectionProfileRequest from './model/DiscoverConnectionProfileRequest';
import DiscoverConnectionProfileResponse from './model/DiscoverConnectionProfileResponse';
import Error from './model/Error';
import FetchErrorsResponse from './model/FetchErrorsResponse';
import FetchStaticIpsResponse from './model/FetchStaticIpsResponse';
import ForwardSshTunnelConnectivity from './model/ForwardSshTunnelConnectivity';
import GcsDestinationConfig from './model/GcsDestinationConfig';
import GcsProfile from './model/GcsProfile';
import JsonFileFormat from './model/JsonFileFormat';
import ListConnectionProfilesResponse from './model/ListConnectionProfilesResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListPrivateConnectionsResponse from './model/ListPrivateConnectionsResponse';
import ListRoutesResponse from './model/ListRoutesResponse';
import ListStreamObjectsResponse from './model/ListStreamObjectsResponse';
import ListStreamsResponse from './model/ListStreamsResponse';
import Location from './model/Location';
import MysqlColumn from './model/MysqlColumn';
import MysqlDatabase from './model/MysqlDatabase';
import MysqlObjectIdentifier from './model/MysqlObjectIdentifier';
import MysqlProfile from './model/MysqlProfile';
import MysqlRdbms from './model/MysqlRdbms';
import MysqlSourceConfig from './model/MysqlSourceConfig';
import MysqlSslConfig from './model/MysqlSslConfig';
import MysqlTable from './model/MysqlTable';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import OracleColumn from './model/OracleColumn';
import OracleObjectIdentifier from './model/OracleObjectIdentifier';
import OracleProfile from './model/OracleProfile';
import OracleRdbms from './model/OracleRdbms';
import OracleSchema from './model/OracleSchema';
import OracleSourceConfig from './model/OracleSourceConfig';
import OracleTable from './model/OracleTable';
import PrivateConnection from './model/PrivateConnection';
import PrivateConnectivity from './model/PrivateConnectivity';
import Route from './model/Route';
import SourceConfig from './model/SourceConfig';
import SourceObjectIdentifier from './model/SourceObjectIdentifier';
import StartBackfillJobResponse from './model/StartBackfillJobResponse';
import Status from './model/Status';
import StopBackfillJobResponse from './model/StopBackfillJobResponse';
import Stream from './model/Stream';
import StreamObject from './model/StreamObject';
import Validation from './model/Validation';
import ValidationMessage from './model/ValidationMessage';
import ValidationResult from './model/ValidationResult';
import VpcPeeringConfig from './model/VpcPeeringConfig';
import ProjectsApi from './api/ProjectsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DatastreamApi = require('index'); // See note below*.
* var xxxSvc = new DatastreamApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DatastreamApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DatastreamApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DatastreamApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1alpha1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BackfillAllStrategy model constructor.
     * @property {module:model/BackfillAllStrategy}
     */
    BackfillAllStrategy,

    /**
     * The BackfillJob model constructor.
     * @property {module:model/BackfillJob}
     */
    BackfillJob,

    /**
     * The ConnectionProfile model constructor.
     * @property {module:model/ConnectionProfile}
     */
    ConnectionProfile,

    /**
     * The DestinationConfig model constructor.
     * @property {module:model/DestinationConfig}
     */
    DestinationConfig,

    /**
     * The DiscoverConnectionProfileRequest model constructor.
     * @property {module:model/DiscoverConnectionProfileRequest}
     */
    DiscoverConnectionProfileRequest,

    /**
     * The DiscoverConnectionProfileResponse model constructor.
     * @property {module:model/DiscoverConnectionProfileResponse}
     */
    DiscoverConnectionProfileResponse,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The FetchErrorsResponse model constructor.
     * @property {module:model/FetchErrorsResponse}
     */
    FetchErrorsResponse,

    /**
     * The FetchStaticIpsResponse model constructor.
     * @property {module:model/FetchStaticIpsResponse}
     */
    FetchStaticIpsResponse,

    /**
     * The ForwardSshTunnelConnectivity model constructor.
     * @property {module:model/ForwardSshTunnelConnectivity}
     */
    ForwardSshTunnelConnectivity,

    /**
     * The GcsDestinationConfig model constructor.
     * @property {module:model/GcsDestinationConfig}
     */
    GcsDestinationConfig,

    /**
     * The GcsProfile model constructor.
     * @property {module:model/GcsProfile}
     */
    GcsProfile,

    /**
     * The JsonFileFormat model constructor.
     * @property {module:model/JsonFileFormat}
     */
    JsonFileFormat,

    /**
     * The ListConnectionProfilesResponse model constructor.
     * @property {module:model/ListConnectionProfilesResponse}
     */
    ListConnectionProfilesResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListPrivateConnectionsResponse model constructor.
     * @property {module:model/ListPrivateConnectionsResponse}
     */
    ListPrivateConnectionsResponse,

    /**
     * The ListRoutesResponse model constructor.
     * @property {module:model/ListRoutesResponse}
     */
    ListRoutesResponse,

    /**
     * The ListStreamObjectsResponse model constructor.
     * @property {module:model/ListStreamObjectsResponse}
     */
    ListStreamObjectsResponse,

    /**
     * The ListStreamsResponse model constructor.
     * @property {module:model/ListStreamsResponse}
     */
    ListStreamsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The MysqlColumn model constructor.
     * @property {module:model/MysqlColumn}
     */
    MysqlColumn,

    /**
     * The MysqlDatabase model constructor.
     * @property {module:model/MysqlDatabase}
     */
    MysqlDatabase,

    /**
     * The MysqlObjectIdentifier model constructor.
     * @property {module:model/MysqlObjectIdentifier}
     */
    MysqlObjectIdentifier,

    /**
     * The MysqlProfile model constructor.
     * @property {module:model/MysqlProfile}
     */
    MysqlProfile,

    /**
     * The MysqlRdbms model constructor.
     * @property {module:model/MysqlRdbms}
     */
    MysqlRdbms,

    /**
     * The MysqlSourceConfig model constructor.
     * @property {module:model/MysqlSourceConfig}
     */
    MysqlSourceConfig,

    /**
     * The MysqlSslConfig model constructor.
     * @property {module:model/MysqlSslConfig}
     */
    MysqlSslConfig,

    /**
     * The MysqlTable model constructor.
     * @property {module:model/MysqlTable}
     */
    MysqlTable,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The OracleColumn model constructor.
     * @property {module:model/OracleColumn}
     */
    OracleColumn,

    /**
     * The OracleObjectIdentifier model constructor.
     * @property {module:model/OracleObjectIdentifier}
     */
    OracleObjectIdentifier,

    /**
     * The OracleProfile model constructor.
     * @property {module:model/OracleProfile}
     */
    OracleProfile,

    /**
     * The OracleRdbms model constructor.
     * @property {module:model/OracleRdbms}
     */
    OracleRdbms,

    /**
     * The OracleSchema model constructor.
     * @property {module:model/OracleSchema}
     */
    OracleSchema,

    /**
     * The OracleSourceConfig model constructor.
     * @property {module:model/OracleSourceConfig}
     */
    OracleSourceConfig,

    /**
     * The OracleTable model constructor.
     * @property {module:model/OracleTable}
     */
    OracleTable,

    /**
     * The PrivateConnection model constructor.
     * @property {module:model/PrivateConnection}
     */
    PrivateConnection,

    /**
     * The PrivateConnectivity model constructor.
     * @property {module:model/PrivateConnectivity}
     */
    PrivateConnectivity,

    /**
     * The Route model constructor.
     * @property {module:model/Route}
     */
    Route,

    /**
     * The SourceConfig model constructor.
     * @property {module:model/SourceConfig}
     */
    SourceConfig,

    /**
     * The SourceObjectIdentifier model constructor.
     * @property {module:model/SourceObjectIdentifier}
     */
    SourceObjectIdentifier,

    /**
     * The StartBackfillJobResponse model constructor.
     * @property {module:model/StartBackfillJobResponse}
     */
    StartBackfillJobResponse,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The StopBackfillJobResponse model constructor.
     * @property {module:model/StopBackfillJobResponse}
     */
    StopBackfillJobResponse,

    /**
     * The Stream model constructor.
     * @property {module:model/Stream}
     */
    Stream,

    /**
     * The StreamObject model constructor.
     * @property {module:model/StreamObject}
     */
    StreamObject,

    /**
     * The Validation model constructor.
     * @property {module:model/Validation}
     */
    Validation,

    /**
     * The ValidationMessage model constructor.
     * @property {module:model/ValidationMessage}
     */
    ValidationMessage,

    /**
     * The ValidationResult model constructor.
     * @property {module:model/ValidationResult}
     */
    ValidationResult,

    /**
     * The VpcPeeringConfig model constructor.
     * @property {module:model/VpcPeeringConfig}
     */
    VpcPeeringConfig,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
