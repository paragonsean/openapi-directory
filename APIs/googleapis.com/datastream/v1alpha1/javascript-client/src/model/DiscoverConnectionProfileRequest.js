/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectionProfile from './ConnectionProfile';
import MysqlRdbms from './MysqlRdbms';
import OracleRdbms from './OracleRdbms';

/**
 * The DiscoverConnectionProfileRequest model module.
 * @module model/DiscoverConnectionProfileRequest
 * @version v1alpha1
 */
class DiscoverConnectionProfileRequest {
    /**
     * Constructs a new <code>DiscoverConnectionProfileRequest</code>.
     * Request message for &#39;discover&#39; ConnectionProfile request.
     * @alias module:model/DiscoverConnectionProfileRequest
     */
    constructor() { 
        
        DiscoverConnectionProfileRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiscoverConnectionProfileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscoverConnectionProfileRequest} obj Optional instance to populate.
     * @return {module:model/DiscoverConnectionProfileRequest} The populated <code>DiscoverConnectionProfileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscoverConnectionProfileRequest();

            if (data.hasOwnProperty('connectionProfile')) {
                obj['connectionProfile'] = ConnectionProfile.constructFromObject(data['connectionProfile']);
            }
            if (data.hasOwnProperty('connectionProfileName')) {
                obj['connectionProfileName'] = ApiClient.convertToType(data['connectionProfileName'], 'String');
            }
            if (data.hasOwnProperty('mysqlRdbms')) {
                obj['mysqlRdbms'] = MysqlRdbms.constructFromObject(data['mysqlRdbms']);
            }
            if (data.hasOwnProperty('oracleRdbms')) {
                obj['oracleRdbms'] = OracleRdbms.constructFromObject(data['oracleRdbms']);
            }
            if (data.hasOwnProperty('recursionDepth')) {
                obj['recursionDepth'] = ApiClient.convertToType(data['recursionDepth'], 'Number');
            }
            if (data.hasOwnProperty('recursive')) {
                obj['recursive'] = ApiClient.convertToType(data['recursive'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscoverConnectionProfileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscoverConnectionProfileRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `connectionProfile`
        if (data['connectionProfile']) { // data not null
          ConnectionProfile.validateJSON(data['connectionProfile']);
        }
        // ensure the json data is a string
        if (data['connectionProfileName'] && !(typeof data['connectionProfileName'] === 'string' || data['connectionProfileName'] instanceof String)) {
            throw new Error("Expected the field `connectionProfileName` to be a primitive type in the JSON string but got " + data['connectionProfileName']);
        }
        // validate the optional field `mysqlRdbms`
        if (data['mysqlRdbms']) { // data not null
          MysqlRdbms.validateJSON(data['mysqlRdbms']);
        }
        // validate the optional field `oracleRdbms`
        if (data['oracleRdbms']) { // data not null
          OracleRdbms.validateJSON(data['oracleRdbms']);
        }

        return true;
    }


}



/**
 * @member {module:model/ConnectionProfile} connectionProfile
 */
DiscoverConnectionProfileRequest.prototype['connectionProfile'] = undefined;

/**
 * A reference to an existing ConnectionProfile.
 * @member {String} connectionProfileName
 */
DiscoverConnectionProfileRequest.prototype['connectionProfileName'] = undefined;

/**
 * @member {module:model/MysqlRdbms} mysqlRdbms
 */
DiscoverConnectionProfileRequest.prototype['mysqlRdbms'] = undefined;

/**
 * @member {module:model/OracleRdbms} oracleRdbms
 */
DiscoverConnectionProfileRequest.prototype['oracleRdbms'] = undefined;

/**
 * The number of hierarchy levels below the current level to be retrieved.
 * @member {Number} recursionDepth
 */
DiscoverConnectionProfileRequest.prototype['recursionDepth'] = undefined;

/**
 * Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).
 * @member {Boolean} recursive
 */
DiscoverConnectionProfileRequest.prototype['recursive'] = undefined;






export default DiscoverConnectionProfileRequest;

