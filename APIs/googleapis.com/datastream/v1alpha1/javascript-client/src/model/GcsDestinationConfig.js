/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JsonFileFormat from './JsonFileFormat';

/**
 * The GcsDestinationConfig model module.
 * @module model/GcsDestinationConfig
 * @version v1alpha1
 */
class GcsDestinationConfig {
    /**
     * Constructs a new <code>GcsDestinationConfig</code>.
     * Google Cloud Storage destination configuration
     * @alias module:model/GcsDestinationConfig
     */
    constructor() { 
        
        GcsDestinationConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GcsDestinationConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GcsDestinationConfig} obj Optional instance to populate.
     * @return {module:model/GcsDestinationConfig} The populated <code>GcsDestinationConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GcsDestinationConfig();

            if (data.hasOwnProperty('avroFileFormat')) {
                obj['avroFileFormat'] = ApiClient.convertToType(data['avroFileFormat'], Object);
            }
            if (data.hasOwnProperty('fileRotationInterval')) {
                obj['fileRotationInterval'] = ApiClient.convertToType(data['fileRotationInterval'], 'String');
            }
            if (data.hasOwnProperty('fileRotationMb')) {
                obj['fileRotationMb'] = ApiClient.convertToType(data['fileRotationMb'], 'Number');
            }
            if (data.hasOwnProperty('gcsFileFormat')) {
                obj['gcsFileFormat'] = ApiClient.convertToType(data['gcsFileFormat'], 'String');
            }
            if (data.hasOwnProperty('jsonFileFormat')) {
                obj['jsonFileFormat'] = JsonFileFormat.constructFromObject(data['jsonFileFormat']);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GcsDestinationConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GcsDestinationConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fileRotationInterval'] && !(typeof data['fileRotationInterval'] === 'string' || data['fileRotationInterval'] instanceof String)) {
            throw new Error("Expected the field `fileRotationInterval` to be a primitive type in the JSON string but got " + data['fileRotationInterval']);
        }
        // ensure the json data is a string
        if (data['gcsFileFormat'] && !(typeof data['gcsFileFormat'] === 'string' || data['gcsFileFormat'] instanceof String)) {
            throw new Error("Expected the field `gcsFileFormat` to be a primitive type in the JSON string but got " + data['gcsFileFormat']);
        }
        // validate the optional field `jsonFileFormat`
        if (data['jsonFileFormat']) { // data not null
          JsonFileFormat.validateJSON(data['jsonFileFormat']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}



/**
 * AVRO file format configuration.
 * @member {Object} avroFileFormat
 */
GcsDestinationConfig.prototype['avroFileFormat'] = undefined;

/**
 * The maximum duration for which new events are added before a file is closed and a new file is created.
 * @member {String} fileRotationInterval
 */
GcsDestinationConfig.prototype['fileRotationInterval'] = undefined;

/**
 * The maximum file size to be saved in the bucket.
 * @member {Number} fileRotationMb
 */
GcsDestinationConfig.prototype['fileRotationMb'] = undefined;

/**
 * File format that data should be written in. Deprecated field (b/169501737) - use file_format instead.
 * @member {module:model/GcsDestinationConfig.GcsFileFormatEnum} gcsFileFormat
 */
GcsDestinationConfig.prototype['gcsFileFormat'] = undefined;

/**
 * @member {module:model/JsonFileFormat} jsonFileFormat
 */
GcsDestinationConfig.prototype['jsonFileFormat'] = undefined;

/**
 * Path inside the Cloud Storage bucket to write data to.
 * @member {String} path
 */
GcsDestinationConfig.prototype['path'] = undefined;





/**
 * Allowed values for the <code>gcsFileFormat</code> property.
 * @enum {String}
 * @readonly
 */
GcsDestinationConfig['GcsFileFormatEnum'] = {

    /**
     * value: "GCS_FILE_FORMAT_UNSPECIFIED"
     * @const
     */
    "GCS_FILE_FORMAT_UNSPECIFIED": "GCS_FILE_FORMAT_UNSPECIFIED",

    /**
     * value: "AVRO"
     * @const
     */
    "AVRO": "AVRO"
};



export default GcsDestinationConfig;

