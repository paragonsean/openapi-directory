/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceConfig::OAISourceConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceConfig::OAISourceConfig() {
    this->initializeModel();
}

OAISourceConfig::~OAISourceConfig() {}

void OAISourceConfig::initializeModel() {

    m_mysql_source_config_isSet = false;
    m_mysql_source_config_isValid = false;

    m_oracle_source_config_isSet = false;
    m_oracle_source_config_isValid = false;

    m_source_connection_profile_name_isSet = false;
    m_source_connection_profile_name_isValid = false;
}

void OAISourceConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceConfig::fromJsonObject(QJsonObject json) {

    m_mysql_source_config_isValid = ::OpenAPI::fromJsonValue(m_mysql_source_config, json[QString("mysqlSourceConfig")]);
    m_mysql_source_config_isSet = !json[QString("mysqlSourceConfig")].isNull() && m_mysql_source_config_isValid;

    m_oracle_source_config_isValid = ::OpenAPI::fromJsonValue(m_oracle_source_config, json[QString("oracleSourceConfig")]);
    m_oracle_source_config_isSet = !json[QString("oracleSourceConfig")].isNull() && m_oracle_source_config_isValid;

    m_source_connection_profile_name_isValid = ::OpenAPI::fromJsonValue(m_source_connection_profile_name, json[QString("sourceConnectionProfileName")]);
    m_source_connection_profile_name_isSet = !json[QString("sourceConnectionProfileName")].isNull() && m_source_connection_profile_name_isValid;
}

QString OAISourceConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_mysql_source_config.isSet()) {
        obj.insert(QString("mysqlSourceConfig"), ::OpenAPI::toJsonValue(m_mysql_source_config));
    }
    if (m_oracle_source_config.isSet()) {
        obj.insert(QString("oracleSourceConfig"), ::OpenAPI::toJsonValue(m_oracle_source_config));
    }
    if (m_source_connection_profile_name_isSet) {
        obj.insert(QString("sourceConnectionProfileName"), ::OpenAPI::toJsonValue(m_source_connection_profile_name));
    }
    return obj;
}

OAIMysqlSourceConfig OAISourceConfig::getMysqlSourceConfig() const {
    return m_mysql_source_config;
}
void OAISourceConfig::setMysqlSourceConfig(const OAIMysqlSourceConfig &mysql_source_config) {
    m_mysql_source_config = mysql_source_config;
    m_mysql_source_config_isSet = true;
}

bool OAISourceConfig::is_mysql_source_config_Set() const{
    return m_mysql_source_config_isSet;
}

bool OAISourceConfig::is_mysql_source_config_Valid() const{
    return m_mysql_source_config_isValid;
}

OAIOracleSourceConfig OAISourceConfig::getOracleSourceConfig() const {
    return m_oracle_source_config;
}
void OAISourceConfig::setOracleSourceConfig(const OAIOracleSourceConfig &oracle_source_config) {
    m_oracle_source_config = oracle_source_config;
    m_oracle_source_config_isSet = true;
}

bool OAISourceConfig::is_oracle_source_config_Set() const{
    return m_oracle_source_config_isSet;
}

bool OAISourceConfig::is_oracle_source_config_Valid() const{
    return m_oracle_source_config_isValid;
}

QString OAISourceConfig::getSourceConnectionProfileName() const {
    return m_source_connection_profile_name;
}
void OAISourceConfig::setSourceConnectionProfileName(const QString &source_connection_profile_name) {
    m_source_connection_profile_name = source_connection_profile_name;
    m_source_connection_profile_name_isSet = true;
}

bool OAISourceConfig::is_source_connection_profile_name_Set() const{
    return m_source_connection_profile_name_isSet;
}

bool OAISourceConfig::is_source_connection_profile_name_Valid() const{
    return m_source_connection_profile_name_isValid;
}

bool OAISourceConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mysql_source_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_oracle_source_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_connection_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
