/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMysqlSourceConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMysqlSourceConfig::OAIMysqlSourceConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMysqlSourceConfig::OAIMysqlSourceConfig() {
    this->initializeModel();
}

OAIMysqlSourceConfig::~OAIMysqlSourceConfig() {}

void OAIMysqlSourceConfig::initializeModel() {

    m_allowlist_isSet = false;
    m_allowlist_isValid = false;

    m_rejectlist_isSet = false;
    m_rejectlist_isValid = false;
}

void OAIMysqlSourceConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMysqlSourceConfig::fromJsonObject(QJsonObject json) {

    m_allowlist_isValid = ::OpenAPI::fromJsonValue(m_allowlist, json[QString("allowlist")]);
    m_allowlist_isSet = !json[QString("allowlist")].isNull() && m_allowlist_isValid;

    m_rejectlist_isValid = ::OpenAPI::fromJsonValue(m_rejectlist, json[QString("rejectlist")]);
    m_rejectlist_isSet = !json[QString("rejectlist")].isNull() && m_rejectlist_isValid;
}

QString OAIMysqlSourceConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMysqlSourceConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_allowlist.isSet()) {
        obj.insert(QString("allowlist"), ::OpenAPI::toJsonValue(m_allowlist));
    }
    if (m_rejectlist.isSet()) {
        obj.insert(QString("rejectlist"), ::OpenAPI::toJsonValue(m_rejectlist));
    }
    return obj;
}

OAIMysqlRdbms OAIMysqlSourceConfig::getAllowlist() const {
    return m_allowlist;
}
void OAIMysqlSourceConfig::setAllowlist(const OAIMysqlRdbms &allowlist) {
    m_allowlist = allowlist;
    m_allowlist_isSet = true;
}

bool OAIMysqlSourceConfig::is_allowlist_Set() const{
    return m_allowlist_isSet;
}

bool OAIMysqlSourceConfig::is_allowlist_Valid() const{
    return m_allowlist_isValid;
}

OAIMysqlRdbms OAIMysqlSourceConfig::getRejectlist() const {
    return m_rejectlist;
}
void OAIMysqlSourceConfig::setRejectlist(const OAIMysqlRdbms &rejectlist) {
    m_rejectlist = rejectlist;
    m_rejectlist_isSet = true;
}

bool OAIMysqlSourceConfig::is_rejectlist_Set() const{
    return m_rejectlist_isSet;
}

bool OAIMysqlSourceConfig::is_rejectlist_Valid() const{
    return m_rejectlist_isValid;
}

bool OAIMysqlSourceConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowlist.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rejectlist.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMysqlSourceConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
