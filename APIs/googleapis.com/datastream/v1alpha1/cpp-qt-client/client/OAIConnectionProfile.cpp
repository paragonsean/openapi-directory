/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConnectionProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConnectionProfile::OAIConnectionProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConnectionProfile::OAIConnectionProfile() {
    this->initializeModel();
}

OAIConnectionProfile::~OAIConnectionProfile() {}

void OAIConnectionProfile::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_forward_ssh_connectivity_isSet = false;
    m_forward_ssh_connectivity_isValid = false;

    m_gcs_profile_isSet = false;
    m_gcs_profile_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_mysql_profile_isSet = false;
    m_mysql_profile_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_no_connectivity_isSet = false;
    m_no_connectivity_isValid = false;

    m_oracle_profile_isSet = false;
    m_oracle_profile_isValid = false;

    m_private_connectivity_isSet = false;
    m_private_connectivity_isValid = false;

    m_static_service_ip_connectivity_isSet = false;
    m_static_service_ip_connectivity_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIConnectionProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConnectionProfile::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_forward_ssh_connectivity_isValid = ::OpenAPI::fromJsonValue(m_forward_ssh_connectivity, json[QString("forwardSshConnectivity")]);
    m_forward_ssh_connectivity_isSet = !json[QString("forwardSshConnectivity")].isNull() && m_forward_ssh_connectivity_isValid;

    m_gcs_profile_isValid = ::OpenAPI::fromJsonValue(m_gcs_profile, json[QString("gcsProfile")]);
    m_gcs_profile_isSet = !json[QString("gcsProfile")].isNull() && m_gcs_profile_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_mysql_profile_isValid = ::OpenAPI::fromJsonValue(m_mysql_profile, json[QString("mysqlProfile")]);
    m_mysql_profile_isSet = !json[QString("mysqlProfile")].isNull() && m_mysql_profile_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_no_connectivity_isValid = ::OpenAPI::fromJsonValue(m_no_connectivity, json[QString("noConnectivity")]);
    m_no_connectivity_isSet = !json[QString("noConnectivity")].isNull() && m_no_connectivity_isValid;

    m_oracle_profile_isValid = ::OpenAPI::fromJsonValue(m_oracle_profile, json[QString("oracleProfile")]);
    m_oracle_profile_isSet = !json[QString("oracleProfile")].isNull() && m_oracle_profile_isValid;

    m_private_connectivity_isValid = ::OpenAPI::fromJsonValue(m_private_connectivity, json[QString("privateConnectivity")]);
    m_private_connectivity_isSet = !json[QString("privateConnectivity")].isNull() && m_private_connectivity_isValid;

    m_static_service_ip_connectivity_isValid = ::OpenAPI::fromJsonValue(m_static_service_ip_connectivity, json[QString("staticServiceIpConnectivity")]);
    m_static_service_ip_connectivity_isSet = !json[QString("staticServiceIpConnectivity")].isNull() && m_static_service_ip_connectivity_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIConnectionProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConnectionProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_forward_ssh_connectivity.isSet()) {
        obj.insert(QString("forwardSshConnectivity"), ::OpenAPI::toJsonValue(m_forward_ssh_connectivity));
    }
    if (m_gcs_profile.isSet()) {
        obj.insert(QString("gcsProfile"), ::OpenAPI::toJsonValue(m_gcs_profile));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_mysql_profile.isSet()) {
        obj.insert(QString("mysqlProfile"), ::OpenAPI::toJsonValue(m_mysql_profile));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_no_connectivity_isSet) {
        obj.insert(QString("noConnectivity"), ::OpenAPI::toJsonValue(m_no_connectivity));
    }
    if (m_oracle_profile.isSet()) {
        obj.insert(QString("oracleProfile"), ::OpenAPI::toJsonValue(m_oracle_profile));
    }
    if (m_private_connectivity.isSet()) {
        obj.insert(QString("privateConnectivity"), ::OpenAPI::toJsonValue(m_private_connectivity));
    }
    if (m_static_service_ip_connectivity_isSet) {
        obj.insert(QString("staticServiceIpConnectivity"), ::OpenAPI::toJsonValue(m_static_service_ip_connectivity));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIConnectionProfile::getCreateTime() const {
    return m_create_time;
}
void OAIConnectionProfile::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIConnectionProfile::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIConnectionProfile::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIConnectionProfile::getDisplayName() const {
    return m_display_name;
}
void OAIConnectionProfile::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIConnectionProfile::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIConnectionProfile::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIForwardSshTunnelConnectivity OAIConnectionProfile::getForwardSshConnectivity() const {
    return m_forward_ssh_connectivity;
}
void OAIConnectionProfile::setForwardSshConnectivity(const OAIForwardSshTunnelConnectivity &forward_ssh_connectivity) {
    m_forward_ssh_connectivity = forward_ssh_connectivity;
    m_forward_ssh_connectivity_isSet = true;
}

bool OAIConnectionProfile::is_forward_ssh_connectivity_Set() const{
    return m_forward_ssh_connectivity_isSet;
}

bool OAIConnectionProfile::is_forward_ssh_connectivity_Valid() const{
    return m_forward_ssh_connectivity_isValid;
}

OAIGcsProfile OAIConnectionProfile::getGcsProfile() const {
    return m_gcs_profile;
}
void OAIConnectionProfile::setGcsProfile(const OAIGcsProfile &gcs_profile) {
    m_gcs_profile = gcs_profile;
    m_gcs_profile_isSet = true;
}

bool OAIConnectionProfile::is_gcs_profile_Set() const{
    return m_gcs_profile_isSet;
}

bool OAIConnectionProfile::is_gcs_profile_Valid() const{
    return m_gcs_profile_isValid;
}

QMap<QString, QString> OAIConnectionProfile::getLabels() const {
    return m_labels;
}
void OAIConnectionProfile::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIConnectionProfile::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIConnectionProfile::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIMysqlProfile OAIConnectionProfile::getMysqlProfile() const {
    return m_mysql_profile;
}
void OAIConnectionProfile::setMysqlProfile(const OAIMysqlProfile &mysql_profile) {
    m_mysql_profile = mysql_profile;
    m_mysql_profile_isSet = true;
}

bool OAIConnectionProfile::is_mysql_profile_Set() const{
    return m_mysql_profile_isSet;
}

bool OAIConnectionProfile::is_mysql_profile_Valid() const{
    return m_mysql_profile_isValid;
}

QString OAIConnectionProfile::getName() const {
    return m_name;
}
void OAIConnectionProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIConnectionProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIConnectionProfile::is_name_Valid() const{
    return m_name_isValid;
}

OAIObject OAIConnectionProfile::getNoConnectivity() const {
    return m_no_connectivity;
}
void OAIConnectionProfile::setNoConnectivity(const OAIObject &no_connectivity) {
    m_no_connectivity = no_connectivity;
    m_no_connectivity_isSet = true;
}

bool OAIConnectionProfile::is_no_connectivity_Set() const{
    return m_no_connectivity_isSet;
}

bool OAIConnectionProfile::is_no_connectivity_Valid() const{
    return m_no_connectivity_isValid;
}

OAIOracleProfile OAIConnectionProfile::getOracleProfile() const {
    return m_oracle_profile;
}
void OAIConnectionProfile::setOracleProfile(const OAIOracleProfile &oracle_profile) {
    m_oracle_profile = oracle_profile;
    m_oracle_profile_isSet = true;
}

bool OAIConnectionProfile::is_oracle_profile_Set() const{
    return m_oracle_profile_isSet;
}

bool OAIConnectionProfile::is_oracle_profile_Valid() const{
    return m_oracle_profile_isValid;
}

OAIPrivateConnectivity OAIConnectionProfile::getPrivateConnectivity() const {
    return m_private_connectivity;
}
void OAIConnectionProfile::setPrivateConnectivity(const OAIPrivateConnectivity &private_connectivity) {
    m_private_connectivity = private_connectivity;
    m_private_connectivity_isSet = true;
}

bool OAIConnectionProfile::is_private_connectivity_Set() const{
    return m_private_connectivity_isSet;
}

bool OAIConnectionProfile::is_private_connectivity_Valid() const{
    return m_private_connectivity_isValid;
}

OAIObject OAIConnectionProfile::getStaticServiceIpConnectivity() const {
    return m_static_service_ip_connectivity;
}
void OAIConnectionProfile::setStaticServiceIpConnectivity(const OAIObject &static_service_ip_connectivity) {
    m_static_service_ip_connectivity = static_service_ip_connectivity;
    m_static_service_ip_connectivity_isSet = true;
}

bool OAIConnectionProfile::is_static_service_ip_connectivity_Set() const{
    return m_static_service_ip_connectivity_isSet;
}

bool OAIConnectionProfile::is_static_service_ip_connectivity_Valid() const{
    return m_static_service_ip_connectivity_isValid;
}

QString OAIConnectionProfile::getUpdateTime() const {
    return m_update_time;
}
void OAIConnectionProfile::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIConnectionProfile::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIConnectionProfile::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIConnectionProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forward_ssh_connectivity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_mysql_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_connectivity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oracle_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_connectivity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_static_service_ip_connectivity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConnectionProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
