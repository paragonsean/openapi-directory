# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backfill_job import BackfillJob
from openapi_server.models.error import Error
from openapi_server.models.source_object_identifier import SourceObjectIdentifier
from openapi_server import util


class StreamObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backfill_job: BackfillJob=None, create_time: str=None, display_name: str=None, errors: List[Error]=None, name: str=None, source_object: SourceObjectIdentifier=None, update_time: str=None):
        """StreamObject - a model defined in OpenAPI

        :param backfill_job: The backfill_job of this StreamObject.
        :param create_time: The create_time of this StreamObject.
        :param display_name: The display_name of this StreamObject.
        :param errors: The errors of this StreamObject.
        :param name: The name of this StreamObject.
        :param source_object: The source_object of this StreamObject.
        :param update_time: The update_time of this StreamObject.
        """
        self.openapi_types = {
            'backfill_job': BackfillJob,
            'create_time': str,
            'display_name': str,
            'errors': List[Error],
            'name': str,
            'source_object': SourceObjectIdentifier,
            'update_time': str
        }

        self.attribute_map = {
            'backfill_job': 'backfillJob',
            'create_time': 'createTime',
            'display_name': 'displayName',
            'errors': 'errors',
            'name': 'name',
            'source_object': 'sourceObject',
            'update_time': 'updateTime'
        }

        self._backfill_job = backfill_job
        self._create_time = create_time
        self._display_name = display_name
        self._errors = errors
        self._name = name
        self._source_object = source_object
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamObject of this StreamObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backfill_job(self):
        """Gets the backfill_job of this StreamObject.


        :return: The backfill_job of this StreamObject.
        :rtype: BackfillJob
        """
        return self._backfill_job

    @backfill_job.setter
    def backfill_job(self, backfill_job):
        """Sets the backfill_job of this StreamObject.


        :param backfill_job: The backfill_job of this StreamObject.
        :type backfill_job: BackfillJob
        """

        self._backfill_job = backfill_job

    @property
    def create_time(self):
        """Gets the create_time of this StreamObject.

        Output only. The creation time of the object.

        :return: The create_time of this StreamObject.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this StreamObject.

        Output only. The creation time of the object.

        :param create_time: The create_time of this StreamObject.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this StreamObject.

        Required. Display name.

        :return: The display_name of this StreamObject.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this StreamObject.

        Required. Display name.

        :param display_name: The display_name of this StreamObject.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def errors(self):
        """Gets the errors of this StreamObject.

        Output only. Active errors on the object.

        :return: The errors of this StreamObject.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this StreamObject.

        Output only. Active errors on the object.

        :param errors: The errors of this StreamObject.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def name(self):
        """Gets the name of this StreamObject.

        Output only. The object's name.

        :return: The name of this StreamObject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StreamObject.

        Output only. The object's name.

        :param name: The name of this StreamObject.
        :type name: str
        """

        self._name = name

    @property
    def source_object(self):
        """Gets the source_object of this StreamObject.


        :return: The source_object of this StreamObject.
        :rtype: SourceObjectIdentifier
        """
        return self._source_object

    @source_object.setter
    def source_object(self, source_object):
        """Sets the source_object of this StreamObject.


        :param source_object: The source_object of this StreamObject.
        :type source_object: SourceObjectIdentifier
        """

        self._source_object = source_object

    @property
    def update_time(self):
        """Gets the update_time of this StreamObject.

        Output only. The last update time of the object.

        :return: The update_time of this StreamObject.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this StreamObject.

        Output only. The last update time of the object.

        :param update_time: The update_time of this StreamObject.
        :type update_time: str
        """

        self._update_time = update_time
