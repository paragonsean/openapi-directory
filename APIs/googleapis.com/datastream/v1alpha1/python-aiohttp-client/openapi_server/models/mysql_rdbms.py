# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mysql_database import MysqlDatabase
from openapi_server import util


class MysqlRdbms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mysql_databases: List[MysqlDatabase]=None):
        """MysqlRdbms - a model defined in OpenAPI

        :param mysql_databases: The mysql_databases of this MysqlRdbms.
        """
        self.openapi_types = {
            'mysql_databases': List[MysqlDatabase]
        }

        self.attribute_map = {
            'mysql_databases': 'mysqlDatabases'
        }

        self._mysql_databases = mysql_databases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MysqlRdbms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MysqlRdbms of this MysqlRdbms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mysql_databases(self):
        """Gets the mysql_databases of this MysqlRdbms.

        Mysql databases on the server

        :return: The mysql_databases of this MysqlRdbms.
        :rtype: List[MysqlDatabase]
        """
        return self._mysql_databases

    @mysql_databases.setter
    def mysql_databases(self, mysql_databases):
        """Sets the mysql_databases of this MysqlRdbms.

        Mysql databases on the server

        :param mysql_databases: The mysql_databases of this MysqlRdbms.
        :type mysql_databases: List[MysqlDatabase]
        """

        self._mysql_databases = mysql_databases
