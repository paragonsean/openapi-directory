# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mysql_source_config import MysqlSourceConfig
from openapi_server.models.oracle_source_config import OracleSourceConfig
from openapi_server import util


class SourceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mysql_source_config: MysqlSourceConfig=None, oracle_source_config: OracleSourceConfig=None, source_connection_profile_name: str=None):
        """SourceConfig - a model defined in OpenAPI

        :param mysql_source_config: The mysql_source_config of this SourceConfig.
        :param oracle_source_config: The oracle_source_config of this SourceConfig.
        :param source_connection_profile_name: The source_connection_profile_name of this SourceConfig.
        """
        self.openapi_types = {
            'mysql_source_config': MysqlSourceConfig,
            'oracle_source_config': OracleSourceConfig,
            'source_connection_profile_name': str
        }

        self.attribute_map = {
            'mysql_source_config': 'mysqlSourceConfig',
            'oracle_source_config': 'oracleSourceConfig',
            'source_connection_profile_name': 'sourceConnectionProfileName'
        }

        self._mysql_source_config = mysql_source_config
        self._oracle_source_config = oracle_source_config
        self._source_connection_profile_name = source_connection_profile_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceConfig of this SourceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mysql_source_config(self):
        """Gets the mysql_source_config of this SourceConfig.


        :return: The mysql_source_config of this SourceConfig.
        :rtype: MysqlSourceConfig
        """
        return self._mysql_source_config

    @mysql_source_config.setter
    def mysql_source_config(self, mysql_source_config):
        """Sets the mysql_source_config of this SourceConfig.


        :param mysql_source_config: The mysql_source_config of this SourceConfig.
        :type mysql_source_config: MysqlSourceConfig
        """

        self._mysql_source_config = mysql_source_config

    @property
    def oracle_source_config(self):
        """Gets the oracle_source_config of this SourceConfig.


        :return: The oracle_source_config of this SourceConfig.
        :rtype: OracleSourceConfig
        """
        return self._oracle_source_config

    @oracle_source_config.setter
    def oracle_source_config(self, oracle_source_config):
        """Sets the oracle_source_config of this SourceConfig.


        :param oracle_source_config: The oracle_source_config of this SourceConfig.
        :type oracle_source_config: OracleSourceConfig
        """

        self._oracle_source_config = oracle_source_config

    @property
    def source_connection_profile_name(self):
        """Gets the source_connection_profile_name of this SourceConfig.

        Required. Source connection profile identifier.

        :return: The source_connection_profile_name of this SourceConfig.
        :rtype: str
        """
        return self._source_connection_profile_name

    @source_connection_profile_name.setter
    def source_connection_profile_name(self, source_connection_profile_name):
        """Sets the source_connection_profile_name of this SourceConfig.

        Required. Source connection profile identifier.

        :param source_connection_profile_name: The source_connection_profile_name of this SourceConfig.
        :type source_connection_profile_name: str
        """

        self._source_connection_profile_name = source_connection_profile_name
