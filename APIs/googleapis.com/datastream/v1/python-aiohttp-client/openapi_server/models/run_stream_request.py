# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cdc_strategy import CdcStrategy
from openapi_server import util


class RunStreamRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cdc_strategy: CdcStrategy=None):
        """RunStreamRequest - a model defined in OpenAPI

        :param cdc_strategy: The cdc_strategy of this RunStreamRequest.
        """
        self.openapi_types = {
            'cdc_strategy': CdcStrategy
        }

        self.attribute_map = {
            'cdc_strategy': 'cdcStrategy'
        }

        self._cdc_strategy = cdc_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RunStreamRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RunStreamRequest of this RunStreamRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cdc_strategy(self):
        """Gets the cdc_strategy of this RunStreamRequest.


        :return: The cdc_strategy of this RunStreamRequest.
        :rtype: CdcStrategy
        """
        return self._cdc_strategy

    @cdc_strategy.setter
    def cdc_strategy(self, cdc_strategy):
        """Sets the cdc_strategy of this RunStreamRequest.


        :param cdc_strategy: The cdc_strategy of this RunStreamRequest.
        :type cdc_strategy: CdcStrategy
        """

        self._cdc_strategy = cdc_strategy
