# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.validation import Validation
from openapi_server import util


class ValidationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, validations: List[Validation]=None):
        """ValidationResult - a model defined in OpenAPI

        :param validations: The validations of this ValidationResult.
        """
        self.openapi_types = {
            'validations': List[Validation]
        }

        self.attribute_map = {
            'validations': 'validations'
        }

        self._validations = validations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValidationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValidationResult of this ValidationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def validations(self):
        """Gets the validations of this ValidationResult.

        A list of validations (includes both executed as well as not executed validations).

        :return: The validations of this ValidationResult.
        :rtype: List[Validation]
        """
        return self._validations

    @validations.setter
    def validations(self, validations):
        """Sets the validations of this ValidationResult.

        A list of validations (includes both executed as well as not executed validations).

        :param validations: The validations of this ValidationResult.
        :type validations: List[Validation]
        """

        self._validations = validations
