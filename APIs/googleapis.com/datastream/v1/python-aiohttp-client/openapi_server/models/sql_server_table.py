# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sql_server_column import SqlServerColumn
from openapi_server import util


class SqlServerTable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[SqlServerColumn]=None, table: str=None):
        """SqlServerTable - a model defined in OpenAPI

        :param columns: The columns of this SqlServerTable.
        :param table: The table of this SqlServerTable.
        """
        self.openapi_types = {
            'columns': List[SqlServerColumn],
            'table': str
        }

        self.attribute_map = {
            'columns': 'columns',
            'table': 'table'
        }

        self._columns = columns
        self._table = table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SqlServerTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SqlServerTable of this SqlServerTable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this SqlServerTable.

        SQLServer columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.

        :return: The columns of this SqlServerTable.
        :rtype: List[SqlServerColumn]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this SqlServerTable.

        SQLServer columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.

        :param columns: The columns of this SqlServerTable.
        :type columns: List[SqlServerColumn]
        """

        self._columns = columns

    @property
    def table(self):
        """Gets the table of this SqlServerTable.

        Table name.

        :return: The table of this SqlServerTable.
        :rtype: str
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this SqlServerTable.

        Table name.

        :param table: The table of this SqlServerTable.
        :type table: str
        """

        self._table = table
