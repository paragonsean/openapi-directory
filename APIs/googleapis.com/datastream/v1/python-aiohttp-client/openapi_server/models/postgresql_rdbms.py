# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.postgresql_schema import PostgresqlSchema
from openapi_server import util


class PostgresqlRdbms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, postgresql_schemas: List[PostgresqlSchema]=None):
        """PostgresqlRdbms - a model defined in OpenAPI

        :param postgresql_schemas: The postgresql_schemas of this PostgresqlRdbms.
        """
        self.openapi_types = {
            'postgresql_schemas': List[PostgresqlSchema]
        }

        self.attribute_map = {
            'postgresql_schemas': 'postgresqlSchemas'
        }

        self._postgresql_schemas = postgresql_schemas

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostgresqlRdbms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostgresqlRdbms of this PostgresqlRdbms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def postgresql_schemas(self):
        """Gets the postgresql_schemas of this PostgresqlRdbms.

        PostgreSQL schemas in the database server.

        :return: The postgresql_schemas of this PostgresqlRdbms.
        :rtype: List[PostgresqlSchema]
        """
        return self._postgresql_schemas

    @postgresql_schemas.setter
    def postgresql_schemas(self, postgresql_schemas):
        """Sets the postgresql_schemas of this PostgresqlRdbms.

        PostgreSQL schemas in the database server.

        :param postgresql_schemas: The postgresql_schemas of this PostgresqlRdbms.
        :type postgresql_schemas: List[PostgresqlSchema]
        """

        self._postgresql_schemas = postgresql_schemas
