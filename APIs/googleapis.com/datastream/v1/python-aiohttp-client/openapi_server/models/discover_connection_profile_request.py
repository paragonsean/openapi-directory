# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_profile import ConnectionProfile
from openapi_server.models.mysql_rdbms import MysqlRdbms
from openapi_server.models.oracle_rdbms import OracleRdbms
from openapi_server.models.postgresql_rdbms import PostgresqlRdbms
from openapi_server import util


class DiscoverConnectionProfileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_profile: ConnectionProfile=None, connection_profile_name: str=None, full_hierarchy: bool=None, hierarchy_depth: int=None, mysql_rdbms: MysqlRdbms=None, oracle_rdbms: OracleRdbms=None, postgresql_rdbms: PostgresqlRdbms=None):
        """DiscoverConnectionProfileRequest - a model defined in OpenAPI

        :param connection_profile: The connection_profile of this DiscoverConnectionProfileRequest.
        :param connection_profile_name: The connection_profile_name of this DiscoverConnectionProfileRequest.
        :param full_hierarchy: The full_hierarchy of this DiscoverConnectionProfileRequest.
        :param hierarchy_depth: The hierarchy_depth of this DiscoverConnectionProfileRequest.
        :param mysql_rdbms: The mysql_rdbms of this DiscoverConnectionProfileRequest.
        :param oracle_rdbms: The oracle_rdbms of this DiscoverConnectionProfileRequest.
        :param postgresql_rdbms: The postgresql_rdbms of this DiscoverConnectionProfileRequest.
        """
        self.openapi_types = {
            'connection_profile': ConnectionProfile,
            'connection_profile_name': str,
            'full_hierarchy': bool,
            'hierarchy_depth': int,
            'mysql_rdbms': MysqlRdbms,
            'oracle_rdbms': OracleRdbms,
            'postgresql_rdbms': PostgresqlRdbms
        }

        self.attribute_map = {
            'connection_profile': 'connectionProfile',
            'connection_profile_name': 'connectionProfileName',
            'full_hierarchy': 'fullHierarchy',
            'hierarchy_depth': 'hierarchyDepth',
            'mysql_rdbms': 'mysqlRdbms',
            'oracle_rdbms': 'oracleRdbms',
            'postgresql_rdbms': 'postgresqlRdbms'
        }

        self._connection_profile = connection_profile
        self._connection_profile_name = connection_profile_name
        self._full_hierarchy = full_hierarchy
        self._hierarchy_depth = hierarchy_depth
        self._mysql_rdbms = mysql_rdbms
        self._oracle_rdbms = oracle_rdbms
        self._postgresql_rdbms = postgresql_rdbms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiscoverConnectionProfileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiscoverConnectionProfileRequest of this DiscoverConnectionProfileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_profile(self):
        """Gets the connection_profile of this DiscoverConnectionProfileRequest.


        :return: The connection_profile of this DiscoverConnectionProfileRequest.
        :rtype: ConnectionProfile
        """
        return self._connection_profile

    @connection_profile.setter
    def connection_profile(self, connection_profile):
        """Sets the connection_profile of this DiscoverConnectionProfileRequest.


        :param connection_profile: The connection_profile of this DiscoverConnectionProfileRequest.
        :type connection_profile: ConnectionProfile
        """

        self._connection_profile = connection_profile

    @property
    def connection_profile_name(self):
        """Gets the connection_profile_name of this DiscoverConnectionProfileRequest.

        A reference to an existing connection profile.

        :return: The connection_profile_name of this DiscoverConnectionProfileRequest.
        :rtype: str
        """
        return self._connection_profile_name

    @connection_profile_name.setter
    def connection_profile_name(self, connection_profile_name):
        """Sets the connection_profile_name of this DiscoverConnectionProfileRequest.

        A reference to an existing connection profile.

        :param connection_profile_name: The connection_profile_name of this DiscoverConnectionProfileRequest.
        :type connection_profile_name: str
        """

        self._connection_profile_name = connection_profile_name

    @property
    def full_hierarchy(self):
        """Gets the full_hierarchy of this DiscoverConnectionProfileRequest.

        Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).

        :return: The full_hierarchy of this DiscoverConnectionProfileRequest.
        :rtype: bool
        """
        return self._full_hierarchy

    @full_hierarchy.setter
    def full_hierarchy(self, full_hierarchy):
        """Sets the full_hierarchy of this DiscoverConnectionProfileRequest.

        Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).

        :param full_hierarchy: The full_hierarchy of this DiscoverConnectionProfileRequest.
        :type full_hierarchy: bool
        """

        self._full_hierarchy = full_hierarchy

    @property
    def hierarchy_depth(self):
        """Gets the hierarchy_depth of this DiscoverConnectionProfileRequest.

        The number of hierarchy levels below the current level to be retrieved.

        :return: The hierarchy_depth of this DiscoverConnectionProfileRequest.
        :rtype: int
        """
        return self._hierarchy_depth

    @hierarchy_depth.setter
    def hierarchy_depth(self, hierarchy_depth):
        """Sets the hierarchy_depth of this DiscoverConnectionProfileRequest.

        The number of hierarchy levels below the current level to be retrieved.

        :param hierarchy_depth: The hierarchy_depth of this DiscoverConnectionProfileRequest.
        :type hierarchy_depth: int
        """

        self._hierarchy_depth = hierarchy_depth

    @property
    def mysql_rdbms(self):
        """Gets the mysql_rdbms of this DiscoverConnectionProfileRequest.


        :return: The mysql_rdbms of this DiscoverConnectionProfileRequest.
        :rtype: MysqlRdbms
        """
        return self._mysql_rdbms

    @mysql_rdbms.setter
    def mysql_rdbms(self, mysql_rdbms):
        """Sets the mysql_rdbms of this DiscoverConnectionProfileRequest.


        :param mysql_rdbms: The mysql_rdbms of this DiscoverConnectionProfileRequest.
        :type mysql_rdbms: MysqlRdbms
        """

        self._mysql_rdbms = mysql_rdbms

    @property
    def oracle_rdbms(self):
        """Gets the oracle_rdbms of this DiscoverConnectionProfileRequest.


        :return: The oracle_rdbms of this DiscoverConnectionProfileRequest.
        :rtype: OracleRdbms
        """
        return self._oracle_rdbms

    @oracle_rdbms.setter
    def oracle_rdbms(self, oracle_rdbms):
        """Sets the oracle_rdbms of this DiscoverConnectionProfileRequest.


        :param oracle_rdbms: The oracle_rdbms of this DiscoverConnectionProfileRequest.
        :type oracle_rdbms: OracleRdbms
        """

        self._oracle_rdbms = oracle_rdbms

    @property
    def postgresql_rdbms(self):
        """Gets the postgresql_rdbms of this DiscoverConnectionProfileRequest.


        :return: The postgresql_rdbms of this DiscoverConnectionProfileRequest.
        :rtype: PostgresqlRdbms
        """
        return self._postgresql_rdbms

    @postgresql_rdbms.setter
    def postgresql_rdbms(self, postgresql_rdbms):
        """Sets the postgresql_rdbms of this DiscoverConnectionProfileRequest.


        :param postgresql_rdbms: The postgresql_rdbms of this DiscoverConnectionProfileRequest.
        :type postgresql_rdbms: PostgresqlRdbms
        """

        self._postgresql_rdbms = postgresql_rdbms
