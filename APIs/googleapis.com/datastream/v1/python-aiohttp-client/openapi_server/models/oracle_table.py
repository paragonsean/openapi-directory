# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.oracle_column import OracleColumn
from openapi_server import util


class OracleTable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oracle_columns: List[OracleColumn]=None, table: str=None):
        """OracleTable - a model defined in OpenAPI

        :param oracle_columns: The oracle_columns of this OracleTable.
        :param table: The table of this OracleTable.
        """
        self.openapi_types = {
            'oracle_columns': List[OracleColumn],
            'table': str
        }

        self.attribute_map = {
            'oracle_columns': 'oracleColumns',
            'table': 'table'
        }

        self._oracle_columns = oracle_columns
        self._table = table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OracleTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OracleTable of this OracleTable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oracle_columns(self):
        """Gets the oracle_columns of this OracleTable.

        Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.

        :return: The oracle_columns of this OracleTable.
        :rtype: List[OracleColumn]
        """
        return self._oracle_columns

    @oracle_columns.setter
    def oracle_columns(self, oracle_columns):
        """Sets the oracle_columns of this OracleTable.

        Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.

        :param oracle_columns: The oracle_columns of this OracleTable.
        :type oracle_columns: List[OracleColumn]
        """

        self._oracle_columns = oracle_columns

    @property
    def table(self):
        """Gets the table of this OracleTable.

        Table name.

        :return: The table of this OracleTable.
        :rtype: str
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this OracleTable.

        Table name.

        :param table: The table of this OracleTable.
        :type table: str
        """

        self._table = table
