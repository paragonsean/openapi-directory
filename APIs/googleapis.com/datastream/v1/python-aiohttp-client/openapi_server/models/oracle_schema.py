# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.oracle_table import OracleTable
from openapi_server import util


class OracleSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oracle_tables: List[OracleTable]=None, _schema: str=None):
        """OracleSchema - a model defined in OpenAPI

        :param oracle_tables: The oracle_tables of this OracleSchema.
        :param _schema: The _schema of this OracleSchema.
        """
        self.openapi_types = {
            'oracle_tables': List[OracleTable],
            '_schema': str
        }

        self.attribute_map = {
            'oracle_tables': 'oracleTables',
            '_schema': 'schema'
        }

        self._oracle_tables = oracle_tables
        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OracleSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OracleSchema of this OracleSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oracle_tables(self):
        """Gets the oracle_tables of this OracleSchema.

        Tables in the schema.

        :return: The oracle_tables of this OracleSchema.
        :rtype: List[OracleTable]
        """
        return self._oracle_tables

    @oracle_tables.setter
    def oracle_tables(self, oracle_tables):
        """Sets the oracle_tables of this OracleSchema.

        Tables in the schema.

        :param oracle_tables: The oracle_tables of this OracleSchema.
        :type oracle_tables: List[OracleTable]
        """

        self._oracle_tables = oracle_tables

    @property
    def _schema(self):
        """Gets the _schema of this OracleSchema.

        Schema name.

        :return: The _schema of this OracleSchema.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this OracleSchema.

        Schema name.

        :param _schema: The _schema of this OracleSchema.
        :type _schema: str
        """

        self.__schema = _schema
