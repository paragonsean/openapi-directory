# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.big_query_destination_config import BigQueryDestinationConfig
from openapi_server.models.gcs_destination_config import GcsDestinationConfig
from openapi_server import util


class DestinationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_destination_config: BigQueryDestinationConfig=None, destination_connection_profile: str=None, gcs_destination_config: GcsDestinationConfig=None):
        """DestinationConfig - a model defined in OpenAPI

        :param bigquery_destination_config: The bigquery_destination_config of this DestinationConfig.
        :param destination_connection_profile: The destination_connection_profile of this DestinationConfig.
        :param gcs_destination_config: The gcs_destination_config of this DestinationConfig.
        """
        self.openapi_types = {
            'bigquery_destination_config': BigQueryDestinationConfig,
            'destination_connection_profile': str,
            'gcs_destination_config': GcsDestinationConfig
        }

        self.attribute_map = {
            'bigquery_destination_config': 'bigqueryDestinationConfig',
            'destination_connection_profile': 'destinationConnectionProfile',
            'gcs_destination_config': 'gcsDestinationConfig'
        }

        self._bigquery_destination_config = bigquery_destination_config
        self._destination_connection_profile = destination_connection_profile
        self._gcs_destination_config = gcs_destination_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DestinationConfig of this DestinationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_destination_config(self):
        """Gets the bigquery_destination_config of this DestinationConfig.


        :return: The bigquery_destination_config of this DestinationConfig.
        :rtype: BigQueryDestinationConfig
        """
        return self._bigquery_destination_config

    @bigquery_destination_config.setter
    def bigquery_destination_config(self, bigquery_destination_config):
        """Sets the bigquery_destination_config of this DestinationConfig.


        :param bigquery_destination_config: The bigquery_destination_config of this DestinationConfig.
        :type bigquery_destination_config: BigQueryDestinationConfig
        """

        self._bigquery_destination_config = bigquery_destination_config

    @property
    def destination_connection_profile(self):
        """Gets the destination_connection_profile of this DestinationConfig.

        Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`

        :return: The destination_connection_profile of this DestinationConfig.
        :rtype: str
        """
        return self._destination_connection_profile

    @destination_connection_profile.setter
    def destination_connection_profile(self, destination_connection_profile):
        """Sets the destination_connection_profile of this DestinationConfig.

        Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`

        :param destination_connection_profile: The destination_connection_profile of this DestinationConfig.
        :type destination_connection_profile: str
        """

        self._destination_connection_profile = destination_connection_profile

    @property
    def gcs_destination_config(self):
        """Gets the gcs_destination_config of this DestinationConfig.


        :return: The gcs_destination_config of this DestinationConfig.
        :rtype: GcsDestinationConfig
        """
        return self._gcs_destination_config

    @gcs_destination_config.setter
    def gcs_destination_config(self, gcs_destination_config):
        """Sets the gcs_destination_config of this DestinationConfig.


        :param gcs_destination_config: The gcs_destination_config of this DestinationConfig.
        :type gcs_destination_config: GcsDestinationConfig
        """

        self._gcs_destination_config = gcs_destination_config
