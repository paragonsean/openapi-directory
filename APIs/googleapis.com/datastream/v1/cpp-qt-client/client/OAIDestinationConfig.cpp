/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDestinationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDestinationConfig::OAIDestinationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDestinationConfig::OAIDestinationConfig() {
    this->initializeModel();
}

OAIDestinationConfig::~OAIDestinationConfig() {}

void OAIDestinationConfig::initializeModel() {

    m_bigquery_destination_config_isSet = false;
    m_bigquery_destination_config_isValid = false;

    m_destination_connection_profile_isSet = false;
    m_destination_connection_profile_isValid = false;

    m_gcs_destination_config_isSet = false;
    m_gcs_destination_config_isValid = false;
}

void OAIDestinationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDestinationConfig::fromJsonObject(QJsonObject json) {

    m_bigquery_destination_config_isValid = ::OpenAPI::fromJsonValue(m_bigquery_destination_config, json[QString("bigqueryDestinationConfig")]);
    m_bigquery_destination_config_isSet = !json[QString("bigqueryDestinationConfig")].isNull() && m_bigquery_destination_config_isValid;

    m_destination_connection_profile_isValid = ::OpenAPI::fromJsonValue(m_destination_connection_profile, json[QString("destinationConnectionProfile")]);
    m_destination_connection_profile_isSet = !json[QString("destinationConnectionProfile")].isNull() && m_destination_connection_profile_isValid;

    m_gcs_destination_config_isValid = ::OpenAPI::fromJsonValue(m_gcs_destination_config, json[QString("gcsDestinationConfig")]);
    m_gcs_destination_config_isSet = !json[QString("gcsDestinationConfig")].isNull() && m_gcs_destination_config_isValid;
}

QString OAIDestinationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDestinationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_bigquery_destination_config.isSet()) {
        obj.insert(QString("bigqueryDestinationConfig"), ::OpenAPI::toJsonValue(m_bigquery_destination_config));
    }
    if (m_destination_connection_profile_isSet) {
        obj.insert(QString("destinationConnectionProfile"), ::OpenAPI::toJsonValue(m_destination_connection_profile));
    }
    if (m_gcs_destination_config.isSet()) {
        obj.insert(QString("gcsDestinationConfig"), ::OpenAPI::toJsonValue(m_gcs_destination_config));
    }
    return obj;
}

OAIBigQueryDestinationConfig OAIDestinationConfig::getBigqueryDestinationConfig() const {
    return m_bigquery_destination_config;
}
void OAIDestinationConfig::setBigqueryDestinationConfig(const OAIBigQueryDestinationConfig &bigquery_destination_config) {
    m_bigquery_destination_config = bigquery_destination_config;
    m_bigquery_destination_config_isSet = true;
}

bool OAIDestinationConfig::is_bigquery_destination_config_Set() const{
    return m_bigquery_destination_config_isSet;
}

bool OAIDestinationConfig::is_bigquery_destination_config_Valid() const{
    return m_bigquery_destination_config_isValid;
}

QString OAIDestinationConfig::getDestinationConnectionProfile() const {
    return m_destination_connection_profile;
}
void OAIDestinationConfig::setDestinationConnectionProfile(const QString &destination_connection_profile) {
    m_destination_connection_profile = destination_connection_profile;
    m_destination_connection_profile_isSet = true;
}

bool OAIDestinationConfig::is_destination_connection_profile_Set() const{
    return m_destination_connection_profile_isSet;
}

bool OAIDestinationConfig::is_destination_connection_profile_Valid() const{
    return m_destination_connection_profile_isValid;
}

OAIGcsDestinationConfig OAIDestinationConfig::getGcsDestinationConfig() const {
    return m_gcs_destination_config;
}
void OAIDestinationConfig::setGcsDestinationConfig(const OAIGcsDestinationConfig &gcs_destination_config) {
    m_gcs_destination_config = gcs_destination_config;
    m_gcs_destination_config_isSet = true;
}

bool OAIDestinationConfig::is_gcs_destination_config_Set() const{
    return m_gcs_destination_config_isSet;
}

bool OAIDestinationConfig::is_gcs_destination_config_Valid() const{
    return m_gcs_destination_config_isValid;
}

bool OAIDestinationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigquery_destination_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_connection_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_destination_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDestinationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
