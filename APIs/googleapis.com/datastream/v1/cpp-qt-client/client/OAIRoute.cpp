/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoute::OAIRoute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoute::OAIRoute() {
    this->initializeModel();
}

OAIRoute::~OAIRoute() {}

void OAIRoute::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_destination_address_isSet = false;
    m_destination_address_isValid = false;

    m_destination_port_isSet = false;
    m_destination_port_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIRoute::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoute::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_destination_address_isValid = ::OpenAPI::fromJsonValue(m_destination_address, json[QString("destinationAddress")]);
    m_destination_address_isSet = !json[QString("destinationAddress")].isNull() && m_destination_address_isValid;

    m_destination_port_isValid = ::OpenAPI::fromJsonValue(m_destination_port, json[QString("destinationPort")]);
    m_destination_port_isSet = !json[QString("destinationPort")].isNull() && m_destination_port_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIRoute::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoute::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_destination_address_isSet) {
        obj.insert(QString("destinationAddress"), ::OpenAPI::toJsonValue(m_destination_address));
    }
    if (m_destination_port_isSet) {
        obj.insert(QString("destinationPort"), ::OpenAPI::toJsonValue(m_destination_port));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIRoute::getCreateTime() const {
    return m_create_time;
}
void OAIRoute::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIRoute::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIRoute::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIRoute::getDestinationAddress() const {
    return m_destination_address;
}
void OAIRoute::setDestinationAddress(const QString &destination_address) {
    m_destination_address = destination_address;
    m_destination_address_isSet = true;
}

bool OAIRoute::is_destination_address_Set() const{
    return m_destination_address_isSet;
}

bool OAIRoute::is_destination_address_Valid() const{
    return m_destination_address_isValid;
}

qint32 OAIRoute::getDestinationPort() const {
    return m_destination_port;
}
void OAIRoute::setDestinationPort(const qint32 &destination_port) {
    m_destination_port = destination_port;
    m_destination_port_isSet = true;
}

bool OAIRoute::is_destination_port_Set() const{
    return m_destination_port_isSet;
}

bool OAIRoute::is_destination_port_Valid() const{
    return m_destination_port_isValid;
}

QString OAIRoute::getDisplayName() const {
    return m_display_name;
}
void OAIRoute::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIRoute::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIRoute::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QMap<QString, QString> OAIRoute::getLabels() const {
    return m_labels;
}
void OAIRoute::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIRoute::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIRoute::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIRoute::getName() const {
    return m_name;
}
void OAIRoute::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRoute::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRoute::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRoute::getUpdateTime() const {
    return m_update_time;
}
void OAIRoute::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIRoute::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIRoute::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIRoute::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoute::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
