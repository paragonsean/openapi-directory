/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiscoverConnectionProfileRequest.h
 *
 * Request message for &#39;discover&#39; ConnectionProfile request.
 */

#ifndef OAIDiscoverConnectionProfileRequest_H
#define OAIDiscoverConnectionProfileRequest_H

#include <QJsonObject>

#include "OAIConnectionProfile.h"
#include "OAIMysqlRdbms.h"
#include "OAIOracleRdbms.h"
#include "OAIPostgresqlRdbms.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnectionProfile;
class OAIMysqlRdbms;
class OAIOracleRdbms;
class OAIPostgresqlRdbms;

class OAIDiscoverConnectionProfileRequest : public OAIObject {
public:
    OAIDiscoverConnectionProfileRequest();
    OAIDiscoverConnectionProfileRequest(QString json);
    ~OAIDiscoverConnectionProfileRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConnectionProfile getConnectionProfile() const;
    void setConnectionProfile(const OAIConnectionProfile &connection_profile);
    bool is_connection_profile_Set() const;
    bool is_connection_profile_Valid() const;

    QString getConnectionProfileName() const;
    void setConnectionProfileName(const QString &connection_profile_name);
    bool is_connection_profile_name_Set() const;
    bool is_connection_profile_name_Valid() const;

    bool isFullHierarchy() const;
    void setFullHierarchy(const bool &full_hierarchy);
    bool is_full_hierarchy_Set() const;
    bool is_full_hierarchy_Valid() const;

    qint32 getHierarchyDepth() const;
    void setHierarchyDepth(const qint32 &hierarchy_depth);
    bool is_hierarchy_depth_Set() const;
    bool is_hierarchy_depth_Valid() const;

    OAIMysqlRdbms getMysqlRdbms() const;
    void setMysqlRdbms(const OAIMysqlRdbms &mysql_rdbms);
    bool is_mysql_rdbms_Set() const;
    bool is_mysql_rdbms_Valid() const;

    OAIOracleRdbms getOracleRdbms() const;
    void setOracleRdbms(const OAIOracleRdbms &oracle_rdbms);
    bool is_oracle_rdbms_Set() const;
    bool is_oracle_rdbms_Valid() const;

    OAIPostgresqlRdbms getPostgresqlRdbms() const;
    void setPostgresqlRdbms(const OAIPostgresqlRdbms &postgresql_rdbms);
    bool is_postgresql_rdbms_Set() const;
    bool is_postgresql_rdbms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConnectionProfile m_connection_profile;
    bool m_connection_profile_isSet;
    bool m_connection_profile_isValid;

    QString m_connection_profile_name;
    bool m_connection_profile_name_isSet;
    bool m_connection_profile_name_isValid;

    bool m_full_hierarchy;
    bool m_full_hierarchy_isSet;
    bool m_full_hierarchy_isValid;

    qint32 m_hierarchy_depth;
    bool m_hierarchy_depth_isSet;
    bool m_hierarchy_depth_isValid;

    OAIMysqlRdbms m_mysql_rdbms;
    bool m_mysql_rdbms_isSet;
    bool m_mysql_rdbms_isValid;

    OAIOracleRdbms m_oracle_rdbms;
    bool m_oracle_rdbms_isSet;
    bool m_oracle_rdbms_isValid;

    OAIPostgresqlRdbms m_postgresql_rdbms;
    bool m_postgresql_rdbms_isSet;
    bool m_postgresql_rdbms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiscoverConnectionProfileRequest)

#endif // OAIDiscoverConnectionProfileRequest_H
