/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMysqlLogPosition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMysqlLogPosition::OAIMysqlLogPosition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMysqlLogPosition::OAIMysqlLogPosition() {
    this->initializeModel();
}

OAIMysqlLogPosition::~OAIMysqlLogPosition() {}

void OAIMysqlLogPosition::initializeModel() {

    m_log_file_isSet = false;
    m_log_file_isValid = false;

    m_log_position_isSet = false;
    m_log_position_isValid = false;
}

void OAIMysqlLogPosition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMysqlLogPosition::fromJsonObject(QJsonObject json) {

    m_log_file_isValid = ::OpenAPI::fromJsonValue(m_log_file, json[QString("logFile")]);
    m_log_file_isSet = !json[QString("logFile")].isNull() && m_log_file_isValid;

    m_log_position_isValid = ::OpenAPI::fromJsonValue(m_log_position, json[QString("logPosition")]);
    m_log_position_isSet = !json[QString("logPosition")].isNull() && m_log_position_isValid;
}

QString OAIMysqlLogPosition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMysqlLogPosition::asJsonObject() const {
    QJsonObject obj;
    if (m_log_file_isSet) {
        obj.insert(QString("logFile"), ::OpenAPI::toJsonValue(m_log_file));
    }
    if (m_log_position_isSet) {
        obj.insert(QString("logPosition"), ::OpenAPI::toJsonValue(m_log_position));
    }
    return obj;
}

QString OAIMysqlLogPosition::getLogFile() const {
    return m_log_file;
}
void OAIMysqlLogPosition::setLogFile(const QString &log_file) {
    m_log_file = log_file;
    m_log_file_isSet = true;
}

bool OAIMysqlLogPosition::is_log_file_Set() const{
    return m_log_file_isSet;
}

bool OAIMysqlLogPosition::is_log_file_Valid() const{
    return m_log_file_isValid;
}

qint32 OAIMysqlLogPosition::getLogPosition() const {
    return m_log_position;
}
void OAIMysqlLogPosition::setLogPosition(const qint32 &log_position) {
    m_log_position = log_position;
    m_log_position_isSet = true;
}

bool OAIMysqlLogPosition::is_log_position_Set() const{
    return m_log_position_isSet;
}

bool OAIMysqlLogPosition::is_log_position_Valid() const{
    return m_log_position_isValid;
}

bool OAIMysqlLogPosition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_log_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMysqlLogPosition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
