/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICdcStrategy.h
 *
 * The strategy that the stream uses for CDC replication.
 */

#ifndef OAICdcStrategy_H
#define OAICdcStrategy_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAISpecificStartPosition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISpecificStartPosition;

class OAICdcStrategy : public OAIObject {
public:
    OAICdcStrategy();
    OAICdcStrategy(QString json);
    ~OAICdcStrategy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getMostRecentStartPosition() const;
    void setMostRecentStartPosition(const OAIObject &most_recent_start_position);
    bool is_most_recent_start_position_Set() const;
    bool is_most_recent_start_position_Valid() const;

    OAIObject getNextAvailableStartPosition() const;
    void setNextAvailableStartPosition(const OAIObject &next_available_start_position);
    bool is_next_available_start_position_Set() const;
    bool is_next_available_start_position_Valid() const;

    OAISpecificStartPosition getSpecificStartPosition() const;
    void setSpecificStartPosition(const OAISpecificStartPosition &specific_start_position);
    bool is_specific_start_position_Set() const;
    bool is_specific_start_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_most_recent_start_position;
    bool m_most_recent_start_position_isSet;
    bool m_most_recent_start_position_isValid;

    OAIObject m_next_available_start_position;
    bool m_next_available_start_position_isSet;
    bool m_next_available_start_position_isValid;

    OAISpecificStartPosition m_specific_start_position;
    bool m_specific_start_position_isSet;
    bool m_specific_start_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICdcStrategy)

#endif // OAICdcStrategy_H
