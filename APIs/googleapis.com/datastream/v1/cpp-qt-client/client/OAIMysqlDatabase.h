/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMysqlDatabase.h
 *
 * MySQL database.
 */

#ifndef OAIMysqlDatabase_H
#define OAIMysqlDatabase_H

#include <QJsonObject>

#include "OAIMysqlTable.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMysqlTable;

class OAIMysqlDatabase : public OAIObject {
public:
    OAIMysqlDatabase();
    OAIMysqlDatabase(QString json);
    ~OAIMysqlDatabase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatabase() const;
    void setDatabase(const QString &database);
    bool is_database_Set() const;
    bool is_database_Valid() const;

    QList<OAIMysqlTable> getMysqlTables() const;
    void setMysqlTables(const QList<OAIMysqlTable> &mysql_tables);
    bool is_mysql_tables_Set() const;
    bool is_mysql_tables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database;
    bool m_database_isSet;
    bool m_database_isValid;

    QList<OAIMysqlTable> m_mysql_tables;
    bool m_mysql_tables_isSet;
    bool m_mysql_tables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMysqlDatabase)

#endif // OAIMysqlDatabase_H
