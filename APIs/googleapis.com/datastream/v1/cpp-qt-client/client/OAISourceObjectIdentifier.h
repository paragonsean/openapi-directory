/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceObjectIdentifier.h
 *
 * Represents an identifier of an object in the data source.
 */

#ifndef OAISourceObjectIdentifier_H
#define OAISourceObjectIdentifier_H

#include <QJsonObject>

#include "OAIMysqlObjectIdentifier.h"
#include "OAIOracleObjectIdentifier.h"
#include "OAIPostgresqlObjectIdentifier.h"
#include "OAISqlServerObjectIdentifier.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMysqlObjectIdentifier;
class OAIOracleObjectIdentifier;
class OAIPostgresqlObjectIdentifier;
class OAISqlServerObjectIdentifier;

class OAISourceObjectIdentifier : public OAIObject {
public:
    OAISourceObjectIdentifier();
    OAISourceObjectIdentifier(QString json);
    ~OAISourceObjectIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMysqlObjectIdentifier getMysqlIdentifier() const;
    void setMysqlIdentifier(const OAIMysqlObjectIdentifier &mysql_identifier);
    bool is_mysql_identifier_Set() const;
    bool is_mysql_identifier_Valid() const;

    OAIOracleObjectIdentifier getOracleIdentifier() const;
    void setOracleIdentifier(const OAIOracleObjectIdentifier &oracle_identifier);
    bool is_oracle_identifier_Set() const;
    bool is_oracle_identifier_Valid() const;

    OAIPostgresqlObjectIdentifier getPostgresqlIdentifier() const;
    void setPostgresqlIdentifier(const OAIPostgresqlObjectIdentifier &postgresql_identifier);
    bool is_postgresql_identifier_Set() const;
    bool is_postgresql_identifier_Valid() const;

    OAISqlServerObjectIdentifier getSqlServerIdentifier() const;
    void setSqlServerIdentifier(const OAISqlServerObjectIdentifier &sql_server_identifier);
    bool is_sql_server_identifier_Set() const;
    bool is_sql_server_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMysqlObjectIdentifier m_mysql_identifier;
    bool m_mysql_identifier_isSet;
    bool m_mysql_identifier_isValid;

    OAIOracleObjectIdentifier m_oracle_identifier;
    bool m_oracle_identifier_isSet;
    bool m_oracle_identifier_isValid;

    OAIPostgresqlObjectIdentifier m_postgresql_identifier;
    bool m_postgresql_identifier_isSet;
    bool m_postgresql_identifier_isValid;

    OAISqlServerObjectIdentifier m_sql_server_identifier;
    bool m_sql_server_identifier_isSet;
    bool m_sql_server_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceObjectIdentifier)

#endif // OAISourceObjectIdentifier_H
