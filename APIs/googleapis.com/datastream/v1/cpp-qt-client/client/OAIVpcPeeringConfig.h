/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVpcPeeringConfig.h
 *
 * The VPC Peering configuration is used to create VPC peering between Datastream and the consumer&#39;s VPC.
 */

#ifndef OAIVpcPeeringConfig_H
#define OAIVpcPeeringConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVpcPeeringConfig : public OAIObject {
public:
    OAIVpcPeeringConfig();
    OAIVpcPeeringConfig(QString json);
    ~OAIVpcPeeringConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSubnet() const;
    void setSubnet(const QString &subnet);
    bool is_subnet_Set() const;
    bool is_subnet_Valid() const;

    QString getVpc() const;
    void setVpc(const QString &vpc);
    bool is_vpc_Set() const;
    bool is_vpc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_subnet;
    bool m_subnet_isSet;
    bool m_subnet_isValid;

    QString m_vpc;
    bool m_vpc_isSet;
    bool m_vpc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVpcPeeringConfig)

#endif // OAIVpcPeeringConfig_H
