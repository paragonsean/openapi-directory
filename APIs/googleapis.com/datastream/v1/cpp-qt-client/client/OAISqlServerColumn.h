/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISqlServerColumn.h
 *
 * SQLServer Column.
 */

#ifndef OAISqlServerColumn_H
#define OAISqlServerColumn_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISqlServerColumn : public OAIObject {
public:
    OAISqlServerColumn();
    OAISqlServerColumn(QString json);
    ~OAISqlServerColumn() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColumn() const;
    void setColumn(const QString &column);
    bool is_column_Set() const;
    bool is_column_Valid() const;

    QString getDataType() const;
    void setDataType(const QString &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    qint32 getLength() const;
    void setLength(const qint32 &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    bool isNullable() const;
    void setNullable(const bool &nullable);
    bool is_nullable_Set() const;
    bool is_nullable_Valid() const;

    qint32 getOrdinalPosition() const;
    void setOrdinalPosition(const qint32 &ordinal_position);
    bool is_ordinal_position_Set() const;
    bool is_ordinal_position_Valid() const;

    qint32 getPrecision() const;
    void setPrecision(const qint32 &precision);
    bool is_precision_Set() const;
    bool is_precision_Valid() const;

    bool isPrimaryKey() const;
    void setPrimaryKey(const bool &primary_key);
    bool is_primary_key_Set() const;
    bool is_primary_key_Valid() const;

    qint32 getScale() const;
    void setScale(const qint32 &scale);
    bool is_scale_Set() const;
    bool is_scale_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_column;
    bool m_column_isSet;
    bool m_column_isValid;

    QString m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    qint32 m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    bool m_nullable;
    bool m_nullable_isSet;
    bool m_nullable_isValid;

    qint32 m_ordinal_position;
    bool m_ordinal_position_isSet;
    bool m_ordinal_position_isValid;

    qint32 m_precision;
    bool m_precision_isSet;
    bool m_precision_isValid;

    bool m_primary_key;
    bool m_primary_key_isSet;
    bool m_primary_key_isValid;

    qint32 m_scale;
    bool m_scale_isSet;
    bool m_scale_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISqlServerColumn)

#endif // OAISqlServerColumn_H
