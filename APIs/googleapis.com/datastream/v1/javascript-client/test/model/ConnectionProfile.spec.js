/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DatastreamApi);
  }
}(this, function(expect, DatastreamApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DatastreamApi.ConnectionProfile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectionProfile', function() {
    it('should create an instance of ConnectionProfile', function() {
      // uncomment below and update the code to test ConnectionProfile
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be.a(DatastreamApi.ConnectionProfile);
    });

    it('should have the property bigqueryProfile (base name: "bigqueryProfile")', function() {
      // uncomment below and update the code to test the property bigqueryProfile
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property forwardSshConnectivity (base name: "forwardSshConnectivity")', function() {
      // uncomment below and update the code to test the property forwardSshConnectivity
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property gcsProfile (base name: "gcsProfile")', function() {
      // uncomment below and update the code to test the property gcsProfile
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property mysqlProfile (base name: "mysqlProfile")', function() {
      // uncomment below and update the code to test the property mysqlProfile
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property oracleProfile (base name: "oracleProfile")', function() {
      // uncomment below and update the code to test the property oracleProfile
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property postgresqlProfile (base name: "postgresqlProfile")', function() {
      // uncomment below and update the code to test the property postgresqlProfile
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property privateConnectivity (base name: "privateConnectivity")', function() {
      // uncomment below and update the code to test the property privateConnectivity
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property sqlServerProfile (base name: "sqlServerProfile")', function() {
      // uncomment below and update the code to test the property sqlServerProfile
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property staticServiceIpConnectivity (base name: "staticServiceIpConnectivity")', function() {
      // uncomment below and update the code to test the property staticServiceIpConnectivity
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new DatastreamApi.ConnectionProfile();
      //expect(instance).to.be();
    });

  });

}));
