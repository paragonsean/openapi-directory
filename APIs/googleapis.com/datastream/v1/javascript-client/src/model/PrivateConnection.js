/**
 * Datastream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';
import VpcPeeringConfig from './VpcPeeringConfig';

/**
 * The PrivateConnection model module.
 * @module model/PrivateConnection
 * @version v1
 */
class PrivateConnection {
    /**
     * Constructs a new <code>PrivateConnection</code>.
     * The PrivateConnection resource is used to establish private connectivity between Datastream and a customer&#39;s network.
     * @alias module:model/PrivateConnection
     */
    constructor() { 
        
        PrivateConnection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PrivateConnection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrivateConnection} obj Optional instance to populate.
     * @return {module:model/PrivateConnection} The populated <code>PrivateConnection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrivateConnection();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = Error.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('vpcPeeringConfig')) {
                obj['vpcPeeringConfig'] = VpcPeeringConfig.constructFromObject(data['vpcPeeringConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrivateConnection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrivateConnection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          Error.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `vpcPeeringConfig`
        if (data['vpcPeeringConfig']) { // data not null
          VpcPeeringConfig.validateJSON(data['vpcPeeringConfig']);
        }

        return true;
    }


}



/**
 * Output only. The create time of the resource.
 * @member {String} createTime
 */
PrivateConnection.prototype['createTime'] = undefined;

/**
 * Required. Display name.
 * @member {String} displayName
 */
PrivateConnection.prototype['displayName'] = undefined;

/**
 * @member {module:model/Error} error
 */
PrivateConnection.prototype['error'] = undefined;

/**
 * Labels.
 * @member {Object.<String, String>} labels
 */
PrivateConnection.prototype['labels'] = undefined;

/**
 * Output only. The resource's name.
 * @member {String} name
 */
PrivateConnection.prototype['name'] = undefined;

/**
 * Output only. The state of the Private Connection.
 * @member {module:model/PrivateConnection.StateEnum} state
 */
PrivateConnection.prototype['state'] = undefined;

/**
 * Output only. The update time of the resource.
 * @member {String} updateTime
 */
PrivateConnection.prototype['updateTime'] = undefined;

/**
 * @member {module:model/VpcPeeringConfig} vpcPeeringConfig
 */
PrivateConnection.prototype['vpcPeeringConfig'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
PrivateConnection['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "FAILED_TO_DELETE"
     * @const
     */
    "FAILED_TO_DELETE": "FAILED_TO_DELETE"
};



export default PrivateConnection;

