/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD() {}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_size_gb_isSet = false;
    m_size_gb_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_size_gb_isValid = ::OpenAPI::fromJsonValue(m_size_gb, json[QString("sizeGb")]);
    m_size_gb_isSet = !json[QString("sizeGb")].isNull() && m_size_gb_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_size_gb_isSet) {
        obj.insert(QString("sizeGb"), ::OpenAPI::toJsonValue(m_size_gb));
    }
    return obj;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::getCount() const {
    return m_count;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::setCount(const QString &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::is_count_Set() const{
    return m_count_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::is_count_Valid() const{
    return m_count_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::getSizeGb() const {
    return m_size_gb;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::setSizeGb(const QString &size_gb) {
    m_size_gb = size_gb;
    m_size_gb_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::is_size_gb_Set() const{
    return m_size_gb_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::is_size_gb_Valid() const{
    return m_size_gb_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_gb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
