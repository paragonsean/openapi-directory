/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata() {
    this->initializeModel();
}

OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::~OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata() {}

void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::initializeModel() {

    m_action_digest_isSet = false;
    m_action_digest_isValid = false;

    m_partial_execution_metadata_isSet = false;
    m_partial_execution_metadata_isValid = false;

    m_stage_isSet = false;
    m_stage_isValid = false;

    m_stderr_stream_name_isSet = false;
    m_stderr_stream_name_isValid = false;

    m_stdout_stream_name_isSet = false;
    m_stdout_stream_name_isValid = false;
}

void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::fromJsonObject(QJsonObject json) {

    m_action_digest_isValid = ::OpenAPI::fromJsonValue(m_action_digest, json[QString("actionDigest")]);
    m_action_digest_isSet = !json[QString("actionDigest")].isNull() && m_action_digest_isValid;

    m_partial_execution_metadata_isValid = ::OpenAPI::fromJsonValue(m_partial_execution_metadata, json[QString("partialExecutionMetadata")]);
    m_partial_execution_metadata_isSet = !json[QString("partialExecutionMetadata")].isNull() && m_partial_execution_metadata_isValid;

    m_stage_isValid = ::OpenAPI::fromJsonValue(m_stage, json[QString("stage")]);
    m_stage_isSet = !json[QString("stage")].isNull() && m_stage_isValid;

    m_stderr_stream_name_isValid = ::OpenAPI::fromJsonValue(m_stderr_stream_name, json[QString("stderrStreamName")]);
    m_stderr_stream_name_isSet = !json[QString("stderrStreamName")].isNull() && m_stderr_stream_name_isValid;

    m_stdout_stream_name_isValid = ::OpenAPI::fromJsonValue(m_stdout_stream_name, json[QString("stdoutStreamName")]);
    m_stdout_stream_name_isSet = !json[QString("stdoutStreamName")].isNull() && m_stdout_stream_name_isValid;
}

QString OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_action_digest.isSet()) {
        obj.insert(QString("actionDigest"), ::OpenAPI::toJsonValue(m_action_digest));
    }
    if (m_partial_execution_metadata.isSet()) {
        obj.insert(QString("partialExecutionMetadata"), ::OpenAPI::toJsonValue(m_partial_execution_metadata));
    }
    if (m_stage_isSet) {
        obj.insert(QString("stage"), ::OpenAPI::toJsonValue(m_stage));
    }
    if (m_stderr_stream_name_isSet) {
        obj.insert(QString("stderrStreamName"), ::OpenAPI::toJsonValue(m_stderr_stream_name));
    }
    if (m_stdout_stream_name_isSet) {
        obj.insert(QString("stdoutStreamName"), ::OpenAPI::toJsonValue(m_stdout_stream_name));
    }
    return obj;
}

OAIBuildBazelRemoteExecutionV2Digest OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::getActionDigest() const {
    return m_action_digest;
}
void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::setActionDigest(const OAIBuildBazelRemoteExecutionV2Digest &action_digest) {
    m_action_digest = action_digest;
    m_action_digest_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_action_digest_Set() const{
    return m_action_digest_isSet;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_action_digest_Valid() const{
    return m_action_digest_isValid;
}

OAIBuildBazelRemoteExecutionV2ExecutedActionMetadata OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::getPartialExecutionMetadata() const {
    return m_partial_execution_metadata;
}
void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::setPartialExecutionMetadata(const OAIBuildBazelRemoteExecutionV2ExecutedActionMetadata &partial_execution_metadata) {
    m_partial_execution_metadata = partial_execution_metadata;
    m_partial_execution_metadata_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_partial_execution_metadata_Set() const{
    return m_partial_execution_metadata_isSet;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_partial_execution_metadata_Valid() const{
    return m_partial_execution_metadata_isValid;
}

QString OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::getStage() const {
    return m_stage;
}
void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::setStage(const QString &stage) {
    m_stage = stage;
    m_stage_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_stage_Set() const{
    return m_stage_isSet;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_stage_Valid() const{
    return m_stage_isValid;
}

QString OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::getStderrStreamName() const {
    return m_stderr_stream_name;
}
void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::setStderrStreamName(const QString &stderr_stream_name) {
    m_stderr_stream_name = stderr_stream_name;
    m_stderr_stream_name_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_stderr_stream_name_Set() const{
    return m_stderr_stream_name_isSet;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_stderr_stream_name_Valid() const{
    return m_stderr_stream_name_isValid;
}

QString OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::getStdoutStreamName() const {
    return m_stdout_stream_name;
}
void OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::setStdoutStreamName(const QString &stdout_stream_name) {
    m_stdout_stream_name = stdout_stream_name;
    m_stdout_stream_name_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_stdout_stream_name_Set() const{
    return m_stdout_stream_name_isSet;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::is_stdout_stream_name_Valid() const{
    return m_stdout_stream_name_isValid;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_digest.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_partial_execution_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stderr_stream_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stdout_stream_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildBazelRemoteExecutionV2ExecuteOperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
