/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildBazelRemoteExecutionV2OutputFile.h
 *
 * An &#x60;OutputFile&#x60; is similar to a FileNode, but it is used as an output in an &#x60;ActionResult&#x60;. It allows a full file path rather than only a name.
 */

#ifndef OAIBuildBazelRemoteExecutionV2OutputFile_H
#define OAIBuildBazelRemoteExecutionV2OutputFile_H

#include <QJsonObject>

#include "OAIBuildBazelRemoteExecutionV2Digest.h"
#include "OAIBuildBazelRemoteExecutionV2NodeProperties.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuildBazelRemoteExecutionV2Digest;
class OAIBuildBazelRemoteExecutionV2NodeProperties;

class OAIBuildBazelRemoteExecutionV2OutputFile : public OAIObject {
public:
    OAIBuildBazelRemoteExecutionV2OutputFile();
    OAIBuildBazelRemoteExecutionV2OutputFile(QString json);
    ~OAIBuildBazelRemoteExecutionV2OutputFile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getContents() const;
    void setContents(const QByteArray &contents);
    bool is_contents_Set() const;
    bool is_contents_Valid() const;

    OAIBuildBazelRemoteExecutionV2Digest getDigest() const;
    void setDigest(const OAIBuildBazelRemoteExecutionV2Digest &digest);
    bool is_digest_Set() const;
    bool is_digest_Valid() const;

    bool isIsExecutable() const;
    void setIsExecutable(const bool &is_executable);
    bool is_is_executable_Set() const;
    bool is_is_executable_Valid() const;

    OAIBuildBazelRemoteExecutionV2NodeProperties getNodeProperties() const;
    void setNodeProperties(const OAIBuildBazelRemoteExecutionV2NodeProperties &node_properties);
    bool is_node_properties_Set() const;
    bool is_node_properties_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_contents;
    bool m_contents_isSet;
    bool m_contents_isValid;

    OAIBuildBazelRemoteExecutionV2Digest m_digest;
    bool m_digest_isSet;
    bool m_digest_isValid;

    bool m_is_executable;
    bool m_is_executable_isSet;
    bool m_is_executable_isValid;

    OAIBuildBazelRemoteExecutionV2NodeProperties m_node_properties;
    bool m_node_properties_isSet;
    bool m_node_properties_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildBazelRemoteExecutionV2OutputFile)

#endif // OAIBuildBazelRemoteExecutionV2OutputFile_H
