/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.h
 *
 * Instance conceptually encapsulates all Remote Build Execution resources for remote builds. An instance consists of storage and compute resources (for example, &#x60;ContentAddressableStorage&#x60;, &#x60;ActionCache&#x60;, &#x60;WorkerPools&#x60;) used for running remote builds. All Remote Build Execution API calls are scoped to an instance.
 */

#ifndef OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance_H
#define OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance_H

#include <QJsonObject>

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.h"
#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy;
class OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig;

class OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance : public OAIObject {
public:
    OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance();
    OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance(QString json);
    ~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy getFeaturePolicy() const;
    void setFeaturePolicy(const OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy &feature_policy);
    bool is_feature_policy_Set() const;
    bool is_feature_policy_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    bool isLoggingEnabled() const;
    void setLoggingEnabled(const bool &logging_enabled);
    bool is_logging_enabled_Set() const;
    bool is_logging_enabled_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig getSchedulerNotificationConfig() const;
    void setSchedulerNotificationConfig(const OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig &scheduler_notification_config);
    bool is_scheduler_notification_config_Set() const;
    bool is_scheduler_notification_config_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy m_feature_policy;
    bool m_feature_policy_isSet;
    bool m_feature_policy_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    bool m_logging_enabled;
    bool m_logging_enabled_isSet;
    bool m_logging_enabled_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig m_scheduler_notification_config;
    bool m_scheduler_notification_config_isSet;
    bool m_scheduler_notification_config_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance)

#endif // OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance_H
