/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest() {}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::initializeModel() {

    m_instance_isSet = false;
    m_instance_isValid = false;

    m_logging_enabled_isSet = false;
    m_logging_enabled_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::fromJsonObject(QJsonObject json) {

    m_instance_isValid = ::OpenAPI::fromJsonValue(m_instance, json[QString("instance")]);
    m_instance_isSet = !json[QString("instance")].isNull() && m_instance_isValid;

    m_logging_enabled_isValid = ::OpenAPI::fromJsonValue(m_logging_enabled, json[QString("loggingEnabled")]);
    m_logging_enabled_isSet = !json[QString("loggingEnabled")].isNull() && m_logging_enabled_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_instance.isSet()) {
        obj.insert(QString("instance"), ::OpenAPI::toJsonValue(m_instance));
    }
    if (m_logging_enabled_isSet) {
        obj.insert(QString("loggingEnabled"), ::OpenAPI::toJsonValue(m_logging_enabled));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::getInstance() const {
    return m_instance;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::setInstance(const OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance &instance) {
    m_instance = instance;
    m_instance_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_instance_Set() const{
    return m_instance_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_instance_Valid() const{
    return m_instance_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::isLoggingEnabled() const {
    return m_logging_enabled;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::setLoggingEnabled(const bool &logging_enabled) {
    m_logging_enabled = logging_enabled;
    m_logging_enabled_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_logging_enabled_Set() const{
    return m_logging_enabled_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_logging_enabled_Valid() const{
    return m_logging_enabled_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::getName() const {
    return m_name;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_logging_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
