/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildbotCommandDurations.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildbotCommandDurations::OAIGoogleDevtoolsRemotebuildbotCommandDurations(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildbotCommandDurations::OAIGoogleDevtoolsRemotebuildbotCommandDurations() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildbotCommandDurations::~OAIGoogleDevtoolsRemotebuildbotCommandDurations() {}

void OAIGoogleDevtoolsRemotebuildbotCommandDurations::initializeModel() {

    m_cas_release_isSet = false;
    m_cas_release_isValid = false;

    m_cm_wait_for_assignment_isSet = false;
    m_cm_wait_for_assignment_isValid = false;

    m_docker_prep_isSet = false;
    m_docker_prep_isValid = false;

    m_docker_prep_start_time_isSet = false;
    m_docker_prep_start_time_isValid = false;

    m_download_isSet = false;
    m_download_isValid = false;

    m_download_start_time_isSet = false;
    m_download_start_time_isValid = false;

    m_exec_start_time_isSet = false;
    m_exec_start_time_isValid = false;

    m_execution_isSet = false;
    m_execution_isValid = false;

    m_iso_prep_done_isSet = false;
    m_iso_prep_done_isValid = false;

    m_overall_isSet = false;
    m_overall_isValid = false;

    m_stderr_isSet = false;
    m_stderr_isValid = false;

    m_stdout_isSet = false;
    m_stdout_isValid = false;

    m_upload_isSet = false;
    m_upload_isValid = false;

    m_upload_start_time_isSet = false;
    m_upload_start_time_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildbotCommandDurations::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildbotCommandDurations::fromJsonObject(QJsonObject json) {

    m_cas_release_isValid = ::OpenAPI::fromJsonValue(m_cas_release, json[QString("casRelease")]);
    m_cas_release_isSet = !json[QString("casRelease")].isNull() && m_cas_release_isValid;

    m_cm_wait_for_assignment_isValid = ::OpenAPI::fromJsonValue(m_cm_wait_for_assignment, json[QString("cmWaitForAssignment")]);
    m_cm_wait_for_assignment_isSet = !json[QString("cmWaitForAssignment")].isNull() && m_cm_wait_for_assignment_isValid;

    m_docker_prep_isValid = ::OpenAPI::fromJsonValue(m_docker_prep, json[QString("dockerPrep")]);
    m_docker_prep_isSet = !json[QString("dockerPrep")].isNull() && m_docker_prep_isValid;

    m_docker_prep_start_time_isValid = ::OpenAPI::fromJsonValue(m_docker_prep_start_time, json[QString("dockerPrepStartTime")]);
    m_docker_prep_start_time_isSet = !json[QString("dockerPrepStartTime")].isNull() && m_docker_prep_start_time_isValid;

    m_download_isValid = ::OpenAPI::fromJsonValue(m_download, json[QString("download")]);
    m_download_isSet = !json[QString("download")].isNull() && m_download_isValid;

    m_download_start_time_isValid = ::OpenAPI::fromJsonValue(m_download_start_time, json[QString("downloadStartTime")]);
    m_download_start_time_isSet = !json[QString("downloadStartTime")].isNull() && m_download_start_time_isValid;

    m_exec_start_time_isValid = ::OpenAPI::fromJsonValue(m_exec_start_time, json[QString("execStartTime")]);
    m_exec_start_time_isSet = !json[QString("execStartTime")].isNull() && m_exec_start_time_isValid;

    m_execution_isValid = ::OpenAPI::fromJsonValue(m_execution, json[QString("execution")]);
    m_execution_isSet = !json[QString("execution")].isNull() && m_execution_isValid;

    m_iso_prep_done_isValid = ::OpenAPI::fromJsonValue(m_iso_prep_done, json[QString("isoPrepDone")]);
    m_iso_prep_done_isSet = !json[QString("isoPrepDone")].isNull() && m_iso_prep_done_isValid;

    m_overall_isValid = ::OpenAPI::fromJsonValue(m_overall, json[QString("overall")]);
    m_overall_isSet = !json[QString("overall")].isNull() && m_overall_isValid;

    m_stderr_isValid = ::OpenAPI::fromJsonValue(m_stderr, json[QString("stderr")]);
    m_stderr_isSet = !json[QString("stderr")].isNull() && m_stderr_isValid;

    m_stdout_isValid = ::OpenAPI::fromJsonValue(m_stdout, json[QString("stdout")]);
    m_stdout_isSet = !json[QString("stdout")].isNull() && m_stdout_isValid;

    m_upload_isValid = ::OpenAPI::fromJsonValue(m_upload, json[QString("upload")]);
    m_upload_isSet = !json[QString("upload")].isNull() && m_upload_isValid;

    m_upload_start_time_isValid = ::OpenAPI::fromJsonValue(m_upload_start_time, json[QString("uploadStartTime")]);
    m_upload_start_time_isSet = !json[QString("uploadStartTime")].isNull() && m_upload_start_time_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildbotCommandDurations::asJsonObject() const {
    QJsonObject obj;
    if (m_cas_release_isSet) {
        obj.insert(QString("casRelease"), ::OpenAPI::toJsonValue(m_cas_release));
    }
    if (m_cm_wait_for_assignment_isSet) {
        obj.insert(QString("cmWaitForAssignment"), ::OpenAPI::toJsonValue(m_cm_wait_for_assignment));
    }
    if (m_docker_prep_isSet) {
        obj.insert(QString("dockerPrep"), ::OpenAPI::toJsonValue(m_docker_prep));
    }
    if (m_docker_prep_start_time_isSet) {
        obj.insert(QString("dockerPrepStartTime"), ::OpenAPI::toJsonValue(m_docker_prep_start_time));
    }
    if (m_download_isSet) {
        obj.insert(QString("download"), ::OpenAPI::toJsonValue(m_download));
    }
    if (m_download_start_time_isSet) {
        obj.insert(QString("downloadStartTime"), ::OpenAPI::toJsonValue(m_download_start_time));
    }
    if (m_exec_start_time_isSet) {
        obj.insert(QString("execStartTime"), ::OpenAPI::toJsonValue(m_exec_start_time));
    }
    if (m_execution_isSet) {
        obj.insert(QString("execution"), ::OpenAPI::toJsonValue(m_execution));
    }
    if (m_iso_prep_done_isSet) {
        obj.insert(QString("isoPrepDone"), ::OpenAPI::toJsonValue(m_iso_prep_done));
    }
    if (m_overall_isSet) {
        obj.insert(QString("overall"), ::OpenAPI::toJsonValue(m_overall));
    }
    if (m_stderr_isSet) {
        obj.insert(QString("stderr"), ::OpenAPI::toJsonValue(m_stderr));
    }
    if (m_stdout_isSet) {
        obj.insert(QString("stdout"), ::OpenAPI::toJsonValue(m_stdout));
    }
    if (m_upload_isSet) {
        obj.insert(QString("upload"), ::OpenAPI::toJsonValue(m_upload));
    }
    if (m_upload_start_time_isSet) {
        obj.insert(QString("uploadStartTime"), ::OpenAPI::toJsonValue(m_upload_start_time));
    }
    return obj;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getCasRelease() const {
    return m_cas_release;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setCasRelease(const QString &cas_release) {
    m_cas_release = cas_release;
    m_cas_release_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_cas_release_Set() const{
    return m_cas_release_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_cas_release_Valid() const{
    return m_cas_release_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getCmWaitForAssignment() const {
    return m_cm_wait_for_assignment;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setCmWaitForAssignment(const QString &cm_wait_for_assignment) {
    m_cm_wait_for_assignment = cm_wait_for_assignment;
    m_cm_wait_for_assignment_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_cm_wait_for_assignment_Set() const{
    return m_cm_wait_for_assignment_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_cm_wait_for_assignment_Valid() const{
    return m_cm_wait_for_assignment_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getDockerPrep() const {
    return m_docker_prep;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setDockerPrep(const QString &docker_prep) {
    m_docker_prep = docker_prep;
    m_docker_prep_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_docker_prep_Set() const{
    return m_docker_prep_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_docker_prep_Valid() const{
    return m_docker_prep_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getDockerPrepStartTime() const {
    return m_docker_prep_start_time;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setDockerPrepStartTime(const QString &docker_prep_start_time) {
    m_docker_prep_start_time = docker_prep_start_time;
    m_docker_prep_start_time_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_docker_prep_start_time_Set() const{
    return m_docker_prep_start_time_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_docker_prep_start_time_Valid() const{
    return m_docker_prep_start_time_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getDownload() const {
    return m_download;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setDownload(const QString &download) {
    m_download = download;
    m_download_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_download_Set() const{
    return m_download_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_download_Valid() const{
    return m_download_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getDownloadStartTime() const {
    return m_download_start_time;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setDownloadStartTime(const QString &download_start_time) {
    m_download_start_time = download_start_time;
    m_download_start_time_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_download_start_time_Set() const{
    return m_download_start_time_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_download_start_time_Valid() const{
    return m_download_start_time_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getExecStartTime() const {
    return m_exec_start_time;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setExecStartTime(const QString &exec_start_time) {
    m_exec_start_time = exec_start_time;
    m_exec_start_time_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_exec_start_time_Set() const{
    return m_exec_start_time_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_exec_start_time_Valid() const{
    return m_exec_start_time_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getExecution() const {
    return m_execution;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setExecution(const QString &execution) {
    m_execution = execution;
    m_execution_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_execution_Set() const{
    return m_execution_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_execution_Valid() const{
    return m_execution_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getIsoPrepDone() const {
    return m_iso_prep_done;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setIsoPrepDone(const QString &iso_prep_done) {
    m_iso_prep_done = iso_prep_done;
    m_iso_prep_done_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_iso_prep_done_Set() const{
    return m_iso_prep_done_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_iso_prep_done_Valid() const{
    return m_iso_prep_done_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getOverall() const {
    return m_overall;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setOverall(const QString &overall) {
    m_overall = overall;
    m_overall_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_overall_Set() const{
    return m_overall_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_overall_Valid() const{
    return m_overall_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getStderr() const {
    return m_stderr;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setStderr(const QString &stderr) {
    m_stderr = stderr;
    m_stderr_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_stderr_Set() const{
    return m_stderr_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_stderr_Valid() const{
    return m_stderr_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getStdout() const {
    return m_stdout;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setStdout(const QString &stdout) {
    m_stdout = stdout;
    m_stdout_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_stdout_Set() const{
    return m_stdout_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_stdout_Valid() const{
    return m_stdout_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getUpload() const {
    return m_upload;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setUpload(const QString &upload) {
    m_upload = upload;
    m_upload_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_upload_Set() const{
    return m_upload_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_upload_Valid() const{
    return m_upload_isValid;
}

QString OAIGoogleDevtoolsRemotebuildbotCommandDurations::getUploadStartTime() const {
    return m_upload_start_time;
}
void OAIGoogleDevtoolsRemotebuildbotCommandDurations::setUploadStartTime(const QString &upload_start_time) {
    m_upload_start_time = upload_start_time;
    m_upload_start_time_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_upload_start_time_Set() const{
    return m_upload_start_time_isSet;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::is_upload_start_time_Valid() const{
    return m_upload_start_time_isValid;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cas_release_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cm_wait_for_assignment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_docker_prep_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_docker_prep_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exec_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_prep_done_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overall_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stderr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stdout_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upload_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upload_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildbotCommandDurations::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
