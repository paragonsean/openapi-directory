/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs.h
 *
 * Describes the inputs to a shell-style task.
 */

#ifndef OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs_H
#define OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs_H

#include <QJsonObject>

#include "OAIGoogleDevtoolsRemoteworkersV1test2Blob.h"
#include "OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputsEnvironmentVariable.h"
#include "OAIGoogleDevtoolsRemoteworkersV1test2Digest.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputsEnvironmentVariable;
class OAIGoogleDevtoolsRemoteworkersV1test2Digest;
class OAIGoogleDevtoolsRemoteworkersV1test2Blob;

class OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs : public OAIObject {
public:
    OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs();
    OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs(QString json);
    ~OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArguments() const;
    void setArguments(const QList<QString> &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    QList<OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputsEnvironmentVariable> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputsEnvironmentVariable> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QList<OAIGoogleDevtoolsRemoteworkersV1test2Digest> getFiles() const;
    void setFiles(const QList<OAIGoogleDevtoolsRemoteworkersV1test2Digest> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    QList<OAIGoogleDevtoolsRemoteworkersV1test2Blob> getInlineBlobs() const;
    void setInlineBlobs(const QList<OAIGoogleDevtoolsRemoteworkersV1test2Blob> &inline_blobs);
    bool is_inline_blobs_Set() const;
    bool is_inline_blobs_Valid() const;

    QString getWorkingDirectory() const;
    void setWorkingDirectory(const QString &working_directory);
    bool is_working_directory_Set() const;
    bool is_working_directory_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    QList<OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputsEnvironmentVariable> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QList<OAIGoogleDevtoolsRemoteworkersV1test2Digest> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    QList<OAIGoogleDevtoolsRemoteworkersV1test2Blob> m_inline_blobs;
    bool m_inline_blobs_isSet;
    bool m_inline_blobs_isValid;

    QString m_working_directory;
    bool m_working_directory_isSet;
    bool m_working_directory_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs)

#endif // OAIGoogleDevtoolsRemoteworkersV1test2CommandTaskInputs_H
