/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse() {}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::initializeModel() {

    m_instances_isSet = false;
    m_instances_isValid = false;

    m_unreachable_isSet = false;
    m_unreachable_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::fromJsonObject(QJsonObject json) {

    m_instances_isValid = ::OpenAPI::fromJsonValue(m_instances, json[QString("instances")]);
    m_instances_isSet = !json[QString("instances")].isNull() && m_instances_isValid;

    m_unreachable_isValid = ::OpenAPI::fromJsonValue(m_unreachable, json[QString("unreachable")]);
    m_unreachable_isSet = !json[QString("unreachable")].isNull() && m_unreachable_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_instances.size() > 0) {
        obj.insert(QString("instances"), ::OpenAPI::toJsonValue(m_instances));
    }
    if (m_unreachable.size() > 0) {
        obj.insert(QString("unreachable"), ::OpenAPI::toJsonValue(m_unreachable));
    }
    return obj;
}

QList<OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance> OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::getInstances() const {
    return m_instances;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::setInstances(const QList<OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance> &instances) {
    m_instances = instances;
    m_instances_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::is_instances_Set() const{
    return m_instances_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::is_instances_Valid() const{
    return m_instances_isValid;
}

QList<QString> OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::getUnreachable() const {
    return m_unreachable;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::setUnreachable(const QList<QString> &unreachable) {
    m_unreachable = unreachable;
    m_unreachable_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::is_unreachable_Set() const{
    return m_unreachable_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::is_unreachable_Valid() const{
    return m_unreachable_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instances.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unreachable.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
