/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildBazelRemoteExecutionV2Command.h
 *
 * A &#x60;Command&#x60; is the actual command executed by a worker running an Action and specifications of its environment. Except as otherwise required, the environment (such as which system libraries or binaries are available, and what filesystems are mounted where) is defined by and specific to the implementation of the remote execution API.
 */

#ifndef OAIBuildBazelRemoteExecutionV2Command_H
#define OAIBuildBazelRemoteExecutionV2Command_H

#include <QJsonObject>

#include "OAIBuildBazelRemoteExecutionV2CommandEnvironmentVariable.h"
#include "OAIBuildBazelRemoteExecutionV2Platform.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuildBazelRemoteExecutionV2CommandEnvironmentVariable;
class OAIBuildBazelRemoteExecutionV2Platform;

class OAIBuildBazelRemoteExecutionV2Command : public OAIObject {
public:
    OAIBuildBazelRemoteExecutionV2Command();
    OAIBuildBazelRemoteExecutionV2Command(QString json);
    ~OAIBuildBazelRemoteExecutionV2Command() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArguments() const;
    void setArguments(const QList<QString> &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    QList<OAIBuildBazelRemoteExecutionV2CommandEnvironmentVariable> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIBuildBazelRemoteExecutionV2CommandEnvironmentVariable> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getOutputDirectories() const;
    Q_DECL_DEPRECATED void setOutputDirectories(const QList<QString> &output_directories);
    Q_DECL_DEPRECATED bool is_output_directories_Set() const;
    Q_DECL_DEPRECATED bool is_output_directories_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getOutputFiles() const;
    Q_DECL_DEPRECATED void setOutputFiles(const QList<QString> &output_files);
    Q_DECL_DEPRECATED bool is_output_files_Set() const;
    Q_DECL_DEPRECATED bool is_output_files_Valid() const;

    QList<QString> getOutputNodeProperties() const;
    void setOutputNodeProperties(const QList<QString> &output_node_properties);
    bool is_output_node_properties_Set() const;
    bool is_output_node_properties_Valid() const;

    QList<QString> getOutputPaths() const;
    void setOutputPaths(const QList<QString> &output_paths);
    bool is_output_paths_Set() const;
    bool is_output_paths_Valid() const;

    OAIBuildBazelRemoteExecutionV2Platform getPlatform() const;
    void setPlatform(const OAIBuildBazelRemoteExecutionV2Platform &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QString getWorkingDirectory() const;
    void setWorkingDirectory(const QString &working_directory);
    bool is_working_directory_Set() const;
    bool is_working_directory_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    QList<OAIBuildBazelRemoteExecutionV2CommandEnvironmentVariable> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QList<QString> m_output_directories;
    bool m_output_directories_isSet;
    bool m_output_directories_isValid;

    QList<QString> m_output_files;
    bool m_output_files_isSet;
    bool m_output_files_isValid;

    QList<QString> m_output_node_properties;
    bool m_output_node_properties_isSet;
    bool m_output_node_properties_isValid;

    QList<QString> m_output_paths;
    bool m_output_paths_isSet;
    bool m_output_paths_isValid;

    OAIBuildBazelRemoteExecutionV2Platform m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QString m_working_directory;
    bool m_working_directory_isSet;
    bool m_working_directory_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildBazelRemoteExecutionV2Command)

#endif // OAIBuildBazelRemoteExecutionV2Command_H
