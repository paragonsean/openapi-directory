/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildBazelRemoteExecutionV2NodeProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildBazelRemoteExecutionV2NodeProperties::OAIBuildBazelRemoteExecutionV2NodeProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildBazelRemoteExecutionV2NodeProperties::OAIBuildBazelRemoteExecutionV2NodeProperties() {
    this->initializeModel();
}

OAIBuildBazelRemoteExecutionV2NodeProperties::~OAIBuildBazelRemoteExecutionV2NodeProperties() {}

void OAIBuildBazelRemoteExecutionV2NodeProperties::initializeModel() {

    m_mtime_isSet = false;
    m_mtime_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_unix_mode_isSet = false;
    m_unix_mode_isValid = false;
}

void OAIBuildBazelRemoteExecutionV2NodeProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildBazelRemoteExecutionV2NodeProperties::fromJsonObject(QJsonObject json) {

    m_mtime_isValid = ::OpenAPI::fromJsonValue(m_mtime, json[QString("mtime")]);
    m_mtime_isSet = !json[QString("mtime")].isNull() && m_mtime_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_unix_mode_isValid = ::OpenAPI::fromJsonValue(m_unix_mode, json[QString("unixMode")]);
    m_unix_mode_isSet = !json[QString("unixMode")].isNull() && m_unix_mode_isValid;
}

QString OAIBuildBazelRemoteExecutionV2NodeProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildBazelRemoteExecutionV2NodeProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_mtime_isSet) {
        obj.insert(QString("mtime"), ::OpenAPI::toJsonValue(m_mtime));
    }
    if (m_properties.size() > 0) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_unix_mode_isSet) {
        obj.insert(QString("unixMode"), ::OpenAPI::toJsonValue(m_unix_mode));
    }
    return obj;
}

QString OAIBuildBazelRemoteExecutionV2NodeProperties::getMtime() const {
    return m_mtime;
}
void OAIBuildBazelRemoteExecutionV2NodeProperties::setMtime(const QString &mtime) {
    m_mtime = mtime;
    m_mtime_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::is_mtime_Set() const{
    return m_mtime_isSet;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::is_mtime_Valid() const{
    return m_mtime_isValid;
}

QList<OAIBuildBazelRemoteExecutionV2NodeProperty> OAIBuildBazelRemoteExecutionV2NodeProperties::getProperties() const {
    return m_properties;
}
void OAIBuildBazelRemoteExecutionV2NodeProperties::setProperties(const QList<OAIBuildBazelRemoteExecutionV2NodeProperty> &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::is_properties_Valid() const{
    return m_properties_isValid;
}

qint32 OAIBuildBazelRemoteExecutionV2NodeProperties::getUnixMode() const {
    return m_unix_mode;
}
void OAIBuildBazelRemoteExecutionV2NodeProperties::setUnixMode(const qint32 &unix_mode) {
    m_unix_mode = unix_mode;
    m_unix_mode_isSet = true;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::is_unix_mode_Set() const{
    return m_unix_mode_isSet;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::is_unix_mode_Valid() const{
    return m_unix_mode_isValid;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unix_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildBazelRemoteExecutionV2NodeProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
