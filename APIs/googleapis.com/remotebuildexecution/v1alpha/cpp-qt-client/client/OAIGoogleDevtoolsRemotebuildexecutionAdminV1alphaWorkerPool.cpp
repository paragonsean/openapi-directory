/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool() {}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::initializeModel() {

    m_autoscale_isSet = false;
    m_autoscale_isValid = false;

    m_channel_isSet = false;
    m_channel_isValid = false;

    m_host_os_isSet = false;
    m_host_os_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_worker_config_isSet = false;
    m_worker_config_isValid = false;

    m_worker_count_isSet = false;
    m_worker_count_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::fromJsonObject(QJsonObject json) {

    m_autoscale_isValid = ::OpenAPI::fromJsonValue(m_autoscale, json[QString("autoscale")]);
    m_autoscale_isSet = !json[QString("autoscale")].isNull() && m_autoscale_isValid;

    m_channel_isValid = ::OpenAPI::fromJsonValue(m_channel, json[QString("channel")]);
    m_channel_isSet = !json[QString("channel")].isNull() && m_channel_isValid;

    m_host_os_isValid = ::OpenAPI::fromJsonValue(m_host_os, json[QString("hostOs")]);
    m_host_os_isSet = !json[QString("hostOs")].isNull() && m_host_os_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_worker_config_isValid = ::OpenAPI::fromJsonValue(m_worker_config, json[QString("workerConfig")]);
    m_worker_config_isSet = !json[QString("workerConfig")].isNull() && m_worker_config_isValid;

    m_worker_count_isValid = ::OpenAPI::fromJsonValue(m_worker_count, json[QString("workerCount")]);
    m_worker_count_isSet = !json[QString("workerCount")].isNull() && m_worker_count_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::asJsonObject() const {
    QJsonObject obj;
    if (m_autoscale.isSet()) {
        obj.insert(QString("autoscale"), ::OpenAPI::toJsonValue(m_autoscale));
    }
    if (m_channel_isSet) {
        obj.insert(QString("channel"), ::OpenAPI::toJsonValue(m_channel));
    }
    if (m_host_os_isSet) {
        obj.insert(QString("hostOs"), ::OpenAPI::toJsonValue(m_host_os));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_worker_config.isSet()) {
        obj.insert(QString("workerConfig"), ::OpenAPI::toJsonValue(m_worker_config));
    }
    if (m_worker_count_isSet) {
        obj.insert(QString("workerCount"), ::OpenAPI::toJsonValue(m_worker_count));
    }
    return obj;
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::getAutoscale() const {
    return m_autoscale;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::setAutoscale(const OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale &autoscale) {
    m_autoscale = autoscale;
    m_autoscale_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_autoscale_Set() const{
    return m_autoscale_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_autoscale_Valid() const{
    return m_autoscale_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::getChannel() const {
    return m_channel;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::setChannel(const QString &channel) {
    m_channel = channel;
    m_channel_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_channel_Set() const{
    return m_channel_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_channel_Valid() const{
    return m_channel_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::getHostOs() const {
    return m_host_os;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::setHostOs(const QString &host_os) {
    m_host_os = host_os;
    m_host_os_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_host_os_Set() const{
    return m_host_os_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_host_os_Valid() const{
    return m_host_os_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::getName() const {
    return m_name;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::getState() const {
    return m_state;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_state_Valid() const{
    return m_state_isValid;
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::getWorkerConfig() const {
    return m_worker_config;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::setWorkerConfig(const OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig &worker_config) {
    m_worker_config = worker_config;
    m_worker_config_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_worker_config_Set() const{
    return m_worker_config_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_worker_config_Valid() const{
    return m_worker_config_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::getWorkerCount() const {
    return m_worker_count;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::setWorkerCount(const QString &worker_count) {
    m_worker_count = worker_count;
    m_worker_count_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_worker_count_Set() const{
    return m_worker_count_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::is_worker_count_Valid() const{
    return m_worker_count_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_autoscale.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_os_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_worker_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_worker_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
