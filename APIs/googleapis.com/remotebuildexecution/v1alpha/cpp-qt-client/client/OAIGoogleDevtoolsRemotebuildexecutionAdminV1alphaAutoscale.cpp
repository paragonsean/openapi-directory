/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale() {}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::initializeModel() {

    m_max_size_isSet = false;
    m_max_size_isValid = false;

    m_min_idle_workers_isSet = false;
    m_min_idle_workers_isValid = false;

    m_min_size_isSet = false;
    m_min_size_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::fromJsonObject(QJsonObject json) {

    m_max_size_isValid = ::OpenAPI::fromJsonValue(m_max_size, json[QString("maxSize")]);
    m_max_size_isSet = !json[QString("maxSize")].isNull() && m_max_size_isValid;

    m_min_idle_workers_isValid = ::OpenAPI::fromJsonValue(m_min_idle_workers, json[QString("minIdleWorkers")]);
    m_min_idle_workers_isSet = !json[QString("minIdleWorkers")].isNull() && m_min_idle_workers_isValid;

    m_min_size_isValid = ::OpenAPI::fromJsonValue(m_min_size, json[QString("minSize")]);
    m_min_size_isSet = !json[QString("minSize")].isNull() && m_min_size_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::asJsonObject() const {
    QJsonObject obj;
    if (m_max_size_isSet) {
        obj.insert(QString("maxSize"), ::OpenAPI::toJsonValue(m_max_size));
    }
    if (m_min_idle_workers_isSet) {
        obj.insert(QString("minIdleWorkers"), ::OpenAPI::toJsonValue(m_min_idle_workers));
    }
    if (m_min_size_isSet) {
        obj.insert(QString("minSize"), ::OpenAPI::toJsonValue(m_min_size));
    }
    return obj;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::getMaxSize() const {
    return m_max_size;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::setMaxSize(const QString &max_size) {
    m_max_size = max_size;
    m_max_size_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::is_max_size_Set() const{
    return m_max_size_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::is_max_size_Valid() const{
    return m_max_size_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::getMinIdleWorkers() const {
    return m_min_idle_workers;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::setMinIdleWorkers(const QString &min_idle_workers) {
    m_min_idle_workers = min_idle_workers;
    m_min_idle_workers_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::is_min_idle_workers_Set() const{
    return m_min_idle_workers_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::is_min_idle_workers_Valid() const{
    return m_min_idle_workers_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::getMinSize() const {
    return m_min_size;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::setMinSize(const QString &min_size) {
    m_min_size = min_size;
    m_min_size_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::is_min_size_Set() const{
    return m_min_size_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::is_min_size_Valid() const{
    return m_min_size_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_idle_workers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
