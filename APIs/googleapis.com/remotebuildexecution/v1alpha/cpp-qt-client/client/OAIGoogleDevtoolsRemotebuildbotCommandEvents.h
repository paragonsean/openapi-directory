/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleDevtoolsRemotebuildbotCommandEvents.h
 *
 * CommandEvents contains counters for the number of warnings and errors that occurred during the execution of a command.
 */

#ifndef OAIGoogleDevtoolsRemotebuildbotCommandEvents_H
#define OAIGoogleDevtoolsRemotebuildbotCommandEvents_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleDevtoolsRemotebuildbotCommandEvents : public OAIObject {
public:
    OAIGoogleDevtoolsRemotebuildbotCommandEvents();
    OAIGoogleDevtoolsRemotebuildbotCommandEvents(QString json);
    ~OAIGoogleDevtoolsRemotebuildbotCommandEvents() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCmUsage() const;
    void setCmUsage(const QString &cm_usage);
    bool is_cm_usage_Set() const;
    bool is_cm_usage_Valid() const;

    bool isDockerCacheHit() const;
    void setDockerCacheHit(const bool &docker_cache_hit);
    bool is_docker_cache_hit_Set() const;
    bool is_docker_cache_hit_Valid() const;

    QString getDockerImageName() const;
    void setDockerImageName(const QString &docker_image_name);
    bool is_docker_image_name_Set() const;
    bool is_docker_image_name_Valid() const;

    float getInputCacheMissBytes() const;
    void setInputCacheMissBytes(const float &input_cache_miss_bytes);
    bool is_input_cache_miss_bytes_Set() const;
    bool is_input_cache_miss_bytes_Valid() const;

    float getInputCacheMissFiles() const;
    void setInputCacheMissFiles(const float &input_cache_miss_files);
    bool is_input_cache_miss_files_Set() const;
    bool is_input_cache_miss_files_Valid() const;

    QString getNumErrors() const;
    void setNumErrors(const QString &num_errors);
    bool is_num_errors_Set() const;
    bool is_num_errors_Valid() const;

    QString getNumWarnings() const;
    void setNumWarnings(const QString &num_warnings);
    bool is_num_warnings_Set() const;
    bool is_num_warnings_Valid() const;

    QString getOutputLocation() const;
    void setOutputLocation(const QString &output_location);
    bool is_output_location_Set() const;
    bool is_output_location_Valid() const;

    bool isUsedAsyncContainer() const;
    void setUsedAsyncContainer(const bool &used_async_container);
    bool is_used_async_container_Set() const;
    bool is_used_async_container_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cm_usage;
    bool m_cm_usage_isSet;
    bool m_cm_usage_isValid;

    bool m_docker_cache_hit;
    bool m_docker_cache_hit_isSet;
    bool m_docker_cache_hit_isValid;

    QString m_docker_image_name;
    bool m_docker_image_name_isSet;
    bool m_docker_image_name_isValid;

    float m_input_cache_miss_bytes;
    bool m_input_cache_miss_bytes_isSet;
    bool m_input_cache_miss_bytes_isValid;

    float m_input_cache_miss_files;
    bool m_input_cache_miss_files_isSet;
    bool m_input_cache_miss_files_isValid;

    QString m_num_errors;
    bool m_num_errors_isSet;
    bool m_num_errors_isValid;

    QString m_num_warnings;
    bool m_num_warnings_isSet;
    bool m_num_warnings_isValid;

    QString m_output_location;
    bool m_output_location_isSet;
    bool m_output_location_isValid;

    bool m_used_async_container;
    bool m_used_async_container_isSet;
    bool m_used_async_container_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleDevtoolsRemotebuildbotCommandEvents)

#endif // OAIGoogleDevtoolsRemotebuildbotCommandEvents_H
