/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest() {}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::initializeModel() {

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_pool_id_isSet = false;
    m_pool_id_isValid = false;

    m_worker_pool_isSet = false;
    m_worker_pool_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::fromJsonObject(QJsonObject json) {

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_pool_id_isValid = ::OpenAPI::fromJsonValue(m_pool_id, json[QString("poolId")]);
    m_pool_id_isSet = !json[QString("poolId")].isNull() && m_pool_id_isValid;

    m_worker_pool_isValid = ::OpenAPI::fromJsonValue(m_worker_pool, json[QString("workerPool")]);
    m_worker_pool_isSet = !json[QString("workerPool")].isNull() && m_worker_pool_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_pool_id_isSet) {
        obj.insert(QString("poolId"), ::OpenAPI::toJsonValue(m_pool_id));
    }
    if (m_worker_pool.isSet()) {
        obj.insert(QString("workerPool"), ::OpenAPI::toJsonValue(m_worker_pool));
    }
    return obj;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::getParent() const {
    return m_parent;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::getPoolId() const {
    return m_pool_id;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::setPoolId(const QString &pool_id) {
    m_pool_id = pool_id;
    m_pool_id_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::is_pool_id_Set() const{
    return m_pool_id_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::is_pool_id_Valid() const{
    return m_pool_id_isValid;
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::getWorkerPool() const {
    return m_worker_pool;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::setWorkerPool(const OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool &worker_pool) {
    m_worker_pool = worker_pool;
    m_worker_pool_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::is_worker_pool_Set() const{
    return m_worker_pool_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::is_worker_pool_Valid() const{
    return m_worker_pool_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_worker_pool.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
