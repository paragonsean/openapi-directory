/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest() {
    this->initializeModel();
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::~OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest() {}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::initializeModel() {

    m_instance_isSet = false;
    m_instance_isValid = false;

    m_instance_id_isSet = false;
    m_instance_id_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::fromJsonObject(QJsonObject json) {

    m_instance_isValid = ::OpenAPI::fromJsonValue(m_instance, json[QString("instance")]);
    m_instance_isSet = !json[QString("instance")].isNull() && m_instance_isValid;

    m_instance_id_isValid = ::OpenAPI::fromJsonValue(m_instance_id, json[QString("instanceId")]);
    m_instance_id_isSet = !json[QString("instanceId")].isNull() && m_instance_id_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_instance.isSet()) {
        obj.insert(QString("instance"), ::OpenAPI::toJsonValue(m_instance));
    }
    if (m_instance_id_isSet) {
        obj.insert(QString("instanceId"), ::OpenAPI::toJsonValue(m_instance_id));
    }
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    return obj;
}

OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::getInstance() const {
    return m_instance;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::setInstance(const OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance &instance) {
    m_instance = instance;
    m_instance_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::is_instance_Set() const{
    return m_instance_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::is_instance_Valid() const{
    return m_instance_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::getInstanceId() const {
    return m_instance_id;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::setInstanceId(const QString &instance_id) {
    m_instance_id = instance_id;
    m_instance_id_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::is_instance_id_Set() const{
    return m_instance_id_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::is_instance_id_Valid() const{
    return m_instance_id_isValid;
}

QString OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::getParent() const {
    return m_parent;
}
void OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
