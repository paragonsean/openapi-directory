# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directories: List[str]=None, files: List[str]=None, stderr_destination: str=None, stdout_destination: str=None):
        """GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs - a model defined in OpenAPI

        :param directories: The directories of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :param files: The files of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :param stderr_destination: The stderr_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :param stdout_destination: The stdout_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        """
        self.openapi_types = {
            'directories': List[str],
            'files': List[str],
            'stderr_destination': str,
            'stdout_destination': str
        }

        self.attribute_map = {
            'directories': 'directories',
            'files': 'files',
            'stderr_destination': 'stderrDestination',
            'stdout_destination': 'stdoutDestination'
        }

        self._directories = directories
        self._files = files
        self._stderr_destination = stderr_destination
        self._stdout_destination = stdout_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directories(self):
        """Gets the directories of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        A list of expected directories, relative to the execution root. All paths MUST be delimited by forward slashes.

        :return: The directories of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :rtype: List[str]
        """
        return self._directories

    @directories.setter
    def directories(self, directories):
        """Sets the directories of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        A list of expected directories, relative to the execution root. All paths MUST be delimited by forward slashes.

        :param directories: The directories of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :type directories: List[str]
        """

        self._directories = directories

    @property
    def files(self):
        """Gets the files of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        A list of expected files, relative to the execution root. All paths MUST be delimited by forward slashes.

        :return: The files of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :rtype: List[str]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        A list of expected files, relative to the execution root. All paths MUST be delimited by forward slashes.

        :param files: The files of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :type files: List[str]
        """

        self._files = files

    @property
    def stderr_destination(self):
        """Gets the stderr_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        The destination to which any stderr should be sent. The method by which the bot should send the stream contents to that destination is not defined in this API. As examples, the destination could be a file referenced in the `files` field in this message, or it could be a URI that must be written via the ByteStream API.

        :return: The stderr_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :rtype: str
        """
        return self._stderr_destination

    @stderr_destination.setter
    def stderr_destination(self, stderr_destination):
        """Sets the stderr_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        The destination to which any stderr should be sent. The method by which the bot should send the stream contents to that destination is not defined in this API. As examples, the destination could be a file referenced in the `files` field in this message, or it could be a URI that must be written via the ByteStream API.

        :param stderr_destination: The stderr_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :type stderr_destination: str
        """

        self._stderr_destination = stderr_destination

    @property
    def stdout_destination(self):
        """Gets the stdout_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        The destination to which any stdout should be sent. The method by which the bot should send the stream contents to that destination is not defined in this API. As examples, the destination could be a file referenced in the `files` field in this message, or it could be a URI that must be written via the ByteStream API.

        :return: The stdout_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :rtype: str
        """
        return self._stdout_destination

    @stdout_destination.setter
    def stdout_destination(self, stdout_destination):
        """Sets the stdout_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.

        The destination to which any stdout should be sent. The method by which the bot should send the stream contents to that destination is not defined in this API. As examples, the destination could be a file referenced in the `files` field in this message, or it could be a URI that must be written via the ByteStream API.

        :param stdout_destination: The stdout_destination of this GoogleDevtoolsRemoteworkersV1test2CommandTaskOutputs.
        :type stdout_destination: str
        """

        self._stdout_destination = stdout_destination
