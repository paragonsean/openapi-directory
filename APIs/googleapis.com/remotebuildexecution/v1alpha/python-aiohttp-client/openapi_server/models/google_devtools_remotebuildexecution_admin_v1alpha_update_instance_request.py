# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_devtools_remotebuildexecution_admin_v1alpha_instance import GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance
from openapi_server import util


class GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance: GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance=None, logging_enabled: bool=None, name: str=None, update_mask: str=None):
        """GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest - a model defined in OpenAPI

        :param instance: The instance of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :param logging_enabled: The logging_enabled of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :param name: The name of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :param update_mask: The update_mask of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        """
        self.openapi_types = {
            'instance': GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance,
            'logging_enabled': bool,
            'name': str,
            'update_mask': str
        }

        self.attribute_map = {
            'instance': 'instance',
            'logging_enabled': 'loggingEnabled',
            'name': 'name',
            'update_mask': 'updateMask'
        }

        self._instance = instance
        self._logging_enabled = logging_enabled
        self._name = name
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance(self):
        """Gets the instance of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.


        :return: The instance of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance
        """
        return self._instance

    @instance.setter
    def instance(self, instance):
        """Sets the instance of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.


        :param instance: The instance of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :type instance: GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance
        """

        self._instance = instance

    @property
    def logging_enabled(self):
        """Gets the logging_enabled of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.

        Deprecated, use instance.logging_enabled instead. Whether to enable Stackdriver logging for this instance.

        :return: The logging_enabled of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :rtype: bool
        """
        return self._logging_enabled

    @logging_enabled.setter
    def logging_enabled(self, logging_enabled):
        """Sets the logging_enabled of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.

        Deprecated, use instance.logging_enabled instead. Whether to enable Stackdriver logging for this instance.

        :param logging_enabled: The logging_enabled of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :type logging_enabled: bool
        """

        self._logging_enabled = logging_enabled

    @property
    def name(self):
        """Gets the name of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.

        Deprecated, use instance.Name instead. Name of the instance to update. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.

        :return: The name of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.

        Deprecated, use instance.Name instead. Name of the instance to update. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.

        :param name: The name of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :type name: str
        """

        self._name = name

    @property
    def update_mask(self):
        """Gets the update_mask of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.

        The update mask applies to instance. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If an empty update_mask is provided, only the non-default valued field in the worker pool field will be updated. Note that in order to update a field to the default value (zero, false, empty string) an explicit update_mask must be provided.

        :return: The update_mask of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.

        The update mask applies to instance. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If an empty update_mask is provided, only the non-default valued field in the worker pool field will be updated. Note that in order to update a field to the default value (zero, false, empty string) an explicit update_mask must be provided.

        :param update_mask: The update_mask of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateInstanceRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
