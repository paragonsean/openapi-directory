# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuildBazelRemoteExecutionV2Digest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash: str=None, size_bytes: str=None):
        """BuildBazelRemoteExecutionV2Digest - a model defined in OpenAPI

        :param hash: The hash of this BuildBazelRemoteExecutionV2Digest.
        :param size_bytes: The size_bytes of this BuildBazelRemoteExecutionV2Digest.
        """
        self.openapi_types = {
            'hash': str,
            'size_bytes': str
        }

        self.attribute_map = {
            'hash': 'hash',
            'size_bytes': 'sizeBytes'
        }

        self._hash = hash
        self._size_bytes = size_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildBazelRemoteExecutionV2Digest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildBazelRemoteExecutionV2Digest of this BuildBazelRemoteExecutionV2Digest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash(self):
        """Gets the hash of this BuildBazelRemoteExecutionV2Digest.

        The hash. In the case of SHA-256, it will always be a lowercase hex string exactly 64 characters long.

        :return: The hash of this BuildBazelRemoteExecutionV2Digest.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this BuildBazelRemoteExecutionV2Digest.

        The hash. In the case of SHA-256, it will always be a lowercase hex string exactly 64 characters long.

        :param hash: The hash of this BuildBazelRemoteExecutionV2Digest.
        :type hash: str
        """

        self._hash = hash

    @property
    def size_bytes(self):
        """Gets the size_bytes of this BuildBazelRemoteExecutionV2Digest.

        The size of the blob, in bytes.

        :return: The size_bytes of this BuildBazelRemoteExecutionV2Digest.
        :rtype: str
        """
        return self._size_bytes

    @size_bytes.setter
    def size_bytes(self, size_bytes):
        """Sets the size_bytes of this BuildBazelRemoteExecutionV2Digest.

        The size of the blob, in bytes.

        :param size_bytes: The size_bytes of this BuildBazelRemoteExecutionV2Digest.
        :type size_bytes: str
        """

        self._size_bytes = size_bytes
