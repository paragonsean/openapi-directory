# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_devtools_remoteworkers_v1test2_digest import GoogleDevtoolsRemoteworkersV1test2Digest
from openapi_server import util


class GoogleDevtoolsRemoteworkersV1test2FileMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: str=None, digest: GoogleDevtoolsRemoteworkersV1test2Digest=None, is_executable: bool=None, path: str=None):
        """GoogleDevtoolsRemoteworkersV1test2FileMetadata - a model defined in OpenAPI

        :param contents: The contents of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :param digest: The digest of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :param is_executable: The is_executable of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :param path: The path of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        """
        self.openapi_types = {
            'contents': str,
            'digest': GoogleDevtoolsRemoteworkersV1test2Digest,
            'is_executable': bool,
            'path': str
        }

        self.attribute_map = {
            'contents': 'contents',
            'digest': 'digest',
            'is_executable': 'isExecutable',
            'path': 'path'
        }

        self._contents = contents
        self._digest = digest
        self._is_executable = is_executable
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemoteworkersV1test2FileMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemoteworkersV1test2FileMetadata of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.

        If the file is small enough, its contents may also or alternatively be listed here.

        :return: The contents of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :rtype: str
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.

        If the file is small enough, its contents may also or alternatively be listed here.

        :param contents: The contents of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :type contents: str
        """

        self._contents = contents

    @property
    def digest(self):
        """Gets the digest of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.


        :return: The digest of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :rtype: GoogleDevtoolsRemoteworkersV1test2Digest
        """
        return self._digest

    @digest.setter
    def digest(self, digest):
        """Sets the digest of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.


        :param digest: The digest of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :type digest: GoogleDevtoolsRemoteworkersV1test2Digest
        """

        self._digest = digest

    @property
    def is_executable(self):
        """Gets the is_executable of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.

        Properties of the file

        :return: The is_executable of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :rtype: bool
        """
        return self._is_executable

    @is_executable.setter
    def is_executable(self, is_executable):
        """Sets the is_executable of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.

        Properties of the file

        :param is_executable: The is_executable of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :type is_executable: bool
        """

        self._is_executable = is_executable

    @property
    def path(self):
        """Gets the path of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.

        The path of this file. If this message is part of the CommandOutputs.outputs fields, the path is relative to the execution root and must correspond to an entry in CommandTask.outputs.files. If this message is part of a Directory message, then the path is relative to the root of that directory. All paths MUST be delimited by forward slashes.

        :return: The path of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.

        The path of this file. If this message is part of the CommandOutputs.outputs fields, the path is relative to the execution root and must correspond to an entry in CommandTask.outputs.files. If this message is part of a Directory message, then the path is relative to the root of that directory. All paths MUST be delimited by forward slashes.

        :param path: The path of this GoogleDevtoolsRemoteworkersV1test2FileMetadata.
        :type path: str
        """

        self._path = path
