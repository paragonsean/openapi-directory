# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_devtools_remoteworkers_v1test2_digest import GoogleDevtoolsRemoteworkersV1test2Digest
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleDevtoolsRemoteworkersV1test2CommandResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, exit_code: int=None, metadata: List[Dict[str, object]]=None, outputs: GoogleDevtoolsRemoteworkersV1test2Digest=None, overhead: str=None, status: GoogleRpcStatus=None):
        """GoogleDevtoolsRemoteworkersV1test2CommandResult - a model defined in OpenAPI

        :param duration: The duration of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :param exit_code: The exit_code of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :param metadata: The metadata of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :param outputs: The outputs of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :param overhead: The overhead of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :param status: The status of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        """
        self.openapi_types = {
            'duration': str,
            'exit_code': int,
            'metadata': List[Dict[str, object]],
            'outputs': GoogleDevtoolsRemoteworkersV1test2Digest,
            'overhead': str,
            'status': GoogleRpcStatus
        }

        self.attribute_map = {
            'duration': 'duration',
            'exit_code': 'exitCode',
            'metadata': 'metadata',
            'outputs': 'outputs',
            'overhead': 'overhead',
            'status': 'status'
        }

        self._duration = duration
        self._exit_code = exit_code
        self._metadata = metadata
        self._outputs = outputs
        self._overhead = overhead
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemoteworkersV1test2CommandResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemoteworkersV1test2CommandResult of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        The elapsed time between calling Accept and Complete. The server will also have its own idea of what this should be, but this excludes the overhead of the RPCs and the bot response time.

        :return: The duration of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        The elapsed time between calling Accept and Complete. The server will also have its own idea of what this should be, but this excludes the overhead of the RPCs and the bot response time.

        :param duration: The duration of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :type duration: str
        """

        self._duration = duration

    @property
    def exit_code(self):
        """Gets the exit_code of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        The exit code of the process. An exit code of \"0\" should only be trusted if `status` has a code of OK (otherwise it may simply be unset).

        :return: The exit_code of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """Sets the exit_code of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        The exit code of the process. An exit code of \"0\" should only be trusted if `status` has a code of OK (otherwise it may simply be unset).

        :param exit_code: The exit_code of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :type exit_code: int
        """

        self._exit_code = exit_code

    @property
    def metadata(self):
        """Gets the metadata of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        Implementation-dependent metadata about the task. Both servers and bots may define messages which can be encoded here; bots are free to provide metadata in multiple formats, and servers are free to choose one or more of the values to process and ignore others. In particular, it is *not* considered an error for the bot to provide the server with a field that it doesn't know about.

        :return: The metadata of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :rtype: List[Dict[str, object]]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        Implementation-dependent metadata about the task. Both servers and bots may define messages which can be encoded here; bots are free to provide metadata in multiple formats, and servers are free to choose one or more of the values to process and ignore others. In particular, it is *not* considered an error for the bot to provide the server with a field that it doesn't know about.

        :param metadata: The metadata of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :type metadata: List[Dict[str, object]]
        """

        self._metadata = metadata

    @property
    def outputs(self):
        """Gets the outputs of this GoogleDevtoolsRemoteworkersV1test2CommandResult.


        :return: The outputs of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :rtype: GoogleDevtoolsRemoteworkersV1test2Digest
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this GoogleDevtoolsRemoteworkersV1test2CommandResult.


        :param outputs: The outputs of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :type outputs: GoogleDevtoolsRemoteworkersV1test2Digest
        """

        self._outputs = outputs

    @property
    def overhead(self):
        """Gets the overhead of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        The amount of time *not* spent executing the command (ie uploading/downloading files).

        :return: The overhead of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :rtype: str
        """
        return self._overhead

    @overhead.setter
    def overhead(self, overhead):
        """Sets the overhead of this GoogleDevtoolsRemoteworkersV1test2CommandResult.

        The amount of time *not* spent executing the command (ie uploading/downloading files).

        :param overhead: The overhead of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :type overhead: str
        """

        self._overhead = overhead

    @property
    def status(self):
        """Gets the status of this GoogleDevtoolsRemoteworkersV1test2CommandResult.


        :return: The status of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :rtype: GoogleRpcStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GoogleDevtoolsRemoteworkersV1test2CommandResult.


        :param status: The status of this GoogleDevtoolsRemoteworkersV1test2CommandResult.
        :type status: GoogleRpcStatus
        """

        self._status = status
