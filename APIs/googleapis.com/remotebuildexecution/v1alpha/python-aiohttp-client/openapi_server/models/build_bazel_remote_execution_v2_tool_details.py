# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuildBazelRemoteExecutionV2ToolDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tool_name: str=None, tool_version: str=None):
        """BuildBazelRemoteExecutionV2ToolDetails - a model defined in OpenAPI

        :param tool_name: The tool_name of this BuildBazelRemoteExecutionV2ToolDetails.
        :param tool_version: The tool_version of this BuildBazelRemoteExecutionV2ToolDetails.
        """
        self.openapi_types = {
            'tool_name': str,
            'tool_version': str
        }

        self.attribute_map = {
            'tool_name': 'toolName',
            'tool_version': 'toolVersion'
        }

        self._tool_name = tool_name
        self._tool_version = tool_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildBazelRemoteExecutionV2ToolDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildBazelRemoteExecutionV2ToolDetails of this BuildBazelRemoteExecutionV2ToolDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tool_name(self):
        """Gets the tool_name of this BuildBazelRemoteExecutionV2ToolDetails.

        Name of the tool, e.g. bazel.

        :return: The tool_name of this BuildBazelRemoteExecutionV2ToolDetails.
        :rtype: str
        """
        return self._tool_name

    @tool_name.setter
    def tool_name(self, tool_name):
        """Sets the tool_name of this BuildBazelRemoteExecutionV2ToolDetails.

        Name of the tool, e.g. bazel.

        :param tool_name: The tool_name of this BuildBazelRemoteExecutionV2ToolDetails.
        :type tool_name: str
        """

        self._tool_name = tool_name

    @property
    def tool_version(self):
        """Gets the tool_version of this BuildBazelRemoteExecutionV2ToolDetails.

        Version of the tool used for the request, e.g. 5.0.3.

        :return: The tool_version of this BuildBazelRemoteExecutionV2ToolDetails.
        :rtype: str
        """
        return self._tool_version

    @tool_version.setter
    def tool_version(self, tool_version):
        """Sets the tool_version of this BuildBazelRemoteExecutionV2ToolDetails.

        Version of the tool used for the request, e.g. 5.0.3.

        :param tool_version: The tool_version of this BuildBazelRemoteExecutionV2ToolDetails.
        :type tool_version: str
        """

        self._tool_version = tool_version
