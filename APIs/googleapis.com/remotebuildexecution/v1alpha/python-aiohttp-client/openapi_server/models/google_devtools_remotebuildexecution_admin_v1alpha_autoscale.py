# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_size: str=None, min_idle_workers: str=None, min_size: str=None):
        """GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale - a model defined in OpenAPI

        :param max_size: The max_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :param min_idle_workers: The min_idle_workers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :param min_size: The min_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        """
        self.openapi_types = {
            'max_size': str,
            'min_idle_workers': str,
            'min_size': str
        }

        self.attribute_map = {
            'max_size': 'maxSize',
            'min_idle_workers': 'minIdleWorkers',
            'min_size': 'minSize'
        }

        self._max_size = max_size
        self._min_idle_workers = min_idle_workers
        self._min_size = min_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_size(self):
        """Gets the max_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.

        Optional. The maximal number of workers. Must be equal to or greater than min_size.

        :return: The max_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :rtype: str
        """
        return self._max_size

    @max_size.setter
    def max_size(self, max_size):
        """Sets the max_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.

        Optional. The maximal number of workers. Must be equal to or greater than min_size.

        :param max_size: The max_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :type max_size: str
        """

        self._max_size = max_size

    @property
    def min_idle_workers(self):
        """Gets the min_idle_workers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.

        Optional. The minimum number of idle workers the autoscaler will aim to have in the pool at all times that are immediately available to accept a surge in build traffic. The pool size will still be constrained by min_size and max_size.

        :return: The min_idle_workers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :rtype: str
        """
        return self._min_idle_workers

    @min_idle_workers.setter
    def min_idle_workers(self, min_idle_workers):
        """Sets the min_idle_workers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.

        Optional. The minimum number of idle workers the autoscaler will aim to have in the pool at all times that are immediately available to accept a surge in build traffic. The pool size will still be constrained by min_size and max_size.

        :param min_idle_workers: The min_idle_workers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :type min_idle_workers: str
        """

        self._min_idle_workers = min_idle_workers

    @property
    def min_size(self):
        """Gets the min_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.

        Optional. The minimal number of workers. Must be greater than 0.

        :return: The min_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :rtype: str
        """
        return self._min_size

    @min_size.setter
    def min_size(self, min_size):
        """Sets the min_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.

        Optional. The minimal number of workers. Must be greater than 0.

        :param min_size: The min_size of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.
        :type min_size: str
        """

        self._min_size = min_size
