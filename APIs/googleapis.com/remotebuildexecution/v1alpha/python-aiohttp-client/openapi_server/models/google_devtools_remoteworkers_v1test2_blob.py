# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_devtools_remoteworkers_v1test2_digest import GoogleDevtoolsRemoteworkersV1test2Digest
from openapi_server import util


class GoogleDevtoolsRemoteworkersV1test2Blob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: str=None, digest: GoogleDevtoolsRemoteworkersV1test2Digest=None):
        """GoogleDevtoolsRemoteworkersV1test2Blob - a model defined in OpenAPI

        :param contents: The contents of this GoogleDevtoolsRemoteworkersV1test2Blob.
        :param digest: The digest of this GoogleDevtoolsRemoteworkersV1test2Blob.
        """
        self.openapi_types = {
            'contents': str,
            'digest': GoogleDevtoolsRemoteworkersV1test2Digest
        }

        self.attribute_map = {
            'contents': 'contents',
            'digest': 'digest'
        }

        self._contents = contents
        self._digest = digest

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemoteworkersV1test2Blob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemoteworkersV1test2Blob of this GoogleDevtoolsRemoteworkersV1test2Blob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this GoogleDevtoolsRemoteworkersV1test2Blob.

        The contents of the blob.

        :return: The contents of this GoogleDevtoolsRemoteworkersV1test2Blob.
        :rtype: str
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this GoogleDevtoolsRemoteworkersV1test2Blob.

        The contents of the blob.

        :param contents: The contents of this GoogleDevtoolsRemoteworkersV1test2Blob.
        :type contents: str
        """

        self._contents = contents

    @property
    def digest(self):
        """Gets the digest of this GoogleDevtoolsRemoteworkersV1test2Blob.


        :return: The digest of this GoogleDevtoolsRemoteworkersV1test2Blob.
        :rtype: GoogleDevtoolsRemoteworkersV1test2Digest
        """
        return self._digest

    @digest.setter
    def digest(self, digest):
        """Sets the digest of this GoogleDevtoolsRemoteworkersV1test2Blob.


        :param digest: The digest of this GoogleDevtoolsRemoteworkersV1test2Blob.
        :type digest: GoogleDevtoolsRemoteworkersV1test2Digest
        """

        self._digest = digest
