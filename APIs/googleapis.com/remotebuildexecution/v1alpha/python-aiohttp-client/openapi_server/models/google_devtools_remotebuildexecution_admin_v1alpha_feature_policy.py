# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_devtools_remotebuildexecution_admin_v1alpha_feature_policy_feature import GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
from openapi_server import util


class GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_hermeticity: str=None, action_isolation: str=None, container_image_sources: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_add_capabilities: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_chroot_path: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_network: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_privileged: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_run_as_container_provided_user: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_run_as_root: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_runtime: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_sibling_containers: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, docker_ulimits: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature=None, linux_execution: str=None, linux_isolation: str=None, mac_execution: str=None, vm_verification: str=None, windows_execution: str=None):
        """GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy - a model defined in OpenAPI

        :param action_hermeticity: The action_hermeticity of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param action_isolation: The action_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param container_image_sources: The container_image_sources of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_add_capabilities: The docker_add_capabilities of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_chroot_path: The docker_chroot_path of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_network: The docker_network of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_privileged: The docker_privileged of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_run_as_container_provided_user: The docker_run_as_container_provided_user of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_run_as_root: The docker_run_as_root of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_runtime: The docker_runtime of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_sibling_containers: The docker_sibling_containers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param docker_ulimits: The docker_ulimits of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param linux_execution: The linux_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param linux_isolation: The linux_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param mac_execution: The mac_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param vm_verification: The vm_verification of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :param windows_execution: The windows_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        """
        self.openapi_types = {
            'action_hermeticity': str,
            'action_isolation': str,
            'container_image_sources': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_add_capabilities': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_chroot_path': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_network': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_privileged': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_run_as_container_provided_user': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_run_as_root': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_runtime': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_sibling_containers': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'docker_ulimits': GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature,
            'linux_execution': str,
            'linux_isolation': str,
            'mac_execution': str,
            'vm_verification': str,
            'windows_execution': str
        }

        self.attribute_map = {
            'action_hermeticity': 'actionHermeticity',
            'action_isolation': 'actionIsolation',
            'container_image_sources': 'containerImageSources',
            'docker_add_capabilities': 'dockerAddCapabilities',
            'docker_chroot_path': 'dockerChrootPath',
            'docker_network': 'dockerNetwork',
            'docker_privileged': 'dockerPrivileged',
            'docker_run_as_container_provided_user': 'dockerRunAsContainerProvidedUser',
            'docker_run_as_root': 'dockerRunAsRoot',
            'docker_runtime': 'dockerRuntime',
            'docker_sibling_containers': 'dockerSiblingContainers',
            'docker_ulimits': 'dockerUlimits',
            'linux_execution': 'linuxExecution',
            'linux_isolation': 'linuxIsolation',
            'mac_execution': 'macExecution',
            'vm_verification': 'vmVerification',
            'windows_execution': 'windowsExecution'
        }

        self._action_hermeticity = action_hermeticity
        self._action_isolation = action_isolation
        self._container_image_sources = container_image_sources
        self._docker_add_capabilities = docker_add_capabilities
        self._docker_chroot_path = docker_chroot_path
        self._docker_network = docker_network
        self._docker_privileged = docker_privileged
        self._docker_run_as_container_provided_user = docker_run_as_container_provided_user
        self._docker_run_as_root = docker_run_as_root
        self._docker_runtime = docker_runtime
        self._docker_sibling_containers = docker_sibling_containers
        self._docker_ulimits = docker_ulimits
        self._linux_execution = linux_execution
        self._linux_isolation = linux_isolation
        self._mac_execution = mac_execution
        self._vm_verification = vm_verification
        self._windows_execution = windows_execution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_hermeticity(self):
        """Gets the action_hermeticity of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines the hermeticity policy for actions on this instance. DO NOT USE: Experimental / unlaunched feature.

        :return: The action_hermeticity of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: str
        """
        return self._action_hermeticity

    @action_hermeticity.setter
    def action_hermeticity(self, action_hermeticity):
        """Sets the action_hermeticity of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines the hermeticity policy for actions on this instance. DO NOT USE: Experimental / unlaunched feature.

        :param action_hermeticity: The action_hermeticity of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type action_hermeticity: str
        """
        allowed_values = ["ACTION_HERMETICITY_UNSPECIFIED", "ACTION_HERMETICITY_OFF", "ACTION_HERMETICITY_ENFORCED", "ACTION_HERMETICITY_BEST_EFFORT"]  # noqa: E501
        if action_hermeticity not in allowed_values:
            raise ValueError(
                "Invalid value for `action_hermeticity` ({0}), must be one of {1}"
                .format(action_hermeticity, allowed_values)
            )

        self._action_hermeticity = action_hermeticity

    @property
    def action_isolation(self):
        """Gets the action_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines the isolation policy for actions on this instance. DO NOT USE: Experimental / unlaunched feature.

        :return: The action_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: str
        """
        return self._action_isolation

    @action_isolation.setter
    def action_isolation(self, action_isolation):
        """Sets the action_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines the isolation policy for actions on this instance. DO NOT USE: Experimental / unlaunched feature.

        :param action_isolation: The action_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type action_isolation: str
        """
        allowed_values = ["ACTION_ISOLATION_UNSPECIFIED", "ACTION_ISOLATION_OFF", "ACTION_ISOLATION_ENFORCED"]  # noqa: E501
        if action_isolation not in allowed_values:
            raise ValueError(
                "Invalid value for `action_isolation` ({0}), must be one of {1}"
                .format(action_isolation, allowed_values)
            )

        self._action_isolation = action_isolation

    @property
    def container_image_sources(self):
        """Gets the container_image_sources of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The container_image_sources of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._container_image_sources

    @container_image_sources.setter
    def container_image_sources(self, container_image_sources):
        """Sets the container_image_sources of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param container_image_sources: The container_image_sources of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type container_image_sources: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._container_image_sources = container_image_sources

    @property
    def docker_add_capabilities(self):
        """Gets the docker_add_capabilities of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_add_capabilities of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_add_capabilities

    @docker_add_capabilities.setter
    def docker_add_capabilities(self, docker_add_capabilities):
        """Sets the docker_add_capabilities of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_add_capabilities: The docker_add_capabilities of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_add_capabilities: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_add_capabilities = docker_add_capabilities

    @property
    def docker_chroot_path(self):
        """Gets the docker_chroot_path of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_chroot_path of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_chroot_path

    @docker_chroot_path.setter
    def docker_chroot_path(self, docker_chroot_path):
        """Sets the docker_chroot_path of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_chroot_path: The docker_chroot_path of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_chroot_path: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_chroot_path = docker_chroot_path

    @property
    def docker_network(self):
        """Gets the docker_network of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_network of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_network

    @docker_network.setter
    def docker_network(self, docker_network):
        """Sets the docker_network of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_network: The docker_network of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_network: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_network = docker_network

    @property
    def docker_privileged(self):
        """Gets the docker_privileged of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_privileged of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_privileged

    @docker_privileged.setter
    def docker_privileged(self, docker_privileged):
        """Sets the docker_privileged of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_privileged: The docker_privileged of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_privileged: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_privileged = docker_privileged

    @property
    def docker_run_as_container_provided_user(self):
        """Gets the docker_run_as_container_provided_user of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_run_as_container_provided_user of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_run_as_container_provided_user

    @docker_run_as_container_provided_user.setter
    def docker_run_as_container_provided_user(self, docker_run_as_container_provided_user):
        """Sets the docker_run_as_container_provided_user of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_run_as_container_provided_user: The docker_run_as_container_provided_user of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_run_as_container_provided_user: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_run_as_container_provided_user = docker_run_as_container_provided_user

    @property
    def docker_run_as_root(self):
        """Gets the docker_run_as_root of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_run_as_root of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_run_as_root

    @docker_run_as_root.setter
    def docker_run_as_root(self, docker_run_as_root):
        """Sets the docker_run_as_root of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_run_as_root: The docker_run_as_root of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_run_as_root: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_run_as_root = docker_run_as_root

    @property
    def docker_runtime(self):
        """Gets the docker_runtime of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_runtime of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_runtime

    @docker_runtime.setter
    def docker_runtime(self, docker_runtime):
        """Sets the docker_runtime of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_runtime: The docker_runtime of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_runtime: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_runtime = docker_runtime

    @property
    def docker_sibling_containers(self):
        """Gets the docker_sibling_containers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_sibling_containers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_sibling_containers

    @docker_sibling_containers.setter
    def docker_sibling_containers(self, docker_sibling_containers):
        """Sets the docker_sibling_containers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_sibling_containers: The docker_sibling_containers of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_sibling_containers: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_sibling_containers = docker_sibling_containers

    @property
    def docker_ulimits(self):
        """Gets the docker_ulimits of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :return: The docker_ulimits of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """
        return self._docker_ulimits

    @docker_ulimits.setter
    def docker_ulimits(self, docker_ulimits):
        """Sets the docker_ulimits of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.


        :param docker_ulimits: The docker_ulimits of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type docker_ulimits: GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature
        """

        self._docker_ulimits = docker_ulimits

    @property
    def linux_execution(self):
        """Gets the linux_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines how Linux actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.

        :return: The linux_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: str
        """
        return self._linux_execution

    @linux_execution.setter
    def linux_execution(self, linux_execution):
        """Sets the linux_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines how Linux actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.

        :param linux_execution: The linux_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type linux_execution: str
        """
        allowed_values = ["LINUX_EXECUTION_UNSPECIFIED", "LINUX_EXECUTION_FORBIDDEN", "LINUX_EXECUTION_UNRESTRICTED", "LINUX_EXECUTION_HARDENED_GVISOR", "LINUX_EXECUTION_HARDENED_GVISOR_OR_TERMINAL"]  # noqa: E501
        if linux_execution not in allowed_values:
            raise ValueError(
                "Invalid value for `linux_execution` ({0}), must be one of {1}"
                .format(linux_execution, allowed_values)
            )

        self._linux_execution = linux_execution

    @property
    def linux_isolation(self):
        """Gets the linux_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        linux_isolation allows overriding the docker runtime used for containers started on Linux.

        :return: The linux_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: str
        """
        return self._linux_isolation

    @linux_isolation.setter
    def linux_isolation(self, linux_isolation):
        """Sets the linux_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        linux_isolation allows overriding the docker runtime used for containers started on Linux.

        :param linux_isolation: The linux_isolation of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type linux_isolation: str
        """
        allowed_values = ["LINUX_ISOLATION_UNSPECIFIED", "GVISOR", "false"]  # noqa: E501
        if linux_isolation not in allowed_values:
            raise ValueError(
                "Invalid value for `linux_isolation` ({0}), must be one of {1}"
                .format(linux_isolation, allowed_values)
            )

        self._linux_isolation = linux_isolation

    @property
    def mac_execution(self):
        """Gets the mac_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines how Windows actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.

        :return: The mac_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: str
        """
        return self._mac_execution

    @mac_execution.setter
    def mac_execution(self, mac_execution):
        """Sets the mac_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines how Windows actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.

        :param mac_execution: The mac_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type mac_execution: str
        """
        allowed_values = ["MAC_EXECUTION_UNSPECIFIED", "MAC_EXECUTION_FORBIDDEN"]  # noqa: E501
        if mac_execution not in allowed_values:
            raise ValueError(
                "Invalid value for `mac_execution` ({0}), must be one of {1}"
                .format(mac_execution, allowed_values)
            )

        self._mac_execution = mac_execution

    @property
    def vm_verification(self):
        """Gets the vm_verification of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Whether to verify CreateBotSession and UpdateBotSession from the bot.

        :return: The vm_verification of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: str
        """
        return self._vm_verification

    @vm_verification.setter
    def vm_verification(self, vm_verification):
        """Sets the vm_verification of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Whether to verify CreateBotSession and UpdateBotSession from the bot.

        :param vm_verification: The vm_verification of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type vm_verification: str
        """
        allowed_values = ["VM_VERIFICATION_UNSPECIFIED", "VM_VERIFICATION_GCP_TOKEN", "VM_VERIFICATION_OFF"]  # noqa: E501
        if vm_verification not in allowed_values:
            raise ValueError(
                "Invalid value for `vm_verification` ({0}), must be one of {1}"
                .format(vm_verification, allowed_values)
            )

        self._vm_verification = vm_verification

    @property
    def windows_execution(self):
        """Gets the windows_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines how Windows actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.

        :return: The windows_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :rtype: str
        """
        return self._windows_execution

    @windows_execution.setter
    def windows_execution(self, windows_execution):
        """Sets the windows_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.

        Defines how Windows actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.

        :param windows_execution: The windows_execution of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.
        :type windows_execution: str
        """
        allowed_values = ["WINDOWS_EXECUTION_UNSPECIFIED", "WINDOWS_EXECUTION_FORBIDDEN", "WINDOWS_EXECUTION_UNRESTRICTED", "WINDOWS_EXECUTION_TERMINAL"]  # noqa: E501
        if windows_execution not in allowed_values:
            raise ValueError(
                "Invalid value for `windows_execution` ({0}), must be one of {1}"
                .format(windows_execution, allowed_values)
            )

        self._windows_execution = windows_execution
