# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_values: List[str]=None, policy: str=None):
        """GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature - a model defined in OpenAPI

        :param allowed_values: The allowed_values of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.
        :param policy: The policy of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.
        """
        self.openapi_types = {
            'allowed_values': List[str],
            'policy': str
        }

        self.attribute_map = {
            'allowed_values': 'allowedValues',
            'policy': 'policy'
        }

        self._allowed_values = allowed_values
        self._policy = policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_values(self):
        """Gets the allowed_values of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.

        A list of acceptable values. Only effective when the policy is `RESTRICTED`.

        :return: The allowed_values of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.
        :rtype: List[str]
        """
        return self._allowed_values

    @allowed_values.setter
    def allowed_values(self, allowed_values):
        """Sets the allowed_values of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.

        A list of acceptable values. Only effective when the policy is `RESTRICTED`.

        :param allowed_values: The allowed_values of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.
        :type allowed_values: List[str]
        """

        self._allowed_values = allowed_values

    @property
    def policy(self):
        """Gets the policy of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.

        The policy of the feature.

        :return: The policy of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.
        :rtype: str
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.

        The policy of the feature.

        :param policy: The policy of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature.
        :type policy: str
        """
        allowed_values = ["POLICY_UNSPECIFIED", "ALLOWED", "FORBIDDEN", "RESTRICTED"]  # noqa: E501
        if policy not in allowed_values:
            raise ValueError(
                "Invalid value for `policy` ({0}), must be one of {1}"
                .format(policy, allowed_values)
            )

        self._policy = policy
