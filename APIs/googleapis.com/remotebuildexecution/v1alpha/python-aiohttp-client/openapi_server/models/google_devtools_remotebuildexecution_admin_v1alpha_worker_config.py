# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_devtools_remotebuildexecution_admin_v1alpha_accelerator_config import GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig
from openapi_server.models.google_devtools_remotebuildexecution_admin_v1alpha_disks import GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks
from openapi_server import util


class GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator: GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig=None, attached_disks: GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks=None, disk_size_gb: str=None, disk_type: str=None, labels: Dict[str, str]=None, machine_type: str=None, max_concurrent_actions: str=None, min_cpu_platform: str=None, network_access: str=None, reserved: bool=None, sole_tenant_node_type: str=None, user_service_accounts: List[str]=None, vm_image: str=None, zones: List[str]=None):
        """GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig - a model defined in OpenAPI

        :param accelerator: The accelerator of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param attached_disks: The attached_disks of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param disk_size_gb: The disk_size_gb of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param disk_type: The disk_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param labels: The labels of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param machine_type: The machine_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param max_concurrent_actions: The max_concurrent_actions of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param min_cpu_platform: The min_cpu_platform of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param network_access: The network_access of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param reserved: The reserved of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param sole_tenant_node_type: The sole_tenant_node_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param user_service_accounts: The user_service_accounts of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param vm_image: The vm_image of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :param zones: The zones of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        """
        self.openapi_types = {
            'accelerator': GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig,
            'attached_disks': GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks,
            'disk_size_gb': str,
            'disk_type': str,
            'labels': Dict[str, str],
            'machine_type': str,
            'max_concurrent_actions': str,
            'min_cpu_platform': str,
            'network_access': str,
            'reserved': bool,
            'sole_tenant_node_type': str,
            'user_service_accounts': List[str],
            'vm_image': str,
            'zones': List[str]
        }

        self.attribute_map = {
            'accelerator': 'accelerator',
            'attached_disks': 'attachedDisks',
            'disk_size_gb': 'diskSizeGb',
            'disk_type': 'diskType',
            'labels': 'labels',
            'machine_type': 'machineType',
            'max_concurrent_actions': 'maxConcurrentActions',
            'min_cpu_platform': 'minCpuPlatform',
            'network_access': 'networkAccess',
            'reserved': 'reserved',
            'sole_tenant_node_type': 'soleTenantNodeType',
            'user_service_accounts': 'userServiceAccounts',
            'vm_image': 'vmImage',
            'zones': 'zones'
        }

        self._accelerator = accelerator
        self._attached_disks = attached_disks
        self._disk_size_gb = disk_size_gb
        self._disk_type = disk_type
        self._labels = labels
        self._machine_type = machine_type
        self._max_concurrent_actions = max_concurrent_actions
        self._min_cpu_platform = min_cpu_platform
        self._network_access = network_access
        self._reserved = reserved
        self._sole_tenant_node_type = sole_tenant_node_type
        self._user_service_accounts = user_service_accounts
        self._vm_image = vm_image
        self._zones = zones

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator(self):
        """Gets the accelerator of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.


        :return: The accelerator of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig
        """
        return self._accelerator

    @accelerator.setter
    def accelerator(self, accelerator):
        """Sets the accelerator of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.


        :param accelerator: The accelerator of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type accelerator: GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfig
        """

        self._accelerator = accelerator

    @property
    def attached_disks(self):
        """Gets the attached_disks of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.


        :return: The attached_disks of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks
        """
        return self._attached_disks

    @attached_disks.setter
    def attached_disks(self, attached_disks):
        """Sets the attached_disks of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.


        :param attached_disks: The attached_disks of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type attached_disks: GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks
        """

        self._attached_disks = attached_disks

    @property
    def disk_size_gb(self):
        """Gets the disk_size_gb of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Required. Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/

        :return: The disk_size_gb of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._disk_size_gb

    @disk_size_gb.setter
    def disk_size_gb(self, disk_size_gb):
        """Sets the disk_size_gb of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Required. Size of the disk attached to the worker, in GB. See https://cloud.google.com/compute/docs/disks/

        :param disk_size_gb: The disk_size_gb of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type disk_size_gb: str
        """

        self._disk_size_gb = disk_size_gb

    @property
    def disk_type(self):
        """Gets the disk_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Required. Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.

        :return: The disk_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Required. Disk Type to use for the worker. See [Storage options](https://cloud.google.com/compute/docs/disks/#introduction). Currently only `pd-standard` and `pd-ssd` are supported.

        :param disk_type: The disk_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type disk_type: str
        """

        self._disk_type = disk_type

    @property
    def labels(self):
        """Gets the labels of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.

        :return: The labels of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Labels associated with the workers. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International letters are permitted. Label keys must start with a letter. Label values are optional. There can not be more than 64 labels per resource.

        :param labels: The labels of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def machine_type(self):
        """Gets the machine_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Required. Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.

        :return: The machine_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._machine_type

    @machine_type.setter
    def machine_type(self, machine_type):
        """Sets the machine_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Required. Machine type of the worker, such as `e2-standard-2`. See https://cloud.google.com/compute/docs/machine-types for a list of supported machine types. Note that `f1-micro` and `g1-small` are not yet supported.

        :param machine_type: The machine_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type machine_type: str
        """

        self._machine_type = machine_type

    @property
    def max_concurrent_actions(self):
        """Gets the max_concurrent_actions of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        The maximum number of actions a worker can execute concurrently.

        :return: The max_concurrent_actions of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._max_concurrent_actions

    @max_concurrent_actions.setter
    def max_concurrent_actions(self, max_concurrent_actions):
        """Sets the max_concurrent_actions of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        The maximum number of actions a worker can execute concurrently.

        :param max_concurrent_actions: The max_concurrent_actions of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type max_concurrent_actions: str
        """

        self._max_concurrent_actions = max_concurrent_actions

    @property
    def min_cpu_platform(self):
        """Gets the min_cpu_platform of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).

        :return: The min_cpu_platform of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._min_cpu_platform

    @min_cpu_platform.setter
    def min_cpu_platform(self, min_cpu_platform):
        """Sets the min_cpu_platform of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Minimum CPU platform to use when creating the worker. See [CPU Platforms](https://cloud.google.com/compute/docs/cpu-platforms).

        :param min_cpu_platform: The min_cpu_platform of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type min_cpu_platform: str
        """

        self._min_cpu_platform = min_cpu_platform

    @property
    def network_access(self):
        """Gets the network_access of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Determines the type of network access granted to workers. Possible values: - \"public\": Workers can connect to the public internet. - \"private\": Workers can only connect to Google APIs and services. - \"restricted-private\": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).

        :return: The network_access of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._network_access

    @network_access.setter
    def network_access(self, network_access):
        """Sets the network_access of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Determines the type of network access granted to workers. Possible values: - \"public\": Workers can connect to the public internet. - \"private\": Workers can only connect to Google APIs and services. - \"restricted-private\": Workers can only connect to Google APIs that are reachable through `restricted.googleapis.com` (`199.36.153.4/30`).

        :param network_access: The network_access of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type network_access: str
        """

        self._network_access = network_access

    @property
    def reserved(self):
        """Gets the reserved of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.

        :return: The reserved of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: bool
        """
        return self._reserved

    @reserved.setter
    def reserved(self, reserved):
        """Sets the reserved of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Determines whether the worker is reserved (equivalent to a Compute Engine on-demand VM and therefore won't be preempted). See [Preemptible VMs](https://cloud.google.com/preemptible-vms/) for more details.

        :param reserved: The reserved of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type reserved: bool
        """

        self._reserved = reserved

    @property
    def sole_tenant_node_type(self):
        """Gets the sole_tenant_node_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        The node type name to be used for sole-tenant nodes.

        :return: The sole_tenant_node_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._sole_tenant_node_type

    @sole_tenant_node_type.setter
    def sole_tenant_node_type(self, sole_tenant_node_type):
        """Sets the sole_tenant_node_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        The node type name to be used for sole-tenant nodes.

        :param sole_tenant_node_type: The sole_tenant_node_type of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type sole_tenant_node_type: str
        """

        self._sole_tenant_node_type = sole_tenant_node_type

    @property
    def user_service_accounts(self):
        """Gets the user_service_accounts of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Optional. List of user service accounts. The last service account in the list is what the user code will run as. The rest of the service accounts constitute the impersonation chain. For example, if len(user_service_accounts) == 2 and if the VM's service account is RBE's P4SA, then RBE'S P4SA should be granted the Service Account Token Creator role on user_service_accounts[0] and user_service_accounts[0] should be granted the Service Account Token Creator role on user_service_accounts[1].

        :return: The user_service_accounts of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: List[str]
        """
        return self._user_service_accounts

    @user_service_accounts.setter
    def user_service_accounts(self, user_service_accounts):
        """Sets the user_service_accounts of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Optional. List of user service accounts. The last service account in the list is what the user code will run as. The rest of the service accounts constitute the impersonation chain. For example, if len(user_service_accounts) == 2 and if the VM's service account is RBE's P4SA, then RBE'S P4SA should be granted the Service Account Token Creator role on user_service_accounts[0] and user_service_accounts[0] should be granted the Service Account Token Creator role on user_service_accounts[1].

        :param user_service_accounts: The user_service_accounts of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type user_service_accounts: List[str]
        """

        self._user_service_accounts = user_service_accounts

    @property
    def vm_image(self):
        """Gets the vm_image of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        The name of the image used by each VM.

        :return: The vm_image of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: str
        """
        return self._vm_image

    @vm_image.setter
    def vm_image(self, vm_image):
        """Sets the vm_image of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        The name of the image used by each VM.

        :param vm_image: The vm_image of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type vm_image: str
        """

        self._vm_image = vm_image

    @property
    def zones(self):
        """Gets the zones of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Optional. Zones in the region where the pool VMs should be. Leave empty for no restrictions.

        :return: The zones of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :rtype: List[str]
        """
        return self._zones

    @zones.setter
    def zones(self, zones):
        """Sets the zones of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.

        Optional. Zones in the region where the pool VMs should be. Leave empty for no restrictions.

        :param zones: The zones of this GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.
        :type zones: List[str]
        """

        self._zones = zones
