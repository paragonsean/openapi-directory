# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleDevtoolsRemoteworkersV1test2Digest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash: str=None, size_bytes: str=None):
        """GoogleDevtoolsRemoteworkersV1test2Digest - a model defined in OpenAPI

        :param hash: The hash of this GoogleDevtoolsRemoteworkersV1test2Digest.
        :param size_bytes: The size_bytes of this GoogleDevtoolsRemoteworkersV1test2Digest.
        """
        self.openapi_types = {
            'hash': str,
            'size_bytes': str
        }

        self.attribute_map = {
            'hash': 'hash',
            'size_bytes': 'sizeBytes'
        }

        self._hash = hash
        self._size_bytes = size_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsRemoteworkersV1test2Digest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsRemoteworkersV1test2Digest of this GoogleDevtoolsRemoteworkersV1test2Digest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash(self):
        """Gets the hash of this GoogleDevtoolsRemoteworkersV1test2Digest.

        A string-encoded hash (eg \"1a2b3c\", not the byte array [0x1a, 0x2b, 0x3c]) using an implementation-defined hash algorithm (eg SHA-256).

        :return: The hash of this GoogleDevtoolsRemoteworkersV1test2Digest.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this GoogleDevtoolsRemoteworkersV1test2Digest.

        A string-encoded hash (eg \"1a2b3c\", not the byte array [0x1a, 0x2b, 0x3c]) using an implementation-defined hash algorithm (eg SHA-256).

        :param hash: The hash of this GoogleDevtoolsRemoteworkersV1test2Digest.
        :type hash: str
        """

        self._hash = hash

    @property
    def size_bytes(self):
        """Gets the size_bytes of this GoogleDevtoolsRemoteworkersV1test2Digest.

        The size of the contents. While this is not strictly required as part of an identifier (after all, any given hash will have exactly one canonical size), it's useful in almost all cases when one might want to send or retrieve blobs of content and is included here for this reason.

        :return: The size_bytes of this GoogleDevtoolsRemoteworkersV1test2Digest.
        :rtype: str
        """
        return self._size_bytes

    @size_bytes.setter
    def size_bytes(self, size_bytes):
        """Sets the size_bytes of this GoogleDevtoolsRemoteworkersV1test2Digest.

        The size of the contents. While this is not strictly required as part of an identifier (after all, any given hash will have exactly one canonical size), it's useful in almost all cases when one might want to send or retrieve blobs of content and is included here for this reason.

        :param size_bytes: The size_bytes of this GoogleDevtoolsRemoteworkersV1test2Digest.
        :type size_bytes: str
        """

        self._size_bytes = size_bytes
