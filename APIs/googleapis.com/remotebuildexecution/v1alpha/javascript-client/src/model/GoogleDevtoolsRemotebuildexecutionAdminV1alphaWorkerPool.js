/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale from './GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale';
import GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig from './GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig';

/**
 * The GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool model module.
 * @module model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool
 * @version v1alpha
 */
class GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool {
    /**
     * Constructs a new <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool</code>.
     * A worker pool resource in the Remote Build Execution API.
     * @alias module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool
     */
    constructor() { 
        
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool} obj Optional instance to populate.
     * @return {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool} The populated <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool();

            if (data.hasOwnProperty('autoscale')) {
                obj['autoscale'] = GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.constructFromObject(data['autoscale']);
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('hostOs')) {
                obj['hostOs'] = ApiClient.convertToType(data['hostOs'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('workerConfig')) {
                obj['workerConfig'] = GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.constructFromObject(data['workerConfig']);
            }
            if (data.hasOwnProperty('workerCount')) {
                obj['workerCount'] = ApiClient.convertToType(data['workerCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoscale`
        if (data['autoscale']) { // data not null
          GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale.validateJSON(data['autoscale']);
        }
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['hostOs'] && !(typeof data['hostOs'] === 'string' || data['hostOs'] instanceof String)) {
            throw new Error("Expected the field `hostOs` to be a primitive type in the JSON string but got " + data['hostOs']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `workerConfig`
        if (data['workerConfig']) { // data not null
          GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig.validateJSON(data['workerConfig']);
        }
        // ensure the json data is a string
        if (data['workerCount'] && !(typeof data['workerCount'] === 'string' || data['workerCount'] instanceof String)) {
            throw new Error("Expected the field `workerCount` to be a primitive type in the JSON string but got " + data['workerCount']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscale} autoscale
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.prototype['autoscale'] = undefined;

/**
 * Channel specifies the release channel of the pool.
 * @member {String} channel
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.prototype['channel'] = undefined;

/**
 * HostOS specifies the OS version of the image for the worker VMs.
 * @member {String} hostOs
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.prototype['hostOs'] = undefined;

/**
 * WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
 * @member {String} name
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.prototype['name'] = undefined;

/**
 * Output only. State of the worker pool.
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.StateEnum} state
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.prototype['state'] = undefined;

/**
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfig} workerConfig
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.prototype['workerConfig'] = undefined;

/**
 * The desired number of workers in the worker pool. Must be a value between 0 and 15000.
 * @member {String} workerCount
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool.prototype['workerCount'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "UPDATING"
     * @const
     */
    "UPDATING": "UPDATING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE"
};



export default GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool;

