/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy from './GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy';
import GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig from './GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig';

/**
 * The GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance model module.
 * @module model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance
 * @version v1alpha
 */
class GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance {
    /**
     * Constructs a new <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance</code>.
     * Instance conceptually encapsulates all Remote Build Execution resources for remote builds. An instance consists of storage and compute resources (for example, &#x60;ContentAddressableStorage&#x60;, &#x60;ActionCache&#x60;, &#x60;WorkerPools&#x60;) used for running remote builds. All Remote Build Execution API calls are scoped to an instance.
     * @alias module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance
     */
    constructor() { 
        
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance} obj Optional instance to populate.
     * @return {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance} The populated <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance();

            if (data.hasOwnProperty('featurePolicy')) {
                obj['featurePolicy'] = GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.constructFromObject(data['featurePolicy']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('loggingEnabled')) {
                obj['loggingEnabled'] = ApiClient.convertToType(data['loggingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('schedulerNotificationConfig')) {
                obj['schedulerNotificationConfig'] = GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig.constructFromObject(data['schedulerNotificationConfig']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance</code>.
     */
    static validateJSON(data) {
        // validate the optional field `featurePolicy`
        if (data['featurePolicy']) { // data not null
          GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy.validateJSON(data['featurePolicy']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `schedulerNotificationConfig`
        if (data['schedulerNotificationConfig']) { // data not null
          GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig.validateJSON(data['schedulerNotificationConfig']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy} featurePolicy
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.prototype['featurePolicy'] = undefined;

/**
 * The location is a GCP region. Currently only `us-central1` is supported.
 * @member {String} location
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.prototype['location'] = undefined;

/**
 * Output only. Whether stack driver logging is enabled for the instance.
 * @member {Boolean} loggingEnabled
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.prototype['loggingEnabled'] = undefined;

/**
 * Output only. Instance resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`. Name should not be populated when creating an instance since it is provided in the `instance_id` field.
 * @member {String} name
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig} schedulerNotificationConfig
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.prototype['schedulerNotificationConfig'] = undefined;

/**
 * Output only. State of the instance.
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.StateEnum} state
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE"
};



export default GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance;

