/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD from './GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD';
import GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksPersistentDisk from './GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksPersistentDisk';

/**
 * The GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks model module.
 * @module model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks
 * @version v1alpha
 */
class GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks {
    /**
     * Constructs a new <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks</code>.
     * Disks defines the disks that would be attached to the workers.
     * @alias module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks
     */
    constructor() { 
        
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks} obj Optional instance to populate.
     * @return {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks} The populated <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks();

            if (data.hasOwnProperty('dockerRootDisk')) {
                obj['dockerRootDisk'] = GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksPersistentDisk.constructFromObject(data['dockerRootDisk']);
            }
            if (data.hasOwnProperty('localSsd')) {
                obj['localSsd'] = GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD.constructFromObject(data['localSsd']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dockerRootDisk`
        if (data['dockerRootDisk']) { // data not null
          GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksPersistentDisk.validateJSON(data['dockerRootDisk']);
        }
        // validate the optional field `localSsd`
        if (data['localSsd']) { // data not null
          GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD.validateJSON(data['localSsd']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksPersistentDisk} dockerRootDisk
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks.prototype['dockerRootDisk'] = undefined;

/**
 * @member {module:model/GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisksLocalSSD} localSsd
 */
GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks.prototype['localSsd'] = undefined;






export default GoogleDevtoolsRemotebuildexecutionAdminV1alphaDisks;

