/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildBazelRemoteExecutionV2ActionResult from './BuildBazelRemoteExecutionV2ActionResult';
import BuildBazelRemoteExecutionV2LogFile from './BuildBazelRemoteExecutionV2LogFile';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The BuildBazelRemoteExecutionV2ExecuteResponse model module.
 * @module model/BuildBazelRemoteExecutionV2ExecuteResponse
 * @version v1alpha
 */
class BuildBazelRemoteExecutionV2ExecuteResponse {
    /**
     * Constructs a new <code>BuildBazelRemoteExecutionV2ExecuteResponse</code>.
     * The response message for Execution.Execute, which will be contained in the response field of the Operation.
     * @alias module:model/BuildBazelRemoteExecutionV2ExecuteResponse
     */
    constructor() { 
        
        BuildBazelRemoteExecutionV2ExecuteResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildBazelRemoteExecutionV2ExecuteResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildBazelRemoteExecutionV2ExecuteResponse} obj Optional instance to populate.
     * @return {module:model/BuildBazelRemoteExecutionV2ExecuteResponse} The populated <code>BuildBazelRemoteExecutionV2ExecuteResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildBazelRemoteExecutionV2ExecuteResponse();

            if (data.hasOwnProperty('cachedResult')) {
                obj['cachedResult'] = ApiClient.convertToType(data['cachedResult'], 'Boolean');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = BuildBazelRemoteExecutionV2ActionResult.constructFromObject(data['result']);
            }
            if (data.hasOwnProperty('serverLogs')) {
                obj['serverLogs'] = ApiClient.convertToType(data['serverLogs'], {'String': BuildBazelRemoteExecutionV2LogFile});
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = GoogleRpcStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildBazelRemoteExecutionV2ExecuteResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildBazelRemoteExecutionV2ExecuteResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // validate the optional field `result`
        if (data['result']) { // data not null
          BuildBazelRemoteExecutionV2ActionResult.validateJSON(data['result']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          GoogleRpcStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * True if the result was served from cache, false if it was executed.
 * @member {Boolean} cachedResult
 */
BuildBazelRemoteExecutionV2ExecuteResponse.prototype['cachedResult'] = undefined;

/**
 * Freeform informational message with details on the execution of the action that may be displayed to the user upon failure or when requested explicitly.
 * @member {String} message
 */
BuildBazelRemoteExecutionV2ExecuteResponse.prototype['message'] = undefined;

/**
 * @member {module:model/BuildBazelRemoteExecutionV2ActionResult} result
 */
BuildBazelRemoteExecutionV2ExecuteResponse.prototype['result'] = undefined;

/**
 * An optional list of additional log outputs the server wishes to provide. A server can use this to return execution-specific logs however it wishes. This is intended primarily to make it easier for users to debug issues that may be outside of the actual job execution, such as by identifying the worker executing the action or by providing logs from the worker's setup phase. The keys SHOULD be human readable so that a client can display them to a user.
 * @member {Object.<String, module:model/BuildBazelRemoteExecutionV2LogFile>} serverLogs
 */
BuildBazelRemoteExecutionV2ExecuteResponse.prototype['serverLogs'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} status
 */
BuildBazelRemoteExecutionV2ExecuteResponse.prototype['status'] = undefined;






export default BuildBazelRemoteExecutionV2ExecuteResponse;

