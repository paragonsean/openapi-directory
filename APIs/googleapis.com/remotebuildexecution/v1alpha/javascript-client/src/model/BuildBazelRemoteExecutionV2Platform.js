/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildBazelRemoteExecutionV2PlatformProperty from './BuildBazelRemoteExecutionV2PlatformProperty';

/**
 * The BuildBazelRemoteExecutionV2Platform model module.
 * @module model/BuildBazelRemoteExecutionV2Platform
 * @version v1alpha
 */
class BuildBazelRemoteExecutionV2Platform {
    /**
     * Constructs a new <code>BuildBazelRemoteExecutionV2Platform</code>.
     * A &#x60;Platform&#x60; is a set of requirements, such as hardware, operating system, or compiler toolchain, for an Action&#39;s execution environment. A &#x60;Platform&#x60; is represented as a series of key-value pairs representing the properties that are required of the platform.
     * @alias module:model/BuildBazelRemoteExecutionV2Platform
     */
    constructor() { 
        
        BuildBazelRemoteExecutionV2Platform.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildBazelRemoteExecutionV2Platform</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildBazelRemoteExecutionV2Platform} obj Optional instance to populate.
     * @return {module:model/BuildBazelRemoteExecutionV2Platform} The populated <code>BuildBazelRemoteExecutionV2Platform</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildBazelRemoteExecutionV2Platform();

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], [BuildBazelRemoteExecutionV2PlatformProperty]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildBazelRemoteExecutionV2Platform</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildBazelRemoteExecutionV2Platform</code>.
     */
    static validateJSON(data) {
        if (data['properties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['properties'])) {
                throw new Error("Expected the field `properties` to be an array in the JSON data but got " + data['properties']);
            }
            // validate the optional field `properties` (array)
            for (const item of data['properties']) {
                BuildBazelRemoteExecutionV2PlatformProperty.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The properties that make up this platform. In order to ensure that equivalent `Platform`s always hash to the same value, the properties MUST be lexicographically sorted by name, and then by value. Sorting of strings is done by code point, equivalently, by the UTF-8 bytes.
 * @member {Array.<module:model/BuildBazelRemoteExecutionV2PlatformProperty>} properties
 */
BuildBazelRemoteExecutionV2Platform.prototype['properties'] = undefined;






export default BuildBazelRemoteExecutionV2Platform;

