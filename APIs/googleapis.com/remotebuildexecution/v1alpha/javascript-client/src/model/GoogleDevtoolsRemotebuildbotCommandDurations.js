/**
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleDevtoolsRemotebuildbotCommandDurations model module.
 * @module model/GoogleDevtoolsRemotebuildbotCommandDurations
 * @version v1alpha
 */
class GoogleDevtoolsRemotebuildbotCommandDurations {
    /**
     * Constructs a new <code>GoogleDevtoolsRemotebuildbotCommandDurations</code>.
     * CommandDuration contains the various duration metrics tracked when a bot performs a command.
     * @alias module:model/GoogleDevtoolsRemotebuildbotCommandDurations
     */
    constructor() { 
        
        GoogleDevtoolsRemotebuildbotCommandDurations.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleDevtoolsRemotebuildbotCommandDurations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleDevtoolsRemotebuildbotCommandDurations} obj Optional instance to populate.
     * @return {module:model/GoogleDevtoolsRemotebuildbotCommandDurations} The populated <code>GoogleDevtoolsRemotebuildbotCommandDurations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleDevtoolsRemotebuildbotCommandDurations();

            if (data.hasOwnProperty('casRelease')) {
                obj['casRelease'] = ApiClient.convertToType(data['casRelease'], 'String');
            }
            if (data.hasOwnProperty('cmWaitForAssignment')) {
                obj['cmWaitForAssignment'] = ApiClient.convertToType(data['cmWaitForAssignment'], 'String');
            }
            if (data.hasOwnProperty('dockerPrep')) {
                obj['dockerPrep'] = ApiClient.convertToType(data['dockerPrep'], 'String');
            }
            if (data.hasOwnProperty('dockerPrepStartTime')) {
                obj['dockerPrepStartTime'] = ApiClient.convertToType(data['dockerPrepStartTime'], 'String');
            }
            if (data.hasOwnProperty('download')) {
                obj['download'] = ApiClient.convertToType(data['download'], 'String');
            }
            if (data.hasOwnProperty('downloadStartTime')) {
                obj['downloadStartTime'] = ApiClient.convertToType(data['downloadStartTime'], 'String');
            }
            if (data.hasOwnProperty('execStartTime')) {
                obj['execStartTime'] = ApiClient.convertToType(data['execStartTime'], 'String');
            }
            if (data.hasOwnProperty('execution')) {
                obj['execution'] = ApiClient.convertToType(data['execution'], 'String');
            }
            if (data.hasOwnProperty('isoPrepDone')) {
                obj['isoPrepDone'] = ApiClient.convertToType(data['isoPrepDone'], 'String');
            }
            if (data.hasOwnProperty('overall')) {
                obj['overall'] = ApiClient.convertToType(data['overall'], 'String');
            }
            if (data.hasOwnProperty('stderr')) {
                obj['stderr'] = ApiClient.convertToType(data['stderr'], 'String');
            }
            if (data.hasOwnProperty('stdout')) {
                obj['stdout'] = ApiClient.convertToType(data['stdout'], 'String');
            }
            if (data.hasOwnProperty('upload')) {
                obj['upload'] = ApiClient.convertToType(data['upload'], 'String');
            }
            if (data.hasOwnProperty('uploadStartTime')) {
                obj['uploadStartTime'] = ApiClient.convertToType(data['uploadStartTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleDevtoolsRemotebuildbotCommandDurations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleDevtoolsRemotebuildbotCommandDurations</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['casRelease'] && !(typeof data['casRelease'] === 'string' || data['casRelease'] instanceof String)) {
            throw new Error("Expected the field `casRelease` to be a primitive type in the JSON string but got " + data['casRelease']);
        }
        // ensure the json data is a string
        if (data['cmWaitForAssignment'] && !(typeof data['cmWaitForAssignment'] === 'string' || data['cmWaitForAssignment'] instanceof String)) {
            throw new Error("Expected the field `cmWaitForAssignment` to be a primitive type in the JSON string but got " + data['cmWaitForAssignment']);
        }
        // ensure the json data is a string
        if (data['dockerPrep'] && !(typeof data['dockerPrep'] === 'string' || data['dockerPrep'] instanceof String)) {
            throw new Error("Expected the field `dockerPrep` to be a primitive type in the JSON string but got " + data['dockerPrep']);
        }
        // ensure the json data is a string
        if (data['dockerPrepStartTime'] && !(typeof data['dockerPrepStartTime'] === 'string' || data['dockerPrepStartTime'] instanceof String)) {
            throw new Error("Expected the field `dockerPrepStartTime` to be a primitive type in the JSON string but got " + data['dockerPrepStartTime']);
        }
        // ensure the json data is a string
        if (data['download'] && !(typeof data['download'] === 'string' || data['download'] instanceof String)) {
            throw new Error("Expected the field `download` to be a primitive type in the JSON string but got " + data['download']);
        }
        // ensure the json data is a string
        if (data['downloadStartTime'] && !(typeof data['downloadStartTime'] === 'string' || data['downloadStartTime'] instanceof String)) {
            throw new Error("Expected the field `downloadStartTime` to be a primitive type in the JSON string but got " + data['downloadStartTime']);
        }
        // ensure the json data is a string
        if (data['execStartTime'] && !(typeof data['execStartTime'] === 'string' || data['execStartTime'] instanceof String)) {
            throw new Error("Expected the field `execStartTime` to be a primitive type in the JSON string but got " + data['execStartTime']);
        }
        // ensure the json data is a string
        if (data['execution'] && !(typeof data['execution'] === 'string' || data['execution'] instanceof String)) {
            throw new Error("Expected the field `execution` to be a primitive type in the JSON string but got " + data['execution']);
        }
        // ensure the json data is a string
        if (data['isoPrepDone'] && !(typeof data['isoPrepDone'] === 'string' || data['isoPrepDone'] instanceof String)) {
            throw new Error("Expected the field `isoPrepDone` to be a primitive type in the JSON string but got " + data['isoPrepDone']);
        }
        // ensure the json data is a string
        if (data['overall'] && !(typeof data['overall'] === 'string' || data['overall'] instanceof String)) {
            throw new Error("Expected the field `overall` to be a primitive type in the JSON string but got " + data['overall']);
        }
        // ensure the json data is a string
        if (data['stderr'] && !(typeof data['stderr'] === 'string' || data['stderr'] instanceof String)) {
            throw new Error("Expected the field `stderr` to be a primitive type in the JSON string but got " + data['stderr']);
        }
        // ensure the json data is a string
        if (data['stdout'] && !(typeof data['stdout'] === 'string' || data['stdout'] instanceof String)) {
            throw new Error("Expected the field `stdout` to be a primitive type in the JSON string but got " + data['stdout']);
        }
        // ensure the json data is a string
        if (data['upload'] && !(typeof data['upload'] === 'string' || data['upload'] instanceof String)) {
            throw new Error("Expected the field `upload` to be a primitive type in the JSON string but got " + data['upload']);
        }
        // ensure the json data is a string
        if (data['uploadStartTime'] && !(typeof data['uploadStartTime'] === 'string' || data['uploadStartTime'] instanceof String)) {
            throw new Error("Expected the field `uploadStartTime` to be a primitive type in the JSON string but got " + data['uploadStartTime']);
        }

        return true;
    }


}



/**
 * The time spent to release the CAS blobs used by the task.
 * @member {String} casRelease
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['casRelease'] = undefined;

/**
 * The time spent waiting for Container Manager to assign an asynchronous container for execution.
 * @member {String} cmWaitForAssignment
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['cmWaitForAssignment'] = undefined;

/**
 * The time spent preparing the command to be run in a Docker container (includes pulling the Docker image, if necessary).
 * @member {String} dockerPrep
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['dockerPrep'] = undefined;

/**
 * The timestamp when docker preparation begins.
 * @member {String} dockerPrepStartTime
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['dockerPrepStartTime'] = undefined;

/**
 * The time spent downloading the input files and constructing the working directory.
 * @member {String} download
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['download'] = undefined;

/**
 * The timestamp when downloading the input files begins.
 * @member {String} downloadStartTime
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['downloadStartTime'] = undefined;

/**
 * The timestamp when execution begins.
 * @member {String} execStartTime
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['execStartTime'] = undefined;

/**
 * The time spent executing the command (i.e., doing useful work).
 * @member {String} execution
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['execution'] = undefined;

/**
 * The timestamp when preparation is done and bot starts downloading files.
 * @member {String} isoPrepDone
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['isoPrepDone'] = undefined;

/**
 * The time spent completing the command, in total.
 * @member {String} overall
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['overall'] = undefined;

/**
 * The time spent uploading the stderr logs.
 * @member {String} stderr
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['stderr'] = undefined;

/**
 * The time spent uploading the stdout logs.
 * @member {String} stdout
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['stdout'] = undefined;

/**
 * The time spent uploading the output files.
 * @member {String} upload
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['upload'] = undefined;

/**
 * The timestamp when uploading the output files begins.
 * @member {String} uploadStartTime
 */
GoogleDevtoolsRemotebuildbotCommandDurations.prototype['uploadStartTime'] = undefined;






export default GoogleDevtoolsRemotebuildbotCommandDurations;

