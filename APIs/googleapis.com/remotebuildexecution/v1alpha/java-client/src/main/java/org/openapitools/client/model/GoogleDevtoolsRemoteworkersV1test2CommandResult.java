/*
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleDevtoolsRemoteworkersV1test2Digest;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * All information about the execution of a command, suitable for providing as the Bots interface&#39;s &#x60;Lease.result&#x60; field.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:16.147037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleDevtoolsRemoteworkersV1test2CommandResult {
  public static final String SERIALIZED_NAME_DURATION = "duration";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_DURATION)
  private String duration;

  public static final String SERIALIZED_NAME_EXIT_CODE = "exitCode";
  @SerializedName(SERIALIZED_NAME_EXIT_CODE)
  private Integer exitCode;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private List<Map<String, Object>> metadata = new ArrayList<>();

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  private GoogleDevtoolsRemoteworkersV1test2Digest outputs;

  public static final String SERIALIZED_NAME_OVERHEAD = "overhead";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_OVERHEAD)
  private String overhead;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private GoogleRpcStatus status;

  public GoogleDevtoolsRemoteworkersV1test2CommandResult() {
  }

  @Deprecated
  public GoogleDevtoolsRemoteworkersV1test2CommandResult duration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * The elapsed time between calling Accept and Complete. The server will also have its own idea of what this should be, but this excludes the overhead of the RPCs and the bot response time.
   * @return duration
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getDuration() {
    return duration;
  }

  @Deprecated
  public void setDuration(String duration) {
    this.duration = duration;
  }


  public GoogleDevtoolsRemoteworkersV1test2CommandResult exitCode(Integer exitCode) {
    this.exitCode = exitCode;
    return this;
  }

  /**
   * The exit code of the process. An exit code of \&quot;0\&quot; should only be trusted if &#x60;status&#x60; has a code of OK (otherwise it may simply be unset).
   * @return exitCode
   */
  @javax.annotation.Nullable
  public Integer getExitCode() {
    return exitCode;
  }

  public void setExitCode(Integer exitCode) {
    this.exitCode = exitCode;
  }


  public GoogleDevtoolsRemoteworkersV1test2CommandResult metadata(List<Map<String, Object>> metadata) {
    this.metadata = metadata;
    return this;
  }

  public GoogleDevtoolsRemoteworkersV1test2CommandResult addMetadataItem(Map<String, Object> metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

  /**
   * Implementation-dependent metadata about the task. Both servers and bots may define messages which can be encoded here; bots are free to provide metadata in multiple formats, and servers are free to choose one or more of the values to process and ignore others. In particular, it is *not* considered an error for the bot to provide the server with a field that it doesn&#39;t know about.
   * @return metadata
   */
  @javax.annotation.Nullable
  public List<Map<String, Object>> getMetadata() {
    return metadata;
  }

  public void setMetadata(List<Map<String, Object>> metadata) {
    this.metadata = metadata;
  }


  public GoogleDevtoolsRemoteworkersV1test2CommandResult outputs(GoogleDevtoolsRemoteworkersV1test2Digest outputs) {
    this.outputs = outputs;
    return this;
  }

  /**
   * Get outputs
   * @return outputs
   */
  @javax.annotation.Nullable
  public GoogleDevtoolsRemoteworkersV1test2Digest getOutputs() {
    return outputs;
  }

  public void setOutputs(GoogleDevtoolsRemoteworkersV1test2Digest outputs) {
    this.outputs = outputs;
  }


  @Deprecated
  public GoogleDevtoolsRemoteworkersV1test2CommandResult overhead(String overhead) {
    this.overhead = overhead;
    return this;
  }

  /**
   * The amount of time *not* spent executing the command (ie uploading/downloading files).
   * @return overhead
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getOverhead() {
    return overhead;
  }

  @Deprecated
  public void setOverhead(String overhead) {
    this.overhead = overhead;
  }


  public GoogleDevtoolsRemoteworkersV1test2CommandResult status(GoogleRpcStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getStatus() {
    return status;
  }

  public void setStatus(GoogleRpcStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleDevtoolsRemoteworkersV1test2CommandResult googleDevtoolsRemoteworkersV1test2CommandResult = (GoogleDevtoolsRemoteworkersV1test2CommandResult) o;
    return Objects.equals(this.duration, googleDevtoolsRemoteworkersV1test2CommandResult.duration) &&
        Objects.equals(this.exitCode, googleDevtoolsRemoteworkersV1test2CommandResult.exitCode) &&
        Objects.equals(this.metadata, googleDevtoolsRemoteworkersV1test2CommandResult.metadata) &&
        Objects.equals(this.outputs, googleDevtoolsRemoteworkersV1test2CommandResult.outputs) &&
        Objects.equals(this.overhead, googleDevtoolsRemoteworkersV1test2CommandResult.overhead) &&
        Objects.equals(this.status, googleDevtoolsRemoteworkersV1test2CommandResult.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, exitCode, metadata, outputs, overhead, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleDevtoolsRemoteworkersV1test2CommandResult {\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    exitCode: ").append(toIndentedString(exitCode)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    overhead: ").append(toIndentedString(overhead)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("duration");
    openapiFields.add("exitCode");
    openapiFields.add("metadata");
    openapiFields.add("outputs");
    openapiFields.add("overhead");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleDevtoolsRemoteworkersV1test2CommandResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleDevtoolsRemoteworkersV1test2CommandResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleDevtoolsRemoteworkersV1test2CommandResult is not found in the empty JSON string", GoogleDevtoolsRemoteworkersV1test2CommandResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleDevtoolsRemoteworkersV1test2CommandResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleDevtoolsRemoteworkersV1test2CommandResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("duration") != null && !jsonObj.get("duration").isJsonNull()) && !jsonObj.get("duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duration").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull() && !jsonObj.get("metadata").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadata` to be an array in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
      }
      // validate the optional field `outputs`
      if (jsonObj.get("outputs") != null && !jsonObj.get("outputs").isJsonNull()) {
        GoogleDevtoolsRemoteworkersV1test2Digest.validateJsonElement(jsonObj.get("outputs"));
      }
      if ((jsonObj.get("overhead") != null && !jsonObj.get("overhead").isJsonNull()) && !jsonObj.get("overhead").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overhead` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overhead").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleDevtoolsRemoteworkersV1test2CommandResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleDevtoolsRemoteworkersV1test2CommandResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleDevtoolsRemoteworkersV1test2CommandResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleDevtoolsRemoteworkersV1test2CommandResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleDevtoolsRemoteworkersV1test2CommandResult>() {
           @Override
           public void write(JsonWriter out, GoogleDevtoolsRemoteworkersV1test2CommandResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleDevtoolsRemoteworkersV1test2CommandResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleDevtoolsRemoteworkersV1test2CommandResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleDevtoolsRemoteworkersV1test2CommandResult
   * @throws IOException if the JSON string is invalid with respect to GoogleDevtoolsRemoteworkersV1test2CommandResult
   */
  public static GoogleDevtoolsRemoteworkersV1test2CommandResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleDevtoolsRemoteworkersV1test2CommandResult.class);
  }

  /**
   * Convert an instance of GoogleDevtoolsRemoteworkersV1test2CommandResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

