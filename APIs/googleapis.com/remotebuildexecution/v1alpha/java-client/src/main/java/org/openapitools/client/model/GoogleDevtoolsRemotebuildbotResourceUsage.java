/*
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildbotResourceUsageIOStats;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildbotResourceUsageStat;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResourceUsage is the system resource usage of the host machine.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:16.147037-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleDevtoolsRemotebuildbotResourceUsage {
  /**
   * Gets or Sets botState
   */
  @JsonAdapter(BotStateEnum.Adapter.class)
  public enum BotStateEnum {
    UNSPECIFIED("UNSPECIFIED"),
    
    IDLE("IDLE"),
    
    BUSY("BUSY");

    private String value;

    BotStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BotStateEnum fromValue(String value) {
      for (BotStateEnum b : BotStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BotStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BotStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BotStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BotStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      BotStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_BOT_STATE = "botState";
  @SerializedName(SERIALIZED_NAME_BOT_STATE)
  private BotStateEnum botState;

  public static final String SERIALIZED_NAME_CPU_USED_PERCENT = "cpuUsedPercent";
  @SerializedName(SERIALIZED_NAME_CPU_USED_PERCENT)
  private Double cpuUsedPercent;

  public static final String SERIALIZED_NAME_DISK_USAGE = "diskUsage";
  @SerializedName(SERIALIZED_NAME_DISK_USAGE)
  private GoogleDevtoolsRemotebuildbotResourceUsageStat diskUsage;

  public static final String SERIALIZED_NAME_DOCKER_ROOT_DISK_USAGE = "dockerRootDiskUsage";
  @SerializedName(SERIALIZED_NAME_DOCKER_ROOT_DISK_USAGE)
  private GoogleDevtoolsRemotebuildbotResourceUsageStat dockerRootDiskUsage;

  public static final String SERIALIZED_NAME_MEMORY_USAGE = "memoryUsage";
  @SerializedName(SERIALIZED_NAME_MEMORY_USAGE)
  private GoogleDevtoolsRemotebuildbotResourceUsageStat memoryUsage;

  public static final String SERIALIZED_NAME_TOTAL_DISK_IO_STATS = "totalDiskIoStats";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISK_IO_STATS)
  private GoogleDevtoolsRemotebuildbotResourceUsageIOStats totalDiskIoStats;

  public GoogleDevtoolsRemotebuildbotResourceUsage() {
  }

  public GoogleDevtoolsRemotebuildbotResourceUsage botState(BotStateEnum botState) {
    this.botState = botState;
    return this;
  }

  /**
   * Get botState
   * @return botState
   */
  @javax.annotation.Nullable
  public BotStateEnum getBotState() {
    return botState;
  }

  public void setBotState(BotStateEnum botState) {
    this.botState = botState;
  }


  public GoogleDevtoolsRemotebuildbotResourceUsage cpuUsedPercent(Double cpuUsedPercent) {
    this.cpuUsedPercent = cpuUsedPercent;
    return this;
  }

  /**
   * Get cpuUsedPercent
   * @return cpuUsedPercent
   */
  @javax.annotation.Nullable
  public Double getCpuUsedPercent() {
    return cpuUsedPercent;
  }

  public void setCpuUsedPercent(Double cpuUsedPercent) {
    this.cpuUsedPercent = cpuUsedPercent;
  }


  public GoogleDevtoolsRemotebuildbotResourceUsage diskUsage(GoogleDevtoolsRemotebuildbotResourceUsageStat diskUsage) {
    this.diskUsage = diskUsage;
    return this;
  }

  /**
   * Get diskUsage
   * @return diskUsage
   */
  @javax.annotation.Nullable
  public GoogleDevtoolsRemotebuildbotResourceUsageStat getDiskUsage() {
    return diskUsage;
  }

  public void setDiskUsage(GoogleDevtoolsRemotebuildbotResourceUsageStat diskUsage) {
    this.diskUsage = diskUsage;
  }


  public GoogleDevtoolsRemotebuildbotResourceUsage dockerRootDiskUsage(GoogleDevtoolsRemotebuildbotResourceUsageStat dockerRootDiskUsage) {
    this.dockerRootDiskUsage = dockerRootDiskUsage;
    return this;
  }

  /**
   * Get dockerRootDiskUsage
   * @return dockerRootDiskUsage
   */
  @javax.annotation.Nullable
  public GoogleDevtoolsRemotebuildbotResourceUsageStat getDockerRootDiskUsage() {
    return dockerRootDiskUsage;
  }

  public void setDockerRootDiskUsage(GoogleDevtoolsRemotebuildbotResourceUsageStat dockerRootDiskUsage) {
    this.dockerRootDiskUsage = dockerRootDiskUsage;
  }


  public GoogleDevtoolsRemotebuildbotResourceUsage memoryUsage(GoogleDevtoolsRemotebuildbotResourceUsageStat memoryUsage) {
    this.memoryUsage = memoryUsage;
    return this;
  }

  /**
   * Get memoryUsage
   * @return memoryUsage
   */
  @javax.annotation.Nullable
  public GoogleDevtoolsRemotebuildbotResourceUsageStat getMemoryUsage() {
    return memoryUsage;
  }

  public void setMemoryUsage(GoogleDevtoolsRemotebuildbotResourceUsageStat memoryUsage) {
    this.memoryUsage = memoryUsage;
  }


  public GoogleDevtoolsRemotebuildbotResourceUsage totalDiskIoStats(GoogleDevtoolsRemotebuildbotResourceUsageIOStats totalDiskIoStats) {
    this.totalDiskIoStats = totalDiskIoStats;
    return this;
  }

  /**
   * Get totalDiskIoStats
   * @return totalDiskIoStats
   */
  @javax.annotation.Nullable
  public GoogleDevtoolsRemotebuildbotResourceUsageIOStats getTotalDiskIoStats() {
    return totalDiskIoStats;
  }

  public void setTotalDiskIoStats(GoogleDevtoolsRemotebuildbotResourceUsageIOStats totalDiskIoStats) {
    this.totalDiskIoStats = totalDiskIoStats;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleDevtoolsRemotebuildbotResourceUsage googleDevtoolsRemotebuildbotResourceUsage = (GoogleDevtoolsRemotebuildbotResourceUsage) o;
    return Objects.equals(this.botState, googleDevtoolsRemotebuildbotResourceUsage.botState) &&
        Objects.equals(this.cpuUsedPercent, googleDevtoolsRemotebuildbotResourceUsage.cpuUsedPercent) &&
        Objects.equals(this.diskUsage, googleDevtoolsRemotebuildbotResourceUsage.diskUsage) &&
        Objects.equals(this.dockerRootDiskUsage, googleDevtoolsRemotebuildbotResourceUsage.dockerRootDiskUsage) &&
        Objects.equals(this.memoryUsage, googleDevtoolsRemotebuildbotResourceUsage.memoryUsage) &&
        Objects.equals(this.totalDiskIoStats, googleDevtoolsRemotebuildbotResourceUsage.totalDiskIoStats);
  }

  @Override
  public int hashCode() {
    return Objects.hash(botState, cpuUsedPercent, diskUsage, dockerRootDiskUsage, memoryUsage, totalDiskIoStats);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleDevtoolsRemotebuildbotResourceUsage {\n");
    sb.append("    botState: ").append(toIndentedString(botState)).append("\n");
    sb.append("    cpuUsedPercent: ").append(toIndentedString(cpuUsedPercent)).append("\n");
    sb.append("    diskUsage: ").append(toIndentedString(diskUsage)).append("\n");
    sb.append("    dockerRootDiskUsage: ").append(toIndentedString(dockerRootDiskUsage)).append("\n");
    sb.append("    memoryUsage: ").append(toIndentedString(memoryUsage)).append("\n");
    sb.append("    totalDiskIoStats: ").append(toIndentedString(totalDiskIoStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("botState");
    openapiFields.add("cpuUsedPercent");
    openapiFields.add("diskUsage");
    openapiFields.add("dockerRootDiskUsage");
    openapiFields.add("memoryUsage");
    openapiFields.add("totalDiskIoStats");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleDevtoolsRemotebuildbotResourceUsage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleDevtoolsRemotebuildbotResourceUsage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleDevtoolsRemotebuildbotResourceUsage is not found in the empty JSON string", GoogleDevtoolsRemotebuildbotResourceUsage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleDevtoolsRemotebuildbotResourceUsage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleDevtoolsRemotebuildbotResourceUsage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("botState") != null && !jsonObj.get("botState").isJsonNull()) && !jsonObj.get("botState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `botState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("botState").toString()));
      }
      // validate the optional field `botState`
      if (jsonObj.get("botState") != null && !jsonObj.get("botState").isJsonNull()) {
        BotStateEnum.validateJsonElement(jsonObj.get("botState"));
      }
      // validate the optional field `diskUsage`
      if (jsonObj.get("diskUsage") != null && !jsonObj.get("diskUsage").isJsonNull()) {
        GoogleDevtoolsRemotebuildbotResourceUsageStat.validateJsonElement(jsonObj.get("diskUsage"));
      }
      // validate the optional field `dockerRootDiskUsage`
      if (jsonObj.get("dockerRootDiskUsage") != null && !jsonObj.get("dockerRootDiskUsage").isJsonNull()) {
        GoogleDevtoolsRemotebuildbotResourceUsageStat.validateJsonElement(jsonObj.get("dockerRootDiskUsage"));
      }
      // validate the optional field `memoryUsage`
      if (jsonObj.get("memoryUsage") != null && !jsonObj.get("memoryUsage").isJsonNull()) {
        GoogleDevtoolsRemotebuildbotResourceUsageStat.validateJsonElement(jsonObj.get("memoryUsage"));
      }
      // validate the optional field `totalDiskIoStats`
      if (jsonObj.get("totalDiskIoStats") != null && !jsonObj.get("totalDiskIoStats").isJsonNull()) {
        GoogleDevtoolsRemotebuildbotResourceUsageIOStats.validateJsonElement(jsonObj.get("totalDiskIoStats"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleDevtoolsRemotebuildbotResourceUsage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleDevtoolsRemotebuildbotResourceUsage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleDevtoolsRemotebuildbotResourceUsage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleDevtoolsRemotebuildbotResourceUsage.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleDevtoolsRemotebuildbotResourceUsage>() {
           @Override
           public void write(JsonWriter out, GoogleDevtoolsRemotebuildbotResourceUsage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleDevtoolsRemotebuildbotResourceUsage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleDevtoolsRemotebuildbotResourceUsage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleDevtoolsRemotebuildbotResourceUsage
   * @throws IOException if the JSON string is invalid with respect to GoogleDevtoolsRemotebuildbotResourceUsage
   */
  public static GoogleDevtoolsRemotebuildbotResourceUsage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleDevtoolsRemotebuildbotResourceUsage.class);
  }

  /**
   * Convert an instance of GoogleDevtoolsRemotebuildbotResourceUsage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

