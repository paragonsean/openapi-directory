/*
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy
 */
public class GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyTest {
    private final GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy model = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy();

    /**
     * Model tests for GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy
     */
    @Test
    public void testGoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy() {
        // TODO: test GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy
    }

    /**
     * Test the property 'actionHermeticity'
     */
    @Test
    public void actionHermeticityTest() {
        // TODO: test actionHermeticity
    }

    /**
     * Test the property 'actionIsolation'
     */
    @Test
    public void actionIsolationTest() {
        // TODO: test actionIsolation
    }

    /**
     * Test the property 'containerImageSources'
     */
    @Test
    public void containerImageSourcesTest() {
        // TODO: test containerImageSources
    }

    /**
     * Test the property 'dockerAddCapabilities'
     */
    @Test
    public void dockerAddCapabilitiesTest() {
        // TODO: test dockerAddCapabilities
    }

    /**
     * Test the property 'dockerChrootPath'
     */
    @Test
    public void dockerChrootPathTest() {
        // TODO: test dockerChrootPath
    }

    /**
     * Test the property 'dockerNetwork'
     */
    @Test
    public void dockerNetworkTest() {
        // TODO: test dockerNetwork
    }

    /**
     * Test the property 'dockerPrivileged'
     */
    @Test
    public void dockerPrivilegedTest() {
        // TODO: test dockerPrivileged
    }

    /**
     * Test the property 'dockerRunAsContainerProvidedUser'
     */
    @Test
    public void dockerRunAsContainerProvidedUserTest() {
        // TODO: test dockerRunAsContainerProvidedUser
    }

    /**
     * Test the property 'dockerRunAsRoot'
     */
    @Test
    public void dockerRunAsRootTest() {
        // TODO: test dockerRunAsRoot
    }

    /**
     * Test the property 'dockerRuntime'
     */
    @Test
    public void dockerRuntimeTest() {
        // TODO: test dockerRuntime
    }

    /**
     * Test the property 'dockerSiblingContainers'
     */
    @Test
    public void dockerSiblingContainersTest() {
        // TODO: test dockerSiblingContainers
    }

    /**
     * Test the property 'dockerUlimits'
     */
    @Test
    public void dockerUlimitsTest() {
        // TODO: test dockerUlimits
    }

    /**
     * Test the property 'linuxExecution'
     */
    @Test
    public void linuxExecutionTest() {
        // TODO: test linuxExecution
    }

    /**
     * Test the property 'linuxIsolation'
     */
    @Test
    public void linuxIsolationTest() {
        // TODO: test linuxIsolation
    }

    /**
     * Test the property 'macExecution'
     */
    @Test
    public void macExecutionTest() {
        // TODO: test macExecution
    }

    /**
     * Test the property 'vmVerification'
     */
    @Test
    public void vmVerificationTest() {
        // TODO: test vmVerification
    }

    /**
     * Test the property 'windowsExecution'
     */
    @Test
    public void windowsExecutionTest() {
        // TODO: test windowsExecution
    }

}
