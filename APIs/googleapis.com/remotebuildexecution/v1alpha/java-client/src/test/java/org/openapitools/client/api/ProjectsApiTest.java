/*
 * Remote Build Execution API
 * Supplies a Remote Execution API service for tools such as bazel.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaListWorkerPoolsResponse;
import org.openapitools.client.model.GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates a new instance in the specified region. Returns a long running operation which contains an instance on completion. While the long running operation is in progress, any call to &#x60;GetInstance&#x60; returns an instance in state &#x60;CREATING&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsInstancesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest googleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest = null;
        GoogleLongrunningOperation response = api.remotebuildexecutionProjectsInstancesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest);
        // TODO: test validations
    }

    /**
     * Lists instances in a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsInstancesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaListInstancesResponse response = api.remotebuildexecutionProjectsInstancesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Sends a test notification to the specified instance. Returns a &#x60;google.protobuf.Empty&#x60; on success.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsInstancesTestNotifyTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.remotebuildexecutionProjectsInstancesTestNotify(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Creates a new worker pool with a specified size and configuration. Returns a long running operation which contains a worker pool on completion. While the long running operation is in progress, any call to &#x60;GetWorkerPool&#x60; returns a worker pool in state &#x60;CREATING&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsInstancesWorkerpoolsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest googleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest = null;
        GoogleLongrunningOperation response = api.remotebuildexecutionProjectsInstancesWorkerpoolsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleDevtoolsRemotebuildexecutionAdminV1alphaCreateWorkerPoolRequest);
        // TODO: test validations
    }

    /**
     * Deletes the specified worker pool. Returns a long running operation, which contains a &#x60;google.protobuf.Empty&#x60; response on completion. While the long running operation is in progress, any call to &#x60;GetWorkerPool&#x60; returns a worker pool in state &#x60;DELETING&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsInstancesWorkerpoolsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleLongrunningOperation response = api.remotebuildexecutionProjectsInstancesWorkerpoolsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists worker pools in an instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsInstancesWorkerpoolsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaListWorkerPoolsResponse response = api.remotebuildexecutionProjectsInstancesWorkerpoolsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter);
        // TODO: test validations
    }

    /**
     * Updates an existing worker pool with a specified size and/or configuration. Returns a long running operation, which contains a worker pool on completion. While the long running operation is in progress, any call to &#x60;GetWorkerPool&#x60; returns a worker pool in state &#x60;UPDATING&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsInstancesWorkerpoolsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean loggingEnabled = null;
        String name1 = null;
        String updateMask = null;
        GoogleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest googleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest = null;
        GoogleLongrunningOperation response = api.remotebuildexecutionProjectsInstancesWorkerpoolsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, loggingEnabled, name1, updateMask, googleDevtoolsRemotebuildexecutionAdminV1alphaUpdateWorkerPoolRequest);
        // TODO: test validations
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void remotebuildexecutionProjectsOperationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleLongrunningOperation response = api.remotebuildexecutionProjectsOperationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

}
