# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.basemap_z_order import BasemapZOrder
from openapi_server.models.vertex2_d_list import Vertex2DList
from openapi_server import util


class Line(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basemap_z_order: BasemapZOrder=None, vertex_offsets: Vertex2DList=None, z_order: int=None):
        """Line - a model defined in OpenAPI

        :param basemap_z_order: The basemap_z_order of this Line.
        :param vertex_offsets: The vertex_offsets of this Line.
        :param z_order: The z_order of this Line.
        """
        self.openapi_types = {
            'basemap_z_order': BasemapZOrder,
            'vertex_offsets': Vertex2DList,
            'z_order': int
        }

        self.attribute_map = {
            'basemap_z_order': 'basemapZOrder',
            'vertex_offsets': 'vertexOffsets',
            'z_order': 'zOrder'
        }

        self._basemap_z_order = basemap_z_order
        self._vertex_offsets = vertex_offsets
        self._z_order = z_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Line':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Line of this Line.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basemap_z_order(self):
        """Gets the basemap_z_order of this Line.


        :return: The basemap_z_order of this Line.
        :rtype: BasemapZOrder
        """
        return self._basemap_z_order

    @basemap_z_order.setter
    def basemap_z_order(self, basemap_z_order):
        """Sets the basemap_z_order of this Line.


        :param basemap_z_order: The basemap_z_order of this Line.
        :type basemap_z_order: BasemapZOrder
        """

        self._basemap_z_order = basemap_z_order

    @property
    def vertex_offsets(self):
        """Gets the vertex_offsets of this Line.


        :return: The vertex_offsets of this Line.
        :rtype: Vertex2DList
        """
        return self._vertex_offsets

    @vertex_offsets.setter
    def vertex_offsets(self, vertex_offsets):
        """Sets the vertex_offsets of this Line.


        :param vertex_offsets: The vertex_offsets of this Line.
        :type vertex_offsets: Vertex2DList
        """

        self._vertex_offsets = vertex_offsets

    @property
    def z_order(self):
        """Gets the z_order of this Line.

        The z-order of the line. Lines with a lower z-order should be rendered beneath lines with a higher z-order. This z-ordering does not imply anything about the altitude of the area relative to the ground, but it can be used to prevent z-fighting during rendering on the client. In general, larger and more important road features will have a higher z-order line associated with them. This z-ordering can only be used to compare lines, and cannot be compared with the z_order field in the Area message. The z-order may be negative or zero. Prefer Line.basemap_z_order.

        :return: The z_order of this Line.
        :rtype: int
        """
        return self._z_order

    @z_order.setter
    def z_order(self, z_order):
        """Sets the z_order of this Line.

        The z-order of the line. Lines with a lower z-order should be rendered beneath lines with a higher z-order. This z-ordering does not imply anything about the altitude of the area relative to the ground, but it can be used to prevent z-fighting during rendering on the client. In general, larger and more important road features will have a higher z-order line associated with them. This z-ordering can only be used to compare lines, and cannot be compared with the z_order field in the Area message. The z-order may be negative or zero. Prefer Line.basemap_z_order.

        :param z_order: The z_order of this Line.
        :type z_order: int
        """

        self._z_order = z_order
