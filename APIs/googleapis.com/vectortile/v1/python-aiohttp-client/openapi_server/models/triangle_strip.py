# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TriangleStrip(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vertex_indices: List[int]=None):
        """TriangleStrip - a model defined in OpenAPI

        :param vertex_indices: The vertex_indices of this TriangleStrip.
        """
        self.openapi_types = {
            'vertex_indices': List[int]
        }

        self.attribute_map = {
            'vertex_indices': 'vertexIndices'
        }

        self._vertex_indices = vertex_indices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TriangleStrip':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TriangleStrip of this TriangleStrip.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vertex_indices(self):
        """Gets the vertex_indices of this TriangleStrip.

        Index into the vertex_offset array representing the next vertex in the triangle strip.

        :return: The vertex_indices of this TriangleStrip.
        :rtype: List[int]
        """
        return self._vertex_indices

    @vertex_indices.setter
    def vertex_indices(self, vertex_indices):
        """Sets the vertex_indices of this TriangleStrip.

        Index into the vertex_offset array representing the next vertex in the triangle strip.

        :param vertex_indices: The vertex_indices of this TriangleStrip.
        :type vertex_indices: List[int]
        """

        self._vertex_indices = vertex_indices
