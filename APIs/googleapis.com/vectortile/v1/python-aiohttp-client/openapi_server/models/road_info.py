# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoadInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_private: bool=None):
        """RoadInfo - a model defined in OpenAPI

        :param is_private: The is_private of this RoadInfo.
        """
        self.openapi_types = {
            'is_private': bool
        }

        self.attribute_map = {
            'is_private': 'isPrivate'
        }

        self._is_private = is_private

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoadInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoadInfo of this RoadInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_private(self):
        """Gets the is_private of this RoadInfo.

        Road has signage discouraging or prohibiting use by the general public. E.g., roads with signs that say \"Private\", or \"No trespassing.\"

        :return: The is_private of this RoadInfo.
        :rtype: bool
        """
        return self._is_private

    @is_private.setter
    def is_private(self, is_private):
        """Sets the is_private of this RoadInfo.

        Road has signage discouraging or prohibiting use by the general public. E.g., roads with signs that say \"Private\", or \"No trespassing.\"

        :param is_private: The is_private of this RoadInfo.
        :type is_private: bool
        """

        self._is_private = is_private
