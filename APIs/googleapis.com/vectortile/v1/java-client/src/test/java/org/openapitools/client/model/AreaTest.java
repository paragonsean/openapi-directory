/*
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BasemapZOrder;
import org.openapitools.client.model.Vertex2DList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Area
 */
public class AreaTest {
    private final Area model = new Area();

    /**
     * Model tests for Area
     */
    @Test
    public void testArea() {
        // TODO: test Area
    }

    /**
     * Test the property 'basemapZOrder'
     */
    @Test
    public void basemapZOrderTest() {
        // TODO: test basemapZOrder
    }

    /**
     * Test the property 'hasExternalEdges'
     */
    @Test
    public void hasExternalEdgesTest() {
        // TODO: test hasExternalEdges
    }

    /**
     * Test the property 'internalEdges'
     */
    @Test
    public void internalEdgesTest() {
        // TODO: test internalEdges
    }

    /**
     * Test the property 'loopBreaks'
     */
    @Test
    public void loopBreaksTest() {
        // TODO: test loopBreaks
    }

    /**
     * Test the property 'triangleIndices'
     */
    @Test
    public void triangleIndicesTest() {
        // TODO: test triangleIndices
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'vertexOffsets'
     */
    @Test
    public void vertexOffsetsTest() {
        // TODO: test vertexOffsets
    }

    /**
     * Test the property 'zOrder'
     */
    @Test
    public void zOrderTest() {
        // TODO: test zOrder
    }

}
