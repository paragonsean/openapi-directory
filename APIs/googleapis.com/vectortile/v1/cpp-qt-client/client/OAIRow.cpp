/**
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRow::OAIRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRow::OAIRow() {
    this->initializeModel();
}

OAIRow::~OAIRow() {}

void OAIRow::initializeModel() {

    m_altitude_diffs_isSet = false;
    m_altitude_diffs_isValid = false;
}

void OAIRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRow::fromJsonObject(QJsonObject json) {

    m_altitude_diffs_isValid = ::OpenAPI::fromJsonValue(m_altitude_diffs, json[QString("altitudeDiffs")]);
    m_altitude_diffs_isSet = !json[QString("altitudeDiffs")].isNull() && m_altitude_diffs_isValid;
}

QString OAIRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRow::asJsonObject() const {
    QJsonObject obj;
    if (m_altitude_diffs.size() > 0) {
        obj.insert(QString("altitudeDiffs"), ::OpenAPI::toJsonValue(m_altitude_diffs));
    }
    return obj;
}

QList<qint32> OAIRow::getAltitudeDiffs() const {
    return m_altitude_diffs;
}
void OAIRow::setAltitudeDiffs(const QList<qint32> &altitude_diffs) {
    m_altitude_diffs = altitude_diffs;
    m_altitude_diffs_isSet = true;
}

bool OAIRow::is_altitude_diffs_Set() const{
    return m_altitude_diffs_isSet;
}

bool OAIRow::is_altitude_diffs_Valid() const{
    return m_altitude_diffs_isValid;
}

bool OAIRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_altitude_diffs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
