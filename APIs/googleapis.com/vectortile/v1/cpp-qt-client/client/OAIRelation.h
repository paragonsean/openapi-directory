/**
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelation.h
 *
 * Represents a relation to another feature in the tile. For example, a building might be occupied by a given POI. The related feature can be retrieved using the related feature index.
 */

#ifndef OAIRelation_H
#define OAIRelation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRelation : public OAIObject {
public:
    OAIRelation();
    OAIRelation(QString json);
    ~OAIRelation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRelatedFeatureIndex() const;
    void setRelatedFeatureIndex(const qint32 &related_feature_index);
    bool is_related_feature_index_Set() const;
    bool is_related_feature_index_Valid() const;

    QString getRelationType() const;
    void setRelationType(const QString &relation_type);
    bool is_relation_type_Set() const;
    bool is_relation_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_related_feature_index;
    bool m_related_feature_index_isSet;
    bool m_related_feature_index_isValid;

    QString m_relation_type;
    bool m_relation_type_isSet;
    bool m_relation_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelation)

#endif // OAIRelation_H
