/**
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModeledVolume.h
 *
 * Represents a modeled volume in 3D space. Used to represent 3D buildings.
 */

#ifndef OAIModeledVolume_H
#define OAIModeledVolume_H

#include <QJsonObject>

#include "OAITriangleStrip.h"
#include "OAIVertex3DList.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITriangleStrip;
class OAIVertex3DList;

class OAIModeledVolume : public OAIObject {
public:
    OAIModeledVolume();
    OAIModeledVolume(QString json);
    ~OAIModeledVolume() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITriangleStrip> getStrips() const;
    void setStrips(const QList<OAITriangleStrip> &strips);
    bool is_strips_Set() const;
    bool is_strips_Valid() const;

    OAIVertex3DList getVertexOffsets() const;
    void setVertexOffsets(const OAIVertex3DList &vertex_offsets);
    bool is_vertex_offsets_Set() const;
    bool is_vertex_offsets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITriangleStrip> m_strips;
    bool m_strips_isSet;
    bool m_strips_isValid;

    OAIVertex3DList m_vertex_offsets;
    bool m_vertex_offsets_isSet;
    bool m_vertex_offsets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModeledVolume)

#endif // OAIModeledVolume_H
