/**
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFirstDerivativeElevationGrid.h
 *
 * A packed representation of a 2D grid of uniformly spaced points containing elevation data. Each point within the grid represents the altitude in meters above average sea level at that location within the tile. Elevations provided are (generally) relative to the EGM96 geoid, however some areas will be relative to NAVD88. EGM96 and NAVD88 are off by no more than 2 meters. The grid is oriented north-west to south-east, as illustrated: rows[0].a[0] rows[0].a[m] +-----------------+ | | | N | | ^ | | | | | W &lt;-----&gt; E | | | | | v | | S | | | +-----------------+ rows[n].a[0] rows[n].a[m] Rather than storing the altitudes directly, we store the diffs between them as integers at some requested level of precision to take advantage of integer packing. The actual altitude values a[] can be reconstructed using the scale and each row&#39;s first_altitude and altitude_diff fields. More details in go/elevation-encoding-options-for-enduro under \&quot;Recommended implementation\&quot;.
 */

#ifndef OAIFirstDerivativeElevationGrid_H
#define OAIFirstDerivativeElevationGrid_H

#include <QJsonObject>

#include "OAIRow.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRow;

class OAIFirstDerivativeElevationGrid : public OAIObject {
public:
    OAIFirstDerivativeElevationGrid();
    OAIFirstDerivativeElevationGrid(QString json);
    ~OAIFirstDerivativeElevationGrid() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAltitudeMultiplier() const;
    void setAltitudeMultiplier(const float &altitude_multiplier);
    bool is_altitude_multiplier_Set() const;
    bool is_altitude_multiplier_Valid() const;

    QList<OAIRow> getRows() const;
    void setRows(const QList<OAIRow> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_altitude_multiplier;
    bool m_altitude_multiplier_isSet;
    bool m_altitude_multiplier_isValid;

    QList<OAIRow> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFirstDerivativeElevationGrid)

#endif // OAIFirstDerivativeElevationGrid_H
