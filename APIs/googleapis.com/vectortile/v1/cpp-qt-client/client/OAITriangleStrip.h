/**
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITriangleStrip.h
 *
 * Represents a strip of triangles. Each triangle uses the last edge of the previous one. The following diagram shows an example of a triangle strip, with each vertex labeled with its index in the vertex_index array. (1)-----(3) / \\ / \\ / \\ / \\ / \\ / \\ (0)-----(2)-----(4) Vertices may be in either clockwise or counter-clockwise order.
 */

#ifndef OAITriangleStrip_H
#define OAITriangleStrip_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITriangleStrip : public OAIObject {
public:
    OAITriangleStrip();
    OAITriangleStrip(QString json);
    ~OAITriangleStrip() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getVertexIndices() const;
    void setVertexIndices(const QList<qint32> &vertex_indices);
    bool is_vertex_indices_Set() const;
    bool is_vertex_indices_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_vertex_indices;
    bool m_vertex_indices_isSet;
    bool m_vertex_indices_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITriangleStrip)

#endif // OAITriangleStrip_H
