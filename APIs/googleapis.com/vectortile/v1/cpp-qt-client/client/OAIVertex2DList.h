/**
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVertex2DList.h
 *
 * 2D vertex list used for lines and areas. Each entry represents an offset from the previous one in local tile coordinates. The first entry is offset from (0, 0). For example, the list of vertices [(1,1), (2, 2), (1, 2)] would be encoded in vertex offsets as [(1, 1), (1, 1), (-1, 0)].
 */

#ifndef OAIVertex2DList_H
#define OAIVertex2DList_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVertex2DList : public OAIObject {
public:
    OAIVertex2DList();
    OAIVertex2DList(QString json);
    ~OAIVertex2DList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getXOffsets() const;
    void setXOffsets(const QList<qint32> &x_offsets);
    bool is_x_offsets_Set() const;
    bool is_x_offsets_Valid() const;

    QList<qint32> getYOffsets() const;
    void setYOffsets(const QList<qint32> &y_offsets);
    bool is_y_offsets_Set() const;
    bool is_y_offsets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_x_offsets;
    bool m_x_offsets_isSet;
    bool m_x_offsets_isValid;

    QList<qint32> m_y_offsets;
    bool m_y_offsets_isSet;
    bool m_y_offsets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVertex2DList)

#endif // OAIVertex2DList_H
