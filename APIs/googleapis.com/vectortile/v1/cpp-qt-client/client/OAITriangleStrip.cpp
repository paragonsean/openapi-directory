/**
 * Semantic Tile API
 * Serves vector tiles containing geospatial data. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITriangleStrip.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITriangleStrip::OAITriangleStrip(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITriangleStrip::OAITriangleStrip() {
    this->initializeModel();
}

OAITriangleStrip::~OAITriangleStrip() {}

void OAITriangleStrip::initializeModel() {

    m_vertex_indices_isSet = false;
    m_vertex_indices_isValid = false;
}

void OAITriangleStrip::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITriangleStrip::fromJsonObject(QJsonObject json) {

    m_vertex_indices_isValid = ::OpenAPI::fromJsonValue(m_vertex_indices, json[QString("vertexIndices")]);
    m_vertex_indices_isSet = !json[QString("vertexIndices")].isNull() && m_vertex_indices_isValid;
}

QString OAITriangleStrip::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITriangleStrip::asJsonObject() const {
    QJsonObject obj;
    if (m_vertex_indices.size() > 0) {
        obj.insert(QString("vertexIndices"), ::OpenAPI::toJsonValue(m_vertex_indices));
    }
    return obj;
}

QList<qint32> OAITriangleStrip::getVertexIndices() const {
    return m_vertex_indices;
}
void OAITriangleStrip::setVertexIndices(const QList<qint32> &vertex_indices) {
    m_vertex_indices = vertex_indices;
    m_vertex_indices_isSet = true;
}

bool OAITriangleStrip::is_vertex_indices_Set() const{
    return m_vertex_indices_isSet;
}

bool OAITriangleStrip::is_vertex_indices_Valid() const{
    return m_vertex_indices_isValid;
}

bool OAITriangleStrip::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vertex_indices.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITriangleStrip::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
