# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.runtime_environment import RuntimeEnvironment
from openapi_server import util


class CreateJobFromTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment: RuntimeEnvironment=None, gcs_path: str=None, job_name: str=None, location: str=None, parameters: Dict[str, str]=None):
        """CreateJobFromTemplateRequest - a model defined in OpenAPI

        :param environment: The environment of this CreateJobFromTemplateRequest.
        :param gcs_path: The gcs_path of this CreateJobFromTemplateRequest.
        :param job_name: The job_name of this CreateJobFromTemplateRequest.
        :param location: The location of this CreateJobFromTemplateRequest.
        :param parameters: The parameters of this CreateJobFromTemplateRequest.
        """
        self.openapi_types = {
            'environment': RuntimeEnvironment,
            'gcs_path': str,
            'job_name': str,
            'location': str,
            'parameters': Dict[str, str]
        }

        self.attribute_map = {
            'environment': 'environment',
            'gcs_path': 'gcsPath',
            'job_name': 'jobName',
            'location': 'location',
            'parameters': 'parameters'
        }

        self._environment = environment
        self._gcs_path = gcs_path
        self._job_name = job_name
        self._location = location
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateJobFromTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateJobFromTemplateRequest of this CreateJobFromTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment(self):
        """Gets the environment of this CreateJobFromTemplateRequest.


        :return: The environment of this CreateJobFromTemplateRequest.
        :rtype: RuntimeEnvironment
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this CreateJobFromTemplateRequest.


        :param environment: The environment of this CreateJobFromTemplateRequest.
        :type environment: RuntimeEnvironment
        """

        self._environment = environment

    @property
    def gcs_path(self):
        """Gets the gcs_path of this CreateJobFromTemplateRequest.

        Required. A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with `gs://`.

        :return: The gcs_path of this CreateJobFromTemplateRequest.
        :rtype: str
        """
        return self._gcs_path

    @gcs_path.setter
    def gcs_path(self, gcs_path):
        """Sets the gcs_path of this CreateJobFromTemplateRequest.

        Required. A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with `gs://`.

        :param gcs_path: The gcs_path of this CreateJobFromTemplateRequest.
        :type gcs_path: str
        """

        self._gcs_path = gcs_path

    @property
    def job_name(self):
        """Gets the job_name of this CreateJobFromTemplateRequest.

        Required. The job name to use for the created job.

        :return: The job_name of this CreateJobFromTemplateRequest.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this CreateJobFromTemplateRequest.

        Required. The job name to use for the created job.

        :param job_name: The job_name of this CreateJobFromTemplateRequest.
        :type job_name: str
        """

        self._job_name = job_name

    @property
    def location(self):
        """Gets the location of this CreateJobFromTemplateRequest.

        The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.

        :return: The location of this CreateJobFromTemplateRequest.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this CreateJobFromTemplateRequest.

        The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.

        :param location: The location of this CreateJobFromTemplateRequest.
        :type location: str
        """

        self._location = location

    @property
    def parameters(self):
        """Gets the parameters of this CreateJobFromTemplateRequest.

        The runtime parameters to pass to the job.

        :return: The parameters of this CreateJobFromTemplateRequest.
        :rtype: Dict[str, str]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this CreateJobFromTemplateRequest.

        The runtime parameters to pass to the job.

        :param parameters: The parameters of this CreateJobFromTemplateRequest.
        :type parameters: Dict[str, str]
        """

        self._parameters = parameters
