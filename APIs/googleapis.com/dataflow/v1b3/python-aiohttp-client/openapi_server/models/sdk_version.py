# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sdk_bug import SdkBug
from openapi_server import util


class SdkVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bugs: List[SdkBug]=None, sdk_support_status: str=None, version: str=None, version_display_name: str=None):
        """SdkVersion - a model defined in OpenAPI

        :param bugs: The bugs of this SdkVersion.
        :param sdk_support_status: The sdk_support_status of this SdkVersion.
        :param version: The version of this SdkVersion.
        :param version_display_name: The version_display_name of this SdkVersion.
        """
        self.openapi_types = {
            'bugs': List[SdkBug],
            'sdk_support_status': str,
            'version': str,
            'version_display_name': str
        }

        self.attribute_map = {
            'bugs': 'bugs',
            'sdk_support_status': 'sdkSupportStatus',
            'version': 'version',
            'version_display_name': 'versionDisplayName'
        }

        self._bugs = bugs
        self._sdk_support_status = sdk_support_status
        self._version = version
        self._version_display_name = version_display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SdkVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SdkVersion of this SdkVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bugs(self):
        """Gets the bugs of this SdkVersion.

        Output only. Known bugs found in this SDK version.

        :return: The bugs of this SdkVersion.
        :rtype: List[SdkBug]
        """
        return self._bugs

    @bugs.setter
    def bugs(self, bugs):
        """Sets the bugs of this SdkVersion.

        Output only. Known bugs found in this SDK version.

        :param bugs: The bugs of this SdkVersion.
        :type bugs: List[SdkBug]
        """

        self._bugs = bugs

    @property
    def sdk_support_status(self):
        """Gets the sdk_support_status of this SdkVersion.

        The support status for this SDK version.

        :return: The sdk_support_status of this SdkVersion.
        :rtype: str
        """
        return self._sdk_support_status

    @sdk_support_status.setter
    def sdk_support_status(self, sdk_support_status):
        """Sets the sdk_support_status of this SdkVersion.

        The support status for this SDK version.

        :param sdk_support_status: The sdk_support_status of this SdkVersion.
        :type sdk_support_status: str
        """
        allowed_values = ["UNKNOWN", "SUPPORTED", "STALE", "DEPRECATED", "UNSUPPORTED"]  # noqa: E501
        if sdk_support_status not in allowed_values:
            raise ValueError(
                "Invalid value for `sdk_support_status` ({0}), must be one of {1}"
                .format(sdk_support_status, allowed_values)
            )

        self._sdk_support_status = sdk_support_status

    @property
    def version(self):
        """Gets the version of this SdkVersion.

        The version of the SDK used to run the job.

        :return: The version of this SdkVersion.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this SdkVersion.

        The version of the SDK used to run the job.

        :param version: The version of this SdkVersion.
        :type version: str
        """

        self._version = version

    @property
    def version_display_name(self):
        """Gets the version_display_name of this SdkVersion.

        A readable string describing the version of the SDK.

        :return: The version_display_name of this SdkVersion.
        :rtype: str
        """
        return self._version_display_name

    @version_display_name.setter
    def version_display_name(self, version_display_name):
        """Sets the version_display_name of this SdkVersion.

        A readable string describing the version of the SDK.

        :param version_display_name: The version_display_name of this SdkVersion.
        :type version_display_name: str
        """

        self._version_display_name = version_display_name
