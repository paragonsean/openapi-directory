# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstructionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, output_num: int=None, producer_instruction_index: int=None):
        """InstructionInput - a model defined in OpenAPI

        :param output_num: The output_num of this InstructionInput.
        :param producer_instruction_index: The producer_instruction_index of this InstructionInput.
        """
        self.openapi_types = {
            'output_num': int,
            'producer_instruction_index': int
        }

        self.attribute_map = {
            'output_num': 'outputNum',
            'producer_instruction_index': 'producerInstructionIndex'
        }

        self._output_num = output_num
        self._producer_instruction_index = producer_instruction_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstructionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstructionInput of this InstructionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def output_num(self):
        """Gets the output_num of this InstructionInput.

        The output index (origin zero) within the producer.

        :return: The output_num of this InstructionInput.
        :rtype: int
        """
        return self._output_num

    @output_num.setter
    def output_num(self, output_num):
        """Sets the output_num of this InstructionInput.

        The output index (origin zero) within the producer.

        :param output_num: The output_num of this InstructionInput.
        :type output_num: int
        """

        self._output_num = output_num

    @property
    def producer_instruction_index(self):
        """Gets the producer_instruction_index of this InstructionInput.

        The index (origin zero) of the parallel instruction that produces the output to be consumed by this input. This index is relative to the list of instructions in this input's instruction's containing MapTask.

        :return: The producer_instruction_index of this InstructionInput.
        :rtype: int
        """
        return self._producer_instruction_index

    @producer_instruction_index.setter
    def producer_instruction_index(self, producer_instruction_index):
        """Sets the producer_instruction_index of this InstructionInput.

        The index (origin zero) of the parallel instruction that produces the output to be consumed by this input. This index is relative to the list of instructions in this input's instruction's containing MapTask.

        :param producer_instruction_index: The producer_instruction_index of this InstructionInput.
        :type producer_instruction_index: int
        """

        self._producer_instruction_index = producer_instruction_index
