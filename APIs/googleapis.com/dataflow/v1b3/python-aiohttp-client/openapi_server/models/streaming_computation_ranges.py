# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_range_data_disk_assignment import KeyRangeDataDiskAssignment
from openapi_server import util


class StreamingComputationRanges(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computation_id: str=None, range_assignments: List[KeyRangeDataDiskAssignment]=None):
        """StreamingComputationRanges - a model defined in OpenAPI

        :param computation_id: The computation_id of this StreamingComputationRanges.
        :param range_assignments: The range_assignments of this StreamingComputationRanges.
        """
        self.openapi_types = {
            'computation_id': str,
            'range_assignments': List[KeyRangeDataDiskAssignment]
        }

        self.attribute_map = {
            'computation_id': 'computationId',
            'range_assignments': 'rangeAssignments'
        }

        self._computation_id = computation_id
        self._range_assignments = range_assignments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingComputationRanges':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingComputationRanges of this StreamingComputationRanges.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computation_id(self):
        """Gets the computation_id of this StreamingComputationRanges.

        The ID of the computation.

        :return: The computation_id of this StreamingComputationRanges.
        :rtype: str
        """
        return self._computation_id

    @computation_id.setter
    def computation_id(self, computation_id):
        """Sets the computation_id of this StreamingComputationRanges.

        The ID of the computation.

        :param computation_id: The computation_id of this StreamingComputationRanges.
        :type computation_id: str
        """

        self._computation_id = computation_id

    @property
    def range_assignments(self):
        """Gets the range_assignments of this StreamingComputationRanges.

        Data disk assignments for ranges from this computation.

        :return: The range_assignments of this StreamingComputationRanges.
        :rtype: List[KeyRangeDataDiskAssignment]
        """
        return self._range_assignments

    @range_assignments.setter
    def range_assignments(self, range_assignments):
        """Sets the range_assignments of this StreamingComputationRanges.

        Data disk assignments for ranges from this computation.

        :param range_assignments: The range_assignments of this StreamingComputationRanges.
        :type range_assignments: List[KeyRangeDataDiskAssignment]
        """

        self._range_assignments = range_assignments
