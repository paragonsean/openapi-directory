# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComponentTransform(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, original_transform: str=None, user_name: str=None):
        """ComponentTransform - a model defined in OpenAPI

        :param name: The name of this ComponentTransform.
        :param original_transform: The original_transform of this ComponentTransform.
        :param user_name: The user_name of this ComponentTransform.
        """
        self.openapi_types = {
            'name': str,
            'original_transform': str,
            'user_name': str
        }

        self.attribute_map = {
            'name': 'name',
            'original_transform': 'originalTransform',
            'user_name': 'userName'
        }

        self._name = name
        self._original_transform = original_transform
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComponentTransform':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComponentTransform of this ComponentTransform.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ComponentTransform.

        Dataflow service generated name for this source.

        :return: The name of this ComponentTransform.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ComponentTransform.

        Dataflow service generated name for this source.

        :param name: The name of this ComponentTransform.
        :type name: str
        """

        self._name = name

    @property
    def original_transform(self):
        """Gets the original_transform of this ComponentTransform.

        User name for the original user transform with which this transform is most closely associated.

        :return: The original_transform of this ComponentTransform.
        :rtype: str
        """
        return self._original_transform

    @original_transform.setter
    def original_transform(self, original_transform):
        """Sets the original_transform of this ComponentTransform.

        User name for the original user transform with which this transform is most closely associated.

        :param original_transform: The original_transform of this ComponentTransform.
        :type original_transform: str
        """

        self._original_transform = original_transform

    @property
    def user_name(self):
        """Gets the user_name of this ComponentTransform.

        Human-readable name for this transform; may be user or system generated.

        :return: The user_name of this ComponentTransform.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this ComponentTransform.

        Human-readable name for this transform; may be user or system generated.

        :param user_name: The user_name of this ComponentTransform.
        :type user_name: str
        """

        self._user_name = user_name
