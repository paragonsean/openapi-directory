# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StateFamilyConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_read: bool=None, state_family: str=None):
        """StateFamilyConfig - a model defined in OpenAPI

        :param is_read: The is_read of this StateFamilyConfig.
        :param state_family: The state_family of this StateFamilyConfig.
        """
        self.openapi_types = {
            'is_read': bool,
            'state_family': str
        }

        self.attribute_map = {
            'is_read': 'isRead',
            'state_family': 'stateFamily'
        }

        self._is_read = is_read
        self._state_family = state_family

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StateFamilyConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StateFamilyConfig of this StateFamilyConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_read(self):
        """Gets the is_read of this StateFamilyConfig.

        If true, this family corresponds to a read operation.

        :return: The is_read of this StateFamilyConfig.
        :rtype: bool
        """
        return self._is_read

    @is_read.setter
    def is_read(self, is_read):
        """Sets the is_read of this StateFamilyConfig.

        If true, this family corresponds to a read operation.

        :param is_read: The is_read of this StateFamilyConfig.
        :type is_read: bool
        """

        self._is_read = is_read

    @property
    def state_family(self):
        """Gets the state_family of this StateFamilyConfig.

        The state family value.

        :return: The state_family of this StateFamilyConfig.
        :rtype: str
        """
        return self._state_family

    @state_family.setter
    def state_family(self, state_family):
        """Sets the state_family of this StateFamilyConfig.

        The state family value.

        :param state_family: The state_family of this StateFamilyConfig.
        :type state_family: str
        """

        self._state_family = state_family
