# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flex_template_runtime_environment import FlexTemplateRuntimeEnvironment
from openapi_server.models.sdk_info import SDKInfo
from openapi_server.models.template_metadata import TemplateMetadata
from openapi_server import util


class ContainerSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_environment: FlexTemplateRuntimeEnvironment=None, image: str=None, image_repository_cert_path: str=None, image_repository_password_secret_id: str=None, image_repository_username_secret_id: str=None, metadata: TemplateMetadata=None, sdk_info: SDKInfo=None):
        """ContainerSpec - a model defined in OpenAPI

        :param default_environment: The default_environment of this ContainerSpec.
        :param image: The image of this ContainerSpec.
        :param image_repository_cert_path: The image_repository_cert_path of this ContainerSpec.
        :param image_repository_password_secret_id: The image_repository_password_secret_id of this ContainerSpec.
        :param image_repository_username_secret_id: The image_repository_username_secret_id of this ContainerSpec.
        :param metadata: The metadata of this ContainerSpec.
        :param sdk_info: The sdk_info of this ContainerSpec.
        """
        self.openapi_types = {
            'default_environment': FlexTemplateRuntimeEnvironment,
            'image': str,
            'image_repository_cert_path': str,
            'image_repository_password_secret_id': str,
            'image_repository_username_secret_id': str,
            'metadata': TemplateMetadata,
            'sdk_info': SDKInfo
        }

        self.attribute_map = {
            'default_environment': 'defaultEnvironment',
            'image': 'image',
            'image_repository_cert_path': 'imageRepositoryCertPath',
            'image_repository_password_secret_id': 'imageRepositoryPasswordSecretId',
            'image_repository_username_secret_id': 'imageRepositoryUsernameSecretId',
            'metadata': 'metadata',
            'sdk_info': 'sdkInfo'
        }

        self._default_environment = default_environment
        self._image = image
        self._image_repository_cert_path = image_repository_cert_path
        self._image_repository_password_secret_id = image_repository_password_secret_id
        self._image_repository_username_secret_id = image_repository_username_secret_id
        self._metadata = metadata
        self._sdk_info = sdk_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerSpec of this ContainerSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_environment(self):
        """Gets the default_environment of this ContainerSpec.


        :return: The default_environment of this ContainerSpec.
        :rtype: FlexTemplateRuntimeEnvironment
        """
        return self._default_environment

    @default_environment.setter
    def default_environment(self, default_environment):
        """Sets the default_environment of this ContainerSpec.


        :param default_environment: The default_environment of this ContainerSpec.
        :type default_environment: FlexTemplateRuntimeEnvironment
        """

        self._default_environment = default_environment

    @property
    def image(self):
        """Gets the image of this ContainerSpec.

        Name of the docker container image. E.g., gcr.io/project/some-image

        :return: The image of this ContainerSpec.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ContainerSpec.

        Name of the docker container image. E.g., gcr.io/project/some-image

        :param image: The image of this ContainerSpec.
        :type image: str
        """

        self._image = image

    @property
    def image_repository_cert_path(self):
        """Gets the image_repository_cert_path of this ContainerSpec.

        Cloud Storage path to self-signed certificate of private registry.

        :return: The image_repository_cert_path of this ContainerSpec.
        :rtype: str
        """
        return self._image_repository_cert_path

    @image_repository_cert_path.setter
    def image_repository_cert_path(self, image_repository_cert_path):
        """Sets the image_repository_cert_path of this ContainerSpec.

        Cloud Storage path to self-signed certificate of private registry.

        :param image_repository_cert_path: The image_repository_cert_path of this ContainerSpec.
        :type image_repository_cert_path: str
        """

        self._image_repository_cert_path = image_repository_cert_path

    @property
    def image_repository_password_secret_id(self):
        """Gets the image_repository_password_secret_id of this ContainerSpec.

        Secret Manager secret id for password to authenticate to private registry.

        :return: The image_repository_password_secret_id of this ContainerSpec.
        :rtype: str
        """
        return self._image_repository_password_secret_id

    @image_repository_password_secret_id.setter
    def image_repository_password_secret_id(self, image_repository_password_secret_id):
        """Sets the image_repository_password_secret_id of this ContainerSpec.

        Secret Manager secret id for password to authenticate to private registry.

        :param image_repository_password_secret_id: The image_repository_password_secret_id of this ContainerSpec.
        :type image_repository_password_secret_id: str
        """

        self._image_repository_password_secret_id = image_repository_password_secret_id

    @property
    def image_repository_username_secret_id(self):
        """Gets the image_repository_username_secret_id of this ContainerSpec.

        Secret Manager secret id for username to authenticate to private registry.

        :return: The image_repository_username_secret_id of this ContainerSpec.
        :rtype: str
        """
        return self._image_repository_username_secret_id

    @image_repository_username_secret_id.setter
    def image_repository_username_secret_id(self, image_repository_username_secret_id):
        """Sets the image_repository_username_secret_id of this ContainerSpec.

        Secret Manager secret id for username to authenticate to private registry.

        :param image_repository_username_secret_id: The image_repository_username_secret_id of this ContainerSpec.
        :type image_repository_username_secret_id: str
        """

        self._image_repository_username_secret_id = image_repository_username_secret_id

    @property
    def metadata(self):
        """Gets the metadata of this ContainerSpec.


        :return: The metadata of this ContainerSpec.
        :rtype: TemplateMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ContainerSpec.


        :param metadata: The metadata of this ContainerSpec.
        :type metadata: TemplateMetadata
        """

        self._metadata = metadata

    @property
    def sdk_info(self):
        """Gets the sdk_info of this ContainerSpec.


        :return: The sdk_info of this ContainerSpec.
        :rtype: SDKInfo
        """
        return self._sdk_info

    @sdk_info.setter
    def sdk_info(self, sdk_info):
        """Sets the sdk_info of this ContainerSpec.


        :param sdk_info: The sdk_info of this ContainerSpec.
        :type sdk_info: SDKInfo
        """

        self._sdk_info = sdk_info
