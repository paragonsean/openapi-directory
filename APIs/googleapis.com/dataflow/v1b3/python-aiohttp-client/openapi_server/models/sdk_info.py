# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SDKInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language: str=None, version: str=None):
        """SDKInfo - a model defined in OpenAPI

        :param language: The language of this SDKInfo.
        :param version: The version of this SDKInfo.
        """
        self.openapi_types = {
            'language': str,
            'version': str
        }

        self.attribute_map = {
            'language': 'language',
            'version': 'version'
        }

        self._language = language
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SDKInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SDKInfo of this SDKInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language(self):
        """Gets the language of this SDKInfo.

        Required. The SDK Language.

        :return: The language of this SDKInfo.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this SDKInfo.

        Required. The SDK Language.

        :param language: The language of this SDKInfo.
        :type language: str
        """
        allowed_values = ["UNKNOWN", "JAVA", "PYTHON", "GO"]  # noqa: E501
        if language not in allowed_values:
            raise ValueError(
                "Invalid value for `language` ({0}), must be one of {1}"
                .format(language, allowed_values)
            )

        self._language = language

    @property
    def version(self):
        """Gets the version of this SDKInfo.

        Optional. The SDK version.

        :return: The version of this SDKInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this SDKInfo.

        Optional. The SDK version.

        :param version: The version of this SDKInfo.
        :type version: str
        """

        self._version = version
