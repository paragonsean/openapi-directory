# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.map_task import MapTask
from openapi_server.models.package import Package
from openapi_server.models.seq_map_task import SeqMapTask
from openapi_server.models.shell_task import ShellTask
from openapi_server.models.source_operation_request import SourceOperationRequest
from openapi_server.models.streaming_computation_task import StreamingComputationTask
from openapi_server.models.streaming_config_task import StreamingConfigTask
from openapi_server.models.streaming_setup_task import StreamingSetupTask
from openapi_server import util


class WorkItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration: str=None, id: str=None, initial_report_index: str=None, job_id: str=None, lease_expire_time: str=None, map_task: MapTask=None, packages: List[Package]=None, project_id: str=None, report_status_interval: str=None, seq_map_task: SeqMapTask=None, shell_task: ShellTask=None, source_operation_task: SourceOperationRequest=None, streaming_computation_task: StreamingComputationTask=None, streaming_config_task: StreamingConfigTask=None, streaming_setup_task: StreamingSetupTask=None):
        """WorkItem - a model defined in OpenAPI

        :param configuration: The configuration of this WorkItem.
        :param id: The id of this WorkItem.
        :param initial_report_index: The initial_report_index of this WorkItem.
        :param job_id: The job_id of this WorkItem.
        :param lease_expire_time: The lease_expire_time of this WorkItem.
        :param map_task: The map_task of this WorkItem.
        :param packages: The packages of this WorkItem.
        :param project_id: The project_id of this WorkItem.
        :param report_status_interval: The report_status_interval of this WorkItem.
        :param seq_map_task: The seq_map_task of this WorkItem.
        :param shell_task: The shell_task of this WorkItem.
        :param source_operation_task: The source_operation_task of this WorkItem.
        :param streaming_computation_task: The streaming_computation_task of this WorkItem.
        :param streaming_config_task: The streaming_config_task of this WorkItem.
        :param streaming_setup_task: The streaming_setup_task of this WorkItem.
        """
        self.openapi_types = {
            'configuration': str,
            'id': str,
            'initial_report_index': str,
            'job_id': str,
            'lease_expire_time': str,
            'map_task': MapTask,
            'packages': List[Package],
            'project_id': str,
            'report_status_interval': str,
            'seq_map_task': SeqMapTask,
            'shell_task': ShellTask,
            'source_operation_task': SourceOperationRequest,
            'streaming_computation_task': StreamingComputationTask,
            'streaming_config_task': StreamingConfigTask,
            'streaming_setup_task': StreamingSetupTask
        }

        self.attribute_map = {
            'configuration': 'configuration',
            'id': 'id',
            'initial_report_index': 'initialReportIndex',
            'job_id': 'jobId',
            'lease_expire_time': 'leaseExpireTime',
            'map_task': 'mapTask',
            'packages': 'packages',
            'project_id': 'projectId',
            'report_status_interval': 'reportStatusInterval',
            'seq_map_task': 'seqMapTask',
            'shell_task': 'shellTask',
            'source_operation_task': 'sourceOperationTask',
            'streaming_computation_task': 'streamingComputationTask',
            'streaming_config_task': 'streamingConfigTask',
            'streaming_setup_task': 'streamingSetupTask'
        }

        self._configuration = configuration
        self._id = id
        self._initial_report_index = initial_report_index
        self._job_id = job_id
        self._lease_expire_time = lease_expire_time
        self._map_task = map_task
        self._packages = packages
        self._project_id = project_id
        self._report_status_interval = report_status_interval
        self._seq_map_task = seq_map_task
        self._shell_task = shell_task
        self._source_operation_task = source_operation_task
        self._streaming_computation_task = streaming_computation_task
        self._streaming_config_task = streaming_config_task
        self._streaming_setup_task = streaming_setup_task

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkItem of this WorkItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration(self):
        """Gets the configuration of this WorkItem.

        Work item-specific configuration as an opaque blob.

        :return: The configuration of this WorkItem.
        :rtype: str
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this WorkItem.

        Work item-specific configuration as an opaque blob.

        :param configuration: The configuration of this WorkItem.
        :type configuration: str
        """

        self._configuration = configuration

    @property
    def id(self):
        """Gets the id of this WorkItem.

        Identifies this WorkItem.

        :return: The id of this WorkItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WorkItem.

        Identifies this WorkItem.

        :param id: The id of this WorkItem.
        :type id: str
        """

        self._id = id

    @property
    def initial_report_index(self):
        """Gets the initial_report_index of this WorkItem.

        The initial index to use when reporting the status of the WorkItem.

        :return: The initial_report_index of this WorkItem.
        :rtype: str
        """
        return self._initial_report_index

    @initial_report_index.setter
    def initial_report_index(self, initial_report_index):
        """Sets the initial_report_index of this WorkItem.

        The initial index to use when reporting the status of the WorkItem.

        :param initial_report_index: The initial_report_index of this WorkItem.
        :type initial_report_index: str
        """

        self._initial_report_index = initial_report_index

    @property
    def job_id(self):
        """Gets the job_id of this WorkItem.

        Identifies the workflow job this WorkItem belongs to.

        :return: The job_id of this WorkItem.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this WorkItem.

        Identifies the workflow job this WorkItem belongs to.

        :param job_id: The job_id of this WorkItem.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def lease_expire_time(self):
        """Gets the lease_expire_time of this WorkItem.

        Time when the lease on this Work will expire.

        :return: The lease_expire_time of this WorkItem.
        :rtype: str
        """
        return self._lease_expire_time

    @lease_expire_time.setter
    def lease_expire_time(self, lease_expire_time):
        """Sets the lease_expire_time of this WorkItem.

        Time when the lease on this Work will expire.

        :param lease_expire_time: The lease_expire_time of this WorkItem.
        :type lease_expire_time: str
        """

        self._lease_expire_time = lease_expire_time

    @property
    def map_task(self):
        """Gets the map_task of this WorkItem.


        :return: The map_task of this WorkItem.
        :rtype: MapTask
        """
        return self._map_task

    @map_task.setter
    def map_task(self, map_task):
        """Sets the map_task of this WorkItem.


        :param map_task: The map_task of this WorkItem.
        :type map_task: MapTask
        """

        self._map_task = map_task

    @property
    def packages(self):
        """Gets the packages of this WorkItem.

        Any required packages that need to be fetched in order to execute this WorkItem.

        :return: The packages of this WorkItem.
        :rtype: List[Package]
        """
        return self._packages

    @packages.setter
    def packages(self, packages):
        """Sets the packages of this WorkItem.

        Any required packages that need to be fetched in order to execute this WorkItem.

        :param packages: The packages of this WorkItem.
        :type packages: List[Package]
        """

        self._packages = packages

    @property
    def project_id(self):
        """Gets the project_id of this WorkItem.

        Identifies the cloud project this WorkItem belongs to.

        :return: The project_id of this WorkItem.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this WorkItem.

        Identifies the cloud project this WorkItem belongs to.

        :param project_id: The project_id of this WorkItem.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def report_status_interval(self):
        """Gets the report_status_interval of this WorkItem.

        Recommended reporting interval.

        :return: The report_status_interval of this WorkItem.
        :rtype: str
        """
        return self._report_status_interval

    @report_status_interval.setter
    def report_status_interval(self, report_status_interval):
        """Sets the report_status_interval of this WorkItem.

        Recommended reporting interval.

        :param report_status_interval: The report_status_interval of this WorkItem.
        :type report_status_interval: str
        """

        self._report_status_interval = report_status_interval

    @property
    def seq_map_task(self):
        """Gets the seq_map_task of this WorkItem.


        :return: The seq_map_task of this WorkItem.
        :rtype: SeqMapTask
        """
        return self._seq_map_task

    @seq_map_task.setter
    def seq_map_task(self, seq_map_task):
        """Sets the seq_map_task of this WorkItem.


        :param seq_map_task: The seq_map_task of this WorkItem.
        :type seq_map_task: SeqMapTask
        """

        self._seq_map_task = seq_map_task

    @property
    def shell_task(self):
        """Gets the shell_task of this WorkItem.


        :return: The shell_task of this WorkItem.
        :rtype: ShellTask
        """
        return self._shell_task

    @shell_task.setter
    def shell_task(self, shell_task):
        """Sets the shell_task of this WorkItem.


        :param shell_task: The shell_task of this WorkItem.
        :type shell_task: ShellTask
        """

        self._shell_task = shell_task

    @property
    def source_operation_task(self):
        """Gets the source_operation_task of this WorkItem.


        :return: The source_operation_task of this WorkItem.
        :rtype: SourceOperationRequest
        """
        return self._source_operation_task

    @source_operation_task.setter
    def source_operation_task(self, source_operation_task):
        """Sets the source_operation_task of this WorkItem.


        :param source_operation_task: The source_operation_task of this WorkItem.
        :type source_operation_task: SourceOperationRequest
        """

        self._source_operation_task = source_operation_task

    @property
    def streaming_computation_task(self):
        """Gets the streaming_computation_task of this WorkItem.


        :return: The streaming_computation_task of this WorkItem.
        :rtype: StreamingComputationTask
        """
        return self._streaming_computation_task

    @streaming_computation_task.setter
    def streaming_computation_task(self, streaming_computation_task):
        """Sets the streaming_computation_task of this WorkItem.


        :param streaming_computation_task: The streaming_computation_task of this WorkItem.
        :type streaming_computation_task: StreamingComputationTask
        """

        self._streaming_computation_task = streaming_computation_task

    @property
    def streaming_config_task(self):
        """Gets the streaming_config_task of this WorkItem.


        :return: The streaming_config_task of this WorkItem.
        :rtype: StreamingConfigTask
        """
        return self._streaming_config_task

    @streaming_config_task.setter
    def streaming_config_task(self, streaming_config_task):
        """Sets the streaming_config_task of this WorkItem.


        :param streaming_config_task: The streaming_config_task of this WorkItem.
        :type streaming_config_task: StreamingConfigTask
        """

        self._streaming_config_task = streaming_config_task

    @property
    def streaming_setup_task(self):
        """Gets the streaming_setup_task of this WorkItem.


        :return: The streaming_setup_task of this WorkItem.
        :rtype: StreamingSetupTask
        """
        return self._streaming_setup_task

    @streaming_setup_task.setter
    def streaming_setup_task(self, streaming_setup_task):
        """Sets the streaming_setup_task of this WorkItem.


        :param streaming_setup_task: The streaming_setup_task of this WorkItem.
        :type streaming_setup_task: StreamingSetupTask
        """

        self._streaming_setup_task = streaming_setup_task
