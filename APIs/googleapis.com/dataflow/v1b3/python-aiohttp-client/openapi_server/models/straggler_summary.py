# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.straggler import Straggler
from openapi_server import util


class StragglerSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recent_stragglers: List[Straggler]=None, straggler_cause_count: Dict[str, str]=None, total_straggler_count: str=None):
        """StragglerSummary - a model defined in OpenAPI

        :param recent_stragglers: The recent_stragglers of this StragglerSummary.
        :param straggler_cause_count: The straggler_cause_count of this StragglerSummary.
        :param total_straggler_count: The total_straggler_count of this StragglerSummary.
        """
        self.openapi_types = {
            'recent_stragglers': List[Straggler],
            'straggler_cause_count': Dict[str, str],
            'total_straggler_count': str
        }

        self.attribute_map = {
            'recent_stragglers': 'recentStragglers',
            'straggler_cause_count': 'stragglerCauseCount',
            'total_straggler_count': 'totalStragglerCount'
        }

        self._recent_stragglers = recent_stragglers
        self._straggler_cause_count = straggler_cause_count
        self._total_straggler_count = total_straggler_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StragglerSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StragglerSummary of this StragglerSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recent_stragglers(self):
        """Gets the recent_stragglers of this StragglerSummary.

        The most recent stragglers.

        :return: The recent_stragglers of this StragglerSummary.
        :rtype: List[Straggler]
        """
        return self._recent_stragglers

    @recent_stragglers.setter
    def recent_stragglers(self, recent_stragglers):
        """Sets the recent_stragglers of this StragglerSummary.

        The most recent stragglers.

        :param recent_stragglers: The recent_stragglers of this StragglerSummary.
        :type recent_stragglers: List[Straggler]
        """

        self._recent_stragglers = recent_stragglers

    @property
    def straggler_cause_count(self):
        """Gets the straggler_cause_count of this StragglerSummary.

        Aggregated counts of straggler causes, keyed by the string representation of the StragglerCause enum.

        :return: The straggler_cause_count of this StragglerSummary.
        :rtype: Dict[str, str]
        """
        return self._straggler_cause_count

    @straggler_cause_count.setter
    def straggler_cause_count(self, straggler_cause_count):
        """Sets the straggler_cause_count of this StragglerSummary.

        Aggregated counts of straggler causes, keyed by the string representation of the StragglerCause enum.

        :param straggler_cause_count: The straggler_cause_count of this StragglerSummary.
        :type straggler_cause_count: Dict[str, str]
        """

        self._straggler_cause_count = straggler_cause_count

    @property
    def total_straggler_count(self):
        """Gets the total_straggler_count of this StragglerSummary.

        The total count of stragglers.

        :return: The total_straggler_count of this StragglerSummary.
        :rtype: str
        """
        return self._total_straggler_count

    @total_straggler_count.setter
    def total_straggler_count(self, total_straggler_count):
        """Sets the total_straggler_count of this StragglerSummary.

        The total count of stragglers.

        :param total_straggler_count: The total_straggler_count of this StragglerSummary.
        :type total_straggler_count: str
        """

        self._total_straggler_count = total_straggler_count
