# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.counter_metadata import CounterMetadata
from openapi_server.models.counter_structured_name import CounterStructuredName
from openapi_server import util


class CounterStructuredNameAndMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata: CounterMetadata=None, name: CounterStructuredName=None):
        """CounterStructuredNameAndMetadata - a model defined in OpenAPI

        :param metadata: The metadata of this CounterStructuredNameAndMetadata.
        :param name: The name of this CounterStructuredNameAndMetadata.
        """
        self.openapi_types = {
            'metadata': CounterMetadata,
            'name': CounterStructuredName
        }

        self.attribute_map = {
            'metadata': 'metadata',
            'name': 'name'
        }

        self._metadata = metadata
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CounterStructuredNameAndMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CounterStructuredNameAndMetadata of this CounterStructuredNameAndMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self):
        """Gets the metadata of this CounterStructuredNameAndMetadata.


        :return: The metadata of this CounterStructuredNameAndMetadata.
        :rtype: CounterMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CounterStructuredNameAndMetadata.


        :param metadata: The metadata of this CounterStructuredNameAndMetadata.
        :type metadata: CounterMetadata
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this CounterStructuredNameAndMetadata.


        :return: The name of this CounterStructuredNameAndMetadata.
        :rtype: CounterStructuredName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CounterStructuredNameAndMetadata.


        :param name: The name of this CounterStructuredNameAndMetadata.
        :type name: CounterStructuredName
        """

        self._name = name
