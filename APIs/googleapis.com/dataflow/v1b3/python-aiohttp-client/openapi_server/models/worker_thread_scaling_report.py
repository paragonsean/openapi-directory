# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkerThreadScalingReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_thread_count: int=None):
        """WorkerThreadScalingReport - a model defined in OpenAPI

        :param current_thread_count: The current_thread_count of this WorkerThreadScalingReport.
        """
        self.openapi_types = {
            'current_thread_count': int
        }

        self.attribute_map = {
            'current_thread_count': 'currentThreadCount'
        }

        self._current_thread_count = current_thread_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkerThreadScalingReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkerThreadScalingReport of this WorkerThreadScalingReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_thread_count(self):
        """Gets the current_thread_count of this WorkerThreadScalingReport.

        Current number of active threads in a worker.

        :return: The current_thread_count of this WorkerThreadScalingReport.
        :rtype: int
        """
        return self._current_thread_count

    @current_thread_count.setter
    def current_thread_count(self, current_thread_count):
        """Sets the current_thread_count of this WorkerThreadScalingReport.

        Current number of active threads in a worker.

        :param current_thread_count: The current_thread_count of this WorkerThreadScalingReport.
        :type current_thread_count: int
        """

        self._current_thread_count = current_thread_count
