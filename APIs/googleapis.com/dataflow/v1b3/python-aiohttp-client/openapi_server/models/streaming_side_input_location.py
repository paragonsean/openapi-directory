# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamingSideInputLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state_family: str=None, tag: str=None):
        """StreamingSideInputLocation - a model defined in OpenAPI

        :param state_family: The state_family of this StreamingSideInputLocation.
        :param tag: The tag of this StreamingSideInputLocation.
        """
        self.openapi_types = {
            'state_family': str,
            'tag': str
        }

        self.attribute_map = {
            'state_family': 'stateFamily',
            'tag': 'tag'
        }

        self._state_family = state_family
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingSideInputLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingSideInputLocation of this StreamingSideInputLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state_family(self):
        """Gets the state_family of this StreamingSideInputLocation.

        Identifies the state family where this side input is stored.

        :return: The state_family of this StreamingSideInputLocation.
        :rtype: str
        """
        return self._state_family

    @state_family.setter
    def state_family(self, state_family):
        """Sets the state_family of this StreamingSideInputLocation.

        Identifies the state family where this side input is stored.

        :param state_family: The state_family of this StreamingSideInputLocation.
        :type state_family: str
        """

        self._state_family = state_family

    @property
    def tag(self):
        """Gets the tag of this StreamingSideInputLocation.

        Identifies the particular side input within the streaming Dataflow job.

        :return: The tag of this StreamingSideInputLocation.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this StreamingSideInputLocation.

        Identifies the particular side input within the streaming Dataflow job.

        :param tag: The tag of this StreamingSideInputLocation.
        :type tag: str
        """

        self._tag = tag
