# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RuntimeUpdatableParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_num_workers: int=None, min_num_workers: int=None, worker_utilization_hint: float=None):
        """RuntimeUpdatableParams - a model defined in OpenAPI

        :param max_num_workers: The max_num_workers of this RuntimeUpdatableParams.
        :param min_num_workers: The min_num_workers of this RuntimeUpdatableParams.
        :param worker_utilization_hint: The worker_utilization_hint of this RuntimeUpdatableParams.
        """
        self.openapi_types = {
            'max_num_workers': int,
            'min_num_workers': int,
            'worker_utilization_hint': float
        }

        self.attribute_map = {
            'max_num_workers': 'maxNumWorkers',
            'min_num_workers': 'minNumWorkers',
            'worker_utilization_hint': 'workerUtilizationHint'
        }

        self._max_num_workers = max_num_workers
        self._min_num_workers = min_num_workers
        self._worker_utilization_hint = worker_utilization_hint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuntimeUpdatableParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuntimeUpdatableParams of this RuntimeUpdatableParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_num_workers(self):
        """Gets the max_num_workers of this RuntimeUpdatableParams.

        The maximum number of workers to cap autoscaling at. This field is currently only supported for Streaming Engine jobs.

        :return: The max_num_workers of this RuntimeUpdatableParams.
        :rtype: int
        """
        return self._max_num_workers

    @max_num_workers.setter
    def max_num_workers(self, max_num_workers):
        """Sets the max_num_workers of this RuntimeUpdatableParams.

        The maximum number of workers to cap autoscaling at. This field is currently only supported for Streaming Engine jobs.

        :param max_num_workers: The max_num_workers of this RuntimeUpdatableParams.
        :type max_num_workers: int
        """

        self._max_num_workers = max_num_workers

    @property
    def min_num_workers(self):
        """Gets the min_num_workers of this RuntimeUpdatableParams.

        The minimum number of workers to scale down to. This field is currently only supported for Streaming Engine jobs.

        :return: The min_num_workers of this RuntimeUpdatableParams.
        :rtype: int
        """
        return self._min_num_workers

    @min_num_workers.setter
    def min_num_workers(self, min_num_workers):
        """Sets the min_num_workers of this RuntimeUpdatableParams.

        The minimum number of workers to scale down to. This field is currently only supported for Streaming Engine jobs.

        :param min_num_workers: The min_num_workers of this RuntimeUpdatableParams.
        :type min_num_workers: int
        """

        self._min_num_workers = min_num_workers

    @property
    def worker_utilization_hint(self):
        """Gets the worker_utilization_hint of this RuntimeUpdatableParams.

        Target worker utilization, compared against the aggregate utilization of the worker pool by autoscaler, to determine upscaling and downscaling when absent other constraints such as backlog.

        :return: The worker_utilization_hint of this RuntimeUpdatableParams.
        :rtype: float
        """
        return self._worker_utilization_hint

    @worker_utilization_hint.setter
    def worker_utilization_hint(self, worker_utilization_hint):
        """Sets the worker_utilization_hint of this RuntimeUpdatableParams.

        Target worker utilization, compared against the aggregate utilization of the worker pool by autoscaler, to determine upscaling and downscaling when absent other constraints such as backlog.

        :param worker_utilization_hint: The worker_utilization_hint of this RuntimeUpdatableParams.
        :type worker_utilization_hint: float
        """

        self._worker_utilization_hint = worker_utilization_hint
