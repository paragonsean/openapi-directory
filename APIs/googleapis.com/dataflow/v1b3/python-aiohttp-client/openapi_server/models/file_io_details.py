# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileIODetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_pattern: str=None):
        """FileIODetails - a model defined in OpenAPI

        :param file_pattern: The file_pattern of this FileIODetails.
        """
        self.openapi_types = {
            'file_pattern': str
        }

        self.attribute_map = {
            'file_pattern': 'filePattern'
        }

        self._file_pattern = file_pattern

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileIODetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileIODetails of this FileIODetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_pattern(self):
        """Gets the file_pattern of this FileIODetails.

        File Pattern used to access files by the connector.

        :return: The file_pattern of this FileIODetails.
        :rtype: str
        """
        return self._file_pattern

    @file_pattern.setter
    def file_pattern(self, file_pattern):
        """Sets the file_pattern of this FileIODetails.

        File Pattern used to access files by the connector.

        :param file_pattern: The file_pattern of this FileIODetails.
        :type file_pattern: str
        """

        self._file_pattern = file_pattern
