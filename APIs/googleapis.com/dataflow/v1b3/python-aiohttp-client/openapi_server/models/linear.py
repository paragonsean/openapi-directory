# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Linear(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_buckets: int=None, start: float=None, width: float=None):
        """Linear - a model defined in OpenAPI

        :param number_of_buckets: The number_of_buckets of this Linear.
        :param start: The start of this Linear.
        :param width: The width of this Linear.
        """
        self.openapi_types = {
            'number_of_buckets': int,
            'start': float,
            'width': float
        }

        self.attribute_map = {
            'number_of_buckets': 'numberOfBuckets',
            'start': 'start',
            'width': 'width'
        }

        self._number_of_buckets = number_of_buckets
        self._start = start
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Linear':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Linear of this Linear.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_buckets(self):
        """Gets the number_of_buckets of this Linear.

        Must be greater than 0.

        :return: The number_of_buckets of this Linear.
        :rtype: int
        """
        return self._number_of_buckets

    @number_of_buckets.setter
    def number_of_buckets(self, number_of_buckets):
        """Sets the number_of_buckets of this Linear.

        Must be greater than 0.

        :param number_of_buckets: The number_of_buckets of this Linear.
        :type number_of_buckets: int
        """

        self._number_of_buckets = number_of_buckets

    @property
    def start(self):
        """Gets the start of this Linear.

        Lower bound of the first bucket.

        :return: The start of this Linear.
        :rtype: float
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this Linear.

        Lower bound of the first bucket.

        :param start: The start of this Linear.
        :type start: float
        """

        self._start = start

    @property
    def width(self):
        """Gets the width of this Linear.

        Distance between bucket boundaries. Must be greater than 0.

        :return: The width of this Linear.
        :rtype: float
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this Linear.

        Distance between bucket boundaries. Must be greater than 0.

        :param width: The width of this Linear.
        :type width: float
        """

        self._width = width
