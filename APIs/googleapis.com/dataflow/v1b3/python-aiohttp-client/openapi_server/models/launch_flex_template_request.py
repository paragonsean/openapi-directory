# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.launch_flex_template_parameter import LaunchFlexTemplateParameter
from openapi_server import util


class LaunchFlexTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, launch_parameter: LaunchFlexTemplateParameter=None, validate_only: bool=None):
        """LaunchFlexTemplateRequest - a model defined in OpenAPI

        :param launch_parameter: The launch_parameter of this LaunchFlexTemplateRequest.
        :param validate_only: The validate_only of this LaunchFlexTemplateRequest.
        """
        self.openapi_types = {
            'launch_parameter': LaunchFlexTemplateParameter,
            'validate_only': bool
        }

        self.attribute_map = {
            'launch_parameter': 'launchParameter',
            'validate_only': 'validateOnly'
        }

        self._launch_parameter = launch_parameter
        self._validate_only = validate_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LaunchFlexTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LaunchFlexTemplateRequest of this LaunchFlexTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def launch_parameter(self):
        """Gets the launch_parameter of this LaunchFlexTemplateRequest.


        :return: The launch_parameter of this LaunchFlexTemplateRequest.
        :rtype: LaunchFlexTemplateParameter
        """
        return self._launch_parameter

    @launch_parameter.setter
    def launch_parameter(self, launch_parameter):
        """Sets the launch_parameter of this LaunchFlexTemplateRequest.


        :param launch_parameter: The launch_parameter of this LaunchFlexTemplateRequest.
        :type launch_parameter: LaunchFlexTemplateParameter
        """

        self._launch_parameter = launch_parameter

    @property
    def validate_only(self):
        """Gets the validate_only of this LaunchFlexTemplateRequest.

        If true, the request is validated but not actually executed. Defaults to false.

        :return: The validate_only of this LaunchFlexTemplateRequest.
        :rtype: bool
        """
        return self._validate_only

    @validate_only.setter
    def validate_only(self, validate_only):
        """Sets the validate_only of this LaunchFlexTemplateRequest.

        If true, the request is validated but not actually executed. Defaults to false.

        :param validate_only: The validate_only of this LaunchFlexTemplateRequest.
        :type validate_only: bool
        """

        self._validate_only = validate_only
