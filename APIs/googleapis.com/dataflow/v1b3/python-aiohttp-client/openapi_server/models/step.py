# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Step(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, name: str=None, properties: Dict[str, object]=None):
        """Step - a model defined in OpenAPI

        :param kind: The kind of this Step.
        :param name: The name of this Step.
        :param properties: The properties of this Step.
        """
        self.openapi_types = {
            'kind': str,
            'name': str,
            'properties': Dict[str, object]
        }

        self.attribute_map = {
            'kind': 'kind',
            'name': 'name',
            'properties': 'properties'
        }

        self._kind = kind
        self._name = name
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Step':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Step of this Step.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this Step.

        The kind of step in the Cloud Dataflow job.

        :return: The kind of this Step.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Step.

        The kind of step in the Cloud Dataflow job.

        :param kind: The kind of this Step.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this Step.

        The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job.

        :return: The name of this Step.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Step.

        The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job.

        :param name: The name of this Step.
        :type name: str
        """

        self._name = name

    @property
    def properties(self):
        """Gets the properties of this Step.

        Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.

        :return: The properties of this Step.
        :rtype: Dict[str, object]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Step.

        Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.

        :param properties: The properties of this Step.
        :type properties: Dict[str, object]
        """

        self._properties = properties
