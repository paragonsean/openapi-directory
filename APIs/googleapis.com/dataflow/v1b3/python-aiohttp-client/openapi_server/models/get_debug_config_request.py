# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDebugConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_id: str=None, location: str=None, worker_id: str=None):
        """GetDebugConfigRequest - a model defined in OpenAPI

        :param component_id: The component_id of this GetDebugConfigRequest.
        :param location: The location of this GetDebugConfigRequest.
        :param worker_id: The worker_id of this GetDebugConfigRequest.
        """
        self.openapi_types = {
            'component_id': str,
            'location': str,
            'worker_id': str
        }

        self.attribute_map = {
            'component_id': 'componentId',
            'location': 'location',
            'worker_id': 'workerId'
        }

        self._component_id = component_id
        self._location = location
        self._worker_id = worker_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDebugConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDebugConfigRequest of this GetDebugConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_id(self):
        """Gets the component_id of this GetDebugConfigRequest.

        The internal component id for which debug configuration is requested.

        :return: The component_id of this GetDebugConfigRequest.
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """Sets the component_id of this GetDebugConfigRequest.

        The internal component id for which debug configuration is requested.

        :param component_id: The component_id of this GetDebugConfigRequest.
        :type component_id: str
        """

        self._component_id = component_id

    @property
    def location(self):
        """Gets the location of this GetDebugConfigRequest.

        The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.

        :return: The location of this GetDebugConfigRequest.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GetDebugConfigRequest.

        The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.

        :param location: The location of this GetDebugConfigRequest.
        :type location: str
        """

        self._location = location

    @property
    def worker_id(self):
        """Gets the worker_id of this GetDebugConfigRequest.

        The worker id, i.e., VM hostname.

        :return: The worker_id of this GetDebugConfigRequest.
        :rtype: str
        """
        return self._worker_id

    @worker_id.setter
    def worker_id(self, worker_id):
        """Sets the worker_id of this GetDebugConfigRequest.

        The worker id, i.e., VM hostname.

        :param worker_id: The worker_id of this GetDebugConfigRequest.
        :type worker_id: str
        """

        self._worker_id = worker_id
