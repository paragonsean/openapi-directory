# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SplitInt64(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, high_bits: int=None, low_bits: int=None):
        """SplitInt64 - a model defined in OpenAPI

        :param high_bits: The high_bits of this SplitInt64.
        :param low_bits: The low_bits of this SplitInt64.
        """
        self.openapi_types = {
            'high_bits': int,
            'low_bits': int
        }

        self.attribute_map = {
            'high_bits': 'highBits',
            'low_bits': 'lowBits'
        }

        self._high_bits = high_bits
        self._low_bits = low_bits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SplitInt64':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SplitInt64 of this SplitInt64.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def high_bits(self):
        """Gets the high_bits of this SplitInt64.

        The high order bits, including the sign: n >> 32.

        :return: The high_bits of this SplitInt64.
        :rtype: int
        """
        return self._high_bits

    @high_bits.setter
    def high_bits(self, high_bits):
        """Sets the high_bits of this SplitInt64.

        The high order bits, including the sign: n >> 32.

        :param high_bits: The high_bits of this SplitInt64.
        :type high_bits: int
        """

        self._high_bits = high_bits

    @property
    def low_bits(self):
        """Gets the low_bits of this SplitInt64.

        The low order bits: n & 0xffffffff.

        :return: The low_bits of this SplitInt64.
        :rtype: int
        """
        return self._low_bits

    @low_bits.setter
    def low_bits(self, low_bits):
        """Sets the low_bits of this SplitInt64.

        The low order bits: n & 0xffffffff.

        :param low_bits: The low_bits of this SplitInt64.
        :type low_bits: int
        """

        self._low_bits = low_bits
