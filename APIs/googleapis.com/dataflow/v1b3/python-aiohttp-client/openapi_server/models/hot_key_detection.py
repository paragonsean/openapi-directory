# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HotKeyDetection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hot_key_age: str=None, system_name: str=None, user_step_name: str=None):
        """HotKeyDetection - a model defined in OpenAPI

        :param hot_key_age: The hot_key_age of this HotKeyDetection.
        :param system_name: The system_name of this HotKeyDetection.
        :param user_step_name: The user_step_name of this HotKeyDetection.
        """
        self.openapi_types = {
            'hot_key_age': str,
            'system_name': str,
            'user_step_name': str
        }

        self.attribute_map = {
            'hot_key_age': 'hotKeyAge',
            'system_name': 'systemName',
            'user_step_name': 'userStepName'
        }

        self._hot_key_age = hot_key_age
        self._system_name = system_name
        self._user_step_name = user_step_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HotKeyDetection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HotKeyDetection of this HotKeyDetection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hot_key_age(self):
        """Gets the hot_key_age of this HotKeyDetection.

        The age of the hot key measured from when it was first detected.

        :return: The hot_key_age of this HotKeyDetection.
        :rtype: str
        """
        return self._hot_key_age

    @hot_key_age.setter
    def hot_key_age(self, hot_key_age):
        """Sets the hot_key_age of this HotKeyDetection.

        The age of the hot key measured from when it was first detected.

        :param hot_key_age: The hot_key_age of this HotKeyDetection.
        :type hot_key_age: str
        """

        self._hot_key_age = hot_key_age

    @property
    def system_name(self):
        """Gets the system_name of this HotKeyDetection.

        System-defined name of the step containing this hot key. Unique across the workflow.

        :return: The system_name of this HotKeyDetection.
        :rtype: str
        """
        return self._system_name

    @system_name.setter
    def system_name(self, system_name):
        """Sets the system_name of this HotKeyDetection.

        System-defined name of the step containing this hot key. Unique across the workflow.

        :param system_name: The system_name of this HotKeyDetection.
        :type system_name: str
        """

        self._system_name = system_name

    @property
    def user_step_name(self):
        """Gets the user_step_name of this HotKeyDetection.

        User-provided name of the step that contains this hot key.

        :return: The user_step_name of this HotKeyDetection.
        :rtype: str
        """
        return self._user_step_name

    @user_step_name.setter
    def user_step_name(self, user_step_name):
        """Sets the user_step_name of this HotKeyDetection.

        User-provided name of the step that contains this hot key.

        :param user_step_name: The user_step_name of this HotKeyDetection.
        :type user_step_name: str
        """

        self._user_step_name = user_step_name
