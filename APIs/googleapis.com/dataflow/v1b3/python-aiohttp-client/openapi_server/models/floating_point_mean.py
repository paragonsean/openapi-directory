# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.split_int64 import SplitInt64
from openapi_server import util


class FloatingPointMean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: SplitInt64=None, sum: float=None):
        """FloatingPointMean - a model defined in OpenAPI

        :param count: The count of this FloatingPointMean.
        :param sum: The sum of this FloatingPointMean.
        """
        self.openapi_types = {
            'count': SplitInt64,
            'sum': float
        }

        self.attribute_map = {
            'count': 'count',
            'sum': 'sum'
        }

        self._count = count
        self._sum = sum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FloatingPointMean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FloatingPointMean of this FloatingPointMean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this FloatingPointMean.


        :return: The count of this FloatingPointMean.
        :rtype: SplitInt64
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this FloatingPointMean.


        :param count: The count of this FloatingPointMean.
        :type count: SplitInt64
        """

        self._count = count

    @property
    def sum(self):
        """Gets the sum of this FloatingPointMean.

        The sum of all values being aggregated.

        :return: The sum of this FloatingPointMean.
        :rtype: float
        """
        return self._sum

    @sum.setter
    def sum(self, sum):
        """Sets the sum of this FloatingPointMean.

        The sum of all values being aggregated.

        :param sum: The sum of this FloatingPointMean.
        :type sum: float
        """

        self._sum = sum
