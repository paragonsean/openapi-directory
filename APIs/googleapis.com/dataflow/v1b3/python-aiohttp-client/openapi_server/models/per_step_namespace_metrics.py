# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metric_value import MetricValue
from openapi_server import util


class PerStepNamespaceMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_values: List[MetricValue]=None, metrics_namespace: str=None, original_step: str=None):
        """PerStepNamespaceMetrics - a model defined in OpenAPI

        :param metric_values: The metric_values of this PerStepNamespaceMetrics.
        :param metrics_namespace: The metrics_namespace of this PerStepNamespaceMetrics.
        :param original_step: The original_step of this PerStepNamespaceMetrics.
        """
        self.openapi_types = {
            'metric_values': List[MetricValue],
            'metrics_namespace': str,
            'original_step': str
        }

        self.attribute_map = {
            'metric_values': 'metricValues',
            'metrics_namespace': 'metricsNamespace',
            'original_step': 'originalStep'
        }

        self._metric_values = metric_values
        self._metrics_namespace = metrics_namespace
        self._original_step = original_step

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerStepNamespaceMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerStepNamespaceMetrics of this PerStepNamespaceMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_values(self):
        """Gets the metric_values of this PerStepNamespaceMetrics.

        Optional. Metrics that are recorded for this namespace and unfused step.

        :return: The metric_values of this PerStepNamespaceMetrics.
        :rtype: List[MetricValue]
        """
        return self._metric_values

    @metric_values.setter
    def metric_values(self, metric_values):
        """Sets the metric_values of this PerStepNamespaceMetrics.

        Optional. Metrics that are recorded for this namespace and unfused step.

        :param metric_values: The metric_values of this PerStepNamespaceMetrics.
        :type metric_values: List[MetricValue]
        """

        self._metric_values = metric_values

    @property
    def metrics_namespace(self):
        """Gets the metrics_namespace of this PerStepNamespaceMetrics.

        The namespace of these metrics on the worker.

        :return: The metrics_namespace of this PerStepNamespaceMetrics.
        :rtype: str
        """
        return self._metrics_namespace

    @metrics_namespace.setter
    def metrics_namespace(self, metrics_namespace):
        """Sets the metrics_namespace of this PerStepNamespaceMetrics.

        The namespace of these metrics on the worker.

        :param metrics_namespace: The metrics_namespace of this PerStepNamespaceMetrics.
        :type metrics_namespace: str
        """

        self._metrics_namespace = metrics_namespace

    @property
    def original_step(self):
        """Gets the original_step of this PerStepNamespaceMetrics.

        The original system name of the unfused step that these metrics are reported from.

        :return: The original_step of this PerStepNamespaceMetrics.
        :rtype: str
        """
        return self._original_step

    @original_step.setter
    def original_step(self, original_step):
        """Sets the original_step of this PerStepNamespaceMetrics.

        The original system name of the unfused step that these metrics are reported from.

        :param original_step: The original_step of this PerStepNamespaceMetrics.
        :type original_step: str
        """

        self._original_step = original_step
