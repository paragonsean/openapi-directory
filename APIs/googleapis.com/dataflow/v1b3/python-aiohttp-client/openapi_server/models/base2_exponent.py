# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Base2Exponent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_buckets: int=None, scale: int=None):
        """Base2Exponent - a model defined in OpenAPI

        :param number_of_buckets: The number_of_buckets of this Base2Exponent.
        :param scale: The scale of this Base2Exponent.
        """
        self.openapi_types = {
            'number_of_buckets': int,
            'scale': int
        }

        self.attribute_map = {
            'number_of_buckets': 'numberOfBuckets',
            'scale': 'scale'
        }

        self._number_of_buckets = number_of_buckets
        self._scale = scale

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Base2Exponent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Base2Exponent of this Base2Exponent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_buckets(self):
        """Gets the number_of_buckets of this Base2Exponent.

        Must be greater than 0.

        :return: The number_of_buckets of this Base2Exponent.
        :rtype: int
        """
        return self._number_of_buckets

    @number_of_buckets.setter
    def number_of_buckets(self, number_of_buckets):
        """Sets the number_of_buckets of this Base2Exponent.

        Must be greater than 0.

        :param number_of_buckets: The number_of_buckets of this Base2Exponent.
        :type number_of_buckets: int
        """

        self._number_of_buckets = number_of_buckets

    @property
    def scale(self):
        """Gets the scale of this Base2Exponent.

        Must be between -3 and 3. This forces the growth factor of the bucket boundaries to be between `2^(1/8)` and `256`.

        :return: The scale of this Base2Exponent.
        :rtype: int
        """
        return self._scale

    @scale.setter
    def scale(self, scale):
        """Sets the scale of this Base2Exponent.

        Must be between -3 and 3. This forces the growth factor of the bucket boundaries to be between `2^(1/8)` and `256`.

        :param scale: The scale of this Base2Exponent.
        :type scale: int
        """

        self._scale = scale
