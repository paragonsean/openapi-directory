# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Disk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disk_type: str=None, mount_point: str=None, size_gb: int=None):
        """Disk - a model defined in OpenAPI

        :param disk_type: The disk_type of this Disk.
        :param mount_point: The mount_point of this Disk.
        :param size_gb: The size_gb of this Disk.
        """
        self.openapi_types = {
            'disk_type': str,
            'mount_point': str,
            'size_gb': int
        }

        self.attribute_map = {
            'disk_type': 'diskType',
            'mount_point': 'mountPoint',
            'size_gb': 'sizeGb'
        }

        self._disk_type = disk_type
        self._mount_point = mount_point
        self._size_gb = size_gb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Disk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Disk of this Disk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disk_type(self):
        """Gets the disk_type of this Disk.

        Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in \"pd-standard\". If SSD persistent disks are available, the resource name typically ends with \"pd-ssd\". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard

        :return: The disk_type of this Disk.
        :rtype: str
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this Disk.

        Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in \"pd-standard\". If SSD persistent disks are available, the resource name typically ends with \"pd-ssd\". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard

        :param disk_type: The disk_type of this Disk.
        :type disk_type: str
        """

        self._disk_type = disk_type

    @property
    def mount_point(self):
        """Gets the mount_point of this Disk.

        Directory in a VM where disk is mounted.

        :return: The mount_point of this Disk.
        :rtype: str
        """
        return self._mount_point

    @mount_point.setter
    def mount_point(self, mount_point):
        """Sets the mount_point of this Disk.

        Directory in a VM where disk is mounted.

        :param mount_point: The mount_point of this Disk.
        :type mount_point: str
        """

        self._mount_point = mount_point

    @property
    def size_gb(self):
        """Gets the size_gb of this Disk.

        Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.

        :return: The size_gb of this Disk.
        :rtype: int
        """
        return self._size_gb

    @size_gb.setter
    def size_gb(self, size_gb):
        """Sets the size_gb of this Disk.

        Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.

        :param size_gb: The size_gb of this Disk.
        :type size_gb: int
        """

        self._size_gb = size_gb
