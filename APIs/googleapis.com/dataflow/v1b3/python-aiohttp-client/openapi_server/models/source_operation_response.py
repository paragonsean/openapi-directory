# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_get_metadata_response import SourceGetMetadataResponse
from openapi_server.models.source_split_response import SourceSplitResponse
from openapi_server import util


class SourceOperationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, get_metadata: SourceGetMetadataResponse=None, split: SourceSplitResponse=None):
        """SourceOperationResponse - a model defined in OpenAPI

        :param get_metadata: The get_metadata of this SourceOperationResponse.
        :param split: The split of this SourceOperationResponse.
        """
        self.openapi_types = {
            'get_metadata': SourceGetMetadataResponse,
            'split': SourceSplitResponse
        }

        self.attribute_map = {
            'get_metadata': 'getMetadata',
            'split': 'split'
        }

        self._get_metadata = get_metadata
        self._split = split

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceOperationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceOperationResponse of this SourceOperationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def get_metadata(self):
        """Gets the get_metadata of this SourceOperationResponse.


        :return: The get_metadata of this SourceOperationResponse.
        :rtype: SourceGetMetadataResponse
        """
        return self._get_metadata

    @get_metadata.setter
    def get_metadata(self, get_metadata):
        """Sets the get_metadata of this SourceOperationResponse.


        :param get_metadata: The get_metadata of this SourceOperationResponse.
        :type get_metadata: SourceGetMetadataResponse
        """

        self._get_metadata = get_metadata

    @property
    def split(self):
        """Gets the split of this SourceOperationResponse.


        :return: The split of this SourceOperationResponse.
        :rtype: SourceSplitResponse
        """
        return self._split

    @split.setter
    def split(self, split):
        """Sets the split of this SourceOperationResponse.


        :param split: The split of this SourceOperationResponse.
        :type split: SourceSplitResponse
        """

        self._split = split
