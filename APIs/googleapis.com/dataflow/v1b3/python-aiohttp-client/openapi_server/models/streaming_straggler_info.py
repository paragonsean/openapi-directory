# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamingStragglerInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_watermark_lag: str=None, end_time: str=None, start_time: str=None, system_watermark_lag: str=None, worker_name: str=None):
        """StreamingStragglerInfo - a model defined in OpenAPI

        :param data_watermark_lag: The data_watermark_lag of this StreamingStragglerInfo.
        :param end_time: The end_time of this StreamingStragglerInfo.
        :param start_time: The start_time of this StreamingStragglerInfo.
        :param system_watermark_lag: The system_watermark_lag of this StreamingStragglerInfo.
        :param worker_name: The worker_name of this StreamingStragglerInfo.
        """
        self.openapi_types = {
            'data_watermark_lag': str,
            'end_time': str,
            'start_time': str,
            'system_watermark_lag': str,
            'worker_name': str
        }

        self.attribute_map = {
            'data_watermark_lag': 'dataWatermarkLag',
            'end_time': 'endTime',
            'start_time': 'startTime',
            'system_watermark_lag': 'systemWatermarkLag',
            'worker_name': 'workerName'
        }

        self._data_watermark_lag = data_watermark_lag
        self._end_time = end_time
        self._start_time = start_time
        self._system_watermark_lag = system_watermark_lag
        self._worker_name = worker_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingStragglerInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingStragglerInfo of this StreamingStragglerInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_watermark_lag(self):
        """Gets the data_watermark_lag of this StreamingStragglerInfo.

        The event-time watermark lag at the time of the straggler detection.

        :return: The data_watermark_lag of this StreamingStragglerInfo.
        :rtype: str
        """
        return self._data_watermark_lag

    @data_watermark_lag.setter
    def data_watermark_lag(self, data_watermark_lag):
        """Sets the data_watermark_lag of this StreamingStragglerInfo.

        The event-time watermark lag at the time of the straggler detection.

        :param data_watermark_lag: The data_watermark_lag of this StreamingStragglerInfo.
        :type data_watermark_lag: str
        """

        self._data_watermark_lag = data_watermark_lag

    @property
    def end_time(self):
        """Gets the end_time of this StreamingStragglerInfo.

        End time of this straggler.

        :return: The end_time of this StreamingStragglerInfo.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this StreamingStragglerInfo.

        End time of this straggler.

        :param end_time: The end_time of this StreamingStragglerInfo.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def start_time(self):
        """Gets the start_time of this StreamingStragglerInfo.

        Start time of this straggler.

        :return: The start_time of this StreamingStragglerInfo.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this StreamingStragglerInfo.

        Start time of this straggler.

        :param start_time: The start_time of this StreamingStragglerInfo.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def system_watermark_lag(self):
        """Gets the system_watermark_lag of this StreamingStragglerInfo.

        The system watermark lag at the time of the straggler detection.

        :return: The system_watermark_lag of this StreamingStragglerInfo.
        :rtype: str
        """
        return self._system_watermark_lag

    @system_watermark_lag.setter
    def system_watermark_lag(self, system_watermark_lag):
        """Sets the system_watermark_lag of this StreamingStragglerInfo.

        The system watermark lag at the time of the straggler detection.

        :param system_watermark_lag: The system_watermark_lag of this StreamingStragglerInfo.
        :type system_watermark_lag: str
        """

        self._system_watermark_lag = system_watermark_lag

    @property
    def worker_name(self):
        """Gets the worker_name of this StreamingStragglerInfo.

        Name of the worker where the straggler was detected.

        :return: The worker_name of this StreamingStragglerInfo.
        :rtype: str
        """
        return self._worker_name

    @worker_name.setter
    def worker_name(self, worker_name):
        """Sets the worker_name of this StreamingStragglerInfo.

        Name of the worker where the straggler was detected.

        :param worker_name: The worker_name of this StreamingStragglerInfo.
        :type worker_name: str
        """

        self._worker_name = worker_name
