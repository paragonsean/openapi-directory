/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Disk model module.
 * @module model/Disk
 * @version v1b3
 */
class Disk {
    /**
     * Constructs a new <code>Disk</code>.
     * Describes the data disk used by a workflow job.
     * @alias module:model/Disk
     */
    constructor() { 
        
        Disk.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Disk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Disk} obj Optional instance to populate.
     * @return {module:model/Disk} The populated <code>Disk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Disk();

            if (data.hasOwnProperty('diskType')) {
                obj['diskType'] = ApiClient.convertToType(data['diskType'], 'String');
            }
            if (data.hasOwnProperty('mountPoint')) {
                obj['mountPoint'] = ApiClient.convertToType(data['mountPoint'], 'String');
            }
            if (data.hasOwnProperty('sizeGb')) {
                obj['sizeGb'] = ApiClient.convertToType(data['sizeGb'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Disk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Disk</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['diskType'] && !(typeof data['diskType'] === 'string' || data['diskType'] instanceof String)) {
            throw new Error("Expected the field `diskType` to be a primitive type in the JSON string but got " + data['diskType']);
        }
        // ensure the json data is a string
        if (data['mountPoint'] && !(typeof data['mountPoint'] === 'string' || data['mountPoint'] instanceof String)) {
            throw new Error("Expected the field `mountPoint` to be a primitive type in the JSON string but got " + data['mountPoint']);
        }

        return true;
    }


}



/**
 * Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in \"pd-standard\". If SSD persistent disks are available, the resource name typically ends with \"pd-ssd\". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard
 * @member {String} diskType
 */
Disk.prototype['diskType'] = undefined;

/**
 * Directory in a VM where disk is mounted.
 * @member {String} mountPoint
 */
Disk.prototype['mountPoint'] = undefined;

/**
 * Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.
 * @member {Number} sizeGb
 */
Disk.prototype['sizeGb'] = undefined;






export default Disk;

