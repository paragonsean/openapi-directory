/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataflowHistogramValue from './DataflowHistogramValue';

/**
 * The MetricValue model module.
 * @module model/MetricValue
 * @version v1b3
 */
class MetricValue {
    /**
     * Constructs a new <code>MetricValue</code>.
     * The value of a metric along with its name and labels.
     * @alias module:model/MetricValue
     */
    constructor() { 
        
        MetricValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricValue} obj Optional instance to populate.
     * @return {module:model/MetricValue} The populated <code>MetricValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricValue();

            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('metricLabels')) {
                obj['metricLabels'] = ApiClient.convertToType(data['metricLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('valueHistogram')) {
                obj['valueHistogram'] = DataflowHistogramValue.constructFromObject(data['valueHistogram']);
            }
            if (data.hasOwnProperty('valueInt64')) {
                obj['valueInt64'] = ApiClient.convertToType(data['valueInt64'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['metric'] && !(typeof data['metric'] === 'string' || data['metric'] instanceof String)) {
            throw new Error("Expected the field `metric` to be a primitive type in the JSON string but got " + data['metric']);
        }
        // validate the optional field `valueHistogram`
        if (data['valueHistogram']) { // data not null
          DataflowHistogramValue.validateJSON(data['valueHistogram']);
        }
        // ensure the json data is a string
        if (data['valueInt64'] && !(typeof data['valueInt64'] === 'string' || data['valueInt64'] instanceof String)) {
            throw new Error("Expected the field `valueInt64` to be a primitive type in the JSON string but got " + data['valueInt64']);
        }

        return true;
    }


}



/**
 * Base name for this metric.
 * @member {String} metric
 */
MetricValue.prototype['metric'] = undefined;

/**
 * Optional. Set of metric labels for this metric.
 * @member {Object.<String, String>} metricLabels
 */
MetricValue.prototype['metricLabels'] = undefined;

/**
 * @member {module:model/DataflowHistogramValue} valueHistogram
 */
MetricValue.prototype['valueHistogram'] = undefined;

/**
 * Integer value of this metric.
 * @member {String} valueInt64
 */
MetricValue.prototype['valueInt64'] = undefined;






export default MetricValue;

