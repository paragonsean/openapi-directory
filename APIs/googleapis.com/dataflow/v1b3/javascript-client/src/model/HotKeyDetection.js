/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HotKeyDetection model module.
 * @module model/HotKeyDetection
 * @version v1b3
 */
class HotKeyDetection {
    /**
     * Constructs a new <code>HotKeyDetection</code>.
     * Proto describing a hot key detected on a given WorkItem.
     * @alias module:model/HotKeyDetection
     */
    constructor() { 
        
        HotKeyDetection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HotKeyDetection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HotKeyDetection} obj Optional instance to populate.
     * @return {module:model/HotKeyDetection} The populated <code>HotKeyDetection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HotKeyDetection();

            if (data.hasOwnProperty('hotKeyAge')) {
                obj['hotKeyAge'] = ApiClient.convertToType(data['hotKeyAge'], 'String');
            }
            if (data.hasOwnProperty('systemName')) {
                obj['systemName'] = ApiClient.convertToType(data['systemName'], 'String');
            }
            if (data.hasOwnProperty('userStepName')) {
                obj['userStepName'] = ApiClient.convertToType(data['userStepName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HotKeyDetection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HotKeyDetection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hotKeyAge'] && !(typeof data['hotKeyAge'] === 'string' || data['hotKeyAge'] instanceof String)) {
            throw new Error("Expected the field `hotKeyAge` to be a primitive type in the JSON string but got " + data['hotKeyAge']);
        }
        // ensure the json data is a string
        if (data['systemName'] && !(typeof data['systemName'] === 'string' || data['systemName'] instanceof String)) {
            throw new Error("Expected the field `systemName` to be a primitive type in the JSON string but got " + data['systemName']);
        }
        // ensure the json data is a string
        if (data['userStepName'] && !(typeof data['userStepName'] === 'string' || data['userStepName'] instanceof String)) {
            throw new Error("Expected the field `userStepName` to be a primitive type in the JSON string but got " + data['userStepName']);
        }

        return true;
    }


}



/**
 * The age of the hot key measured from when it was first detected.
 * @member {String} hotKeyAge
 */
HotKeyDetection.prototype['hotKeyAge'] = undefined;

/**
 * System-defined name of the step containing this hot key. Unique across the workflow.
 * @member {String} systemName
 */
HotKeyDetection.prototype['systemName'] = undefined;

/**
 * User-provided name of the step that contains this hot key.
 * @member {String} userStepName
 */
HotKeyDetection.prototype['userStepName'] = undefined;






export default HotKeyDetection;

