/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricValue from './MetricValue';

/**
 * The PerStepNamespaceMetrics model module.
 * @module model/PerStepNamespaceMetrics
 * @version v1b3
 */
class PerStepNamespaceMetrics {
    /**
     * Constructs a new <code>PerStepNamespaceMetrics</code>.
     * Metrics for a particular unfused step and namespace. A metric is uniquely identified by the &#x60;metrics_namespace&#x60;, &#x60;original_step&#x60;, &#x60;metric name&#x60; and &#x60;metric_labels&#x60;.
     * @alias module:model/PerStepNamespaceMetrics
     */
    constructor() { 
        
        PerStepNamespaceMetrics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerStepNamespaceMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerStepNamespaceMetrics} obj Optional instance to populate.
     * @return {module:model/PerStepNamespaceMetrics} The populated <code>PerStepNamespaceMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerStepNamespaceMetrics();

            if (data.hasOwnProperty('metricValues')) {
                obj['metricValues'] = ApiClient.convertToType(data['metricValues'], [MetricValue]);
            }
            if (data.hasOwnProperty('metricsNamespace')) {
                obj['metricsNamespace'] = ApiClient.convertToType(data['metricsNamespace'], 'String');
            }
            if (data.hasOwnProperty('originalStep')) {
                obj['originalStep'] = ApiClient.convertToType(data['originalStep'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerStepNamespaceMetrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerStepNamespaceMetrics</code>.
     */
    static validateJSON(data) {
        if (data['metricValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metricValues'])) {
                throw new Error("Expected the field `metricValues` to be an array in the JSON data but got " + data['metricValues']);
            }
            // validate the optional field `metricValues` (array)
            for (const item of data['metricValues']) {
                MetricValue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['metricsNamespace'] && !(typeof data['metricsNamespace'] === 'string' || data['metricsNamespace'] instanceof String)) {
            throw new Error("Expected the field `metricsNamespace` to be a primitive type in the JSON string but got " + data['metricsNamespace']);
        }
        // ensure the json data is a string
        if (data['originalStep'] && !(typeof data['originalStep'] === 'string' || data['originalStep'] instanceof String)) {
            throw new Error("Expected the field `originalStep` to be a primitive type in the JSON string but got " + data['originalStep']);
        }

        return true;
    }


}



/**
 * Optional. Metrics that are recorded for this namespace and unfused step.
 * @member {Array.<module:model/MetricValue>} metricValues
 */
PerStepNamespaceMetrics.prototype['metricValues'] = undefined;

/**
 * The namespace of these metrics on the worker.
 * @member {String} metricsNamespace
 */
PerStepNamespaceMetrics.prototype['metricsNamespace'] = undefined;

/**
 * The original system name of the unfused step that these metrics are reported from.
 * @member {String} originalStep
 */
PerStepNamespaceMetrics.prototype['originalStep'] = undefined;






export default PerStepNamespaceMetrics;

