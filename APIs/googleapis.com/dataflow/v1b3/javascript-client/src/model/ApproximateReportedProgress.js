/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Position from './Position';
import ReportedParallelism from './ReportedParallelism';

/**
 * The ApproximateReportedProgress model module.
 * @module model/ApproximateReportedProgress
 * @version v1b3
 */
class ApproximateReportedProgress {
    /**
     * Constructs a new <code>ApproximateReportedProgress</code>.
     * A progress measurement of a WorkItem by a worker.
     * @alias module:model/ApproximateReportedProgress
     */
    constructor() { 
        
        ApproximateReportedProgress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApproximateReportedProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApproximateReportedProgress} obj Optional instance to populate.
     * @return {module:model/ApproximateReportedProgress} The populated <code>ApproximateReportedProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApproximateReportedProgress();

            if (data.hasOwnProperty('consumedParallelism')) {
                obj['consumedParallelism'] = ReportedParallelism.constructFromObject(data['consumedParallelism']);
            }
            if (data.hasOwnProperty('fractionConsumed')) {
                obj['fractionConsumed'] = ApiClient.convertToType(data['fractionConsumed'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = Position.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('remainingParallelism')) {
                obj['remainingParallelism'] = ReportedParallelism.constructFromObject(data['remainingParallelism']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApproximateReportedProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApproximateReportedProgress</code>.
     */
    static validateJSON(data) {
        // validate the optional field `consumedParallelism`
        if (data['consumedParallelism']) { // data not null
          ReportedParallelism.validateJSON(data['consumedParallelism']);
        }
        // validate the optional field `position`
        if (data['position']) { // data not null
          Position.validateJSON(data['position']);
        }
        // validate the optional field `remainingParallelism`
        if (data['remainingParallelism']) { // data not null
          ReportedParallelism.validateJSON(data['remainingParallelism']);
        }

        return true;
    }


}



/**
 * @member {module:model/ReportedParallelism} consumedParallelism
 */
ApproximateReportedProgress.prototype['consumedParallelism'] = undefined;

/**
 * Completion as fraction of the input consumed, from 0.0 (beginning, nothing consumed), to 1.0 (end of the input, entire input consumed).
 * @member {Number} fractionConsumed
 */
ApproximateReportedProgress.prototype['fractionConsumed'] = undefined;

/**
 * @member {module:model/Position} position
 */
ApproximateReportedProgress.prototype['position'] = undefined;

/**
 * @member {module:model/ReportedParallelism} remainingParallelism
 */
ApproximateReportedProgress.prototype['remainingParallelism'] = undefined;






export default ApproximateReportedProgress;

