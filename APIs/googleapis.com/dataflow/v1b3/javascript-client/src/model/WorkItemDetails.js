/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricUpdate from './MetricUpdate';
import ProgressTimeseries from './ProgressTimeseries';
import StragglerInfo from './StragglerInfo';

/**
 * The WorkItemDetails model module.
 * @module model/WorkItemDetails
 * @version v1b3
 */
class WorkItemDetails {
    /**
     * Constructs a new <code>WorkItemDetails</code>.
     * Information about an individual work item execution.
     * @alias module:model/WorkItemDetails
     */
    constructor() { 
        
        WorkItemDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkItemDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkItemDetails} obj Optional instance to populate.
     * @return {module:model/WorkItemDetails} The populated <code>WorkItemDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkItemDetails();

            if (data.hasOwnProperty('attemptId')) {
                obj['attemptId'] = ApiClient.convertToType(data['attemptId'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [MetricUpdate]);
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ProgressTimeseries.constructFromObject(data['progress']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stragglerInfo')) {
                obj['stragglerInfo'] = StragglerInfo.constructFromObject(data['stragglerInfo']);
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkItemDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkItemDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['attemptId'] && !(typeof data['attemptId'] === 'string' || data['attemptId'] instanceof String)) {
            throw new Error("Expected the field `attemptId` to be a primitive type in the JSON string but got " + data['attemptId']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                MetricUpdate.validateJSON(item);
            };
        }
        // validate the optional field `progress`
        if (data['progress']) { // data not null
          ProgressTimeseries.validateJSON(data['progress']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `stragglerInfo`
        if (data['stragglerInfo']) { // data not null
          StragglerInfo.validateJSON(data['stragglerInfo']);
        }
        // ensure the json data is a string
        if (data['taskId'] && !(typeof data['taskId'] === 'string' || data['taskId'] instanceof String)) {
            throw new Error("Expected the field `taskId` to be a primitive type in the JSON string but got " + data['taskId']);
        }

        return true;
    }


}



/**
 * Attempt ID of this work item
 * @member {String} attemptId
 */
WorkItemDetails.prototype['attemptId'] = undefined;

/**
 * End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time.
 * @member {String} endTime
 */
WorkItemDetails.prototype['endTime'] = undefined;

/**
 * Metrics for this work item.
 * @member {Array.<module:model/MetricUpdate>} metrics
 */
WorkItemDetails.prototype['metrics'] = undefined;

/**
 * @member {module:model/ProgressTimeseries} progress
 */
WorkItemDetails.prototype['progress'] = undefined;

/**
 * Start time of this work item attempt.
 * @member {String} startTime
 */
WorkItemDetails.prototype['startTime'] = undefined;

/**
 * State of this work item.
 * @member {module:model/WorkItemDetails.StateEnum} state
 */
WorkItemDetails.prototype['state'] = undefined;

/**
 * @member {module:model/StragglerInfo} stragglerInfo
 */
WorkItemDetails.prototype['stragglerInfo'] = undefined;

/**
 * Name of this work item.
 * @member {String} taskId
 */
WorkItemDetails.prototype['taskId'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
WorkItemDetails['StateEnum'] = {

    /**
     * value: "EXECUTION_STATE_UNKNOWN"
     * @const
     */
    "UNKNOWN": "EXECUTION_STATE_UNKNOWN",

    /**
     * value: "EXECUTION_STATE_NOT_STARTED"
     * @const
     */
    "NOT_STARTED": "EXECUTION_STATE_NOT_STARTED",

    /**
     * value: "EXECUTION_STATE_RUNNING"
     * @const
     */
    "RUNNING": "EXECUTION_STATE_RUNNING",

    /**
     * value: "EXECUTION_STATE_SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "EXECUTION_STATE_SUCCEEDED",

    /**
     * value: "EXECUTION_STATE_FAILED"
     * @const
     */
    "FAILED": "EXECUTION_STATE_FAILED",

    /**
     * value: "EXECUTION_STATE_CANCELLED"
     * @const
     */
    "CANCELLED": "EXECUTION_STATE_CANCELLED"
};



export default WorkItemDetails;

