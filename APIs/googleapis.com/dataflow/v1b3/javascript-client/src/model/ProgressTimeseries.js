/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Point from './Point';

/**
 * The ProgressTimeseries model module.
 * @module model/ProgressTimeseries
 * @version v1b3
 */
class ProgressTimeseries {
    /**
     * Constructs a new <code>ProgressTimeseries</code>.
     * Information about the progress of some component of job execution.
     * @alias module:model/ProgressTimeseries
     */
    constructor() { 
        
        ProgressTimeseries.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProgressTimeseries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProgressTimeseries} obj Optional instance to populate.
     * @return {module:model/ProgressTimeseries} The populated <code>ProgressTimeseries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProgressTimeseries();

            if (data.hasOwnProperty('currentProgress')) {
                obj['currentProgress'] = ApiClient.convertToType(data['currentProgress'], 'Number');
            }
            if (data.hasOwnProperty('dataPoints')) {
                obj['dataPoints'] = ApiClient.convertToType(data['dataPoints'], [Point]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProgressTimeseries</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProgressTimeseries</code>.
     */
    static validateJSON(data) {
        if (data['dataPoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dataPoints'])) {
                throw new Error("Expected the field `dataPoints` to be an array in the JSON data but got " + data['dataPoints']);
            }
            // validate the optional field `dataPoints` (array)
            for (const item of data['dataPoints']) {
                Point.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The current progress of the component, in the range [0,1].
 * @member {Number} currentProgress
 */
ProgressTimeseries.prototype['currentProgress'] = undefined;

/**
 * History of progress for the component. Points are sorted by time.
 * @member {Array.<module:model/Point>} dataPoints
 */
ProgressTimeseries.prototype['dataPoints'] = undefined;






export default ProgressTimeseries;

