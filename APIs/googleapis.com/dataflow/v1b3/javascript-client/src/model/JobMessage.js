/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobMessage model module.
 * @module model/JobMessage
 * @version v1b3
 */
class JobMessage {
    /**
     * Constructs a new <code>JobMessage</code>.
     * A particular message pertaining to a Dataflow job.
     * @alias module:model/JobMessage
     */
    constructor() { 
        
        JobMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobMessage} obj Optional instance to populate.
     * @return {module:model/JobMessage} The populated <code>JobMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobMessage();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('messageImportance')) {
                obj['messageImportance'] = ApiClient.convertToType(data['messageImportance'], 'String');
            }
            if (data.hasOwnProperty('messageText')) {
                obj['messageText'] = ApiClient.convertToType(data['messageText'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['messageImportance'] && !(typeof data['messageImportance'] === 'string' || data['messageImportance'] instanceof String)) {
            throw new Error("Expected the field `messageImportance` to be a primitive type in the JSON string but got " + data['messageImportance']);
        }
        // ensure the json data is a string
        if (data['messageText'] && !(typeof data['messageText'] === 'string' || data['messageText'] instanceof String)) {
            throw new Error("Expected the field `messageText` to be a primitive type in the JSON string but got " + data['messageText']);
        }
        // ensure the json data is a string
        if (data['time'] && !(typeof data['time'] === 'string' || data['time'] instanceof String)) {
            throw new Error("Expected the field `time` to be a primitive type in the JSON string but got " + data['time']);
        }

        return true;
    }


}



/**
 * Deprecated.
 * @member {String} id
 */
JobMessage.prototype['id'] = undefined;

/**
 * Importance level of the message.
 * @member {module:model/JobMessage.MessageImportanceEnum} messageImportance
 */
JobMessage.prototype['messageImportance'] = undefined;

/**
 * The text of the message.
 * @member {String} messageText
 */
JobMessage.prototype['messageText'] = undefined;

/**
 * The timestamp of the message.
 * @member {String} time
 */
JobMessage.prototype['time'] = undefined;





/**
 * Allowed values for the <code>messageImportance</code> property.
 * @enum {String}
 * @readonly
 */
JobMessage['MessageImportanceEnum'] = {

    /**
     * value: "JOB_MESSAGE_IMPORTANCE_UNKNOWN"
     * @const
     */
    "IMPORTANCE_UNKNOWN": "JOB_MESSAGE_IMPORTANCE_UNKNOWN",

    /**
     * value: "JOB_MESSAGE_DEBUG"
     * @const
     */
    "DEBUG": "JOB_MESSAGE_DEBUG",

    /**
     * value: "JOB_MESSAGE_DETAILED"
     * @const
     */
    "DETAILED": "JOB_MESSAGE_DETAILED",

    /**
     * value: "JOB_MESSAGE_BASIC"
     * @const
     */
    "BASIC": "JOB_MESSAGE_BASIC",

    /**
     * value: "JOB_MESSAGE_WARNING"
     * @const
     */
    "WARNING": "JOB_MESSAGE_WARNING",

    /**
     * value: "JOB_MESSAGE_ERROR"
     * @const
     */
    "ERROR": "JOB_MESSAGE_ERROR"
};



export default JobMessage;

