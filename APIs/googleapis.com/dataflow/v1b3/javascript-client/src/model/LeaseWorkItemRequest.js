/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LeaseWorkItemRequest model module.
 * @module model/LeaseWorkItemRequest
 * @version v1b3
 */
class LeaseWorkItemRequest {
    /**
     * Constructs a new <code>LeaseWorkItemRequest</code>.
     * Request to lease WorkItems.
     * @alias module:model/LeaseWorkItemRequest
     */
    constructor() { 
        
        LeaseWorkItemRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LeaseWorkItemRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LeaseWorkItemRequest} obj Optional instance to populate.
     * @return {module:model/LeaseWorkItemRequest} The populated <code>LeaseWorkItemRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeaseWorkItemRequest();

            if (data.hasOwnProperty('currentWorkerTime')) {
                obj['currentWorkerTime'] = ApiClient.convertToType(data['currentWorkerTime'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('requestedLeaseDuration')) {
                obj['requestedLeaseDuration'] = ApiClient.convertToType(data['requestedLeaseDuration'], 'String');
            }
            if (data.hasOwnProperty('unifiedWorkerRequest')) {
                obj['unifiedWorkerRequest'] = ApiClient.convertToType(data['unifiedWorkerRequest'], {'String': Object});
            }
            if (data.hasOwnProperty('workItemTypes')) {
                obj['workItemTypes'] = ApiClient.convertToType(data['workItemTypes'], ['String']);
            }
            if (data.hasOwnProperty('workerCapabilities')) {
                obj['workerCapabilities'] = ApiClient.convertToType(data['workerCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('workerId')) {
                obj['workerId'] = ApiClient.convertToType(data['workerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LeaseWorkItemRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LeaseWorkItemRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currentWorkerTime'] && !(typeof data['currentWorkerTime'] === 'string' || data['currentWorkerTime'] instanceof String)) {
            throw new Error("Expected the field `currentWorkerTime` to be a primitive type in the JSON string but got " + data['currentWorkerTime']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['requestedLeaseDuration'] && !(typeof data['requestedLeaseDuration'] === 'string' || data['requestedLeaseDuration'] instanceof String)) {
            throw new Error("Expected the field `requestedLeaseDuration` to be a primitive type in the JSON string but got " + data['requestedLeaseDuration']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['workItemTypes'])) {
            throw new Error("Expected the field `workItemTypes` to be an array in the JSON data but got " + data['workItemTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['workerCapabilities'])) {
            throw new Error("Expected the field `workerCapabilities` to be an array in the JSON data but got " + data['workerCapabilities']);
        }
        // ensure the json data is a string
        if (data['workerId'] && !(typeof data['workerId'] === 'string' || data['workerId'] instanceof String)) {
            throw new Error("Expected the field `workerId` to be a primitive type in the JSON string but got " + data['workerId']);
        }

        return true;
    }


}



/**
 * The current timestamp at the worker.
 * @member {String} currentWorkerTime
 */
LeaseWorkItemRequest.prototype['currentWorkerTime'] = undefined;

/**
 * The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job.
 * @member {String} location
 */
LeaseWorkItemRequest.prototype['location'] = undefined;

/**
 * The initial lease period.
 * @member {String} requestedLeaseDuration
 */
LeaseWorkItemRequest.prototype['requestedLeaseDuration'] = undefined;

/**
 * Untranslated bag-of-bytes WorkRequest from UnifiedWorker.
 * @member {Object.<String, Object>} unifiedWorkerRequest
 */
LeaseWorkItemRequest.prototype['unifiedWorkerRequest'] = undefined;

/**
 * Filter for WorkItem type.
 * @member {Array.<String>} workItemTypes
 */
LeaseWorkItemRequest.prototype['workItemTypes'] = undefined;

/**
 * Worker capabilities. WorkItems might be limited to workers with specific capabilities.
 * @member {Array.<String>} workerCapabilities
 */
LeaseWorkItemRequest.prototype['workerCapabilities'] = undefined;

/**
 * Identifies the worker leasing work -- typically the ID of the virtual machine running the worker.
 * @member {String} workerId
 */
LeaseWorkItemRequest.prototype['workerId'] = undefined;






export default LeaseWorkItemRequest;

