/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StreamingScalingReport model module.
 * @module model/StreamingScalingReport
 * @version v1b3
 */
class StreamingScalingReport {
    /**
     * Constructs a new <code>StreamingScalingReport</code>.
     * Contains per-user worker telemetry used in streaming autoscaling.
     * @alias module:model/StreamingScalingReport
     */
    constructor() { 
        
        StreamingScalingReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StreamingScalingReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamingScalingReport} obj Optional instance to populate.
     * @return {module:model/StreamingScalingReport} The populated <code>StreamingScalingReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamingScalingReport();

            if (data.hasOwnProperty('activeBundleCount')) {
                obj['activeBundleCount'] = ApiClient.convertToType(data['activeBundleCount'], 'Number');
            }
            if (data.hasOwnProperty('activeThreadCount')) {
                obj['activeThreadCount'] = ApiClient.convertToType(data['activeThreadCount'], 'Number');
            }
            if (data.hasOwnProperty('maximumBundleCount')) {
                obj['maximumBundleCount'] = ApiClient.convertToType(data['maximumBundleCount'], 'Number');
            }
            if (data.hasOwnProperty('maximumBytes')) {
                obj['maximumBytes'] = ApiClient.convertToType(data['maximumBytes'], 'String');
            }
            if (data.hasOwnProperty('maximumBytesCount')) {
                obj['maximumBytesCount'] = ApiClient.convertToType(data['maximumBytesCount'], 'Number');
            }
            if (data.hasOwnProperty('maximumThreadCount')) {
                obj['maximumThreadCount'] = ApiClient.convertToType(data['maximumThreadCount'], 'Number');
            }
            if (data.hasOwnProperty('outstandingBundleCount')) {
                obj['outstandingBundleCount'] = ApiClient.convertToType(data['outstandingBundleCount'], 'Number');
            }
            if (data.hasOwnProperty('outstandingBytes')) {
                obj['outstandingBytes'] = ApiClient.convertToType(data['outstandingBytes'], 'String');
            }
            if (data.hasOwnProperty('outstandingBytesCount')) {
                obj['outstandingBytesCount'] = ApiClient.convertToType(data['outstandingBytesCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamingScalingReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamingScalingReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['maximumBytes'] && !(typeof data['maximumBytes'] === 'string' || data['maximumBytes'] instanceof String)) {
            throw new Error("Expected the field `maximumBytes` to be a primitive type in the JSON string but got " + data['maximumBytes']);
        }
        // ensure the json data is a string
        if (data['outstandingBytes'] && !(typeof data['outstandingBytes'] === 'string' || data['outstandingBytes'] instanceof String)) {
            throw new Error("Expected the field `outstandingBytes` to be a primitive type in the JSON string but got " + data['outstandingBytes']);
        }

        return true;
    }


}



/**
 * @member {Number} activeBundleCount
 */
StreamingScalingReport.prototype['activeBundleCount'] = undefined;

/**
 * Current acive thread count.
 * @member {Number} activeThreadCount
 */
StreamingScalingReport.prototype['activeThreadCount'] = undefined;

/**
 * Maximum bundle count.
 * @member {Number} maximumBundleCount
 */
StreamingScalingReport.prototype['maximumBundleCount'] = undefined;

/**
 * Maximum bytes.
 * @member {String} maximumBytes
 */
StreamingScalingReport.prototype['maximumBytes'] = undefined;

/**
 * @member {Number} maximumBytesCount
 */
StreamingScalingReport.prototype['maximumBytesCount'] = undefined;

/**
 * Maximum thread count limit.
 * @member {Number} maximumThreadCount
 */
StreamingScalingReport.prototype['maximumThreadCount'] = undefined;

/**
 * Current outstanding bundle count.
 * @member {Number} outstandingBundleCount
 */
StreamingScalingReport.prototype['outstandingBundleCount'] = undefined;

/**
 * Current outstanding bytes.
 * @member {String} outstandingBytes
 */
StreamingScalingReport.prototype['outstandingBytes'] = undefined;

/**
 * @member {Number} outstandingBytesCount
 */
StreamingScalingReport.prototype['outstandingBytesCount'] = undefined;






export default StreamingScalingReport;

