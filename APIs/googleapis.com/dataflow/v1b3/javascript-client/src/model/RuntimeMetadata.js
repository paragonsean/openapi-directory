/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParameterMetadata from './ParameterMetadata';
import SDKInfo from './SDKInfo';

/**
 * The RuntimeMetadata model module.
 * @module model/RuntimeMetadata
 * @version v1b3
 */
class RuntimeMetadata {
    /**
     * Constructs a new <code>RuntimeMetadata</code>.
     * RuntimeMetadata describing a runtime environment.
     * @alias module:model/RuntimeMetadata
     */
    constructor() { 
        
        RuntimeMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuntimeMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuntimeMetadata} obj Optional instance to populate.
     * @return {module:model/RuntimeMetadata} The populated <code>RuntimeMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuntimeMetadata();

            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [ParameterMetadata]);
            }
            if (data.hasOwnProperty('sdkInfo')) {
                obj['sdkInfo'] = SDKInfo.constructFromObject(data['sdkInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuntimeMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuntimeMetadata</code>.
     */
    static validateJSON(data) {
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                ParameterMetadata.validateJSON(item);
            };
        }
        // validate the optional field `sdkInfo`
        if (data['sdkInfo']) { // data not null
          SDKInfo.validateJSON(data['sdkInfo']);
        }

        return true;
    }


}



/**
 * The parameters for the template.
 * @member {Array.<module:model/ParameterMetadata>} parameters
 */
RuntimeMetadata.prototype['parameters'] = undefined;

/**
 * @member {module:model/SDKInfo} sdkInfo
 */
RuntimeMetadata.prototype['sdkInfo'] = undefined;






export default RuntimeMetadata;

