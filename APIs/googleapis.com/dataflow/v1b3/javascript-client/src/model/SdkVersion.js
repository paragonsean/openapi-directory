/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SdkBug from './SdkBug';

/**
 * The SdkVersion model module.
 * @module model/SdkVersion
 * @version v1b3
 */
class SdkVersion {
    /**
     * Constructs a new <code>SdkVersion</code>.
     * The version of the SDK used to run the job.
     * @alias module:model/SdkVersion
     */
    constructor() { 
        
        SdkVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SdkVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SdkVersion} obj Optional instance to populate.
     * @return {module:model/SdkVersion} The populated <code>SdkVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SdkVersion();

            if (data.hasOwnProperty('bugs')) {
                obj['bugs'] = ApiClient.convertToType(data['bugs'], [SdkBug]);
            }
            if (data.hasOwnProperty('sdkSupportStatus')) {
                obj['sdkSupportStatus'] = ApiClient.convertToType(data['sdkSupportStatus'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('versionDisplayName')) {
                obj['versionDisplayName'] = ApiClient.convertToType(data['versionDisplayName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SdkVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SdkVersion</code>.
     */
    static validateJSON(data) {
        if (data['bugs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bugs'])) {
                throw new Error("Expected the field `bugs` to be an array in the JSON data but got " + data['bugs']);
            }
            // validate the optional field `bugs` (array)
            for (const item of data['bugs']) {
                SdkBug.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sdkSupportStatus'] && !(typeof data['sdkSupportStatus'] === 'string' || data['sdkSupportStatus'] instanceof String)) {
            throw new Error("Expected the field `sdkSupportStatus` to be a primitive type in the JSON string but got " + data['sdkSupportStatus']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['versionDisplayName'] && !(typeof data['versionDisplayName'] === 'string' || data['versionDisplayName'] instanceof String)) {
            throw new Error("Expected the field `versionDisplayName` to be a primitive type in the JSON string but got " + data['versionDisplayName']);
        }

        return true;
    }


}



/**
 * Output only. Known bugs found in this SDK version.
 * @member {Array.<module:model/SdkBug>} bugs
 */
SdkVersion.prototype['bugs'] = undefined;

/**
 * The support status for this SDK version.
 * @member {module:model/SdkVersion.SdkSupportStatusEnum} sdkSupportStatus
 */
SdkVersion.prototype['sdkSupportStatus'] = undefined;

/**
 * The version of the SDK used to run the job.
 * @member {String} version
 */
SdkVersion.prototype['version'] = undefined;

/**
 * A readable string describing the version of the SDK.
 * @member {String} versionDisplayName
 */
SdkVersion.prototype['versionDisplayName'] = undefined;





/**
 * Allowed values for the <code>sdkSupportStatus</code> property.
 * @enum {String}
 * @readonly
 */
SdkVersion['SdkSupportStatusEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "SUPPORTED"
     * @const
     */
    "SUPPORTED": "SUPPORTED",

    /**
     * value: "STALE"
     * @const
     */
    "STALE": "STALE",

    /**
     * value: "DEPRECATED"
     * @const
     */
    "DEPRECATED": "DEPRECATED",

    /**
     * value: "UNSUPPORTED"
     * @const
     */
    "UNSUPPORTED": "UNSUPPORTED"
};



export default SdkVersion;

