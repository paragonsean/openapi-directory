/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Source from './Source';

/**
 * The SourceSplitShard model module.
 * @module model/SourceSplitShard
 * @version v1b3
 */
class SourceSplitShard {
    /**
     * Constructs a new <code>SourceSplitShard</code>.
     * DEPRECATED in favor of DerivedSource.
     * @alias module:model/SourceSplitShard
     */
    constructor() { 
        
        SourceSplitShard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceSplitShard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceSplitShard} obj Optional instance to populate.
     * @return {module:model/SourceSplitShard} The populated <code>SourceSplitShard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceSplitShard();

            if (data.hasOwnProperty('derivationMode')) {
                obj['derivationMode'] = ApiClient.convertToType(data['derivationMode'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = Source.constructFromObject(data['source']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceSplitShard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceSplitShard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['derivationMode'] && !(typeof data['derivationMode'] === 'string' || data['derivationMode'] instanceof String)) {
            throw new Error("Expected the field `derivationMode` to be a primitive type in the JSON string but got " + data['derivationMode']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          Source.validateJSON(data['source']);
        }

        return true;
    }


}



/**
 * DEPRECATED
 * @member {module:model/SourceSplitShard.DerivationModeEnum} derivationMode
 */
SourceSplitShard.prototype['derivationMode'] = undefined;

/**
 * @member {module:model/Source} source
 */
SourceSplitShard.prototype['source'] = undefined;





/**
 * Allowed values for the <code>derivationMode</code> property.
 * @enum {String}
 * @readonly
 */
SourceSplitShard['DerivationModeEnum'] = {

    /**
     * value: "SOURCE_DERIVATION_MODE_UNKNOWN"
     * @const
     */
    "UNKNOWN": "SOURCE_DERIVATION_MODE_UNKNOWN",

    /**
     * value: "SOURCE_DERIVATION_MODE_INDEPENDENT"
     * @const
     */
    "INDEPENDENT": "SOURCE_DERIVATION_MODE_INDEPENDENT",

    /**
     * value: "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT"
     * @const
     */
    "CHILD_OF_CURRENT": "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT",

    /**
     * value: "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
     * @const
     */
    "SIBLING_OF_CURRENT": "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
};



export default SourceSplitShard;

