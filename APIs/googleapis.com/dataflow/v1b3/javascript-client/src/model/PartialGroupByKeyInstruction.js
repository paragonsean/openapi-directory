/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstructionInput from './InstructionInput';
import SideInputInfo from './SideInputInfo';

/**
 * The PartialGroupByKeyInstruction model module.
 * @module model/PartialGroupByKeyInstruction
 * @version v1b3
 */
class PartialGroupByKeyInstruction {
    /**
     * Constructs a new <code>PartialGroupByKeyInstruction</code>.
     * An instruction that does a partial group-by-key. One input and one output.
     * @alias module:model/PartialGroupByKeyInstruction
     */
    constructor() { 
        
        PartialGroupByKeyInstruction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartialGroupByKeyInstruction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartialGroupByKeyInstruction} obj Optional instance to populate.
     * @return {module:model/PartialGroupByKeyInstruction} The populated <code>PartialGroupByKeyInstruction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartialGroupByKeyInstruction();

            if (data.hasOwnProperty('input')) {
                obj['input'] = InstructionInput.constructFromObject(data['input']);
            }
            if (data.hasOwnProperty('inputElementCodec')) {
                obj['inputElementCodec'] = ApiClient.convertToType(data['inputElementCodec'], {'String': Object});
            }
            if (data.hasOwnProperty('originalCombineValuesInputStoreName')) {
                obj['originalCombineValuesInputStoreName'] = ApiClient.convertToType(data['originalCombineValuesInputStoreName'], 'String');
            }
            if (data.hasOwnProperty('originalCombineValuesStepName')) {
                obj['originalCombineValuesStepName'] = ApiClient.convertToType(data['originalCombineValuesStepName'], 'String');
            }
            if (data.hasOwnProperty('sideInputs')) {
                obj['sideInputs'] = ApiClient.convertToType(data['sideInputs'], [SideInputInfo]);
            }
            if (data.hasOwnProperty('valueCombiningFn')) {
                obj['valueCombiningFn'] = ApiClient.convertToType(data['valueCombiningFn'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartialGroupByKeyInstruction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartialGroupByKeyInstruction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `input`
        if (data['input']) { // data not null
          InstructionInput.validateJSON(data['input']);
        }
        // ensure the json data is a string
        if (data['originalCombineValuesInputStoreName'] && !(typeof data['originalCombineValuesInputStoreName'] === 'string' || data['originalCombineValuesInputStoreName'] instanceof String)) {
            throw new Error("Expected the field `originalCombineValuesInputStoreName` to be a primitive type in the JSON string but got " + data['originalCombineValuesInputStoreName']);
        }
        // ensure the json data is a string
        if (data['originalCombineValuesStepName'] && !(typeof data['originalCombineValuesStepName'] === 'string' || data['originalCombineValuesStepName'] instanceof String)) {
            throw new Error("Expected the field `originalCombineValuesStepName` to be a primitive type in the JSON string but got " + data['originalCombineValuesStepName']);
        }
        if (data['sideInputs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sideInputs'])) {
                throw new Error("Expected the field `sideInputs` to be an array in the JSON data but got " + data['sideInputs']);
            }
            // validate the optional field `sideInputs` (array)
            for (const item of data['sideInputs']) {
                SideInputInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/InstructionInput} input
 */
PartialGroupByKeyInstruction.prototype['input'] = undefined;

/**
 * The codec to use for interpreting an element in the input PTable.
 * @member {Object.<String, Object>} inputElementCodec
 */
PartialGroupByKeyInstruction.prototype['inputElementCodec'] = undefined;

/**
 * If this instruction includes a combining function this is the name of the intermediate store between the GBK and the CombineValues.
 * @member {String} originalCombineValuesInputStoreName
 */
PartialGroupByKeyInstruction.prototype['originalCombineValuesInputStoreName'] = undefined;

/**
 * If this instruction includes a combining function, this is the name of the CombineValues instruction lifted into this instruction.
 * @member {String} originalCombineValuesStepName
 */
PartialGroupByKeyInstruction.prototype['originalCombineValuesStepName'] = undefined;

/**
 * Zero or more side inputs.
 * @member {Array.<module:model/SideInputInfo>} sideInputs
 */
PartialGroupByKeyInstruction.prototype['sideInputs'] = undefined;

/**
 * The value combining function to invoke.
 * @member {Object.<String, Object>} valueCombiningFn
 */
PartialGroupByKeyInstruction.prototype['valueCombiningFn'] = undefined;






export default PartialGroupByKeyInstruction;

