/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CounterMetadata from './CounterMetadata';
import CounterStructuredName from './CounterStructuredName';

/**
 * The CounterStructuredNameAndMetadata model module.
 * @module model/CounterStructuredNameAndMetadata
 * @version v1b3
 */
class CounterStructuredNameAndMetadata {
    /**
     * Constructs a new <code>CounterStructuredNameAndMetadata</code>.
     * A single message which encapsulates structured name and metadata for a given counter.
     * @alias module:model/CounterStructuredNameAndMetadata
     */
    constructor() { 
        
        CounterStructuredNameAndMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CounterStructuredNameAndMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CounterStructuredNameAndMetadata} obj Optional instance to populate.
     * @return {module:model/CounterStructuredNameAndMetadata} The populated <code>CounterStructuredNameAndMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CounterStructuredNameAndMetadata();

            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = CounterMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = CounterStructuredName.constructFromObject(data['name']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CounterStructuredNameAndMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CounterStructuredNameAndMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          CounterMetadata.validateJSON(data['metadata']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          CounterStructuredName.validateJSON(data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/CounterMetadata} metadata
 */
CounterStructuredNameAndMetadata.prototype['metadata'] = undefined;

/**
 * @member {module:model/CounterStructuredName} name
 */
CounterStructuredNameAndMetadata.prototype['name'] = undefined;






export default CounterStructuredNameAndMetadata;

