/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SeqMapTaskOutputInfo from './SeqMapTaskOutputInfo';
import SideInputInfo from './SideInputInfo';

/**
 * The SeqMapTask model module.
 * @module model/SeqMapTask
 * @version v1b3
 */
class SeqMapTask {
    /**
     * Constructs a new <code>SeqMapTask</code>.
     * Describes a particular function to invoke.
     * @alias module:model/SeqMapTask
     */
    constructor() { 
        
        SeqMapTask.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SeqMapTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SeqMapTask} obj Optional instance to populate.
     * @return {module:model/SeqMapTask} The populated <code>SeqMapTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SeqMapTask();

            if (data.hasOwnProperty('inputs')) {
                obj['inputs'] = ApiClient.convertToType(data['inputs'], [SideInputInfo]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('outputInfos')) {
                obj['outputInfos'] = ApiClient.convertToType(data['outputInfos'], [SeqMapTaskOutputInfo]);
            }
            if (data.hasOwnProperty('stageName')) {
                obj['stageName'] = ApiClient.convertToType(data['stageName'], 'String');
            }
            if (data.hasOwnProperty('systemName')) {
                obj['systemName'] = ApiClient.convertToType(data['systemName'], 'String');
            }
            if (data.hasOwnProperty('userFn')) {
                obj['userFn'] = ApiClient.convertToType(data['userFn'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SeqMapTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SeqMapTask</code>.
     */
    static validateJSON(data) {
        if (data['inputs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inputs'])) {
                throw new Error("Expected the field `inputs` to be an array in the JSON data but got " + data['inputs']);
            }
            // validate the optional field `inputs` (array)
            for (const item of data['inputs']) {
                SideInputInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['outputInfos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['outputInfos'])) {
                throw new Error("Expected the field `outputInfos` to be an array in the JSON data but got " + data['outputInfos']);
            }
            // validate the optional field `outputInfos` (array)
            for (const item of data['outputInfos']) {
                SeqMapTaskOutputInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['stageName'] && !(typeof data['stageName'] === 'string' || data['stageName'] instanceof String)) {
            throw new Error("Expected the field `stageName` to be a primitive type in the JSON string but got " + data['stageName']);
        }
        // ensure the json data is a string
        if (data['systemName'] && !(typeof data['systemName'] === 'string' || data['systemName'] instanceof String)) {
            throw new Error("Expected the field `systemName` to be a primitive type in the JSON string but got " + data['systemName']);
        }

        return true;
    }


}



/**
 * Information about each of the inputs.
 * @member {Array.<module:model/SideInputInfo>} inputs
 */
SeqMapTask.prototype['inputs'] = undefined;

/**
 * The user-provided name of the SeqDo operation.
 * @member {String} name
 */
SeqMapTask.prototype['name'] = undefined;

/**
 * Information about each of the outputs.
 * @member {Array.<module:model/SeqMapTaskOutputInfo>} outputInfos
 */
SeqMapTask.prototype['outputInfos'] = undefined;

/**
 * System-defined name of the stage containing the SeqDo operation. Unique across the workflow.
 * @member {String} stageName
 */
SeqMapTask.prototype['stageName'] = undefined;

/**
 * System-defined name of the SeqDo operation. Unique across the workflow.
 * @member {String} systemName
 */
SeqMapTask.prototype['systemName'] = undefined;

/**
 * The user function to invoke.
 * @member {Object.<String, Object>} userFn
 */
SeqMapTask.prototype['userFn'] = undefined;






export default SeqMapTask;

