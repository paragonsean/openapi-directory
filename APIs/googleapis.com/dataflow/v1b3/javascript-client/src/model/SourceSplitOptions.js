/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SourceSplitOptions model module.
 * @module model/SourceSplitOptions
 * @version v1b3
 */
class SourceSplitOptions {
    /**
     * Constructs a new <code>SourceSplitOptions</code>.
     * Hints for splitting a Source into bundles (parts for parallel processing) using SourceSplitRequest.
     * @alias module:model/SourceSplitOptions
     */
    constructor() { 
        
        SourceSplitOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceSplitOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceSplitOptions} obj Optional instance to populate.
     * @return {module:model/SourceSplitOptions} The populated <code>SourceSplitOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceSplitOptions();

            if (data.hasOwnProperty('desiredBundleSizeBytes')) {
                obj['desiredBundleSizeBytes'] = ApiClient.convertToType(data['desiredBundleSizeBytes'], 'String');
            }
            if (data.hasOwnProperty('desiredShardSizeBytes')) {
                obj['desiredShardSizeBytes'] = ApiClient.convertToType(data['desiredShardSizeBytes'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceSplitOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceSplitOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['desiredBundleSizeBytes'] && !(typeof data['desiredBundleSizeBytes'] === 'string' || data['desiredBundleSizeBytes'] instanceof String)) {
            throw new Error("Expected the field `desiredBundleSizeBytes` to be a primitive type in the JSON string but got " + data['desiredBundleSizeBytes']);
        }
        // ensure the json data is a string
        if (data['desiredShardSizeBytes'] && !(typeof data['desiredShardSizeBytes'] === 'string' || data['desiredShardSizeBytes'] instanceof String)) {
            throw new Error("Expected the field `desiredShardSizeBytes` to be a primitive type in the JSON string but got " + data['desiredShardSizeBytes']);
        }

        return true;
    }


}



/**
 * The source should be split into a set of bundles where the estimated size of each is approximately this many bytes.
 * @member {String} desiredBundleSizeBytes
 */
SourceSplitOptions.prototype['desiredBundleSizeBytes'] = undefined;

/**
 * DEPRECATED in favor of desired_bundle_size_bytes.
 * @member {String} desiredShardSizeBytes
 */
SourceSplitOptions.prototype['desiredShardSizeBytes'] = undefined;






export default SourceSplitOptions;

