/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PubsubLocation model module.
 * @module model/PubsubLocation
 * @version v1b3
 */
class PubsubLocation {
    /**
     * Constructs a new <code>PubsubLocation</code>.
     * Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.
     * @alias module:model/PubsubLocation
     */
    constructor() { 
        
        PubsubLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PubsubLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PubsubLocation} obj Optional instance to populate.
     * @return {module:model/PubsubLocation} The populated <code>PubsubLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PubsubLocation();

            if (data.hasOwnProperty('dropLateData')) {
                obj['dropLateData'] = ApiClient.convertToType(data['dropLateData'], 'Boolean');
            }
            if (data.hasOwnProperty('dynamicDestinations')) {
                obj['dynamicDestinations'] = ApiClient.convertToType(data['dynamicDestinations'], 'Boolean');
            }
            if (data.hasOwnProperty('idLabel')) {
                obj['idLabel'] = ApiClient.convertToType(data['idLabel'], 'String');
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = ApiClient.convertToType(data['subscription'], 'String');
            }
            if (data.hasOwnProperty('timestampLabel')) {
                obj['timestampLabel'] = ApiClient.convertToType(data['timestampLabel'], 'String');
            }
            if (data.hasOwnProperty('topic')) {
                obj['topic'] = ApiClient.convertToType(data['topic'], 'String');
            }
            if (data.hasOwnProperty('trackingSubscription')) {
                obj['trackingSubscription'] = ApiClient.convertToType(data['trackingSubscription'], 'String');
            }
            if (data.hasOwnProperty('withAttributes')) {
                obj['withAttributes'] = ApiClient.convertToType(data['withAttributes'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PubsubLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PubsubLocation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['idLabel'] && !(typeof data['idLabel'] === 'string' || data['idLabel'] instanceof String)) {
            throw new Error("Expected the field `idLabel` to be a primitive type in the JSON string but got " + data['idLabel']);
        }
        // ensure the json data is a string
        if (data['subscription'] && !(typeof data['subscription'] === 'string' || data['subscription'] instanceof String)) {
            throw new Error("Expected the field `subscription` to be a primitive type in the JSON string but got " + data['subscription']);
        }
        // ensure the json data is a string
        if (data['timestampLabel'] && !(typeof data['timestampLabel'] === 'string' || data['timestampLabel'] instanceof String)) {
            throw new Error("Expected the field `timestampLabel` to be a primitive type in the JSON string but got " + data['timestampLabel']);
        }
        // ensure the json data is a string
        if (data['topic'] && !(typeof data['topic'] === 'string' || data['topic'] instanceof String)) {
            throw new Error("Expected the field `topic` to be a primitive type in the JSON string but got " + data['topic']);
        }
        // ensure the json data is a string
        if (data['trackingSubscription'] && !(typeof data['trackingSubscription'] === 'string' || data['trackingSubscription'] instanceof String)) {
            throw new Error("Expected the field `trackingSubscription` to be a primitive type in the JSON string but got " + data['trackingSubscription']);
        }

        return true;
    }


}



/**
 * Indicates whether the pipeline allows late-arriving data.
 * @member {Boolean} dropLateData
 */
PubsubLocation.prototype['dropLateData'] = undefined;

/**
 * If true, then this location represents dynamic topics.
 * @member {Boolean} dynamicDestinations
 */
PubsubLocation.prototype['dynamicDestinations'] = undefined;

/**
 * If set, contains a pubsub label from which to extract record ids. If left empty, record deduplication will be strictly best effort.
 * @member {String} idLabel
 */
PubsubLocation.prototype['idLabel'] = undefined;

/**
 * A pubsub subscription, in the form of \"pubsub.googleapis.com/subscriptions//\"
 * @member {String} subscription
 */
PubsubLocation.prototype['subscription'] = undefined;

/**
 * If set, contains a pubsub label from which to extract record timestamps. If left empty, record timestamps will be generated upon arrival.
 * @member {String} timestampLabel
 */
PubsubLocation.prototype['timestampLabel'] = undefined;

/**
 * A pubsub topic, in the form of \"pubsub.googleapis.com/topics//\"
 * @member {String} topic
 */
PubsubLocation.prototype['topic'] = undefined;

/**
 * If set, specifies the pubsub subscription that will be used for tracking custom time timestamps for watermark estimation.
 * @member {String} trackingSubscription
 */
PubsubLocation.prototype['trackingSubscription'] = undefined;

/**
 * If true, then the client has requested to get pubsub attributes.
 * @member {Boolean} withAttributes
 */
PubsubLocation.prototype['withAttributes'] = undefined;






export default PubsubLocation;

