/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OutlierStats model module.
 * @module model/OutlierStats
 * @version v1b3
 */
class OutlierStats {
    /**
     * Constructs a new <code>OutlierStats</code>.
     * Statistics for the underflow and overflow bucket.
     * @alias module:model/OutlierStats
     */
    constructor() { 
        
        OutlierStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OutlierStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutlierStats} obj Optional instance to populate.
     * @return {module:model/OutlierStats} The populated <code>OutlierStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutlierStats();

            if (data.hasOwnProperty('overflowCount')) {
                obj['overflowCount'] = ApiClient.convertToType(data['overflowCount'], 'String');
            }
            if (data.hasOwnProperty('overflowMean')) {
                obj['overflowMean'] = ApiClient.convertToType(data['overflowMean'], 'Number');
            }
            if (data.hasOwnProperty('underflowCount')) {
                obj['underflowCount'] = ApiClient.convertToType(data['underflowCount'], 'String');
            }
            if (data.hasOwnProperty('underflowMean')) {
                obj['underflowMean'] = ApiClient.convertToType(data['underflowMean'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutlierStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutlierStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['overflowCount'] && !(typeof data['overflowCount'] === 'string' || data['overflowCount'] instanceof String)) {
            throw new Error("Expected the field `overflowCount` to be a primitive type in the JSON string but got " + data['overflowCount']);
        }
        // ensure the json data is a string
        if (data['underflowCount'] && !(typeof data['underflowCount'] === 'string' || data['underflowCount'] instanceof String)) {
            throw new Error("Expected the field `underflowCount` to be a primitive type in the JSON string but got " + data['underflowCount']);
        }

        return true;
    }


}



/**
 * Number of values that are larger than the upper bound of the largest bucket.
 * @member {String} overflowCount
 */
OutlierStats.prototype['overflowCount'] = undefined;

/**
 * Mean of values in the overflow bucket.
 * @member {Number} overflowMean
 */
OutlierStats.prototype['overflowMean'] = undefined;

/**
 * Number of values that are smaller than the lower bound of the smallest bucket.
 * @member {String} underflowCount
 */
OutlierStats.prototype['underflowCount'] = undefined;

/**
 * Mean of values in the undeflow bucket.
 * @member {Number} underflowMean
 */
OutlierStats.prototype['underflowMean'] = undefined;






export default OutlierStats;

