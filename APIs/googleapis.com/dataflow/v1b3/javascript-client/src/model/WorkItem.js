/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MapTask from './MapTask';
import Package from './Package';
import SeqMapTask from './SeqMapTask';
import ShellTask from './ShellTask';
import SourceOperationRequest from './SourceOperationRequest';
import StreamingComputationTask from './StreamingComputationTask';
import StreamingConfigTask from './StreamingConfigTask';
import StreamingSetupTask from './StreamingSetupTask';

/**
 * The WorkItem model module.
 * @module model/WorkItem
 * @version v1b3
 */
class WorkItem {
    /**
     * Constructs a new <code>WorkItem</code>.
     * WorkItem represents basic information about a WorkItem to be executed in the cloud.
     * @alias module:model/WorkItem
     */
    constructor() { 
        
        WorkItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkItem} obj Optional instance to populate.
     * @return {module:model/WorkItem} The populated <code>WorkItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkItem();

            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ApiClient.convertToType(data['configuration'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('initialReportIndex')) {
                obj['initialReportIndex'] = ApiClient.convertToType(data['initialReportIndex'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('leaseExpireTime')) {
                obj['leaseExpireTime'] = ApiClient.convertToType(data['leaseExpireTime'], 'String');
            }
            if (data.hasOwnProperty('mapTask')) {
                obj['mapTask'] = MapTask.constructFromObject(data['mapTask']);
            }
            if (data.hasOwnProperty('packages')) {
                obj['packages'] = ApiClient.convertToType(data['packages'], [Package]);
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('reportStatusInterval')) {
                obj['reportStatusInterval'] = ApiClient.convertToType(data['reportStatusInterval'], 'String');
            }
            if (data.hasOwnProperty('seqMapTask')) {
                obj['seqMapTask'] = SeqMapTask.constructFromObject(data['seqMapTask']);
            }
            if (data.hasOwnProperty('shellTask')) {
                obj['shellTask'] = ShellTask.constructFromObject(data['shellTask']);
            }
            if (data.hasOwnProperty('sourceOperationTask')) {
                obj['sourceOperationTask'] = SourceOperationRequest.constructFromObject(data['sourceOperationTask']);
            }
            if (data.hasOwnProperty('streamingComputationTask')) {
                obj['streamingComputationTask'] = StreamingComputationTask.constructFromObject(data['streamingComputationTask']);
            }
            if (data.hasOwnProperty('streamingConfigTask')) {
                obj['streamingConfigTask'] = StreamingConfigTask.constructFromObject(data['streamingConfigTask']);
            }
            if (data.hasOwnProperty('streamingSetupTask')) {
                obj['streamingSetupTask'] = StreamingSetupTask.constructFromObject(data['streamingSetupTask']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['configuration'] && !(typeof data['configuration'] === 'string' || data['configuration'] instanceof String)) {
            throw new Error("Expected the field `configuration` to be a primitive type in the JSON string but got " + data['configuration']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['initialReportIndex'] && !(typeof data['initialReportIndex'] === 'string' || data['initialReportIndex'] instanceof String)) {
            throw new Error("Expected the field `initialReportIndex` to be a primitive type in the JSON string but got " + data['initialReportIndex']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['leaseExpireTime'] && !(typeof data['leaseExpireTime'] === 'string' || data['leaseExpireTime'] instanceof String)) {
            throw new Error("Expected the field `leaseExpireTime` to be a primitive type in the JSON string but got " + data['leaseExpireTime']);
        }
        // validate the optional field `mapTask`
        if (data['mapTask']) { // data not null
          MapTask.validateJSON(data['mapTask']);
        }
        if (data['packages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['packages'])) {
                throw new Error("Expected the field `packages` to be an array in the JSON data but got " + data['packages']);
            }
            // validate the optional field `packages` (array)
            for (const item of data['packages']) {
                Package.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }
        // ensure the json data is a string
        if (data['reportStatusInterval'] && !(typeof data['reportStatusInterval'] === 'string' || data['reportStatusInterval'] instanceof String)) {
            throw new Error("Expected the field `reportStatusInterval` to be a primitive type in the JSON string but got " + data['reportStatusInterval']);
        }
        // validate the optional field `seqMapTask`
        if (data['seqMapTask']) { // data not null
          SeqMapTask.validateJSON(data['seqMapTask']);
        }
        // validate the optional field `shellTask`
        if (data['shellTask']) { // data not null
          ShellTask.validateJSON(data['shellTask']);
        }
        // validate the optional field `sourceOperationTask`
        if (data['sourceOperationTask']) { // data not null
          SourceOperationRequest.validateJSON(data['sourceOperationTask']);
        }
        // validate the optional field `streamingComputationTask`
        if (data['streamingComputationTask']) { // data not null
          StreamingComputationTask.validateJSON(data['streamingComputationTask']);
        }
        // validate the optional field `streamingConfigTask`
        if (data['streamingConfigTask']) { // data not null
          StreamingConfigTask.validateJSON(data['streamingConfigTask']);
        }
        // validate the optional field `streamingSetupTask`
        if (data['streamingSetupTask']) { // data not null
          StreamingSetupTask.validateJSON(data['streamingSetupTask']);
        }

        return true;
    }


}



/**
 * Work item-specific configuration as an opaque blob.
 * @member {String} configuration
 */
WorkItem.prototype['configuration'] = undefined;

/**
 * Identifies this WorkItem.
 * @member {String} id
 */
WorkItem.prototype['id'] = undefined;

/**
 * The initial index to use when reporting the status of the WorkItem.
 * @member {String} initialReportIndex
 */
WorkItem.prototype['initialReportIndex'] = undefined;

/**
 * Identifies the workflow job this WorkItem belongs to.
 * @member {String} jobId
 */
WorkItem.prototype['jobId'] = undefined;

/**
 * Time when the lease on this Work will expire.
 * @member {String} leaseExpireTime
 */
WorkItem.prototype['leaseExpireTime'] = undefined;

/**
 * @member {module:model/MapTask} mapTask
 */
WorkItem.prototype['mapTask'] = undefined;

/**
 * Any required packages that need to be fetched in order to execute this WorkItem.
 * @member {Array.<module:model/Package>} packages
 */
WorkItem.prototype['packages'] = undefined;

/**
 * Identifies the cloud project this WorkItem belongs to.
 * @member {String} projectId
 */
WorkItem.prototype['projectId'] = undefined;

/**
 * Recommended reporting interval.
 * @member {String} reportStatusInterval
 */
WorkItem.prototype['reportStatusInterval'] = undefined;

/**
 * @member {module:model/SeqMapTask} seqMapTask
 */
WorkItem.prototype['seqMapTask'] = undefined;

/**
 * @member {module:model/ShellTask} shellTask
 */
WorkItem.prototype['shellTask'] = undefined;

/**
 * @member {module:model/SourceOperationRequest} sourceOperationTask
 */
WorkItem.prototype['sourceOperationTask'] = undefined;

/**
 * @member {module:model/StreamingComputationTask} streamingComputationTask
 */
WorkItem.prototype['streamingComputationTask'] = undefined;

/**
 * @member {module:model/StreamingConfigTask} streamingConfigTask
 */
WorkItem.prototype['streamingConfigTask'] = undefined;

/**
 * @member {module:model/StreamingSetupTask} streamingSetupTask
 */
WorkItem.prototype['streamingSetupTask'] = undefined;






export default WorkItem;

