/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuntimeMetadata from './RuntimeMetadata';
import Status from './Status';
import TemplateMetadata from './TemplateMetadata';

/**
 * The GetTemplateResponse model module.
 * @module model/GetTemplateResponse
 * @version v1b3
 */
class GetTemplateResponse {
    /**
     * Constructs a new <code>GetTemplateResponse</code>.
     * The response to a GetTemplate request.
     * @alias module:model/GetTemplateResponse
     */
    constructor() { 
        
        GetTemplateResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetTemplateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTemplateResponse} obj Optional instance to populate.
     * @return {module:model/GetTemplateResponse} The populated <code>GetTemplateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTemplateResponse();

            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = TemplateMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('runtimeMetadata')) {
                obj['runtimeMetadata'] = RuntimeMetadata.constructFromObject(data['runtimeMetadata']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('templateType')) {
                obj['templateType'] = ApiClient.convertToType(data['templateType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTemplateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTemplateResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          TemplateMetadata.validateJSON(data['metadata']);
        }
        // validate the optional field `runtimeMetadata`
        if (data['runtimeMetadata']) { // data not null
          RuntimeMetadata.validateJSON(data['runtimeMetadata']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }
        // ensure the json data is a string
        if (data['templateType'] && !(typeof data['templateType'] === 'string' || data['templateType'] instanceof String)) {
            throw new Error("Expected the field `templateType` to be a primitive type in the JSON string but got " + data['templateType']);
        }

        return true;
    }


}



/**
 * @member {module:model/TemplateMetadata} metadata
 */
GetTemplateResponse.prototype['metadata'] = undefined;

/**
 * @member {module:model/RuntimeMetadata} runtimeMetadata
 */
GetTemplateResponse.prototype['runtimeMetadata'] = undefined;

/**
 * @member {module:model/Status} status
 */
GetTemplateResponse.prototype['status'] = undefined;

/**
 * Template Type.
 * @member {module:model/GetTemplateResponse.TemplateTypeEnum} templateType
 */
GetTemplateResponse.prototype['templateType'] = undefined;





/**
 * Allowed values for the <code>templateType</code> property.
 * @enum {String}
 * @readonly
 */
GetTemplateResponse['TemplateTypeEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "LEGACY"
     * @const
     */
    "LEGACY": "LEGACY",

    /**
     * value: "FLEX"
     * @const
     */
    "FLEX": "FLEX"
};



export default GetTemplateResponse;

