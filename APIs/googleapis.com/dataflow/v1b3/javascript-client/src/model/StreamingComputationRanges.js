/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeyRangeDataDiskAssignment from './KeyRangeDataDiskAssignment';

/**
 * The StreamingComputationRanges model module.
 * @module model/StreamingComputationRanges
 * @version v1b3
 */
class StreamingComputationRanges {
    /**
     * Constructs a new <code>StreamingComputationRanges</code>.
     * Describes full or partial data disk assignment information of the computation ranges.
     * @alias module:model/StreamingComputationRanges
     */
    constructor() { 
        
        StreamingComputationRanges.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StreamingComputationRanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamingComputationRanges} obj Optional instance to populate.
     * @return {module:model/StreamingComputationRanges} The populated <code>StreamingComputationRanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamingComputationRanges();

            if (data.hasOwnProperty('computationId')) {
                obj['computationId'] = ApiClient.convertToType(data['computationId'], 'String');
            }
            if (data.hasOwnProperty('rangeAssignments')) {
                obj['rangeAssignments'] = ApiClient.convertToType(data['rangeAssignments'], [KeyRangeDataDiskAssignment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamingComputationRanges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamingComputationRanges</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['computationId'] && !(typeof data['computationId'] === 'string' || data['computationId'] instanceof String)) {
            throw new Error("Expected the field `computationId` to be a primitive type in the JSON string but got " + data['computationId']);
        }
        if (data['rangeAssignments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rangeAssignments'])) {
                throw new Error("Expected the field `rangeAssignments` to be an array in the JSON data but got " + data['rangeAssignments']);
            }
            // validate the optional field `rangeAssignments` (array)
            for (const item of data['rangeAssignments']) {
                KeyRangeDataDiskAssignment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The ID of the computation.
 * @member {String} computationId
 */
StreamingComputationRanges.prototype['computationId'] = undefined;

/**
 * Data disk assignments for ranges from this computation.
 * @member {Array.<module:model/KeyRangeDataDiskAssignment>} rangeAssignments
 */
StreamingComputationRanges.prototype['rangeAssignments'] = undefined;






export default StreamingComputationRanges;

