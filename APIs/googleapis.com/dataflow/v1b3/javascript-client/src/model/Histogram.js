/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Histogram model module.
 * @module model/Histogram
 * @version v1b3
 */
class Histogram {
    /**
     * Constructs a new <code>Histogram</code>.
     * Histogram of value counts for a distribution. Buckets have an inclusive lower bound and exclusive upper bound and use \&quot;1,2,5 bucketing\&quot;: The first bucket range is from [0,1) and all subsequent bucket boundaries are powers of ten multiplied by 1, 2, or 5. Thus, bucket boundaries are 0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, ... Negative values are not supported.
     * @alias module:model/Histogram
     */
    constructor() { 
        
        Histogram.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Histogram</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Histogram} obj Optional instance to populate.
     * @return {module:model/Histogram} The populated <code>Histogram</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Histogram();

            if (data.hasOwnProperty('bucketCounts')) {
                obj['bucketCounts'] = ApiClient.convertToType(data['bucketCounts'], ['String']);
            }
            if (data.hasOwnProperty('firstBucketOffset')) {
                obj['firstBucketOffset'] = ApiClient.convertToType(data['firstBucketOffset'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Histogram</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Histogram</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['bucketCounts'])) {
            throw new Error("Expected the field `bucketCounts` to be an array in the JSON data but got " + data['bucketCounts']);
        }

        return true;
    }


}



/**
 * Counts of values in each bucket. For efficiency, prefix and trailing buckets with count = 0 are elided. Buckets can store the full range of values of an unsigned long, with ULLONG_MAX falling into the 59th bucket with range [1e19, 2e19).
 * @member {Array.<String>} bucketCounts
 */
Histogram.prototype['bucketCounts'] = undefined;

/**
 * Starting index of first stored bucket. The non-inclusive upper-bound of the ith bucket is given by: pow(10,(i-first_bucket_offset)/3) * (1,2,5)[(i-first_bucket_offset)%3]
 * @member {Number} firstBucketOffset
 */
Histogram.prototype['firstBucketOffset'] = undefined;






export default Histogram;

