/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SplitInt64 from './SplitInt64';

/**
 * The IntegerGauge model module.
 * @module model/IntegerGauge
 * @version v1b3
 */
class IntegerGauge {
    /**
     * Constructs a new <code>IntegerGauge</code>.
     * A metric value representing temporal values of a variable.
     * @alias module:model/IntegerGauge
     */
    constructor() { 
        
        IntegerGauge.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntegerGauge</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegerGauge} obj Optional instance to populate.
     * @return {module:model/IntegerGauge} The populated <code>IntegerGauge</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegerGauge();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = SplitInt64.constructFromObject(data['value']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegerGauge</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegerGauge</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['timestamp'] && !(typeof data['timestamp'] === 'string' || data['timestamp'] instanceof String)) {
            throw new Error("Expected the field `timestamp` to be a primitive type in the JSON string but got " + data['timestamp']);
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          SplitInt64.validateJSON(data['value']);
        }

        return true;
    }


}



/**
 * The time at which this value was measured. Measured as msecs from epoch.
 * @member {String} timestamp
 */
IntegerGauge.prototype['timestamp'] = undefined;

/**
 * @member {module:model/SplitInt64} value
 */
IntegerGauge.prototype['value'] = undefined;






export default IntegerGauge;

