/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkItemStatus from './WorkItemStatus';

/**
 * The ReportWorkItemStatusRequest model module.
 * @module model/ReportWorkItemStatusRequest
 * @version v1b3
 */
class ReportWorkItemStatusRequest {
    /**
     * Constructs a new <code>ReportWorkItemStatusRequest</code>.
     * Request to report the status of WorkItems.
     * @alias module:model/ReportWorkItemStatusRequest
     */
    constructor() { 
        
        ReportWorkItemStatusRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportWorkItemStatusRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportWorkItemStatusRequest} obj Optional instance to populate.
     * @return {module:model/ReportWorkItemStatusRequest} The populated <code>ReportWorkItemStatusRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportWorkItemStatusRequest();

            if (data.hasOwnProperty('currentWorkerTime')) {
                obj['currentWorkerTime'] = ApiClient.convertToType(data['currentWorkerTime'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('unifiedWorkerRequest')) {
                obj['unifiedWorkerRequest'] = ApiClient.convertToType(data['unifiedWorkerRequest'], {'String': Object});
            }
            if (data.hasOwnProperty('workItemStatuses')) {
                obj['workItemStatuses'] = ApiClient.convertToType(data['workItemStatuses'], [WorkItemStatus]);
            }
            if (data.hasOwnProperty('workerId')) {
                obj['workerId'] = ApiClient.convertToType(data['workerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportWorkItemStatusRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportWorkItemStatusRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currentWorkerTime'] && !(typeof data['currentWorkerTime'] === 'string' || data['currentWorkerTime'] instanceof String)) {
            throw new Error("Expected the field `currentWorkerTime` to be a primitive type in the JSON string but got " + data['currentWorkerTime']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        if (data['workItemStatuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['workItemStatuses'])) {
                throw new Error("Expected the field `workItemStatuses` to be an array in the JSON data but got " + data['workItemStatuses']);
            }
            // validate the optional field `workItemStatuses` (array)
            for (const item of data['workItemStatuses']) {
                WorkItemStatus.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['workerId'] && !(typeof data['workerId'] === 'string' || data['workerId'] instanceof String)) {
            throw new Error("Expected the field `workerId` to be a primitive type in the JSON string but got " + data['workerId']);
        }

        return true;
    }


}



/**
 * The current timestamp at the worker.
 * @member {String} currentWorkerTime
 */
ReportWorkItemStatusRequest.prototype['currentWorkerTime'] = undefined;

/**
 * The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the WorkItem's job.
 * @member {String} location
 */
ReportWorkItemStatusRequest.prototype['location'] = undefined;

/**
 * Untranslated bag-of-bytes WorkProgressUpdateRequest from UnifiedWorker.
 * @member {Object.<String, Object>} unifiedWorkerRequest
 */
ReportWorkItemStatusRequest.prototype['unifiedWorkerRequest'] = undefined;

/**
 * The order is unimportant, except that the order of the WorkItemServiceState messages in the ReportWorkItemStatusResponse corresponds to the order of WorkItemStatus messages here.
 * @member {Array.<module:model/WorkItemStatus>} workItemStatuses
 */
ReportWorkItemStatusRequest.prototype['workItemStatuses'] = undefined;

/**
 * The ID of the worker reporting the WorkItem status. If this does not match the ID of the worker which the Dataflow service believes currently has the lease on the WorkItem, the report will be dropped (with an error response).
 * @member {String} workerId
 */
ReportWorkItemStatusRequest.prototype['workerId'] = undefined;






export default ReportWorkItemStatusRequest;

