/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstructionOutput model module.
 * @module model/InstructionOutput
 * @version v1b3
 */
class InstructionOutput {
    /**
     * Constructs a new <code>InstructionOutput</code>.
     * An output of an instruction.
     * @alias module:model/InstructionOutput
     */
    constructor() { 
        
        InstructionOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstructionOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstructionOutput} obj Optional instance to populate.
     * @return {module:model/InstructionOutput} The populated <code>InstructionOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstructionOutput();

            if (data.hasOwnProperty('codec')) {
                obj['codec'] = ApiClient.convertToType(data['codec'], {'String': Object});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('onlyCountKeyBytes')) {
                obj['onlyCountKeyBytes'] = ApiClient.convertToType(data['onlyCountKeyBytes'], 'Boolean');
            }
            if (data.hasOwnProperty('onlyCountValueBytes')) {
                obj['onlyCountValueBytes'] = ApiClient.convertToType(data['onlyCountValueBytes'], 'Boolean');
            }
            if (data.hasOwnProperty('originalName')) {
                obj['originalName'] = ApiClient.convertToType(data['originalName'], 'String');
            }
            if (data.hasOwnProperty('systemName')) {
                obj['systemName'] = ApiClient.convertToType(data['systemName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstructionOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstructionOutput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['originalName'] && !(typeof data['originalName'] === 'string' || data['originalName'] instanceof String)) {
            throw new Error("Expected the field `originalName` to be a primitive type in the JSON string but got " + data['originalName']);
        }
        // ensure the json data is a string
        if (data['systemName'] && !(typeof data['systemName'] === 'string' || data['systemName'] instanceof String)) {
            throw new Error("Expected the field `systemName` to be a primitive type in the JSON string but got " + data['systemName']);
        }

        return true;
    }


}



/**
 * The codec to use to encode data being written via this output.
 * @member {Object.<String, Object>} codec
 */
InstructionOutput.prototype['codec'] = undefined;

/**
 * The user-provided name of this output.
 * @member {String} name
 */
InstructionOutput.prototype['name'] = undefined;

/**
 * For system-generated byte and mean byte metrics, certain instructions should only report the key size.
 * @member {Boolean} onlyCountKeyBytes
 */
InstructionOutput.prototype['onlyCountKeyBytes'] = undefined;

/**
 * For system-generated byte and mean byte metrics, certain instructions should only report the value size.
 * @member {Boolean} onlyCountValueBytes
 */
InstructionOutput.prototype['onlyCountValueBytes'] = undefined;

/**
 * System-defined name for this output in the original workflow graph. Outputs that do not contribute to an original instruction do not set this.
 * @member {String} originalName
 */
InstructionOutput.prototype['originalName'] = undefined;

/**
 * System-defined name of this output. Unique across the workflow.
 * @member {String} systemName
 */
InstructionOutput.prototype['systemName'] = undefined;






export default InstructionOutput;

