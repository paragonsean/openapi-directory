/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Position from './Position';

/**
 * The ApproximateSplitRequest model module.
 * @module model/ApproximateSplitRequest
 * @version v1b3
 */
class ApproximateSplitRequest {
    /**
     * Constructs a new <code>ApproximateSplitRequest</code>.
     * A suggestion by the service to the worker to dynamically split the WorkItem.
     * @alias module:model/ApproximateSplitRequest
     */
    constructor() { 
        
        ApproximateSplitRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApproximateSplitRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApproximateSplitRequest} obj Optional instance to populate.
     * @return {module:model/ApproximateSplitRequest} The populated <code>ApproximateSplitRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApproximateSplitRequest();

            if (data.hasOwnProperty('fractionConsumed')) {
                obj['fractionConsumed'] = ApiClient.convertToType(data['fractionConsumed'], 'Number');
            }
            if (data.hasOwnProperty('fractionOfRemainder')) {
                obj['fractionOfRemainder'] = ApiClient.convertToType(data['fractionOfRemainder'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = Position.constructFromObject(data['position']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApproximateSplitRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApproximateSplitRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `position`
        if (data['position']) { // data not null
          Position.validateJSON(data['position']);
        }

        return true;
    }


}



/**
 * A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input).
 * @member {Number} fractionConsumed
 */
ApproximateSplitRequest.prototype['fractionConsumed'] = undefined;

/**
 * The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input).
 * @member {Number} fractionOfRemainder
 */
ApproximateSplitRequest.prototype['fractionOfRemainder'] = undefined;

/**
 * @member {module:model/Position} position
 */
ApproximateSplitRequest.prototype['position'] = undefined;






export default ApproximateSplitRequest;

