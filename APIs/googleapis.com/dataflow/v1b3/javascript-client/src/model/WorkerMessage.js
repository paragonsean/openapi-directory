/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataSamplingReport from './DataSamplingReport';
import PerWorkerMetrics from './PerWorkerMetrics';
import ResourceUtilizationReport from './ResourceUtilizationReport';
import StreamingScalingReport from './StreamingScalingReport';
import WorkerHealthReport from './WorkerHealthReport';
import WorkerLifecycleEvent from './WorkerLifecycleEvent';
import WorkerMessageCode from './WorkerMessageCode';
import WorkerShutdownNotice from './WorkerShutdownNotice';
import WorkerThreadScalingReport from './WorkerThreadScalingReport';

/**
 * The WorkerMessage model module.
 * @module model/WorkerMessage
 * @version v1b3
 */
class WorkerMessage {
    /**
     * Constructs a new <code>WorkerMessage</code>.
     * WorkerMessage provides information to the backend about a worker.
     * @alias module:model/WorkerMessage
     */
    constructor() { 
        
        WorkerMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkerMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkerMessage} obj Optional instance to populate.
     * @return {module:model/WorkerMessage} The populated <code>WorkerMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkerMessage();

            if (data.hasOwnProperty('dataSamplingReport')) {
                obj['dataSamplingReport'] = DataSamplingReport.constructFromObject(data['dataSamplingReport']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('perWorkerMetrics')) {
                obj['perWorkerMetrics'] = PerWorkerMetrics.constructFromObject(data['perWorkerMetrics']);
            }
            if (data.hasOwnProperty('streamingScalingReport')) {
                obj['streamingScalingReport'] = StreamingScalingReport.constructFromObject(data['streamingScalingReport']);
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('workerHealthReport')) {
                obj['workerHealthReport'] = WorkerHealthReport.constructFromObject(data['workerHealthReport']);
            }
            if (data.hasOwnProperty('workerLifecycleEvent')) {
                obj['workerLifecycleEvent'] = WorkerLifecycleEvent.constructFromObject(data['workerLifecycleEvent']);
            }
            if (data.hasOwnProperty('workerMessageCode')) {
                obj['workerMessageCode'] = WorkerMessageCode.constructFromObject(data['workerMessageCode']);
            }
            if (data.hasOwnProperty('workerMetrics')) {
                obj['workerMetrics'] = ResourceUtilizationReport.constructFromObject(data['workerMetrics']);
            }
            if (data.hasOwnProperty('workerShutdownNotice')) {
                obj['workerShutdownNotice'] = WorkerShutdownNotice.constructFromObject(data['workerShutdownNotice']);
            }
            if (data.hasOwnProperty('workerThreadScalingReport')) {
                obj['workerThreadScalingReport'] = WorkerThreadScalingReport.constructFromObject(data['workerThreadScalingReport']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkerMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkerMessage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dataSamplingReport`
        if (data['dataSamplingReport']) { // data not null
          DataSamplingReport.validateJSON(data['dataSamplingReport']);
        }
        // validate the optional field `perWorkerMetrics`
        if (data['perWorkerMetrics']) { // data not null
          PerWorkerMetrics.validateJSON(data['perWorkerMetrics']);
        }
        // validate the optional field `streamingScalingReport`
        if (data['streamingScalingReport']) { // data not null
          StreamingScalingReport.validateJSON(data['streamingScalingReport']);
        }
        // ensure the json data is a string
        if (data['time'] && !(typeof data['time'] === 'string' || data['time'] instanceof String)) {
            throw new Error("Expected the field `time` to be a primitive type in the JSON string but got " + data['time']);
        }
        // validate the optional field `workerHealthReport`
        if (data['workerHealthReport']) { // data not null
          WorkerHealthReport.validateJSON(data['workerHealthReport']);
        }
        // validate the optional field `workerLifecycleEvent`
        if (data['workerLifecycleEvent']) { // data not null
          WorkerLifecycleEvent.validateJSON(data['workerLifecycleEvent']);
        }
        // validate the optional field `workerMessageCode`
        if (data['workerMessageCode']) { // data not null
          WorkerMessageCode.validateJSON(data['workerMessageCode']);
        }
        // validate the optional field `workerMetrics`
        if (data['workerMetrics']) { // data not null
          ResourceUtilizationReport.validateJSON(data['workerMetrics']);
        }
        // validate the optional field `workerShutdownNotice`
        if (data['workerShutdownNotice']) { // data not null
          WorkerShutdownNotice.validateJSON(data['workerShutdownNotice']);
        }
        // validate the optional field `workerThreadScalingReport`
        if (data['workerThreadScalingReport']) { // data not null
          WorkerThreadScalingReport.validateJSON(data['workerThreadScalingReport']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataSamplingReport} dataSamplingReport
 */
WorkerMessage.prototype['dataSamplingReport'] = undefined;

/**
 * Labels are used to group WorkerMessages. For example, a worker_message about a particular container might have the labels: { \"JOB_ID\": \"2015-04-22\", \"WORKER_ID\": \"wordcount-vm-2015â€¦\" \"CONTAINER_TYPE\": \"worker\", \"CONTAINER_ID\": \"ac1234def\"} Label tags typically correspond to Label enum values. However, for ease of development other strings can be used as tags. LABEL_UNSPECIFIED should not be used here.
 * @member {Object.<String, String>} labels
 */
WorkerMessage.prototype['labels'] = undefined;

/**
 * @member {module:model/PerWorkerMetrics} perWorkerMetrics
 */
WorkerMessage.prototype['perWorkerMetrics'] = undefined;

/**
 * @member {module:model/StreamingScalingReport} streamingScalingReport
 */
WorkerMessage.prototype['streamingScalingReport'] = undefined;

/**
 * The timestamp of the worker_message.
 * @member {String} time
 */
WorkerMessage.prototype['time'] = undefined;

/**
 * @member {module:model/WorkerHealthReport} workerHealthReport
 */
WorkerMessage.prototype['workerHealthReport'] = undefined;

/**
 * @member {module:model/WorkerLifecycleEvent} workerLifecycleEvent
 */
WorkerMessage.prototype['workerLifecycleEvent'] = undefined;

/**
 * @member {module:model/WorkerMessageCode} workerMessageCode
 */
WorkerMessage.prototype['workerMessageCode'] = undefined;

/**
 * @member {module:model/ResourceUtilizationReport} workerMetrics
 */
WorkerMessage.prototype['workerMetrics'] = undefined;

/**
 * @member {module:model/WorkerShutdownNotice} workerShutdownNotice
 */
WorkerMessage.prototype['workerShutdownNotice'] = undefined;

/**
 * @member {module:model/WorkerThreadScalingReport} workerThreadScalingReport
 */
WorkerMessage.prototype['workerThreadScalingReport'] = undefined;






export default WorkerMessage;

