/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Parameter from './Parameter';

/**
 * The StructuredMessage model module.
 * @module model/StructuredMessage
 * @version v1b3
 */
class StructuredMessage {
    /**
     * Constructs a new <code>StructuredMessage</code>.
     * A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.
     * @alias module:model/StructuredMessage
     */
    constructor() { 
        
        StructuredMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StructuredMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StructuredMessage} obj Optional instance to populate.
     * @return {module:model/StructuredMessage} The populated <code>StructuredMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StructuredMessage();

            if (data.hasOwnProperty('messageKey')) {
                obj['messageKey'] = ApiClient.convertToType(data['messageKey'], 'String');
            }
            if (data.hasOwnProperty('messageText')) {
                obj['messageText'] = ApiClient.convertToType(data['messageText'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [Parameter]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StructuredMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StructuredMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['messageKey'] && !(typeof data['messageKey'] === 'string' || data['messageKey'] instanceof String)) {
            throw new Error("Expected the field `messageKey` to be a primitive type in the JSON string but got " + data['messageKey']);
        }
        // ensure the json data is a string
        if (data['messageText'] && !(typeof data['messageText'] === 'string' || data['messageText'] instanceof String)) {
            throw new Error("Expected the field `messageText` to be a primitive type in the JSON string but got " + data['messageText']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                Parameter.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Identifier for this message type. Used by external systems to internationalize or personalize message.
 * @member {String} messageKey
 */
StructuredMessage.prototype['messageKey'] = undefined;

/**
 * Human-readable version of message.
 * @member {String} messageText
 */
StructuredMessage.prototype['messageText'] = undefined;

/**
 * The structured data associated with this message.
 * @member {Array.<module:model/Parameter>} parameters
 */
StructuredMessage.prototype['parameters'] = undefined;






export default StructuredMessage;

