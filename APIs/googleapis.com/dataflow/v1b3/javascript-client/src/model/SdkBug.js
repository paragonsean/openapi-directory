/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SdkBug model module.
 * @module model/SdkBug
 * @version v1b3
 */
class SdkBug {
    /**
     * Constructs a new <code>SdkBug</code>.
     * A bug found in the Dataflow SDK.
     * @alias module:model/SdkBug
     */
    constructor() { 
        
        SdkBug.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SdkBug</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SdkBug} obj Optional instance to populate.
     * @return {module:model/SdkBug} The populated <code>SdkBug</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SdkBug();

            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SdkBug</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SdkBug</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Output only. How severe the SDK bug is.
 * @member {module:model/SdkBug.SeverityEnum} severity
 */
SdkBug.prototype['severity'] = undefined;

/**
 * Output only. Describes the impact of this SDK bug.
 * @member {module:model/SdkBug.TypeEnum} type
 */
SdkBug.prototype['type'] = undefined;

/**
 * Output only. Link to more information on the bug.
 * @member {String} uri
 */
SdkBug.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
SdkBug['SeverityEnum'] = {

    /**
     * value: "SEVERITY_UNSPECIFIED"
     * @const
     */
    "SEVERITY_UNSPECIFIED": "SEVERITY_UNSPECIFIED",

    /**
     * value: "NOTICE"
     * @const
     */
    "NOTICE": "NOTICE",

    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",

    /**
     * value: "SEVERE"
     * @const
     */
    "SEVERE": "SEVERE"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
SdkBug['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "GENERAL"
     * @const
     */
    "GENERAL": "GENERAL",

    /**
     * value: "PERFORMANCE"
     * @const
     */
    "PERFORMANCE": "PERFORMANCE",

    /**
     * value: "DATALOSS"
     * @const
     */
    "DATALOSS": "DATALOSS"
};



export default SdkBug;

