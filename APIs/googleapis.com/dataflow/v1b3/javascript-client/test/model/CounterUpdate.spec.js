/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataflowApi);
  }
}(this, function(expect, DataflowApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataflowApi.CounterUpdate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CounterUpdate', function() {
    it('should create an instance of CounterUpdate', function() {
      // uncomment below and update the code to test CounterUpdate
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be.a(DataflowApi.CounterUpdate);
    });

    it('should have the property _boolean (base name: "boolean")', function() {
      // uncomment below and update the code to test the property _boolean
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property cumulative (base name: "cumulative")', function() {
      // uncomment below and update the code to test the property cumulative
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property distribution (base name: "distribution")', function() {
      // uncomment below and update the code to test the property distribution
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property floatingPoint (base name: "floatingPoint")', function() {
      // uncomment below and update the code to test the property floatingPoint
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property floatingPointList (base name: "floatingPointList")', function() {
      // uncomment below and update the code to test the property floatingPointList
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property floatingPointMean (base name: "floatingPointMean")', function() {
      // uncomment below and update the code to test the property floatingPointMean
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property integer (base name: "integer")', function() {
      // uncomment below and update the code to test the property integer
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property integerGauge (base name: "integerGauge")', function() {
      // uncomment below and update the code to test the property integerGauge
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property integerList (base name: "integerList")', function() {
      // uncomment below and update the code to test the property integerList
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property integerMean (base name: "integerMean")', function() {
      // uncomment below and update the code to test the property integerMean
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property internal (base name: "internal")', function() {
      // uncomment below and update the code to test the property internal
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property nameAndKind (base name: "nameAndKind")', function() {
      // uncomment below and update the code to test the property nameAndKind
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property shortId (base name: "shortId")', function() {
      // uncomment below and update the code to test the property shortId
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property stringList (base name: "stringList")', function() {
      // uncomment below and update the code to test the property stringList
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

    it('should have the property structuredNameAndMetadata (base name: "structuredNameAndMetadata")', function() {
      // uncomment below and update the code to test the property structuredNameAndMetadata
      //var instance = new DataflowApi.CounterUpdate();
      //expect(instance).to.be();
    });

  });

}));
