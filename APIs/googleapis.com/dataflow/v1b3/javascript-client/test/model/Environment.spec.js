/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataflowApi);
  }
}(this, function(expect, DataflowApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataflowApi.Environment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Environment', function() {
    it('should create an instance of Environment', function() {
      // uncomment below and update the code to test Environment
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be.a(DataflowApi.Environment);
    });

    it('should have the property clusterManagerApiService (base name: "clusterManagerApiService")', function() {
      // uncomment below and update the code to test the property clusterManagerApiService
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property dataset (base name: "dataset")', function() {
      // uncomment below and update the code to test the property dataset
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property debugOptions (base name: "debugOptions")', function() {
      // uncomment below and update the code to test the property debugOptions
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property experiments (base name: "experiments")', function() {
      // uncomment below and update the code to test the property experiments
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property flexResourceSchedulingGoal (base name: "flexResourceSchedulingGoal")', function() {
      // uncomment below and update the code to test the property flexResourceSchedulingGoal
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property internalExperiments (base name: "internalExperiments")', function() {
      // uncomment below and update the code to test the property internalExperiments
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property sdkPipelineOptions (base name: "sdkPipelineOptions")', function() {
      // uncomment below and update the code to test the property sdkPipelineOptions
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property serviceAccountEmail (base name: "serviceAccountEmail")', function() {
      // uncomment below and update the code to test the property serviceAccountEmail
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property serviceKmsKeyName (base name: "serviceKmsKeyName")', function() {
      // uncomment below and update the code to test the property serviceKmsKeyName
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property serviceOptions (base name: "serviceOptions")', function() {
      // uncomment below and update the code to test the property serviceOptions
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property shuffleMode (base name: "shuffleMode")', function() {
      // uncomment below and update the code to test the property shuffleMode
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property streamingMode (base name: "streamingMode")', function() {
      // uncomment below and update the code to test the property streamingMode
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property tempStoragePrefix (base name: "tempStoragePrefix")', function() {
      // uncomment below and update the code to test the property tempStoragePrefix
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property useStreamingEngineResourceBasedBilling (base name: "useStreamingEngineResourceBasedBilling")', function() {
      // uncomment below and update the code to test the property useStreamingEngineResourceBasedBilling
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "userAgent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property workerPools (base name: "workerPools")', function() {
      // uncomment below and update the code to test the property workerPools
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property workerRegion (base name: "workerRegion")', function() {
      // uncomment below and update the code to test the property workerRegion
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property workerZone (base name: "workerZone")', function() {
      // uncomment below and update the code to test the property workerZone
      //var instance = new DataflowApi.Environment();
      //expect(instance).to.be();
    });

  });

}));
