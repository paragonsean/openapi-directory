/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataflowApi);
  }
}(this, function(expect, DataflowApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataflowApi.TaskRunnerSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaskRunnerSettings', function() {
    it('should create an instance of TaskRunnerSettings', function() {
      // uncomment below and update the code to test TaskRunnerSettings
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be.a(DataflowApi.TaskRunnerSettings);
    });

    it('should have the property alsologtostderr (base name: "alsologtostderr")', function() {
      // uncomment below and update the code to test the property alsologtostderr
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property baseTaskDir (base name: "baseTaskDir")', function() {
      // uncomment below and update the code to test the property baseTaskDir
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property baseUrl (base name: "baseUrl")', function() {
      // uncomment below and update the code to test the property baseUrl
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property commandlinesFileName (base name: "commandlinesFileName")', function() {
      // uncomment below and update the code to test the property commandlinesFileName
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property continueOnException (base name: "continueOnException")', function() {
      // uncomment below and update the code to test the property continueOnException
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property dataflowApiVersion (base name: "dataflowApiVersion")', function() {
      // uncomment below and update the code to test the property dataflowApiVersion
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property harnessCommand (base name: "harnessCommand")', function() {
      // uncomment below and update the code to test the property harnessCommand
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property languageHint (base name: "languageHint")', function() {
      // uncomment below and update the code to test the property languageHint
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property logDir (base name: "logDir")', function() {
      // uncomment below and update the code to test the property logDir
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property logToSerialconsole (base name: "logToSerialconsole")', function() {
      // uncomment below and update the code to test the property logToSerialconsole
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property logUploadLocation (base name: "logUploadLocation")', function() {
      // uncomment below and update the code to test the property logUploadLocation
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property oauthScopes (base name: "oauthScopes")', function() {
      // uncomment below and update the code to test the property oauthScopes
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property parallelWorkerSettings (base name: "parallelWorkerSettings")', function() {
      // uncomment below and update the code to test the property parallelWorkerSettings
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property streamingWorkerMainClass (base name: "streamingWorkerMainClass")', function() {
      // uncomment below and update the code to test the property streamingWorkerMainClass
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property taskGroup (base name: "taskGroup")', function() {
      // uncomment below and update the code to test the property taskGroup
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property taskUser (base name: "taskUser")', function() {
      // uncomment below and update the code to test the property taskUser
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property tempStoragePrefix (base name: "tempStoragePrefix")', function() {
      // uncomment below and update the code to test the property tempStoragePrefix
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property vmId (base name: "vmId")', function() {
      // uncomment below and update the code to test the property vmId
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

    it('should have the property workflowFileName (base name: "workflowFileName")', function() {
      // uncomment below and update the code to test the property workflowFileName
      //var instance = new DataflowApi.TaskRunnerSettings();
      //expect(instance).to.be();
    });

  });

}));
