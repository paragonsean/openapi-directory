/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataflowApi);
  }
}(this, function(expect, DataflowApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataflowApi.Job();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Job', function() {
    it('should create an instance of Job', function() {
      // uncomment below and update the code to test Job
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be.a(DataflowApi.Job);
    });

    it('should have the property clientRequestId (base name: "clientRequestId")', function() {
      // uncomment below and update the code to test the property clientRequestId
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property createdFromSnapshotId (base name: "createdFromSnapshotId")', function() {
      // uncomment below and update the code to test the property createdFromSnapshotId
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property currentState (base name: "currentState")', function() {
      // uncomment below and update the code to test the property currentState
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property currentStateTime (base name: "currentStateTime")', function() {
      // uncomment below and update the code to test the property currentStateTime
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property executionInfo (base name: "executionInfo")', function() {
      // uncomment below and update the code to test the property executionInfo
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property jobMetadata (base name: "jobMetadata")', function() {
      // uncomment below and update the code to test the property jobMetadata
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property pipelineDescription (base name: "pipelineDescription")', function() {
      // uncomment below and update the code to test the property pipelineDescription
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "projectId")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property replaceJobId (base name: "replaceJobId")', function() {
      // uncomment below and update the code to test the property replaceJobId
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property replacedByJobId (base name: "replacedByJobId")', function() {
      // uncomment below and update the code to test the property replacedByJobId
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property requestedState (base name: "requestedState")', function() {
      // uncomment below and update the code to test the property requestedState
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property runtimeUpdatableParams (base name: "runtimeUpdatableParams")', function() {
      // uncomment below and update the code to test the property runtimeUpdatableParams
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzi (base name: "satisfiesPzi")', function() {
      // uncomment below and update the code to test the property satisfiesPzi
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property satisfiesPzs (base name: "satisfiesPzs")', function() {
      // uncomment below and update the code to test the property satisfiesPzs
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property stageStates (base name: "stageStates")', function() {
      // uncomment below and update the code to test the property stageStates
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property steps (base name: "steps")', function() {
      // uncomment below and update the code to test the property steps
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property stepsLocation (base name: "stepsLocation")', function() {
      // uncomment below and update the code to test the property stepsLocation
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property tempFiles (base name: "tempFiles")', function() {
      // uncomment below and update the code to test the property tempFiles
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property transformNameMapping (base name: "transformNameMapping")', function() {
      // uncomment below and update the code to test the property transformNameMapping
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new DataflowApi.Job();
      //expect(instance).to.be();
    });

  });

}));
