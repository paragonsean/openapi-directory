/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICounterStructuredName.h
 *
 * Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.
 */

#ifndef OAICounterStructuredName_H
#define OAICounterStructuredName_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICounterStructuredName : public OAIObject {
public:
    OAICounterStructuredName();
    OAICounterStructuredName(QString json);
    ~OAICounterStructuredName() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComponentStepName() const;
    void setComponentStepName(const QString &component_step_name);
    bool is_component_step_name_Set() const;
    bool is_component_step_name_Valid() const;

    QString getExecutionStepName() const;
    void setExecutionStepName(const QString &execution_step_name);
    bool is_execution_step_name_Set() const;
    bool is_execution_step_name_Valid() const;

    qint32 getInputIndex() const;
    void setInputIndex(const qint32 &input_index);
    bool is_input_index_Set() const;
    bool is_input_index_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getOriginNamespace() const;
    void setOriginNamespace(const QString &origin_namespace);
    bool is_origin_namespace_Set() const;
    bool is_origin_namespace_Valid() const;

    QString getOriginalRequestingStepName() const;
    void setOriginalRequestingStepName(const QString &original_requesting_step_name);
    bool is_original_requesting_step_name_Set() const;
    bool is_original_requesting_step_name_Valid() const;

    QString getOriginalStepName() const;
    void setOriginalStepName(const QString &original_step_name);
    bool is_original_step_name_Set() const;
    bool is_original_step_name_Valid() const;

    QString getPortion() const;
    void setPortion(const QString &portion);
    bool is_portion_Set() const;
    bool is_portion_Valid() const;

    QString getWorkerId() const;
    void setWorkerId(const QString &worker_id);
    bool is_worker_id_Set() const;
    bool is_worker_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_component_step_name;
    bool m_component_step_name_isSet;
    bool m_component_step_name_isValid;

    QString m_execution_step_name;
    bool m_execution_step_name_isSet;
    bool m_execution_step_name_isValid;

    qint32 m_input_index;
    bool m_input_index_isSet;
    bool m_input_index_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_origin_namespace;
    bool m_origin_namespace_isSet;
    bool m_origin_namespace_isValid;

    QString m_original_requesting_step_name;
    bool m_original_requesting_step_name_isSet;
    bool m_original_requesting_step_name_isValid;

    QString m_original_step_name;
    bool m_original_step_name_isSet;
    bool m_original_step_name_isValid;

    QString m_portion;
    bool m_portion_isSet;
    bool m_portion_isValid;

    QString m_worker_id;
    bool m_worker_id_isSet;
    bool m_worker_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICounterStructuredName)

#endif // OAICounterStructuredName_H
