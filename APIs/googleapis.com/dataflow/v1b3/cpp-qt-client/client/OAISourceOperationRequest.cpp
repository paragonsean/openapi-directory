/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceOperationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceOperationRequest::OAISourceOperationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceOperationRequest::OAISourceOperationRequest() {
    this->initializeModel();
}

OAISourceOperationRequest::~OAISourceOperationRequest() {}

void OAISourceOperationRequest::initializeModel() {

    m_get_metadata_isSet = false;
    m_get_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_original_name_isSet = false;
    m_original_name_isValid = false;

    m_split_isSet = false;
    m_split_isValid = false;

    m_stage_name_isSet = false;
    m_stage_name_isValid = false;

    m_system_name_isSet = false;
    m_system_name_isValid = false;
}

void OAISourceOperationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceOperationRequest::fromJsonObject(QJsonObject json) {

    m_get_metadata_isValid = ::OpenAPI::fromJsonValue(m_get_metadata, json[QString("getMetadata")]);
    m_get_metadata_isSet = !json[QString("getMetadata")].isNull() && m_get_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_original_name_isValid = ::OpenAPI::fromJsonValue(m_original_name, json[QString("originalName")]);
    m_original_name_isSet = !json[QString("originalName")].isNull() && m_original_name_isValid;

    m_split_isValid = ::OpenAPI::fromJsonValue(m_split, json[QString("split")]);
    m_split_isSet = !json[QString("split")].isNull() && m_split_isValid;

    m_stage_name_isValid = ::OpenAPI::fromJsonValue(m_stage_name, json[QString("stageName")]);
    m_stage_name_isSet = !json[QString("stageName")].isNull() && m_stage_name_isValid;

    m_system_name_isValid = ::OpenAPI::fromJsonValue(m_system_name, json[QString("systemName")]);
    m_system_name_isSet = !json[QString("systemName")].isNull() && m_system_name_isValid;
}

QString OAISourceOperationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceOperationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_get_metadata.isSet()) {
        obj.insert(QString("getMetadata"), ::OpenAPI::toJsonValue(m_get_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_original_name_isSet) {
        obj.insert(QString("originalName"), ::OpenAPI::toJsonValue(m_original_name));
    }
    if (m_split.isSet()) {
        obj.insert(QString("split"), ::OpenAPI::toJsonValue(m_split));
    }
    if (m_stage_name_isSet) {
        obj.insert(QString("stageName"), ::OpenAPI::toJsonValue(m_stage_name));
    }
    if (m_system_name_isSet) {
        obj.insert(QString("systemName"), ::OpenAPI::toJsonValue(m_system_name));
    }
    return obj;
}

OAISourceGetMetadataRequest OAISourceOperationRequest::getGetMetadata() const {
    return m_get_metadata;
}
void OAISourceOperationRequest::setGetMetadata(const OAISourceGetMetadataRequest &get_metadata) {
    m_get_metadata = get_metadata;
    m_get_metadata_isSet = true;
}

bool OAISourceOperationRequest::is_get_metadata_Set() const{
    return m_get_metadata_isSet;
}

bool OAISourceOperationRequest::is_get_metadata_Valid() const{
    return m_get_metadata_isValid;
}

QString OAISourceOperationRequest::getName() const {
    return m_name;
}
void OAISourceOperationRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISourceOperationRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAISourceOperationRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISourceOperationRequest::getOriginalName() const {
    return m_original_name;
}
void OAISourceOperationRequest::setOriginalName(const QString &original_name) {
    m_original_name = original_name;
    m_original_name_isSet = true;
}

bool OAISourceOperationRequest::is_original_name_Set() const{
    return m_original_name_isSet;
}

bool OAISourceOperationRequest::is_original_name_Valid() const{
    return m_original_name_isValid;
}

OAISourceSplitRequest OAISourceOperationRequest::getSplit() const {
    return m_split;
}
void OAISourceOperationRequest::setSplit(const OAISourceSplitRequest &split) {
    m_split = split;
    m_split_isSet = true;
}

bool OAISourceOperationRequest::is_split_Set() const{
    return m_split_isSet;
}

bool OAISourceOperationRequest::is_split_Valid() const{
    return m_split_isValid;
}

QString OAISourceOperationRequest::getStageName() const {
    return m_stage_name;
}
void OAISourceOperationRequest::setStageName(const QString &stage_name) {
    m_stage_name = stage_name;
    m_stage_name_isSet = true;
}

bool OAISourceOperationRequest::is_stage_name_Set() const{
    return m_stage_name_isSet;
}

bool OAISourceOperationRequest::is_stage_name_Valid() const{
    return m_stage_name_isValid;
}

QString OAISourceOperationRequest::getSystemName() const {
    return m_system_name;
}
void OAISourceOperationRequest::setSystemName(const QString &system_name) {
    m_system_name = system_name;
    m_system_name_isSet = true;
}

bool OAISourceOperationRequest::is_system_name_Set() const{
    return m_system_name_isSet;
}

bool OAISourceOperationRequest::is_system_name_Valid() const{
    return m_system_name_isValid;
}

bool OAISourceOperationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_get_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_split.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceOperationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
