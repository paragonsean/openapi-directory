/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStreamingComputationConfig.h
 *
 * Configuration information for a single streaming computation.
 */

#ifndef OAIStreamingComputationConfig_H
#define OAIStreamingComputationConfig_H

#include <QJsonObject>

#include "OAIParallelInstruction.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParallelInstruction;

class OAIStreamingComputationConfig : public OAIObject {
public:
    OAIStreamingComputationConfig();
    OAIStreamingComputationConfig(QString json);
    ~OAIStreamingComputationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComputationId() const;
    void setComputationId(const QString &computation_id);
    bool is_computation_id_Set() const;
    bool is_computation_id_Valid() const;

    QList<OAIParallelInstruction> getInstructions() const;
    void setInstructions(const QList<OAIParallelInstruction> &instructions);
    bool is_instructions_Set() const;
    bool is_instructions_Valid() const;

    QString getStageName() const;
    void setStageName(const QString &stage_name);
    bool is_stage_name_Set() const;
    bool is_stage_name_Valid() const;

    QString getSystemName() const;
    void setSystemName(const QString &system_name);
    bool is_system_name_Set() const;
    bool is_system_name_Valid() const;

    QMap<QString, QString> getTransformUserNameToStateFamily() const;
    void setTransformUserNameToStateFamily(const QMap<QString, QString> &transform_user_name_to_state_family);
    bool is_transform_user_name_to_state_family_Set() const;
    bool is_transform_user_name_to_state_family_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_computation_id;
    bool m_computation_id_isSet;
    bool m_computation_id_isValid;

    QList<OAIParallelInstruction> m_instructions;
    bool m_instructions_isSet;
    bool m_instructions_isValid;

    QString m_stage_name;
    bool m_stage_name_isSet;
    bool m_stage_name_isValid;

    QString m_system_name;
    bool m_system_name_isSet;
    bool m_system_name_isValid;

    QMap<QString, QString> m_transform_user_name_to_state_family;
    bool m_transform_user_name_to_state_family_isSet;
    bool m_transform_user_name_to_state_family_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStreamingComputationConfig)

#endif // OAIStreamingComputationConfig_H
