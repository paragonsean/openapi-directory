/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetricShortId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetricShortId::OAIMetricShortId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetricShortId::OAIMetricShortId() {
    this->initializeModel();
}

OAIMetricShortId::~OAIMetricShortId() {}

void OAIMetricShortId::initializeModel() {

    m_metric_index_isSet = false;
    m_metric_index_isValid = false;

    m_short_id_isSet = false;
    m_short_id_isValid = false;
}

void OAIMetricShortId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetricShortId::fromJsonObject(QJsonObject json) {

    m_metric_index_isValid = ::OpenAPI::fromJsonValue(m_metric_index, json[QString("metricIndex")]);
    m_metric_index_isSet = !json[QString("metricIndex")].isNull() && m_metric_index_isValid;

    m_short_id_isValid = ::OpenAPI::fromJsonValue(m_short_id, json[QString("shortId")]);
    m_short_id_isSet = !json[QString("shortId")].isNull() && m_short_id_isValid;
}

QString OAIMetricShortId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetricShortId::asJsonObject() const {
    QJsonObject obj;
    if (m_metric_index_isSet) {
        obj.insert(QString("metricIndex"), ::OpenAPI::toJsonValue(m_metric_index));
    }
    if (m_short_id_isSet) {
        obj.insert(QString("shortId"), ::OpenAPI::toJsonValue(m_short_id));
    }
    return obj;
}

qint32 OAIMetricShortId::getMetricIndex() const {
    return m_metric_index;
}
void OAIMetricShortId::setMetricIndex(const qint32 &metric_index) {
    m_metric_index = metric_index;
    m_metric_index_isSet = true;
}

bool OAIMetricShortId::is_metric_index_Set() const{
    return m_metric_index_isSet;
}

bool OAIMetricShortId::is_metric_index_Valid() const{
    return m_metric_index_isValid;
}

QString OAIMetricShortId::getShortId() const {
    return m_short_id;
}
void OAIMetricShortId::setShortId(const QString &short_id) {
    m_short_id = short_id;
    m_short_id_isSet = true;
}

bool OAIMetricShortId::is_short_id_Set() const{
    return m_short_id_isSet;
}

bool OAIMetricShortId::is_short_id_Valid() const{
    return m_short_id_isValid;
}

bool OAIMetricShortId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetricShortId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
