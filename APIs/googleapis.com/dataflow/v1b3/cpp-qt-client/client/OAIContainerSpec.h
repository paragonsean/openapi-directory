/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerSpec.h
 *
 * Container Spec.
 */

#ifndef OAIContainerSpec_H
#define OAIContainerSpec_H

#include <QJsonObject>

#include "OAIFlexTemplateRuntimeEnvironment.h"
#include "OAISDKInfo.h"
#include "OAITemplateMetadata.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFlexTemplateRuntimeEnvironment;
class OAITemplateMetadata;
class OAISDKInfo;

class OAIContainerSpec : public OAIObject {
public:
    OAIContainerSpec();
    OAIContainerSpec(QString json);
    ~OAIContainerSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFlexTemplateRuntimeEnvironment getDefaultEnvironment() const;
    void setDefaultEnvironment(const OAIFlexTemplateRuntimeEnvironment &default_environment);
    bool is_default_environment_Set() const;
    bool is_default_environment_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getImageRepositoryCertPath() const;
    void setImageRepositoryCertPath(const QString &image_repository_cert_path);
    bool is_image_repository_cert_path_Set() const;
    bool is_image_repository_cert_path_Valid() const;

    QString getImageRepositoryPasswordSecretId() const;
    void setImageRepositoryPasswordSecretId(const QString &image_repository_password_secret_id);
    bool is_image_repository_password_secret_id_Set() const;
    bool is_image_repository_password_secret_id_Valid() const;

    QString getImageRepositoryUsernameSecretId() const;
    void setImageRepositoryUsernameSecretId(const QString &image_repository_username_secret_id);
    bool is_image_repository_username_secret_id_Set() const;
    bool is_image_repository_username_secret_id_Valid() const;

    OAITemplateMetadata getMetadata() const;
    void setMetadata(const OAITemplateMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAISDKInfo getSdkInfo() const;
    void setSdkInfo(const OAISDKInfo &sdk_info);
    bool is_sdk_info_Set() const;
    bool is_sdk_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFlexTemplateRuntimeEnvironment m_default_environment;
    bool m_default_environment_isSet;
    bool m_default_environment_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_image_repository_cert_path;
    bool m_image_repository_cert_path_isSet;
    bool m_image_repository_cert_path_isValid;

    QString m_image_repository_password_secret_id;
    bool m_image_repository_password_secret_id_isSet;
    bool m_image_repository_password_secret_id_isValid;

    QString m_image_repository_username_secret_id;
    bool m_image_repository_username_secret_id_isSet;
    bool m_image_repository_username_secret_id_isValid;

    OAITemplateMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAISDKInfo m_sdk_info;
    bool m_sdk_info_isSet;
    bool m_sdk_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerSpec)

#endif // OAIContainerSpec_H
