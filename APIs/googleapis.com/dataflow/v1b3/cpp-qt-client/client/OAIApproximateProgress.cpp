/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApproximateProgress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApproximateProgress::OAIApproximateProgress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApproximateProgress::OAIApproximateProgress() {
    this->initializeModel();
}

OAIApproximateProgress::~OAIApproximateProgress() {}

void OAIApproximateProgress::initializeModel() {

    m_percent_complete_isSet = false;
    m_percent_complete_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_remaining_time_isSet = false;
    m_remaining_time_isValid = false;
}

void OAIApproximateProgress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApproximateProgress::fromJsonObject(QJsonObject json) {

    m_percent_complete_isValid = ::OpenAPI::fromJsonValue(m_percent_complete, json[QString("percentComplete")]);
    m_percent_complete_isSet = !json[QString("percentComplete")].isNull() && m_percent_complete_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_remaining_time_isValid = ::OpenAPI::fromJsonValue(m_remaining_time, json[QString("remainingTime")]);
    m_remaining_time_isSet = !json[QString("remainingTime")].isNull() && m_remaining_time_isValid;
}

QString OAIApproximateProgress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApproximateProgress::asJsonObject() const {
    QJsonObject obj;
    if (m_percent_complete_isSet) {
        obj.insert(QString("percentComplete"), ::OpenAPI::toJsonValue(m_percent_complete));
    }
    if (m_position.isSet()) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_remaining_time_isSet) {
        obj.insert(QString("remainingTime"), ::OpenAPI::toJsonValue(m_remaining_time));
    }
    return obj;
}

float OAIApproximateProgress::getPercentComplete() const {
    return m_percent_complete;
}
void OAIApproximateProgress::setPercentComplete(const float &percent_complete) {
    m_percent_complete = percent_complete;
    m_percent_complete_isSet = true;
}

bool OAIApproximateProgress::is_percent_complete_Set() const{
    return m_percent_complete_isSet;
}

bool OAIApproximateProgress::is_percent_complete_Valid() const{
    return m_percent_complete_isValid;
}

OAIPosition OAIApproximateProgress::getPosition() const {
    return m_position;
}
void OAIApproximateProgress::setPosition(const OAIPosition &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIApproximateProgress::is_position_Set() const{
    return m_position_isSet;
}

bool OAIApproximateProgress::is_position_Valid() const{
    return m_position_isValid;
}

QString OAIApproximateProgress::getRemainingTime() const {
    return m_remaining_time;
}
void OAIApproximateProgress::setRemainingTime(const QString &remaining_time) {
    m_remaining_time = remaining_time;
    m_remaining_time_isSet = true;
}

bool OAIApproximateProgress::is_remaining_time_Set() const{
    return m_remaining_time_isSet;
}

bool OAIApproximateProgress::is_remaining_time_Valid() const{
    return m_remaining_time_isValid;
}

bool OAIApproximateProgress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_percent_complete_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_remaining_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApproximateProgress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
