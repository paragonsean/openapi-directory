/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParameterMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParameterMetadata::OAIParameterMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParameterMetadata::OAIParameterMetadata() {
    this->initializeModel();
}

OAIParameterMetadata::~OAIParameterMetadata() {}

void OAIParameterMetadata::initializeModel() {

    m_custom_metadata_isSet = false;
    m_custom_metadata_isValid = false;

    m_default_value_isSet = false;
    m_default_value_isValid = false;

    m_enum_options_isSet = false;
    m_enum_options_isValid = false;

    m_group_name_isSet = false;
    m_group_name_isValid = false;

    m_help_text_isSet = false;
    m_help_text_isValid = false;

    m_hidden_ui_isSet = false;
    m_hidden_ui_isValid = false;

    m_is_optional_isSet = false;
    m_is_optional_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_param_type_isSet = false;
    m_param_type_isValid = false;

    m_parent_name_isSet = false;
    m_parent_name_isValid = false;

    m_parent_trigger_values_isSet = false;
    m_parent_trigger_values_isValid = false;

    m_regexes_isSet = false;
    m_regexes_isValid = false;
}

void OAIParameterMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParameterMetadata::fromJsonObject(QJsonObject json) {

    m_custom_metadata_isValid = ::OpenAPI::fromJsonValue(m_custom_metadata, json[QString("customMetadata")]);
    m_custom_metadata_isSet = !json[QString("customMetadata")].isNull() && m_custom_metadata_isValid;

    m_default_value_isValid = ::OpenAPI::fromJsonValue(m_default_value, json[QString("defaultValue")]);
    m_default_value_isSet = !json[QString("defaultValue")].isNull() && m_default_value_isValid;

    m_enum_options_isValid = ::OpenAPI::fromJsonValue(m_enum_options, json[QString("enumOptions")]);
    m_enum_options_isSet = !json[QString("enumOptions")].isNull() && m_enum_options_isValid;

    m_group_name_isValid = ::OpenAPI::fromJsonValue(m_group_name, json[QString("groupName")]);
    m_group_name_isSet = !json[QString("groupName")].isNull() && m_group_name_isValid;

    m_help_text_isValid = ::OpenAPI::fromJsonValue(m_help_text, json[QString("helpText")]);
    m_help_text_isSet = !json[QString("helpText")].isNull() && m_help_text_isValid;

    m_hidden_ui_isValid = ::OpenAPI::fromJsonValue(m_hidden_ui, json[QString("hiddenUi")]);
    m_hidden_ui_isSet = !json[QString("hiddenUi")].isNull() && m_hidden_ui_isValid;

    m_is_optional_isValid = ::OpenAPI::fromJsonValue(m_is_optional, json[QString("isOptional")]);
    m_is_optional_isSet = !json[QString("isOptional")].isNull() && m_is_optional_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_param_type_isValid = ::OpenAPI::fromJsonValue(m_param_type, json[QString("paramType")]);
    m_param_type_isSet = !json[QString("paramType")].isNull() && m_param_type_isValid;

    m_parent_name_isValid = ::OpenAPI::fromJsonValue(m_parent_name, json[QString("parentName")]);
    m_parent_name_isSet = !json[QString("parentName")].isNull() && m_parent_name_isValid;

    m_parent_trigger_values_isValid = ::OpenAPI::fromJsonValue(m_parent_trigger_values, json[QString("parentTriggerValues")]);
    m_parent_trigger_values_isSet = !json[QString("parentTriggerValues")].isNull() && m_parent_trigger_values_isValid;

    m_regexes_isValid = ::OpenAPI::fromJsonValue(m_regexes, json[QString("regexes")]);
    m_regexes_isSet = !json[QString("regexes")].isNull() && m_regexes_isValid;
}

QString OAIParameterMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParameterMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_metadata.size() > 0) {
        obj.insert(QString("customMetadata"), ::OpenAPI::toJsonValue(m_custom_metadata));
    }
    if (m_default_value_isSet) {
        obj.insert(QString("defaultValue"), ::OpenAPI::toJsonValue(m_default_value));
    }
    if (m_enum_options.size() > 0) {
        obj.insert(QString("enumOptions"), ::OpenAPI::toJsonValue(m_enum_options));
    }
    if (m_group_name_isSet) {
        obj.insert(QString("groupName"), ::OpenAPI::toJsonValue(m_group_name));
    }
    if (m_help_text_isSet) {
        obj.insert(QString("helpText"), ::OpenAPI::toJsonValue(m_help_text));
    }
    if (m_hidden_ui_isSet) {
        obj.insert(QString("hiddenUi"), ::OpenAPI::toJsonValue(m_hidden_ui));
    }
    if (m_is_optional_isSet) {
        obj.insert(QString("isOptional"), ::OpenAPI::toJsonValue(m_is_optional));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_param_type_isSet) {
        obj.insert(QString("paramType"), ::OpenAPI::toJsonValue(m_param_type));
    }
    if (m_parent_name_isSet) {
        obj.insert(QString("parentName"), ::OpenAPI::toJsonValue(m_parent_name));
    }
    if (m_parent_trigger_values.size() > 0) {
        obj.insert(QString("parentTriggerValues"), ::OpenAPI::toJsonValue(m_parent_trigger_values));
    }
    if (m_regexes.size() > 0) {
        obj.insert(QString("regexes"), ::OpenAPI::toJsonValue(m_regexes));
    }
    return obj;
}

QMap<QString, QString> OAIParameterMetadata::getCustomMetadata() const {
    return m_custom_metadata;
}
void OAIParameterMetadata::setCustomMetadata(const QMap<QString, QString> &custom_metadata) {
    m_custom_metadata = custom_metadata;
    m_custom_metadata_isSet = true;
}

bool OAIParameterMetadata::is_custom_metadata_Set() const{
    return m_custom_metadata_isSet;
}

bool OAIParameterMetadata::is_custom_metadata_Valid() const{
    return m_custom_metadata_isValid;
}

QString OAIParameterMetadata::getDefaultValue() const {
    return m_default_value;
}
void OAIParameterMetadata::setDefaultValue(const QString &default_value) {
    m_default_value = default_value;
    m_default_value_isSet = true;
}

bool OAIParameterMetadata::is_default_value_Set() const{
    return m_default_value_isSet;
}

bool OAIParameterMetadata::is_default_value_Valid() const{
    return m_default_value_isValid;
}

QList<OAIParameterMetadataEnumOption> OAIParameterMetadata::getEnumOptions() const {
    return m_enum_options;
}
void OAIParameterMetadata::setEnumOptions(const QList<OAIParameterMetadataEnumOption> &enum_options) {
    m_enum_options = enum_options;
    m_enum_options_isSet = true;
}

bool OAIParameterMetadata::is_enum_options_Set() const{
    return m_enum_options_isSet;
}

bool OAIParameterMetadata::is_enum_options_Valid() const{
    return m_enum_options_isValid;
}

QString OAIParameterMetadata::getGroupName() const {
    return m_group_name;
}
void OAIParameterMetadata::setGroupName(const QString &group_name) {
    m_group_name = group_name;
    m_group_name_isSet = true;
}

bool OAIParameterMetadata::is_group_name_Set() const{
    return m_group_name_isSet;
}

bool OAIParameterMetadata::is_group_name_Valid() const{
    return m_group_name_isValid;
}

QString OAIParameterMetadata::getHelpText() const {
    return m_help_text;
}
void OAIParameterMetadata::setHelpText(const QString &help_text) {
    m_help_text = help_text;
    m_help_text_isSet = true;
}

bool OAIParameterMetadata::is_help_text_Set() const{
    return m_help_text_isSet;
}

bool OAIParameterMetadata::is_help_text_Valid() const{
    return m_help_text_isValid;
}

bool OAIParameterMetadata::isHiddenUi() const {
    return m_hidden_ui;
}
void OAIParameterMetadata::setHiddenUi(const bool &hidden_ui) {
    m_hidden_ui = hidden_ui;
    m_hidden_ui_isSet = true;
}

bool OAIParameterMetadata::is_hidden_ui_Set() const{
    return m_hidden_ui_isSet;
}

bool OAIParameterMetadata::is_hidden_ui_Valid() const{
    return m_hidden_ui_isValid;
}

bool OAIParameterMetadata::isIsOptional() const {
    return m_is_optional;
}
void OAIParameterMetadata::setIsOptional(const bool &is_optional) {
    m_is_optional = is_optional;
    m_is_optional_isSet = true;
}

bool OAIParameterMetadata::is_is_optional_Set() const{
    return m_is_optional_isSet;
}

bool OAIParameterMetadata::is_is_optional_Valid() const{
    return m_is_optional_isValid;
}

QString OAIParameterMetadata::getLabel() const {
    return m_label;
}
void OAIParameterMetadata::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIParameterMetadata::is_label_Set() const{
    return m_label_isSet;
}

bool OAIParameterMetadata::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIParameterMetadata::getName() const {
    return m_name;
}
void OAIParameterMetadata::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIParameterMetadata::is_name_Set() const{
    return m_name_isSet;
}

bool OAIParameterMetadata::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIParameterMetadata::getParamType() const {
    return m_param_type;
}
void OAIParameterMetadata::setParamType(const QString &param_type) {
    m_param_type = param_type;
    m_param_type_isSet = true;
}

bool OAIParameterMetadata::is_param_type_Set() const{
    return m_param_type_isSet;
}

bool OAIParameterMetadata::is_param_type_Valid() const{
    return m_param_type_isValid;
}

QString OAIParameterMetadata::getParentName() const {
    return m_parent_name;
}
void OAIParameterMetadata::setParentName(const QString &parent_name) {
    m_parent_name = parent_name;
    m_parent_name_isSet = true;
}

bool OAIParameterMetadata::is_parent_name_Set() const{
    return m_parent_name_isSet;
}

bool OAIParameterMetadata::is_parent_name_Valid() const{
    return m_parent_name_isValid;
}

QList<QString> OAIParameterMetadata::getParentTriggerValues() const {
    return m_parent_trigger_values;
}
void OAIParameterMetadata::setParentTriggerValues(const QList<QString> &parent_trigger_values) {
    m_parent_trigger_values = parent_trigger_values;
    m_parent_trigger_values_isSet = true;
}

bool OAIParameterMetadata::is_parent_trigger_values_Set() const{
    return m_parent_trigger_values_isSet;
}

bool OAIParameterMetadata::is_parent_trigger_values_Valid() const{
    return m_parent_trigger_values_isValid;
}

QList<QString> OAIParameterMetadata::getRegexes() const {
    return m_regexes;
}
void OAIParameterMetadata::setRegexes(const QList<QString> &regexes) {
    m_regexes = regexes;
    m_regexes_isSet = true;
}

bool OAIParameterMetadata::is_regexes_Set() const{
    return m_regexes_isSet;
}

bool OAIParameterMetadata::is_regexes_Valid() const{
    return m_regexes_isValid;
}

bool OAIParameterMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enum_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hidden_ui_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_optional_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_param_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_trigger_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_regexes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParameterMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
