/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStructuredMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStructuredMessage::OAIStructuredMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStructuredMessage::OAIStructuredMessage() {
    this->initializeModel();
}

OAIStructuredMessage::~OAIStructuredMessage() {}

void OAIStructuredMessage::initializeModel() {

    m_message_key_isSet = false;
    m_message_key_isValid = false;

    m_message_text_isSet = false;
    m_message_text_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIStructuredMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStructuredMessage::fromJsonObject(QJsonObject json) {

    m_message_key_isValid = ::OpenAPI::fromJsonValue(m_message_key, json[QString("messageKey")]);
    m_message_key_isSet = !json[QString("messageKey")].isNull() && m_message_key_isValid;

    m_message_text_isValid = ::OpenAPI::fromJsonValue(m_message_text, json[QString("messageText")]);
    m_message_text_isSet = !json[QString("messageText")].isNull() && m_message_text_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIStructuredMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStructuredMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_message_key_isSet) {
        obj.insert(QString("messageKey"), ::OpenAPI::toJsonValue(m_message_key));
    }
    if (m_message_text_isSet) {
        obj.insert(QString("messageText"), ::OpenAPI::toJsonValue(m_message_text));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

QString OAIStructuredMessage::getMessageKey() const {
    return m_message_key;
}
void OAIStructuredMessage::setMessageKey(const QString &message_key) {
    m_message_key = message_key;
    m_message_key_isSet = true;
}

bool OAIStructuredMessage::is_message_key_Set() const{
    return m_message_key_isSet;
}

bool OAIStructuredMessage::is_message_key_Valid() const{
    return m_message_key_isValid;
}

QString OAIStructuredMessage::getMessageText() const {
    return m_message_text;
}
void OAIStructuredMessage::setMessageText(const QString &message_text) {
    m_message_text = message_text;
    m_message_text_isSet = true;
}

bool OAIStructuredMessage::is_message_text_Set() const{
    return m_message_text_isSet;
}

bool OAIStructuredMessage::is_message_text_Valid() const{
    return m_message_text_isValid;
}

QList<OAIParameter> OAIStructuredMessage::getParameters() const {
    return m_parameters;
}
void OAIStructuredMessage::setParameters(const QList<OAIParameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIStructuredMessage::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIStructuredMessage::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIStructuredMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStructuredMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
