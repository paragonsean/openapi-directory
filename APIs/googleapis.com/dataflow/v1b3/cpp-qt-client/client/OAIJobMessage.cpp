/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobMessage::OAIJobMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobMessage::OAIJobMessage() {
    this->initializeModel();
}

OAIJobMessage::~OAIJobMessage() {}

void OAIJobMessage::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_message_importance_isSet = false;
    m_message_importance_isValid = false;

    m_message_text_isSet = false;
    m_message_text_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;
}

void OAIJobMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobMessage::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_message_importance_isValid = ::OpenAPI::fromJsonValue(m_message_importance, json[QString("messageImportance")]);
    m_message_importance_isSet = !json[QString("messageImportance")].isNull() && m_message_importance_isValid;

    m_message_text_isValid = ::OpenAPI::fromJsonValue(m_message_text, json[QString("messageText")]);
    m_message_text_isSet = !json[QString("messageText")].isNull() && m_message_text_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;
}

QString OAIJobMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_message_importance_isSet) {
        obj.insert(QString("messageImportance"), ::OpenAPI::toJsonValue(m_message_importance));
    }
    if (m_message_text_isSet) {
        obj.insert(QString("messageText"), ::OpenAPI::toJsonValue(m_message_text));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    return obj;
}

QString OAIJobMessage::getId() const {
    return m_id;
}
void OAIJobMessage::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIJobMessage::is_id_Set() const{
    return m_id_isSet;
}

bool OAIJobMessage::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIJobMessage::getMessageImportance() const {
    return m_message_importance;
}
void OAIJobMessage::setMessageImportance(const QString &message_importance) {
    m_message_importance = message_importance;
    m_message_importance_isSet = true;
}

bool OAIJobMessage::is_message_importance_Set() const{
    return m_message_importance_isSet;
}

bool OAIJobMessage::is_message_importance_Valid() const{
    return m_message_importance_isValid;
}

QString OAIJobMessage::getMessageText() const {
    return m_message_text;
}
void OAIJobMessage::setMessageText(const QString &message_text) {
    m_message_text = message_text;
    m_message_text_isSet = true;
}

bool OAIJobMessage::is_message_text_Set() const{
    return m_message_text_isSet;
}

bool OAIJobMessage::is_message_text_Valid() const{
    return m_message_text_isValid;
}

QString OAIJobMessage::getTime() const {
    return m_time;
}
void OAIJobMessage::setTime(const QString &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIJobMessage::is_time_Set() const{
    return m_time_isSet;
}

bool OAIJobMessage::is_time_Valid() const{
    return m_time_isValid;
}

bool OAIJobMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_importance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
