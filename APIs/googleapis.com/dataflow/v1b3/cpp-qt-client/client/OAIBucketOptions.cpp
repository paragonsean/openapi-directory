/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBucketOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBucketOptions::OAIBucketOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBucketOptions::OAIBucketOptions() {
    this->initializeModel();
}

OAIBucketOptions::~OAIBucketOptions() {}

void OAIBucketOptions::initializeModel() {

    m_exponential_isSet = false;
    m_exponential_isValid = false;

    m_linear_isSet = false;
    m_linear_isValid = false;
}

void OAIBucketOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBucketOptions::fromJsonObject(QJsonObject json) {

    m_exponential_isValid = ::OpenAPI::fromJsonValue(m_exponential, json[QString("exponential")]);
    m_exponential_isSet = !json[QString("exponential")].isNull() && m_exponential_isValid;

    m_linear_isValid = ::OpenAPI::fromJsonValue(m_linear, json[QString("linear")]);
    m_linear_isSet = !json[QString("linear")].isNull() && m_linear_isValid;
}

QString OAIBucketOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBucketOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_exponential.isSet()) {
        obj.insert(QString("exponential"), ::OpenAPI::toJsonValue(m_exponential));
    }
    if (m_linear.isSet()) {
        obj.insert(QString("linear"), ::OpenAPI::toJsonValue(m_linear));
    }
    return obj;
}

OAIBase2Exponent OAIBucketOptions::getExponential() const {
    return m_exponential;
}
void OAIBucketOptions::setExponential(const OAIBase2Exponent &exponential) {
    m_exponential = exponential;
    m_exponential_isSet = true;
}

bool OAIBucketOptions::is_exponential_Set() const{
    return m_exponential_isSet;
}

bool OAIBucketOptions::is_exponential_Valid() const{
    return m_exponential_isValid;
}

OAILinear OAIBucketOptions::getLinear() const {
    return m_linear;
}
void OAIBucketOptions::setLinear(const OAILinear &linear) {
    m_linear = linear;
    m_linear_isSet = true;
}

bool OAIBucketOptions::is_linear_Set() const{
    return m_linear_isSet;
}

bool OAIBucketOptions::is_linear_Valid() const{
    return m_linear_isValid;
}

bool OAIBucketOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exponential.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_linear.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBucketOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
