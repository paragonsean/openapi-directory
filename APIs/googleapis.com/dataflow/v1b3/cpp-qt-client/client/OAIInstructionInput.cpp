/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstructionInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstructionInput::OAIInstructionInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstructionInput::OAIInstructionInput() {
    this->initializeModel();
}

OAIInstructionInput::~OAIInstructionInput() {}

void OAIInstructionInput::initializeModel() {

    m_output_num_isSet = false;
    m_output_num_isValid = false;

    m_producer_instruction_index_isSet = false;
    m_producer_instruction_index_isValid = false;
}

void OAIInstructionInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstructionInput::fromJsonObject(QJsonObject json) {

    m_output_num_isValid = ::OpenAPI::fromJsonValue(m_output_num, json[QString("outputNum")]);
    m_output_num_isSet = !json[QString("outputNum")].isNull() && m_output_num_isValid;

    m_producer_instruction_index_isValid = ::OpenAPI::fromJsonValue(m_producer_instruction_index, json[QString("producerInstructionIndex")]);
    m_producer_instruction_index_isSet = !json[QString("producerInstructionIndex")].isNull() && m_producer_instruction_index_isValid;
}

QString OAIInstructionInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstructionInput::asJsonObject() const {
    QJsonObject obj;
    if (m_output_num_isSet) {
        obj.insert(QString("outputNum"), ::OpenAPI::toJsonValue(m_output_num));
    }
    if (m_producer_instruction_index_isSet) {
        obj.insert(QString("producerInstructionIndex"), ::OpenAPI::toJsonValue(m_producer_instruction_index));
    }
    return obj;
}

qint32 OAIInstructionInput::getOutputNum() const {
    return m_output_num;
}
void OAIInstructionInput::setOutputNum(const qint32 &output_num) {
    m_output_num = output_num;
    m_output_num_isSet = true;
}

bool OAIInstructionInput::is_output_num_Set() const{
    return m_output_num_isSet;
}

bool OAIInstructionInput::is_output_num_Valid() const{
    return m_output_num_isValid;
}

qint32 OAIInstructionInput::getProducerInstructionIndex() const {
    return m_producer_instruction_index;
}
void OAIInstructionInput::setProducerInstructionIndex(const qint32 &producer_instruction_index) {
    m_producer_instruction_index = producer_instruction_index;
    m_producer_instruction_index_isSet = true;
}

bool OAIInstructionInput::is_producer_instruction_index_Set() const{
    return m_producer_instruction_index_isSet;
}

bool OAIInstructionInput::is_producer_instruction_index_Valid() const{
    return m_producer_instruction_index_isValid;
}

bool OAIInstructionInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_output_num_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_producer_instruction_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstructionInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
