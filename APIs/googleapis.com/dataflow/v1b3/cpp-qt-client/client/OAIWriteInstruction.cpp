/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWriteInstruction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWriteInstruction::OAIWriteInstruction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWriteInstruction::OAIWriteInstruction() {
    this->initializeModel();
}

OAIWriteInstruction::~OAIWriteInstruction() {}

void OAIWriteInstruction::initializeModel() {

    m_input_isSet = false;
    m_input_isValid = false;

    m_sink_isSet = false;
    m_sink_isValid = false;
}

void OAIWriteInstruction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWriteInstruction::fromJsonObject(QJsonObject json) {

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;

    m_sink_isValid = ::OpenAPI::fromJsonValue(m_sink, json[QString("sink")]);
    m_sink_isSet = !json[QString("sink")].isNull() && m_sink_isValid;
}

QString OAIWriteInstruction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWriteInstruction::asJsonObject() const {
    QJsonObject obj;
    if (m_input.isSet()) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    if (m_sink.isSet()) {
        obj.insert(QString("sink"), ::OpenAPI::toJsonValue(m_sink));
    }
    return obj;
}

OAIInstructionInput OAIWriteInstruction::getInput() const {
    return m_input;
}
void OAIWriteInstruction::setInput(const OAIInstructionInput &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAIWriteInstruction::is_input_Set() const{
    return m_input_isSet;
}

bool OAIWriteInstruction::is_input_Valid() const{
    return m_input_isValid;
}

OAISink OAIWriteInstruction::getSink() const {
    return m_sink;
}
void OAIWriteInstruction::setSink(const OAISink &sink) {
    m_sink = sink;
    m_sink_isSet = true;
}

bool OAIWriteInstruction::is_sink_Set() const{
    return m_sink_isSet;
}

bool OAIWriteInstruction::is_sink_Valid() const{
    return m_sink_isValid;
}

bool OAIWriteInstruction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sink.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWriteInstruction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
