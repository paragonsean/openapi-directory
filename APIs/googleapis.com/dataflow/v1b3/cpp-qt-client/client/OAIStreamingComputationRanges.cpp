/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStreamingComputationRanges.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStreamingComputationRanges::OAIStreamingComputationRanges(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStreamingComputationRanges::OAIStreamingComputationRanges() {
    this->initializeModel();
}

OAIStreamingComputationRanges::~OAIStreamingComputationRanges() {}

void OAIStreamingComputationRanges::initializeModel() {

    m_computation_id_isSet = false;
    m_computation_id_isValid = false;

    m_range_assignments_isSet = false;
    m_range_assignments_isValid = false;
}

void OAIStreamingComputationRanges::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStreamingComputationRanges::fromJsonObject(QJsonObject json) {

    m_computation_id_isValid = ::OpenAPI::fromJsonValue(m_computation_id, json[QString("computationId")]);
    m_computation_id_isSet = !json[QString("computationId")].isNull() && m_computation_id_isValid;

    m_range_assignments_isValid = ::OpenAPI::fromJsonValue(m_range_assignments, json[QString("rangeAssignments")]);
    m_range_assignments_isSet = !json[QString("rangeAssignments")].isNull() && m_range_assignments_isValid;
}

QString OAIStreamingComputationRanges::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStreamingComputationRanges::asJsonObject() const {
    QJsonObject obj;
    if (m_computation_id_isSet) {
        obj.insert(QString("computationId"), ::OpenAPI::toJsonValue(m_computation_id));
    }
    if (m_range_assignments.size() > 0) {
        obj.insert(QString("rangeAssignments"), ::OpenAPI::toJsonValue(m_range_assignments));
    }
    return obj;
}

QString OAIStreamingComputationRanges::getComputationId() const {
    return m_computation_id;
}
void OAIStreamingComputationRanges::setComputationId(const QString &computation_id) {
    m_computation_id = computation_id;
    m_computation_id_isSet = true;
}

bool OAIStreamingComputationRanges::is_computation_id_Set() const{
    return m_computation_id_isSet;
}

bool OAIStreamingComputationRanges::is_computation_id_Valid() const{
    return m_computation_id_isValid;
}

QList<OAIKeyRangeDataDiskAssignment> OAIStreamingComputationRanges::getRangeAssignments() const {
    return m_range_assignments;
}
void OAIStreamingComputationRanges::setRangeAssignments(const QList<OAIKeyRangeDataDiskAssignment> &range_assignments) {
    m_range_assignments = range_assignments;
    m_range_assignments_isSet = true;
}

bool OAIStreamingComputationRanges::is_range_assignments_Set() const{
    return m_range_assignments_isSet;
}

bool OAIStreamingComputationRanges::is_range_assignments_Valid() const{
    return m_range_assignments_isValid;
}

bool OAIStreamingComputationRanges::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_computation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_range_assignments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStreamingComputationRanges::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
