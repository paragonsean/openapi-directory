/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataSamplingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataSamplingConfig::OAIDataSamplingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataSamplingConfig::OAIDataSamplingConfig() {
    this->initializeModel();
}

OAIDataSamplingConfig::~OAIDataSamplingConfig() {}

void OAIDataSamplingConfig::initializeModel() {

    m_behaviors_isSet = false;
    m_behaviors_isValid = false;
}

void OAIDataSamplingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataSamplingConfig::fromJsonObject(QJsonObject json) {

    m_behaviors_isValid = ::OpenAPI::fromJsonValue(m_behaviors, json[QString("behaviors")]);
    m_behaviors_isSet = !json[QString("behaviors")].isNull() && m_behaviors_isValid;
}

QString OAIDataSamplingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataSamplingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_behaviors.size() > 0) {
        obj.insert(QString("behaviors"), ::OpenAPI::toJsonValue(m_behaviors));
    }
    return obj;
}

QList<QString> OAIDataSamplingConfig::getBehaviors() const {
    return m_behaviors;
}
void OAIDataSamplingConfig::setBehaviors(const QList<QString> &behaviors) {
    m_behaviors = behaviors;
    m_behaviors_isSet = true;
}

bool OAIDataSamplingConfig::is_behaviors_Set() const{
    return m_behaviors_isSet;
}

bool OAIDataSamplingConfig::is_behaviors_Valid() const{
    return m_behaviors_isValid;
}

bool OAIDataSamplingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_behaviors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataSamplingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
