/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnvironment.h
 *
 * Describes the environment in which a Dataflow Job runs.
 */

#ifndef OAIEnvironment_H
#define OAIEnvironment_H

#include <QJsonObject>

#include "OAIDebugOptions.h"
#include "OAIWorkerPool.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDebugOptions;
class OAIWorkerPool;

class OAIEnvironment : public OAIObject {
public:
    OAIEnvironment();
    OAIEnvironment(QString json);
    ~OAIEnvironment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterManagerApiService() const;
    void setClusterManagerApiService(const QString &cluster_manager_api_service);
    bool is_cluster_manager_api_service_Set() const;
    bool is_cluster_manager_api_service_Valid() const;

    QString getDataset() const;
    void setDataset(const QString &dataset);
    bool is_dataset_Set() const;
    bool is_dataset_Valid() const;

    OAIDebugOptions getDebugOptions() const;
    void setDebugOptions(const OAIDebugOptions &debug_options);
    bool is_debug_options_Set() const;
    bool is_debug_options_Valid() const;

    QList<QString> getExperiments() const;
    void setExperiments(const QList<QString> &experiments);
    bool is_experiments_Set() const;
    bool is_experiments_Valid() const;

    QString getFlexResourceSchedulingGoal() const;
    void setFlexResourceSchedulingGoal(const QString &flex_resource_scheduling_goal);
    bool is_flex_resource_scheduling_goal_Set() const;
    bool is_flex_resource_scheduling_goal_Valid() const;

    QMap<QString, QJsonValue> getInternalExperiments() const;
    void setInternalExperiments(const QMap<QString, QJsonValue> &internal_experiments);
    bool is_internal_experiments_Set() const;
    bool is_internal_experiments_Valid() const;

    QMap<QString, QJsonValue> getSdkPipelineOptions() const;
    void setSdkPipelineOptions(const QMap<QString, QJsonValue> &sdk_pipeline_options);
    bool is_sdk_pipeline_options_Set() const;
    bool is_sdk_pipeline_options_Valid() const;

    QString getServiceAccountEmail() const;
    void setServiceAccountEmail(const QString &service_account_email);
    bool is_service_account_email_Set() const;
    bool is_service_account_email_Valid() const;

    QString getServiceKmsKeyName() const;
    void setServiceKmsKeyName(const QString &service_kms_key_name);
    bool is_service_kms_key_name_Set() const;
    bool is_service_kms_key_name_Valid() const;

    QList<QString> getServiceOptions() const;
    void setServiceOptions(const QList<QString> &service_options);
    bool is_service_options_Set() const;
    bool is_service_options_Valid() const;

    QString getShuffleMode() const;
    void setShuffleMode(const QString &shuffle_mode);
    bool is_shuffle_mode_Set() const;
    bool is_shuffle_mode_Valid() const;

    QString getStreamingMode() const;
    void setStreamingMode(const QString &streaming_mode);
    bool is_streaming_mode_Set() const;
    bool is_streaming_mode_Valid() const;

    QString getTempStoragePrefix() const;
    void setTempStoragePrefix(const QString &temp_storage_prefix);
    bool is_temp_storage_prefix_Set() const;
    bool is_temp_storage_prefix_Valid() const;

    bool isUseStreamingEngineResourceBasedBilling() const;
    void setUseStreamingEngineResourceBasedBilling(const bool &use_streaming_engine_resource_based_billing);
    bool is_use_streaming_engine_resource_based_billing_Set() const;
    bool is_use_streaming_engine_resource_based_billing_Valid() const;

    QMap<QString, QJsonValue> getUserAgent() const;
    void setUserAgent(const QMap<QString, QJsonValue> &user_agent);
    bool is_user_agent_Set() const;
    bool is_user_agent_Valid() const;

    QMap<QString, QJsonValue> getVersion() const;
    void setVersion(const QMap<QString, QJsonValue> &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList<OAIWorkerPool> getWorkerPools() const;
    void setWorkerPools(const QList<OAIWorkerPool> &worker_pools);
    bool is_worker_pools_Set() const;
    bool is_worker_pools_Valid() const;

    QString getWorkerRegion() const;
    void setWorkerRegion(const QString &worker_region);
    bool is_worker_region_Set() const;
    bool is_worker_region_Valid() const;

    QString getWorkerZone() const;
    void setWorkerZone(const QString &worker_zone);
    bool is_worker_zone_Set() const;
    bool is_worker_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_manager_api_service;
    bool m_cluster_manager_api_service_isSet;
    bool m_cluster_manager_api_service_isValid;

    QString m_dataset;
    bool m_dataset_isSet;
    bool m_dataset_isValid;

    OAIDebugOptions m_debug_options;
    bool m_debug_options_isSet;
    bool m_debug_options_isValid;

    QList<QString> m_experiments;
    bool m_experiments_isSet;
    bool m_experiments_isValid;

    QString m_flex_resource_scheduling_goal;
    bool m_flex_resource_scheduling_goal_isSet;
    bool m_flex_resource_scheduling_goal_isValid;

    QMap<QString, QJsonValue> m_internal_experiments;
    bool m_internal_experiments_isSet;
    bool m_internal_experiments_isValid;

    QMap<QString, QJsonValue> m_sdk_pipeline_options;
    bool m_sdk_pipeline_options_isSet;
    bool m_sdk_pipeline_options_isValid;

    QString m_service_account_email;
    bool m_service_account_email_isSet;
    bool m_service_account_email_isValid;

    QString m_service_kms_key_name;
    bool m_service_kms_key_name_isSet;
    bool m_service_kms_key_name_isValid;

    QList<QString> m_service_options;
    bool m_service_options_isSet;
    bool m_service_options_isValid;

    QString m_shuffle_mode;
    bool m_shuffle_mode_isSet;
    bool m_shuffle_mode_isValid;

    QString m_streaming_mode;
    bool m_streaming_mode_isSet;
    bool m_streaming_mode_isValid;

    QString m_temp_storage_prefix;
    bool m_temp_storage_prefix_isSet;
    bool m_temp_storage_prefix_isValid;

    bool m_use_streaming_engine_resource_based_billing;
    bool m_use_streaming_engine_resource_based_billing_isSet;
    bool m_use_streaming_engine_resource_based_billing_isValid;

    QMap<QString, QJsonValue> m_user_agent;
    bool m_user_agent_isSet;
    bool m_user_agent_isValid;

    QMap<QString, QJsonValue> m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList<OAIWorkerPool> m_worker_pools;
    bool m_worker_pools_isSet;
    bool m_worker_pools_isValid;

    QString m_worker_region;
    bool m_worker_region_isSet;
    bool m_worker_region_isValid;

    QString m_worker_zone;
    bool m_worker_zone_isSet;
    bool m_worker_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnvironment)

#endif // OAIEnvironment_H
