/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartialGroupByKeyInstruction.h
 *
 * An instruction that does a partial group-by-key. One input and one output.
 */

#ifndef OAIPartialGroupByKeyInstruction_H
#define OAIPartialGroupByKeyInstruction_H

#include <QJsonObject>

#include "OAIInstructionInput.h"
#include "OAISideInputInfo.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstructionInput;
class OAISideInputInfo;

class OAIPartialGroupByKeyInstruction : public OAIObject {
public:
    OAIPartialGroupByKeyInstruction();
    OAIPartialGroupByKeyInstruction(QString json);
    ~OAIPartialGroupByKeyInstruction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInstructionInput getInput() const;
    void setInput(const OAIInstructionInput &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    QMap<QString, QJsonValue> getInputElementCodec() const;
    void setInputElementCodec(const QMap<QString, QJsonValue> &input_element_codec);
    bool is_input_element_codec_Set() const;
    bool is_input_element_codec_Valid() const;

    QString getOriginalCombineValuesInputStoreName() const;
    void setOriginalCombineValuesInputStoreName(const QString &original_combine_values_input_store_name);
    bool is_original_combine_values_input_store_name_Set() const;
    bool is_original_combine_values_input_store_name_Valid() const;

    QString getOriginalCombineValuesStepName() const;
    void setOriginalCombineValuesStepName(const QString &original_combine_values_step_name);
    bool is_original_combine_values_step_name_Set() const;
    bool is_original_combine_values_step_name_Valid() const;

    QList<OAISideInputInfo> getSideInputs() const;
    void setSideInputs(const QList<OAISideInputInfo> &side_inputs);
    bool is_side_inputs_Set() const;
    bool is_side_inputs_Valid() const;

    QMap<QString, QJsonValue> getValueCombiningFn() const;
    void setValueCombiningFn(const QMap<QString, QJsonValue> &value_combining_fn);
    bool is_value_combining_fn_Set() const;
    bool is_value_combining_fn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInstructionInput m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    QMap<QString, QJsonValue> m_input_element_codec;
    bool m_input_element_codec_isSet;
    bool m_input_element_codec_isValid;

    QString m_original_combine_values_input_store_name;
    bool m_original_combine_values_input_store_name_isSet;
    bool m_original_combine_values_input_store_name_isValid;

    QString m_original_combine_values_step_name;
    bool m_original_combine_values_step_name_isSet;
    bool m_original_combine_values_step_name_isValid;

    QList<OAISideInputInfo> m_side_inputs;
    bool m_side_inputs_isSet;
    bool m_side_inputs_isValid;

    QMap<QString, QJsonValue> m_value_combining_fn;
    bool m_value_combining_fn_isSet;
    bool m_value_combining_fn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartialGroupByKeyInstruction)

#endif // OAIPartialGroupByKeyInstruction_H
