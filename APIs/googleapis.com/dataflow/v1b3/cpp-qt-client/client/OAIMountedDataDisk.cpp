/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMountedDataDisk.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMountedDataDisk::OAIMountedDataDisk(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMountedDataDisk::OAIMountedDataDisk() {
    this->initializeModel();
}

OAIMountedDataDisk::~OAIMountedDataDisk() {}

void OAIMountedDataDisk::initializeModel() {

    m_data_disk_isSet = false;
    m_data_disk_isValid = false;
}

void OAIMountedDataDisk::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMountedDataDisk::fromJsonObject(QJsonObject json) {

    m_data_disk_isValid = ::OpenAPI::fromJsonValue(m_data_disk, json[QString("dataDisk")]);
    m_data_disk_isSet = !json[QString("dataDisk")].isNull() && m_data_disk_isValid;
}

QString OAIMountedDataDisk::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMountedDataDisk::asJsonObject() const {
    QJsonObject obj;
    if (m_data_disk_isSet) {
        obj.insert(QString("dataDisk"), ::OpenAPI::toJsonValue(m_data_disk));
    }
    return obj;
}

QString OAIMountedDataDisk::getDataDisk() const {
    return m_data_disk;
}
void OAIMountedDataDisk::setDataDisk(const QString &data_disk) {
    m_data_disk = data_disk;
    m_data_disk_isSet = true;
}

bool OAIMountedDataDisk::is_data_disk_Set() const{
    return m_data_disk_isSet;
}

bool OAIMountedDataDisk::is_data_disk_Valid() const{
    return m_data_disk_isValid;
}

bool OAIMountedDataDisk::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_disk_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMountedDataDisk::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
