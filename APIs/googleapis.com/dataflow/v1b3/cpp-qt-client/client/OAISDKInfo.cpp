/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISDKInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISDKInfo::OAISDKInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISDKInfo::OAISDKInfo() {
    this->initializeModel();
}

OAISDKInfo::~OAISDKInfo() {}

void OAISDKInfo::initializeModel() {

    m_language_isSet = false;
    m_language_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAISDKInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISDKInfo::fromJsonObject(QJsonObject json) {

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAISDKInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISDKInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAISDKInfo::getLanguage() const {
    return m_language;
}
void OAISDKInfo::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAISDKInfo::is_language_Set() const{
    return m_language_isSet;
}

bool OAISDKInfo::is_language_Valid() const{
    return m_language_isValid;
}

QString OAISDKInfo::getVersion() const {
    return m_version;
}
void OAISDKInfo::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAISDKInfo::is_version_Set() const{
    return m_version_isSet;
}

bool OAISDKInfo::is_version_Valid() const{
    return m_version_isValid;
}

bool OAISDKInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISDKInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
