/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkerPool.h
 *
 * Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job.
 */

#ifndef OAIWorkerPool_H
#define OAIWorkerPool_H

#include <QJsonObject>

#include "OAIAutoscalingSettings.h"
#include "OAIDisk.h"
#include "OAIPackage.h"
#include "OAISdkHarnessContainerImage.h"
#include "OAITaskRunnerSettings.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoscalingSettings;
class OAIDisk;
class OAIPackage;
class OAISdkHarnessContainerImage;
class OAITaskRunnerSettings;

class OAIWorkerPool : public OAIObject {
public:
    OAIWorkerPool();
    OAIWorkerPool(QString json);
    ~OAIWorkerPool() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutoscalingSettings getAutoscalingSettings() const;
    void setAutoscalingSettings(const OAIAutoscalingSettings &autoscaling_settings);
    bool is_autoscaling_settings_Set() const;
    bool is_autoscaling_settings_Valid() const;

    QList<OAIDisk> getDataDisks() const;
    void setDataDisks(const QList<OAIDisk> &data_disks);
    bool is_data_disks_Set() const;
    bool is_data_disks_Valid() const;

    QString getDefaultPackageSet() const;
    void setDefaultPackageSet(const QString &default_package_set);
    bool is_default_package_set_Set() const;
    bool is_default_package_set_Valid() const;

    qint32 getDiskSizeGb() const;
    void setDiskSizeGb(const qint32 &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    QString getDiskSourceImage() const;
    void setDiskSourceImage(const QString &disk_source_image);
    bool is_disk_source_image_Set() const;
    bool is_disk_source_image_Valid() const;

    QString getDiskType() const;
    void setDiskType(const QString &disk_type);
    bool is_disk_type_Set() const;
    bool is_disk_type_Valid() const;

    QString getIpConfiguration() const;
    void setIpConfiguration(const QString &ip_configuration);
    bool is_ip_configuration_Set() const;
    bool is_ip_configuration_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getMachineType() const;
    void setMachineType(const QString &machine_type);
    bool is_machine_type_Set() const;
    bool is_machine_type_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    qint32 getNumThreadsPerWorker() const;
    void setNumThreadsPerWorker(const qint32 &num_threads_per_worker);
    bool is_num_threads_per_worker_Set() const;
    bool is_num_threads_per_worker_Valid() const;

    qint32 getNumWorkers() const;
    void setNumWorkers(const qint32 &num_workers);
    bool is_num_workers_Set() const;
    bool is_num_workers_Valid() const;

    QString getOnHostMaintenance() const;
    void setOnHostMaintenance(const QString &on_host_maintenance);
    bool is_on_host_maintenance_Set() const;
    bool is_on_host_maintenance_Valid() const;

    QList<OAIPackage> getPackages() const;
    void setPackages(const QList<OAIPackage> &packages);
    bool is_packages_Set() const;
    bool is_packages_Valid() const;

    QMap<QString, QJsonValue> getPoolArgs() const;
    void setPoolArgs(const QMap<QString, QJsonValue> &pool_args);
    bool is_pool_args_Set() const;
    bool is_pool_args_Valid() const;

    QList<OAISdkHarnessContainerImage> getSdkHarnessContainerImages() const;
    void setSdkHarnessContainerImages(const QList<OAISdkHarnessContainerImage> &sdk_harness_container_images);
    bool is_sdk_harness_container_images_Set() const;
    bool is_sdk_harness_container_images_Valid() const;

    QString getSubnetwork() const;
    void setSubnetwork(const QString &subnetwork);
    bool is_subnetwork_Set() const;
    bool is_subnetwork_Valid() const;

    OAITaskRunnerSettings getTaskrunnerSettings() const;
    void setTaskrunnerSettings(const OAITaskRunnerSettings &taskrunner_settings);
    bool is_taskrunner_settings_Set() const;
    bool is_taskrunner_settings_Valid() const;

    QString getTeardownPolicy() const;
    void setTeardownPolicy(const QString &teardown_policy);
    bool is_teardown_policy_Set() const;
    bool is_teardown_policy_Valid() const;

    QString getWorkerHarnessContainerImage() const;
    void setWorkerHarnessContainerImage(const QString &worker_harness_container_image);
    bool is_worker_harness_container_image_Set() const;
    bool is_worker_harness_container_image_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutoscalingSettings m_autoscaling_settings;
    bool m_autoscaling_settings_isSet;
    bool m_autoscaling_settings_isValid;

    QList<OAIDisk> m_data_disks;
    bool m_data_disks_isSet;
    bool m_data_disks_isValid;

    QString m_default_package_set;
    bool m_default_package_set_isSet;
    bool m_default_package_set_isValid;

    qint32 m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    QString m_disk_source_image;
    bool m_disk_source_image_isSet;
    bool m_disk_source_image_isValid;

    QString m_disk_type;
    bool m_disk_type_isSet;
    bool m_disk_type_isValid;

    QString m_ip_configuration;
    bool m_ip_configuration_isSet;
    bool m_ip_configuration_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_machine_type;
    bool m_machine_type_isSet;
    bool m_machine_type_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    qint32 m_num_threads_per_worker;
    bool m_num_threads_per_worker_isSet;
    bool m_num_threads_per_worker_isValid;

    qint32 m_num_workers;
    bool m_num_workers_isSet;
    bool m_num_workers_isValid;

    QString m_on_host_maintenance;
    bool m_on_host_maintenance_isSet;
    bool m_on_host_maintenance_isValid;

    QList<OAIPackage> m_packages;
    bool m_packages_isSet;
    bool m_packages_isValid;

    QMap<QString, QJsonValue> m_pool_args;
    bool m_pool_args_isSet;
    bool m_pool_args_isValid;

    QList<OAISdkHarnessContainerImage> m_sdk_harness_container_images;
    bool m_sdk_harness_container_images_isSet;
    bool m_sdk_harness_container_images_isValid;

    QString m_subnetwork;
    bool m_subnetwork_isSet;
    bool m_subnetwork_isValid;

    OAITaskRunnerSettings m_taskrunner_settings;
    bool m_taskrunner_settings_isSet;
    bool m_taskrunner_settings_isValid;

    QString m_teardown_policy;
    bool m_teardown_policy_isSet;
    bool m_teardown_policy_isValid;

    QString m_worker_harness_container_image;
    bool m_worker_harness_container_image_isSet;
    bool m_worker_harness_container_image_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkerPool)

#endif // OAIWorkerPool_H
