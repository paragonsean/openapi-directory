/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBase2Exponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBase2Exponent::OAIBase2Exponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBase2Exponent::OAIBase2Exponent() {
    this->initializeModel();
}

OAIBase2Exponent::~OAIBase2Exponent() {}

void OAIBase2Exponent::initializeModel() {

    m_number_of_buckets_isSet = false;
    m_number_of_buckets_isValid = false;

    m_scale_isSet = false;
    m_scale_isValid = false;
}

void OAIBase2Exponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBase2Exponent::fromJsonObject(QJsonObject json) {

    m_number_of_buckets_isValid = ::OpenAPI::fromJsonValue(m_number_of_buckets, json[QString("numberOfBuckets")]);
    m_number_of_buckets_isSet = !json[QString("numberOfBuckets")].isNull() && m_number_of_buckets_isValid;

    m_scale_isValid = ::OpenAPI::fromJsonValue(m_scale, json[QString("scale")]);
    m_scale_isSet = !json[QString("scale")].isNull() && m_scale_isValid;
}

QString OAIBase2Exponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBase2Exponent::asJsonObject() const {
    QJsonObject obj;
    if (m_number_of_buckets_isSet) {
        obj.insert(QString("numberOfBuckets"), ::OpenAPI::toJsonValue(m_number_of_buckets));
    }
    if (m_scale_isSet) {
        obj.insert(QString("scale"), ::OpenAPI::toJsonValue(m_scale));
    }
    return obj;
}

qint32 OAIBase2Exponent::getNumberOfBuckets() const {
    return m_number_of_buckets;
}
void OAIBase2Exponent::setNumberOfBuckets(const qint32 &number_of_buckets) {
    m_number_of_buckets = number_of_buckets;
    m_number_of_buckets_isSet = true;
}

bool OAIBase2Exponent::is_number_of_buckets_Set() const{
    return m_number_of_buckets_isSet;
}

bool OAIBase2Exponent::is_number_of_buckets_Valid() const{
    return m_number_of_buckets_isValid;
}

qint32 OAIBase2Exponent::getScale() const {
    return m_scale;
}
void OAIBase2Exponent::setScale(const qint32 &scale) {
    m_scale = scale;
    m_scale_isSet = true;
}

bool OAIBase2Exponent::is_scale_Set() const{
    return m_scale_isSet;
}

bool OAIBase2Exponent::is_scale_Valid() const{
    return m_scale_isValid;
}

bool OAIBase2Exponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_of_buckets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scale_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBase2Exponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
