/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStringList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStringList::OAIStringList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStringList::OAIStringList() {
    this->initializeModel();
}

OAIStringList::~OAIStringList() {}

void OAIStringList::initializeModel() {

    m_elements_isSet = false;
    m_elements_isValid = false;
}

void OAIStringList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStringList::fromJsonObject(QJsonObject json) {

    m_elements_isValid = ::OpenAPI::fromJsonValue(m_elements, json[QString("elements")]);
    m_elements_isSet = !json[QString("elements")].isNull() && m_elements_isValid;
}

QString OAIStringList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStringList::asJsonObject() const {
    QJsonObject obj;
    if (m_elements.size() > 0) {
        obj.insert(QString("elements"), ::OpenAPI::toJsonValue(m_elements));
    }
    return obj;
}

QList<QString> OAIStringList::getElements() const {
    return m_elements;
}
void OAIStringList::setElements(const QList<QString> &elements) {
    m_elements = elements;
    m_elements_isSet = true;
}

bool OAIStringList::is_elements_Set() const{
    return m_elements_isSet;
}

bool OAIStringList::is_elements_Valid() const{
    return m_elements_isValid;
}

bool OAIStringList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_elements.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStringList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
