/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISink::OAISink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISink::OAISink() {
    this->initializeModel();
}

OAISink::~OAISink() {}

void OAISink::initializeModel() {

    m_codec_isSet = false;
    m_codec_isValid = false;

    m_spec_isSet = false;
    m_spec_isValid = false;
}

void OAISink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISink::fromJsonObject(QJsonObject json) {

    m_codec_isValid = ::OpenAPI::fromJsonValue(m_codec, json[QString("codec")]);
    m_codec_isSet = !json[QString("codec")].isNull() && m_codec_isValid;

    m_spec_isValid = ::OpenAPI::fromJsonValue(m_spec, json[QString("spec")]);
    m_spec_isSet = !json[QString("spec")].isNull() && m_spec_isValid;
}

QString OAISink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISink::asJsonObject() const {
    QJsonObject obj;
    if (m_codec.size() > 0) {
        obj.insert(QString("codec"), ::OpenAPI::toJsonValue(m_codec));
    }
    if (m_spec.size() > 0) {
        obj.insert(QString("spec"), ::OpenAPI::toJsonValue(m_spec));
    }
    return obj;
}

QMap<QString, QJsonValue> OAISink::getCodec() const {
    return m_codec;
}
void OAISink::setCodec(const QMap<QString, QJsonValue> &codec) {
    m_codec = codec;
    m_codec_isSet = true;
}

bool OAISink::is_codec_Set() const{
    return m_codec_isSet;
}

bool OAISink::is_codec_Valid() const{
    return m_codec_isValid;
}

QMap<QString, QJsonValue> OAISink::getSpec() const {
    return m_spec;
}
void OAISink::setSpec(const QMap<QString, QJsonValue> &spec) {
    m_spec = spec;
    m_spec_isSet = true;
}

bool OAISink::is_spec_Set() const{
    return m_spec_isSet;
}

bool OAISink::is_spec_Valid() const{
    return m_spec_isValid;
}

bool OAISink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_codec.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
