/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerStepNamespaceMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerStepNamespaceMetrics::OAIPerStepNamespaceMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerStepNamespaceMetrics::OAIPerStepNamespaceMetrics() {
    this->initializeModel();
}

OAIPerStepNamespaceMetrics::~OAIPerStepNamespaceMetrics() {}

void OAIPerStepNamespaceMetrics::initializeModel() {

    m_metric_values_isSet = false;
    m_metric_values_isValid = false;

    m_metrics_namespace_isSet = false;
    m_metrics_namespace_isValid = false;

    m_original_step_isSet = false;
    m_original_step_isValid = false;
}

void OAIPerStepNamespaceMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerStepNamespaceMetrics::fromJsonObject(QJsonObject json) {

    m_metric_values_isValid = ::OpenAPI::fromJsonValue(m_metric_values, json[QString("metricValues")]);
    m_metric_values_isSet = !json[QString("metricValues")].isNull() && m_metric_values_isValid;

    m_metrics_namespace_isValid = ::OpenAPI::fromJsonValue(m_metrics_namespace, json[QString("metricsNamespace")]);
    m_metrics_namespace_isSet = !json[QString("metricsNamespace")].isNull() && m_metrics_namespace_isValid;

    m_original_step_isValid = ::OpenAPI::fromJsonValue(m_original_step, json[QString("originalStep")]);
    m_original_step_isSet = !json[QString("originalStep")].isNull() && m_original_step_isValid;
}

QString OAIPerStepNamespaceMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerStepNamespaceMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_metric_values.size() > 0) {
        obj.insert(QString("metricValues"), ::OpenAPI::toJsonValue(m_metric_values));
    }
    if (m_metrics_namespace_isSet) {
        obj.insert(QString("metricsNamespace"), ::OpenAPI::toJsonValue(m_metrics_namespace));
    }
    if (m_original_step_isSet) {
        obj.insert(QString("originalStep"), ::OpenAPI::toJsonValue(m_original_step));
    }
    return obj;
}

QList<OAIMetricValue> OAIPerStepNamespaceMetrics::getMetricValues() const {
    return m_metric_values;
}
void OAIPerStepNamespaceMetrics::setMetricValues(const QList<OAIMetricValue> &metric_values) {
    m_metric_values = metric_values;
    m_metric_values_isSet = true;
}

bool OAIPerStepNamespaceMetrics::is_metric_values_Set() const{
    return m_metric_values_isSet;
}

bool OAIPerStepNamespaceMetrics::is_metric_values_Valid() const{
    return m_metric_values_isValid;
}

QString OAIPerStepNamespaceMetrics::getMetricsNamespace() const {
    return m_metrics_namespace;
}
void OAIPerStepNamespaceMetrics::setMetricsNamespace(const QString &metrics_namespace) {
    m_metrics_namespace = metrics_namespace;
    m_metrics_namespace_isSet = true;
}

bool OAIPerStepNamespaceMetrics::is_metrics_namespace_Set() const{
    return m_metrics_namespace_isSet;
}

bool OAIPerStepNamespaceMetrics::is_metrics_namespace_Valid() const{
    return m_metrics_namespace_isValid;
}

QString OAIPerStepNamespaceMetrics::getOriginalStep() const {
    return m_original_step;
}
void OAIPerStepNamespaceMetrics::setOriginalStep(const QString &original_step) {
    m_original_step = original_step;
    m_original_step_isSet = true;
}

bool OAIPerStepNamespaceMetrics::is_original_step_Set() const{
    return m_original_step_isSet;
}

bool OAIPerStepNamespaceMetrics::is_original_step_Valid() const{
    return m_original_step_isValid;
}

bool OAIPerStepNamespaceMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics_namespace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_step_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerStepNamespaceMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
