/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPubsubLocation.h
 *
 * Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.
 */

#ifndef OAIPubsubLocation_H
#define OAIPubsubLocation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPubsubLocation : public OAIObject {
public:
    OAIPubsubLocation();
    OAIPubsubLocation(QString json);
    ~OAIPubsubLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDropLateData() const;
    void setDropLateData(const bool &drop_late_data);
    bool is_drop_late_data_Set() const;
    bool is_drop_late_data_Valid() const;

    bool isDynamicDestinations() const;
    void setDynamicDestinations(const bool &dynamic_destinations);
    bool is_dynamic_destinations_Set() const;
    bool is_dynamic_destinations_Valid() const;

    QString getIdLabel() const;
    void setIdLabel(const QString &id_label);
    bool is_id_label_Set() const;
    bool is_id_label_Valid() const;

    QString getSubscription() const;
    void setSubscription(const QString &subscription);
    bool is_subscription_Set() const;
    bool is_subscription_Valid() const;

    QString getTimestampLabel() const;
    void setTimestampLabel(const QString &timestamp_label);
    bool is_timestamp_label_Set() const;
    bool is_timestamp_label_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    QString getTrackingSubscription() const;
    void setTrackingSubscription(const QString &tracking_subscription);
    bool is_tracking_subscription_Set() const;
    bool is_tracking_subscription_Valid() const;

    bool isWithAttributes() const;
    void setWithAttributes(const bool &with_attributes);
    bool is_with_attributes_Set() const;
    bool is_with_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_drop_late_data;
    bool m_drop_late_data_isSet;
    bool m_drop_late_data_isValid;

    bool m_dynamic_destinations;
    bool m_dynamic_destinations_isSet;
    bool m_dynamic_destinations_isValid;

    QString m_id_label;
    bool m_id_label_isSet;
    bool m_id_label_isValid;

    QString m_subscription;
    bool m_subscription_isSet;
    bool m_subscription_isValid;

    QString m_timestamp_label;
    bool m_timestamp_label_isSet;
    bool m_timestamp_label_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;

    QString m_tracking_subscription;
    bool m_tracking_subscription_isSet;
    bool m_tracking_subscription_isValid;

    bool m_with_attributes;
    bool m_with_attributes_isSet;
    bool m_with_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPubsubLocation)

#endif // OAIPubsubLocation_H
