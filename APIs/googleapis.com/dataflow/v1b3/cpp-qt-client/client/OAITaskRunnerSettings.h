/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskRunnerSettings.h
 *
 * Taskrunner configuration settings.
 */

#ifndef OAITaskRunnerSettings_H
#define OAITaskRunnerSettings_H

#include <QJsonObject>

#include "OAIWorkerSettings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkerSettings;

class OAITaskRunnerSettings : public OAIObject {
public:
    OAITaskRunnerSettings();
    OAITaskRunnerSettings(QString json);
    ~OAITaskRunnerSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlsologtostderr() const;
    void setAlsologtostderr(const bool &alsologtostderr);
    bool is_alsologtostderr_Set() const;
    bool is_alsologtostderr_Valid() const;

    QString getBaseTaskDir() const;
    void setBaseTaskDir(const QString &base_task_dir);
    bool is_base_task_dir_Set() const;
    bool is_base_task_dir_Valid() const;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QString getCommandlinesFileName() const;
    void setCommandlinesFileName(const QString &commandlines_file_name);
    bool is_commandlines_file_name_Set() const;
    bool is_commandlines_file_name_Valid() const;

    bool isContinueOnException() const;
    void setContinueOnException(const bool &continue_on_exception);
    bool is_continue_on_exception_Set() const;
    bool is_continue_on_exception_Valid() const;

    QString getDataflowApiVersion() const;
    void setDataflowApiVersion(const QString &dataflow_api_version);
    bool is_dataflow_api_version_Set() const;
    bool is_dataflow_api_version_Valid() const;

    QString getHarnessCommand() const;
    void setHarnessCommand(const QString &harness_command);
    bool is_harness_command_Set() const;
    bool is_harness_command_Valid() const;

    QString getLanguageHint() const;
    void setLanguageHint(const QString &language_hint);
    bool is_language_hint_Set() const;
    bool is_language_hint_Valid() const;

    QString getLogDir() const;
    void setLogDir(const QString &log_dir);
    bool is_log_dir_Set() const;
    bool is_log_dir_Valid() const;

    bool isLogToSerialconsole() const;
    void setLogToSerialconsole(const bool &log_to_serialconsole);
    bool is_log_to_serialconsole_Set() const;
    bool is_log_to_serialconsole_Valid() const;

    QString getLogUploadLocation() const;
    void setLogUploadLocation(const QString &log_upload_location);
    bool is_log_upload_location_Set() const;
    bool is_log_upload_location_Valid() const;

    QList<QString> getOauthScopes() const;
    void setOauthScopes(const QList<QString> &oauth_scopes);
    bool is_oauth_scopes_Set() const;
    bool is_oauth_scopes_Valid() const;

    OAIWorkerSettings getParallelWorkerSettings() const;
    void setParallelWorkerSettings(const OAIWorkerSettings &parallel_worker_settings);
    bool is_parallel_worker_settings_Set() const;
    bool is_parallel_worker_settings_Valid() const;

    QString getStreamingWorkerMainClass() const;
    void setStreamingWorkerMainClass(const QString &streaming_worker_main_class);
    bool is_streaming_worker_main_class_Set() const;
    bool is_streaming_worker_main_class_Valid() const;

    QString getTaskGroup() const;
    void setTaskGroup(const QString &task_group);
    bool is_task_group_Set() const;
    bool is_task_group_Valid() const;

    QString getTaskUser() const;
    void setTaskUser(const QString &task_user);
    bool is_task_user_Set() const;
    bool is_task_user_Valid() const;

    QString getTempStoragePrefix() const;
    void setTempStoragePrefix(const QString &temp_storage_prefix);
    bool is_temp_storage_prefix_Set() const;
    bool is_temp_storage_prefix_Valid() const;

    QString getVmId() const;
    void setVmId(const QString &vm_id);
    bool is_vm_id_Set() const;
    bool is_vm_id_Valid() const;

    QString getWorkflowFileName() const;
    void setWorkflowFileName(const QString &workflow_file_name);
    bool is_workflow_file_name_Set() const;
    bool is_workflow_file_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_alsologtostderr;
    bool m_alsologtostderr_isSet;
    bool m_alsologtostderr_isValid;

    QString m_base_task_dir;
    bool m_base_task_dir_isSet;
    bool m_base_task_dir_isValid;

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QString m_commandlines_file_name;
    bool m_commandlines_file_name_isSet;
    bool m_commandlines_file_name_isValid;

    bool m_continue_on_exception;
    bool m_continue_on_exception_isSet;
    bool m_continue_on_exception_isValid;

    QString m_dataflow_api_version;
    bool m_dataflow_api_version_isSet;
    bool m_dataflow_api_version_isValid;

    QString m_harness_command;
    bool m_harness_command_isSet;
    bool m_harness_command_isValid;

    QString m_language_hint;
    bool m_language_hint_isSet;
    bool m_language_hint_isValid;

    QString m_log_dir;
    bool m_log_dir_isSet;
    bool m_log_dir_isValid;

    bool m_log_to_serialconsole;
    bool m_log_to_serialconsole_isSet;
    bool m_log_to_serialconsole_isValid;

    QString m_log_upload_location;
    bool m_log_upload_location_isSet;
    bool m_log_upload_location_isValid;

    QList<QString> m_oauth_scopes;
    bool m_oauth_scopes_isSet;
    bool m_oauth_scopes_isValid;

    OAIWorkerSettings m_parallel_worker_settings;
    bool m_parallel_worker_settings_isSet;
    bool m_parallel_worker_settings_isValid;

    QString m_streaming_worker_main_class;
    bool m_streaming_worker_main_class_isSet;
    bool m_streaming_worker_main_class_isValid;

    QString m_task_group;
    bool m_task_group_isSet;
    bool m_task_group_isValid;

    QString m_task_user;
    bool m_task_user_isSet;
    bool m_task_user_isValid;

    QString m_temp_storage_prefix;
    bool m_temp_storage_prefix_isSet;
    bool m_temp_storage_prefix_isValid;

    QString m_vm_id;
    bool m_vm_id_isSet;
    bool m_vm_id_isValid;

    QString m_workflow_file_name;
    bool m_workflow_file_name_isSet;
    bool m_workflow_file_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskRunnerSettings)

#endif // OAITaskRunnerSettings_H
