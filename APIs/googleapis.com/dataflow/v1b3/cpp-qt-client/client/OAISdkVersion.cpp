/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISdkVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISdkVersion::OAISdkVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISdkVersion::OAISdkVersion() {
    this->initializeModel();
}

OAISdkVersion::~OAISdkVersion() {}

void OAISdkVersion::initializeModel() {

    m_bugs_isSet = false;
    m_bugs_isValid = false;

    m_sdk_support_status_isSet = false;
    m_sdk_support_status_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;

    m_version_display_name_isSet = false;
    m_version_display_name_isValid = false;
}

void OAISdkVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISdkVersion::fromJsonObject(QJsonObject json) {

    m_bugs_isValid = ::OpenAPI::fromJsonValue(m_bugs, json[QString("bugs")]);
    m_bugs_isSet = !json[QString("bugs")].isNull() && m_bugs_isValid;

    m_sdk_support_status_isValid = ::OpenAPI::fromJsonValue(m_sdk_support_status, json[QString("sdkSupportStatus")]);
    m_sdk_support_status_isSet = !json[QString("sdkSupportStatus")].isNull() && m_sdk_support_status_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;

    m_version_display_name_isValid = ::OpenAPI::fromJsonValue(m_version_display_name, json[QString("versionDisplayName")]);
    m_version_display_name_isSet = !json[QString("versionDisplayName")].isNull() && m_version_display_name_isValid;
}

QString OAISdkVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISdkVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_bugs.size() > 0) {
        obj.insert(QString("bugs"), ::OpenAPI::toJsonValue(m_bugs));
    }
    if (m_sdk_support_status_isSet) {
        obj.insert(QString("sdkSupportStatus"), ::OpenAPI::toJsonValue(m_sdk_support_status));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_version_display_name_isSet) {
        obj.insert(QString("versionDisplayName"), ::OpenAPI::toJsonValue(m_version_display_name));
    }
    return obj;
}

QList<OAISdkBug> OAISdkVersion::getBugs() const {
    return m_bugs;
}
void OAISdkVersion::setBugs(const QList<OAISdkBug> &bugs) {
    m_bugs = bugs;
    m_bugs_isSet = true;
}

bool OAISdkVersion::is_bugs_Set() const{
    return m_bugs_isSet;
}

bool OAISdkVersion::is_bugs_Valid() const{
    return m_bugs_isValid;
}

QString OAISdkVersion::getSdkSupportStatus() const {
    return m_sdk_support_status;
}
void OAISdkVersion::setSdkSupportStatus(const QString &sdk_support_status) {
    m_sdk_support_status = sdk_support_status;
    m_sdk_support_status_isSet = true;
}

bool OAISdkVersion::is_sdk_support_status_Set() const{
    return m_sdk_support_status_isSet;
}

bool OAISdkVersion::is_sdk_support_status_Valid() const{
    return m_sdk_support_status_isValid;
}

QString OAISdkVersion::getVersion() const {
    return m_version;
}
void OAISdkVersion::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAISdkVersion::is_version_Set() const{
    return m_version_isSet;
}

bool OAISdkVersion::is_version_Valid() const{
    return m_version_isValid;
}

QString OAISdkVersion::getVersionDisplayName() const {
    return m_version_display_name;
}
void OAISdkVersion::setVersionDisplayName(const QString &version_display_name) {
    m_version_display_name = version_display_name;
    m_version_display_name_isSet = true;
}

bool OAISdkVersion::is_version_display_name_Set() const{
    return m_version_display_name_isSet;
}

bool OAISdkVersion::is_version_display_name_Valid() const{
    return m_version_display_name_isValid;
}

bool OAISdkVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bugs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sdk_support_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISdkVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
