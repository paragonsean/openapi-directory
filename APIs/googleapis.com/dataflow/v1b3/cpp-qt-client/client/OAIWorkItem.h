/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkItem.h
 *
 * WorkItem represents basic information about a WorkItem to be executed in the cloud.
 */

#ifndef OAIWorkItem_H
#define OAIWorkItem_H

#include <QJsonObject>

#include "OAIMapTask.h"
#include "OAIPackage.h"
#include "OAISeqMapTask.h"
#include "OAIShellTask.h"
#include "OAISourceOperationRequest.h"
#include "OAIStreamingComputationTask.h"
#include "OAIStreamingConfigTask.h"
#include "OAIStreamingSetupTask.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMapTask;
class OAIPackage;
class OAISeqMapTask;
class OAIShellTask;
class OAISourceOperationRequest;
class OAIStreamingComputationTask;
class OAIStreamingConfigTask;
class OAIStreamingSetupTask;

class OAIWorkItem : public OAIObject {
public:
    OAIWorkItem();
    OAIWorkItem(QString json);
    ~OAIWorkItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfiguration() const;
    void setConfiguration(const QString &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInitialReportIndex() const;
    void setInitialReportIndex(const QString &initial_report_index);
    bool is_initial_report_index_Set() const;
    bool is_initial_report_index_Valid() const;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QString getLeaseExpireTime() const;
    void setLeaseExpireTime(const QString &lease_expire_time);
    bool is_lease_expire_time_Set() const;
    bool is_lease_expire_time_Valid() const;

    OAIMapTask getMapTask() const;
    void setMapTask(const OAIMapTask &map_task);
    bool is_map_task_Set() const;
    bool is_map_task_Valid() const;

    QList<OAIPackage> getPackages() const;
    void setPackages(const QList<OAIPackage> &packages);
    bool is_packages_Set() const;
    bool is_packages_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getReportStatusInterval() const;
    void setReportStatusInterval(const QString &report_status_interval);
    bool is_report_status_interval_Set() const;
    bool is_report_status_interval_Valid() const;

    OAISeqMapTask getSeqMapTask() const;
    void setSeqMapTask(const OAISeqMapTask &seq_map_task);
    bool is_seq_map_task_Set() const;
    bool is_seq_map_task_Valid() const;

    OAIShellTask getShellTask() const;
    void setShellTask(const OAIShellTask &shell_task);
    bool is_shell_task_Set() const;
    bool is_shell_task_Valid() const;

    OAISourceOperationRequest getSourceOperationTask() const;
    void setSourceOperationTask(const OAISourceOperationRequest &source_operation_task);
    bool is_source_operation_task_Set() const;
    bool is_source_operation_task_Valid() const;

    OAIStreamingComputationTask getStreamingComputationTask() const;
    void setStreamingComputationTask(const OAIStreamingComputationTask &streaming_computation_task);
    bool is_streaming_computation_task_Set() const;
    bool is_streaming_computation_task_Valid() const;

    OAIStreamingConfigTask getStreamingConfigTask() const;
    void setStreamingConfigTask(const OAIStreamingConfigTask &streaming_config_task);
    bool is_streaming_config_task_Set() const;
    bool is_streaming_config_task_Valid() const;

    OAIStreamingSetupTask getStreamingSetupTask() const;
    void setStreamingSetupTask(const OAIStreamingSetupTask &streaming_setup_task);
    bool is_streaming_setup_task_Set() const;
    bool is_streaming_setup_task_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_initial_report_index;
    bool m_initial_report_index_isSet;
    bool m_initial_report_index_isValid;

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QString m_lease_expire_time;
    bool m_lease_expire_time_isSet;
    bool m_lease_expire_time_isValid;

    OAIMapTask m_map_task;
    bool m_map_task_isSet;
    bool m_map_task_isValid;

    QList<OAIPackage> m_packages;
    bool m_packages_isSet;
    bool m_packages_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_report_status_interval;
    bool m_report_status_interval_isSet;
    bool m_report_status_interval_isValid;

    OAISeqMapTask m_seq_map_task;
    bool m_seq_map_task_isSet;
    bool m_seq_map_task_isValid;

    OAIShellTask m_shell_task;
    bool m_shell_task_isSet;
    bool m_shell_task_isValid;

    OAISourceOperationRequest m_source_operation_task;
    bool m_source_operation_task_isSet;
    bool m_source_operation_task_isValid;

    OAIStreamingComputationTask m_streaming_computation_task;
    bool m_streaming_computation_task_isSet;
    bool m_streaming_computation_task_isValid;

    OAIStreamingConfigTask m_streaming_config_task;
    bool m_streaming_config_task_isSet;
    bool m_streaming_config_task_isValid;

    OAIStreamingSetupTask m_streaming_setup_task;
    bool m_streaming_setup_task_isSet;
    bool m_streaming_setup_task_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkItem)

#endif // OAIWorkItem_H
