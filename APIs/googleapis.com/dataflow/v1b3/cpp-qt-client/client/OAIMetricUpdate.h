/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetricUpdate.h
 *
 * Describes the state of a metric.
 */

#ifndef OAIMetricUpdate_H
#define OAIMetricUpdate_H

#include <QJsonObject>

#include "OAIMetricStructuredName.h"
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetricStructuredName;

class OAIMetricUpdate : public OAIObject {
public:
    OAIMetricUpdate();
    OAIMetricUpdate(QString json);
    ~OAIMetricUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCumulative() const;
    void setCumulative(const bool &cumulative);
    bool is_cumulative_Set() const;
    bool is_cumulative_Valid() const;

    QJsonValue getDistribution() const;
    void setDistribution(const QJsonValue &distribution);
    bool is_distribution_Set() const;
    bool is_distribution_Valid() const;

    QJsonValue getGauge() const;
    void setGauge(const QJsonValue &gauge);
    bool is_gauge_Set() const;
    bool is_gauge_Valid() const;

    QJsonValue getInternal() const;
    void setInternal(const QJsonValue &internal);
    bool is_internal_Set() const;
    bool is_internal_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QJsonValue getMeanCount() const;
    void setMeanCount(const QJsonValue &mean_count);
    bool is_mean_count_Set() const;
    bool is_mean_count_Valid() const;

    QJsonValue getMeanSum() const;
    void setMeanSum(const QJsonValue &mean_sum);
    bool is_mean_sum_Set() const;
    bool is_mean_sum_Valid() const;

    OAIMetricStructuredName getName() const;
    void setName(const OAIMetricStructuredName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QJsonValue getScalar() const;
    void setScalar(const QJsonValue &scalar);
    bool is_scalar_Set() const;
    bool is_scalar_Valid() const;

    QJsonValue getRSet() const;
    void setRSet(const QJsonValue &r_set);
    bool is_r_set_Set() const;
    bool is_r_set_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_cumulative;
    bool m_cumulative_isSet;
    bool m_cumulative_isValid;

    QJsonValue m_distribution;
    bool m_distribution_isSet;
    bool m_distribution_isValid;

    QJsonValue m_gauge;
    bool m_gauge_isSet;
    bool m_gauge_isValid;

    QJsonValue m_internal;
    bool m_internal_isSet;
    bool m_internal_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QJsonValue m_mean_count;
    bool m_mean_count_isSet;
    bool m_mean_count_isValid;

    QJsonValue m_mean_sum;
    bool m_mean_sum_isSet;
    bool m_mean_sum_isValid;

    OAIMetricStructuredName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QJsonValue m_scalar;
    bool m_scalar_isSet;
    bool m_scalar_isValid;

    QJsonValue m_r_set;
    bool m_r_set_isSet;
    bool m_r_set_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetricUpdate)

#endif // OAIMetricUpdate_H
