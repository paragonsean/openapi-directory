/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkerSettings.h
 *
 * Provides data to pass through to the worker harness.
 */

#ifndef OAIWorkerSettings_H
#define OAIWorkerSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkerSettings : public OAIObject {
public:
    OAIWorkerSettings();
    OAIWorkerSettings(QString json);
    ~OAIWorkerSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    bool isReportingEnabled() const;
    void setReportingEnabled(const bool &reporting_enabled);
    bool is_reporting_enabled_Set() const;
    bool is_reporting_enabled_Valid() const;

    QString getServicePath() const;
    void setServicePath(const QString &service_path);
    bool is_service_path_Set() const;
    bool is_service_path_Valid() const;

    QString getShuffleServicePath() const;
    void setShuffleServicePath(const QString &shuffle_service_path);
    bool is_shuffle_service_path_Set() const;
    bool is_shuffle_service_path_Valid() const;

    QString getTempStoragePrefix() const;
    void setTempStoragePrefix(const QString &temp_storage_prefix);
    bool is_temp_storage_prefix_Set() const;
    bool is_temp_storage_prefix_Valid() const;

    QString getWorkerId() const;
    void setWorkerId(const QString &worker_id);
    bool is_worker_id_Set() const;
    bool is_worker_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    bool m_reporting_enabled;
    bool m_reporting_enabled_isSet;
    bool m_reporting_enabled_isValid;

    QString m_service_path;
    bool m_service_path_isSet;
    bool m_service_path_isValid;

    QString m_shuffle_service_path;
    bool m_shuffle_service_path_isSet;
    bool m_shuffle_service_path_isValid;

    QString m_temp_storage_prefix;
    bool m_temp_storage_prefix_isSet;
    bool m_temp_storage_prefix_isValid;

    QString m_worker_id;
    bool m_worker_id_isSet;
    bool m_worker_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkerSettings)

#endif // OAIWorkerSettings_H
