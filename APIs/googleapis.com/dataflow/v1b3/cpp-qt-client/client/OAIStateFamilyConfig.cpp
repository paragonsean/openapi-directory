/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStateFamilyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStateFamilyConfig::OAIStateFamilyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStateFamilyConfig::OAIStateFamilyConfig() {
    this->initializeModel();
}

OAIStateFamilyConfig::~OAIStateFamilyConfig() {}

void OAIStateFamilyConfig::initializeModel() {

    m_is_read_isSet = false;
    m_is_read_isValid = false;

    m_state_family_isSet = false;
    m_state_family_isValid = false;
}

void OAIStateFamilyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStateFamilyConfig::fromJsonObject(QJsonObject json) {

    m_is_read_isValid = ::OpenAPI::fromJsonValue(m_is_read, json[QString("isRead")]);
    m_is_read_isSet = !json[QString("isRead")].isNull() && m_is_read_isValid;

    m_state_family_isValid = ::OpenAPI::fromJsonValue(m_state_family, json[QString("stateFamily")]);
    m_state_family_isSet = !json[QString("stateFamily")].isNull() && m_state_family_isValid;
}

QString OAIStateFamilyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStateFamilyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_is_read_isSet) {
        obj.insert(QString("isRead"), ::OpenAPI::toJsonValue(m_is_read));
    }
    if (m_state_family_isSet) {
        obj.insert(QString("stateFamily"), ::OpenAPI::toJsonValue(m_state_family));
    }
    return obj;
}

bool OAIStateFamilyConfig::isIsRead() const {
    return m_is_read;
}
void OAIStateFamilyConfig::setIsRead(const bool &is_read) {
    m_is_read = is_read;
    m_is_read_isSet = true;
}

bool OAIStateFamilyConfig::is_is_read_Set() const{
    return m_is_read_isSet;
}

bool OAIStateFamilyConfig::is_is_read_Valid() const{
    return m_is_read_isValid;
}

QString OAIStateFamilyConfig::getStateFamily() const {
    return m_state_family;
}
void OAIStateFamilyConfig::setStateFamily(const QString &state_family) {
    m_state_family = state_family;
    m_state_family_isSet = true;
}

bool OAIStateFamilyConfig::is_state_family_Set() const{
    return m_state_family_isSet;
}

bool OAIStateFamilyConfig::is_state_family_Valid() const{
    return m_state_family_isValid;
}

bool OAIStateFamilyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_read_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_family_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStateFamilyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
