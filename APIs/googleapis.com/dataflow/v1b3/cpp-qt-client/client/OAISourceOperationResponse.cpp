/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceOperationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceOperationResponse::OAISourceOperationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceOperationResponse::OAISourceOperationResponse() {
    this->initializeModel();
}

OAISourceOperationResponse::~OAISourceOperationResponse() {}

void OAISourceOperationResponse::initializeModel() {

    m_get_metadata_isSet = false;
    m_get_metadata_isValid = false;

    m_split_isSet = false;
    m_split_isValid = false;
}

void OAISourceOperationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceOperationResponse::fromJsonObject(QJsonObject json) {

    m_get_metadata_isValid = ::OpenAPI::fromJsonValue(m_get_metadata, json[QString("getMetadata")]);
    m_get_metadata_isSet = !json[QString("getMetadata")].isNull() && m_get_metadata_isValid;

    m_split_isValid = ::OpenAPI::fromJsonValue(m_split, json[QString("split")]);
    m_split_isSet = !json[QString("split")].isNull() && m_split_isValid;
}

QString OAISourceOperationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceOperationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_get_metadata.isSet()) {
        obj.insert(QString("getMetadata"), ::OpenAPI::toJsonValue(m_get_metadata));
    }
    if (m_split.isSet()) {
        obj.insert(QString("split"), ::OpenAPI::toJsonValue(m_split));
    }
    return obj;
}

OAISourceGetMetadataResponse OAISourceOperationResponse::getGetMetadata() const {
    return m_get_metadata;
}
void OAISourceOperationResponse::setGetMetadata(const OAISourceGetMetadataResponse &get_metadata) {
    m_get_metadata = get_metadata;
    m_get_metadata_isSet = true;
}

bool OAISourceOperationResponse::is_get_metadata_Set() const{
    return m_get_metadata_isSet;
}

bool OAISourceOperationResponse::is_get_metadata_Valid() const{
    return m_get_metadata_isValid;
}

OAISourceSplitResponse OAISourceOperationResponse::getSplit() const {
    return m_split;
}
void OAISourceOperationResponse::setSplit(const OAISourceSplitResponse &split) {
    m_split = split;
    m_split_isSet = true;
}

bool OAISourceOperationResponse::is_split_Set() const{
    return m_split_isSet;
}

bool OAISourceOperationResponse::is_split_Valid() const{
    return m_split_isValid;
}

bool OAISourceOperationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_get_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_split.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceOperationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
