/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportWorkItemStatusResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportWorkItemStatusResponse::OAIReportWorkItemStatusResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportWorkItemStatusResponse::OAIReportWorkItemStatusResponse() {
    this->initializeModel();
}

OAIReportWorkItemStatusResponse::~OAIReportWorkItemStatusResponse() {}

void OAIReportWorkItemStatusResponse::initializeModel() {

    m_unified_worker_response_isSet = false;
    m_unified_worker_response_isValid = false;

    m_work_item_service_states_isSet = false;
    m_work_item_service_states_isValid = false;
}

void OAIReportWorkItemStatusResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportWorkItemStatusResponse::fromJsonObject(QJsonObject json) {

    m_unified_worker_response_isValid = ::OpenAPI::fromJsonValue(m_unified_worker_response, json[QString("unifiedWorkerResponse")]);
    m_unified_worker_response_isSet = !json[QString("unifiedWorkerResponse")].isNull() && m_unified_worker_response_isValid;

    m_work_item_service_states_isValid = ::OpenAPI::fromJsonValue(m_work_item_service_states, json[QString("workItemServiceStates")]);
    m_work_item_service_states_isSet = !json[QString("workItemServiceStates")].isNull() && m_work_item_service_states_isValid;
}

QString OAIReportWorkItemStatusResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportWorkItemStatusResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_unified_worker_response.size() > 0) {
        obj.insert(QString("unifiedWorkerResponse"), ::OpenAPI::toJsonValue(m_unified_worker_response));
    }
    if (m_work_item_service_states.size() > 0) {
        obj.insert(QString("workItemServiceStates"), ::OpenAPI::toJsonValue(m_work_item_service_states));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIReportWorkItemStatusResponse::getUnifiedWorkerResponse() const {
    return m_unified_worker_response;
}
void OAIReportWorkItemStatusResponse::setUnifiedWorkerResponse(const QMap<QString, QJsonValue> &unified_worker_response) {
    m_unified_worker_response = unified_worker_response;
    m_unified_worker_response_isSet = true;
}

bool OAIReportWorkItemStatusResponse::is_unified_worker_response_Set() const{
    return m_unified_worker_response_isSet;
}

bool OAIReportWorkItemStatusResponse::is_unified_worker_response_Valid() const{
    return m_unified_worker_response_isValid;
}

QList<OAIWorkItemServiceState> OAIReportWorkItemStatusResponse::getWorkItemServiceStates() const {
    return m_work_item_service_states;
}
void OAIReportWorkItemStatusResponse::setWorkItemServiceStates(const QList<OAIWorkItemServiceState> &work_item_service_states) {
    m_work_item_service_states = work_item_service_states;
    m_work_item_service_states_isSet = true;
}

bool OAIReportWorkItemStatusResponse::is_work_item_service_states_Set() const{
    return m_work_item_service_states_isSet;
}

bool OAIReportWorkItemStatusResponse::is_work_item_service_states_Valid() const{
    return m_work_item_service_states_isValid;
}

bool OAIReportWorkItemStatusResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_unified_worker_response.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_item_service_states.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportWorkItemStatusResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
