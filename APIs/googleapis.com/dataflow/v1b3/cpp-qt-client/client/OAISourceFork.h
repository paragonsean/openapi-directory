/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceFork.h
 *
 * DEPRECATED in favor of DynamicSourceSplit.
 */

#ifndef OAISourceFork_H
#define OAISourceFork_H

#include <QJsonObject>

#include "OAIDerivedSource.h"
#include "OAISourceSplitShard.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceSplitShard;
class OAIDerivedSource;

class OAISourceFork : public OAIObject {
public:
    OAISourceFork();
    OAISourceFork(QString json);
    ~OAISourceFork() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceSplitShard getPrimary() const;
    void setPrimary(const OAISourceSplitShard &primary);
    bool is_primary_Set() const;
    bool is_primary_Valid() const;

    OAIDerivedSource getPrimarySource() const;
    void setPrimarySource(const OAIDerivedSource &primary_source);
    bool is_primary_source_Set() const;
    bool is_primary_source_Valid() const;

    OAISourceSplitShard getResidual() const;
    void setResidual(const OAISourceSplitShard &residual);
    bool is_residual_Set() const;
    bool is_residual_Valid() const;

    OAIDerivedSource getResidualSource() const;
    void setResidualSource(const OAIDerivedSource &residual_source);
    bool is_residual_source_Set() const;
    bool is_residual_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceSplitShard m_primary;
    bool m_primary_isSet;
    bool m_primary_isValid;

    OAIDerivedSource m_primary_source;
    bool m_primary_source_isSet;
    bool m_primary_source_isValid;

    OAISourceSplitShard m_residual;
    bool m_residual_isSet;
    bool m_residual_isValid;

    OAIDerivedSource m_residual_source;
    bool m_residual_source_isSet;
    bool m_residual_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceFork)

#endif // OAISourceFork_H
