/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoscalingEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoscalingEvent::OAIAutoscalingEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoscalingEvent::OAIAutoscalingEvent() {
    this->initializeModel();
}

OAIAutoscalingEvent::~OAIAutoscalingEvent() {}

void OAIAutoscalingEvent::initializeModel() {

    m_current_num_workers_isSet = false;
    m_current_num_workers_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_event_type_isSet = false;
    m_event_type_isValid = false;

    m_target_num_workers_isSet = false;
    m_target_num_workers_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;

    m_worker_pool_isSet = false;
    m_worker_pool_isValid = false;
}

void OAIAutoscalingEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoscalingEvent::fromJsonObject(QJsonObject json) {

    m_current_num_workers_isValid = ::OpenAPI::fromJsonValue(m_current_num_workers, json[QString("currentNumWorkers")]);
    m_current_num_workers_isSet = !json[QString("currentNumWorkers")].isNull() && m_current_num_workers_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_event_type_isValid = ::OpenAPI::fromJsonValue(m_event_type, json[QString("eventType")]);
    m_event_type_isSet = !json[QString("eventType")].isNull() && m_event_type_isValid;

    m_target_num_workers_isValid = ::OpenAPI::fromJsonValue(m_target_num_workers, json[QString("targetNumWorkers")]);
    m_target_num_workers_isSet = !json[QString("targetNumWorkers")].isNull() && m_target_num_workers_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_worker_pool_isValid = ::OpenAPI::fromJsonValue(m_worker_pool, json[QString("workerPool")]);
    m_worker_pool_isSet = !json[QString("workerPool")].isNull() && m_worker_pool_isValid;
}

QString OAIAutoscalingEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoscalingEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_current_num_workers_isSet) {
        obj.insert(QString("currentNumWorkers"), ::OpenAPI::toJsonValue(m_current_num_workers));
    }
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_event_type_isSet) {
        obj.insert(QString("eventType"), ::OpenAPI::toJsonValue(m_event_type));
    }
    if (m_target_num_workers_isSet) {
        obj.insert(QString("targetNumWorkers"), ::OpenAPI::toJsonValue(m_target_num_workers));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    if (m_worker_pool_isSet) {
        obj.insert(QString("workerPool"), ::OpenAPI::toJsonValue(m_worker_pool));
    }
    return obj;
}

QString OAIAutoscalingEvent::getCurrentNumWorkers() const {
    return m_current_num_workers;
}
void OAIAutoscalingEvent::setCurrentNumWorkers(const QString &current_num_workers) {
    m_current_num_workers = current_num_workers;
    m_current_num_workers_isSet = true;
}

bool OAIAutoscalingEvent::is_current_num_workers_Set() const{
    return m_current_num_workers_isSet;
}

bool OAIAutoscalingEvent::is_current_num_workers_Valid() const{
    return m_current_num_workers_isValid;
}

OAIStructuredMessage OAIAutoscalingEvent::getDescription() const {
    return m_description;
}
void OAIAutoscalingEvent::setDescription(const OAIStructuredMessage &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAutoscalingEvent::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAutoscalingEvent::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAutoscalingEvent::getEventType() const {
    return m_event_type;
}
void OAIAutoscalingEvent::setEventType(const QString &event_type) {
    m_event_type = event_type;
    m_event_type_isSet = true;
}

bool OAIAutoscalingEvent::is_event_type_Set() const{
    return m_event_type_isSet;
}

bool OAIAutoscalingEvent::is_event_type_Valid() const{
    return m_event_type_isValid;
}

QString OAIAutoscalingEvent::getTargetNumWorkers() const {
    return m_target_num_workers;
}
void OAIAutoscalingEvent::setTargetNumWorkers(const QString &target_num_workers) {
    m_target_num_workers = target_num_workers;
    m_target_num_workers_isSet = true;
}

bool OAIAutoscalingEvent::is_target_num_workers_Set() const{
    return m_target_num_workers_isSet;
}

bool OAIAutoscalingEvent::is_target_num_workers_Valid() const{
    return m_target_num_workers_isValid;
}

QString OAIAutoscalingEvent::getTime() const {
    return m_time;
}
void OAIAutoscalingEvent::setTime(const QString &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIAutoscalingEvent::is_time_Set() const{
    return m_time_isSet;
}

bool OAIAutoscalingEvent::is_time_Valid() const{
    return m_time_isValid;
}

QString OAIAutoscalingEvent::getWorkerPool() const {
    return m_worker_pool;
}
void OAIAutoscalingEvent::setWorkerPool(const QString &worker_pool) {
    m_worker_pool = worker_pool;
    m_worker_pool_isSet = true;
}

bool OAIAutoscalingEvent::is_worker_pool_Set() const{
    return m_worker_pool_isSet;
}

bool OAIAutoscalingEvent::is_worker_pool_Valid() const{
    return m_worker_pool_isValid;
}

bool OAIAutoscalingEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_num_workers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_num_workers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_worker_pool_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoscalingEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
