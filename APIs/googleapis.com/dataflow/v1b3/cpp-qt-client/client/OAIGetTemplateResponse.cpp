/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetTemplateResponse::OAIGetTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetTemplateResponse::OAIGetTemplateResponse() {
    this->initializeModel();
}

OAIGetTemplateResponse::~OAIGetTemplateResponse() {}

void OAIGetTemplateResponse::initializeModel() {

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_runtime_metadata_isSet = false;
    m_runtime_metadata_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_template_type_isSet = false;
    m_template_type_isValid = false;
}

void OAIGetTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetTemplateResponse::fromJsonObject(QJsonObject json) {

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_runtime_metadata_isValid = ::OpenAPI::fromJsonValue(m_runtime_metadata, json[QString("runtimeMetadata")]);
    m_runtime_metadata_isSet = !json[QString("runtimeMetadata")].isNull() && m_runtime_metadata_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_template_type_isValid = ::OpenAPI::fromJsonValue(m_template_type, json[QString("templateType")]);
    m_template_type_isSet = !json[QString("templateType")].isNull() && m_template_type_isValid;
}

QString OAIGetTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_runtime_metadata.isSet()) {
        obj.insert(QString("runtimeMetadata"), ::OpenAPI::toJsonValue(m_runtime_metadata));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_template_type_isSet) {
        obj.insert(QString("templateType"), ::OpenAPI::toJsonValue(m_template_type));
    }
    return obj;
}

OAITemplateMetadata OAIGetTemplateResponse::getMetadata() const {
    return m_metadata;
}
void OAIGetTemplateResponse::setMetadata(const OAITemplateMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGetTemplateResponse::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGetTemplateResponse::is_metadata_Valid() const{
    return m_metadata_isValid;
}

OAIRuntimeMetadata OAIGetTemplateResponse::getRuntimeMetadata() const {
    return m_runtime_metadata;
}
void OAIGetTemplateResponse::setRuntimeMetadata(const OAIRuntimeMetadata &runtime_metadata) {
    m_runtime_metadata = runtime_metadata;
    m_runtime_metadata_isSet = true;
}

bool OAIGetTemplateResponse::is_runtime_metadata_Set() const{
    return m_runtime_metadata_isSet;
}

bool OAIGetTemplateResponse::is_runtime_metadata_Valid() const{
    return m_runtime_metadata_isValid;
}

OAIStatus OAIGetTemplateResponse::getStatus() const {
    return m_status;
}
void OAIGetTemplateResponse::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetTemplateResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetTemplateResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGetTemplateResponse::getTemplateType() const {
    return m_template_type;
}
void OAIGetTemplateResponse::setTemplateType(const QString &template_type) {
    m_template_type = template_type;
    m_template_type_isSet = true;
}

bool OAIGetTemplateResponse::is_template_type_Set() const{
    return m_template_type_isSet;
}

bool OAIGetTemplateResponse::is_template_type_Valid() const{
    return m_template_type_isValid;
}

bool OAIGetTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
