/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceSplitResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceSplitResponse::OAISourceSplitResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceSplitResponse::OAISourceSplitResponse() {
    this->initializeModel();
}

OAISourceSplitResponse::~OAISourceSplitResponse() {}

void OAISourceSplitResponse::initializeModel() {

    m_bundles_isSet = false;
    m_bundles_isValid = false;

    m_outcome_isSet = false;
    m_outcome_isValid = false;

    m_shards_isSet = false;
    m_shards_isValid = false;
}

void OAISourceSplitResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceSplitResponse::fromJsonObject(QJsonObject json) {

    m_bundles_isValid = ::OpenAPI::fromJsonValue(m_bundles, json[QString("bundles")]);
    m_bundles_isSet = !json[QString("bundles")].isNull() && m_bundles_isValid;

    m_outcome_isValid = ::OpenAPI::fromJsonValue(m_outcome, json[QString("outcome")]);
    m_outcome_isSet = !json[QString("outcome")].isNull() && m_outcome_isValid;

    m_shards_isValid = ::OpenAPI::fromJsonValue(m_shards, json[QString("shards")]);
    m_shards_isSet = !json[QString("shards")].isNull() && m_shards_isValid;
}

QString OAISourceSplitResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceSplitResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_bundles.size() > 0) {
        obj.insert(QString("bundles"), ::OpenAPI::toJsonValue(m_bundles));
    }
    if (m_outcome_isSet) {
        obj.insert(QString("outcome"), ::OpenAPI::toJsonValue(m_outcome));
    }
    if (m_shards.size() > 0) {
        obj.insert(QString("shards"), ::OpenAPI::toJsonValue(m_shards));
    }
    return obj;
}

QList<OAIDerivedSource> OAISourceSplitResponse::getBundles() const {
    return m_bundles;
}
void OAISourceSplitResponse::setBundles(const QList<OAIDerivedSource> &bundles) {
    m_bundles = bundles;
    m_bundles_isSet = true;
}

bool OAISourceSplitResponse::is_bundles_Set() const{
    return m_bundles_isSet;
}

bool OAISourceSplitResponse::is_bundles_Valid() const{
    return m_bundles_isValid;
}

QString OAISourceSplitResponse::getOutcome() const {
    return m_outcome;
}
void OAISourceSplitResponse::setOutcome(const QString &outcome) {
    m_outcome = outcome;
    m_outcome_isSet = true;
}

bool OAISourceSplitResponse::is_outcome_Set() const{
    return m_outcome_isSet;
}

bool OAISourceSplitResponse::is_outcome_Valid() const{
    return m_outcome_isValid;
}

QList<OAISourceSplitShard> OAISourceSplitResponse::getShards() const {
    return m_shards;
}
void OAISourceSplitResponse::setShards(const QList<OAISourceSplitShard> &shards) {
    m_shards = shards;
    m_shards_isSet = true;
}

bool OAISourceSplitResponse::is_shards_Set() const{
    return m_shards_isSet;
}

bool OAISourceSplitResponse::is_shards_Valid() const{
    return m_shards_isValid;
}

bool OAISourceSplitResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bundles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_outcome_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shards.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceSplitResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
