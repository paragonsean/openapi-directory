/**
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParallelInstruction.h
 *
 * Describes a particular operation comprising a MapTask.
 */

#ifndef OAIParallelInstruction_H
#define OAIParallelInstruction_H

#include <QJsonObject>

#include "OAIFlattenInstruction.h"
#include "OAIInstructionOutput.h"
#include "OAIParDoInstruction.h"
#include "OAIPartialGroupByKeyInstruction.h"
#include "OAIReadInstruction.h"
#include "OAIWriteInstruction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFlattenInstruction;
class OAIInstructionOutput;
class OAIParDoInstruction;
class OAIPartialGroupByKeyInstruction;
class OAIReadInstruction;
class OAIWriteInstruction;

class OAIParallelInstruction : public OAIObject {
public:
    OAIParallelInstruction();
    OAIParallelInstruction(QString json);
    ~OAIParallelInstruction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFlattenInstruction getFlatten() const;
    void setFlatten(const OAIFlattenInstruction &flatten);
    bool is_flatten_Set() const;
    bool is_flatten_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOriginalName() const;
    void setOriginalName(const QString &original_name);
    bool is_original_name_Set() const;
    bool is_original_name_Valid() const;

    QList<OAIInstructionOutput> getOutputs() const;
    void setOutputs(const QList<OAIInstructionOutput> &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    OAIParDoInstruction getParDo() const;
    void setParDo(const OAIParDoInstruction &par_do);
    bool is_par_do_Set() const;
    bool is_par_do_Valid() const;

    OAIPartialGroupByKeyInstruction getPartialGroupByKey() const;
    void setPartialGroupByKey(const OAIPartialGroupByKeyInstruction &partial_group_by_key);
    bool is_partial_group_by_key_Set() const;
    bool is_partial_group_by_key_Valid() const;

    OAIReadInstruction getRead() const;
    void setRead(const OAIReadInstruction &read);
    bool is_read_Set() const;
    bool is_read_Valid() const;

    QString getSystemName() const;
    void setSystemName(const QString &system_name);
    bool is_system_name_Set() const;
    bool is_system_name_Valid() const;

    OAIWriteInstruction getWrite() const;
    void setWrite(const OAIWriteInstruction &write);
    bool is_write_Set() const;
    bool is_write_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFlattenInstruction m_flatten;
    bool m_flatten_isSet;
    bool m_flatten_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_original_name;
    bool m_original_name_isSet;
    bool m_original_name_isValid;

    QList<OAIInstructionOutput> m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    OAIParDoInstruction m_par_do;
    bool m_par_do_isSet;
    bool m_par_do_isValid;

    OAIPartialGroupByKeyInstruction m_partial_group_by_key;
    bool m_partial_group_by_key_isSet;
    bool m_partial_group_by_key_isValid;

    OAIReadInstruction m_read;
    bool m_read_isSet;
    bool m_read_isValid;

    QString m_system_name;
    bool m_system_name_isSet;
    bool m_system_name_isValid;

    OAIWriteInstruction m_write;
    bool m_write_isSet;
    bool m_write_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParallelInstruction)

#endif // OAIParallelInstruction_H
