/*
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApproximateProgress;
import org.openapitools.client.model.ApproximateReportedProgress;
import org.openapitools.client.model.CounterUpdate;
import org.openapitools.client.model.DynamicSourceSplit;
import org.openapitools.client.model.MetricUpdate;
import org.openapitools.client.model.Position;
import org.openapitools.client.model.SourceFork;
import org.openapitools.client.model.SourceOperationResponse;
import org.openapitools.client.model.Status;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WorkItemStatus
 */
public class WorkItemStatusTest {
    private final WorkItemStatus model = new WorkItemStatus();

    /**
     * Model tests for WorkItemStatus
     */
    @Test
    public void testWorkItemStatus() {
        // TODO: test WorkItemStatus
    }

    /**
     * Test the property 'completed'
     */
    @Test
    public void completedTest() {
        // TODO: test completed
    }

    /**
     * Test the property 'counterUpdates'
     */
    @Test
    public void counterUpdatesTest() {
        // TODO: test counterUpdates
    }

    /**
     * Test the property 'dynamicSourceSplit'
     */
    @Test
    public void dynamicSourceSplitTest() {
        // TODO: test dynamicSourceSplit
    }

    /**
     * Test the property 'errors'
     */
    @Test
    public void errorsTest() {
        // TODO: test errors
    }

    /**
     * Test the property 'metricUpdates'
     */
    @Test
    public void metricUpdatesTest() {
        // TODO: test metricUpdates
    }

    /**
     * Test the property 'progress'
     */
    @Test
    public void progressTest() {
        // TODO: test progress
    }

    /**
     * Test the property 'reportIndex'
     */
    @Test
    public void reportIndexTest() {
        // TODO: test reportIndex
    }

    /**
     * Test the property 'reportedProgress'
     */
    @Test
    public void reportedProgressTest() {
        // TODO: test reportedProgress
    }

    /**
     * Test the property 'requestedLeaseDuration'
     */
    @Test
    public void requestedLeaseDurationTest() {
        // TODO: test requestedLeaseDuration
    }

    /**
     * Test the property 'sourceFork'
     */
    @Test
    public void sourceForkTest() {
        // TODO: test sourceFork
    }

    /**
     * Test the property 'sourceOperationResponse'
     */
    @Test
    public void sourceOperationResponseTest() {
        // TODO: test sourceOperationResponse
    }

    /**
     * Test the property 'stopPosition'
     */
    @Test
    public void stopPositionTest() {
        // TODO: test stopPosition
    }

    /**
     * Test the property 'totalThrottlerWaitTimeSeconds'
     */
    @Test
    public void totalThrottlerWaitTimeSecondsTest() {
        // TODO: test totalThrottlerWaitTimeSeconds
    }

    /**
     * Test the property 'workItemId'
     */
    @Test
    public void workItemIdTest() {
        // TODO: test workItemId
    }

}
