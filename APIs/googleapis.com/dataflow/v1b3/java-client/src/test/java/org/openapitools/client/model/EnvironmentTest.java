/*
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DebugOptions;
import org.openapitools.client.model.WorkerPool;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Environment
 */
public class EnvironmentTest {
    private final Environment model = new Environment();

    /**
     * Model tests for Environment
     */
    @Test
    public void testEnvironment() {
        // TODO: test Environment
    }

    /**
     * Test the property 'clusterManagerApiService'
     */
    @Test
    public void clusterManagerApiServiceTest() {
        // TODO: test clusterManagerApiService
    }

    /**
     * Test the property 'dataset'
     */
    @Test
    public void datasetTest() {
        // TODO: test dataset
    }

    /**
     * Test the property 'debugOptions'
     */
    @Test
    public void debugOptionsTest() {
        // TODO: test debugOptions
    }

    /**
     * Test the property 'experiments'
     */
    @Test
    public void experimentsTest() {
        // TODO: test experiments
    }

    /**
     * Test the property 'flexResourceSchedulingGoal'
     */
    @Test
    public void flexResourceSchedulingGoalTest() {
        // TODO: test flexResourceSchedulingGoal
    }

    /**
     * Test the property 'internalExperiments'
     */
    @Test
    public void internalExperimentsTest() {
        // TODO: test internalExperiments
    }

    /**
     * Test the property 'sdkPipelineOptions'
     */
    @Test
    public void sdkPipelineOptionsTest() {
        // TODO: test sdkPipelineOptions
    }

    /**
     * Test the property 'serviceAccountEmail'
     */
    @Test
    public void serviceAccountEmailTest() {
        // TODO: test serviceAccountEmail
    }

    /**
     * Test the property 'serviceKmsKeyName'
     */
    @Test
    public void serviceKmsKeyNameTest() {
        // TODO: test serviceKmsKeyName
    }

    /**
     * Test the property 'serviceOptions'
     */
    @Test
    public void serviceOptionsTest() {
        // TODO: test serviceOptions
    }

    /**
     * Test the property 'shuffleMode'
     */
    @Test
    public void shuffleModeTest() {
        // TODO: test shuffleMode
    }

    /**
     * Test the property 'streamingMode'
     */
    @Test
    public void streamingModeTest() {
        // TODO: test streamingMode
    }

    /**
     * Test the property 'tempStoragePrefix'
     */
    @Test
    public void tempStoragePrefixTest() {
        // TODO: test tempStoragePrefix
    }

    /**
     * Test the property 'useStreamingEngineResourceBasedBilling'
     */
    @Test
    public void useStreamingEngineResourceBasedBillingTest() {
        // TODO: test useStreamingEngineResourceBasedBilling
    }

    /**
     * Test the property 'userAgent'
     */
    @Test
    public void userAgentTest() {
        // TODO: test userAgent
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'workerPools'
     */
    @Test
    public void workerPoolsTest() {
        // TODO: test workerPools
    }

    /**
     * Test the property 'workerRegion'
     */
    @Test
    public void workerRegionTest() {
        // TODO: test workerRegion
    }

    /**
     * Test the property 'workerZone'
     */
    @Test
    public void workerZoneTest() {
        // TODO: test workerZone
    }

}
