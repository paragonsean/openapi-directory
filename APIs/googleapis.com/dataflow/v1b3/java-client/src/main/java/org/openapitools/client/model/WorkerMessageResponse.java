/*
 * Dataflow API
 * Manages Google Cloud Dataflow projects on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1b3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StreamingScalingReportResponse;
import org.openapitools.client.model.WorkerHealthReportResponse;
import org.openapitools.client.model.WorkerThreadScalingReportResponse;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A worker_message response allows the server to pass information to the sender.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:54.918086-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WorkerMessageResponse {
  public static final String SERIALIZED_NAME_STREAMING_SCALING_REPORT_RESPONSE = "streamingScalingReportResponse";
  @SerializedName(SERIALIZED_NAME_STREAMING_SCALING_REPORT_RESPONSE)
  private StreamingScalingReportResponse streamingScalingReportResponse;

  public static final String SERIALIZED_NAME_WORKER_HEALTH_REPORT_RESPONSE = "workerHealthReportResponse";
  @SerializedName(SERIALIZED_NAME_WORKER_HEALTH_REPORT_RESPONSE)
  private WorkerHealthReportResponse workerHealthReportResponse;

  public static final String SERIALIZED_NAME_WORKER_METRICS_RESPONSE = "workerMetricsResponse";
  @SerializedName(SERIALIZED_NAME_WORKER_METRICS_RESPONSE)
  private Object workerMetricsResponse;

  public static final String SERIALIZED_NAME_WORKER_SHUTDOWN_NOTICE_RESPONSE = "workerShutdownNoticeResponse";
  @SerializedName(SERIALIZED_NAME_WORKER_SHUTDOWN_NOTICE_RESPONSE)
  private Object workerShutdownNoticeResponse;

  public static final String SERIALIZED_NAME_WORKER_THREAD_SCALING_REPORT_RESPONSE = "workerThreadScalingReportResponse";
  @SerializedName(SERIALIZED_NAME_WORKER_THREAD_SCALING_REPORT_RESPONSE)
  private WorkerThreadScalingReportResponse workerThreadScalingReportResponse;

  public WorkerMessageResponse() {
  }

  public WorkerMessageResponse streamingScalingReportResponse(StreamingScalingReportResponse streamingScalingReportResponse) {
    this.streamingScalingReportResponse = streamingScalingReportResponse;
    return this;
  }

  /**
   * Get streamingScalingReportResponse
   * @return streamingScalingReportResponse
   */
  @javax.annotation.Nullable
  public StreamingScalingReportResponse getStreamingScalingReportResponse() {
    return streamingScalingReportResponse;
  }

  public void setStreamingScalingReportResponse(StreamingScalingReportResponse streamingScalingReportResponse) {
    this.streamingScalingReportResponse = streamingScalingReportResponse;
  }


  public WorkerMessageResponse workerHealthReportResponse(WorkerHealthReportResponse workerHealthReportResponse) {
    this.workerHealthReportResponse = workerHealthReportResponse;
    return this;
  }

  /**
   * Get workerHealthReportResponse
   * @return workerHealthReportResponse
   */
  @javax.annotation.Nullable
  public WorkerHealthReportResponse getWorkerHealthReportResponse() {
    return workerHealthReportResponse;
  }

  public void setWorkerHealthReportResponse(WorkerHealthReportResponse workerHealthReportResponse) {
    this.workerHealthReportResponse = workerHealthReportResponse;
  }


  public WorkerMessageResponse workerMetricsResponse(Object workerMetricsResponse) {
    this.workerMetricsResponse = workerMetricsResponse;
    return this;
  }

  /**
   * Service-side response to WorkerMessage reporting resource utilization.
   * @return workerMetricsResponse
   */
  @javax.annotation.Nullable
  public Object getWorkerMetricsResponse() {
    return workerMetricsResponse;
  }

  public void setWorkerMetricsResponse(Object workerMetricsResponse) {
    this.workerMetricsResponse = workerMetricsResponse;
  }


  public WorkerMessageResponse workerShutdownNoticeResponse(Object workerShutdownNoticeResponse) {
    this.workerShutdownNoticeResponse = workerShutdownNoticeResponse;
    return this;
  }

  /**
   * Service-side response to WorkerMessage issuing shutdown notice.
   * @return workerShutdownNoticeResponse
   */
  @javax.annotation.Nullable
  public Object getWorkerShutdownNoticeResponse() {
    return workerShutdownNoticeResponse;
  }

  public void setWorkerShutdownNoticeResponse(Object workerShutdownNoticeResponse) {
    this.workerShutdownNoticeResponse = workerShutdownNoticeResponse;
  }


  public WorkerMessageResponse workerThreadScalingReportResponse(WorkerThreadScalingReportResponse workerThreadScalingReportResponse) {
    this.workerThreadScalingReportResponse = workerThreadScalingReportResponse;
    return this;
  }

  /**
   * Get workerThreadScalingReportResponse
   * @return workerThreadScalingReportResponse
   */
  @javax.annotation.Nullable
  public WorkerThreadScalingReportResponse getWorkerThreadScalingReportResponse() {
    return workerThreadScalingReportResponse;
  }

  public void setWorkerThreadScalingReportResponse(WorkerThreadScalingReportResponse workerThreadScalingReportResponse) {
    this.workerThreadScalingReportResponse = workerThreadScalingReportResponse;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkerMessageResponse workerMessageResponse = (WorkerMessageResponse) o;
    return Objects.equals(this.streamingScalingReportResponse, workerMessageResponse.streamingScalingReportResponse) &&
        Objects.equals(this.workerHealthReportResponse, workerMessageResponse.workerHealthReportResponse) &&
        Objects.equals(this.workerMetricsResponse, workerMessageResponse.workerMetricsResponse) &&
        Objects.equals(this.workerShutdownNoticeResponse, workerMessageResponse.workerShutdownNoticeResponse) &&
        Objects.equals(this.workerThreadScalingReportResponse, workerMessageResponse.workerThreadScalingReportResponse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(streamingScalingReportResponse, workerHealthReportResponse, workerMetricsResponse, workerShutdownNoticeResponse, workerThreadScalingReportResponse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkerMessageResponse {\n");
    sb.append("    streamingScalingReportResponse: ").append(toIndentedString(streamingScalingReportResponse)).append("\n");
    sb.append("    workerHealthReportResponse: ").append(toIndentedString(workerHealthReportResponse)).append("\n");
    sb.append("    workerMetricsResponse: ").append(toIndentedString(workerMetricsResponse)).append("\n");
    sb.append("    workerShutdownNoticeResponse: ").append(toIndentedString(workerShutdownNoticeResponse)).append("\n");
    sb.append("    workerThreadScalingReportResponse: ").append(toIndentedString(workerThreadScalingReportResponse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("streamingScalingReportResponse");
    openapiFields.add("workerHealthReportResponse");
    openapiFields.add("workerMetricsResponse");
    openapiFields.add("workerShutdownNoticeResponse");
    openapiFields.add("workerThreadScalingReportResponse");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WorkerMessageResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WorkerMessageResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkerMessageResponse is not found in the empty JSON string", WorkerMessageResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WorkerMessageResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkerMessageResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `streamingScalingReportResponse`
      if (jsonObj.get("streamingScalingReportResponse") != null && !jsonObj.get("streamingScalingReportResponse").isJsonNull()) {
        StreamingScalingReportResponse.validateJsonElement(jsonObj.get("streamingScalingReportResponse"));
      }
      // validate the optional field `workerHealthReportResponse`
      if (jsonObj.get("workerHealthReportResponse") != null && !jsonObj.get("workerHealthReportResponse").isJsonNull()) {
        WorkerHealthReportResponse.validateJsonElement(jsonObj.get("workerHealthReportResponse"));
      }
      // validate the optional field `workerThreadScalingReportResponse`
      if (jsonObj.get("workerThreadScalingReportResponse") != null && !jsonObj.get("workerThreadScalingReportResponse").isJsonNull()) {
        WorkerThreadScalingReportResponse.validateJsonElement(jsonObj.get("workerThreadScalingReportResponse"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkerMessageResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkerMessageResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkerMessageResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkerMessageResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkerMessageResponse>() {
           @Override
           public void write(JsonWriter out, WorkerMessageResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkerMessageResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WorkerMessageResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WorkerMessageResponse
   * @throws IOException if the JSON string is invalid with respect to WorkerMessageResponse
   */
  public static WorkerMessageResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkerMessageResponse.class);
  }

  /**
   * Convert an instance of WorkerMessageResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

