/**
 * Abusive Experience Report API
 * Views Abusive Experience Report data, and gets a list of sites that have a significant number of abusive experiences.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SiteSummaryResponse model module.
 * @module model/SiteSummaryResponse
 * @version v1
 */
class SiteSummaryResponse {
    /**
     * Constructs a new <code>SiteSummaryResponse</code>.
     * Response message for GetSiteSummary.
     * @alias module:model/SiteSummaryResponse
     */
    constructor() { 
        
        SiteSummaryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SiteSummaryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SiteSummaryResponse} obj Optional instance to populate.
     * @return {module:model/SiteSummaryResponse} The populated <code>SiteSummaryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SiteSummaryResponse();

            if (data.hasOwnProperty('abusiveStatus')) {
                obj['abusiveStatus'] = ApiClient.convertToType(data['abusiveStatus'], 'String');
            }
            if (data.hasOwnProperty('enforcementTime')) {
                obj['enforcementTime'] = ApiClient.convertToType(data['enforcementTime'], 'String');
            }
            if (data.hasOwnProperty('filterStatus')) {
                obj['filterStatus'] = ApiClient.convertToType(data['filterStatus'], 'String');
            }
            if (data.hasOwnProperty('lastChangeTime')) {
                obj['lastChangeTime'] = ApiClient.convertToType(data['lastChangeTime'], 'String');
            }
            if (data.hasOwnProperty('reportUrl')) {
                obj['reportUrl'] = ApiClient.convertToType(data['reportUrl'], 'String');
            }
            if (data.hasOwnProperty('reviewedSite')) {
                obj['reviewedSite'] = ApiClient.convertToType(data['reviewedSite'], 'String');
            }
            if (data.hasOwnProperty('underReview')) {
                obj['underReview'] = ApiClient.convertToType(data['underReview'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SiteSummaryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SiteSummaryResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['abusiveStatus'] && !(typeof data['abusiveStatus'] === 'string' || data['abusiveStatus'] instanceof String)) {
            throw new Error("Expected the field `abusiveStatus` to be a primitive type in the JSON string but got " + data['abusiveStatus']);
        }
        // ensure the json data is a string
        if (data['enforcementTime'] && !(typeof data['enforcementTime'] === 'string' || data['enforcementTime'] instanceof String)) {
            throw new Error("Expected the field `enforcementTime` to be a primitive type in the JSON string but got " + data['enforcementTime']);
        }
        // ensure the json data is a string
        if (data['filterStatus'] && !(typeof data['filterStatus'] === 'string' || data['filterStatus'] instanceof String)) {
            throw new Error("Expected the field `filterStatus` to be a primitive type in the JSON string but got " + data['filterStatus']);
        }
        // ensure the json data is a string
        if (data['lastChangeTime'] && !(typeof data['lastChangeTime'] === 'string' || data['lastChangeTime'] instanceof String)) {
            throw new Error("Expected the field `lastChangeTime` to be a primitive type in the JSON string but got " + data['lastChangeTime']);
        }
        // ensure the json data is a string
        if (data['reportUrl'] && !(typeof data['reportUrl'] === 'string' || data['reportUrl'] instanceof String)) {
            throw new Error("Expected the field `reportUrl` to be a primitive type in the JSON string but got " + data['reportUrl']);
        }
        // ensure the json data is a string
        if (data['reviewedSite'] && !(typeof data['reviewedSite'] === 'string' || data['reviewedSite'] instanceof String)) {
            throw new Error("Expected the field `reviewedSite` to be a primitive type in the JSON string but got " + data['reviewedSite']);
        }

        return true;
    }


}



/**
 * The site's Abusive Experience Report status.
 * @member {module:model/SiteSummaryResponse.AbusiveStatusEnum} abusiveStatus
 */
SiteSummaryResponse.prototype['abusiveStatus'] = undefined;

/**
 * The time at which [enforcement](https://support.google.com/webtools/answer/7538608) against the site began or will begin. Not set when the filter_status is OFF.
 * @member {String} enforcementTime
 */
SiteSummaryResponse.prototype['enforcementTime'] = undefined;

/**
 * The site's [enforcement status](https://support.google.com/webtools/answer/7538608).
 * @member {module:model/SiteSummaryResponse.FilterStatusEnum} filterStatus
 */
SiteSummaryResponse.prototype['filterStatus'] = undefined;

/**
 * The time at which the site's status last changed.
 * @member {String} lastChangeTime
 */
SiteSummaryResponse.prototype['lastChangeTime'] = undefined;

/**
 * A link to the full Abusive Experience Report for the site. Not set in ViolatingSitesResponse. Note that you must complete the [Search Console verification process](https://support.google.com/webmasters/answer/9008080) for the site before you can access the full report.
 * @member {String} reportUrl
 */
SiteSummaryResponse.prototype['reportUrl'] = undefined;

/**
 * The name of the reviewed site, e.g. `google.com`.
 * @member {String} reviewedSite
 */
SiteSummaryResponse.prototype['reviewedSite'] = undefined;

/**
 * Whether the site is currently under review.
 * @member {Boolean} underReview
 */
SiteSummaryResponse.prototype['underReview'] = undefined;





/**
 * Allowed values for the <code>abusiveStatus</code> property.
 * @enum {String}
 * @readonly
 */
SiteSummaryResponse['AbusiveStatusEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "PASSING"
     * @const
     */
    "PASSING": "PASSING",

    /**
     * value: "FAILING"
     * @const
     */
    "FAILING": "FAILING"
};


/**
 * Allowed values for the <code>filterStatus</code> property.
 * @enum {String}
 * @readonly
 */
SiteSummaryResponse['FilterStatusEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false",

    /**
     * value: "PAUSED"
     * @const
     */
    "PAUSED": "PAUSED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING"
};



export default SiteSummaryResponse;

