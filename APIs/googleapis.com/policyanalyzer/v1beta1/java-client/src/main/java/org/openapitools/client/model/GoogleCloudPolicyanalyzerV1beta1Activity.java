/*
 * Policy Analyzer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudPolicyanalyzerV1beta1ObservationPeriod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudPolicyanalyzerV1beta1Activity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:24.533642-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudPolicyanalyzerV1beta1Activity {
  public static final String SERIALIZED_NAME_ACTIVITY = "activity";
  @SerializedName(SERIALIZED_NAME_ACTIVITY)
  private Map<String, Object> activity = new HashMap<>();

  public static final String SERIALIZED_NAME_ACTIVITY_TYPE = "activityType";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TYPE)
  private String activityType;

  public static final String SERIALIZED_NAME_FULL_RESOURCE_NAME = "fullResourceName";
  @SerializedName(SERIALIZED_NAME_FULL_RESOURCE_NAME)
  private String fullResourceName;

  public static final String SERIALIZED_NAME_OBSERVATION_PERIOD = "observationPeriod";
  @SerializedName(SERIALIZED_NAME_OBSERVATION_PERIOD)
  private GoogleCloudPolicyanalyzerV1beta1ObservationPeriod observationPeriod;

  public GoogleCloudPolicyanalyzerV1beta1Activity() {
  }

  public GoogleCloudPolicyanalyzerV1beta1Activity activity(Map<String, Object> activity) {
    this.activity = activity;
    return this;
  }

  public GoogleCloudPolicyanalyzerV1beta1Activity putActivityItem(String key, Object activityItem) {
    if (this.activity == null) {
      this.activity = new HashMap<>();
    }
    this.activity.put(key, activityItem);
    return this;
  }

  /**
   * A struct of custom fields to explain the activity.
   * @return activity
   */
  @javax.annotation.Nullable
  public Map<String, Object> getActivity() {
    return activity;
  }

  public void setActivity(Map<String, Object> activity) {
    this.activity = activity;
  }


  public GoogleCloudPolicyanalyzerV1beta1Activity activityType(String activityType) {
    this.activityType = activityType;
    return this;
  }

  /**
   * The type of the activity.
   * @return activityType
   */
  @javax.annotation.Nullable
  public String getActivityType() {
    return activityType;
  }

  public void setActivityType(String activityType) {
    this.activityType = activityType;
  }


  public GoogleCloudPolicyanalyzerV1beta1Activity fullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
    return this;
  }

  /**
   * The full resource name that identifies the resource. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
   * @return fullResourceName
   */
  @javax.annotation.Nullable
  public String getFullResourceName() {
    return fullResourceName;
  }

  public void setFullResourceName(String fullResourceName) {
    this.fullResourceName = fullResourceName;
  }


  public GoogleCloudPolicyanalyzerV1beta1Activity observationPeriod(GoogleCloudPolicyanalyzerV1beta1ObservationPeriod observationPeriod) {
    this.observationPeriod = observationPeriod;
    return this;
  }

  /**
   * Get observationPeriod
   * @return observationPeriod
   */
  @javax.annotation.Nullable
  public GoogleCloudPolicyanalyzerV1beta1ObservationPeriod getObservationPeriod() {
    return observationPeriod;
  }

  public void setObservationPeriod(GoogleCloudPolicyanalyzerV1beta1ObservationPeriod observationPeriod) {
    this.observationPeriod = observationPeriod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudPolicyanalyzerV1beta1Activity googleCloudPolicyanalyzerV1beta1Activity = (GoogleCloudPolicyanalyzerV1beta1Activity) o;
    return Objects.equals(this.activity, googleCloudPolicyanalyzerV1beta1Activity.activity) &&
        Objects.equals(this.activityType, googleCloudPolicyanalyzerV1beta1Activity.activityType) &&
        Objects.equals(this.fullResourceName, googleCloudPolicyanalyzerV1beta1Activity.fullResourceName) &&
        Objects.equals(this.observationPeriod, googleCloudPolicyanalyzerV1beta1Activity.observationPeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activity, activityType, fullResourceName, observationPeriod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudPolicyanalyzerV1beta1Activity {\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    activityType: ").append(toIndentedString(activityType)).append("\n");
    sb.append("    fullResourceName: ").append(toIndentedString(fullResourceName)).append("\n");
    sb.append("    observationPeriod: ").append(toIndentedString(observationPeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activity");
    openapiFields.add("activityType");
    openapiFields.add("fullResourceName");
    openapiFields.add("observationPeriod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudPolicyanalyzerV1beta1Activity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudPolicyanalyzerV1beta1Activity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudPolicyanalyzerV1beta1Activity is not found in the empty JSON string", GoogleCloudPolicyanalyzerV1beta1Activity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudPolicyanalyzerV1beta1Activity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudPolicyanalyzerV1beta1Activity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("activityType") != null && !jsonObj.get("activityType").isJsonNull()) && !jsonObj.get("activityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activityType").toString()));
      }
      if ((jsonObj.get("fullResourceName") != null && !jsonObj.get("fullResourceName").isJsonNull()) && !jsonObj.get("fullResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullResourceName").toString()));
      }
      // validate the optional field `observationPeriod`
      if (jsonObj.get("observationPeriod") != null && !jsonObj.get("observationPeriod").isJsonNull()) {
        GoogleCloudPolicyanalyzerV1beta1ObservationPeriod.validateJsonElement(jsonObj.get("observationPeriod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudPolicyanalyzerV1beta1Activity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudPolicyanalyzerV1beta1Activity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudPolicyanalyzerV1beta1Activity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudPolicyanalyzerV1beta1Activity.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudPolicyanalyzerV1beta1Activity>() {
           @Override
           public void write(JsonWriter out, GoogleCloudPolicyanalyzerV1beta1Activity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudPolicyanalyzerV1beta1Activity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudPolicyanalyzerV1beta1Activity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudPolicyanalyzerV1beta1Activity
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudPolicyanalyzerV1beta1Activity
   */
  public static GoogleCloudPolicyanalyzerV1beta1Activity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudPolicyanalyzerV1beta1Activity.class);
  }

  /**
   * Convert an instance of GoogleCloudPolicyanalyzerV1beta1Activity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

