/**
 * Policy Analyzer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudPolicyanalyzerV1Activity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudPolicyanalyzerV1Activity::OAIGoogleCloudPolicyanalyzerV1Activity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudPolicyanalyzerV1Activity::OAIGoogleCloudPolicyanalyzerV1Activity() {
    this->initializeModel();
}

OAIGoogleCloudPolicyanalyzerV1Activity::~OAIGoogleCloudPolicyanalyzerV1Activity() {}

void OAIGoogleCloudPolicyanalyzerV1Activity::initializeModel() {

    m_activity_isSet = false;
    m_activity_isValid = false;

    m_activity_type_isSet = false;
    m_activity_type_isValid = false;

    m_full_resource_name_isSet = false;
    m_full_resource_name_isValid = false;

    m_observation_period_isSet = false;
    m_observation_period_isValid = false;
}

void OAIGoogleCloudPolicyanalyzerV1Activity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudPolicyanalyzerV1Activity::fromJsonObject(QJsonObject json) {

    m_activity_isValid = ::OpenAPI::fromJsonValue(m_activity, json[QString("activity")]);
    m_activity_isSet = !json[QString("activity")].isNull() && m_activity_isValid;

    m_activity_type_isValid = ::OpenAPI::fromJsonValue(m_activity_type, json[QString("activityType")]);
    m_activity_type_isSet = !json[QString("activityType")].isNull() && m_activity_type_isValid;

    m_full_resource_name_isValid = ::OpenAPI::fromJsonValue(m_full_resource_name, json[QString("fullResourceName")]);
    m_full_resource_name_isSet = !json[QString("fullResourceName")].isNull() && m_full_resource_name_isValid;

    m_observation_period_isValid = ::OpenAPI::fromJsonValue(m_observation_period, json[QString("observationPeriod")]);
    m_observation_period_isSet = !json[QString("observationPeriod")].isNull() && m_observation_period_isValid;
}

QString OAIGoogleCloudPolicyanalyzerV1Activity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudPolicyanalyzerV1Activity::asJsonObject() const {
    QJsonObject obj;
    if (m_activity.size() > 0) {
        obj.insert(QString("activity"), ::OpenAPI::toJsonValue(m_activity));
    }
    if (m_activity_type_isSet) {
        obj.insert(QString("activityType"), ::OpenAPI::toJsonValue(m_activity_type));
    }
    if (m_full_resource_name_isSet) {
        obj.insert(QString("fullResourceName"), ::OpenAPI::toJsonValue(m_full_resource_name));
    }
    if (m_observation_period.isSet()) {
        obj.insert(QString("observationPeriod"), ::OpenAPI::toJsonValue(m_observation_period));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIGoogleCloudPolicyanalyzerV1Activity::getActivity() const {
    return m_activity;
}
void OAIGoogleCloudPolicyanalyzerV1Activity::setActivity(const QMap<QString, QJsonValue> &activity) {
    m_activity = activity;
    m_activity_isSet = true;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_activity_Set() const{
    return m_activity_isSet;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_activity_Valid() const{
    return m_activity_isValid;
}

QString OAIGoogleCloudPolicyanalyzerV1Activity::getActivityType() const {
    return m_activity_type;
}
void OAIGoogleCloudPolicyanalyzerV1Activity::setActivityType(const QString &activity_type) {
    m_activity_type = activity_type;
    m_activity_type_isSet = true;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_activity_type_Set() const{
    return m_activity_type_isSet;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_activity_type_Valid() const{
    return m_activity_type_isValid;
}

QString OAIGoogleCloudPolicyanalyzerV1Activity::getFullResourceName() const {
    return m_full_resource_name;
}
void OAIGoogleCloudPolicyanalyzerV1Activity::setFullResourceName(const QString &full_resource_name) {
    m_full_resource_name = full_resource_name;
    m_full_resource_name_isSet = true;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_full_resource_name_Set() const{
    return m_full_resource_name_isSet;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_full_resource_name_Valid() const{
    return m_full_resource_name_isValid;
}

OAIGoogleCloudPolicyanalyzerV1ObservationPeriod OAIGoogleCloudPolicyanalyzerV1Activity::getObservationPeriod() const {
    return m_observation_period;
}
void OAIGoogleCloudPolicyanalyzerV1Activity::setObservationPeriod(const OAIGoogleCloudPolicyanalyzerV1ObservationPeriod &observation_period) {
    m_observation_period = observation_period;
    m_observation_period_isSet = true;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_observation_period_Set() const{
    return m_observation_period_isSet;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::is_observation_period_Valid() const{
    return m_observation_period_isValid;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_activity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_observation_period.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudPolicyanalyzerV1Activity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
