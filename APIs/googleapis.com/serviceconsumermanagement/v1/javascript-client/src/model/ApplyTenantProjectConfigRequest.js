/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TenantProjectConfig from './TenantProjectConfig';

/**
 * The ApplyTenantProjectConfigRequest model module.
 * @module model/ApplyTenantProjectConfigRequest
 * @version v1
 */
class ApplyTenantProjectConfigRequest {
    /**
     * Constructs a new <code>ApplyTenantProjectConfigRequest</code>.
     * Request to apply configuration to an existing tenant project.
     * @alias module:model/ApplyTenantProjectConfigRequest
     */
    constructor() { 
        
        ApplyTenantProjectConfigRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApplyTenantProjectConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApplyTenantProjectConfigRequest} obj Optional instance to populate.
     * @return {module:model/ApplyTenantProjectConfigRequest} The populated <code>ApplyTenantProjectConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplyTenantProjectConfigRequest();

            if (data.hasOwnProperty('projectConfig')) {
                obj['projectConfig'] = TenantProjectConfig.constructFromObject(data['projectConfig']);
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplyTenantProjectConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplyTenantProjectConfigRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `projectConfig`
        if (data['projectConfig']) { // data not null
          TenantProjectConfig.validateJSON(data['projectConfig']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }

        return true;
    }


}



/**
 * @member {module:model/TenantProjectConfig} projectConfig
 */
ApplyTenantProjectConfigRequest.prototype['projectConfig'] = undefined;

/**
 * Required. Tag of the project. Must be less than 128 characters. Required.
 * @member {String} tag
 */
ApplyTenantProjectConfigRequest.prototype['tag'] = undefined;






export default ApplyTenantProjectConfigRequest;

