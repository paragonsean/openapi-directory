/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1Beta1ProducerQuotaPolicy model module.
 * @module model/V1Beta1ProducerQuotaPolicy
 * @version v1
 */
class V1Beta1ProducerQuotaPolicy {
    /**
     * Constructs a new <code>V1Beta1ProducerQuotaPolicy</code>.
     * Quota policy created by service producer.
     * @alias module:model/V1Beta1ProducerQuotaPolicy
     */
    constructor() { 
        
        V1Beta1ProducerQuotaPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1Beta1ProducerQuotaPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1Beta1ProducerQuotaPolicy} obj Optional instance to populate.
     * @return {module:model/V1Beta1ProducerQuotaPolicy} The populated <code>V1Beta1ProducerQuotaPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1Beta1ProducerQuotaPolicy();

            if (data.hasOwnProperty('container')) {
                obj['container'] = ApiClient.convertToType(data['container'], 'String');
            }
            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = ApiClient.convertToType(data['dimensions'], {'String': 'String'});
            }
            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('policyValue')) {
                obj['policyValue'] = ApiClient.convertToType(data['policyValue'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1Beta1ProducerQuotaPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1Beta1ProducerQuotaPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['container'] && !(typeof data['container'] === 'string' || data['container'] instanceof String)) {
            throw new Error("Expected the field `container` to be a primitive type in the JSON string but got " + data['container']);
        }
        // ensure the json data is a string
        if (data['metric'] && !(typeof data['metric'] === 'string' || data['metric'] instanceof String)) {
            throw new Error("Expected the field `metric` to be a primitive type in the JSON string but got " + data['metric']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['policyValue'] && !(typeof data['policyValue'] === 'string' || data['policyValue'] instanceof String)) {
            throw new Error("Expected the field `policyValue` to be a primitive type in the JSON string but got " + data['policyValue']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }

        return true;
    }


}



/**
 * The cloud resource container at which the quota policy is created. The format is {container_type}/{container_number}
 * @member {String} container
 */
V1Beta1ProducerQuotaPolicy.prototype['container'] = undefined;

/**
 *  If this map is nonempty, then this policy applies only to specific values for dimensions defined in the limit unit. For example, a policy on a limit with the unit 1/{project}/{region} could contain an entry with the key \"region\" and the value \"us-east-1\"; the policy is only applied to quota consumed in that region. This map has the following restrictions: * Keys that are not defined in the limit's unit are not valid keys. Any string appearing in {brackets} in the unit (besides {project} or {user}) is a defined key. * \"project\" is not a valid key; the project is already specified in the parent resource name. * \"user\" is not a valid key; the API does not support quota polcies that apply only to a specific user. * If \"region\" appears as a key, its value must be a valid Cloud region. * If \"zone\" appears as a key, its value must be a valid Cloud zone. * If any valid key other than \"region\" or \"zone\" appears in the map, then all valid keys other than \"region\" or \"zone\" must also appear in the map.
 * @member {Object.<String, String>} dimensions
 */
V1Beta1ProducerQuotaPolicy.prototype['dimensions'] = undefined;

/**
 * The name of the metric to which this policy applies. An example name would be: `compute.googleapis.com/cpus`
 * @member {String} metric
 */
V1Beta1ProducerQuotaPolicy.prototype['metric'] = undefined;

/**
 * The resource name of the producer policy. An example name would be: `services/compute.googleapis.com/organizations/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/producerQuotaPolicies/4a3f2c1d`
 * @member {String} name
 */
V1Beta1ProducerQuotaPolicy.prototype['name'] = undefined;

/**
 * The quota policy value. Can be any nonnegative integer, or -1 (unlimited quota).
 * @member {String} policyValue
 */
V1Beta1ProducerQuotaPolicy.prototype['policyValue'] = undefined;

/**
 * The limit unit of the limit to which this policy applies. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example; the literal characters `{` and `}` occur in the string.
 * @member {String} unit
 */
V1Beta1ProducerQuotaPolicy.prototype['unit'] = undefined;






export default V1Beta1ProducerQuotaPolicy;

