/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceAccountConfig model module.
 * @module model/ServiceAccountConfig
 * @version v1
 */
class ServiceAccountConfig {
    /**
     * Constructs a new <code>ServiceAccountConfig</code>.
     * Describes the service account configuration for the tenant project.
     * @alias module:model/ServiceAccountConfig
     */
    constructor() { 
        
        ServiceAccountConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceAccountConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceAccountConfig} obj Optional instance to populate.
     * @return {module:model/ServiceAccountConfig} The populated <code>ServiceAccountConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceAccountConfig();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('tenantProjectRoles')) {
                obj['tenantProjectRoles'] = ApiClient.convertToType(data['tenantProjectRoles'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceAccountConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceAccountConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tenantProjectRoles'])) {
            throw new Error("Expected the field `tenantProjectRoles` to be an array in the JSON data but got " + data['tenantProjectRoles']);
        }

        return true;
    }


}



/**
 * ID of the IAM service account to be created in tenant project. The email format of the service account is \"@.iam.gserviceaccount.com\". This account ID must be unique within tenant project and service producers have to guarantee it. The ID must be 6-30 characters long, and match the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])`.
 * @member {String} accountId
 */
ServiceAccountConfig.prototype['accountId'] = undefined;

/**
 * Roles for the associated service account for the tenant project.
 * @member {Array.<String>} tenantProjectRoles
 */
ServiceAccountConfig.prototype['tenantProjectRoles'] = undefined;






export default ServiceAccountConfig;

