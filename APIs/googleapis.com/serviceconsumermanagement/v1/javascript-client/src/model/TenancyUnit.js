/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TenantResource from './TenantResource';

/**
 * The TenancyUnit model module.
 * @module model/TenancyUnit
 * @version v1
 */
class TenancyUnit {
    /**
     * Constructs a new <code>TenancyUnit</code>.
     * Representation of a tenancy unit.
     * @alias module:model/TenancyUnit
     */
    constructor() { 
        
        TenancyUnit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TenancyUnit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TenancyUnit} obj Optional instance to populate.
     * @return {module:model/TenancyUnit} The populated <code>TenancyUnit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TenancyUnit();

            if (data.hasOwnProperty('consumer')) {
                obj['consumer'] = ApiClient.convertToType(data['consumer'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('tenantResources')) {
                obj['tenantResources'] = ApiClient.convertToType(data['tenantResources'], [TenantResource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TenancyUnit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TenancyUnit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['consumer'] && !(typeof data['consumer'] === 'string' || data['consumer'] instanceof String)) {
            throw new Error("Expected the field `consumer` to be a primitive type in the JSON string but got " + data['consumer']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }
        if (data['tenantResources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tenantResources'])) {
                throw new Error("Expected the field `tenantResources` to be an array in the JSON data but got " + data['tenantResources']);
            }
            // validate the optional field `tenantResources` (array)
            for (const item of data['tenantResources']) {
                TenantResource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. @OutputOnly Cloud resource name of the consumer of this service. For example 'projects/123456'.
 * @member {String} consumer
 */
TenancyUnit.prototype['consumer'] = undefined;

/**
 * Output only. @OutputOnly The time this tenancy unit was created.
 * @member {String} createTime
 */
TenancyUnit.prototype['createTime'] = undefined;

/**
 * Globally unique identifier of this tenancy unit \"services/{service}/{collection id}/{resource id}/tenancyUnits/{unit}\"
 * @member {String} name
 */
TenancyUnit.prototype['name'] = undefined;

/**
 * Output only. Google Cloud API name of the managed service owning this tenancy unit. For example 'serviceconsumermanagement.googleapis.com'.
 * @member {String} service
 */
TenancyUnit.prototype['service'] = undefined;

/**
 * Resources constituting the tenancy unit. There can be at most 512 tenant resources in a tenancy unit.
 * @member {Array.<module:model/TenantResource>} tenantResources
 */
TenancyUnit.prototype['tenantResources'] = undefined;






export default TenancyUnit;

