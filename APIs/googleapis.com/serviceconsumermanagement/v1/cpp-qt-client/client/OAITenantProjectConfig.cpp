/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITenantProjectConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITenantProjectConfig::OAITenantProjectConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITenantProjectConfig::OAITenantProjectConfig() {
    this->initializeModel();
}

OAITenantProjectConfig::~OAITenantProjectConfig() {}

void OAITenantProjectConfig::initializeModel() {

    m_billing_config_isSet = false;
    m_billing_config_isValid = false;

    m_folder_isSet = false;
    m_folder_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_service_account_config_isSet = false;
    m_service_account_config_isValid = false;

    m_services_isSet = false;
    m_services_isValid = false;

    m_tenant_project_policy_isSet = false;
    m_tenant_project_policy_isValid = false;
}

void OAITenantProjectConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITenantProjectConfig::fromJsonObject(QJsonObject json) {

    m_billing_config_isValid = ::OpenAPI::fromJsonValue(m_billing_config, json[QString("billingConfig")]);
    m_billing_config_isSet = !json[QString("billingConfig")].isNull() && m_billing_config_isValid;

    m_folder_isValid = ::OpenAPI::fromJsonValue(m_folder, json[QString("folder")]);
    m_folder_isSet = !json[QString("folder")].isNull() && m_folder_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_service_account_config_isValid = ::OpenAPI::fromJsonValue(m_service_account_config, json[QString("serviceAccountConfig")]);
    m_service_account_config_isSet = !json[QString("serviceAccountConfig")].isNull() && m_service_account_config_isValid;

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("services")]);
    m_services_isSet = !json[QString("services")].isNull() && m_services_isValid;

    m_tenant_project_policy_isValid = ::OpenAPI::fromJsonValue(m_tenant_project_policy, json[QString("tenantProjectPolicy")]);
    m_tenant_project_policy_isSet = !json[QString("tenantProjectPolicy")].isNull() && m_tenant_project_policy_isValid;
}

QString OAITenantProjectConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITenantProjectConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_config.isSet()) {
        obj.insert(QString("billingConfig"), ::OpenAPI::toJsonValue(m_billing_config));
    }
    if (m_folder_isSet) {
        obj.insert(QString("folder"), ::OpenAPI::toJsonValue(m_folder));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_service_account_config.isSet()) {
        obj.insert(QString("serviceAccountConfig"), ::OpenAPI::toJsonValue(m_service_account_config));
    }
    if (m_services.size() > 0) {
        obj.insert(QString("services"), ::OpenAPI::toJsonValue(m_services));
    }
    if (m_tenant_project_policy.isSet()) {
        obj.insert(QString("tenantProjectPolicy"), ::OpenAPI::toJsonValue(m_tenant_project_policy));
    }
    return obj;
}

OAIBillingConfig OAITenantProjectConfig::getBillingConfig() const {
    return m_billing_config;
}
void OAITenantProjectConfig::setBillingConfig(const OAIBillingConfig &billing_config) {
    m_billing_config = billing_config;
    m_billing_config_isSet = true;
}

bool OAITenantProjectConfig::is_billing_config_Set() const{
    return m_billing_config_isSet;
}

bool OAITenantProjectConfig::is_billing_config_Valid() const{
    return m_billing_config_isValid;
}

QString OAITenantProjectConfig::getFolder() const {
    return m_folder;
}
void OAITenantProjectConfig::setFolder(const QString &folder) {
    m_folder = folder;
    m_folder_isSet = true;
}

bool OAITenantProjectConfig::is_folder_Set() const{
    return m_folder_isSet;
}

bool OAITenantProjectConfig::is_folder_Valid() const{
    return m_folder_isValid;
}

QMap<QString, QString> OAITenantProjectConfig::getLabels() const {
    return m_labels;
}
void OAITenantProjectConfig::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAITenantProjectConfig::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAITenantProjectConfig::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIServiceAccountConfig OAITenantProjectConfig::getServiceAccountConfig() const {
    return m_service_account_config;
}
void OAITenantProjectConfig::setServiceAccountConfig(const OAIServiceAccountConfig &service_account_config) {
    m_service_account_config = service_account_config;
    m_service_account_config_isSet = true;
}

bool OAITenantProjectConfig::is_service_account_config_Set() const{
    return m_service_account_config_isSet;
}

bool OAITenantProjectConfig::is_service_account_config_Valid() const{
    return m_service_account_config_isValid;
}

QList<QString> OAITenantProjectConfig::getServices() const {
    return m_services;
}
void OAITenantProjectConfig::setServices(const QList<QString> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAITenantProjectConfig::is_services_Set() const{
    return m_services_isSet;
}

bool OAITenantProjectConfig::is_services_Valid() const{
    return m_services_isValid;
}

OAITenantProjectPolicy OAITenantProjectConfig::getTenantProjectPolicy() const {
    return m_tenant_project_policy;
}
void OAITenantProjectConfig::setTenantProjectPolicy(const OAITenantProjectPolicy &tenant_project_policy) {
    m_tenant_project_policy = tenant_project_policy;
    m_tenant_project_policy_isSet = true;
}

bool OAITenantProjectConfig::is_tenant_project_policy_Set() const{
    return m_tenant_project_policy_isSet;
}

bool OAITenantProjectConfig::is_tenant_project_policy_Valid() const{
    return m_tenant_project_policy_isValid;
}

bool OAITenantProjectConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_project_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITenantProjectConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
