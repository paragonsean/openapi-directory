/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplyTenantProjectConfigRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplyTenantProjectConfigRequest::OAIApplyTenantProjectConfigRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplyTenantProjectConfigRequest::OAIApplyTenantProjectConfigRequest() {
    this->initializeModel();
}

OAIApplyTenantProjectConfigRequest::~OAIApplyTenantProjectConfigRequest() {}

void OAIApplyTenantProjectConfigRequest::initializeModel() {

    m_project_config_isSet = false;
    m_project_config_isValid = false;

    m_tag_isSet = false;
    m_tag_isValid = false;
}

void OAIApplyTenantProjectConfigRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplyTenantProjectConfigRequest::fromJsonObject(QJsonObject json) {

    m_project_config_isValid = ::OpenAPI::fromJsonValue(m_project_config, json[QString("projectConfig")]);
    m_project_config_isSet = !json[QString("projectConfig")].isNull() && m_project_config_isValid;

    m_tag_isValid = ::OpenAPI::fromJsonValue(m_tag, json[QString("tag")]);
    m_tag_isSet = !json[QString("tag")].isNull() && m_tag_isValid;
}

QString OAIApplyTenantProjectConfigRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplyTenantProjectConfigRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_project_config.isSet()) {
        obj.insert(QString("projectConfig"), ::OpenAPI::toJsonValue(m_project_config));
    }
    if (m_tag_isSet) {
        obj.insert(QString("tag"), ::OpenAPI::toJsonValue(m_tag));
    }
    return obj;
}

OAITenantProjectConfig OAIApplyTenantProjectConfigRequest::getProjectConfig() const {
    return m_project_config;
}
void OAIApplyTenantProjectConfigRequest::setProjectConfig(const OAITenantProjectConfig &project_config) {
    m_project_config = project_config;
    m_project_config_isSet = true;
}

bool OAIApplyTenantProjectConfigRequest::is_project_config_Set() const{
    return m_project_config_isSet;
}

bool OAIApplyTenantProjectConfigRequest::is_project_config_Valid() const{
    return m_project_config_isValid;
}

QString OAIApplyTenantProjectConfigRequest::getTag() const {
    return m_tag;
}
void OAIApplyTenantProjectConfigRequest::setTag(const QString &tag) {
    m_tag = tag;
    m_tag_isSet = true;
}

bool OAIApplyTenantProjectConfigRequest::is_tag_Set() const{
    return m_tag_isSet;
}

bool OAIApplyTenantProjectConfigRequest::is_tag_Valid() const{
    return m_tag_isValid;
}

bool OAIApplyTenantProjectConfigRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplyTenantProjectConfigRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
