/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicyBinding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicyBinding::OAIPolicyBinding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicyBinding::OAIPolicyBinding() {
    this->initializeModel();
}

OAIPolicyBinding::~OAIPolicyBinding() {}

void OAIPolicyBinding::initializeModel() {

    m_members_isSet = false;
    m_members_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;
}

void OAIPolicyBinding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicyBinding::fromJsonObject(QJsonObject json) {

    m_members_isValid = ::OpenAPI::fromJsonValue(m_members, json[QString("members")]);
    m_members_isSet = !json[QString("members")].isNull() && m_members_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;
}

QString OAIPolicyBinding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicyBinding::asJsonObject() const {
    QJsonObject obj;
    if (m_members.size() > 0) {
        obj.insert(QString("members"), ::OpenAPI::toJsonValue(m_members));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    return obj;
}

QList<QString> OAIPolicyBinding::getMembers() const {
    return m_members;
}
void OAIPolicyBinding::setMembers(const QList<QString> &members) {
    m_members = members;
    m_members_isSet = true;
}

bool OAIPolicyBinding::is_members_Set() const{
    return m_members_isSet;
}

bool OAIPolicyBinding::is_members_Valid() const{
    return m_members_isValid;
}

QString OAIPolicyBinding::getRole() const {
    return m_role;
}
void OAIPolicyBinding::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIPolicyBinding::is_role_Set() const{
    return m_role_isSet;
}

bool OAIPolicyBinding::is_role_Valid() const{
    return m_role_isValid;
}

bool OAIPolicyBinding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_members.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicyBinding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
