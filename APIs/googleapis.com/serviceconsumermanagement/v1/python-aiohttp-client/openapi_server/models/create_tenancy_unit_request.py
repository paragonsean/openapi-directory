# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateTenancyUnitRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tenancy_unit_id: str=None):
        """CreateTenancyUnitRequest - a model defined in OpenAPI

        :param tenancy_unit_id: The tenancy_unit_id of this CreateTenancyUnitRequest.
        """
        self.openapi_types = {
            'tenancy_unit_id': str
        }

        self.attribute_map = {
            'tenancy_unit_id': 'tenancyUnitId'
        }

        self._tenancy_unit_id = tenancy_unit_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTenancyUnitRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTenancyUnitRequest of this CreateTenancyUnitRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tenancy_unit_id(self):
        """Gets the tenancy_unit_id of this CreateTenancyUnitRequest.

        Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails.

        :return: The tenancy_unit_id of this CreateTenancyUnitRequest.
        :rtype: str
        """
        return self._tenancy_unit_id

    @tenancy_unit_id.setter
    def tenancy_unit_id(self, tenancy_unit_id):
        """Sets the tenancy_unit_id of this CreateTenancyUnitRequest.

        Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails.

        :param tenancy_unit_id: The tenancy_unit_id of this CreateTenancyUnitRequest.
        :type tenancy_unit_id: str
        """

        self._tenancy_unit_id = tenancy_unit_id
