# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v1_default_identity import V1DefaultIdentity
from openapi_server import util


class V1GenerateDefaultIdentityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attach_status: str=None, identity: V1DefaultIdentity=None, role: str=None):
        """V1GenerateDefaultIdentityResponse - a model defined in OpenAPI

        :param attach_status: The attach_status of this V1GenerateDefaultIdentityResponse.
        :param identity: The identity of this V1GenerateDefaultIdentityResponse.
        :param role: The role of this V1GenerateDefaultIdentityResponse.
        """
        self.openapi_types = {
            'attach_status': str,
            'identity': V1DefaultIdentity,
            'role': str
        }

        self.attribute_map = {
            'attach_status': 'attachStatus',
            'identity': 'identity',
            'role': 'role'
        }

        self._attach_status = attach_status
        self._identity = identity
        self._role = role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1GenerateDefaultIdentityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1GenerateDefaultIdentityResponse of this V1GenerateDefaultIdentityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attach_status(self):
        """Gets the attach_status of this V1GenerateDefaultIdentityResponse.

        Status of the role attachment. Under development (go/si-attach-role), currently always return ATTACH_STATUS_UNSPECIFIED)

        :return: The attach_status of this V1GenerateDefaultIdentityResponse.
        :rtype: str
        """
        return self._attach_status

    @attach_status.setter
    def attach_status(self, attach_status):
        """Sets the attach_status of this V1GenerateDefaultIdentityResponse.

        Status of the role attachment. Under development (go/si-attach-role), currently always return ATTACH_STATUS_UNSPECIFIED)

        :param attach_status: The attach_status of this V1GenerateDefaultIdentityResponse.
        :type attach_status: str
        """
        allowed_values = ["ATTACH_STATUS_UNSPECIFIED", "ATTACHED", "ATTACH_SKIPPED", "PREVIOUSLY_ATTACHED", "ATTACH_DENIED_BY_ORG_POLICY"]  # noqa: E501
        if attach_status not in allowed_values:
            raise ValueError(
                "Invalid value for `attach_status` ({0}), must be one of {1}"
                .format(attach_status, allowed_values)
            )

        self._attach_status = attach_status

    @property
    def identity(self):
        """Gets the identity of this V1GenerateDefaultIdentityResponse.


        :return: The identity of this V1GenerateDefaultIdentityResponse.
        :rtype: V1DefaultIdentity
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this V1GenerateDefaultIdentityResponse.


        :param identity: The identity of this V1GenerateDefaultIdentityResponse.
        :type identity: V1DefaultIdentity
        """

        self._identity = identity

    @property
    def role(self):
        """Gets the role of this V1GenerateDefaultIdentityResponse.

        Role attached to consumer project. Empty if not attached in this request. (Under development, currently always return empty.)

        :return: The role of this V1GenerateDefaultIdentityResponse.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this V1GenerateDefaultIdentityResponse.

        Role attached to consumer project. Empty if not attached in this request. (Under development, currently always return empty.)

        :param role: The role of this V1GenerateDefaultIdentityResponse.
        :type role: str
        """

        self._role = role
