# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.v1_beta1_service_identity import V1Beta1ServiceIdentity
from openapi_server import util


class V1Beta1GenerateServiceIdentityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity: V1Beta1ServiceIdentity=None):
        """V1Beta1GenerateServiceIdentityResponse - a model defined in OpenAPI

        :param identity: The identity of this V1Beta1GenerateServiceIdentityResponse.
        """
        self.openapi_types = {
            'identity': V1Beta1ServiceIdentity
        }

        self.attribute_map = {
            'identity': 'identity'
        }

        self._identity = identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1Beta1GenerateServiceIdentityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1Beta1GenerateServiceIdentityResponse of this V1Beta1GenerateServiceIdentityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity(self):
        """Gets the identity of this V1Beta1GenerateServiceIdentityResponse.


        :return: The identity of this V1Beta1GenerateServiceIdentityResponse.
        :rtype: V1Beta1ServiceIdentity
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this V1Beta1GenerateServiceIdentityResponse.


        :param identity: The identity of this V1Beta1GenerateServiceIdentityResponse.
        :type identity: V1Beta1ServiceIdentity
        """

        self._identity = identity
