# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Mixin(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, root: str=None):
        """Mixin - a model defined in OpenAPI

        :param name: The name of this Mixin.
        :param root: The root of this Mixin.
        """
        self.openapi_types = {
            'name': str,
            'root': str
        }

        self.attribute_map = {
            'name': 'name',
            'root': 'root'
        }

        self._name = name
        self._root = root

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Mixin':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Mixin of this Mixin.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Mixin.

        The fully qualified name of the interface which is included.

        :return: The name of this Mixin.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Mixin.

        The fully qualified name of the interface which is included.

        :param name: The name of this Mixin.
        :type name: str
        """

        self._name = name

    @property
    def root(self):
        """Gets the root of this Mixin.

        If non-empty specifies a path under which inherited HTTP paths are rooted.

        :return: The root of this Mixin.
        :rtype: str
        """
        return self._root

    @root.setter
    def root(self, root):
        """Sets the root of this Mixin.

        If non-empty specifies a path under which inherited HTTP paths are rooted.

        :param root: The root of this Mixin.
        :type root: str
        """

        self._root = root
