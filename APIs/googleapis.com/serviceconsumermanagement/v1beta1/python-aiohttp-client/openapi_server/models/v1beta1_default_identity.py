# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V1beta1DefaultIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, name: str=None, tag: str=None, unique_id: str=None):
        """V1beta1DefaultIdentity - a model defined in OpenAPI

        :param email: The email of this V1beta1DefaultIdentity.
        :param name: The name of this V1beta1DefaultIdentity.
        :param tag: The tag of this V1beta1DefaultIdentity.
        :param unique_id: The unique_id of this V1beta1DefaultIdentity.
        """
        self.openapi_types = {
            'email': str,
            'name': str,
            'tag': str,
            'unique_id': str
        }

        self.attribute_map = {
            'email': 'email',
            'name': 'name',
            'tag': 'tag',
            'unique_id': 'uniqueId'
        }

        self._email = email
        self._name = name
        self._tag = tag
        self._unique_id = unique_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V1beta1DefaultIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V1beta1DefaultIdentity of this V1beta1DefaultIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this V1beta1DefaultIdentity.

        The email address of the default identity.

        :return: The email of this V1beta1DefaultIdentity.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this V1beta1DefaultIdentity.

        The email address of the default identity.

        :param email: The email of this V1beta1DefaultIdentity.
        :type email: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this V1beta1DefaultIdentity.

        Default identity resource name. An example name would be: `services/serviceconsumermanagement.googleapis.com/projects/123/defaultIdentity`

        :return: The name of this V1beta1DefaultIdentity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V1beta1DefaultIdentity.

        Default identity resource name. An example name would be: `services/serviceconsumermanagement.googleapis.com/projects/123/defaultIdentity`

        :param name: The name of this V1beta1DefaultIdentity.
        :type name: str
        """

        self._name = name

    @property
    def tag(self):
        """Gets the tag of this V1beta1DefaultIdentity.

        The Default Identity tag. If specified when creating the account, the tag must be present in activation_grants. If not specified when creating the account, the tag is set to the tag specified in activation_grants.

        :return: The tag of this V1beta1DefaultIdentity.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this V1beta1DefaultIdentity.

        The Default Identity tag. If specified when creating the account, the tag must be present in activation_grants. If not specified when creating the account, the tag is set to the tag specified in activation_grants.

        :param tag: The tag of this V1beta1DefaultIdentity.
        :type tag: str
        """

        self._tag = tag

    @property
    def unique_id(self):
        """Gets the unique_id of this V1beta1DefaultIdentity.

        The unique and stable id of the default identity.

        :return: The unique_id of this V1beta1DefaultIdentity.
        :rtype: str
        """
        return self._unique_id

    @unique_id.setter
    def unique_id(self, unique_id):
        """Sets the unique_id of this V1beta1DefaultIdentity.

        The unique and stable id of the default identity.

        :param unique_id: The unique_id of this V1beta1DefaultIdentity.
        :type unique_id: str
        """

        self._unique_id = unique_id
