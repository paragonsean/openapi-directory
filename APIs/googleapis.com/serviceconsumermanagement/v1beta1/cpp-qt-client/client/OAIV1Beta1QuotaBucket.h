/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV1Beta1QuotaBucket.h
 *
 * A quota bucket is a quota provisioning unit for a specific set of dimensions.
 */

#ifndef OAIV1Beta1QuotaBucket_H
#define OAIV1Beta1QuotaBucket_H

#include <QJsonObject>

#include "OAIV1Beta1ProducerQuotaPolicy.h"
#include "OAIV1Beta1QuotaOverride.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIV1Beta1QuotaOverride;
class OAIV1Beta1ProducerQuotaPolicy;

class OAIV1Beta1QuotaBucket : public OAIObject {
public:
    OAIV1Beta1QuotaBucket();
    OAIV1Beta1QuotaBucket(QString json);
    ~OAIV1Beta1QuotaBucket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIV1Beta1QuotaOverride getAdminOverride() const;
    void setAdminOverride(const OAIV1Beta1QuotaOverride &admin_override);
    bool is_admin_override_Set() const;
    bool is_admin_override_Valid() const;

    OAIV1Beta1QuotaOverride getConsumerOverride() const;
    void setConsumerOverride(const OAIV1Beta1QuotaOverride &consumer_override);
    bool is_consumer_override_Set() const;
    bool is_consumer_override_Valid() const;

    QString getDefaultLimit() const;
    void setDefaultLimit(const QString &default_limit);
    bool is_default_limit_Set() const;
    bool is_default_limit_Valid() const;

    QMap<QString, QString> getDimensions() const;
    void setDimensions(const QMap<QString, QString> &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QString getEffectiveLimit() const;
    void setEffectiveLimit(const QString &effective_limit);
    bool is_effective_limit_Set() const;
    bool is_effective_limit_Valid() const;

    OAIV1Beta1QuotaOverride getProducerOverride() const;
    void setProducerOverride(const OAIV1Beta1QuotaOverride &producer_override);
    bool is_producer_override_Set() const;
    bool is_producer_override_Valid() const;

    OAIV1Beta1ProducerQuotaPolicy getProducerQuotaPolicy() const;
    void setProducerQuotaPolicy(const OAIV1Beta1ProducerQuotaPolicy &producer_quota_policy);
    bool is_producer_quota_policy_Set() const;
    bool is_producer_quota_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIV1Beta1QuotaOverride m_admin_override;
    bool m_admin_override_isSet;
    bool m_admin_override_isValid;

    OAIV1Beta1QuotaOverride m_consumer_override;
    bool m_consumer_override_isSet;
    bool m_consumer_override_isValid;

    QString m_default_limit;
    bool m_default_limit_isSet;
    bool m_default_limit_isValid;

    QMap<QString, QString> m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QString m_effective_limit;
    bool m_effective_limit_isSet;
    bool m_effective_limit_isValid;

    OAIV1Beta1QuotaOverride m_producer_override;
    bool m_producer_override_isSet;
    bool m_producer_override_isValid;

    OAIV1Beta1ProducerQuotaPolicy m_producer_quota_policy;
    bool m_producer_quota_policy_isSet;
    bool m_producer_quota_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV1Beta1QuotaBucket)

#endif // OAIV1Beta1QuotaBucket_H
