/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1beta1GenerateDefaultIdentityResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1beta1GenerateDefaultIdentityResponse::OAIV1beta1GenerateDefaultIdentityResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1beta1GenerateDefaultIdentityResponse::OAIV1beta1GenerateDefaultIdentityResponse() {
    this->initializeModel();
}

OAIV1beta1GenerateDefaultIdentityResponse::~OAIV1beta1GenerateDefaultIdentityResponse() {}

void OAIV1beta1GenerateDefaultIdentityResponse::initializeModel() {

    m_attach_status_isSet = false;
    m_attach_status_isValid = false;

    m_identity_isSet = false;
    m_identity_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;
}

void OAIV1beta1GenerateDefaultIdentityResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1beta1GenerateDefaultIdentityResponse::fromJsonObject(QJsonObject json) {

    m_attach_status_isValid = ::OpenAPI::fromJsonValue(m_attach_status, json[QString("attachStatus")]);
    m_attach_status_isSet = !json[QString("attachStatus")].isNull() && m_attach_status_isValid;

    m_identity_isValid = ::OpenAPI::fromJsonValue(m_identity, json[QString("identity")]);
    m_identity_isSet = !json[QString("identity")].isNull() && m_identity_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;
}

QString OAIV1beta1GenerateDefaultIdentityResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1beta1GenerateDefaultIdentityResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_attach_status_isSet) {
        obj.insert(QString("attachStatus"), ::OpenAPI::toJsonValue(m_attach_status));
    }
    if (m_identity.isSet()) {
        obj.insert(QString("identity"), ::OpenAPI::toJsonValue(m_identity));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    return obj;
}

QString OAIV1beta1GenerateDefaultIdentityResponse::getAttachStatus() const {
    return m_attach_status;
}
void OAIV1beta1GenerateDefaultIdentityResponse::setAttachStatus(const QString &attach_status) {
    m_attach_status = attach_status;
    m_attach_status_isSet = true;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::is_attach_status_Set() const{
    return m_attach_status_isSet;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::is_attach_status_Valid() const{
    return m_attach_status_isValid;
}

OAIV1beta1DefaultIdentity OAIV1beta1GenerateDefaultIdentityResponse::getIdentity() const {
    return m_identity;
}
void OAIV1beta1GenerateDefaultIdentityResponse::setIdentity(const OAIV1beta1DefaultIdentity &identity) {
    m_identity = identity;
    m_identity_isSet = true;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::is_identity_Set() const{
    return m_identity_isSet;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::is_identity_Valid() const{
    return m_identity_isValid;
}

QString OAIV1beta1GenerateDefaultIdentityResponse::getRole() const {
    return m_role;
}
void OAIV1beta1GenerateDefaultIdentityResponse::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::is_role_Set() const{
    return m_role_isSet;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::is_role_Valid() const{
    return m_role_isValid;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attach_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1beta1GenerateDefaultIdentityResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
