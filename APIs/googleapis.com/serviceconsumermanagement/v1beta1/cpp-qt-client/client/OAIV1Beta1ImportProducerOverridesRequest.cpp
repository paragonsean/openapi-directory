/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1Beta1ImportProducerOverridesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1Beta1ImportProducerOverridesRequest::OAIV1Beta1ImportProducerOverridesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1Beta1ImportProducerOverridesRequest::OAIV1Beta1ImportProducerOverridesRequest() {
    this->initializeModel();
}

OAIV1Beta1ImportProducerOverridesRequest::~OAIV1Beta1ImportProducerOverridesRequest() {}

void OAIV1Beta1ImportProducerOverridesRequest::initializeModel() {

    m_force_isSet = false;
    m_force_isValid = false;

    m_force_only_isSet = false;
    m_force_only_isValid = false;

    m_inline_source_isSet = false;
    m_inline_source_isValid = false;
}

void OAIV1Beta1ImportProducerOverridesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1Beta1ImportProducerOverridesRequest::fromJsonObject(QJsonObject json) {

    m_force_isValid = ::OpenAPI::fromJsonValue(m_force, json[QString("force")]);
    m_force_isSet = !json[QString("force")].isNull() && m_force_isValid;

    m_force_only_isValid = ::OpenAPI::fromJsonValue(m_force_only, json[QString("forceOnly")]);
    m_force_only_isSet = !json[QString("forceOnly")].isNull() && m_force_only_isValid;

    m_inline_source_isValid = ::OpenAPI::fromJsonValue(m_inline_source, json[QString("inlineSource")]);
    m_inline_source_isSet = !json[QString("inlineSource")].isNull() && m_inline_source_isValid;
}

QString OAIV1Beta1ImportProducerOverridesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1Beta1ImportProducerOverridesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_force_isSet) {
        obj.insert(QString("force"), ::OpenAPI::toJsonValue(m_force));
    }
    if (m_force_only.size() > 0) {
        obj.insert(QString("forceOnly"), ::OpenAPI::toJsonValue(m_force_only));
    }
    if (m_inline_source.isSet()) {
        obj.insert(QString("inlineSource"), ::OpenAPI::toJsonValue(m_inline_source));
    }
    return obj;
}

bool OAIV1Beta1ImportProducerOverridesRequest::isForce() const {
    return m_force;
}
void OAIV1Beta1ImportProducerOverridesRequest::setForce(const bool &force) {
    m_force = force;
    m_force_isSet = true;
}

bool OAIV1Beta1ImportProducerOverridesRequest::is_force_Set() const{
    return m_force_isSet;
}

bool OAIV1Beta1ImportProducerOverridesRequest::is_force_Valid() const{
    return m_force_isValid;
}

QList<QString> OAIV1Beta1ImportProducerOverridesRequest::getForceOnly() const {
    return m_force_only;
}
void OAIV1Beta1ImportProducerOverridesRequest::setForceOnly(const QList<QString> &force_only) {
    m_force_only = force_only;
    m_force_only_isSet = true;
}

bool OAIV1Beta1ImportProducerOverridesRequest::is_force_only_Set() const{
    return m_force_only_isSet;
}

bool OAIV1Beta1ImportProducerOverridesRequest::is_force_only_Valid() const{
    return m_force_only_isValid;
}

OAIV1Beta1OverrideInlineSource OAIV1Beta1ImportProducerOverridesRequest::getInlineSource() const {
    return m_inline_source;
}
void OAIV1Beta1ImportProducerOverridesRequest::setInlineSource(const OAIV1Beta1OverrideInlineSource &inline_source) {
    m_inline_source = inline_source;
    m_inline_source_isSet = true;
}

bool OAIV1Beta1ImportProducerOverridesRequest::is_inline_source_Set() const{
    return m_inline_source_isSet;
}

bool OAIV1Beta1ImportProducerOverridesRequest::is_inline_source_Valid() const{
    return m_inline_source_isValid;
}

bool OAIV1Beta1ImportProducerOverridesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_force_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_force_only.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_inline_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1Beta1ImportProducerOverridesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
