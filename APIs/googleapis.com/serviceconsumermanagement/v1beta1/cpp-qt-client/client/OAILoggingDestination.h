/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoggingDestination.h
 *
 * Configuration of a specific logging destination (the producer project or the consumer project).
 */

#ifndef OAILoggingDestination_H
#define OAILoggingDestination_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoggingDestination : public OAIObject {
public:
    OAILoggingDestination();
    OAILoggingDestination(QString json);
    ~OAILoggingDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getLogs() const;
    void setLogs(const QList<QString> &logs);
    bool is_logs_Set() const;
    bool is_logs_Valid() const;

    QString getMonitoredResource() const;
    void setMonitoredResource(const QString &monitored_resource);
    bool is_monitored_resource_Set() const;
    bool is_monitored_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_logs;
    bool m_logs_isSet;
    bool m_logs_isValid;

    QString m_monitored_resource;
    bool m_monitored_resource_isSet;
    bool m_monitored_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoggingDestination)

#endif // OAILoggingDestination_H
