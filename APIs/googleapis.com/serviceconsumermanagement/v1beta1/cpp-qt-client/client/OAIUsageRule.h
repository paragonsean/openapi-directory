/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsageRule.h
 *
 * Usage configuration rules for the service. NOTE: Under development. Use this rule to configure unregistered calls for the service. Unregistered calls are calls that do not contain consumer project identity. (Example: calls that do not contain an API key). By default, API methods do not allow unregistered calls, and each method call must be identified by a consumer project identity. Use this rule to allow/disallow unregistered calls. Example of an API that wants to allow unregistered calls for entire service. usage: rules: - selector: \&quot;*\&quot; allow_unregistered_calls: true Example of a method that wants to allow unregistered calls. usage: rules: - selector: \&quot;google.example.library.v1.LibraryService.CreateBook\&quot; allow_unregistered_calls: true
 */

#ifndef OAIUsageRule_H
#define OAIUsageRule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUsageRule : public OAIObject {
public:
    OAIUsageRule();
    OAIUsageRule(QString json);
    ~OAIUsageRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowUnregisteredCalls() const;
    void setAllowUnregisteredCalls(const bool &allow_unregistered_calls);
    bool is_allow_unregistered_calls_Set() const;
    bool is_allow_unregistered_calls_Valid() const;

    QString getSelector() const;
    void setSelector(const QString &selector);
    bool is_selector_Set() const;
    bool is_selector_Valid() const;

    bool isSkipServiceControl() const;
    void setSkipServiceControl(const bool &skip_service_control);
    bool is_skip_service_control_Set() const;
    bool is_skip_service_control_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_unregistered_calls;
    bool m_allow_unregistered_calls_isSet;
    bool m_allow_unregistered_calls_isValid;

    QString m_selector;
    bool m_selector_isSet;
    bool m_selector_isValid;

    bool m_skip_service_control;
    bool m_skip_service_control_isSet;
    bool m_skip_service_control_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsageRule)

#endif // OAIUsageRule_H
