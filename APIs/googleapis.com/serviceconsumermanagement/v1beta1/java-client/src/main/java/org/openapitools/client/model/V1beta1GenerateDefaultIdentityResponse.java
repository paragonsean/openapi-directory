/*
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.V1beta1DefaultIdentity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for the &#x60;GenerateDefaultIdentity&#x60; method. This response message is assigned to the &#x60;response&#x60; field of the returned Operation when that operation is done.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:19.435106-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class V1beta1GenerateDefaultIdentityResponse {
  /**
   * Status of the role attachment. Under development (go/si-attach-role), currently always return ATTACH_STATUS_UNSPECIFIED)
   */
  @JsonAdapter(AttachStatusEnum.Adapter.class)
  public enum AttachStatusEnum {
    ATTACH_STATUS_UNSPECIFIED("ATTACH_STATUS_UNSPECIFIED"),
    
    ATTACHED("ATTACHED"),
    
    ATTACH_SKIPPED("ATTACH_SKIPPED"),
    
    PREVIOUSLY_ATTACHED("PREVIOUSLY_ATTACHED"),
    
    ATTACH_DENIED_BY_ORG_POLICY("ATTACH_DENIED_BY_ORG_POLICY");

    private String value;

    AttachStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AttachStatusEnum fromValue(String value) {
      for (AttachStatusEnum b : AttachStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AttachStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AttachStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AttachStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AttachStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AttachStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ATTACH_STATUS = "attachStatus";
  @SerializedName(SERIALIZED_NAME_ATTACH_STATUS)
  private AttachStatusEnum attachStatus;

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private V1beta1DefaultIdentity identity;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private String role;

  public V1beta1GenerateDefaultIdentityResponse() {
  }

  public V1beta1GenerateDefaultIdentityResponse attachStatus(AttachStatusEnum attachStatus) {
    this.attachStatus = attachStatus;
    return this;
  }

  /**
   * Status of the role attachment. Under development (go/si-attach-role), currently always return ATTACH_STATUS_UNSPECIFIED)
   * @return attachStatus
   */
  @javax.annotation.Nullable
  public AttachStatusEnum getAttachStatus() {
    return attachStatus;
  }

  public void setAttachStatus(AttachStatusEnum attachStatus) {
    this.attachStatus = attachStatus;
  }


  public V1beta1GenerateDefaultIdentityResponse identity(V1beta1DefaultIdentity identity) {
    this.identity = identity;
    return this;
  }

  /**
   * Get identity
   * @return identity
   */
  @javax.annotation.Nullable
  public V1beta1DefaultIdentity getIdentity() {
    return identity;
  }

  public void setIdentity(V1beta1DefaultIdentity identity) {
    this.identity = identity;
  }


  public V1beta1GenerateDefaultIdentityResponse role(String role) {
    this.role = role;
    return this;
  }

  /**
   * Role attached to consumer project. Empty if not attached in this request. (Under development, currently always return empty.)
   * @return role
   */
  @javax.annotation.Nullable
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta1GenerateDefaultIdentityResponse v1beta1GenerateDefaultIdentityResponse = (V1beta1GenerateDefaultIdentityResponse) o;
    return Objects.equals(this.attachStatus, v1beta1GenerateDefaultIdentityResponse.attachStatus) &&
        Objects.equals(this.identity, v1beta1GenerateDefaultIdentityResponse.identity) &&
        Objects.equals(this.role, v1beta1GenerateDefaultIdentityResponse.role);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachStatus, identity, role);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta1GenerateDefaultIdentityResponse {\n");
    sb.append("    attachStatus: ").append(toIndentedString(attachStatus)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attachStatus");
    openapiFields.add("identity");
    openapiFields.add("role");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to V1beta1GenerateDefaultIdentityResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1beta1GenerateDefaultIdentityResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1beta1GenerateDefaultIdentityResponse is not found in the empty JSON string", V1beta1GenerateDefaultIdentityResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1beta1GenerateDefaultIdentityResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1beta1GenerateDefaultIdentityResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attachStatus") != null && !jsonObj.get("attachStatus").isJsonNull()) && !jsonObj.get("attachStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attachStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attachStatus").toString()));
      }
      // validate the optional field `attachStatus`
      if (jsonObj.get("attachStatus") != null && !jsonObj.get("attachStatus").isJsonNull()) {
        AttachStatusEnum.validateJsonElement(jsonObj.get("attachStatus"));
      }
      // validate the optional field `identity`
      if (jsonObj.get("identity") != null && !jsonObj.get("identity").isJsonNull()) {
        V1beta1DefaultIdentity.validateJsonElement(jsonObj.get("identity"));
      }
      if ((jsonObj.get("role") != null && !jsonObj.get("role").isJsonNull()) && !jsonObj.get("role").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1beta1GenerateDefaultIdentityResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1beta1GenerateDefaultIdentityResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1beta1GenerateDefaultIdentityResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1beta1GenerateDefaultIdentityResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<V1beta1GenerateDefaultIdentityResponse>() {
           @Override
           public void write(JsonWriter out, V1beta1GenerateDefaultIdentityResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1beta1GenerateDefaultIdentityResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of V1beta1GenerateDefaultIdentityResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of V1beta1GenerateDefaultIdentityResponse
   * @throws IOException if the JSON string is invalid with respect to V1beta1GenerateDefaultIdentityResponse
   */
  public static V1beta1GenerateDefaultIdentityResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1beta1GenerateDefaultIdentityResponse.class);
  }

  /**
   * Convert an instance of V1beta1GenerateDefaultIdentityResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

