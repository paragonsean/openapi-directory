/*
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.V1Beta1ConsumerQuotaLimit;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Consumer quota settings for a quota metric.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:19.435106-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class V1Beta1ConsumerQuotaMetric {
  public static final String SERIALIZED_NAME_CONSUMER_QUOTA_LIMITS = "consumerQuotaLimits";
  @SerializedName(SERIALIZED_NAME_CONSUMER_QUOTA_LIMITS)
  private List<V1Beta1ConsumerQuotaLimit> consumerQuotaLimits = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCENDANT_CONSUMER_QUOTA_LIMITS = "descendantConsumerQuotaLimits";
  @SerializedName(SERIALIZED_NAME_DESCENDANT_CONSUMER_QUOTA_LIMITS)
  private List<V1Beta1ConsumerQuotaLimit> descendantConsumerQuotaLimits = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_METRIC = "metric";
  @SerializedName(SERIALIZED_NAME_METRIC)
  private String metric;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;

  public V1Beta1ConsumerQuotaMetric() {
  }

  public V1Beta1ConsumerQuotaMetric consumerQuotaLimits(List<V1Beta1ConsumerQuotaLimit> consumerQuotaLimits) {
    this.consumerQuotaLimits = consumerQuotaLimits;
    return this;
  }

  public V1Beta1ConsumerQuotaMetric addConsumerQuotaLimitsItem(V1Beta1ConsumerQuotaLimit consumerQuotaLimitsItem) {
    if (this.consumerQuotaLimits == null) {
      this.consumerQuotaLimits = new ArrayList<>();
    }
    this.consumerQuotaLimits.add(consumerQuotaLimitsItem);
    return this;
  }

  /**
   * The consumer quota for each quota limit defined on the metric.
   * @return consumerQuotaLimits
   */
  @javax.annotation.Nullable
  public List<V1Beta1ConsumerQuotaLimit> getConsumerQuotaLimits() {
    return consumerQuotaLimits;
  }

  public void setConsumerQuotaLimits(List<V1Beta1ConsumerQuotaLimit> consumerQuotaLimits) {
    this.consumerQuotaLimits = consumerQuotaLimits;
  }


  public V1Beta1ConsumerQuotaMetric descendantConsumerQuotaLimits(List<V1Beta1ConsumerQuotaLimit> descendantConsumerQuotaLimits) {
    this.descendantConsumerQuotaLimits = descendantConsumerQuotaLimits;
    return this;
  }

  public V1Beta1ConsumerQuotaMetric addDescendantConsumerQuotaLimitsItem(V1Beta1ConsumerQuotaLimit descendantConsumerQuotaLimitsItem) {
    if (this.descendantConsumerQuotaLimits == null) {
      this.descendantConsumerQuotaLimits = new ArrayList<>();
    }
    this.descendantConsumerQuotaLimits.add(descendantConsumerQuotaLimitsItem);
    return this;
  }

  /**
   * The quota limits targeting the descendant containers of the consumer in request. If the consumer in request is of type &#x60;organizations&#x60; or &#x60;folders&#x60;, the field will list per-project limits in the metric; if the consumer in request is of type &#x60;project&#x60;, the field will be empty. The &#x60;quota_buckets&#x60; field of each descendant consumer quota limit will not be populated.
   * @return descendantConsumerQuotaLimits
   */
  @javax.annotation.Nullable
  public List<V1Beta1ConsumerQuotaLimit> getDescendantConsumerQuotaLimits() {
    return descendantConsumerQuotaLimits;
  }

  public void setDescendantConsumerQuotaLimits(List<V1Beta1ConsumerQuotaLimit> descendantConsumerQuotaLimits) {
    this.descendantConsumerQuotaLimits = descendantConsumerQuotaLimits;
  }


  public V1Beta1ConsumerQuotaMetric displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the metric. An example name would be: \&quot;CPUs\&quot;
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public V1Beta1ConsumerQuotaMetric metric(String metric) {
    this.metric = metric;
    return this;
  }

  /**
   * The name of the metric. An example name would be: &#x60;compute.googleapis.com/cpus&#x60;
   * @return metric
   */
  @javax.annotation.Nullable
  public String getMetric() {
    return metric;
  }

  public void setMetric(String metric) {
    this.metric = metric;
  }


  public V1Beta1ConsumerQuotaMetric name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the quota settings on this metric for this consumer. An example name would be: &#x60;services/serviceconsumermanagement.googleapis.com/projects/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus&#x60; The resource name is intended to be opaque and should not be parsed for its component strings, since its representation could change in the future.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public V1Beta1ConsumerQuotaMetric unit(String unit) {
    this.unit = unit;
    return this;
  }

  /**
   * The units in which the metric value is reported.
   * @return unit
   */
  @javax.annotation.Nullable
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Beta1ConsumerQuotaMetric v1Beta1ConsumerQuotaMetric = (V1Beta1ConsumerQuotaMetric) o;
    return Objects.equals(this.consumerQuotaLimits, v1Beta1ConsumerQuotaMetric.consumerQuotaLimits) &&
        Objects.equals(this.descendantConsumerQuotaLimits, v1Beta1ConsumerQuotaMetric.descendantConsumerQuotaLimits) &&
        Objects.equals(this.displayName, v1Beta1ConsumerQuotaMetric.displayName) &&
        Objects.equals(this.metric, v1Beta1ConsumerQuotaMetric.metric) &&
        Objects.equals(this.name, v1Beta1ConsumerQuotaMetric.name) &&
        Objects.equals(this.unit, v1Beta1ConsumerQuotaMetric.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerQuotaLimits, descendantConsumerQuotaLimits, displayName, metric, name, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Beta1ConsumerQuotaMetric {\n");
    sb.append("    consumerQuotaLimits: ").append(toIndentedString(consumerQuotaLimits)).append("\n");
    sb.append("    descendantConsumerQuotaLimits: ").append(toIndentedString(descendantConsumerQuotaLimits)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("consumerQuotaLimits");
    openapiFields.add("descendantConsumerQuotaLimits");
    openapiFields.add("displayName");
    openapiFields.add("metric");
    openapiFields.add("name");
    openapiFields.add("unit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to V1Beta1ConsumerQuotaMetric
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!V1Beta1ConsumerQuotaMetric.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1Beta1ConsumerQuotaMetric is not found in the empty JSON string", V1Beta1ConsumerQuotaMetric.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!V1Beta1ConsumerQuotaMetric.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1Beta1ConsumerQuotaMetric` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("consumerQuotaLimits") != null && !jsonObj.get("consumerQuotaLimits").isJsonNull()) {
        JsonArray jsonArrayconsumerQuotaLimits = jsonObj.getAsJsonArray("consumerQuotaLimits");
        if (jsonArrayconsumerQuotaLimits != null) {
          // ensure the json data is an array
          if (!jsonObj.get("consumerQuotaLimits").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `consumerQuotaLimits` to be an array in the JSON string but got `%s`", jsonObj.get("consumerQuotaLimits").toString()));
          }

          // validate the optional field `consumerQuotaLimits` (array)
          for (int i = 0; i < jsonArrayconsumerQuotaLimits.size(); i++) {
            V1Beta1ConsumerQuotaLimit.validateJsonElement(jsonArrayconsumerQuotaLimits.get(i));
          };
        }
      }
      if (jsonObj.get("descendantConsumerQuotaLimits") != null && !jsonObj.get("descendantConsumerQuotaLimits").isJsonNull()) {
        JsonArray jsonArraydescendantConsumerQuotaLimits = jsonObj.getAsJsonArray("descendantConsumerQuotaLimits");
        if (jsonArraydescendantConsumerQuotaLimits != null) {
          // ensure the json data is an array
          if (!jsonObj.get("descendantConsumerQuotaLimits").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `descendantConsumerQuotaLimits` to be an array in the JSON string but got `%s`", jsonObj.get("descendantConsumerQuotaLimits").toString()));
          }

          // validate the optional field `descendantConsumerQuotaLimits` (array)
          for (int i = 0; i < jsonArraydescendantConsumerQuotaLimits.size(); i++) {
            V1Beta1ConsumerQuotaLimit.validateJsonElement(jsonArraydescendantConsumerQuotaLimits.get(i));
          };
        }
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("metric") != null && !jsonObj.get("metric").isJsonNull()) && !jsonObj.get("metric").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metric` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metric").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("unit") != null && !jsonObj.get("unit").isJsonNull()) && !jsonObj.get("unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1Beta1ConsumerQuotaMetric.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1Beta1ConsumerQuotaMetric' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1Beta1ConsumerQuotaMetric> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1Beta1ConsumerQuotaMetric.class));

       return (TypeAdapter<T>) new TypeAdapter<V1Beta1ConsumerQuotaMetric>() {
           @Override
           public void write(JsonWriter out, V1Beta1ConsumerQuotaMetric value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1Beta1ConsumerQuotaMetric read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of V1Beta1ConsumerQuotaMetric given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of V1Beta1ConsumerQuotaMetric
   * @throws IOException if the JSON string is invalid with respect to V1Beta1ConsumerQuotaMetric
   */
  public static V1Beta1ConsumerQuotaMetric fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1Beta1ConsumerQuotaMetric.class);
  }

  /**
   * Convert an instance of V1Beta1ConsumerQuotaMetric to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

