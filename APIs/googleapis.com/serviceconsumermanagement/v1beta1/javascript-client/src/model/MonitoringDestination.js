/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MonitoringDestination model module.
 * @module model/MonitoringDestination
 * @version v1beta1
 */
class MonitoringDestination {
    /**
     * Constructs a new <code>MonitoringDestination</code>.
     * Configuration of a specific monitoring destination (the producer project or the consumer project).
     * @alias module:model/MonitoringDestination
     */
    constructor() { 
        
        MonitoringDestination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MonitoringDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitoringDestination} obj Optional instance to populate.
     * @return {module:model/MonitoringDestination} The populated <code>MonitoringDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitoringDestination();

            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], ['String']);
            }
            if (data.hasOwnProperty('monitoredResource')) {
                obj['monitoredResource'] = ApiClient.convertToType(data['monitoredResource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitoringDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitoringDestination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['metrics'])) {
            throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
        }
        // ensure the json data is a string
        if (data['monitoredResource'] && !(typeof data['monitoredResource'] === 'string' || data['monitoredResource'] instanceof String)) {
            throw new Error("Expected the field `monitoredResource` to be a primitive type in the JSON string but got " + data['monitoredResource']);
        }

        return true;
    }


}



/**
 * Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section.
 * @member {Array.<String>} metrics
 */
MonitoringDestination.prototype['metrics'] = undefined;

/**
 * The monitored resource type. The type must be defined in Service.monitored_resources section.
 * @member {String} monitoredResource
 */
MonitoringDestination.prototype['monitoredResource'] = undefined;






export default MonitoringDestination;

