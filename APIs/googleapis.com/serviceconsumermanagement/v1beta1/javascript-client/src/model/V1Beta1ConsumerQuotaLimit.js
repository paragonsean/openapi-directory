/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V1Beta1QuotaBucket from './V1Beta1QuotaBucket';

/**
 * The V1Beta1ConsumerQuotaLimit model module.
 * @module model/V1Beta1ConsumerQuotaLimit
 * @version v1beta1
 */
class V1Beta1ConsumerQuotaLimit {
    /**
     * Constructs a new <code>V1Beta1ConsumerQuotaLimit</code>.
     * Consumer quota settings for a quota limit.
     * @alias module:model/V1Beta1ConsumerQuotaLimit
     */
    constructor() { 
        
        V1Beta1ConsumerQuotaLimit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1Beta1ConsumerQuotaLimit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1Beta1ConsumerQuotaLimit} obj Optional instance to populate.
     * @return {module:model/V1Beta1ConsumerQuotaLimit} The populated <code>V1Beta1ConsumerQuotaLimit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1Beta1ConsumerQuotaLimit();

            if (data.hasOwnProperty('isPrecise')) {
                obj['isPrecise'] = ApiClient.convertToType(data['isPrecise'], 'Boolean');
            }
            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('quotaBuckets')) {
                obj['quotaBuckets'] = ApiClient.convertToType(data['quotaBuckets'], [V1Beta1QuotaBucket]);
            }
            if (data.hasOwnProperty('supportedLocations')) {
                obj['supportedLocations'] = ApiClient.convertToType(data['supportedLocations'], ['String']);
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1Beta1ConsumerQuotaLimit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1Beta1ConsumerQuotaLimit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['metric'] && !(typeof data['metric'] === 'string' || data['metric'] instanceof String)) {
            throw new Error("Expected the field `metric` to be a primitive type in the JSON string but got " + data['metric']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['quotaBuckets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quotaBuckets'])) {
                throw new Error("Expected the field `quotaBuckets` to be an array in the JSON data but got " + data['quotaBuckets']);
            }
            // validate the optional field `quotaBuckets` (array)
            for (const item of data['quotaBuckets']) {
                V1Beta1QuotaBucket.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedLocations'])) {
            throw new Error("Expected the field `supportedLocations` to be an array in the JSON data but got " + data['supportedLocations']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }

        return true;
    }


}



/**
 * Whether this limit is precise or imprecise.
 * @member {Boolean} isPrecise
 */
V1Beta1ConsumerQuotaLimit.prototype['isPrecise'] = undefined;

/**
 * The name of the parent metric of this limit. An example name would be: `compute.googleapis.com/cpus`
 * @member {String} metric
 */
V1Beta1ConsumerQuotaLimit.prototype['metric'] = undefined;

/**
 * The resource name of the quota limit. An example name would be: `services/compute.googleapis.com/projects/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion` The resource name is intended to be opaque and should not be parsed for its component strings, since its representation could change in the future.
 * @member {String} name
 */
V1Beta1ConsumerQuotaLimit.prototype['name'] = undefined;

/**
 * Summary of the enforced quota buckets, organized by quota dimension, ordered from least specific to most specific (for example, the global default bucket, with no quota dimensions, will always appear first).
 * @member {Array.<module:model/V1Beta1QuotaBucket>} quotaBuckets
 */
V1Beta1ConsumerQuotaLimit.prototype['quotaBuckets'] = undefined;

/**
 * List of all supported locations. This field is present only if the limit has a {region} or {zone} dimension.
 * @member {Array.<String>} supportedLocations
 */
V1Beta1ConsumerQuotaLimit.prototype['supportedLocations'] = undefined;

/**
 * The limit unit. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example; the literal characters `{` and `}` occur in the string.
 * @member {String} unit
 */
V1Beta1ConsumerQuotaLimit.prototype['unit'] = undefined;






export default V1Beta1ConsumerQuotaLimit;

