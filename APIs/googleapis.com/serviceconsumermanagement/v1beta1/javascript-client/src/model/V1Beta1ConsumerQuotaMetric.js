/**
 * Service Consumer Management API
 * Manages the service consumers of a Service Infrastructure service.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V1Beta1ConsumerQuotaLimit from './V1Beta1ConsumerQuotaLimit';

/**
 * The V1Beta1ConsumerQuotaMetric model module.
 * @module model/V1Beta1ConsumerQuotaMetric
 * @version v1beta1
 */
class V1Beta1ConsumerQuotaMetric {
    /**
     * Constructs a new <code>V1Beta1ConsumerQuotaMetric</code>.
     * Consumer quota settings for a quota metric.
     * @alias module:model/V1Beta1ConsumerQuotaMetric
     */
    constructor() { 
        
        V1Beta1ConsumerQuotaMetric.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1Beta1ConsumerQuotaMetric</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1Beta1ConsumerQuotaMetric} obj Optional instance to populate.
     * @return {module:model/V1Beta1ConsumerQuotaMetric} The populated <code>V1Beta1ConsumerQuotaMetric</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1Beta1ConsumerQuotaMetric();

            if (data.hasOwnProperty('consumerQuotaLimits')) {
                obj['consumerQuotaLimits'] = ApiClient.convertToType(data['consumerQuotaLimits'], [V1Beta1ConsumerQuotaLimit]);
            }
            if (data.hasOwnProperty('descendantConsumerQuotaLimits')) {
                obj['descendantConsumerQuotaLimits'] = ApiClient.convertToType(data['descendantConsumerQuotaLimits'], [V1Beta1ConsumerQuotaLimit]);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1Beta1ConsumerQuotaMetric</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1Beta1ConsumerQuotaMetric</code>.
     */
    static validateJSON(data) {
        if (data['consumerQuotaLimits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['consumerQuotaLimits'])) {
                throw new Error("Expected the field `consumerQuotaLimits` to be an array in the JSON data but got " + data['consumerQuotaLimits']);
            }
            // validate the optional field `consumerQuotaLimits` (array)
            for (const item of data['consumerQuotaLimits']) {
                V1Beta1ConsumerQuotaLimit.validateJSON(item);
            };
        }
        if (data['descendantConsumerQuotaLimits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['descendantConsumerQuotaLimits'])) {
                throw new Error("Expected the field `descendantConsumerQuotaLimits` to be an array in the JSON data but got " + data['descendantConsumerQuotaLimits']);
            }
            // validate the optional field `descendantConsumerQuotaLimits` (array)
            for (const item of data['descendantConsumerQuotaLimits']) {
                V1Beta1ConsumerQuotaLimit.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['metric'] && !(typeof data['metric'] === 'string' || data['metric'] instanceof String)) {
            throw new Error("Expected the field `metric` to be a primitive type in the JSON string but got " + data['metric']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }

        return true;
    }


}



/**
 * The consumer quota for each quota limit defined on the metric.
 * @member {Array.<module:model/V1Beta1ConsumerQuotaLimit>} consumerQuotaLimits
 */
V1Beta1ConsumerQuotaMetric.prototype['consumerQuotaLimits'] = undefined;

/**
 * The quota limits targeting the descendant containers of the consumer in request. If the consumer in request is of type `organizations` or `folders`, the field will list per-project limits in the metric; if the consumer in request is of type `project`, the field will be empty. The `quota_buckets` field of each descendant consumer quota limit will not be populated.
 * @member {Array.<module:model/V1Beta1ConsumerQuotaLimit>} descendantConsumerQuotaLimits
 */
V1Beta1ConsumerQuotaMetric.prototype['descendantConsumerQuotaLimits'] = undefined;

/**
 * The display name of the metric. An example name would be: \"CPUs\"
 * @member {String} displayName
 */
V1Beta1ConsumerQuotaMetric.prototype['displayName'] = undefined;

/**
 * The name of the metric. An example name would be: `compute.googleapis.com/cpus`
 * @member {String} metric
 */
V1Beta1ConsumerQuotaMetric.prototype['metric'] = undefined;

/**
 * The resource name of the quota settings on this metric for this consumer. An example name would be: `services/serviceconsumermanagement.googleapis.com/projects/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus` The resource name is intended to be opaque and should not be parsed for its component strings, since its representation could change in the future.
 * @member {String} name
 */
V1Beta1ConsumerQuotaMetric.prototype['name'] = undefined;

/**
 * The units in which the metric value is reported.
 * @member {String} unit
 */
V1Beta1ConsumerQuotaMetric.prototype['unit'] = undefined;






export default V1Beta1ConsumerQuotaMetric;

