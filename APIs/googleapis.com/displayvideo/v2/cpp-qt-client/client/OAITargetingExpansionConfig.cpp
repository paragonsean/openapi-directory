/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITargetingExpansionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITargetingExpansionConfig::OAITargetingExpansionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITargetingExpansionConfig::OAITargetingExpansionConfig() {
    this->initializeModel();
}

OAITargetingExpansionConfig::~OAITargetingExpansionConfig() {}

void OAITargetingExpansionConfig::initializeModel() {

    m_exclude_first_party_audience_isSet = false;
    m_exclude_first_party_audience_isValid = false;

    m_targeting_expansion_level_isSet = false;
    m_targeting_expansion_level_isValid = false;
}

void OAITargetingExpansionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITargetingExpansionConfig::fromJsonObject(QJsonObject json) {

    m_exclude_first_party_audience_isValid = ::OpenAPI::fromJsonValue(m_exclude_first_party_audience, json[QString("excludeFirstPartyAudience")]);
    m_exclude_first_party_audience_isSet = !json[QString("excludeFirstPartyAudience")].isNull() && m_exclude_first_party_audience_isValid;

    m_targeting_expansion_level_isValid = ::OpenAPI::fromJsonValue(m_targeting_expansion_level, json[QString("targetingExpansionLevel")]);
    m_targeting_expansion_level_isSet = !json[QString("targetingExpansionLevel")].isNull() && m_targeting_expansion_level_isValid;
}

QString OAITargetingExpansionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITargetingExpansionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_exclude_first_party_audience_isSet) {
        obj.insert(QString("excludeFirstPartyAudience"), ::OpenAPI::toJsonValue(m_exclude_first_party_audience));
    }
    if (m_targeting_expansion_level_isSet) {
        obj.insert(QString("targetingExpansionLevel"), ::OpenAPI::toJsonValue(m_targeting_expansion_level));
    }
    return obj;
}

bool OAITargetingExpansionConfig::isExcludeFirstPartyAudience() const {
    return m_exclude_first_party_audience;
}
void OAITargetingExpansionConfig::setExcludeFirstPartyAudience(const bool &exclude_first_party_audience) {
    m_exclude_first_party_audience = exclude_first_party_audience;
    m_exclude_first_party_audience_isSet = true;
}

bool OAITargetingExpansionConfig::is_exclude_first_party_audience_Set() const{
    return m_exclude_first_party_audience_isSet;
}

bool OAITargetingExpansionConfig::is_exclude_first_party_audience_Valid() const{
    return m_exclude_first_party_audience_isValid;
}

QString OAITargetingExpansionConfig::getTargetingExpansionLevel() const {
    return m_targeting_expansion_level;
}
void OAITargetingExpansionConfig::setTargetingExpansionLevel(const QString &targeting_expansion_level) {
    m_targeting_expansion_level = targeting_expansion_level;
    m_targeting_expansion_level_isSet = true;
}

bool OAITargetingExpansionConfig::is_targeting_expansion_level_Set() const{
    return m_targeting_expansion_level_isSet;
}

bool OAITargetingExpansionConfig::is_targeting_expansion_level_Valid() const{
    return m_targeting_expansion_level_isValid;
}

bool OAITargetingExpansionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exclude_first_party_audience_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_expansion_level_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITargetingExpansionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
