/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExchangeConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExchangeConfig::OAIExchangeConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExchangeConfig::OAIExchangeConfig() {
    this->initializeModel();
}

OAIExchangeConfig::~OAIExchangeConfig() {}

void OAIExchangeConfig::initializeModel() {

    m_enabled_exchanges_isSet = false;
    m_enabled_exchanges_isValid = false;
}

void OAIExchangeConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExchangeConfig::fromJsonObject(QJsonObject json) {

    m_enabled_exchanges_isValid = ::OpenAPI::fromJsonValue(m_enabled_exchanges, json[QString("enabledExchanges")]);
    m_enabled_exchanges_isSet = !json[QString("enabledExchanges")].isNull() && m_enabled_exchanges_isValid;
}

QString OAIExchangeConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExchangeConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_exchanges.size() > 0) {
        obj.insert(QString("enabledExchanges"), ::OpenAPI::toJsonValue(m_enabled_exchanges));
    }
    return obj;
}

QList<OAIExchangeConfigEnabledExchange> OAIExchangeConfig::getEnabledExchanges() const {
    return m_enabled_exchanges;
}
void OAIExchangeConfig::setEnabledExchanges(const QList<OAIExchangeConfigEnabledExchange> &enabled_exchanges) {
    m_enabled_exchanges = enabled_exchanges;
    m_enabled_exchanges_isSet = true;
}

bool OAIExchangeConfig::is_enabled_exchanges_Set() const{
    return m_enabled_exchanges_isSet;
}

bool OAIExchangeConfig::is_enabled_exchanges_Valid() const{
    return m_enabled_exchanges_isValid;
}

bool OAIExchangeConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_exchanges.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExchangeConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
