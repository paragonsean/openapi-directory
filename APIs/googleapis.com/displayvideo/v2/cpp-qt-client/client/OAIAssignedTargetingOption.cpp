/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssignedTargetingOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssignedTargetingOption::OAIAssignedTargetingOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssignedTargetingOption::OAIAssignedTargetingOption() {
    this->initializeModel();
}

OAIAssignedTargetingOption::~OAIAssignedTargetingOption() {}

void OAIAssignedTargetingOption::initializeModel() {

    m_age_range_details_isSet = false;
    m_age_range_details_isValid = false;

    m_app_category_details_isSet = false;
    m_app_category_details_isValid = false;

    m_app_details_isSet = false;
    m_app_details_isValid = false;

    m_assigned_targeting_option_id_isSet = false;
    m_assigned_targeting_option_id_isValid = false;

    m_assigned_targeting_option_id_alias_isSet = false;
    m_assigned_targeting_option_id_alias_isValid = false;

    m_audience_group_details_isSet = false;
    m_audience_group_details_isValid = false;

    m_audio_content_type_details_isSet = false;
    m_audio_content_type_details_isValid = false;

    m_authorized_seller_status_details_isSet = false;
    m_authorized_seller_status_details_isValid = false;

    m_browser_details_isSet = false;
    m_browser_details_isValid = false;

    m_business_chain_details_isSet = false;
    m_business_chain_details_isValid = false;

    m_carrier_and_isp_details_isSet = false;
    m_carrier_and_isp_details_isValid = false;

    m_category_details_isSet = false;
    m_category_details_isValid = false;

    m_channel_details_isSet = false;
    m_channel_details_isValid = false;

    m_content_duration_details_isSet = false;
    m_content_duration_details_isValid = false;

    m_content_genre_details_isSet = false;
    m_content_genre_details_isValid = false;

    m_content_instream_position_details_isSet = false;
    m_content_instream_position_details_isValid = false;

    m_content_outstream_position_details_isSet = false;
    m_content_outstream_position_details_isValid = false;

    m_content_stream_type_details_isSet = false;
    m_content_stream_type_details_isValid = false;

    m_day_and_time_details_isSet = false;
    m_day_and_time_details_isValid = false;

    m_device_make_model_details_isSet = false;
    m_device_make_model_details_isValid = false;

    m_device_type_details_isSet = false;
    m_device_type_details_isValid = false;

    m_digital_content_label_exclusion_details_isSet = false;
    m_digital_content_label_exclusion_details_isValid = false;

    m_environment_details_isSet = false;
    m_environment_details_isValid = false;

    m_exchange_details_isSet = false;
    m_exchange_details_isValid = false;

    m_gender_details_isSet = false;
    m_gender_details_isValid = false;

    m_geo_region_details_isSet = false;
    m_geo_region_details_isValid = false;

    m_household_income_details_isSet = false;
    m_household_income_details_isValid = false;

    m_inheritance_isSet = false;
    m_inheritance_isValid = false;

    m_inventory_source_details_isSet = false;
    m_inventory_source_details_isValid = false;

    m_inventory_source_group_details_isSet = false;
    m_inventory_source_group_details_isValid = false;

    m_keyword_details_isSet = false;
    m_keyword_details_isValid = false;

    m_language_details_isSet = false;
    m_language_details_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_native_content_position_details_isSet = false;
    m_native_content_position_details_isValid = false;

    m_negative_keyword_list_details_isSet = false;
    m_negative_keyword_list_details_isValid = false;

    m_omid_details_isSet = false;
    m_omid_details_isValid = false;

    m_on_screen_position_details_isSet = false;
    m_on_screen_position_details_isValid = false;

    m_operating_system_details_isSet = false;
    m_operating_system_details_isValid = false;

    m_parental_status_details_isSet = false;
    m_parental_status_details_isValid = false;

    m_poi_details_isSet = false;
    m_poi_details_isValid = false;

    m_proximity_location_list_details_isSet = false;
    m_proximity_location_list_details_isValid = false;

    m_regional_location_list_details_isSet = false;
    m_regional_location_list_details_isValid = false;

    m_sensitive_category_exclusion_details_isSet = false;
    m_sensitive_category_exclusion_details_isValid = false;

    m_session_position_details_isSet = false;
    m_session_position_details_isValid = false;

    m_sub_exchange_details_isSet = false;
    m_sub_exchange_details_isValid = false;

    m_targeting_type_isSet = false;
    m_targeting_type_isValid = false;

    m_third_party_verifier_details_isSet = false;
    m_third_party_verifier_details_isValid = false;

    m_url_details_isSet = false;
    m_url_details_isValid = false;

    m_user_rewarded_content_details_isSet = false;
    m_user_rewarded_content_details_isValid = false;

    m_video_player_size_details_isSet = false;
    m_video_player_size_details_isValid = false;

    m_viewability_details_isSet = false;
    m_viewability_details_isValid = false;

    m_youtube_channel_details_isSet = false;
    m_youtube_channel_details_isValid = false;

    m_youtube_video_details_isSet = false;
    m_youtube_video_details_isValid = false;
}

void OAIAssignedTargetingOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssignedTargetingOption::fromJsonObject(QJsonObject json) {

    m_age_range_details_isValid = ::OpenAPI::fromJsonValue(m_age_range_details, json[QString("ageRangeDetails")]);
    m_age_range_details_isSet = !json[QString("ageRangeDetails")].isNull() && m_age_range_details_isValid;

    m_app_category_details_isValid = ::OpenAPI::fromJsonValue(m_app_category_details, json[QString("appCategoryDetails")]);
    m_app_category_details_isSet = !json[QString("appCategoryDetails")].isNull() && m_app_category_details_isValid;

    m_app_details_isValid = ::OpenAPI::fromJsonValue(m_app_details, json[QString("appDetails")]);
    m_app_details_isSet = !json[QString("appDetails")].isNull() && m_app_details_isValid;

    m_assigned_targeting_option_id_isValid = ::OpenAPI::fromJsonValue(m_assigned_targeting_option_id, json[QString("assignedTargetingOptionId")]);
    m_assigned_targeting_option_id_isSet = !json[QString("assignedTargetingOptionId")].isNull() && m_assigned_targeting_option_id_isValid;

    m_assigned_targeting_option_id_alias_isValid = ::OpenAPI::fromJsonValue(m_assigned_targeting_option_id_alias, json[QString("assignedTargetingOptionIdAlias")]);
    m_assigned_targeting_option_id_alias_isSet = !json[QString("assignedTargetingOptionIdAlias")].isNull() && m_assigned_targeting_option_id_alias_isValid;

    m_audience_group_details_isValid = ::OpenAPI::fromJsonValue(m_audience_group_details, json[QString("audienceGroupDetails")]);
    m_audience_group_details_isSet = !json[QString("audienceGroupDetails")].isNull() && m_audience_group_details_isValid;

    m_audio_content_type_details_isValid = ::OpenAPI::fromJsonValue(m_audio_content_type_details, json[QString("audioContentTypeDetails")]);
    m_audio_content_type_details_isSet = !json[QString("audioContentTypeDetails")].isNull() && m_audio_content_type_details_isValid;

    m_authorized_seller_status_details_isValid = ::OpenAPI::fromJsonValue(m_authorized_seller_status_details, json[QString("authorizedSellerStatusDetails")]);
    m_authorized_seller_status_details_isSet = !json[QString("authorizedSellerStatusDetails")].isNull() && m_authorized_seller_status_details_isValid;

    m_browser_details_isValid = ::OpenAPI::fromJsonValue(m_browser_details, json[QString("browserDetails")]);
    m_browser_details_isSet = !json[QString("browserDetails")].isNull() && m_browser_details_isValid;

    m_business_chain_details_isValid = ::OpenAPI::fromJsonValue(m_business_chain_details, json[QString("businessChainDetails")]);
    m_business_chain_details_isSet = !json[QString("businessChainDetails")].isNull() && m_business_chain_details_isValid;

    m_carrier_and_isp_details_isValid = ::OpenAPI::fromJsonValue(m_carrier_and_isp_details, json[QString("carrierAndIspDetails")]);
    m_carrier_and_isp_details_isSet = !json[QString("carrierAndIspDetails")].isNull() && m_carrier_and_isp_details_isValid;

    m_category_details_isValid = ::OpenAPI::fromJsonValue(m_category_details, json[QString("categoryDetails")]);
    m_category_details_isSet = !json[QString("categoryDetails")].isNull() && m_category_details_isValid;

    m_channel_details_isValid = ::OpenAPI::fromJsonValue(m_channel_details, json[QString("channelDetails")]);
    m_channel_details_isSet = !json[QString("channelDetails")].isNull() && m_channel_details_isValid;

    m_content_duration_details_isValid = ::OpenAPI::fromJsonValue(m_content_duration_details, json[QString("contentDurationDetails")]);
    m_content_duration_details_isSet = !json[QString("contentDurationDetails")].isNull() && m_content_duration_details_isValid;

    m_content_genre_details_isValid = ::OpenAPI::fromJsonValue(m_content_genre_details, json[QString("contentGenreDetails")]);
    m_content_genre_details_isSet = !json[QString("contentGenreDetails")].isNull() && m_content_genre_details_isValid;

    m_content_instream_position_details_isValid = ::OpenAPI::fromJsonValue(m_content_instream_position_details, json[QString("contentInstreamPositionDetails")]);
    m_content_instream_position_details_isSet = !json[QString("contentInstreamPositionDetails")].isNull() && m_content_instream_position_details_isValid;

    m_content_outstream_position_details_isValid = ::OpenAPI::fromJsonValue(m_content_outstream_position_details, json[QString("contentOutstreamPositionDetails")]);
    m_content_outstream_position_details_isSet = !json[QString("contentOutstreamPositionDetails")].isNull() && m_content_outstream_position_details_isValid;

    m_content_stream_type_details_isValid = ::OpenAPI::fromJsonValue(m_content_stream_type_details, json[QString("contentStreamTypeDetails")]);
    m_content_stream_type_details_isSet = !json[QString("contentStreamTypeDetails")].isNull() && m_content_stream_type_details_isValid;

    m_day_and_time_details_isValid = ::OpenAPI::fromJsonValue(m_day_and_time_details, json[QString("dayAndTimeDetails")]);
    m_day_and_time_details_isSet = !json[QString("dayAndTimeDetails")].isNull() && m_day_and_time_details_isValid;

    m_device_make_model_details_isValid = ::OpenAPI::fromJsonValue(m_device_make_model_details, json[QString("deviceMakeModelDetails")]);
    m_device_make_model_details_isSet = !json[QString("deviceMakeModelDetails")].isNull() && m_device_make_model_details_isValid;

    m_device_type_details_isValid = ::OpenAPI::fromJsonValue(m_device_type_details, json[QString("deviceTypeDetails")]);
    m_device_type_details_isSet = !json[QString("deviceTypeDetails")].isNull() && m_device_type_details_isValid;

    m_digital_content_label_exclusion_details_isValid = ::OpenAPI::fromJsonValue(m_digital_content_label_exclusion_details, json[QString("digitalContentLabelExclusionDetails")]);
    m_digital_content_label_exclusion_details_isSet = !json[QString("digitalContentLabelExclusionDetails")].isNull() && m_digital_content_label_exclusion_details_isValid;

    m_environment_details_isValid = ::OpenAPI::fromJsonValue(m_environment_details, json[QString("environmentDetails")]);
    m_environment_details_isSet = !json[QString("environmentDetails")].isNull() && m_environment_details_isValid;

    m_exchange_details_isValid = ::OpenAPI::fromJsonValue(m_exchange_details, json[QString("exchangeDetails")]);
    m_exchange_details_isSet = !json[QString("exchangeDetails")].isNull() && m_exchange_details_isValid;

    m_gender_details_isValid = ::OpenAPI::fromJsonValue(m_gender_details, json[QString("genderDetails")]);
    m_gender_details_isSet = !json[QString("genderDetails")].isNull() && m_gender_details_isValid;

    m_geo_region_details_isValid = ::OpenAPI::fromJsonValue(m_geo_region_details, json[QString("geoRegionDetails")]);
    m_geo_region_details_isSet = !json[QString("geoRegionDetails")].isNull() && m_geo_region_details_isValid;

    m_household_income_details_isValid = ::OpenAPI::fromJsonValue(m_household_income_details, json[QString("householdIncomeDetails")]);
    m_household_income_details_isSet = !json[QString("householdIncomeDetails")].isNull() && m_household_income_details_isValid;

    m_inheritance_isValid = ::OpenAPI::fromJsonValue(m_inheritance, json[QString("inheritance")]);
    m_inheritance_isSet = !json[QString("inheritance")].isNull() && m_inheritance_isValid;

    m_inventory_source_details_isValid = ::OpenAPI::fromJsonValue(m_inventory_source_details, json[QString("inventorySourceDetails")]);
    m_inventory_source_details_isSet = !json[QString("inventorySourceDetails")].isNull() && m_inventory_source_details_isValid;

    m_inventory_source_group_details_isValid = ::OpenAPI::fromJsonValue(m_inventory_source_group_details, json[QString("inventorySourceGroupDetails")]);
    m_inventory_source_group_details_isSet = !json[QString("inventorySourceGroupDetails")].isNull() && m_inventory_source_group_details_isValid;

    m_keyword_details_isValid = ::OpenAPI::fromJsonValue(m_keyword_details, json[QString("keywordDetails")]);
    m_keyword_details_isSet = !json[QString("keywordDetails")].isNull() && m_keyword_details_isValid;

    m_language_details_isValid = ::OpenAPI::fromJsonValue(m_language_details, json[QString("languageDetails")]);
    m_language_details_isSet = !json[QString("languageDetails")].isNull() && m_language_details_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_native_content_position_details_isValid = ::OpenAPI::fromJsonValue(m_native_content_position_details, json[QString("nativeContentPositionDetails")]);
    m_native_content_position_details_isSet = !json[QString("nativeContentPositionDetails")].isNull() && m_native_content_position_details_isValid;

    m_negative_keyword_list_details_isValid = ::OpenAPI::fromJsonValue(m_negative_keyword_list_details, json[QString("negativeKeywordListDetails")]);
    m_negative_keyword_list_details_isSet = !json[QString("negativeKeywordListDetails")].isNull() && m_negative_keyword_list_details_isValid;

    m_omid_details_isValid = ::OpenAPI::fromJsonValue(m_omid_details, json[QString("omidDetails")]);
    m_omid_details_isSet = !json[QString("omidDetails")].isNull() && m_omid_details_isValid;

    m_on_screen_position_details_isValid = ::OpenAPI::fromJsonValue(m_on_screen_position_details, json[QString("onScreenPositionDetails")]);
    m_on_screen_position_details_isSet = !json[QString("onScreenPositionDetails")].isNull() && m_on_screen_position_details_isValid;

    m_operating_system_details_isValid = ::OpenAPI::fromJsonValue(m_operating_system_details, json[QString("operatingSystemDetails")]);
    m_operating_system_details_isSet = !json[QString("operatingSystemDetails")].isNull() && m_operating_system_details_isValid;

    m_parental_status_details_isValid = ::OpenAPI::fromJsonValue(m_parental_status_details, json[QString("parentalStatusDetails")]);
    m_parental_status_details_isSet = !json[QString("parentalStatusDetails")].isNull() && m_parental_status_details_isValid;

    m_poi_details_isValid = ::OpenAPI::fromJsonValue(m_poi_details, json[QString("poiDetails")]);
    m_poi_details_isSet = !json[QString("poiDetails")].isNull() && m_poi_details_isValid;

    m_proximity_location_list_details_isValid = ::OpenAPI::fromJsonValue(m_proximity_location_list_details, json[QString("proximityLocationListDetails")]);
    m_proximity_location_list_details_isSet = !json[QString("proximityLocationListDetails")].isNull() && m_proximity_location_list_details_isValid;

    m_regional_location_list_details_isValid = ::OpenAPI::fromJsonValue(m_regional_location_list_details, json[QString("regionalLocationListDetails")]);
    m_regional_location_list_details_isSet = !json[QString("regionalLocationListDetails")].isNull() && m_regional_location_list_details_isValid;

    m_sensitive_category_exclusion_details_isValid = ::OpenAPI::fromJsonValue(m_sensitive_category_exclusion_details, json[QString("sensitiveCategoryExclusionDetails")]);
    m_sensitive_category_exclusion_details_isSet = !json[QString("sensitiveCategoryExclusionDetails")].isNull() && m_sensitive_category_exclusion_details_isValid;

    m_session_position_details_isValid = ::OpenAPI::fromJsonValue(m_session_position_details, json[QString("sessionPositionDetails")]);
    m_session_position_details_isSet = !json[QString("sessionPositionDetails")].isNull() && m_session_position_details_isValid;

    m_sub_exchange_details_isValid = ::OpenAPI::fromJsonValue(m_sub_exchange_details, json[QString("subExchangeDetails")]);
    m_sub_exchange_details_isSet = !json[QString("subExchangeDetails")].isNull() && m_sub_exchange_details_isValid;

    m_targeting_type_isValid = ::OpenAPI::fromJsonValue(m_targeting_type, json[QString("targetingType")]);
    m_targeting_type_isSet = !json[QString("targetingType")].isNull() && m_targeting_type_isValid;

    m_third_party_verifier_details_isValid = ::OpenAPI::fromJsonValue(m_third_party_verifier_details, json[QString("thirdPartyVerifierDetails")]);
    m_third_party_verifier_details_isSet = !json[QString("thirdPartyVerifierDetails")].isNull() && m_third_party_verifier_details_isValid;

    m_url_details_isValid = ::OpenAPI::fromJsonValue(m_url_details, json[QString("urlDetails")]);
    m_url_details_isSet = !json[QString("urlDetails")].isNull() && m_url_details_isValid;

    m_user_rewarded_content_details_isValid = ::OpenAPI::fromJsonValue(m_user_rewarded_content_details, json[QString("userRewardedContentDetails")]);
    m_user_rewarded_content_details_isSet = !json[QString("userRewardedContentDetails")].isNull() && m_user_rewarded_content_details_isValid;

    m_video_player_size_details_isValid = ::OpenAPI::fromJsonValue(m_video_player_size_details, json[QString("videoPlayerSizeDetails")]);
    m_video_player_size_details_isSet = !json[QString("videoPlayerSizeDetails")].isNull() && m_video_player_size_details_isValid;

    m_viewability_details_isValid = ::OpenAPI::fromJsonValue(m_viewability_details, json[QString("viewabilityDetails")]);
    m_viewability_details_isSet = !json[QString("viewabilityDetails")].isNull() && m_viewability_details_isValid;

    m_youtube_channel_details_isValid = ::OpenAPI::fromJsonValue(m_youtube_channel_details, json[QString("youtubeChannelDetails")]);
    m_youtube_channel_details_isSet = !json[QString("youtubeChannelDetails")].isNull() && m_youtube_channel_details_isValid;

    m_youtube_video_details_isValid = ::OpenAPI::fromJsonValue(m_youtube_video_details, json[QString("youtubeVideoDetails")]);
    m_youtube_video_details_isSet = !json[QString("youtubeVideoDetails")].isNull() && m_youtube_video_details_isValid;
}

QString OAIAssignedTargetingOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssignedTargetingOption::asJsonObject() const {
    QJsonObject obj;
    if (m_age_range_details.isSet()) {
        obj.insert(QString("ageRangeDetails"), ::OpenAPI::toJsonValue(m_age_range_details));
    }
    if (m_app_category_details.isSet()) {
        obj.insert(QString("appCategoryDetails"), ::OpenAPI::toJsonValue(m_app_category_details));
    }
    if (m_app_details.isSet()) {
        obj.insert(QString("appDetails"), ::OpenAPI::toJsonValue(m_app_details));
    }
    if (m_assigned_targeting_option_id_isSet) {
        obj.insert(QString("assignedTargetingOptionId"), ::OpenAPI::toJsonValue(m_assigned_targeting_option_id));
    }
    if (m_assigned_targeting_option_id_alias_isSet) {
        obj.insert(QString("assignedTargetingOptionIdAlias"), ::OpenAPI::toJsonValue(m_assigned_targeting_option_id_alias));
    }
    if (m_audience_group_details.isSet()) {
        obj.insert(QString("audienceGroupDetails"), ::OpenAPI::toJsonValue(m_audience_group_details));
    }
    if (m_audio_content_type_details.isSet()) {
        obj.insert(QString("audioContentTypeDetails"), ::OpenAPI::toJsonValue(m_audio_content_type_details));
    }
    if (m_authorized_seller_status_details.isSet()) {
        obj.insert(QString("authorizedSellerStatusDetails"), ::OpenAPI::toJsonValue(m_authorized_seller_status_details));
    }
    if (m_browser_details.isSet()) {
        obj.insert(QString("browserDetails"), ::OpenAPI::toJsonValue(m_browser_details));
    }
    if (m_business_chain_details.isSet()) {
        obj.insert(QString("businessChainDetails"), ::OpenAPI::toJsonValue(m_business_chain_details));
    }
    if (m_carrier_and_isp_details.isSet()) {
        obj.insert(QString("carrierAndIspDetails"), ::OpenAPI::toJsonValue(m_carrier_and_isp_details));
    }
    if (m_category_details.isSet()) {
        obj.insert(QString("categoryDetails"), ::OpenAPI::toJsonValue(m_category_details));
    }
    if (m_channel_details.isSet()) {
        obj.insert(QString("channelDetails"), ::OpenAPI::toJsonValue(m_channel_details));
    }
    if (m_content_duration_details.isSet()) {
        obj.insert(QString("contentDurationDetails"), ::OpenAPI::toJsonValue(m_content_duration_details));
    }
    if (m_content_genre_details.isSet()) {
        obj.insert(QString("contentGenreDetails"), ::OpenAPI::toJsonValue(m_content_genre_details));
    }
    if (m_content_instream_position_details.isSet()) {
        obj.insert(QString("contentInstreamPositionDetails"), ::OpenAPI::toJsonValue(m_content_instream_position_details));
    }
    if (m_content_outstream_position_details.isSet()) {
        obj.insert(QString("contentOutstreamPositionDetails"), ::OpenAPI::toJsonValue(m_content_outstream_position_details));
    }
    if (m_content_stream_type_details.isSet()) {
        obj.insert(QString("contentStreamTypeDetails"), ::OpenAPI::toJsonValue(m_content_stream_type_details));
    }
    if (m_day_and_time_details.isSet()) {
        obj.insert(QString("dayAndTimeDetails"), ::OpenAPI::toJsonValue(m_day_and_time_details));
    }
    if (m_device_make_model_details.isSet()) {
        obj.insert(QString("deviceMakeModelDetails"), ::OpenAPI::toJsonValue(m_device_make_model_details));
    }
    if (m_device_type_details.isSet()) {
        obj.insert(QString("deviceTypeDetails"), ::OpenAPI::toJsonValue(m_device_type_details));
    }
    if (m_digital_content_label_exclusion_details.isSet()) {
        obj.insert(QString("digitalContentLabelExclusionDetails"), ::OpenAPI::toJsonValue(m_digital_content_label_exclusion_details));
    }
    if (m_environment_details.isSet()) {
        obj.insert(QString("environmentDetails"), ::OpenAPI::toJsonValue(m_environment_details));
    }
    if (m_exchange_details.isSet()) {
        obj.insert(QString("exchangeDetails"), ::OpenAPI::toJsonValue(m_exchange_details));
    }
    if (m_gender_details.isSet()) {
        obj.insert(QString("genderDetails"), ::OpenAPI::toJsonValue(m_gender_details));
    }
    if (m_geo_region_details.isSet()) {
        obj.insert(QString("geoRegionDetails"), ::OpenAPI::toJsonValue(m_geo_region_details));
    }
    if (m_household_income_details.isSet()) {
        obj.insert(QString("householdIncomeDetails"), ::OpenAPI::toJsonValue(m_household_income_details));
    }
    if (m_inheritance_isSet) {
        obj.insert(QString("inheritance"), ::OpenAPI::toJsonValue(m_inheritance));
    }
    if (m_inventory_source_details.isSet()) {
        obj.insert(QString("inventorySourceDetails"), ::OpenAPI::toJsonValue(m_inventory_source_details));
    }
    if (m_inventory_source_group_details.isSet()) {
        obj.insert(QString("inventorySourceGroupDetails"), ::OpenAPI::toJsonValue(m_inventory_source_group_details));
    }
    if (m_keyword_details.isSet()) {
        obj.insert(QString("keywordDetails"), ::OpenAPI::toJsonValue(m_keyword_details));
    }
    if (m_language_details.isSet()) {
        obj.insert(QString("languageDetails"), ::OpenAPI::toJsonValue(m_language_details));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_native_content_position_details.isSet()) {
        obj.insert(QString("nativeContentPositionDetails"), ::OpenAPI::toJsonValue(m_native_content_position_details));
    }
    if (m_negative_keyword_list_details.isSet()) {
        obj.insert(QString("negativeKeywordListDetails"), ::OpenAPI::toJsonValue(m_negative_keyword_list_details));
    }
    if (m_omid_details.isSet()) {
        obj.insert(QString("omidDetails"), ::OpenAPI::toJsonValue(m_omid_details));
    }
    if (m_on_screen_position_details.isSet()) {
        obj.insert(QString("onScreenPositionDetails"), ::OpenAPI::toJsonValue(m_on_screen_position_details));
    }
    if (m_operating_system_details.isSet()) {
        obj.insert(QString("operatingSystemDetails"), ::OpenAPI::toJsonValue(m_operating_system_details));
    }
    if (m_parental_status_details.isSet()) {
        obj.insert(QString("parentalStatusDetails"), ::OpenAPI::toJsonValue(m_parental_status_details));
    }
    if (m_poi_details.isSet()) {
        obj.insert(QString("poiDetails"), ::OpenAPI::toJsonValue(m_poi_details));
    }
    if (m_proximity_location_list_details.isSet()) {
        obj.insert(QString("proximityLocationListDetails"), ::OpenAPI::toJsonValue(m_proximity_location_list_details));
    }
    if (m_regional_location_list_details.isSet()) {
        obj.insert(QString("regionalLocationListDetails"), ::OpenAPI::toJsonValue(m_regional_location_list_details));
    }
    if (m_sensitive_category_exclusion_details.isSet()) {
        obj.insert(QString("sensitiveCategoryExclusionDetails"), ::OpenAPI::toJsonValue(m_sensitive_category_exclusion_details));
    }
    if (m_session_position_details.isSet()) {
        obj.insert(QString("sessionPositionDetails"), ::OpenAPI::toJsonValue(m_session_position_details));
    }
    if (m_sub_exchange_details.isSet()) {
        obj.insert(QString("subExchangeDetails"), ::OpenAPI::toJsonValue(m_sub_exchange_details));
    }
    if (m_targeting_type_isSet) {
        obj.insert(QString("targetingType"), ::OpenAPI::toJsonValue(m_targeting_type));
    }
    if (m_third_party_verifier_details.isSet()) {
        obj.insert(QString("thirdPartyVerifierDetails"), ::OpenAPI::toJsonValue(m_third_party_verifier_details));
    }
    if (m_url_details.isSet()) {
        obj.insert(QString("urlDetails"), ::OpenAPI::toJsonValue(m_url_details));
    }
    if (m_user_rewarded_content_details.isSet()) {
        obj.insert(QString("userRewardedContentDetails"), ::OpenAPI::toJsonValue(m_user_rewarded_content_details));
    }
    if (m_video_player_size_details.isSet()) {
        obj.insert(QString("videoPlayerSizeDetails"), ::OpenAPI::toJsonValue(m_video_player_size_details));
    }
    if (m_viewability_details.isSet()) {
        obj.insert(QString("viewabilityDetails"), ::OpenAPI::toJsonValue(m_viewability_details));
    }
    if (m_youtube_channel_details.isSet()) {
        obj.insert(QString("youtubeChannelDetails"), ::OpenAPI::toJsonValue(m_youtube_channel_details));
    }
    if (m_youtube_video_details.isSet()) {
        obj.insert(QString("youtubeVideoDetails"), ::OpenAPI::toJsonValue(m_youtube_video_details));
    }
    return obj;
}

OAIAgeRangeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getAgeRangeDetails() const {
    return m_age_range_details;
}
void OAIAssignedTargetingOption::setAgeRangeDetails(const OAIAgeRangeAssignedTargetingOptionDetails &age_range_details) {
    m_age_range_details = age_range_details;
    m_age_range_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_age_range_details_Set() const{
    return m_age_range_details_isSet;
}

bool OAIAssignedTargetingOption::is_age_range_details_Valid() const{
    return m_age_range_details_isValid;
}

OAIAppCategoryAssignedTargetingOptionDetails OAIAssignedTargetingOption::getAppCategoryDetails() const {
    return m_app_category_details;
}
void OAIAssignedTargetingOption::setAppCategoryDetails(const OAIAppCategoryAssignedTargetingOptionDetails &app_category_details) {
    m_app_category_details = app_category_details;
    m_app_category_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_app_category_details_Set() const{
    return m_app_category_details_isSet;
}

bool OAIAssignedTargetingOption::is_app_category_details_Valid() const{
    return m_app_category_details_isValid;
}

OAIAppAssignedTargetingOptionDetails OAIAssignedTargetingOption::getAppDetails() const {
    return m_app_details;
}
void OAIAssignedTargetingOption::setAppDetails(const OAIAppAssignedTargetingOptionDetails &app_details) {
    m_app_details = app_details;
    m_app_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_app_details_Set() const{
    return m_app_details_isSet;
}

bool OAIAssignedTargetingOption::is_app_details_Valid() const{
    return m_app_details_isValid;
}

QString OAIAssignedTargetingOption::getAssignedTargetingOptionId() const {
    return m_assigned_targeting_option_id;
}
void OAIAssignedTargetingOption::setAssignedTargetingOptionId(const QString &assigned_targeting_option_id) {
    m_assigned_targeting_option_id = assigned_targeting_option_id;
    m_assigned_targeting_option_id_isSet = true;
}

bool OAIAssignedTargetingOption::is_assigned_targeting_option_id_Set() const{
    return m_assigned_targeting_option_id_isSet;
}

bool OAIAssignedTargetingOption::is_assigned_targeting_option_id_Valid() const{
    return m_assigned_targeting_option_id_isValid;
}

QString OAIAssignedTargetingOption::getAssignedTargetingOptionIdAlias() const {
    return m_assigned_targeting_option_id_alias;
}
void OAIAssignedTargetingOption::setAssignedTargetingOptionIdAlias(const QString &assigned_targeting_option_id_alias) {
    m_assigned_targeting_option_id_alias = assigned_targeting_option_id_alias;
    m_assigned_targeting_option_id_alias_isSet = true;
}

bool OAIAssignedTargetingOption::is_assigned_targeting_option_id_alias_Set() const{
    return m_assigned_targeting_option_id_alias_isSet;
}

bool OAIAssignedTargetingOption::is_assigned_targeting_option_id_alias_Valid() const{
    return m_assigned_targeting_option_id_alias_isValid;
}

OAIAudienceGroupAssignedTargetingOptionDetails OAIAssignedTargetingOption::getAudienceGroupDetails() const {
    return m_audience_group_details;
}
void OAIAssignedTargetingOption::setAudienceGroupDetails(const OAIAudienceGroupAssignedTargetingOptionDetails &audience_group_details) {
    m_audience_group_details = audience_group_details;
    m_audience_group_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_audience_group_details_Set() const{
    return m_audience_group_details_isSet;
}

bool OAIAssignedTargetingOption::is_audience_group_details_Valid() const{
    return m_audience_group_details_isValid;
}

OAIAudioContentTypeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getAudioContentTypeDetails() const {
    return m_audio_content_type_details;
}
void OAIAssignedTargetingOption::setAudioContentTypeDetails(const OAIAudioContentTypeAssignedTargetingOptionDetails &audio_content_type_details) {
    m_audio_content_type_details = audio_content_type_details;
    m_audio_content_type_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_audio_content_type_details_Set() const{
    return m_audio_content_type_details_isSet;
}

bool OAIAssignedTargetingOption::is_audio_content_type_details_Valid() const{
    return m_audio_content_type_details_isValid;
}

OAIAuthorizedSellerStatusAssignedTargetingOptionDetails OAIAssignedTargetingOption::getAuthorizedSellerStatusDetails() const {
    return m_authorized_seller_status_details;
}
void OAIAssignedTargetingOption::setAuthorizedSellerStatusDetails(const OAIAuthorizedSellerStatusAssignedTargetingOptionDetails &authorized_seller_status_details) {
    m_authorized_seller_status_details = authorized_seller_status_details;
    m_authorized_seller_status_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_authorized_seller_status_details_Set() const{
    return m_authorized_seller_status_details_isSet;
}

bool OAIAssignedTargetingOption::is_authorized_seller_status_details_Valid() const{
    return m_authorized_seller_status_details_isValid;
}

OAIBrowserAssignedTargetingOptionDetails OAIAssignedTargetingOption::getBrowserDetails() const {
    return m_browser_details;
}
void OAIAssignedTargetingOption::setBrowserDetails(const OAIBrowserAssignedTargetingOptionDetails &browser_details) {
    m_browser_details = browser_details;
    m_browser_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_browser_details_Set() const{
    return m_browser_details_isSet;
}

bool OAIAssignedTargetingOption::is_browser_details_Valid() const{
    return m_browser_details_isValid;
}

OAIBusinessChainAssignedTargetingOptionDetails OAIAssignedTargetingOption::getBusinessChainDetails() const {
    return m_business_chain_details;
}
void OAIAssignedTargetingOption::setBusinessChainDetails(const OAIBusinessChainAssignedTargetingOptionDetails &business_chain_details) {
    m_business_chain_details = business_chain_details;
    m_business_chain_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_business_chain_details_Set() const{
    return m_business_chain_details_isSet;
}

bool OAIAssignedTargetingOption::is_business_chain_details_Valid() const{
    return m_business_chain_details_isValid;
}

OAICarrierAndIspAssignedTargetingOptionDetails OAIAssignedTargetingOption::getCarrierAndIspDetails() const {
    return m_carrier_and_isp_details;
}
void OAIAssignedTargetingOption::setCarrierAndIspDetails(const OAICarrierAndIspAssignedTargetingOptionDetails &carrier_and_isp_details) {
    m_carrier_and_isp_details = carrier_and_isp_details;
    m_carrier_and_isp_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_carrier_and_isp_details_Set() const{
    return m_carrier_and_isp_details_isSet;
}

bool OAIAssignedTargetingOption::is_carrier_and_isp_details_Valid() const{
    return m_carrier_and_isp_details_isValid;
}

OAICategoryAssignedTargetingOptionDetails OAIAssignedTargetingOption::getCategoryDetails() const {
    return m_category_details;
}
void OAIAssignedTargetingOption::setCategoryDetails(const OAICategoryAssignedTargetingOptionDetails &category_details) {
    m_category_details = category_details;
    m_category_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_category_details_Set() const{
    return m_category_details_isSet;
}

bool OAIAssignedTargetingOption::is_category_details_Valid() const{
    return m_category_details_isValid;
}

OAIChannelAssignedTargetingOptionDetails OAIAssignedTargetingOption::getChannelDetails() const {
    return m_channel_details;
}
void OAIAssignedTargetingOption::setChannelDetails(const OAIChannelAssignedTargetingOptionDetails &channel_details) {
    m_channel_details = channel_details;
    m_channel_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_channel_details_Set() const{
    return m_channel_details_isSet;
}

bool OAIAssignedTargetingOption::is_channel_details_Valid() const{
    return m_channel_details_isValid;
}

OAIContentDurationAssignedTargetingOptionDetails OAIAssignedTargetingOption::getContentDurationDetails() const {
    return m_content_duration_details;
}
void OAIAssignedTargetingOption::setContentDurationDetails(const OAIContentDurationAssignedTargetingOptionDetails &content_duration_details) {
    m_content_duration_details = content_duration_details;
    m_content_duration_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_content_duration_details_Set() const{
    return m_content_duration_details_isSet;
}

bool OAIAssignedTargetingOption::is_content_duration_details_Valid() const{
    return m_content_duration_details_isValid;
}

OAIContentGenreAssignedTargetingOptionDetails OAIAssignedTargetingOption::getContentGenreDetails() const {
    return m_content_genre_details;
}
void OAIAssignedTargetingOption::setContentGenreDetails(const OAIContentGenreAssignedTargetingOptionDetails &content_genre_details) {
    m_content_genre_details = content_genre_details;
    m_content_genre_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_content_genre_details_Set() const{
    return m_content_genre_details_isSet;
}

bool OAIAssignedTargetingOption::is_content_genre_details_Valid() const{
    return m_content_genre_details_isValid;
}

OAIContentInstreamPositionAssignedTargetingOptionDetails OAIAssignedTargetingOption::getContentInstreamPositionDetails() const {
    return m_content_instream_position_details;
}
void OAIAssignedTargetingOption::setContentInstreamPositionDetails(const OAIContentInstreamPositionAssignedTargetingOptionDetails &content_instream_position_details) {
    m_content_instream_position_details = content_instream_position_details;
    m_content_instream_position_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_content_instream_position_details_Set() const{
    return m_content_instream_position_details_isSet;
}

bool OAIAssignedTargetingOption::is_content_instream_position_details_Valid() const{
    return m_content_instream_position_details_isValid;
}

OAIContentOutstreamPositionAssignedTargetingOptionDetails OAIAssignedTargetingOption::getContentOutstreamPositionDetails() const {
    return m_content_outstream_position_details;
}
void OAIAssignedTargetingOption::setContentOutstreamPositionDetails(const OAIContentOutstreamPositionAssignedTargetingOptionDetails &content_outstream_position_details) {
    m_content_outstream_position_details = content_outstream_position_details;
    m_content_outstream_position_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_content_outstream_position_details_Set() const{
    return m_content_outstream_position_details_isSet;
}

bool OAIAssignedTargetingOption::is_content_outstream_position_details_Valid() const{
    return m_content_outstream_position_details_isValid;
}

OAIContentStreamTypeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getContentStreamTypeDetails() const {
    return m_content_stream_type_details;
}
void OAIAssignedTargetingOption::setContentStreamTypeDetails(const OAIContentStreamTypeAssignedTargetingOptionDetails &content_stream_type_details) {
    m_content_stream_type_details = content_stream_type_details;
    m_content_stream_type_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_content_stream_type_details_Set() const{
    return m_content_stream_type_details_isSet;
}

bool OAIAssignedTargetingOption::is_content_stream_type_details_Valid() const{
    return m_content_stream_type_details_isValid;
}

OAIDayAndTimeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getDayAndTimeDetails() const {
    return m_day_and_time_details;
}
void OAIAssignedTargetingOption::setDayAndTimeDetails(const OAIDayAndTimeAssignedTargetingOptionDetails &day_and_time_details) {
    m_day_and_time_details = day_and_time_details;
    m_day_and_time_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_day_and_time_details_Set() const{
    return m_day_and_time_details_isSet;
}

bool OAIAssignedTargetingOption::is_day_and_time_details_Valid() const{
    return m_day_and_time_details_isValid;
}

OAIDeviceMakeModelAssignedTargetingOptionDetails OAIAssignedTargetingOption::getDeviceMakeModelDetails() const {
    return m_device_make_model_details;
}
void OAIAssignedTargetingOption::setDeviceMakeModelDetails(const OAIDeviceMakeModelAssignedTargetingOptionDetails &device_make_model_details) {
    m_device_make_model_details = device_make_model_details;
    m_device_make_model_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_device_make_model_details_Set() const{
    return m_device_make_model_details_isSet;
}

bool OAIAssignedTargetingOption::is_device_make_model_details_Valid() const{
    return m_device_make_model_details_isValid;
}

OAIDeviceTypeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getDeviceTypeDetails() const {
    return m_device_type_details;
}
void OAIAssignedTargetingOption::setDeviceTypeDetails(const OAIDeviceTypeAssignedTargetingOptionDetails &device_type_details) {
    m_device_type_details = device_type_details;
    m_device_type_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_device_type_details_Set() const{
    return m_device_type_details_isSet;
}

bool OAIAssignedTargetingOption::is_device_type_details_Valid() const{
    return m_device_type_details_isValid;
}

OAIDigitalContentLabelAssignedTargetingOptionDetails OAIAssignedTargetingOption::getDigitalContentLabelExclusionDetails() const {
    return m_digital_content_label_exclusion_details;
}
void OAIAssignedTargetingOption::setDigitalContentLabelExclusionDetails(const OAIDigitalContentLabelAssignedTargetingOptionDetails &digital_content_label_exclusion_details) {
    m_digital_content_label_exclusion_details = digital_content_label_exclusion_details;
    m_digital_content_label_exclusion_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_digital_content_label_exclusion_details_Set() const{
    return m_digital_content_label_exclusion_details_isSet;
}

bool OAIAssignedTargetingOption::is_digital_content_label_exclusion_details_Valid() const{
    return m_digital_content_label_exclusion_details_isValid;
}

OAIEnvironmentAssignedTargetingOptionDetails OAIAssignedTargetingOption::getEnvironmentDetails() const {
    return m_environment_details;
}
void OAIAssignedTargetingOption::setEnvironmentDetails(const OAIEnvironmentAssignedTargetingOptionDetails &environment_details) {
    m_environment_details = environment_details;
    m_environment_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_environment_details_Set() const{
    return m_environment_details_isSet;
}

bool OAIAssignedTargetingOption::is_environment_details_Valid() const{
    return m_environment_details_isValid;
}

OAIExchangeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getExchangeDetails() const {
    return m_exchange_details;
}
void OAIAssignedTargetingOption::setExchangeDetails(const OAIExchangeAssignedTargetingOptionDetails &exchange_details) {
    m_exchange_details = exchange_details;
    m_exchange_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_exchange_details_Set() const{
    return m_exchange_details_isSet;
}

bool OAIAssignedTargetingOption::is_exchange_details_Valid() const{
    return m_exchange_details_isValid;
}

OAIGenderAssignedTargetingOptionDetails OAIAssignedTargetingOption::getGenderDetails() const {
    return m_gender_details;
}
void OAIAssignedTargetingOption::setGenderDetails(const OAIGenderAssignedTargetingOptionDetails &gender_details) {
    m_gender_details = gender_details;
    m_gender_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_gender_details_Set() const{
    return m_gender_details_isSet;
}

bool OAIAssignedTargetingOption::is_gender_details_Valid() const{
    return m_gender_details_isValid;
}

OAIGeoRegionAssignedTargetingOptionDetails OAIAssignedTargetingOption::getGeoRegionDetails() const {
    return m_geo_region_details;
}
void OAIAssignedTargetingOption::setGeoRegionDetails(const OAIGeoRegionAssignedTargetingOptionDetails &geo_region_details) {
    m_geo_region_details = geo_region_details;
    m_geo_region_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_geo_region_details_Set() const{
    return m_geo_region_details_isSet;
}

bool OAIAssignedTargetingOption::is_geo_region_details_Valid() const{
    return m_geo_region_details_isValid;
}

OAIHouseholdIncomeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getHouseholdIncomeDetails() const {
    return m_household_income_details;
}
void OAIAssignedTargetingOption::setHouseholdIncomeDetails(const OAIHouseholdIncomeAssignedTargetingOptionDetails &household_income_details) {
    m_household_income_details = household_income_details;
    m_household_income_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_household_income_details_Set() const{
    return m_household_income_details_isSet;
}

bool OAIAssignedTargetingOption::is_household_income_details_Valid() const{
    return m_household_income_details_isValid;
}

QString OAIAssignedTargetingOption::getInheritance() const {
    return m_inheritance;
}
void OAIAssignedTargetingOption::setInheritance(const QString &inheritance) {
    m_inheritance = inheritance;
    m_inheritance_isSet = true;
}

bool OAIAssignedTargetingOption::is_inheritance_Set() const{
    return m_inheritance_isSet;
}

bool OAIAssignedTargetingOption::is_inheritance_Valid() const{
    return m_inheritance_isValid;
}

OAIInventorySourceAssignedTargetingOptionDetails OAIAssignedTargetingOption::getInventorySourceDetails() const {
    return m_inventory_source_details;
}
void OAIAssignedTargetingOption::setInventorySourceDetails(const OAIInventorySourceAssignedTargetingOptionDetails &inventory_source_details) {
    m_inventory_source_details = inventory_source_details;
    m_inventory_source_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_inventory_source_details_Set() const{
    return m_inventory_source_details_isSet;
}

bool OAIAssignedTargetingOption::is_inventory_source_details_Valid() const{
    return m_inventory_source_details_isValid;
}

OAIInventorySourceGroupAssignedTargetingOptionDetails OAIAssignedTargetingOption::getInventorySourceGroupDetails() const {
    return m_inventory_source_group_details;
}
void OAIAssignedTargetingOption::setInventorySourceGroupDetails(const OAIInventorySourceGroupAssignedTargetingOptionDetails &inventory_source_group_details) {
    m_inventory_source_group_details = inventory_source_group_details;
    m_inventory_source_group_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_inventory_source_group_details_Set() const{
    return m_inventory_source_group_details_isSet;
}

bool OAIAssignedTargetingOption::is_inventory_source_group_details_Valid() const{
    return m_inventory_source_group_details_isValid;
}

OAIKeywordAssignedTargetingOptionDetails OAIAssignedTargetingOption::getKeywordDetails() const {
    return m_keyword_details;
}
void OAIAssignedTargetingOption::setKeywordDetails(const OAIKeywordAssignedTargetingOptionDetails &keyword_details) {
    m_keyword_details = keyword_details;
    m_keyword_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_keyword_details_Set() const{
    return m_keyword_details_isSet;
}

bool OAIAssignedTargetingOption::is_keyword_details_Valid() const{
    return m_keyword_details_isValid;
}

OAILanguageAssignedTargetingOptionDetails OAIAssignedTargetingOption::getLanguageDetails() const {
    return m_language_details;
}
void OAIAssignedTargetingOption::setLanguageDetails(const OAILanguageAssignedTargetingOptionDetails &language_details) {
    m_language_details = language_details;
    m_language_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_language_details_Set() const{
    return m_language_details_isSet;
}

bool OAIAssignedTargetingOption::is_language_details_Valid() const{
    return m_language_details_isValid;
}

QString OAIAssignedTargetingOption::getName() const {
    return m_name;
}
void OAIAssignedTargetingOption::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAssignedTargetingOption::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAssignedTargetingOption::is_name_Valid() const{
    return m_name_isValid;
}

OAINativeContentPositionAssignedTargetingOptionDetails OAIAssignedTargetingOption::getNativeContentPositionDetails() const {
    return m_native_content_position_details;
}
void OAIAssignedTargetingOption::setNativeContentPositionDetails(const OAINativeContentPositionAssignedTargetingOptionDetails &native_content_position_details) {
    m_native_content_position_details = native_content_position_details;
    m_native_content_position_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_native_content_position_details_Set() const{
    return m_native_content_position_details_isSet;
}

bool OAIAssignedTargetingOption::is_native_content_position_details_Valid() const{
    return m_native_content_position_details_isValid;
}

OAINegativeKeywordListAssignedTargetingOptionDetails OAIAssignedTargetingOption::getNegativeKeywordListDetails() const {
    return m_negative_keyword_list_details;
}
void OAIAssignedTargetingOption::setNegativeKeywordListDetails(const OAINegativeKeywordListAssignedTargetingOptionDetails &negative_keyword_list_details) {
    m_negative_keyword_list_details = negative_keyword_list_details;
    m_negative_keyword_list_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_negative_keyword_list_details_Set() const{
    return m_negative_keyword_list_details_isSet;
}

bool OAIAssignedTargetingOption::is_negative_keyword_list_details_Valid() const{
    return m_negative_keyword_list_details_isValid;
}

OAIOmidAssignedTargetingOptionDetails OAIAssignedTargetingOption::getOmidDetails() const {
    return m_omid_details;
}
void OAIAssignedTargetingOption::setOmidDetails(const OAIOmidAssignedTargetingOptionDetails &omid_details) {
    m_omid_details = omid_details;
    m_omid_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_omid_details_Set() const{
    return m_omid_details_isSet;
}

bool OAIAssignedTargetingOption::is_omid_details_Valid() const{
    return m_omid_details_isValid;
}

OAIOnScreenPositionAssignedTargetingOptionDetails OAIAssignedTargetingOption::getOnScreenPositionDetails() const {
    return m_on_screen_position_details;
}
void OAIAssignedTargetingOption::setOnScreenPositionDetails(const OAIOnScreenPositionAssignedTargetingOptionDetails &on_screen_position_details) {
    m_on_screen_position_details = on_screen_position_details;
    m_on_screen_position_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_on_screen_position_details_Set() const{
    return m_on_screen_position_details_isSet;
}

bool OAIAssignedTargetingOption::is_on_screen_position_details_Valid() const{
    return m_on_screen_position_details_isValid;
}

OAIOperatingSystemAssignedTargetingOptionDetails OAIAssignedTargetingOption::getOperatingSystemDetails() const {
    return m_operating_system_details;
}
void OAIAssignedTargetingOption::setOperatingSystemDetails(const OAIOperatingSystemAssignedTargetingOptionDetails &operating_system_details) {
    m_operating_system_details = operating_system_details;
    m_operating_system_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_operating_system_details_Set() const{
    return m_operating_system_details_isSet;
}

bool OAIAssignedTargetingOption::is_operating_system_details_Valid() const{
    return m_operating_system_details_isValid;
}

OAIParentalStatusAssignedTargetingOptionDetails OAIAssignedTargetingOption::getParentalStatusDetails() const {
    return m_parental_status_details;
}
void OAIAssignedTargetingOption::setParentalStatusDetails(const OAIParentalStatusAssignedTargetingOptionDetails &parental_status_details) {
    m_parental_status_details = parental_status_details;
    m_parental_status_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_parental_status_details_Set() const{
    return m_parental_status_details_isSet;
}

bool OAIAssignedTargetingOption::is_parental_status_details_Valid() const{
    return m_parental_status_details_isValid;
}

OAIPoiAssignedTargetingOptionDetails OAIAssignedTargetingOption::getPoiDetails() const {
    return m_poi_details;
}
void OAIAssignedTargetingOption::setPoiDetails(const OAIPoiAssignedTargetingOptionDetails &poi_details) {
    m_poi_details = poi_details;
    m_poi_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_poi_details_Set() const{
    return m_poi_details_isSet;
}

bool OAIAssignedTargetingOption::is_poi_details_Valid() const{
    return m_poi_details_isValid;
}

OAIProximityLocationListAssignedTargetingOptionDetails OAIAssignedTargetingOption::getProximityLocationListDetails() const {
    return m_proximity_location_list_details;
}
void OAIAssignedTargetingOption::setProximityLocationListDetails(const OAIProximityLocationListAssignedTargetingOptionDetails &proximity_location_list_details) {
    m_proximity_location_list_details = proximity_location_list_details;
    m_proximity_location_list_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_proximity_location_list_details_Set() const{
    return m_proximity_location_list_details_isSet;
}

bool OAIAssignedTargetingOption::is_proximity_location_list_details_Valid() const{
    return m_proximity_location_list_details_isValid;
}

OAIRegionalLocationListAssignedTargetingOptionDetails OAIAssignedTargetingOption::getRegionalLocationListDetails() const {
    return m_regional_location_list_details;
}
void OAIAssignedTargetingOption::setRegionalLocationListDetails(const OAIRegionalLocationListAssignedTargetingOptionDetails &regional_location_list_details) {
    m_regional_location_list_details = regional_location_list_details;
    m_regional_location_list_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_regional_location_list_details_Set() const{
    return m_regional_location_list_details_isSet;
}

bool OAIAssignedTargetingOption::is_regional_location_list_details_Valid() const{
    return m_regional_location_list_details_isValid;
}

OAISensitiveCategoryAssignedTargetingOptionDetails OAIAssignedTargetingOption::getSensitiveCategoryExclusionDetails() const {
    return m_sensitive_category_exclusion_details;
}
void OAIAssignedTargetingOption::setSensitiveCategoryExclusionDetails(const OAISensitiveCategoryAssignedTargetingOptionDetails &sensitive_category_exclusion_details) {
    m_sensitive_category_exclusion_details = sensitive_category_exclusion_details;
    m_sensitive_category_exclusion_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_sensitive_category_exclusion_details_Set() const{
    return m_sensitive_category_exclusion_details_isSet;
}

bool OAIAssignedTargetingOption::is_sensitive_category_exclusion_details_Valid() const{
    return m_sensitive_category_exclusion_details_isValid;
}

OAISessionPositionAssignedTargetingOptionDetails OAIAssignedTargetingOption::getSessionPositionDetails() const {
    return m_session_position_details;
}
void OAIAssignedTargetingOption::setSessionPositionDetails(const OAISessionPositionAssignedTargetingOptionDetails &session_position_details) {
    m_session_position_details = session_position_details;
    m_session_position_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_session_position_details_Set() const{
    return m_session_position_details_isSet;
}

bool OAIAssignedTargetingOption::is_session_position_details_Valid() const{
    return m_session_position_details_isValid;
}

OAISubExchangeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getSubExchangeDetails() const {
    return m_sub_exchange_details;
}
void OAIAssignedTargetingOption::setSubExchangeDetails(const OAISubExchangeAssignedTargetingOptionDetails &sub_exchange_details) {
    m_sub_exchange_details = sub_exchange_details;
    m_sub_exchange_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_sub_exchange_details_Set() const{
    return m_sub_exchange_details_isSet;
}

bool OAIAssignedTargetingOption::is_sub_exchange_details_Valid() const{
    return m_sub_exchange_details_isValid;
}

QString OAIAssignedTargetingOption::getTargetingType() const {
    return m_targeting_type;
}
void OAIAssignedTargetingOption::setTargetingType(const QString &targeting_type) {
    m_targeting_type = targeting_type;
    m_targeting_type_isSet = true;
}

bool OAIAssignedTargetingOption::is_targeting_type_Set() const{
    return m_targeting_type_isSet;
}

bool OAIAssignedTargetingOption::is_targeting_type_Valid() const{
    return m_targeting_type_isValid;
}

OAIThirdPartyVerifierAssignedTargetingOptionDetails OAIAssignedTargetingOption::getThirdPartyVerifierDetails() const {
    return m_third_party_verifier_details;
}
void OAIAssignedTargetingOption::setThirdPartyVerifierDetails(const OAIThirdPartyVerifierAssignedTargetingOptionDetails &third_party_verifier_details) {
    m_third_party_verifier_details = third_party_verifier_details;
    m_third_party_verifier_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_third_party_verifier_details_Set() const{
    return m_third_party_verifier_details_isSet;
}

bool OAIAssignedTargetingOption::is_third_party_verifier_details_Valid() const{
    return m_third_party_verifier_details_isValid;
}

OAIUrlAssignedTargetingOptionDetails OAIAssignedTargetingOption::getUrlDetails() const {
    return m_url_details;
}
void OAIAssignedTargetingOption::setUrlDetails(const OAIUrlAssignedTargetingOptionDetails &url_details) {
    m_url_details = url_details;
    m_url_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_url_details_Set() const{
    return m_url_details_isSet;
}

bool OAIAssignedTargetingOption::is_url_details_Valid() const{
    return m_url_details_isValid;
}

OAIUserRewardedContentAssignedTargetingOptionDetails OAIAssignedTargetingOption::getUserRewardedContentDetails() const {
    return m_user_rewarded_content_details;
}
void OAIAssignedTargetingOption::setUserRewardedContentDetails(const OAIUserRewardedContentAssignedTargetingOptionDetails &user_rewarded_content_details) {
    m_user_rewarded_content_details = user_rewarded_content_details;
    m_user_rewarded_content_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_user_rewarded_content_details_Set() const{
    return m_user_rewarded_content_details_isSet;
}

bool OAIAssignedTargetingOption::is_user_rewarded_content_details_Valid() const{
    return m_user_rewarded_content_details_isValid;
}

OAIVideoPlayerSizeAssignedTargetingOptionDetails OAIAssignedTargetingOption::getVideoPlayerSizeDetails() const {
    return m_video_player_size_details;
}
void OAIAssignedTargetingOption::setVideoPlayerSizeDetails(const OAIVideoPlayerSizeAssignedTargetingOptionDetails &video_player_size_details) {
    m_video_player_size_details = video_player_size_details;
    m_video_player_size_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_video_player_size_details_Set() const{
    return m_video_player_size_details_isSet;
}

bool OAIAssignedTargetingOption::is_video_player_size_details_Valid() const{
    return m_video_player_size_details_isValid;
}

OAIViewabilityAssignedTargetingOptionDetails OAIAssignedTargetingOption::getViewabilityDetails() const {
    return m_viewability_details;
}
void OAIAssignedTargetingOption::setViewabilityDetails(const OAIViewabilityAssignedTargetingOptionDetails &viewability_details) {
    m_viewability_details = viewability_details;
    m_viewability_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_viewability_details_Set() const{
    return m_viewability_details_isSet;
}

bool OAIAssignedTargetingOption::is_viewability_details_Valid() const{
    return m_viewability_details_isValid;
}

OAIYoutubeChannelAssignedTargetingOptionDetails OAIAssignedTargetingOption::getYoutubeChannelDetails() const {
    return m_youtube_channel_details;
}
void OAIAssignedTargetingOption::setYoutubeChannelDetails(const OAIYoutubeChannelAssignedTargetingOptionDetails &youtube_channel_details) {
    m_youtube_channel_details = youtube_channel_details;
    m_youtube_channel_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_youtube_channel_details_Set() const{
    return m_youtube_channel_details_isSet;
}

bool OAIAssignedTargetingOption::is_youtube_channel_details_Valid() const{
    return m_youtube_channel_details_isValid;
}

OAIYoutubeVideoAssignedTargetingOptionDetails OAIAssignedTargetingOption::getYoutubeVideoDetails() const {
    return m_youtube_video_details;
}
void OAIAssignedTargetingOption::setYoutubeVideoDetails(const OAIYoutubeVideoAssignedTargetingOptionDetails &youtube_video_details) {
    m_youtube_video_details = youtube_video_details;
    m_youtube_video_details_isSet = true;
}

bool OAIAssignedTargetingOption::is_youtube_video_details_Set() const{
    return m_youtube_video_details_isSet;
}

bool OAIAssignedTargetingOption::is_youtube_video_details_Valid() const{
    return m_youtube_video_details_isValid;
}

bool OAIAssignedTargetingOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_age_range_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_category_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_assigned_targeting_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assigned_targeting_option_id_alias_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_audience_group_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_audio_content_type_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorized_seller_status_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_browser_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_chain_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_and_isp_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_duration_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_genre_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_instream_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_outstream_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_stream_type_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_day_and_time_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_make_model_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_type_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_digital_content_label_exclusion_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_geo_region_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_household_income_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inheritance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_source_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_source_group_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_keyword_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_native_content_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_negative_keyword_list_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_omid_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_screen_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_system_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parental_status_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_poi_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_proximity_location_list_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_regional_location_list_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitive_category_exclusion_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_exchange_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_third_party_verifier_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_rewarded_content_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_player_size_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_viewability_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_youtube_channel_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_youtube_video_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssignedTargetingOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
