/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactInfo::OAIContactInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactInfo::OAIContactInfo() {
    this->initializeModel();
}

OAIContactInfo::~OAIContactInfo() {}

void OAIContactInfo::initializeModel() {

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_hashed_emails_isSet = false;
    m_hashed_emails_isValid = false;

    m_hashed_first_name_isSet = false;
    m_hashed_first_name_isValid = false;

    m_hashed_last_name_isSet = false;
    m_hashed_last_name_isValid = false;

    m_hashed_phone_numbers_isSet = false;
    m_hashed_phone_numbers_isValid = false;

    m_zip_codes_isSet = false;
    m_zip_codes_isValid = false;
}

void OAIContactInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactInfo::fromJsonObject(QJsonObject json) {

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("countryCode")]);
    m_country_code_isSet = !json[QString("countryCode")].isNull() && m_country_code_isValid;

    m_hashed_emails_isValid = ::OpenAPI::fromJsonValue(m_hashed_emails, json[QString("hashedEmails")]);
    m_hashed_emails_isSet = !json[QString("hashedEmails")].isNull() && m_hashed_emails_isValid;

    m_hashed_first_name_isValid = ::OpenAPI::fromJsonValue(m_hashed_first_name, json[QString("hashedFirstName")]);
    m_hashed_first_name_isSet = !json[QString("hashedFirstName")].isNull() && m_hashed_first_name_isValid;

    m_hashed_last_name_isValid = ::OpenAPI::fromJsonValue(m_hashed_last_name, json[QString("hashedLastName")]);
    m_hashed_last_name_isSet = !json[QString("hashedLastName")].isNull() && m_hashed_last_name_isValid;

    m_hashed_phone_numbers_isValid = ::OpenAPI::fromJsonValue(m_hashed_phone_numbers, json[QString("hashedPhoneNumbers")]);
    m_hashed_phone_numbers_isSet = !json[QString("hashedPhoneNumbers")].isNull() && m_hashed_phone_numbers_isValid;

    m_zip_codes_isValid = ::OpenAPI::fromJsonValue(m_zip_codes, json[QString("zipCodes")]);
    m_zip_codes_isSet = !json[QString("zipCodes")].isNull() && m_zip_codes_isValid;
}

QString OAIContactInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_country_code_isSet) {
        obj.insert(QString("countryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_hashed_emails.size() > 0) {
        obj.insert(QString("hashedEmails"), ::OpenAPI::toJsonValue(m_hashed_emails));
    }
    if (m_hashed_first_name_isSet) {
        obj.insert(QString("hashedFirstName"), ::OpenAPI::toJsonValue(m_hashed_first_name));
    }
    if (m_hashed_last_name_isSet) {
        obj.insert(QString("hashedLastName"), ::OpenAPI::toJsonValue(m_hashed_last_name));
    }
    if (m_hashed_phone_numbers.size() > 0) {
        obj.insert(QString("hashedPhoneNumbers"), ::OpenAPI::toJsonValue(m_hashed_phone_numbers));
    }
    if (m_zip_codes.size() > 0) {
        obj.insert(QString("zipCodes"), ::OpenAPI::toJsonValue(m_zip_codes));
    }
    return obj;
}

QString OAIContactInfo::getCountryCode() const {
    return m_country_code;
}
void OAIContactInfo::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAIContactInfo::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAIContactInfo::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QList<QString> OAIContactInfo::getHashedEmails() const {
    return m_hashed_emails;
}
void OAIContactInfo::setHashedEmails(const QList<QString> &hashed_emails) {
    m_hashed_emails = hashed_emails;
    m_hashed_emails_isSet = true;
}

bool OAIContactInfo::is_hashed_emails_Set() const{
    return m_hashed_emails_isSet;
}

bool OAIContactInfo::is_hashed_emails_Valid() const{
    return m_hashed_emails_isValid;
}

QString OAIContactInfo::getHashedFirstName() const {
    return m_hashed_first_name;
}
void OAIContactInfo::setHashedFirstName(const QString &hashed_first_name) {
    m_hashed_first_name = hashed_first_name;
    m_hashed_first_name_isSet = true;
}

bool OAIContactInfo::is_hashed_first_name_Set() const{
    return m_hashed_first_name_isSet;
}

bool OAIContactInfo::is_hashed_first_name_Valid() const{
    return m_hashed_first_name_isValid;
}

QString OAIContactInfo::getHashedLastName() const {
    return m_hashed_last_name;
}
void OAIContactInfo::setHashedLastName(const QString &hashed_last_name) {
    m_hashed_last_name = hashed_last_name;
    m_hashed_last_name_isSet = true;
}

bool OAIContactInfo::is_hashed_last_name_Set() const{
    return m_hashed_last_name_isSet;
}

bool OAIContactInfo::is_hashed_last_name_Valid() const{
    return m_hashed_last_name_isValid;
}

QList<QString> OAIContactInfo::getHashedPhoneNumbers() const {
    return m_hashed_phone_numbers;
}
void OAIContactInfo::setHashedPhoneNumbers(const QList<QString> &hashed_phone_numbers) {
    m_hashed_phone_numbers = hashed_phone_numbers;
    m_hashed_phone_numbers_isSet = true;
}

bool OAIContactInfo::is_hashed_phone_numbers_Set() const{
    return m_hashed_phone_numbers_isSet;
}

bool OAIContactInfo::is_hashed_phone_numbers_Valid() const{
    return m_hashed_phone_numbers_isValid;
}

QList<QString> OAIContactInfo::getZipCodes() const {
    return m_zip_codes;
}
void OAIContactInfo::setZipCodes(const QList<QString> &zip_codes) {
    m_zip_codes = zip_codes;
    m_zip_codes_isSet = true;
}

bool OAIContactInfo::is_zip_codes_Set() const{
    return m_zip_codes_isSet;
}

bool OAIContactInfo::is_zip_codes_Valid() const{
    return m_zip_codes_isValid;
}

bool OAIContactInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hashed_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hashed_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hashed_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hashed_phone_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
