/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMastheadAd.h
 *
 * Details for a Masthead Ad.
 */

#ifndef OAIMastheadAd_H
#define OAIMastheadAd_H

#include <QJsonObject>

#include "OAIYoutubeVideoDetails.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIYoutubeVideoDetails;

class OAIMastheadAd : public OAIObject {
public:
    OAIMastheadAd();
    OAIMastheadAd(QString json);
    ~OAIMastheadAd() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAutoplayVideoDuration() const;
    void setAutoplayVideoDuration(const QString &autoplay_video_duration);
    bool is_autoplay_video_duration_Set() const;
    bool is_autoplay_video_duration_Valid() const;

    QString getAutoplayVideoStartMillisecond() const;
    void setAutoplayVideoStartMillisecond(const QString &autoplay_video_start_millisecond);
    bool is_autoplay_video_start_millisecond_Set() const;
    bool is_autoplay_video_start_millisecond_Valid() const;

    QString getCallToActionButtonLabel() const;
    void setCallToActionButtonLabel(const QString &call_to_action_button_label);
    bool is_call_to_action_button_label_Set() const;
    bool is_call_to_action_button_label_Valid() const;

    QString getCallToActionFinalUrl() const;
    void setCallToActionFinalUrl(const QString &call_to_action_final_url);
    bool is_call_to_action_final_url_Set() const;
    bool is_call_to_action_final_url_Valid() const;

    QString getCallToActionTrackingUrl() const;
    void setCallToActionTrackingUrl(const QString &call_to_action_tracking_url);
    bool is_call_to_action_tracking_url_Set() const;
    bool is_call_to_action_tracking_url_Valid() const;

    QList<OAIYoutubeVideoDetails> getCompanionYoutubeVideos() const;
    void setCompanionYoutubeVideos(const QList<OAIYoutubeVideoDetails> &companion_youtube_videos);
    bool is_companion_youtube_videos_Set() const;
    bool is_companion_youtube_videos_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getHeadline() const;
    void setHeadline(const QString &headline);
    bool is_headline_Set() const;
    bool is_headline_Valid() const;

    bool isShowChannelArt() const;
    void setShowChannelArt(const bool &show_channel_art);
    bool is_show_channel_art_Set() const;
    bool is_show_channel_art_Valid() const;

    OAIYoutubeVideoDetails getVideo() const;
    void setVideo(const OAIYoutubeVideoDetails &video);
    bool is_video_Set() const;
    bool is_video_Valid() const;

    QString getVideoAspectRatio() const;
    void setVideoAspectRatio(const QString &video_aspect_ratio);
    bool is_video_aspect_ratio_Set() const;
    bool is_video_aspect_ratio_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_autoplay_video_duration;
    bool m_autoplay_video_duration_isSet;
    bool m_autoplay_video_duration_isValid;

    QString m_autoplay_video_start_millisecond;
    bool m_autoplay_video_start_millisecond_isSet;
    bool m_autoplay_video_start_millisecond_isValid;

    QString m_call_to_action_button_label;
    bool m_call_to_action_button_label_isSet;
    bool m_call_to_action_button_label_isValid;

    QString m_call_to_action_final_url;
    bool m_call_to_action_final_url_isSet;
    bool m_call_to_action_final_url_isValid;

    QString m_call_to_action_tracking_url;
    bool m_call_to_action_tracking_url_isSet;
    bool m_call_to_action_tracking_url_isValid;

    QList<OAIYoutubeVideoDetails> m_companion_youtube_videos;
    bool m_companion_youtube_videos_isSet;
    bool m_companion_youtube_videos_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_headline;
    bool m_headline_isSet;
    bool m_headline_isValid;

    bool m_show_channel_art;
    bool m_show_channel_art_isSet;
    bool m_show_channel_art_isValid;

    OAIYoutubeVideoDetails m_video;
    bool m_video_isSet;
    bool m_video_isValid;

    QString m_video_aspect_ratio;
    bool m_video_aspect_ratio_isSet;
    bool m_video_aspect_ratio_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMastheadAd)

#endif // OAIMastheadAd_H
