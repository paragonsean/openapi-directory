/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkEditAdvertiserAssignedTargetingOptionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::OAIBulkEditAdvertiserAssignedTargetingOptionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::OAIBulkEditAdvertiserAssignedTargetingOptionsResponse() {
    this->initializeModel();
}

OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::~OAIBulkEditAdvertiserAssignedTargetingOptionsResponse() {}

void OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::initializeModel() {

    m_created_assigned_targeting_options_isSet = false;
    m_created_assigned_targeting_options_isValid = false;
}

void OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::fromJsonObject(QJsonObject json) {

    m_created_assigned_targeting_options_isValid = ::OpenAPI::fromJsonValue(m_created_assigned_targeting_options, json[QString("createdAssignedTargetingOptions")]);
    m_created_assigned_targeting_options_isSet = !json[QString("createdAssignedTargetingOptions")].isNull() && m_created_assigned_targeting_options_isValid;
}

QString OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_created_assigned_targeting_options.size() > 0) {
        obj.insert(QString("createdAssignedTargetingOptions"), ::OpenAPI::toJsonValue(m_created_assigned_targeting_options));
    }
    return obj;
}

QList<OAIAssignedTargetingOption> OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::getCreatedAssignedTargetingOptions() const {
    return m_created_assigned_targeting_options;
}
void OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::setCreatedAssignedTargetingOptions(const QList<OAIAssignedTargetingOption> &created_assigned_targeting_options) {
    m_created_assigned_targeting_options = created_assigned_targeting_options;
    m_created_assigned_targeting_options_isSet = true;
}

bool OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::is_created_assigned_targeting_options_Set() const{
    return m_created_assigned_targeting_options_isSet;
}

bool OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::is_created_assigned_targeting_options_Valid() const{
    return m_created_assigned_targeting_options_isValid;
}

bool OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_assigned_targeting_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkEditAdvertiserAssignedTargetingOptionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
