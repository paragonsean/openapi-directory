/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScriptError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScriptError::OAIScriptError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScriptError::OAIScriptError() {
    this->initializeModel();
}

OAIScriptError::~OAIScriptError() {}

void OAIScriptError::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_line_isSet = false;
    m_line_isValid = false;
}

void OAIScriptError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScriptError::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("errorCode")]);
    m_error_code_isSet = !json[QString("errorCode")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("errorMessage")]);
    m_error_message_isSet = !json[QString("errorMessage")].isNull() && m_error_message_isValid;

    m_line_isValid = ::OpenAPI::fromJsonValue(m_line, json[QString("line")]);
    m_line_isSet = !json[QString("line")].isNull() && m_line_isValid;
}

QString OAIScriptError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScriptError::asJsonObject() const {
    QJsonObject obj;
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("errorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("errorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_line_isSet) {
        obj.insert(QString("line"), ::OpenAPI::toJsonValue(m_line));
    }
    return obj;
}

QString OAIScriptError::getColumn() const {
    return m_column;
}
void OAIScriptError::setColumn(const QString &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIScriptError::is_column_Set() const{
    return m_column_isSet;
}

bool OAIScriptError::is_column_Valid() const{
    return m_column_isValid;
}

QString OAIScriptError::getErrorCode() const {
    return m_error_code;
}
void OAIScriptError::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIScriptError::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIScriptError::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIScriptError::getErrorMessage() const {
    return m_error_message;
}
void OAIScriptError::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIScriptError::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIScriptError::is_error_message_Valid() const{
    return m_error_message_isValid;
}

QString OAIScriptError::getLine() const {
    return m_line;
}
void OAIScriptError::setLine(const QString &line) {
    m_line = line;
    m_line_isSet = true;
}

bool OAIScriptError::is_line_Set() const{
    return m_line_isSet;
}

bool OAIScriptError::is_line_Valid() const{
    return m_line_isValid;
}

bool OAIScriptError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScriptError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
