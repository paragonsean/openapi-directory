/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAudienceGroupAssignedTargetingOptionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAudienceGroupAssignedTargetingOptionDetails::OAIAudienceGroupAssignedTargetingOptionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAudienceGroupAssignedTargetingOptionDetails::OAIAudienceGroupAssignedTargetingOptionDetails() {
    this->initializeModel();
}

OAIAudienceGroupAssignedTargetingOptionDetails::~OAIAudienceGroupAssignedTargetingOptionDetails() {}

void OAIAudienceGroupAssignedTargetingOptionDetails::initializeModel() {

    m_excluded_first_and_third_party_audience_group_isSet = false;
    m_excluded_first_and_third_party_audience_group_isValid = false;

    m_excluded_google_audience_group_isSet = false;
    m_excluded_google_audience_group_isValid = false;

    m_included_combined_audience_group_isSet = false;
    m_included_combined_audience_group_isValid = false;

    m_included_custom_list_group_isSet = false;
    m_included_custom_list_group_isValid = false;

    m_included_first_and_third_party_audience_groups_isSet = false;
    m_included_first_and_third_party_audience_groups_isValid = false;

    m_included_google_audience_group_isSet = false;
    m_included_google_audience_group_isValid = false;
}

void OAIAudienceGroupAssignedTargetingOptionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAudienceGroupAssignedTargetingOptionDetails::fromJsonObject(QJsonObject json) {

    m_excluded_first_and_third_party_audience_group_isValid = ::OpenAPI::fromJsonValue(m_excluded_first_and_third_party_audience_group, json[QString("excludedFirstAndThirdPartyAudienceGroup")]);
    m_excluded_first_and_third_party_audience_group_isSet = !json[QString("excludedFirstAndThirdPartyAudienceGroup")].isNull() && m_excluded_first_and_third_party_audience_group_isValid;

    m_excluded_google_audience_group_isValid = ::OpenAPI::fromJsonValue(m_excluded_google_audience_group, json[QString("excludedGoogleAudienceGroup")]);
    m_excluded_google_audience_group_isSet = !json[QString("excludedGoogleAudienceGroup")].isNull() && m_excluded_google_audience_group_isValid;

    m_included_combined_audience_group_isValid = ::OpenAPI::fromJsonValue(m_included_combined_audience_group, json[QString("includedCombinedAudienceGroup")]);
    m_included_combined_audience_group_isSet = !json[QString("includedCombinedAudienceGroup")].isNull() && m_included_combined_audience_group_isValid;

    m_included_custom_list_group_isValid = ::OpenAPI::fromJsonValue(m_included_custom_list_group, json[QString("includedCustomListGroup")]);
    m_included_custom_list_group_isSet = !json[QString("includedCustomListGroup")].isNull() && m_included_custom_list_group_isValid;

    m_included_first_and_third_party_audience_groups_isValid = ::OpenAPI::fromJsonValue(m_included_first_and_third_party_audience_groups, json[QString("includedFirstAndThirdPartyAudienceGroups")]);
    m_included_first_and_third_party_audience_groups_isSet = !json[QString("includedFirstAndThirdPartyAudienceGroups")].isNull() && m_included_first_and_third_party_audience_groups_isValid;

    m_included_google_audience_group_isValid = ::OpenAPI::fromJsonValue(m_included_google_audience_group, json[QString("includedGoogleAudienceGroup")]);
    m_included_google_audience_group_isSet = !json[QString("includedGoogleAudienceGroup")].isNull() && m_included_google_audience_group_isValid;
}

QString OAIAudienceGroupAssignedTargetingOptionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAudienceGroupAssignedTargetingOptionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_excluded_first_and_third_party_audience_group.isSet()) {
        obj.insert(QString("excludedFirstAndThirdPartyAudienceGroup"), ::OpenAPI::toJsonValue(m_excluded_first_and_third_party_audience_group));
    }
    if (m_excluded_google_audience_group.isSet()) {
        obj.insert(QString("excludedGoogleAudienceGroup"), ::OpenAPI::toJsonValue(m_excluded_google_audience_group));
    }
    if (m_included_combined_audience_group.isSet()) {
        obj.insert(QString("includedCombinedAudienceGroup"), ::OpenAPI::toJsonValue(m_included_combined_audience_group));
    }
    if (m_included_custom_list_group.isSet()) {
        obj.insert(QString("includedCustomListGroup"), ::OpenAPI::toJsonValue(m_included_custom_list_group));
    }
    if (m_included_first_and_third_party_audience_groups.size() > 0) {
        obj.insert(QString("includedFirstAndThirdPartyAudienceGroups"), ::OpenAPI::toJsonValue(m_included_first_and_third_party_audience_groups));
    }
    if (m_included_google_audience_group.isSet()) {
        obj.insert(QString("includedGoogleAudienceGroup"), ::OpenAPI::toJsonValue(m_included_google_audience_group));
    }
    return obj;
}

OAIFirstAndThirdPartyAudienceGroup OAIAudienceGroupAssignedTargetingOptionDetails::getExcludedFirstAndThirdPartyAudienceGroup() const {
    return m_excluded_first_and_third_party_audience_group;
}
void OAIAudienceGroupAssignedTargetingOptionDetails::setExcludedFirstAndThirdPartyAudienceGroup(const OAIFirstAndThirdPartyAudienceGroup &excluded_first_and_third_party_audience_group) {
    m_excluded_first_and_third_party_audience_group = excluded_first_and_third_party_audience_group;
    m_excluded_first_and_third_party_audience_group_isSet = true;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_excluded_first_and_third_party_audience_group_Set() const{
    return m_excluded_first_and_third_party_audience_group_isSet;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_excluded_first_and_third_party_audience_group_Valid() const{
    return m_excluded_first_and_third_party_audience_group_isValid;
}

OAIGoogleAudienceGroup OAIAudienceGroupAssignedTargetingOptionDetails::getExcludedGoogleAudienceGroup() const {
    return m_excluded_google_audience_group;
}
void OAIAudienceGroupAssignedTargetingOptionDetails::setExcludedGoogleAudienceGroup(const OAIGoogleAudienceGroup &excluded_google_audience_group) {
    m_excluded_google_audience_group = excluded_google_audience_group;
    m_excluded_google_audience_group_isSet = true;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_excluded_google_audience_group_Set() const{
    return m_excluded_google_audience_group_isSet;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_excluded_google_audience_group_Valid() const{
    return m_excluded_google_audience_group_isValid;
}

OAICombinedAudienceGroup OAIAudienceGroupAssignedTargetingOptionDetails::getIncludedCombinedAudienceGroup() const {
    return m_included_combined_audience_group;
}
void OAIAudienceGroupAssignedTargetingOptionDetails::setIncludedCombinedAudienceGroup(const OAICombinedAudienceGroup &included_combined_audience_group) {
    m_included_combined_audience_group = included_combined_audience_group;
    m_included_combined_audience_group_isSet = true;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_combined_audience_group_Set() const{
    return m_included_combined_audience_group_isSet;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_combined_audience_group_Valid() const{
    return m_included_combined_audience_group_isValid;
}

OAICustomListGroup OAIAudienceGroupAssignedTargetingOptionDetails::getIncludedCustomListGroup() const {
    return m_included_custom_list_group;
}
void OAIAudienceGroupAssignedTargetingOptionDetails::setIncludedCustomListGroup(const OAICustomListGroup &included_custom_list_group) {
    m_included_custom_list_group = included_custom_list_group;
    m_included_custom_list_group_isSet = true;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_custom_list_group_Set() const{
    return m_included_custom_list_group_isSet;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_custom_list_group_Valid() const{
    return m_included_custom_list_group_isValid;
}

QList<OAIFirstAndThirdPartyAudienceGroup> OAIAudienceGroupAssignedTargetingOptionDetails::getIncludedFirstAndThirdPartyAudienceGroups() const {
    return m_included_first_and_third_party_audience_groups;
}
void OAIAudienceGroupAssignedTargetingOptionDetails::setIncludedFirstAndThirdPartyAudienceGroups(const QList<OAIFirstAndThirdPartyAudienceGroup> &included_first_and_third_party_audience_groups) {
    m_included_first_and_third_party_audience_groups = included_first_and_third_party_audience_groups;
    m_included_first_and_third_party_audience_groups_isSet = true;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_first_and_third_party_audience_groups_Set() const{
    return m_included_first_and_third_party_audience_groups_isSet;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_first_and_third_party_audience_groups_Valid() const{
    return m_included_first_and_third_party_audience_groups_isValid;
}

OAIGoogleAudienceGroup OAIAudienceGroupAssignedTargetingOptionDetails::getIncludedGoogleAudienceGroup() const {
    return m_included_google_audience_group;
}
void OAIAudienceGroupAssignedTargetingOptionDetails::setIncludedGoogleAudienceGroup(const OAIGoogleAudienceGroup &included_google_audience_group) {
    m_included_google_audience_group = included_google_audience_group;
    m_included_google_audience_group_isSet = true;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_google_audience_group_Set() const{
    return m_included_google_audience_group_isSet;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::is_included_google_audience_group_Valid() const{
    return m_included_google_audience_group_isValid;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_excluded_first_and_third_party_audience_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_excluded_google_audience_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_included_combined_audience_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_included_custom_list_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_included_first_and_third_party_audience_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_included_google_audience_group.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAudienceGroupAssignedTargetingOptionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
