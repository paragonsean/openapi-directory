/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetAssociation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetAssociation::OAIAssetAssociation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetAssociation::OAIAssetAssociation() {
    this->initializeModel();
}

OAIAssetAssociation::~OAIAssetAssociation() {}

void OAIAssetAssociation::initializeModel() {

    m_asset_isSet = false;
    m_asset_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;
}

void OAIAssetAssociation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetAssociation::fromJsonObject(QJsonObject json) {

    m_asset_isValid = ::OpenAPI::fromJsonValue(m_asset, json[QString("asset")]);
    m_asset_isSet = !json[QString("asset")].isNull() && m_asset_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;
}

QString OAIAssetAssociation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetAssociation::asJsonObject() const {
    QJsonObject obj;
    if (m_asset.isSet()) {
        obj.insert(QString("asset"), ::OpenAPI::toJsonValue(m_asset));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    return obj;
}

OAIAsset OAIAssetAssociation::getAsset() const {
    return m_asset;
}
void OAIAssetAssociation::setAsset(const OAIAsset &asset) {
    m_asset = asset;
    m_asset_isSet = true;
}

bool OAIAssetAssociation::is_asset_Set() const{
    return m_asset_isSet;
}

bool OAIAssetAssociation::is_asset_Valid() const{
    return m_asset_isValid;
}

QString OAIAssetAssociation::getRole() const {
    return m_role;
}
void OAIAssetAssociation::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIAssetAssociation::is_role_Set() const{
    return m_role_isSet;
}

bool OAIAssetAssociation::is_role_Valid() const{
    return m_role_isValid;
}

bool OAIAssetAssociation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetAssociation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
