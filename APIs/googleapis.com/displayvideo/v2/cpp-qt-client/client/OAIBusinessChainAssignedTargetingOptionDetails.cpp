/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBusinessChainAssignedTargetingOptionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBusinessChainAssignedTargetingOptionDetails::OAIBusinessChainAssignedTargetingOptionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBusinessChainAssignedTargetingOptionDetails::OAIBusinessChainAssignedTargetingOptionDetails() {
    this->initializeModel();
}

OAIBusinessChainAssignedTargetingOptionDetails::~OAIBusinessChainAssignedTargetingOptionDetails() {}

void OAIBusinessChainAssignedTargetingOptionDetails::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_proximity_radius_amount_isSet = false;
    m_proximity_radius_amount_isValid = false;

    m_proximity_radius_unit_isSet = false;
    m_proximity_radius_unit_isValid = false;

    m_targeting_option_id_isSet = false;
    m_targeting_option_id_isValid = false;
}

void OAIBusinessChainAssignedTargetingOptionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBusinessChainAssignedTargetingOptionDetails::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_proximity_radius_amount_isValid = ::OpenAPI::fromJsonValue(m_proximity_radius_amount, json[QString("proximityRadiusAmount")]);
    m_proximity_radius_amount_isSet = !json[QString("proximityRadiusAmount")].isNull() && m_proximity_radius_amount_isValid;

    m_proximity_radius_unit_isValid = ::OpenAPI::fromJsonValue(m_proximity_radius_unit, json[QString("proximityRadiusUnit")]);
    m_proximity_radius_unit_isSet = !json[QString("proximityRadiusUnit")].isNull() && m_proximity_radius_unit_isValid;

    m_targeting_option_id_isValid = ::OpenAPI::fromJsonValue(m_targeting_option_id, json[QString("targetingOptionId")]);
    m_targeting_option_id_isSet = !json[QString("targetingOptionId")].isNull() && m_targeting_option_id_isValid;
}

QString OAIBusinessChainAssignedTargetingOptionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBusinessChainAssignedTargetingOptionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_proximity_radius_amount_isSet) {
        obj.insert(QString("proximityRadiusAmount"), ::OpenAPI::toJsonValue(m_proximity_radius_amount));
    }
    if (m_proximity_radius_unit_isSet) {
        obj.insert(QString("proximityRadiusUnit"), ::OpenAPI::toJsonValue(m_proximity_radius_unit));
    }
    if (m_targeting_option_id_isSet) {
        obj.insert(QString("targetingOptionId"), ::OpenAPI::toJsonValue(m_targeting_option_id));
    }
    return obj;
}

QString OAIBusinessChainAssignedTargetingOptionDetails::getDisplayName() const {
    return m_display_name;
}
void OAIBusinessChainAssignedTargetingOptionDetails::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_display_name_Valid() const{
    return m_display_name_isValid;
}

double OAIBusinessChainAssignedTargetingOptionDetails::getProximityRadiusAmount() const {
    return m_proximity_radius_amount;
}
void OAIBusinessChainAssignedTargetingOptionDetails::setProximityRadiusAmount(const double &proximity_radius_amount) {
    m_proximity_radius_amount = proximity_radius_amount;
    m_proximity_radius_amount_isSet = true;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_proximity_radius_amount_Set() const{
    return m_proximity_radius_amount_isSet;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_proximity_radius_amount_Valid() const{
    return m_proximity_radius_amount_isValid;
}

QString OAIBusinessChainAssignedTargetingOptionDetails::getProximityRadiusUnit() const {
    return m_proximity_radius_unit;
}
void OAIBusinessChainAssignedTargetingOptionDetails::setProximityRadiusUnit(const QString &proximity_radius_unit) {
    m_proximity_radius_unit = proximity_radius_unit;
    m_proximity_radius_unit_isSet = true;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_proximity_radius_unit_Set() const{
    return m_proximity_radius_unit_isSet;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_proximity_radius_unit_Valid() const{
    return m_proximity_radius_unit_isValid;
}

QString OAIBusinessChainAssignedTargetingOptionDetails::getTargetingOptionId() const {
    return m_targeting_option_id;
}
void OAIBusinessChainAssignedTargetingOptionDetails::setTargetingOptionId(const QString &targeting_option_id) {
    m_targeting_option_id = targeting_option_id;
    m_targeting_option_id_isSet = true;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_targeting_option_id_Set() const{
    return m_targeting_option_id_isSet;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::is_targeting_option_id_Valid() const{
    return m_targeting_option_id_isValid;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_proximity_radius_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_proximity_radius_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBusinessChainAssignedTargetingOptionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
