/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssignedInventorySource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssignedInventorySource::OAIAssignedInventorySource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssignedInventorySource::OAIAssignedInventorySource() {
    this->initializeModel();
}

OAIAssignedInventorySource::~OAIAssignedInventorySource() {}

void OAIAssignedInventorySource::initializeModel() {

    m_assigned_inventory_source_id_isSet = false;
    m_assigned_inventory_source_id_isValid = false;

    m_inventory_source_id_isSet = false;
    m_inventory_source_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAssignedInventorySource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssignedInventorySource::fromJsonObject(QJsonObject json) {

    m_assigned_inventory_source_id_isValid = ::OpenAPI::fromJsonValue(m_assigned_inventory_source_id, json[QString("assignedInventorySourceId")]);
    m_assigned_inventory_source_id_isSet = !json[QString("assignedInventorySourceId")].isNull() && m_assigned_inventory_source_id_isValid;

    m_inventory_source_id_isValid = ::OpenAPI::fromJsonValue(m_inventory_source_id, json[QString("inventorySourceId")]);
    m_inventory_source_id_isSet = !json[QString("inventorySourceId")].isNull() && m_inventory_source_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAssignedInventorySource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssignedInventorySource::asJsonObject() const {
    QJsonObject obj;
    if (m_assigned_inventory_source_id_isSet) {
        obj.insert(QString("assignedInventorySourceId"), ::OpenAPI::toJsonValue(m_assigned_inventory_source_id));
    }
    if (m_inventory_source_id_isSet) {
        obj.insert(QString("inventorySourceId"), ::OpenAPI::toJsonValue(m_inventory_source_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAssignedInventorySource::getAssignedInventorySourceId() const {
    return m_assigned_inventory_source_id;
}
void OAIAssignedInventorySource::setAssignedInventorySourceId(const QString &assigned_inventory_source_id) {
    m_assigned_inventory_source_id = assigned_inventory_source_id;
    m_assigned_inventory_source_id_isSet = true;
}

bool OAIAssignedInventorySource::is_assigned_inventory_source_id_Set() const{
    return m_assigned_inventory_source_id_isSet;
}

bool OAIAssignedInventorySource::is_assigned_inventory_source_id_Valid() const{
    return m_assigned_inventory_source_id_isValid;
}

QString OAIAssignedInventorySource::getInventorySourceId() const {
    return m_inventory_source_id;
}
void OAIAssignedInventorySource::setInventorySourceId(const QString &inventory_source_id) {
    m_inventory_source_id = inventory_source_id;
    m_inventory_source_id_isSet = true;
}

bool OAIAssignedInventorySource::is_inventory_source_id_Set() const{
    return m_inventory_source_id_isSet;
}

bool OAIAssignedInventorySource::is_inventory_source_id_Valid() const{
    return m_inventory_source_id_isValid;
}

QString OAIAssignedInventorySource::getName() const {
    return m_name;
}
void OAIAssignedInventorySource::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAssignedInventorySource::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAssignedInventorySource::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAssignedInventorySource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assigned_inventory_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssignedInventorySource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
