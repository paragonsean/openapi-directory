/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetFrequency.h
 *
 * Setting that controls the average number of times the ads will show to the same person over a certain period of time.
 */

#ifndef OAITargetFrequency_H
#define OAITargetFrequency_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITargetFrequency : public OAIObject {
public:
    OAITargetFrequency();
    OAITargetFrequency(QString json);
    ~OAITargetFrequency() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTargetCount() const;
    void setTargetCount(const QString &target_count);
    bool is_target_count_Set() const;
    bool is_target_count_Valid() const;

    QString getTimeUnit() const;
    void setTimeUnit(const QString &time_unit);
    bool is_time_unit_Set() const;
    bool is_time_unit_Valid() const;

    qint32 getTimeUnitCount() const;
    void setTimeUnitCount(const qint32 &time_unit_count);
    bool is_time_unit_count_Set() const;
    bool is_time_unit_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_target_count;
    bool m_target_count_isSet;
    bool m_target_count_isValid;

    QString m_time_unit;
    bool m_time_unit_isSet;
    bool m_time_unit_isValid;

    qint32 m_time_unit_count;
    bool m_time_unit_count_isSet;
    bool m_time_unit_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetFrequency)

#endif // OAITargetFrequency_H
