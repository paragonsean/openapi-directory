/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FloodlightActivity;
import org.openapitools.client.model.FloodlightGroup;
import org.openapitools.client.model.ListFloodlightActivitiesResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FloodlightGroupsApi
 */
@Disabled
public class FloodlightGroupsApiTest {

    private final FloodlightGroupsApi api = new FloodlightGroupsApi();

    /**
     * Gets a Floodlight activity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoFloodlightGroupsFloodlightActivitiesGetTest() throws ApiException {
        String floodlightGroupId = null;
        String floodlightActivityId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String partnerId = null;
        FloodlightActivity response = api.displayvideoFloodlightGroupsFloodlightActivitiesGet(floodlightGroupId, floodlightActivityId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, partnerId);
        // TODO: test validations
    }

    /**
     * Lists Floodlight activities in a Floodlight group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoFloodlightGroupsFloodlightActivitiesListTest() throws ApiException {
        String floodlightGroupId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String partnerId = null;
        ListFloodlightActivitiesResponse response = api.displayvideoFloodlightGroupsFloodlightActivitiesList(floodlightGroupId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, orderBy, pageSize, pageToken, partnerId);
        // TODO: test validations
    }

    /**
     * Gets a Floodlight group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoFloodlightGroupsGetTest() throws ApiException {
        String floodlightGroupId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String partnerId = null;
        FloodlightGroup response = api.displayvideoFloodlightGroupsGet(floodlightGroupId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, partnerId);
        // TODO: test validations
    }

}
