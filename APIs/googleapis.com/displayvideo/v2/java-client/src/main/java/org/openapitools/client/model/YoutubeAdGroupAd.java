/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdUrl;
import org.openapitools.client.model.AudioAd;
import org.openapitools.client.model.BumperAd;
import org.openapitools.client.model.DisplayVideoSourceAd;
import org.openapitools.client.model.InStreamAd;
import org.openapitools.client.model.MastheadAd;
import org.openapitools.client.model.NonSkippableAd;
import org.openapitools.client.model.VideoDiscoveryAd;
import org.openapitools.client.model.VideoPerformanceAd;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single ad associated with a YouTube ad group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class YoutubeAdGroupAd {
  public static final String SERIALIZED_NAME_AD_GROUP_AD_ID = "adGroupAdId";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_AD_ID)
  private String adGroupAdId;

  public static final String SERIALIZED_NAME_AD_GROUP_ID = "adGroupId";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_ID)
  private String adGroupId;

  public static final String SERIALIZED_NAME_AD_URLS = "adUrls";
  @SerializedName(SERIALIZED_NAME_AD_URLS)
  private List<AdUrl> adUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_AUDIO_AD = "audioAd";
  @SerializedName(SERIALIZED_NAME_AUDIO_AD)
  private AudioAd audioAd;

  public static final String SERIALIZED_NAME_BUMPER_AD = "bumperAd";
  @SerializedName(SERIALIZED_NAME_BUMPER_AD)
  private BumperAd bumperAd;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DISPLAY_VIDEO_SOURCE_AD = "displayVideoSourceAd";
  @SerializedName(SERIALIZED_NAME_DISPLAY_VIDEO_SOURCE_AD)
  private DisplayVideoSourceAd displayVideoSourceAd;

  /**
   * The entity status of the ad.
   */
  @JsonAdapter(EntityStatusEnum.Adapter.class)
  public enum EntityStatusEnum {
    UNSPECIFIED("ENTITY_STATUS_UNSPECIFIED"),
    
    ACTIVE("ENTITY_STATUS_ACTIVE"),
    
    ARCHIVED("ENTITY_STATUS_ARCHIVED"),
    
    DRAFT("ENTITY_STATUS_DRAFT"),
    
    PAUSED("ENTITY_STATUS_PAUSED"),
    
    SCHEDULED_FOR_DELETION("ENTITY_STATUS_SCHEDULED_FOR_DELETION");

    private String value;

    EntityStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityStatusEnum fromValue(String value) {
      for (EntityStatusEnum b : EntityStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntityStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntityStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EntityStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENTITY_STATUS = "entityStatus";
  @SerializedName(SERIALIZED_NAME_ENTITY_STATUS)
  private EntityStatusEnum entityStatus;

  public static final String SERIALIZED_NAME_IN_STREAM_AD = "inStreamAd";
  @SerializedName(SERIALIZED_NAME_IN_STREAM_AD)
  private InStreamAd inStreamAd;

  public static final String SERIALIZED_NAME_MASTHEAD_AD = "mastheadAd";
  @SerializedName(SERIALIZED_NAME_MASTHEAD_AD)
  private MastheadAd mastheadAd;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NON_SKIPPABLE_AD = "nonSkippableAd";
  @SerializedName(SERIALIZED_NAME_NON_SKIPPABLE_AD)
  private NonSkippableAd nonSkippableAd;

  public static final String SERIALIZED_NAME_VIDEO_DISCOVER_AD = "videoDiscoverAd";
  @SerializedName(SERIALIZED_NAME_VIDEO_DISCOVER_AD)
  private VideoDiscoveryAd videoDiscoverAd;

  public static final String SERIALIZED_NAME_VIDEO_PERFORMANCE_AD = "videoPerformanceAd";
  @SerializedName(SERIALIZED_NAME_VIDEO_PERFORMANCE_AD)
  private VideoPerformanceAd videoPerformanceAd;

  public YoutubeAdGroupAd() {
  }

  public YoutubeAdGroupAd adGroupAdId(String adGroupAdId) {
    this.adGroupAdId = adGroupAdId;
    return this;
  }

  /**
   * The unique ID of the ad. Assigned by the system.
   * @return adGroupAdId
   */
  @javax.annotation.Nullable
  public String getAdGroupAdId() {
    return adGroupAdId;
  }

  public void setAdGroupAdId(String adGroupAdId) {
    this.adGroupAdId = adGroupAdId;
  }


  public YoutubeAdGroupAd adGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
    return this;
  }

  /**
   * The unique ID of the ad group that the ad belongs to.
   * @return adGroupId
   */
  @javax.annotation.Nullable
  public String getAdGroupId() {
    return adGroupId;
  }

  public void setAdGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
  }


  public YoutubeAdGroupAd adUrls(List<AdUrl> adUrls) {
    this.adUrls = adUrls;
    return this;
  }

  public YoutubeAdGroupAd addAdUrlsItem(AdUrl adUrlsItem) {
    if (this.adUrls == null) {
      this.adUrls = new ArrayList<>();
    }
    this.adUrls.add(adUrlsItem);
    return this;
  }

  /**
   * List of URLs used by the ad.
   * @return adUrls
   */
  @javax.annotation.Nullable
  public List<AdUrl> getAdUrls() {
    return adUrls;
  }

  public void setAdUrls(List<AdUrl> adUrls) {
    this.adUrls = adUrls;
  }


  public YoutubeAdGroupAd advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * The unique ID of the advertiser the ad belongs to.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public YoutubeAdGroupAd audioAd(AudioAd audioAd) {
    this.audioAd = audioAd;
    return this;
  }

  /**
   * Get audioAd
   * @return audioAd
   */
  @javax.annotation.Nullable
  public AudioAd getAudioAd() {
    return audioAd;
  }

  public void setAudioAd(AudioAd audioAd) {
    this.audioAd = audioAd;
  }


  public YoutubeAdGroupAd bumperAd(BumperAd bumperAd) {
    this.bumperAd = bumperAd;
    return this;
  }

  /**
   * Get bumperAd
   * @return bumperAd
   */
  @javax.annotation.Nullable
  public BumperAd getBumperAd() {
    return bumperAd;
  }

  public void setBumperAd(BumperAd bumperAd) {
    this.bumperAd = bumperAd;
  }


  public YoutubeAdGroupAd displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the ad. Must be UTF-8 encoded with a maximum size of 255 bytes.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public YoutubeAdGroupAd displayVideoSourceAd(DisplayVideoSourceAd displayVideoSourceAd) {
    this.displayVideoSourceAd = displayVideoSourceAd;
    return this;
  }

  /**
   * Get displayVideoSourceAd
   * @return displayVideoSourceAd
   */
  @javax.annotation.Nullable
  public DisplayVideoSourceAd getDisplayVideoSourceAd() {
    return displayVideoSourceAd;
  }

  public void setDisplayVideoSourceAd(DisplayVideoSourceAd displayVideoSourceAd) {
    this.displayVideoSourceAd = displayVideoSourceAd;
  }


  public YoutubeAdGroupAd entityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
    return this;
  }

  /**
   * The entity status of the ad.
   * @return entityStatus
   */
  @javax.annotation.Nullable
  public EntityStatusEnum getEntityStatus() {
    return entityStatus;
  }

  public void setEntityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
  }


  public YoutubeAdGroupAd inStreamAd(InStreamAd inStreamAd) {
    this.inStreamAd = inStreamAd;
    return this;
  }

  /**
   * Get inStreamAd
   * @return inStreamAd
   */
  @javax.annotation.Nullable
  public InStreamAd getInStreamAd() {
    return inStreamAd;
  }

  public void setInStreamAd(InStreamAd inStreamAd) {
    this.inStreamAd = inStreamAd;
  }


  public YoutubeAdGroupAd mastheadAd(MastheadAd mastheadAd) {
    this.mastheadAd = mastheadAd;
    return this;
  }

  /**
   * Get mastheadAd
   * @return mastheadAd
   */
  @javax.annotation.Nullable
  public MastheadAd getMastheadAd() {
    return mastheadAd;
  }

  public void setMastheadAd(MastheadAd mastheadAd) {
    this.mastheadAd = mastheadAd;
  }


  public YoutubeAdGroupAd name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the ad.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public YoutubeAdGroupAd nonSkippableAd(NonSkippableAd nonSkippableAd) {
    this.nonSkippableAd = nonSkippableAd;
    return this;
  }

  /**
   * Get nonSkippableAd
   * @return nonSkippableAd
   */
  @javax.annotation.Nullable
  public NonSkippableAd getNonSkippableAd() {
    return nonSkippableAd;
  }

  public void setNonSkippableAd(NonSkippableAd nonSkippableAd) {
    this.nonSkippableAd = nonSkippableAd;
  }


  public YoutubeAdGroupAd videoDiscoverAd(VideoDiscoveryAd videoDiscoverAd) {
    this.videoDiscoverAd = videoDiscoverAd;
    return this;
  }

  /**
   * Get videoDiscoverAd
   * @return videoDiscoverAd
   */
  @javax.annotation.Nullable
  public VideoDiscoveryAd getVideoDiscoverAd() {
    return videoDiscoverAd;
  }

  public void setVideoDiscoverAd(VideoDiscoveryAd videoDiscoverAd) {
    this.videoDiscoverAd = videoDiscoverAd;
  }


  public YoutubeAdGroupAd videoPerformanceAd(VideoPerformanceAd videoPerformanceAd) {
    this.videoPerformanceAd = videoPerformanceAd;
    return this;
  }

  /**
   * Get videoPerformanceAd
   * @return videoPerformanceAd
   */
  @javax.annotation.Nullable
  public VideoPerformanceAd getVideoPerformanceAd() {
    return videoPerformanceAd;
  }

  public void setVideoPerformanceAd(VideoPerformanceAd videoPerformanceAd) {
    this.videoPerformanceAd = videoPerformanceAd;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    YoutubeAdGroupAd youtubeAdGroupAd = (YoutubeAdGroupAd) o;
    return Objects.equals(this.adGroupAdId, youtubeAdGroupAd.adGroupAdId) &&
        Objects.equals(this.adGroupId, youtubeAdGroupAd.adGroupId) &&
        Objects.equals(this.adUrls, youtubeAdGroupAd.adUrls) &&
        Objects.equals(this.advertiserId, youtubeAdGroupAd.advertiserId) &&
        Objects.equals(this.audioAd, youtubeAdGroupAd.audioAd) &&
        Objects.equals(this.bumperAd, youtubeAdGroupAd.bumperAd) &&
        Objects.equals(this.displayName, youtubeAdGroupAd.displayName) &&
        Objects.equals(this.displayVideoSourceAd, youtubeAdGroupAd.displayVideoSourceAd) &&
        Objects.equals(this.entityStatus, youtubeAdGroupAd.entityStatus) &&
        Objects.equals(this.inStreamAd, youtubeAdGroupAd.inStreamAd) &&
        Objects.equals(this.mastheadAd, youtubeAdGroupAd.mastheadAd) &&
        Objects.equals(this.name, youtubeAdGroupAd.name) &&
        Objects.equals(this.nonSkippableAd, youtubeAdGroupAd.nonSkippableAd) &&
        Objects.equals(this.videoDiscoverAd, youtubeAdGroupAd.videoDiscoverAd) &&
        Objects.equals(this.videoPerformanceAd, youtubeAdGroupAd.videoPerformanceAd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adGroupAdId, adGroupId, adUrls, advertiserId, audioAd, bumperAd, displayName, displayVideoSourceAd, entityStatus, inStreamAd, mastheadAd, name, nonSkippableAd, videoDiscoverAd, videoPerformanceAd);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class YoutubeAdGroupAd {\n");
    sb.append("    adGroupAdId: ").append(toIndentedString(adGroupAdId)).append("\n");
    sb.append("    adGroupId: ").append(toIndentedString(adGroupId)).append("\n");
    sb.append("    adUrls: ").append(toIndentedString(adUrls)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    audioAd: ").append(toIndentedString(audioAd)).append("\n");
    sb.append("    bumperAd: ").append(toIndentedString(bumperAd)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displayVideoSourceAd: ").append(toIndentedString(displayVideoSourceAd)).append("\n");
    sb.append("    entityStatus: ").append(toIndentedString(entityStatus)).append("\n");
    sb.append("    inStreamAd: ").append(toIndentedString(inStreamAd)).append("\n");
    sb.append("    mastheadAd: ").append(toIndentedString(mastheadAd)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nonSkippableAd: ").append(toIndentedString(nonSkippableAd)).append("\n");
    sb.append("    videoDiscoverAd: ").append(toIndentedString(videoDiscoverAd)).append("\n");
    sb.append("    videoPerformanceAd: ").append(toIndentedString(videoPerformanceAd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adGroupAdId");
    openapiFields.add("adGroupId");
    openapiFields.add("adUrls");
    openapiFields.add("advertiserId");
    openapiFields.add("audioAd");
    openapiFields.add("bumperAd");
    openapiFields.add("displayName");
    openapiFields.add("displayVideoSourceAd");
    openapiFields.add("entityStatus");
    openapiFields.add("inStreamAd");
    openapiFields.add("mastheadAd");
    openapiFields.add("name");
    openapiFields.add("nonSkippableAd");
    openapiFields.add("videoDiscoverAd");
    openapiFields.add("videoPerformanceAd");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to YoutubeAdGroupAd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!YoutubeAdGroupAd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in YoutubeAdGroupAd is not found in the empty JSON string", YoutubeAdGroupAd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!YoutubeAdGroupAd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `YoutubeAdGroupAd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adGroupAdId") != null && !jsonObj.get("adGroupAdId").isJsonNull()) && !jsonObj.get("adGroupAdId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adGroupAdId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adGroupAdId").toString()));
      }
      if ((jsonObj.get("adGroupId") != null && !jsonObj.get("adGroupId").isJsonNull()) && !jsonObj.get("adGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adGroupId").toString()));
      }
      if (jsonObj.get("adUrls") != null && !jsonObj.get("adUrls").isJsonNull()) {
        JsonArray jsonArrayadUrls = jsonObj.getAsJsonArray("adUrls");
        if (jsonArrayadUrls != null) {
          // ensure the json data is an array
          if (!jsonObj.get("adUrls").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `adUrls` to be an array in the JSON string but got `%s`", jsonObj.get("adUrls").toString()));
          }

          // validate the optional field `adUrls` (array)
          for (int i = 0; i < jsonArrayadUrls.size(); i++) {
            AdUrl.validateJsonElement(jsonArrayadUrls.get(i));
          };
        }
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `audioAd`
      if (jsonObj.get("audioAd") != null && !jsonObj.get("audioAd").isJsonNull()) {
        AudioAd.validateJsonElement(jsonObj.get("audioAd"));
      }
      // validate the optional field `bumperAd`
      if (jsonObj.get("bumperAd") != null && !jsonObj.get("bumperAd").isJsonNull()) {
        BumperAd.validateJsonElement(jsonObj.get("bumperAd"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `displayVideoSourceAd`
      if (jsonObj.get("displayVideoSourceAd") != null && !jsonObj.get("displayVideoSourceAd").isJsonNull()) {
        DisplayVideoSourceAd.validateJsonElement(jsonObj.get("displayVideoSourceAd"));
      }
      if ((jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) && !jsonObj.get("entityStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityStatus").toString()));
      }
      // validate the optional field `entityStatus`
      if (jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) {
        EntityStatusEnum.validateJsonElement(jsonObj.get("entityStatus"));
      }
      // validate the optional field `inStreamAd`
      if (jsonObj.get("inStreamAd") != null && !jsonObj.get("inStreamAd").isJsonNull()) {
        InStreamAd.validateJsonElement(jsonObj.get("inStreamAd"));
      }
      // validate the optional field `mastheadAd`
      if (jsonObj.get("mastheadAd") != null && !jsonObj.get("mastheadAd").isJsonNull()) {
        MastheadAd.validateJsonElement(jsonObj.get("mastheadAd"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `nonSkippableAd`
      if (jsonObj.get("nonSkippableAd") != null && !jsonObj.get("nonSkippableAd").isJsonNull()) {
        NonSkippableAd.validateJsonElement(jsonObj.get("nonSkippableAd"));
      }
      // validate the optional field `videoDiscoverAd`
      if (jsonObj.get("videoDiscoverAd") != null && !jsonObj.get("videoDiscoverAd").isJsonNull()) {
        VideoDiscoveryAd.validateJsonElement(jsonObj.get("videoDiscoverAd"));
      }
      // validate the optional field `videoPerformanceAd`
      if (jsonObj.get("videoPerformanceAd") != null && !jsonObj.get("videoPerformanceAd").isJsonNull()) {
        VideoPerformanceAd.validateJsonElement(jsonObj.get("videoPerformanceAd"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!YoutubeAdGroupAd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'YoutubeAdGroupAd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<YoutubeAdGroupAd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(YoutubeAdGroupAd.class));

       return (TypeAdapter<T>) new TypeAdapter<YoutubeAdGroupAd>() {
           @Override
           public void write(JsonWriter out, YoutubeAdGroupAd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public YoutubeAdGroupAd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of YoutubeAdGroupAd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of YoutubeAdGroupAd
   * @throws IOException if the JSON string is invalid with respect to YoutubeAdGroupAd
   */
  public static YoutubeAdGroupAd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, YoutubeAdGroupAd.class);
  }

  /**
   * Convert an instance of YoutubeAdGroupAd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

