/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Creatives related settings of an advertiser.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdvertiserCreativeConfig {
  public static final String SERIALIZED_NAME_DYNAMIC_CREATIVE_ENABLED = "dynamicCreativeEnabled";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_CREATIVE_ENABLED)
  private Boolean dynamicCreativeEnabled;

  public static final String SERIALIZED_NAME_IAS_CLIENT_ID = "iasClientId";
  @SerializedName(SERIALIZED_NAME_IAS_CLIENT_ID)
  private String iasClientId;

  public static final String SERIALIZED_NAME_OBA_COMPLIANCE_DISABLED = "obaComplianceDisabled";
  @SerializedName(SERIALIZED_NAME_OBA_COMPLIANCE_DISABLED)
  private Boolean obaComplianceDisabled;

  public static final String SERIALIZED_NAME_VIDEO_CREATIVE_DATA_SHARING_AUTHORIZED = "videoCreativeDataSharingAuthorized";
  @SerializedName(SERIALIZED_NAME_VIDEO_CREATIVE_DATA_SHARING_AUTHORIZED)
  private Boolean videoCreativeDataSharingAuthorized;

  public AdvertiserCreativeConfig() {
  }

  public AdvertiserCreativeConfig dynamicCreativeEnabled(Boolean dynamicCreativeEnabled) {
    this.dynamicCreativeEnabled = dynamicCreativeEnabled;
    return this;
  }

  /**
   * Whether or not the advertiser is enabled for dynamic creatives.
   * @return dynamicCreativeEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDynamicCreativeEnabled() {
    return dynamicCreativeEnabled;
  }

  public void setDynamicCreativeEnabled(Boolean dynamicCreativeEnabled) {
    this.dynamicCreativeEnabled = dynamicCreativeEnabled;
  }


  public AdvertiserCreativeConfig iasClientId(String iasClientId) {
    this.iasClientId = iasClientId;
    return this;
  }

  /**
   * An ID for configuring campaign monitoring provided by Integral Ad Service (IAS). The DV360 system will append an IAS \&quot;Campaign Monitor\&quot; tag containing this ID to the creative tag.
   * @return iasClientId
   */
  @javax.annotation.Nullable
  public String getIasClientId() {
    return iasClientId;
  }

  public void setIasClientId(String iasClientId) {
    this.iasClientId = iasClientId;
  }


  public AdvertiserCreativeConfig obaComplianceDisabled(Boolean obaComplianceDisabled) {
    this.obaComplianceDisabled = obaComplianceDisabled;
    return this;
  }

  /**
   * Whether or not to disable Google&#39;s About this Ad feature that adds badging (to identify the content as an ad) and transparency information (on interaction with About this Ad) to your ads for Online Behavioral Advertising (OBA) and regulatory requirements. About this Ad gives users greater control over the ads they see and helps you explain why they&#39;re seeing your ad. [Learn more](//support.google.com/displayvideo/answer/14315795). If you choose to set this field to &#x60;true&#x60;, note that ads served through Display &amp; Video 360 must comply to the following: * Be Online Behavioral Advertising (OBA) compliant, as per your contract with Google Marketing Platform. * In the European Economic Area (EEA), include transparency information and a mechanism for users to report illegal content in ads. If using an alternative ad badging, transparency, and reporting solution, you must ensure it includes the required transparency information and illegal content flagging mechanism and that you notify Google of any illegal content reports using the appropriate [form](//support.google.com/legal/troubleshooter/1114905?sjid&#x3D;6787484030557261960-EU#ts&#x3D;2981967%2C2982031%2C12980091).
   * @return obaComplianceDisabled
   */
  @javax.annotation.Nullable
  public Boolean getObaComplianceDisabled() {
    return obaComplianceDisabled;
  }

  public void setObaComplianceDisabled(Boolean obaComplianceDisabled) {
    this.obaComplianceDisabled = obaComplianceDisabled;
  }


  public AdvertiserCreativeConfig videoCreativeDataSharingAuthorized(Boolean videoCreativeDataSharingAuthorized) {
    this.videoCreativeDataSharingAuthorized = videoCreativeDataSharingAuthorized;
    return this;
  }

  /**
   * By setting this field to &#x60;true&#x60;, you, on behalf of your company, authorize Google to use video creatives associated with this Display &amp; Video 360 advertiser to provide reporting and features related to the advertiser&#39;s television campaigns. Applicable only when the advertiser has a CM360 hybrid ad server configuration.
   * @return videoCreativeDataSharingAuthorized
   */
  @javax.annotation.Nullable
  public Boolean getVideoCreativeDataSharingAuthorized() {
    return videoCreativeDataSharingAuthorized;
  }

  public void setVideoCreativeDataSharingAuthorized(Boolean videoCreativeDataSharingAuthorized) {
    this.videoCreativeDataSharingAuthorized = videoCreativeDataSharingAuthorized;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvertiserCreativeConfig advertiserCreativeConfig = (AdvertiserCreativeConfig) o;
    return Objects.equals(this.dynamicCreativeEnabled, advertiserCreativeConfig.dynamicCreativeEnabled) &&
        Objects.equals(this.iasClientId, advertiserCreativeConfig.iasClientId) &&
        Objects.equals(this.obaComplianceDisabled, advertiserCreativeConfig.obaComplianceDisabled) &&
        Objects.equals(this.videoCreativeDataSharingAuthorized, advertiserCreativeConfig.videoCreativeDataSharingAuthorized);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dynamicCreativeEnabled, iasClientId, obaComplianceDisabled, videoCreativeDataSharingAuthorized);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvertiserCreativeConfig {\n");
    sb.append("    dynamicCreativeEnabled: ").append(toIndentedString(dynamicCreativeEnabled)).append("\n");
    sb.append("    iasClientId: ").append(toIndentedString(iasClientId)).append("\n");
    sb.append("    obaComplianceDisabled: ").append(toIndentedString(obaComplianceDisabled)).append("\n");
    sb.append("    videoCreativeDataSharingAuthorized: ").append(toIndentedString(videoCreativeDataSharingAuthorized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dynamicCreativeEnabled");
    openapiFields.add("iasClientId");
    openapiFields.add("obaComplianceDisabled");
    openapiFields.add("videoCreativeDataSharingAuthorized");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdvertiserCreativeConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdvertiserCreativeConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdvertiserCreativeConfig is not found in the empty JSON string", AdvertiserCreativeConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdvertiserCreativeConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdvertiserCreativeConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("iasClientId") != null && !jsonObj.get("iasClientId").isJsonNull()) && !jsonObj.get("iasClientId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iasClientId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iasClientId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdvertiserCreativeConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdvertiserCreativeConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdvertiserCreativeConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdvertiserCreativeConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AdvertiserCreativeConfig>() {
           @Override
           public void write(JsonWriter out, AdvertiserCreativeConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdvertiserCreativeConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdvertiserCreativeConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdvertiserCreativeConfig
   * @throws IOException if the JSON string is invalid with respect to AdvertiserCreativeConfig
   */
  public static AdvertiserCreativeConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdvertiserCreativeConfig.class);
  }

  /**
   * Convert an instance of AdvertiserCreativeConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

