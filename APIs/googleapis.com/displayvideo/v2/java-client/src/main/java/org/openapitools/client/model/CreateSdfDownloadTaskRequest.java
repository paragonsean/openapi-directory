/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IdFilter;
import org.openapitools.client.model.InventorySourceFilter;
import org.openapitools.client.model.ParentEntityFilter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for [SdfDownloadTaskService.CreateSdfDownloadTask].
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateSdfDownloadTaskRequest {
  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_ID_FILTER = "idFilter";
  @SerializedName(SERIALIZED_NAME_ID_FILTER)
  private IdFilter idFilter;

  public static final String SERIALIZED_NAME_INVENTORY_SOURCE_FILTER = "inventorySourceFilter";
  @SerializedName(SERIALIZED_NAME_INVENTORY_SOURCE_FILTER)
  private InventorySourceFilter inventorySourceFilter;

  public static final String SERIALIZED_NAME_PARENT_ENTITY_FILTER = "parentEntityFilter";
  @SerializedName(SERIALIZED_NAME_PARENT_ENTITY_FILTER)
  private ParentEntityFilter parentEntityFilter;

  public static final String SERIALIZED_NAME_PARTNER_ID = "partnerId";
  @SerializedName(SERIALIZED_NAME_PARTNER_ID)
  private String partnerId;

  /**
   * Required. The SDF version of the downloaded file. If set to &#x60;SDF_VERSION_UNSPECIFIED&#x60;, this will default to the version specified by the advertiser or partner identified by &#x60;root_id&#x60;. An advertiser inherits its SDF version from its partner unless configured otherwise.
   */
  @JsonAdapter(VersionEnum.Adapter.class)
  public enum VersionEnum {
    UNSPECIFIED("SDF_VERSION_UNSPECIFIED"),
    
    _3_1("SDF_VERSION_3_1"),
    
    _4("SDF_VERSION_4"),
    
    _4_1("SDF_VERSION_4_1"),
    
    _4_2("SDF_VERSION_4_2"),
    
    _5("SDF_VERSION_5"),
    
    _5_1("SDF_VERSION_5_1"),
    
    _5_2("SDF_VERSION_5_2"),
    
    _5_3("SDF_VERSION_5_3"),
    
    _5_4("SDF_VERSION_5_4"),
    
    _5_5("SDF_VERSION_5_5"),
    
    _6("SDF_VERSION_6"),
    
    _7("SDF_VERSION_7");

    private String value;

    VersionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VersionEnum fromValue(String value) {
      for (VersionEnum b : VersionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VersionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VersionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VersionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      VersionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private VersionEnum version;

  public CreateSdfDownloadTaskRequest() {
  }

  public CreateSdfDownloadTaskRequest advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * The ID of the advertiser to download SDF for.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public CreateSdfDownloadTaskRequest idFilter(IdFilter idFilter) {
    this.idFilter = idFilter;
    return this;
  }

  /**
   * Get idFilter
   * @return idFilter
   */
  @javax.annotation.Nullable
  public IdFilter getIdFilter() {
    return idFilter;
  }

  public void setIdFilter(IdFilter idFilter) {
    this.idFilter = idFilter;
  }


  public CreateSdfDownloadTaskRequest inventorySourceFilter(InventorySourceFilter inventorySourceFilter) {
    this.inventorySourceFilter = inventorySourceFilter;
    return this;
  }

  /**
   * Get inventorySourceFilter
   * @return inventorySourceFilter
   */
  @javax.annotation.Nullable
  public InventorySourceFilter getInventorySourceFilter() {
    return inventorySourceFilter;
  }

  public void setInventorySourceFilter(InventorySourceFilter inventorySourceFilter) {
    this.inventorySourceFilter = inventorySourceFilter;
  }


  public CreateSdfDownloadTaskRequest parentEntityFilter(ParentEntityFilter parentEntityFilter) {
    this.parentEntityFilter = parentEntityFilter;
    return this;
  }

  /**
   * Get parentEntityFilter
   * @return parentEntityFilter
   */
  @javax.annotation.Nullable
  public ParentEntityFilter getParentEntityFilter() {
    return parentEntityFilter;
  }

  public void setParentEntityFilter(ParentEntityFilter parentEntityFilter) {
    this.parentEntityFilter = parentEntityFilter;
  }


  public CreateSdfDownloadTaskRequest partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

  /**
   * The ID of the partner to download SDF for.
   * @return partnerId
   */
  @javax.annotation.Nullable
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }


  public CreateSdfDownloadTaskRequest version(VersionEnum version) {
    this.version = version;
    return this;
  }

  /**
   * Required. The SDF version of the downloaded file. If set to &#x60;SDF_VERSION_UNSPECIFIED&#x60;, this will default to the version specified by the advertiser or partner identified by &#x60;root_id&#x60;. An advertiser inherits its SDF version from its partner unless configured otherwise.
   * @return version
   */
  @javax.annotation.Nullable
  public VersionEnum getVersion() {
    return version;
  }

  public void setVersion(VersionEnum version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSdfDownloadTaskRequest createSdfDownloadTaskRequest = (CreateSdfDownloadTaskRequest) o;
    return Objects.equals(this.advertiserId, createSdfDownloadTaskRequest.advertiserId) &&
        Objects.equals(this.idFilter, createSdfDownloadTaskRequest.idFilter) &&
        Objects.equals(this.inventorySourceFilter, createSdfDownloadTaskRequest.inventorySourceFilter) &&
        Objects.equals(this.parentEntityFilter, createSdfDownloadTaskRequest.parentEntityFilter) &&
        Objects.equals(this.partnerId, createSdfDownloadTaskRequest.partnerId) &&
        Objects.equals(this.version, createSdfDownloadTaskRequest.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertiserId, idFilter, inventorySourceFilter, parentEntityFilter, partnerId, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSdfDownloadTaskRequest {\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    idFilter: ").append(toIndentedString(idFilter)).append("\n");
    sb.append("    inventorySourceFilter: ").append(toIndentedString(inventorySourceFilter)).append("\n");
    sb.append("    parentEntityFilter: ").append(toIndentedString(parentEntityFilter)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertiserId");
    openapiFields.add("idFilter");
    openapiFields.add("inventorySourceFilter");
    openapiFields.add("parentEntityFilter");
    openapiFields.add("partnerId");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateSdfDownloadTaskRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateSdfDownloadTaskRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateSdfDownloadTaskRequest is not found in the empty JSON string", CreateSdfDownloadTaskRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateSdfDownloadTaskRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateSdfDownloadTaskRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `idFilter`
      if (jsonObj.get("idFilter") != null && !jsonObj.get("idFilter").isJsonNull()) {
        IdFilter.validateJsonElement(jsonObj.get("idFilter"));
      }
      // validate the optional field `inventorySourceFilter`
      if (jsonObj.get("inventorySourceFilter") != null && !jsonObj.get("inventorySourceFilter").isJsonNull()) {
        InventorySourceFilter.validateJsonElement(jsonObj.get("inventorySourceFilter"));
      }
      // validate the optional field `parentEntityFilter`
      if (jsonObj.get("parentEntityFilter") != null && !jsonObj.get("parentEntityFilter").isJsonNull()) {
        ParentEntityFilter.validateJsonElement(jsonObj.get("parentEntityFilter"));
      }
      if ((jsonObj.get("partnerId") != null && !jsonObj.get("partnerId").isJsonNull()) && !jsonObj.get("partnerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partnerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partnerId").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      // validate the optional field `version`
      if (jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) {
        VersionEnum.validateJsonElement(jsonObj.get("version"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateSdfDownloadTaskRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateSdfDownloadTaskRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateSdfDownloadTaskRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateSdfDownloadTaskRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateSdfDownloadTaskRequest>() {
           @Override
           public void write(JsonWriter out, CreateSdfDownloadTaskRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateSdfDownloadTaskRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateSdfDownloadTaskRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateSdfDownloadTaskRequest
   * @throws IOException if the JSON string is invalid with respect to CreateSdfDownloadTaskRequest
   */
  public static CreateSdfDownloadTaskRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateSdfDownloadTaskRequest.class);
  }

  /**
   * Convert an instance of CreateSdfDownloadTaskRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

