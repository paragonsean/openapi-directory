/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BusinessChainSearchTerms;
import org.openapitools.client.model.GeoRegionSearchTerms;
import org.openapitools.client.model.PoiSearchTerms;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for SearchTargetingOptions.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SearchTargetingOptionsRequest {
  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_BUSINESS_CHAIN_SEARCH_TERMS = "businessChainSearchTerms";
  @SerializedName(SERIALIZED_NAME_BUSINESS_CHAIN_SEARCH_TERMS)
  private BusinessChainSearchTerms businessChainSearchTerms;

  public static final String SERIALIZED_NAME_GEO_REGION_SEARCH_TERMS = "geoRegionSearchTerms";
  @SerializedName(SERIALIZED_NAME_GEO_REGION_SEARCH_TERMS)
  private GeoRegionSearchTerms geoRegionSearchTerms;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_POI_SEARCH_TERMS = "poiSearchTerms";
  @SerializedName(SERIALIZED_NAME_POI_SEARCH_TERMS)
  private PoiSearchTerms poiSearchTerms;

  public SearchTargetingOptionsRequest() {
  }

  public SearchTargetingOptionsRequest advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Required. The Advertiser this request is being made in the context of.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public SearchTargetingOptionsRequest businessChainSearchTerms(BusinessChainSearchTerms businessChainSearchTerms) {
    this.businessChainSearchTerms = businessChainSearchTerms;
    return this;
  }

  /**
   * Get businessChainSearchTerms
   * @return businessChainSearchTerms
   */
  @javax.annotation.Nullable
  public BusinessChainSearchTerms getBusinessChainSearchTerms() {
    return businessChainSearchTerms;
  }

  public void setBusinessChainSearchTerms(BusinessChainSearchTerms businessChainSearchTerms) {
    this.businessChainSearchTerms = businessChainSearchTerms;
  }


  public SearchTargetingOptionsRequest geoRegionSearchTerms(GeoRegionSearchTerms geoRegionSearchTerms) {
    this.geoRegionSearchTerms = geoRegionSearchTerms;
    return this;
  }

  /**
   * Get geoRegionSearchTerms
   * @return geoRegionSearchTerms
   */
  @javax.annotation.Nullable
  public GeoRegionSearchTerms getGeoRegionSearchTerms() {
    return geoRegionSearchTerms;
  }

  public void setGeoRegionSearchTerms(GeoRegionSearchTerms geoRegionSearchTerms) {
    this.geoRegionSearchTerms = geoRegionSearchTerms;
  }


  public SearchTargetingOptionsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Requested page size. Must be between &#x60;1&#x60; and &#x60;200&#x60;. If unspecified will default to &#x60;100&#x60;. Returns error code &#x60;INVALID_ARGUMENT&#x60; if an invalid value is specified.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public SearchTargetingOptionsRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to &#x60;SearchTargetingOptions&#x60; method. If not specified, the first page of results will be returned.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public SearchTargetingOptionsRequest poiSearchTerms(PoiSearchTerms poiSearchTerms) {
    this.poiSearchTerms = poiSearchTerms;
    return this;
  }

  /**
   * Get poiSearchTerms
   * @return poiSearchTerms
   */
  @javax.annotation.Nullable
  public PoiSearchTerms getPoiSearchTerms() {
    return poiSearchTerms;
  }

  public void setPoiSearchTerms(PoiSearchTerms poiSearchTerms) {
    this.poiSearchTerms = poiSearchTerms;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchTargetingOptionsRequest searchTargetingOptionsRequest = (SearchTargetingOptionsRequest) o;
    return Objects.equals(this.advertiserId, searchTargetingOptionsRequest.advertiserId) &&
        Objects.equals(this.businessChainSearchTerms, searchTargetingOptionsRequest.businessChainSearchTerms) &&
        Objects.equals(this.geoRegionSearchTerms, searchTargetingOptionsRequest.geoRegionSearchTerms) &&
        Objects.equals(this.pageSize, searchTargetingOptionsRequest.pageSize) &&
        Objects.equals(this.pageToken, searchTargetingOptionsRequest.pageToken) &&
        Objects.equals(this.poiSearchTerms, searchTargetingOptionsRequest.poiSearchTerms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertiserId, businessChainSearchTerms, geoRegionSearchTerms, pageSize, pageToken, poiSearchTerms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchTargetingOptionsRequest {\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    businessChainSearchTerms: ").append(toIndentedString(businessChainSearchTerms)).append("\n");
    sb.append("    geoRegionSearchTerms: ").append(toIndentedString(geoRegionSearchTerms)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    poiSearchTerms: ").append(toIndentedString(poiSearchTerms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertiserId");
    openapiFields.add("businessChainSearchTerms");
    openapiFields.add("geoRegionSearchTerms");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("poiSearchTerms");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchTargetingOptionsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchTargetingOptionsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchTargetingOptionsRequest is not found in the empty JSON string", SearchTargetingOptionsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchTargetingOptionsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchTargetingOptionsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `businessChainSearchTerms`
      if (jsonObj.get("businessChainSearchTerms") != null && !jsonObj.get("businessChainSearchTerms").isJsonNull()) {
        BusinessChainSearchTerms.validateJsonElement(jsonObj.get("businessChainSearchTerms"));
      }
      // validate the optional field `geoRegionSearchTerms`
      if (jsonObj.get("geoRegionSearchTerms") != null && !jsonObj.get("geoRegionSearchTerms").isJsonNull()) {
        GeoRegionSearchTerms.validateJsonElement(jsonObj.get("geoRegionSearchTerms"));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      // validate the optional field `poiSearchTerms`
      if (jsonObj.get("poiSearchTerms") != null && !jsonObj.get("poiSearchTerms").isJsonNull()) {
        PoiSearchTerms.validateJsonElement(jsonObj.get("poiSearchTerms"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchTargetingOptionsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchTargetingOptionsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchTargetingOptionsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchTargetingOptionsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchTargetingOptionsRequest>() {
           @Override
           public void write(JsonWriter out, SearchTargetingOptionsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchTargetingOptionsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchTargetingOptionsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchTargetingOptionsRequest
   * @throws IOException if the JSON string is invalid with respect to SearchTargetingOptionsRequest
   */
  public static SearchTargetingOptionsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchTargetingOptionsRequest.class);
  }

  /**
   * Convert an instance of SearchTargetingOptionsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

