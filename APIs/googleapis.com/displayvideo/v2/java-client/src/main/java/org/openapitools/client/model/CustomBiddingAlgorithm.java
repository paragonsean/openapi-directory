/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CustomBiddingModelDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single custom bidding algorithm.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomBiddingAlgorithm {
  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_ID = "customBiddingAlgorithmId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_ID)
  private String customBiddingAlgorithmId;

  /**
   * Required. Immutable. The type of custom bidding algorithm.
   */
  @JsonAdapter(CustomBiddingAlgorithmTypeEnum.Adapter.class)
  public enum CustomBiddingAlgorithmTypeEnum {
    CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED("CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED"),
    
    SCRIPT_BASED("SCRIPT_BASED"),
    
    ADS_DATA_HUB_BASED("ADS_DATA_HUB_BASED"),
    
    GOAL_BUILDER_BASED("GOAL_BUILDER_BASED");

    private String value;

    CustomBiddingAlgorithmTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomBiddingAlgorithmTypeEnum fromValue(String value) {
      for (CustomBiddingAlgorithmTypeEnum b : CustomBiddingAlgorithmTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CustomBiddingAlgorithmTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomBiddingAlgorithmTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomBiddingAlgorithmTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CustomBiddingAlgorithmTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CustomBiddingAlgorithmTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_TYPE = "customBiddingAlgorithmType";
  @SerializedName(SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_TYPE)
  private CustomBiddingAlgorithmTypeEnum customBiddingAlgorithmType;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  /**
   * Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * &#x60;ENTITY_STATUS_ACTIVE&#x60; * &#x60;ENTITY_STATUS_ARCHIVED&#x60;
   */
  @JsonAdapter(EntityStatusEnum.Adapter.class)
  public enum EntityStatusEnum {
    UNSPECIFIED("ENTITY_STATUS_UNSPECIFIED"),
    
    ACTIVE("ENTITY_STATUS_ACTIVE"),
    
    ARCHIVED("ENTITY_STATUS_ARCHIVED"),
    
    DRAFT("ENTITY_STATUS_DRAFT"),
    
    PAUSED("ENTITY_STATUS_PAUSED"),
    
    SCHEDULED_FOR_DELETION("ENTITY_STATUS_SCHEDULED_FOR_DELETION");

    private String value;

    EntityStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityStatusEnum fromValue(String value) {
      for (EntityStatusEnum b : EntityStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntityStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntityStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EntityStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENTITY_STATUS = "entityStatus";
  @SerializedName(SERIALIZED_NAME_ENTITY_STATUS)
  private EntityStatusEnum entityStatus;

  public static final String SERIALIZED_NAME_MODEL_DETAILS = "modelDetails";
  @SerializedName(SERIALIZED_NAME_MODEL_DETAILS)
  private List<CustomBiddingModelDetails> modelDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARTNER_ID = "partnerId";
  @SerializedName(SERIALIZED_NAME_PARTNER_ID)
  private String partnerId;

  public static final String SERIALIZED_NAME_SHARED_ADVERTISER_IDS = "sharedAdvertiserIds";
  @SerializedName(SERIALIZED_NAME_SHARED_ADVERTISER_IDS)
  private List<String> sharedAdvertiserIds = new ArrayList<>();

  public CustomBiddingAlgorithm() {
  }

  public CustomBiddingAlgorithm(
     String customBiddingAlgorithmId, 
     List<CustomBiddingModelDetails> modelDetails, 
     String name
  ) {
    this();
    this.customBiddingAlgorithmId = customBiddingAlgorithmId;
    this.modelDetails = modelDetails;
    this.name = name;
  }

  public CustomBiddingAlgorithm advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Immutable. The unique ID of the advertiser that owns the custom bidding algorithm.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  /**
   * Output only. The unique ID of the custom bidding algorithm. Assigned by the system.
   * @return customBiddingAlgorithmId
   */
  @javax.annotation.Nullable
  public String getCustomBiddingAlgorithmId() {
    return customBiddingAlgorithmId;
  }



  public CustomBiddingAlgorithm customBiddingAlgorithmType(CustomBiddingAlgorithmTypeEnum customBiddingAlgorithmType) {
    this.customBiddingAlgorithmType = customBiddingAlgorithmType;
    return this;
  }

  /**
   * Required. Immutable. The type of custom bidding algorithm.
   * @return customBiddingAlgorithmType
   */
  @javax.annotation.Nullable
  public CustomBiddingAlgorithmTypeEnum getCustomBiddingAlgorithmType() {
    return customBiddingAlgorithmType;
  }

  public void setCustomBiddingAlgorithmType(CustomBiddingAlgorithmTypeEnum customBiddingAlgorithmType) {
    this.customBiddingAlgorithmType = customBiddingAlgorithmType;
  }


  public CustomBiddingAlgorithm displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the custom bidding algorithm. Must be UTF-8 encoded with a maximum size of 240 bytes.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CustomBiddingAlgorithm entityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
    return this;
  }

  /**
   * Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * &#x60;ENTITY_STATUS_ACTIVE&#x60; * &#x60;ENTITY_STATUS_ARCHIVED&#x60;
   * @return entityStatus
   */
  @javax.annotation.Nullable
  public EntityStatusEnum getEntityStatus() {
    return entityStatus;
  }

  public void setEntityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
  }


  /**
   * Output only. The details of custom bidding models for each advertiser who has access. This field may only include the details of the queried advertiser if the algorithm [&#x60;owner&#x60;](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [&#x60;accessor&#x60;](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
   * @return modelDetails
   */
  @javax.annotation.Nullable
  public List<CustomBiddingModelDetails> getModelDetails() {
    return modelDetails;
  }



  /**
   * Output only. The resource name of the custom bidding algorithm.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public CustomBiddingAlgorithm partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

  /**
   * Immutable. The unique ID of the partner that owns the custom bidding algorithm.
   * @return partnerId
   */
  @javax.annotation.Nullable
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }


  public CustomBiddingAlgorithm sharedAdvertiserIds(List<String> sharedAdvertiserIds) {
    this.sharedAdvertiserIds = sharedAdvertiserIds;
    return this;
  }

  public CustomBiddingAlgorithm addSharedAdvertiserIdsItem(String sharedAdvertiserIdsItem) {
    if (this.sharedAdvertiserIds == null) {
      this.sharedAdvertiserIds = new ArrayList<>();
    }
    this.sharedAdvertiserIds.add(sharedAdvertiserIdsItem);
    return this;
  }

  /**
   * The IDs of the advertisers who have access to this algorithm. If advertiser_id is set, this field will only consist of that value. This field will not be set if the algorithm [&#x60;owner&#x60;](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [&#x60;accessor&#x60;](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
   * @return sharedAdvertiserIds
   */
  @javax.annotation.Nullable
  public List<String> getSharedAdvertiserIds() {
    return sharedAdvertiserIds;
  }

  public void setSharedAdvertiserIds(List<String> sharedAdvertiserIds) {
    this.sharedAdvertiserIds = sharedAdvertiserIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomBiddingAlgorithm customBiddingAlgorithm = (CustomBiddingAlgorithm) o;
    return Objects.equals(this.advertiserId, customBiddingAlgorithm.advertiserId) &&
        Objects.equals(this.customBiddingAlgorithmId, customBiddingAlgorithm.customBiddingAlgorithmId) &&
        Objects.equals(this.customBiddingAlgorithmType, customBiddingAlgorithm.customBiddingAlgorithmType) &&
        Objects.equals(this.displayName, customBiddingAlgorithm.displayName) &&
        Objects.equals(this.entityStatus, customBiddingAlgorithm.entityStatus) &&
        Objects.equals(this.modelDetails, customBiddingAlgorithm.modelDetails) &&
        Objects.equals(this.name, customBiddingAlgorithm.name) &&
        Objects.equals(this.partnerId, customBiddingAlgorithm.partnerId) &&
        Objects.equals(this.sharedAdvertiserIds, customBiddingAlgorithm.sharedAdvertiserIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertiserId, customBiddingAlgorithmId, customBiddingAlgorithmType, displayName, entityStatus, modelDetails, name, partnerId, sharedAdvertiserIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomBiddingAlgorithm {\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    customBiddingAlgorithmId: ").append(toIndentedString(customBiddingAlgorithmId)).append("\n");
    sb.append("    customBiddingAlgorithmType: ").append(toIndentedString(customBiddingAlgorithmType)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    entityStatus: ").append(toIndentedString(entityStatus)).append("\n");
    sb.append("    modelDetails: ").append(toIndentedString(modelDetails)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    sharedAdvertiserIds: ").append(toIndentedString(sharedAdvertiserIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertiserId");
    openapiFields.add("customBiddingAlgorithmId");
    openapiFields.add("customBiddingAlgorithmType");
    openapiFields.add("displayName");
    openapiFields.add("entityStatus");
    openapiFields.add("modelDetails");
    openapiFields.add("name");
    openapiFields.add("partnerId");
    openapiFields.add("sharedAdvertiserIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomBiddingAlgorithm
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomBiddingAlgorithm.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomBiddingAlgorithm is not found in the empty JSON string", CustomBiddingAlgorithm.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomBiddingAlgorithm.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomBiddingAlgorithm` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      if ((jsonObj.get("customBiddingAlgorithmId") != null && !jsonObj.get("customBiddingAlgorithmId").isJsonNull()) && !jsonObj.get("customBiddingAlgorithmId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customBiddingAlgorithmId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customBiddingAlgorithmId").toString()));
      }
      if ((jsonObj.get("customBiddingAlgorithmType") != null && !jsonObj.get("customBiddingAlgorithmType").isJsonNull()) && !jsonObj.get("customBiddingAlgorithmType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customBiddingAlgorithmType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customBiddingAlgorithmType").toString()));
      }
      // validate the optional field `customBiddingAlgorithmType`
      if (jsonObj.get("customBiddingAlgorithmType") != null && !jsonObj.get("customBiddingAlgorithmType").isJsonNull()) {
        CustomBiddingAlgorithmTypeEnum.validateJsonElement(jsonObj.get("customBiddingAlgorithmType"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) && !jsonObj.get("entityStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityStatus").toString()));
      }
      // validate the optional field `entityStatus`
      if (jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) {
        EntityStatusEnum.validateJsonElement(jsonObj.get("entityStatus"));
      }
      if (jsonObj.get("modelDetails") != null && !jsonObj.get("modelDetails").isJsonNull()) {
        JsonArray jsonArraymodelDetails = jsonObj.getAsJsonArray("modelDetails");
        if (jsonArraymodelDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("modelDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `modelDetails` to be an array in the JSON string but got `%s`", jsonObj.get("modelDetails").toString()));
          }

          // validate the optional field `modelDetails` (array)
          for (int i = 0; i < jsonArraymodelDetails.size(); i++) {
            CustomBiddingModelDetails.validateJsonElement(jsonArraymodelDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("partnerId") != null && !jsonObj.get("partnerId").isJsonNull()) && !jsonObj.get("partnerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partnerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partnerId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sharedAdvertiserIds") != null && !jsonObj.get("sharedAdvertiserIds").isJsonNull() && !jsonObj.get("sharedAdvertiserIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sharedAdvertiserIds` to be an array in the JSON string but got `%s`", jsonObj.get("sharedAdvertiserIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomBiddingAlgorithm.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomBiddingAlgorithm' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomBiddingAlgorithm> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomBiddingAlgorithm.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomBiddingAlgorithm>() {
           @Override
           public void write(JsonWriter out, CustomBiddingAlgorithm value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomBiddingAlgorithm read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomBiddingAlgorithm given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomBiddingAlgorithm
   * @throws IOException if the JSON string is invalid with respect to CustomBiddingAlgorithm
   */
  public static CustomBiddingAlgorithm fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomBiddingAlgorithm.class);
  }

  /**
   * Convert an instance of CustomBiddingAlgorithm to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

