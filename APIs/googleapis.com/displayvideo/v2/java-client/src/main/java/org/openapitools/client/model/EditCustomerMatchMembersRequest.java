/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ContactInfoList;
import org.openapitools.client.model.MobileDeviceIdList;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for FirstAndThirdPartyAudienceService.EditCustomerMatchMembers.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EditCustomerMatchMembersRequest {
  public static final String SERIALIZED_NAME_ADDED_CONTACT_INFO_LIST = "addedContactInfoList";
  @SerializedName(SERIALIZED_NAME_ADDED_CONTACT_INFO_LIST)
  private ContactInfoList addedContactInfoList;

  public static final String SERIALIZED_NAME_ADDED_MOBILE_DEVICE_ID_LIST = "addedMobileDeviceIdList";
  @SerializedName(SERIALIZED_NAME_ADDED_MOBILE_DEVICE_ID_LIST)
  private MobileDeviceIdList addedMobileDeviceIdList;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_REMOVED_CONTACT_INFO_LIST = "removedContactInfoList";
  @SerializedName(SERIALIZED_NAME_REMOVED_CONTACT_INFO_LIST)
  private ContactInfoList removedContactInfoList;

  public static final String SERIALIZED_NAME_REMOVED_MOBILE_DEVICE_ID_LIST = "removedMobileDeviceIdList";
  @SerializedName(SERIALIZED_NAME_REMOVED_MOBILE_DEVICE_ID_LIST)
  private MobileDeviceIdList removedMobileDeviceIdList;

  public EditCustomerMatchMembersRequest() {
  }

  public EditCustomerMatchMembersRequest addedContactInfoList(ContactInfoList addedContactInfoList) {
    this.addedContactInfoList = addedContactInfoList;
    return this;
  }

  /**
   * Get addedContactInfoList
   * @return addedContactInfoList
   */
  @javax.annotation.Nullable
  public ContactInfoList getAddedContactInfoList() {
    return addedContactInfoList;
  }

  public void setAddedContactInfoList(ContactInfoList addedContactInfoList) {
    this.addedContactInfoList = addedContactInfoList;
  }


  public EditCustomerMatchMembersRequest addedMobileDeviceIdList(MobileDeviceIdList addedMobileDeviceIdList) {
    this.addedMobileDeviceIdList = addedMobileDeviceIdList;
    return this;
  }

  /**
   * Get addedMobileDeviceIdList
   * @return addedMobileDeviceIdList
   */
  @javax.annotation.Nullable
  public MobileDeviceIdList getAddedMobileDeviceIdList() {
    return addedMobileDeviceIdList;
  }

  public void setAddedMobileDeviceIdList(MobileDeviceIdList addedMobileDeviceIdList) {
    this.addedMobileDeviceIdList = addedMobileDeviceIdList;
  }


  public EditCustomerMatchMembersRequest advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * Required. The ID of the owner advertiser of the updated Customer Match FirstAndThirdPartyAudience.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public EditCustomerMatchMembersRequest removedContactInfoList(ContactInfoList removedContactInfoList) {
    this.removedContactInfoList = removedContactInfoList;
    return this;
  }

  /**
   * Get removedContactInfoList
   * @return removedContactInfoList
   */
  @javax.annotation.Nullable
  public ContactInfoList getRemovedContactInfoList() {
    return removedContactInfoList;
  }

  public void setRemovedContactInfoList(ContactInfoList removedContactInfoList) {
    this.removedContactInfoList = removedContactInfoList;
  }


  public EditCustomerMatchMembersRequest removedMobileDeviceIdList(MobileDeviceIdList removedMobileDeviceIdList) {
    this.removedMobileDeviceIdList = removedMobileDeviceIdList;
    return this;
  }

  /**
   * Get removedMobileDeviceIdList
   * @return removedMobileDeviceIdList
   */
  @javax.annotation.Nullable
  public MobileDeviceIdList getRemovedMobileDeviceIdList() {
    return removedMobileDeviceIdList;
  }

  public void setRemovedMobileDeviceIdList(MobileDeviceIdList removedMobileDeviceIdList) {
    this.removedMobileDeviceIdList = removedMobileDeviceIdList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EditCustomerMatchMembersRequest editCustomerMatchMembersRequest = (EditCustomerMatchMembersRequest) o;
    return Objects.equals(this.addedContactInfoList, editCustomerMatchMembersRequest.addedContactInfoList) &&
        Objects.equals(this.addedMobileDeviceIdList, editCustomerMatchMembersRequest.addedMobileDeviceIdList) &&
        Objects.equals(this.advertiserId, editCustomerMatchMembersRequest.advertiserId) &&
        Objects.equals(this.removedContactInfoList, editCustomerMatchMembersRequest.removedContactInfoList) &&
        Objects.equals(this.removedMobileDeviceIdList, editCustomerMatchMembersRequest.removedMobileDeviceIdList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addedContactInfoList, addedMobileDeviceIdList, advertiserId, removedContactInfoList, removedMobileDeviceIdList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EditCustomerMatchMembersRequest {\n");
    sb.append("    addedContactInfoList: ").append(toIndentedString(addedContactInfoList)).append("\n");
    sb.append("    addedMobileDeviceIdList: ").append(toIndentedString(addedMobileDeviceIdList)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    removedContactInfoList: ").append(toIndentedString(removedContactInfoList)).append("\n");
    sb.append("    removedMobileDeviceIdList: ").append(toIndentedString(removedMobileDeviceIdList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addedContactInfoList");
    openapiFields.add("addedMobileDeviceIdList");
    openapiFields.add("advertiserId");
    openapiFields.add("removedContactInfoList");
    openapiFields.add("removedMobileDeviceIdList");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EditCustomerMatchMembersRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EditCustomerMatchMembersRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EditCustomerMatchMembersRequest is not found in the empty JSON string", EditCustomerMatchMembersRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EditCustomerMatchMembersRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EditCustomerMatchMembersRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `addedContactInfoList`
      if (jsonObj.get("addedContactInfoList") != null && !jsonObj.get("addedContactInfoList").isJsonNull()) {
        ContactInfoList.validateJsonElement(jsonObj.get("addedContactInfoList"));
      }
      // validate the optional field `addedMobileDeviceIdList`
      if (jsonObj.get("addedMobileDeviceIdList") != null && !jsonObj.get("addedMobileDeviceIdList").isJsonNull()) {
        MobileDeviceIdList.validateJsonElement(jsonObj.get("addedMobileDeviceIdList"));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `removedContactInfoList`
      if (jsonObj.get("removedContactInfoList") != null && !jsonObj.get("removedContactInfoList").isJsonNull()) {
        ContactInfoList.validateJsonElement(jsonObj.get("removedContactInfoList"));
      }
      // validate the optional field `removedMobileDeviceIdList`
      if (jsonObj.get("removedMobileDeviceIdList") != null && !jsonObj.get("removedMobileDeviceIdList").isJsonNull()) {
        MobileDeviceIdList.validateJsonElement(jsonObj.get("removedMobileDeviceIdList"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EditCustomerMatchMembersRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EditCustomerMatchMembersRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EditCustomerMatchMembersRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EditCustomerMatchMembersRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<EditCustomerMatchMembersRequest>() {
           @Override
           public void write(JsonWriter out, EditCustomerMatchMembersRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EditCustomerMatchMembersRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EditCustomerMatchMembersRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EditCustomerMatchMembersRequest
   * @throws IOException if the JSON string is invalid with respect to EditCustomerMatchMembersRequest
   */
  public static EditCustomerMatchMembersRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EditCustomerMatchMembersRequest.class);
  }

  /**
   * Convert an instance of EditCustomerMatchMembersRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

