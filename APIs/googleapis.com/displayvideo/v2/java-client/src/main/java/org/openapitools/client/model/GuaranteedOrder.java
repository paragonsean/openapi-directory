/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GuaranteedOrderStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A guaranteed order. Guaranteed orders are parent entity of guaranteed inventory sources. When creating a guaranteed inventory source, a guaranteed order ID must be assigned to the inventory source.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GuaranteedOrder {
  public static final String SERIALIZED_NAME_DEFAULT_ADVERTISER_ID = "defaultAdvertiserId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ADVERTISER_ID)
  private String defaultAdvertiserId;

  public static final String SERIALIZED_NAME_DEFAULT_CAMPAIGN_ID = "defaultCampaignId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CAMPAIGN_ID)
  private String defaultCampaignId;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  /**
   * Required. Immutable. The exchange where the guaranteed order originated.
   */
  @JsonAdapter(ExchangeEnum.Adapter.class)
  public enum ExchangeEnum {
    UNSPECIFIED("EXCHANGE_UNSPECIFIED"),
    
    GOOGLE_AD_MANAGER("EXCHANGE_GOOGLE_AD_MANAGER"),
    
    APPNEXUS("EXCHANGE_APPNEXUS"),
    
    BRIGHTROLL("EXCHANGE_BRIGHTROLL"),
    
    ADFORM("EXCHANGE_ADFORM"),
    
    ADMETA("EXCHANGE_ADMETA"),
    
    ADMIXER("EXCHANGE_ADMIXER"),
    
    ADSMOGO("EXCHANGE_ADSMOGO"),
    
    ADSWIZZ("EXCHANGE_ADSWIZZ"),
    
    BIDSWITCH("EXCHANGE_BIDSWITCH"),
    
    BRIGHTROLL_DISPLAY("EXCHANGE_BRIGHTROLL_DISPLAY"),
    
    CADREON("EXCHANGE_CADREON"),
    
    DAILYMOTION("EXCHANGE_DAILYMOTION"),
    
    FIVE("EXCHANGE_FIVE"),
    
    FLUCT("EXCHANGE_FLUCT"),
    
    FREEWHEEL("EXCHANGE_FREEWHEEL"),
    
    GENIEE("EXCHANGE_GENIEE"),
    
    GUMGUM("EXCHANGE_GUMGUM"),
    
    IMOBILE("EXCHANGE_IMOBILE"),
    
    IBILLBOARD("EXCHANGE_IBILLBOARD"),
    
    IMPROVE_DIGITAL("EXCHANGE_IMPROVE_DIGITAL"),
    
    INDEX("EXCHANGE_INDEX"),
    
    KARGO("EXCHANGE_KARGO"),
    
    MICROAD("EXCHANGE_MICROAD"),
    
    MOPUB("EXCHANGE_MOPUB"),
    
    NEND("EXCHANGE_NEND"),
    
    ONE_BY_AOL_DISPLAY("EXCHANGE_ONE_BY_AOL_DISPLAY"),
    
    ONE_BY_AOL_MOBILE("EXCHANGE_ONE_BY_AOL_MOBILE"),
    
    ONE_BY_AOL_VIDEO("EXCHANGE_ONE_BY_AOL_VIDEO"),
    
    OOYALA("EXCHANGE_OOYALA"),
    
    OPENX("EXCHANGE_OPENX"),
    
    PERMODO("EXCHANGE_PERMODO"),
    
    PLATFORMONE("EXCHANGE_PLATFORMONE"),
    
    PLATFORMID("EXCHANGE_PLATFORMID"),
    
    PUBMATIC("EXCHANGE_PUBMATIC"),
    
    PULSEPOINT("EXCHANGE_PULSEPOINT"),
    
    REVENUEMAX("EXCHANGE_REVENUEMAX"),
    
    RUBICON("EXCHANGE_RUBICON"),
    
    SMARTCLIP("EXCHANGE_SMARTCLIP"),
    
    SMARTRTB("EXCHANGE_SMARTRTB"),
    
    SMARTSTREAMTV("EXCHANGE_SMARTSTREAMTV"),
    
    SOVRN("EXCHANGE_SOVRN"),
    
    SPOTXCHANGE("EXCHANGE_SPOTXCHANGE"),
    
    STROER("EXCHANGE_STROER"),
    
    TEADSTV("EXCHANGE_TEADSTV"),
    
    TELARIA("EXCHANGE_TELARIA"),
    
    TVN("EXCHANGE_TVN"),
    
    UNITED("EXCHANGE_UNITED"),
    
    YIELDLAB("EXCHANGE_YIELDLAB"),
    
    YIELDMO("EXCHANGE_YIELDMO"),
    
    UNRULYX("EXCHANGE_UNRULYX"),
    
    OPEN8("EXCHANGE_OPEN8"),
    
    TRITON("EXCHANGE_TRITON"),
    
    TRIPLELIFT("EXCHANGE_TRIPLELIFT"),
    
    TABOOLA("EXCHANGE_TABOOLA"),
    
    INMOBI("EXCHANGE_INMOBI"),
    
    SMAATO("EXCHANGE_SMAATO"),
    
    AJA("EXCHANGE_AJA"),
    
    SUPERSHIP("EXCHANGE_SUPERSHIP"),
    
    NEXSTAR_DIGITAL("EXCHANGE_NEXSTAR_DIGITAL"),
    
    WAZE("EXCHANGE_WAZE"),
    
    SOUNDCAST("EXCHANGE_SOUNDCAST"),
    
    SHARETHROUGH("EXCHANGE_SHARETHROUGH"),
    
    FYBER("EXCHANGE_FYBER"),
    
    RED_FOR_PUBLISHERS("EXCHANGE_RED_FOR_PUBLISHERS"),
    
    MEDIANET("EXCHANGE_MEDIANET"),
    
    TAPJOY("EXCHANGE_TAPJOY"),
    
    VISTAR("EXCHANGE_VISTAR"),
    
    DAX("EXCHANGE_DAX"),
    
    JCD("EXCHANGE_JCD"),
    
    PLACE_EXCHANGE("EXCHANGE_PLACE_EXCHANGE"),
    
    APPLOVIN("EXCHANGE_APPLOVIN"),
    
    CONNATIX("EXCHANGE_CONNATIX"),
    
    RESET_DIGITAL("EXCHANGE_RESET_DIGITAL"),
    
    HIVESTACK("EXCHANGE_HIVESTACK"),
    
    APPLOVIN_GBID("EXCHANGE_APPLOVIN_GBID"),
    
    FYBER_GBID("EXCHANGE_FYBER_GBID"),
    
    UNITY_GBID("EXCHANGE_UNITY_GBID"),
    
    CHARTBOOST_GBID("EXCHANGE_CHARTBOOST_GBID"),
    
    ADMOST_GBID("EXCHANGE_ADMOST_GBID"),
    
    TOPON_GBID("EXCHANGE_TOPON_GBID");

    private String value;

    ExchangeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ExchangeEnum fromValue(String value) {
      for (ExchangeEnum b : ExchangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ExchangeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ExchangeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ExchangeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ExchangeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ExchangeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_EXCHANGE = "exchange";
  @SerializedName(SERIALIZED_NAME_EXCHANGE)
  private ExchangeEnum exchange;

  public static final String SERIALIZED_NAME_GUARANTEED_ORDER_ID = "guaranteedOrderId";
  @SerializedName(SERIALIZED_NAME_GUARANTEED_ORDER_ID)
  private String guaranteedOrderId;

  public static final String SERIALIZED_NAME_LEGACY_GUARANTEED_ORDER_ID = "legacyGuaranteedOrderId";
  @SerializedName(SERIALIZED_NAME_LEGACY_GUARANTEED_ORDER_ID)
  private String legacyGuaranteedOrderId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PUBLISHER_NAME = "publisherName";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_NAME)
  private String publisherName;

  public static final String SERIALIZED_NAME_READ_ACCESS_INHERITED = "readAccessInherited";
  @SerializedName(SERIALIZED_NAME_READ_ACCESS_INHERITED)
  private Boolean readAccessInherited;

  public static final String SERIALIZED_NAME_READ_ADVERTISER_IDS = "readAdvertiserIds";
  @SerializedName(SERIALIZED_NAME_READ_ADVERTISER_IDS)
  private List<String> readAdvertiserIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_READ_WRITE_ADVERTISER_ID = "readWriteAdvertiserId";
  @SerializedName(SERIALIZED_NAME_READ_WRITE_ADVERTISER_ID)
  private String readWriteAdvertiserId;

  public static final String SERIALIZED_NAME_READ_WRITE_PARTNER_ID = "readWritePartnerId";
  @SerializedName(SERIALIZED_NAME_READ_WRITE_PARTNER_ID)
  private String readWritePartnerId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private GuaranteedOrderStatus status;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GuaranteedOrder() {
  }

  public GuaranteedOrder(
     String defaultAdvertiserId, 
     String guaranteedOrderId, 
     String legacyGuaranteedOrderId, 
     String name, 
     String updateTime
  ) {
    this();
    this.defaultAdvertiserId = defaultAdvertiserId;
    this.guaranteedOrderId = guaranteedOrderId;
    this.legacyGuaranteedOrderId = legacyGuaranteedOrderId;
    this.name = name;
    this.updateTime = updateTime;
  }

  /**
   * Output only. The ID of default advertiser of the guaranteed order. The default advertiser is either the read_write_advertiser_id or, if that is not set, the first advertiser listed in read_advertiser_ids. Otherwise, there is no default advertiser.
   * @return defaultAdvertiserId
   */
  @javax.annotation.Nullable
  public String getDefaultAdvertiserId() {
    return defaultAdvertiserId;
  }



  public GuaranteedOrder defaultCampaignId(String defaultCampaignId) {
    this.defaultCampaignId = defaultCampaignId;
    return this;
  }

  /**
   * The ID of the default campaign that is assigned to the guaranteed order. The default campaign must belong to the default advertiser.
   * @return defaultCampaignId
   */
  @javax.annotation.Nullable
  public String getDefaultCampaignId() {
    return defaultCampaignId;
  }

  public void setDefaultCampaignId(String defaultCampaignId) {
    this.defaultCampaignId = defaultCampaignId;
  }


  public GuaranteedOrder displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the guaranteed order. Must be UTF-8 encoded with a maximum size of 240 bytes.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GuaranteedOrder exchange(ExchangeEnum exchange) {
    this.exchange = exchange;
    return this;
  }

  /**
   * Required. Immutable. The exchange where the guaranteed order originated.
   * @return exchange
   */
  @javax.annotation.Nullable
  public ExchangeEnum getExchange() {
    return exchange;
  }

  public void setExchange(ExchangeEnum exchange) {
    this.exchange = exchange;
  }


  /**
   * Output only. The unique identifier of the guaranteed order. The guaranteed order IDs have the format &#x60;{exchange}-{legacy_guaranteed_order_id}&#x60;.
   * @return guaranteedOrderId
   */
  @javax.annotation.Nullable
  public String getGuaranteedOrderId() {
    return guaranteedOrderId;
  }



  /**
   * Output only. The legacy ID of the guaranteed order. Assigned by the original exchange. The legacy ID is unique within one exchange, but is not guaranteed to be unique across all guaranteed orders. This ID is used in SDF and UI.
   * @return legacyGuaranteedOrderId
   */
  @javax.annotation.Nullable
  public String getLegacyGuaranteedOrderId() {
    return legacyGuaranteedOrderId;
  }



  /**
   * Output only. The resource name of the guaranteed order.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GuaranteedOrder publisherName(String publisherName) {
    this.publisherName = publisherName;
    return this;
  }

  /**
   * Required. The publisher name of the guaranteed order. Must be UTF-8 encoded with a maximum size of 240 bytes.
   * @return publisherName
   */
  @javax.annotation.Nullable
  public String getPublisherName() {
    return publisherName;
  }

  public void setPublisherName(String publisherName) {
    this.publisherName = publisherName;
  }


  public GuaranteedOrder readAccessInherited(Boolean readAccessInherited) {
    this.readAccessInherited = readAccessInherited;
    return this;
  }

  /**
   * Whether all advertisers of read_write_partner_id have read access to the guaranteed order. Only applicable if read_write_partner_id is set. If True, overrides read_advertiser_ids.
   * @return readAccessInherited
   */
  @javax.annotation.Nullable
  public Boolean getReadAccessInherited() {
    return readAccessInherited;
  }

  public void setReadAccessInherited(Boolean readAccessInherited) {
    this.readAccessInherited = readAccessInherited;
  }


  public GuaranteedOrder readAdvertiserIds(List<String> readAdvertiserIds) {
    this.readAdvertiserIds = readAdvertiserIds;
    return this;
  }

  public GuaranteedOrder addReadAdvertiserIdsItem(String readAdvertiserIdsItem) {
    if (this.readAdvertiserIds == null) {
      this.readAdvertiserIds = new ArrayList<>();
    }
    this.readAdvertiserIds.add(readAdvertiserIdsItem);
    return this;
  }

  /**
   * The IDs of advertisers with read access to the guaranteed order. This field must not include the advertiser assigned to read_write_advertiser_id if it is set. All advertisers in this field must belong to read_write_partner_id or the same partner as read_write_advertiser_id.
   * @return readAdvertiserIds
   */
  @javax.annotation.Nullable
  public List<String> getReadAdvertiserIds() {
    return readAdvertiserIds;
  }

  public void setReadAdvertiserIds(List<String> readAdvertiserIds) {
    this.readAdvertiserIds = readAdvertiserIds;
  }


  public GuaranteedOrder readWriteAdvertiserId(String readWriteAdvertiserId) {
    this.readWriteAdvertiserId = readWriteAdvertiserId;
    return this;
  }

  /**
   * The advertiser with read/write access to the guaranteed order. This is also the default advertiser of the guaranteed order.
   * @return readWriteAdvertiserId
   */
  @javax.annotation.Nullable
  public String getReadWriteAdvertiserId() {
    return readWriteAdvertiserId;
  }

  public void setReadWriteAdvertiserId(String readWriteAdvertiserId) {
    this.readWriteAdvertiserId = readWriteAdvertiserId;
  }


  public GuaranteedOrder readWritePartnerId(String readWritePartnerId) {
    this.readWritePartnerId = readWritePartnerId;
    return this;
  }

  /**
   * The partner with read/write access to the guaranteed order.
   * @return readWritePartnerId
   */
  @javax.annotation.Nullable
  public String getReadWritePartnerId() {
    return readWritePartnerId;
  }

  public void setReadWritePartnerId(String readWritePartnerId) {
    this.readWritePartnerId = readWritePartnerId;
  }


  public GuaranteedOrder status(GuaranteedOrderStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public GuaranteedOrderStatus getStatus() {
    return status;
  }

  public void setStatus(GuaranteedOrderStatus status) {
    this.status = status;
  }


  /**
   * Output only. The timestamp when the guaranteed order was last updated. Assigned by the system.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GuaranteedOrder guaranteedOrder = (GuaranteedOrder) o;
    return Objects.equals(this.defaultAdvertiserId, guaranteedOrder.defaultAdvertiserId) &&
        Objects.equals(this.defaultCampaignId, guaranteedOrder.defaultCampaignId) &&
        Objects.equals(this.displayName, guaranteedOrder.displayName) &&
        Objects.equals(this.exchange, guaranteedOrder.exchange) &&
        Objects.equals(this.guaranteedOrderId, guaranteedOrder.guaranteedOrderId) &&
        Objects.equals(this.legacyGuaranteedOrderId, guaranteedOrder.legacyGuaranteedOrderId) &&
        Objects.equals(this.name, guaranteedOrder.name) &&
        Objects.equals(this.publisherName, guaranteedOrder.publisherName) &&
        Objects.equals(this.readAccessInherited, guaranteedOrder.readAccessInherited) &&
        Objects.equals(this.readAdvertiserIds, guaranteedOrder.readAdvertiserIds) &&
        Objects.equals(this.readWriteAdvertiserId, guaranteedOrder.readWriteAdvertiserId) &&
        Objects.equals(this.readWritePartnerId, guaranteedOrder.readWritePartnerId) &&
        Objects.equals(this.status, guaranteedOrder.status) &&
        Objects.equals(this.updateTime, guaranteedOrder.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultAdvertiserId, defaultCampaignId, displayName, exchange, guaranteedOrderId, legacyGuaranteedOrderId, name, publisherName, readAccessInherited, readAdvertiserIds, readWriteAdvertiserId, readWritePartnerId, status, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GuaranteedOrder {\n");
    sb.append("    defaultAdvertiserId: ").append(toIndentedString(defaultAdvertiserId)).append("\n");
    sb.append("    defaultCampaignId: ").append(toIndentedString(defaultCampaignId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    guaranteedOrderId: ").append(toIndentedString(guaranteedOrderId)).append("\n");
    sb.append("    legacyGuaranteedOrderId: ").append(toIndentedString(legacyGuaranteedOrderId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    publisherName: ").append(toIndentedString(publisherName)).append("\n");
    sb.append("    readAccessInherited: ").append(toIndentedString(readAccessInherited)).append("\n");
    sb.append("    readAdvertiserIds: ").append(toIndentedString(readAdvertiserIds)).append("\n");
    sb.append("    readWriteAdvertiserId: ").append(toIndentedString(readWriteAdvertiserId)).append("\n");
    sb.append("    readWritePartnerId: ").append(toIndentedString(readWritePartnerId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultAdvertiserId");
    openapiFields.add("defaultCampaignId");
    openapiFields.add("displayName");
    openapiFields.add("exchange");
    openapiFields.add("guaranteedOrderId");
    openapiFields.add("legacyGuaranteedOrderId");
    openapiFields.add("name");
    openapiFields.add("publisherName");
    openapiFields.add("readAccessInherited");
    openapiFields.add("readAdvertiserIds");
    openapiFields.add("readWriteAdvertiserId");
    openapiFields.add("readWritePartnerId");
    openapiFields.add("status");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GuaranteedOrder
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GuaranteedOrder.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GuaranteedOrder is not found in the empty JSON string", GuaranteedOrder.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GuaranteedOrder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GuaranteedOrder` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("defaultAdvertiserId") != null && !jsonObj.get("defaultAdvertiserId").isJsonNull()) && !jsonObj.get("defaultAdvertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultAdvertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultAdvertiserId").toString()));
      }
      if ((jsonObj.get("defaultCampaignId") != null && !jsonObj.get("defaultCampaignId").isJsonNull()) && !jsonObj.get("defaultCampaignId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultCampaignId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultCampaignId").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("exchange") != null && !jsonObj.get("exchange").isJsonNull()) && !jsonObj.get("exchange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exchange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchange").toString()));
      }
      // validate the optional field `exchange`
      if (jsonObj.get("exchange") != null && !jsonObj.get("exchange").isJsonNull()) {
        ExchangeEnum.validateJsonElement(jsonObj.get("exchange"));
      }
      if ((jsonObj.get("guaranteedOrderId") != null && !jsonObj.get("guaranteedOrderId").isJsonNull()) && !jsonObj.get("guaranteedOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guaranteedOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guaranteedOrderId").toString()));
      }
      if ((jsonObj.get("legacyGuaranteedOrderId") != null && !jsonObj.get("legacyGuaranteedOrderId").isJsonNull()) && !jsonObj.get("legacyGuaranteedOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacyGuaranteedOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacyGuaranteedOrderId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("publisherName") != null && !jsonObj.get("publisherName").isJsonNull()) && !jsonObj.get("publisherName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("readAdvertiserIds") != null && !jsonObj.get("readAdvertiserIds").isJsonNull() && !jsonObj.get("readAdvertiserIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `readAdvertiserIds` to be an array in the JSON string but got `%s`", jsonObj.get("readAdvertiserIds").toString()));
      }
      if ((jsonObj.get("readWriteAdvertiserId") != null && !jsonObj.get("readWriteAdvertiserId").isJsonNull()) && !jsonObj.get("readWriteAdvertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readWriteAdvertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readWriteAdvertiserId").toString()));
      }
      if ((jsonObj.get("readWritePartnerId") != null && !jsonObj.get("readWritePartnerId").isJsonNull()) && !jsonObj.get("readWritePartnerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readWritePartnerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readWritePartnerId").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        GuaranteedOrderStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GuaranteedOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GuaranteedOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GuaranteedOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GuaranteedOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<GuaranteedOrder>() {
           @Override
           public void write(JsonWriter out, GuaranteedOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GuaranteedOrder read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GuaranteedOrder given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GuaranteedOrder
   * @throws IOException if the JSON string is invalid with respect to GuaranteedOrder
   */
  public static GuaranteedOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GuaranteedOrder.class);
  }

  /**
   * Convert an instance of GuaranteedOrder to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

