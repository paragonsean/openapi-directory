/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The details of a custom bidding algorithm model for a single shared advertiser.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomBiddingModelDetails {
  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  /**
   * The readiness state of custom bidding model.
   */
  @JsonAdapter(ReadinessStateEnum.Adapter.class)
  public enum ReadinessStateEnum {
    UNSPECIFIED("READINESS_STATE_UNSPECIFIED"),
    
    ACTIVE("READINESS_STATE_ACTIVE"),
    
    INSUFFICIENT_DATA("READINESS_STATE_INSUFFICIENT_DATA"),
    
    TRAINING("READINESS_STATE_TRAINING"),
    
    NO_VALID_SCRIPT("READINESS_STATE_NO_VALID_SCRIPT");

    private String value;

    ReadinessStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReadinessStateEnum fromValue(String value) {
      for (ReadinessStateEnum b : ReadinessStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReadinessStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReadinessStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReadinessStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReadinessStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ReadinessStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_READINESS_STATE = "readinessState";
  @SerializedName(SERIALIZED_NAME_READINESS_STATE)
  private ReadinessStateEnum readinessState;

  /**
   * Output only. The suspension state of custom bidding model.
   */
  @JsonAdapter(SuspensionStateEnum.Adapter.class)
  public enum SuspensionStateEnum {
    UNSPECIFIED("SUSPENSION_STATE_UNSPECIFIED"),
    
    ENABLED("SUSPENSION_STATE_ENABLED"),
    
    DORMANT("SUSPENSION_STATE_DORMANT"),
    
    SUSPENDED("SUSPENSION_STATE_SUSPENDED");

    private String value;

    SuspensionStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SuspensionStateEnum fromValue(String value) {
      for (SuspensionStateEnum b : SuspensionStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SuspensionStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SuspensionStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SuspensionStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SuspensionStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SuspensionStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUSPENSION_STATE = "suspensionState";
  @SerializedName(SERIALIZED_NAME_SUSPENSION_STATE)
  private SuspensionStateEnum suspensionState;

  public CustomBiddingModelDetails() {
  }

  public CustomBiddingModelDetails(
     SuspensionStateEnum suspensionState
  ) {
    this();
    this.suspensionState = suspensionState;
  }

  public CustomBiddingModelDetails advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * The unique ID of the relevant advertiser.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public CustomBiddingModelDetails readinessState(ReadinessStateEnum readinessState) {
    this.readinessState = readinessState;
    return this;
  }

  /**
   * The readiness state of custom bidding model.
   * @return readinessState
   */
  @javax.annotation.Nullable
  public ReadinessStateEnum getReadinessState() {
    return readinessState;
  }

  public void setReadinessState(ReadinessStateEnum readinessState) {
    this.readinessState = readinessState;
  }


  /**
   * Output only. The suspension state of custom bidding model.
   * @return suspensionState
   */
  @javax.annotation.Nullable
  public SuspensionStateEnum getSuspensionState() {
    return suspensionState;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomBiddingModelDetails customBiddingModelDetails = (CustomBiddingModelDetails) o;
    return Objects.equals(this.advertiserId, customBiddingModelDetails.advertiserId) &&
        Objects.equals(this.readinessState, customBiddingModelDetails.readinessState) &&
        Objects.equals(this.suspensionState, customBiddingModelDetails.suspensionState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertiserId, readinessState, suspensionState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomBiddingModelDetails {\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    readinessState: ").append(toIndentedString(readinessState)).append("\n");
    sb.append("    suspensionState: ").append(toIndentedString(suspensionState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertiserId");
    openapiFields.add("readinessState");
    openapiFields.add("suspensionState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomBiddingModelDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomBiddingModelDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomBiddingModelDetails is not found in the empty JSON string", CustomBiddingModelDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomBiddingModelDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomBiddingModelDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      if ((jsonObj.get("readinessState") != null && !jsonObj.get("readinessState").isJsonNull()) && !jsonObj.get("readinessState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readinessState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readinessState").toString()));
      }
      // validate the optional field `readinessState`
      if (jsonObj.get("readinessState") != null && !jsonObj.get("readinessState").isJsonNull()) {
        ReadinessStateEnum.validateJsonElement(jsonObj.get("readinessState"));
      }
      if ((jsonObj.get("suspensionState") != null && !jsonObj.get("suspensionState").isJsonNull()) && !jsonObj.get("suspensionState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspensionState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspensionState").toString()));
      }
      // validate the optional field `suspensionState`
      if (jsonObj.get("suspensionState") != null && !jsonObj.get("suspensionState").isJsonNull()) {
        SuspensionStateEnum.validateJsonElement(jsonObj.get("suspensionState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomBiddingModelDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomBiddingModelDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomBiddingModelDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomBiddingModelDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomBiddingModelDetails>() {
           @Override
           public void write(JsonWriter out, CustomBiddingModelDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomBiddingModelDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomBiddingModelDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomBiddingModelDetails
   * @throws IOException if the JSON string is invalid with respect to CustomBiddingModelDetails
   */
  public static CustomBiddingModelDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomBiddingModelDetails.class);
  }

  /**
   * Convert an instance of CustomBiddingModelDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

