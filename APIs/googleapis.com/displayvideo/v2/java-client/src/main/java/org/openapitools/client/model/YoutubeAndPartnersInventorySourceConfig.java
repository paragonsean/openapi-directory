/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings that control what YouTube related inventories the YouTube and Partners line item will target.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class YoutubeAndPartnersInventorySourceConfig {
  public static final String SERIALIZED_NAME_INCLUDE_GOOGLE_TV = "includeGoogleTv";
  @SerializedName(SERIALIZED_NAME_INCLUDE_GOOGLE_TV)
  private Boolean includeGoogleTv;

  public static final String SERIALIZED_NAME_INCLUDE_YOUTUBE_SEARCH = "includeYoutubeSearch";
  @SerializedName(SERIALIZED_NAME_INCLUDE_YOUTUBE_SEARCH)
  private Boolean includeYoutubeSearch;

  public static final String SERIALIZED_NAME_INCLUDE_YOUTUBE_VIDEO_PARTNERS = "includeYoutubeVideoPartners";
  @SerializedName(SERIALIZED_NAME_INCLUDE_YOUTUBE_VIDEO_PARTNERS)
  private Boolean includeYoutubeVideoPartners;

  public static final String SERIALIZED_NAME_INCLUDE_YOUTUBE_VIDEOS = "includeYoutubeVideos";
  @SerializedName(SERIALIZED_NAME_INCLUDE_YOUTUBE_VIDEOS)
  private Boolean includeYoutubeVideos;

  public YoutubeAndPartnersInventorySourceConfig() {
  }

  public YoutubeAndPartnersInventorySourceConfig includeGoogleTv(Boolean includeGoogleTv) {
    this.includeGoogleTv = includeGoogleTv;
    return this;
  }

  /**
   * Optional. Whether to target inventory in video apps available with Google TV.
   * @return includeGoogleTv
   */
  @javax.annotation.Nullable
  public Boolean getIncludeGoogleTv() {
    return includeGoogleTv;
  }

  public void setIncludeGoogleTv(Boolean includeGoogleTv) {
    this.includeGoogleTv = includeGoogleTv;
  }


  public YoutubeAndPartnersInventorySourceConfig includeYoutubeSearch(Boolean includeYoutubeSearch) {
    this.includeYoutubeSearch = includeYoutubeSearch;
    return this;
  }

  /**
   * Whether to target inventory on the YouTube search results page.
   * @return includeYoutubeSearch
   */
  @javax.annotation.Nullable
  public Boolean getIncludeYoutubeSearch() {
    return includeYoutubeSearch;
  }

  public void setIncludeYoutubeSearch(Boolean includeYoutubeSearch) {
    this.includeYoutubeSearch = includeYoutubeSearch;
  }


  public YoutubeAndPartnersInventorySourceConfig includeYoutubeVideoPartners(Boolean includeYoutubeVideoPartners) {
    this.includeYoutubeVideoPartners = includeYoutubeVideoPartners;
    return this;
  }

  /**
   * Whether to target inventory on a collection of partner sites and apps that follow the same brand safety standards as YouTube.
   * @return includeYoutubeVideoPartners
   */
  @javax.annotation.Nullable
  public Boolean getIncludeYoutubeVideoPartners() {
    return includeYoutubeVideoPartners;
  }

  public void setIncludeYoutubeVideoPartners(Boolean includeYoutubeVideoPartners) {
    this.includeYoutubeVideoPartners = includeYoutubeVideoPartners;
  }


  public YoutubeAndPartnersInventorySourceConfig includeYoutubeVideos(Boolean includeYoutubeVideos) {
    this.includeYoutubeVideos = includeYoutubeVideos;
    return this;
  }

  /**
   * Whether to target inventory of channels and videos on YouTube and YouTube videos embedded on other sites.
   * @return includeYoutubeVideos
   */
  @javax.annotation.Nullable
  public Boolean getIncludeYoutubeVideos() {
    return includeYoutubeVideos;
  }

  public void setIncludeYoutubeVideos(Boolean includeYoutubeVideos) {
    this.includeYoutubeVideos = includeYoutubeVideos;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    YoutubeAndPartnersInventorySourceConfig youtubeAndPartnersInventorySourceConfig = (YoutubeAndPartnersInventorySourceConfig) o;
    return Objects.equals(this.includeGoogleTv, youtubeAndPartnersInventorySourceConfig.includeGoogleTv) &&
        Objects.equals(this.includeYoutubeSearch, youtubeAndPartnersInventorySourceConfig.includeYoutubeSearch) &&
        Objects.equals(this.includeYoutubeVideoPartners, youtubeAndPartnersInventorySourceConfig.includeYoutubeVideoPartners) &&
        Objects.equals(this.includeYoutubeVideos, youtubeAndPartnersInventorySourceConfig.includeYoutubeVideos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeGoogleTv, includeYoutubeSearch, includeYoutubeVideoPartners, includeYoutubeVideos);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class YoutubeAndPartnersInventorySourceConfig {\n");
    sb.append("    includeGoogleTv: ").append(toIndentedString(includeGoogleTv)).append("\n");
    sb.append("    includeYoutubeSearch: ").append(toIndentedString(includeYoutubeSearch)).append("\n");
    sb.append("    includeYoutubeVideoPartners: ").append(toIndentedString(includeYoutubeVideoPartners)).append("\n");
    sb.append("    includeYoutubeVideos: ").append(toIndentedString(includeYoutubeVideos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("includeGoogleTv");
    openapiFields.add("includeYoutubeSearch");
    openapiFields.add("includeYoutubeVideoPartners");
    openapiFields.add("includeYoutubeVideos");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to YoutubeAndPartnersInventorySourceConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!YoutubeAndPartnersInventorySourceConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in YoutubeAndPartnersInventorySourceConfig is not found in the empty JSON string", YoutubeAndPartnersInventorySourceConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!YoutubeAndPartnersInventorySourceConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `YoutubeAndPartnersInventorySourceConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!YoutubeAndPartnersInventorySourceConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'YoutubeAndPartnersInventorySourceConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<YoutubeAndPartnersInventorySourceConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(YoutubeAndPartnersInventorySourceConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<YoutubeAndPartnersInventorySourceConfig>() {
           @Override
           public void write(JsonWriter out, YoutubeAndPartnersInventorySourceConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public YoutubeAndPartnersInventorySourceConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of YoutubeAndPartnersInventorySourceConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of YoutubeAndPartnersInventorySourceConfig
   * @throws IOException if the JSON string is invalid with respect to YoutubeAndPartnersInventorySourceConfig
   */
  public static YoutubeAndPartnersInventorySourceConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, YoutubeAndPartnersInventorySourceConfig.class);
  }

  /**
   * Convert an instance of YoutubeAndPartnersInventorySourceConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

