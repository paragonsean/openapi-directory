/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A strategy that automatically adjusts the bid to meet or beat a specified performance goal.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PerformanceGoalBidStrategy {
  public static final String SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_ID = "customBiddingAlgorithmId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_ID)
  private String customBiddingAlgorithmId;

  public static final String SERIALIZED_NAME_MAX_AVERAGE_CPM_BID_AMOUNT_MICROS = "maxAverageCpmBidAmountMicros";
  @SerializedName(SERIALIZED_NAME_MAX_AVERAGE_CPM_BID_AMOUNT_MICROS)
  private String maxAverageCpmBidAmountMicros;

  public static final String SERIALIZED_NAME_PERFORMANCE_GOAL_AMOUNT_MICROS = "performanceGoalAmountMicros";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_GOAL_AMOUNT_MICROS)
  private String performanceGoalAmountMicros;

  /**
   * Required. The type of the performance goal that the bidding strategy will try to meet or beat. For line item level usage, the value must be one of: * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA&#x60; * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC&#x60; * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM&#x60; * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO&#x60;.
   */
  @JsonAdapter(PerformanceGoalTypeEnum.Adapter.class)
  public enum PerformanceGoalTypeEnum {
    UNSPECIFIED("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED"),
    
    CPA("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA"),
    
    CPC("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC"),
    
    VIEWABLE_CPM("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM"),
    
    CUSTOM_ALGO("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO"),
    
    CIVA("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA"),
    
    IVO_TEN("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN"),
    
    AV_VIEWED("BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED");

    private String value;

    PerformanceGoalTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PerformanceGoalTypeEnum fromValue(String value) {
      for (PerformanceGoalTypeEnum b : PerformanceGoalTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PerformanceGoalTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PerformanceGoalTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PerformanceGoalTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PerformanceGoalTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PerformanceGoalTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PERFORMANCE_GOAL_TYPE = "performanceGoalType";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_GOAL_TYPE)
  private PerformanceGoalTypeEnum performanceGoalType;

  public PerformanceGoalBidStrategy() {
  }

  public PerformanceGoalBidStrategy customBiddingAlgorithmId(String customBiddingAlgorithmId) {
    this.customBiddingAlgorithmId = customBiddingAlgorithmId;
    return this;
  }

  /**
   * The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO&#x60;.
   * @return customBiddingAlgorithmId
   */
  @javax.annotation.Nullable
  public String getCustomBiddingAlgorithmId() {
    return customBiddingAlgorithmId;
  }

  public void setCustomBiddingAlgorithmId(String customBiddingAlgorithmId) {
    this.customBiddingAlgorithmId = customBiddingAlgorithmId;
  }


  public PerformanceGoalBidStrategy maxAverageCpmBidAmountMicros(String maxAverageCpmBidAmountMicros) {
    this.maxAverageCpmBidAmountMicros = maxAverageCpmBidAmountMicros;
    return this;
  }

  /**
   * The maximum average CPM that may be bid, in micros of the advertiser&#39;s currency. Must be greater than or equal to a billable unit of the given currency. Not applicable when performance_goal_type is set to &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM&#x60;. For example, 1500000 represents 1.5 standard units of the currency.
   * @return maxAverageCpmBidAmountMicros
   */
  @javax.annotation.Nullable
  public String getMaxAverageCpmBidAmountMicros() {
    return maxAverageCpmBidAmountMicros;
  }

  public void setMaxAverageCpmBidAmountMicros(String maxAverageCpmBidAmountMicros) {
    this.maxAverageCpmBidAmountMicros = maxAverageCpmBidAmountMicros;
  }


  public PerformanceGoalBidStrategy performanceGoalAmountMicros(String performanceGoalAmountMicros) {
    this.performanceGoalAmountMicros = performanceGoalAmountMicros;
    return this;
  }

  /**
   * Required. The performance goal the bidding strategy will attempt to meet or beat, in micros of the advertiser&#39;s currency or in micro of the ROAS (Return On Advertising Spend) value which is also based on advertiser&#39;s currency. Must be greater than or equal to a billable unit of the given currency and smaller or equal to upper bounds. Each performance_goal_type has its upper bound: * when performance_goal_type is &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA&#x60;, upper bound is 10000.00 USD. * when performance_goal_type is &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC&#x60;, upper bound is 1000.00 USD. * when performance_goal_type is &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM&#x60;, upper bound is 1000.00 USD. * when performance_goal_type is &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO&#x60;, upper bound is 1000.00 and lower bound is 0.01. Example: If set to &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM&#x60;, the bid price will be based on the probability that each available impression will be viewable. For example, if viewable CPM target is $2 and an impression is 40% likely to be viewable, the bid price will be $0.80 CPM (40% of $2). For example, 1500000 represents 1.5 standard units of the currency or ROAS value.
   * @return performanceGoalAmountMicros
   */
  @javax.annotation.Nullable
  public String getPerformanceGoalAmountMicros() {
    return performanceGoalAmountMicros;
  }

  public void setPerformanceGoalAmountMicros(String performanceGoalAmountMicros) {
    this.performanceGoalAmountMicros = performanceGoalAmountMicros;
  }


  public PerformanceGoalBidStrategy performanceGoalType(PerformanceGoalTypeEnum performanceGoalType) {
    this.performanceGoalType = performanceGoalType;
    return this;
  }

  /**
   * Required. The type of the performance goal that the bidding strategy will try to meet or beat. For line item level usage, the value must be one of: * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA&#x60; * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC&#x60; * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM&#x60; * &#x60;BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO&#x60;.
   * @return performanceGoalType
   */
  @javax.annotation.Nullable
  public PerformanceGoalTypeEnum getPerformanceGoalType() {
    return performanceGoalType;
  }

  public void setPerformanceGoalType(PerformanceGoalTypeEnum performanceGoalType) {
    this.performanceGoalType = performanceGoalType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceGoalBidStrategy performanceGoalBidStrategy = (PerformanceGoalBidStrategy) o;
    return Objects.equals(this.customBiddingAlgorithmId, performanceGoalBidStrategy.customBiddingAlgorithmId) &&
        Objects.equals(this.maxAverageCpmBidAmountMicros, performanceGoalBidStrategy.maxAverageCpmBidAmountMicros) &&
        Objects.equals(this.performanceGoalAmountMicros, performanceGoalBidStrategy.performanceGoalAmountMicros) &&
        Objects.equals(this.performanceGoalType, performanceGoalBidStrategy.performanceGoalType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customBiddingAlgorithmId, maxAverageCpmBidAmountMicros, performanceGoalAmountMicros, performanceGoalType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceGoalBidStrategy {\n");
    sb.append("    customBiddingAlgorithmId: ").append(toIndentedString(customBiddingAlgorithmId)).append("\n");
    sb.append("    maxAverageCpmBidAmountMicros: ").append(toIndentedString(maxAverageCpmBidAmountMicros)).append("\n");
    sb.append("    performanceGoalAmountMicros: ").append(toIndentedString(performanceGoalAmountMicros)).append("\n");
    sb.append("    performanceGoalType: ").append(toIndentedString(performanceGoalType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customBiddingAlgorithmId");
    openapiFields.add("maxAverageCpmBidAmountMicros");
    openapiFields.add("performanceGoalAmountMicros");
    openapiFields.add("performanceGoalType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PerformanceGoalBidStrategy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PerformanceGoalBidStrategy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PerformanceGoalBidStrategy is not found in the empty JSON string", PerformanceGoalBidStrategy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PerformanceGoalBidStrategy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PerformanceGoalBidStrategy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customBiddingAlgorithmId") != null && !jsonObj.get("customBiddingAlgorithmId").isJsonNull()) && !jsonObj.get("customBiddingAlgorithmId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customBiddingAlgorithmId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customBiddingAlgorithmId").toString()));
      }
      if ((jsonObj.get("maxAverageCpmBidAmountMicros") != null && !jsonObj.get("maxAverageCpmBidAmountMicros").isJsonNull()) && !jsonObj.get("maxAverageCpmBidAmountMicros").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxAverageCpmBidAmountMicros` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxAverageCpmBidAmountMicros").toString()));
      }
      if ((jsonObj.get("performanceGoalAmountMicros") != null && !jsonObj.get("performanceGoalAmountMicros").isJsonNull()) && !jsonObj.get("performanceGoalAmountMicros").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `performanceGoalAmountMicros` to be a primitive type in the JSON string but got `%s`", jsonObj.get("performanceGoalAmountMicros").toString()));
      }
      if ((jsonObj.get("performanceGoalType") != null && !jsonObj.get("performanceGoalType").isJsonNull()) && !jsonObj.get("performanceGoalType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `performanceGoalType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("performanceGoalType").toString()));
      }
      // validate the optional field `performanceGoalType`
      if (jsonObj.get("performanceGoalType") != null && !jsonObj.get("performanceGoalType").isJsonNull()) {
        PerformanceGoalTypeEnum.validateJsonElement(jsonObj.get("performanceGoalType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PerformanceGoalBidStrategy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PerformanceGoalBidStrategy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PerformanceGoalBidStrategy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PerformanceGoalBidStrategy.class));

       return (TypeAdapter<T>) new TypeAdapter<PerformanceGoalBidStrategy>() {
           @Override
           public void write(JsonWriter out, PerformanceGoalBidStrategy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PerformanceGoalBidStrategy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PerformanceGoalBidStrategy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PerformanceGoalBidStrategy
   * @throws IOException if the JSON string is invalid with respect to PerformanceGoalBidStrategy
   */
  public static PerformanceGoalBidStrategy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PerformanceGoalBidStrategy.class);
  }

  /**
   * Convert an instance of PerformanceGoalBidStrategy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

