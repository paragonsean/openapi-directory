/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CombinedAudienceGroup;
import org.openapitools.client.model.CustomListGroup;
import org.openapitools.client.model.FirstAndThirdPartyAudienceGroup;
import org.openapitools.client.model.GoogleAudienceGroup;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Assigned audience group targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is &#x60;TARGETING_TYPE_AUDIENCE_GROUP&#x60;. The relation between each group is UNION, except for excluded_first_and_third_party_audience_group and excluded_google_audience_group, of which COMPLEMENT is used as an INTERSECTION with other groups.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AudienceGroupAssignedTargetingOptionDetails {
  public static final String SERIALIZED_NAME_EXCLUDED_FIRST_AND_THIRD_PARTY_AUDIENCE_GROUP = "excludedFirstAndThirdPartyAudienceGroup";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_FIRST_AND_THIRD_PARTY_AUDIENCE_GROUP)
  private FirstAndThirdPartyAudienceGroup excludedFirstAndThirdPartyAudienceGroup;

  public static final String SERIALIZED_NAME_EXCLUDED_GOOGLE_AUDIENCE_GROUP = "excludedGoogleAudienceGroup";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_GOOGLE_AUDIENCE_GROUP)
  private GoogleAudienceGroup excludedGoogleAudienceGroup;

  public static final String SERIALIZED_NAME_INCLUDED_COMBINED_AUDIENCE_GROUP = "includedCombinedAudienceGroup";
  @SerializedName(SERIALIZED_NAME_INCLUDED_COMBINED_AUDIENCE_GROUP)
  private CombinedAudienceGroup includedCombinedAudienceGroup;

  public static final String SERIALIZED_NAME_INCLUDED_CUSTOM_LIST_GROUP = "includedCustomListGroup";
  @SerializedName(SERIALIZED_NAME_INCLUDED_CUSTOM_LIST_GROUP)
  private CustomListGroup includedCustomListGroup;

  public static final String SERIALIZED_NAME_INCLUDED_FIRST_AND_THIRD_PARTY_AUDIENCE_GROUPS = "includedFirstAndThirdPartyAudienceGroups";
  @SerializedName(SERIALIZED_NAME_INCLUDED_FIRST_AND_THIRD_PARTY_AUDIENCE_GROUPS)
  private List<FirstAndThirdPartyAudienceGroup> includedFirstAndThirdPartyAudienceGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_INCLUDED_GOOGLE_AUDIENCE_GROUP = "includedGoogleAudienceGroup";
  @SerializedName(SERIALIZED_NAME_INCLUDED_GOOGLE_AUDIENCE_GROUP)
  private GoogleAudienceGroup includedGoogleAudienceGroup;

  public AudienceGroupAssignedTargetingOptionDetails() {
  }

  public AudienceGroupAssignedTargetingOptionDetails excludedFirstAndThirdPartyAudienceGroup(FirstAndThirdPartyAudienceGroup excludedFirstAndThirdPartyAudienceGroup) {
    this.excludedFirstAndThirdPartyAudienceGroup = excludedFirstAndThirdPartyAudienceGroup;
    return this;
  }

  /**
   * Get excludedFirstAndThirdPartyAudienceGroup
   * @return excludedFirstAndThirdPartyAudienceGroup
   */
  @javax.annotation.Nullable
  public FirstAndThirdPartyAudienceGroup getExcludedFirstAndThirdPartyAudienceGroup() {
    return excludedFirstAndThirdPartyAudienceGroup;
  }

  public void setExcludedFirstAndThirdPartyAudienceGroup(FirstAndThirdPartyAudienceGroup excludedFirstAndThirdPartyAudienceGroup) {
    this.excludedFirstAndThirdPartyAudienceGroup = excludedFirstAndThirdPartyAudienceGroup;
  }


  public AudienceGroupAssignedTargetingOptionDetails excludedGoogleAudienceGroup(GoogleAudienceGroup excludedGoogleAudienceGroup) {
    this.excludedGoogleAudienceGroup = excludedGoogleAudienceGroup;
    return this;
  }

  /**
   * Get excludedGoogleAudienceGroup
   * @return excludedGoogleAudienceGroup
   */
  @javax.annotation.Nullable
  public GoogleAudienceGroup getExcludedGoogleAudienceGroup() {
    return excludedGoogleAudienceGroup;
  }

  public void setExcludedGoogleAudienceGroup(GoogleAudienceGroup excludedGoogleAudienceGroup) {
    this.excludedGoogleAudienceGroup = excludedGoogleAudienceGroup;
  }


  public AudienceGroupAssignedTargetingOptionDetails includedCombinedAudienceGroup(CombinedAudienceGroup includedCombinedAudienceGroup) {
    this.includedCombinedAudienceGroup = includedCombinedAudienceGroup;
    return this;
  }

  /**
   * Get includedCombinedAudienceGroup
   * @return includedCombinedAudienceGroup
   */
  @javax.annotation.Nullable
  public CombinedAudienceGroup getIncludedCombinedAudienceGroup() {
    return includedCombinedAudienceGroup;
  }

  public void setIncludedCombinedAudienceGroup(CombinedAudienceGroup includedCombinedAudienceGroup) {
    this.includedCombinedAudienceGroup = includedCombinedAudienceGroup;
  }


  public AudienceGroupAssignedTargetingOptionDetails includedCustomListGroup(CustomListGroup includedCustomListGroup) {
    this.includedCustomListGroup = includedCustomListGroup;
    return this;
  }

  /**
   * Get includedCustomListGroup
   * @return includedCustomListGroup
   */
  @javax.annotation.Nullable
  public CustomListGroup getIncludedCustomListGroup() {
    return includedCustomListGroup;
  }

  public void setIncludedCustomListGroup(CustomListGroup includedCustomListGroup) {
    this.includedCustomListGroup = includedCustomListGroup;
  }


  public AudienceGroupAssignedTargetingOptionDetails includedFirstAndThirdPartyAudienceGroups(List<FirstAndThirdPartyAudienceGroup> includedFirstAndThirdPartyAudienceGroups) {
    this.includedFirstAndThirdPartyAudienceGroups = includedFirstAndThirdPartyAudienceGroups;
    return this;
  }

  public AudienceGroupAssignedTargetingOptionDetails addIncludedFirstAndThirdPartyAudienceGroupsItem(FirstAndThirdPartyAudienceGroup includedFirstAndThirdPartyAudienceGroupsItem) {
    if (this.includedFirstAndThirdPartyAudienceGroups == null) {
      this.includedFirstAndThirdPartyAudienceGroups = new ArrayList<>();
    }
    this.includedFirstAndThirdPartyAudienceGroups.add(includedFirstAndThirdPartyAudienceGroupsItem);
    return this;
  }

  /**
   * The first and third party audience ids and recencies of included first and third party audience groups. Each first and third party audience group contains first and third party audience ids only. The relation between each first and third party audience group is INTERSECTION, and the result is UNION&#39;ed with other audience groups. Repeated groups with same settings will be ignored.
   * @return includedFirstAndThirdPartyAudienceGroups
   */
  @javax.annotation.Nullable
  public List<FirstAndThirdPartyAudienceGroup> getIncludedFirstAndThirdPartyAudienceGroups() {
    return includedFirstAndThirdPartyAudienceGroups;
  }

  public void setIncludedFirstAndThirdPartyAudienceGroups(List<FirstAndThirdPartyAudienceGroup> includedFirstAndThirdPartyAudienceGroups) {
    this.includedFirstAndThirdPartyAudienceGroups = includedFirstAndThirdPartyAudienceGroups;
  }


  public AudienceGroupAssignedTargetingOptionDetails includedGoogleAudienceGroup(GoogleAudienceGroup includedGoogleAudienceGroup) {
    this.includedGoogleAudienceGroup = includedGoogleAudienceGroup;
    return this;
  }

  /**
   * Get includedGoogleAudienceGroup
   * @return includedGoogleAudienceGroup
   */
  @javax.annotation.Nullable
  public GoogleAudienceGroup getIncludedGoogleAudienceGroup() {
    return includedGoogleAudienceGroup;
  }

  public void setIncludedGoogleAudienceGroup(GoogleAudienceGroup includedGoogleAudienceGroup) {
    this.includedGoogleAudienceGroup = includedGoogleAudienceGroup;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AudienceGroupAssignedTargetingOptionDetails audienceGroupAssignedTargetingOptionDetails = (AudienceGroupAssignedTargetingOptionDetails) o;
    return Objects.equals(this.excludedFirstAndThirdPartyAudienceGroup, audienceGroupAssignedTargetingOptionDetails.excludedFirstAndThirdPartyAudienceGroup) &&
        Objects.equals(this.excludedGoogleAudienceGroup, audienceGroupAssignedTargetingOptionDetails.excludedGoogleAudienceGroup) &&
        Objects.equals(this.includedCombinedAudienceGroup, audienceGroupAssignedTargetingOptionDetails.includedCombinedAudienceGroup) &&
        Objects.equals(this.includedCustomListGroup, audienceGroupAssignedTargetingOptionDetails.includedCustomListGroup) &&
        Objects.equals(this.includedFirstAndThirdPartyAudienceGroups, audienceGroupAssignedTargetingOptionDetails.includedFirstAndThirdPartyAudienceGroups) &&
        Objects.equals(this.includedGoogleAudienceGroup, audienceGroupAssignedTargetingOptionDetails.includedGoogleAudienceGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(excludedFirstAndThirdPartyAudienceGroup, excludedGoogleAudienceGroup, includedCombinedAudienceGroup, includedCustomListGroup, includedFirstAndThirdPartyAudienceGroups, includedGoogleAudienceGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AudienceGroupAssignedTargetingOptionDetails {\n");
    sb.append("    excludedFirstAndThirdPartyAudienceGroup: ").append(toIndentedString(excludedFirstAndThirdPartyAudienceGroup)).append("\n");
    sb.append("    excludedGoogleAudienceGroup: ").append(toIndentedString(excludedGoogleAudienceGroup)).append("\n");
    sb.append("    includedCombinedAudienceGroup: ").append(toIndentedString(includedCombinedAudienceGroup)).append("\n");
    sb.append("    includedCustomListGroup: ").append(toIndentedString(includedCustomListGroup)).append("\n");
    sb.append("    includedFirstAndThirdPartyAudienceGroups: ").append(toIndentedString(includedFirstAndThirdPartyAudienceGroups)).append("\n");
    sb.append("    includedGoogleAudienceGroup: ").append(toIndentedString(includedGoogleAudienceGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("excludedFirstAndThirdPartyAudienceGroup");
    openapiFields.add("excludedGoogleAudienceGroup");
    openapiFields.add("includedCombinedAudienceGroup");
    openapiFields.add("includedCustomListGroup");
    openapiFields.add("includedFirstAndThirdPartyAudienceGroups");
    openapiFields.add("includedGoogleAudienceGroup");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AudienceGroupAssignedTargetingOptionDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AudienceGroupAssignedTargetingOptionDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AudienceGroupAssignedTargetingOptionDetails is not found in the empty JSON string", AudienceGroupAssignedTargetingOptionDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AudienceGroupAssignedTargetingOptionDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AudienceGroupAssignedTargetingOptionDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `excludedFirstAndThirdPartyAudienceGroup`
      if (jsonObj.get("excludedFirstAndThirdPartyAudienceGroup") != null && !jsonObj.get("excludedFirstAndThirdPartyAudienceGroup").isJsonNull()) {
        FirstAndThirdPartyAudienceGroup.validateJsonElement(jsonObj.get("excludedFirstAndThirdPartyAudienceGroup"));
      }
      // validate the optional field `excludedGoogleAudienceGroup`
      if (jsonObj.get("excludedGoogleAudienceGroup") != null && !jsonObj.get("excludedGoogleAudienceGroup").isJsonNull()) {
        GoogleAudienceGroup.validateJsonElement(jsonObj.get("excludedGoogleAudienceGroup"));
      }
      // validate the optional field `includedCombinedAudienceGroup`
      if (jsonObj.get("includedCombinedAudienceGroup") != null && !jsonObj.get("includedCombinedAudienceGroup").isJsonNull()) {
        CombinedAudienceGroup.validateJsonElement(jsonObj.get("includedCombinedAudienceGroup"));
      }
      // validate the optional field `includedCustomListGroup`
      if (jsonObj.get("includedCustomListGroup") != null && !jsonObj.get("includedCustomListGroup").isJsonNull()) {
        CustomListGroup.validateJsonElement(jsonObj.get("includedCustomListGroup"));
      }
      if (jsonObj.get("includedFirstAndThirdPartyAudienceGroups") != null && !jsonObj.get("includedFirstAndThirdPartyAudienceGroups").isJsonNull()) {
        JsonArray jsonArrayincludedFirstAndThirdPartyAudienceGroups = jsonObj.getAsJsonArray("includedFirstAndThirdPartyAudienceGroups");
        if (jsonArrayincludedFirstAndThirdPartyAudienceGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("includedFirstAndThirdPartyAudienceGroups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `includedFirstAndThirdPartyAudienceGroups` to be an array in the JSON string but got `%s`", jsonObj.get("includedFirstAndThirdPartyAudienceGroups").toString()));
          }

          // validate the optional field `includedFirstAndThirdPartyAudienceGroups` (array)
          for (int i = 0; i < jsonArrayincludedFirstAndThirdPartyAudienceGroups.size(); i++) {
            FirstAndThirdPartyAudienceGroup.validateJsonElement(jsonArrayincludedFirstAndThirdPartyAudienceGroups.get(i));
          };
        }
      }
      // validate the optional field `includedGoogleAudienceGroup`
      if (jsonObj.get("includedGoogleAudienceGroup") != null && !jsonObj.get("includedGoogleAudienceGroup").isJsonNull()) {
        GoogleAudienceGroup.validateJsonElement(jsonObj.get("includedGoogleAudienceGroup"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AudienceGroupAssignedTargetingOptionDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AudienceGroupAssignedTargetingOptionDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AudienceGroupAssignedTargetingOptionDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AudienceGroupAssignedTargetingOptionDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AudienceGroupAssignedTargetingOptionDetails>() {
           @Override
           public void write(JsonWriter out, AudienceGroupAssignedTargetingOptionDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AudienceGroupAssignedTargetingOptionDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AudienceGroupAssignedTargetingOptionDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AudienceGroupAssignedTargetingOptionDetails
   * @throws IOException if the JSON string is invalid with respect to AudienceGroupAssignedTargetingOptionDetails
   */
  public static AudienceGroupAssignedTargetingOptionDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AudienceGroupAssignedTargetingOptionDetails.class);
  }

  /**
   * Convert an instance of AudienceGroupAssignedTargetingOptionDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

