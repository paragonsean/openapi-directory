/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SdfConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Structured Data Files (SDF) settings of an advertiser.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:09.670881-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdvertiserSdfConfig {
  public static final String SERIALIZED_NAME_OVERRIDE_PARTNER_SDF_CONFIG = "overridePartnerSdfConfig";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_PARTNER_SDF_CONFIG)
  private Boolean overridePartnerSdfConfig;

  public static final String SERIALIZED_NAME_SDF_CONFIG = "sdfConfig";
  @SerializedName(SERIALIZED_NAME_SDF_CONFIG)
  private SdfConfig sdfConfig;

  public AdvertiserSdfConfig() {
  }

  public AdvertiserSdfConfig overridePartnerSdfConfig(Boolean overridePartnerSdfConfig) {
    this.overridePartnerSdfConfig = overridePartnerSdfConfig;
    return this;
  }

  /**
   * Whether or not this advertiser overrides the SDF configuration of its parent partner. By default, an advertiser inherits the SDF configuration from the parent partner. To override the partner configuration, set this field to &#x60;true&#x60; and provide the new configuration in sdfConfig.
   * @return overridePartnerSdfConfig
   */
  @javax.annotation.Nullable
  public Boolean getOverridePartnerSdfConfig() {
    return overridePartnerSdfConfig;
  }

  public void setOverridePartnerSdfConfig(Boolean overridePartnerSdfConfig) {
    this.overridePartnerSdfConfig = overridePartnerSdfConfig;
  }


  public AdvertiserSdfConfig sdfConfig(SdfConfig sdfConfig) {
    this.sdfConfig = sdfConfig;
    return this;
  }

  /**
   * Get sdfConfig
   * @return sdfConfig
   */
  @javax.annotation.Nullable
  public SdfConfig getSdfConfig() {
    return sdfConfig;
  }

  public void setSdfConfig(SdfConfig sdfConfig) {
    this.sdfConfig = sdfConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvertiserSdfConfig advertiserSdfConfig = (AdvertiserSdfConfig) o;
    return Objects.equals(this.overridePartnerSdfConfig, advertiserSdfConfig.overridePartnerSdfConfig) &&
        Objects.equals(this.sdfConfig, advertiserSdfConfig.sdfConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(overridePartnerSdfConfig, sdfConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvertiserSdfConfig {\n");
    sb.append("    overridePartnerSdfConfig: ").append(toIndentedString(overridePartnerSdfConfig)).append("\n");
    sb.append("    sdfConfig: ").append(toIndentedString(sdfConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("overridePartnerSdfConfig");
    openapiFields.add("sdfConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdvertiserSdfConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdvertiserSdfConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdvertiserSdfConfig is not found in the empty JSON string", AdvertiserSdfConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdvertiserSdfConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdvertiserSdfConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `sdfConfig`
      if (jsonObj.get("sdfConfig") != null && !jsonObj.get("sdfConfig").isJsonNull()) {
        SdfConfig.validateJsonElement(jsonObj.get("sdfConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdvertiserSdfConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdvertiserSdfConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdvertiserSdfConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdvertiserSdfConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AdvertiserSdfConfig>() {
           @Override
           public void write(JsonWriter out, AdvertiserSdfConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdvertiserSdfConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdvertiserSdfConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdvertiserSdfConfig
   * @throws IOException if the JSON string is invalid with respect to AdvertiserSdfConfig
   */
  public static AdvertiserSdfConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdvertiserSdfConfig.class);
  }

  /**
   * Convert an instance of AdvertiserSdfConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

