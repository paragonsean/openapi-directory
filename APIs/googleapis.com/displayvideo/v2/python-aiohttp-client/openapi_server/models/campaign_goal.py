# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.performance_goal import PerformanceGoal
from openapi_server import util


class CampaignGoal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_goal_type: str=None, performance_goal: PerformanceGoal=None):
        """CampaignGoal - a model defined in OpenAPI

        :param campaign_goal_type: The campaign_goal_type of this CampaignGoal.
        :param performance_goal: The performance_goal of this CampaignGoal.
        """
        self.openapi_types = {
            'campaign_goal_type': str,
            'performance_goal': PerformanceGoal
        }

        self.attribute_map = {
            'campaign_goal_type': 'campaignGoalType',
            'performance_goal': 'performanceGoal'
        }

        self._campaign_goal_type = campaign_goal_type
        self._performance_goal = performance_goal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CampaignGoal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CampaignGoal of this CampaignGoal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_goal_type(self):
        """Gets the campaign_goal_type of this CampaignGoal.

        Required. The type of the campaign goal.

        :return: The campaign_goal_type of this CampaignGoal.
        :rtype: str
        """
        return self._campaign_goal_type

    @campaign_goal_type.setter
    def campaign_goal_type(self, campaign_goal_type):
        """Sets the campaign_goal_type of this CampaignGoal.

        Required. The type of the campaign goal.

        :param campaign_goal_type: The campaign_goal_type of this CampaignGoal.
        :type campaign_goal_type: str
        """
        allowed_values = ["CAMPAIGN_GOAL_TYPE_UNSPECIFIED", "CAMPAIGN_GOAL_TYPE_APP_INSTALL", "CAMPAIGN_GOAL_TYPE_BRAND_AWARENESS", "CAMPAIGN_GOAL_TYPE_OFFLINE_ACTION", "CAMPAIGN_GOAL_TYPE_ONLINE_ACTION"]  # noqa: E501
        if campaign_goal_type not in allowed_values:
            raise ValueError(
                "Invalid value for `campaign_goal_type` ({0}), must be one of {1}"
                .format(campaign_goal_type, allowed_values)
            )

        self._campaign_goal_type = campaign_goal_type

    @property
    def performance_goal(self):
        """Gets the performance_goal of this CampaignGoal.


        :return: The performance_goal of this CampaignGoal.
        :rtype: PerformanceGoal
        """
        return self._performance_goal

    @performance_goal.setter
    def performance_goal(self, performance_goal):
        """Sets the performance_goal of this CampaignGoal.


        :param performance_goal: The performance_goal of this CampaignGoal.
        :type performance_goal: PerformanceGoal
        """

        self._performance_goal = performance_goal
