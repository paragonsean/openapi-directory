# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_asset import ImageAsset
from openapi_server.models.youtube_video_details import YoutubeVideoDetails
from openapi_server import util


class CommonInStreamAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_button_label: str=None, action_headline: str=None, companion_banner: ImageAsset=None, display_url: str=None, final_url: str=None, tracking_url: str=None, video: YoutubeVideoDetails=None):
        """CommonInStreamAttribute - a model defined in OpenAPI

        :param action_button_label: The action_button_label of this CommonInStreamAttribute.
        :param action_headline: The action_headline of this CommonInStreamAttribute.
        :param companion_banner: The companion_banner of this CommonInStreamAttribute.
        :param display_url: The display_url of this CommonInStreamAttribute.
        :param final_url: The final_url of this CommonInStreamAttribute.
        :param tracking_url: The tracking_url of this CommonInStreamAttribute.
        :param video: The video of this CommonInStreamAttribute.
        """
        self.openapi_types = {
            'action_button_label': str,
            'action_headline': str,
            'companion_banner': ImageAsset,
            'display_url': str,
            'final_url': str,
            'tracking_url': str,
            'video': YoutubeVideoDetails
        }

        self.attribute_map = {
            'action_button_label': 'actionButtonLabel',
            'action_headline': 'actionHeadline',
            'companion_banner': 'companionBanner',
            'display_url': 'displayUrl',
            'final_url': 'finalUrl',
            'tracking_url': 'trackingUrl',
            'video': 'video'
        }

        self._action_button_label = action_button_label
        self._action_headline = action_headline
        self._companion_banner = companion_banner
        self._display_url = display_url
        self._final_url = final_url
        self._tracking_url = tracking_url
        self._video = video

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommonInStreamAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommonInStreamAttribute of this CommonInStreamAttribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_button_label(self):
        """Gets the action_button_label of this CommonInStreamAttribute.

        The text on the call-to-action button.

        :return: The action_button_label of this CommonInStreamAttribute.
        :rtype: str
        """
        return self._action_button_label

    @action_button_label.setter
    def action_button_label(self, action_button_label):
        """Sets the action_button_label of this CommonInStreamAttribute.

        The text on the call-to-action button.

        :param action_button_label: The action_button_label of this CommonInStreamAttribute.
        :type action_button_label: str
        """

        self._action_button_label = action_button_label

    @property
    def action_headline(self):
        """Gets the action_headline of this CommonInStreamAttribute.

        The headline of the call-to-action banner.

        :return: The action_headline of this CommonInStreamAttribute.
        :rtype: str
        """
        return self._action_headline

    @action_headline.setter
    def action_headline(self, action_headline):
        """Sets the action_headline of this CommonInStreamAttribute.

        The headline of the call-to-action banner.

        :param action_headline: The action_headline of this CommonInStreamAttribute.
        :type action_headline: str
        """

        self._action_headline = action_headline

    @property
    def companion_banner(self):
        """Gets the companion_banner of this CommonInStreamAttribute.


        :return: The companion_banner of this CommonInStreamAttribute.
        :rtype: ImageAsset
        """
        return self._companion_banner

    @companion_banner.setter
    def companion_banner(self, companion_banner):
        """Sets the companion_banner of this CommonInStreamAttribute.


        :param companion_banner: The companion_banner of this CommonInStreamAttribute.
        :type companion_banner: ImageAsset
        """

        self._companion_banner = companion_banner

    @property
    def display_url(self):
        """Gets the display_url of this CommonInStreamAttribute.

        The webpage address that appears with the ad.

        :return: The display_url of this CommonInStreamAttribute.
        :rtype: str
        """
        return self._display_url

    @display_url.setter
    def display_url(self, display_url):
        """Sets the display_url of this CommonInStreamAttribute.

        The webpage address that appears with the ad.

        :param display_url: The display_url of this CommonInStreamAttribute.
        :type display_url: str
        """

        self._display_url = display_url

    @property
    def final_url(self):
        """Gets the final_url of this CommonInStreamAttribute.

        The URL address of the webpage that people reach after they click the ad.

        :return: The final_url of this CommonInStreamAttribute.
        :rtype: str
        """
        return self._final_url

    @final_url.setter
    def final_url(self, final_url):
        """Sets the final_url of this CommonInStreamAttribute.

        The URL address of the webpage that people reach after they click the ad.

        :param final_url: The final_url of this CommonInStreamAttribute.
        :type final_url: str
        """

        self._final_url = final_url

    @property
    def tracking_url(self):
        """Gets the tracking_url of this CommonInStreamAttribute.

        The URL address loaded in the background for tracking purposes.

        :return: The tracking_url of this CommonInStreamAttribute.
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this CommonInStreamAttribute.

        The URL address loaded in the background for tracking purposes.

        :param tracking_url: The tracking_url of this CommonInStreamAttribute.
        :type tracking_url: str
        """

        self._tracking_url = tracking_url

    @property
    def video(self):
        """Gets the video of this CommonInStreamAttribute.


        :return: The video of this CommonInStreamAttribute.
        :rtype: YoutubeVideoDetails
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this CommonInStreamAttribute.


        :param video: The video of this CommonInStreamAttribute.
        :type video: YoutubeVideoDetails
        """

        self._video = video
