# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentOutstreamPositionTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_outstream_position: str=None):
        """ContentOutstreamPositionTargetingOptionDetails - a model defined in OpenAPI

        :param content_outstream_position: The content_outstream_position of this ContentOutstreamPositionTargetingOptionDetails.
        """
        self.openapi_types = {
            'content_outstream_position': str
        }

        self.attribute_map = {
            'content_outstream_position': 'contentOutstreamPosition'
        }

        self._content_outstream_position = content_outstream_position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentOutstreamPositionTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentOutstreamPositionTargetingOptionDetails of this ContentOutstreamPositionTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_outstream_position(self):
        """Gets the content_outstream_position of this ContentOutstreamPositionTargetingOptionDetails.

        Output only. The content outstream position.

        :return: The content_outstream_position of this ContentOutstreamPositionTargetingOptionDetails.
        :rtype: str
        """
        return self._content_outstream_position

    @content_outstream_position.setter
    def content_outstream_position(self, content_outstream_position):
        """Sets the content_outstream_position of this ContentOutstreamPositionTargetingOptionDetails.

        Output only. The content outstream position.

        :param content_outstream_position: The content_outstream_position of this ContentOutstreamPositionTargetingOptionDetails.
        :type content_outstream_position: str
        """
        allowed_values = ["CONTENT_OUTSTREAM_POSITION_UNSPECIFIED", "CONTENT_OUTSTREAM_POSITION_UNKNOWN", "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE", "CONTENT_OUTSTREAM_POSITION_IN_BANNER", "CONTENT_OUTSTREAM_POSITION_IN_FEED", "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"]  # noqa: E501
        if content_outstream_position not in allowed_values:
            raise ValueError(
                "Invalid value for `content_outstream_position` ({0}), must be one of {1}"
                .format(content_outstream_position, allowed_values)
            )

        self._content_outstream_position = content_outstream_position
