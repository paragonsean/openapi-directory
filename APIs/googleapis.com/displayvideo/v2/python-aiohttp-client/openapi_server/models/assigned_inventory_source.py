# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssignedInventorySource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assigned_inventory_source_id: str=None, inventory_source_id: str=None, name: str=None):
        """AssignedInventorySource - a model defined in OpenAPI

        :param assigned_inventory_source_id: The assigned_inventory_source_id of this AssignedInventorySource.
        :param inventory_source_id: The inventory_source_id of this AssignedInventorySource.
        :param name: The name of this AssignedInventorySource.
        """
        self.openapi_types = {
            'assigned_inventory_source_id': str,
            'inventory_source_id': str,
            'name': str
        }

        self.attribute_map = {
            'assigned_inventory_source_id': 'assignedInventorySourceId',
            'inventory_source_id': 'inventorySourceId',
            'name': 'name'
        }

        self._assigned_inventory_source_id = assigned_inventory_source_id
        self._inventory_source_id = inventory_source_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssignedInventorySource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssignedInventorySource of this AssignedInventorySource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assigned_inventory_source_id(self):
        """Gets the assigned_inventory_source_id of this AssignedInventorySource.

        Output only. The unique ID of the assigned inventory source. The ID is only unique within a given inventory source group. It may be reused in other contexts.

        :return: The assigned_inventory_source_id of this AssignedInventorySource.
        :rtype: str
        """
        return self._assigned_inventory_source_id

    @assigned_inventory_source_id.setter
    def assigned_inventory_source_id(self, assigned_inventory_source_id):
        """Sets the assigned_inventory_source_id of this AssignedInventorySource.

        Output only. The unique ID of the assigned inventory source. The ID is only unique within a given inventory source group. It may be reused in other contexts.

        :param assigned_inventory_source_id: The assigned_inventory_source_id of this AssignedInventorySource.
        :type assigned_inventory_source_id: str
        """

        self._assigned_inventory_source_id = assigned_inventory_source_id

    @property
    def inventory_source_id(self):
        """Gets the inventory_source_id of this AssignedInventorySource.

        Required. The ID of the inventory source entity being targeted.

        :return: The inventory_source_id of this AssignedInventorySource.
        :rtype: str
        """
        return self._inventory_source_id

    @inventory_source_id.setter
    def inventory_source_id(self, inventory_source_id):
        """Sets the inventory_source_id of this AssignedInventorySource.

        Required. The ID of the inventory source entity being targeted.

        :param inventory_source_id: The inventory_source_id of this AssignedInventorySource.
        :type inventory_source_id: str
        """

        self._inventory_source_id = inventory_source_id

    @property
    def name(self):
        """Gets the name of this AssignedInventorySource.

        Output only. The resource name of the assigned inventory source.

        :return: The name of this AssignedInventorySource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AssignedInventorySource.

        Output only. The resource name of the assigned inventory source.

        :param name: The name of this AssignedInventorySource.
        :type name: str
        """

        self._name = name
