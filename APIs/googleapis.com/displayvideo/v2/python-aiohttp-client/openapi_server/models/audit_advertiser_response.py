# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuditAdvertiserResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_group_criteria_count: str=None, campaign_criteria_count: str=None, channels_count: str=None, negative_keyword_lists_count: str=None, negatively_targeted_channels_count: str=None, used_campaigns_count: str=None, used_insertion_orders_count: str=None, used_line_items_count: str=None):
        """AuditAdvertiserResponse - a model defined in OpenAPI

        :param ad_group_criteria_count: The ad_group_criteria_count of this AuditAdvertiserResponse.
        :param campaign_criteria_count: The campaign_criteria_count of this AuditAdvertiserResponse.
        :param channels_count: The channels_count of this AuditAdvertiserResponse.
        :param negative_keyword_lists_count: The negative_keyword_lists_count of this AuditAdvertiserResponse.
        :param negatively_targeted_channels_count: The negatively_targeted_channels_count of this AuditAdvertiserResponse.
        :param used_campaigns_count: The used_campaigns_count of this AuditAdvertiserResponse.
        :param used_insertion_orders_count: The used_insertion_orders_count of this AuditAdvertiserResponse.
        :param used_line_items_count: The used_line_items_count of this AuditAdvertiserResponse.
        """
        self.openapi_types = {
            'ad_group_criteria_count': str,
            'campaign_criteria_count': str,
            'channels_count': str,
            'negative_keyword_lists_count': str,
            'negatively_targeted_channels_count': str,
            'used_campaigns_count': str,
            'used_insertion_orders_count': str,
            'used_line_items_count': str
        }

        self.attribute_map = {
            'ad_group_criteria_count': 'adGroupCriteriaCount',
            'campaign_criteria_count': 'campaignCriteriaCount',
            'channels_count': 'channelsCount',
            'negative_keyword_lists_count': 'negativeKeywordListsCount',
            'negatively_targeted_channels_count': 'negativelyTargetedChannelsCount',
            'used_campaigns_count': 'usedCampaignsCount',
            'used_insertion_orders_count': 'usedInsertionOrdersCount',
            'used_line_items_count': 'usedLineItemsCount'
        }

        self._ad_group_criteria_count = ad_group_criteria_count
        self._campaign_criteria_count = campaign_criteria_count
        self._channels_count = channels_count
        self._negative_keyword_lists_count = negative_keyword_lists_count
        self._negatively_targeted_channels_count = negatively_targeted_channels_count
        self._used_campaigns_count = used_campaigns_count
        self._used_insertion_orders_count = used_insertion_orders_count
        self._used_line_items_count = used_line_items_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditAdvertiserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuditAdvertiserResponse of this AuditAdvertiserResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_group_criteria_count(self):
        """Gets the ad_group_criteria_count of this AuditAdvertiserResponse.

        The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 4500000 ad group targeting options per advertiser. Qualifying Targeting types: * Channels, URLs, apps, and collections * Demographic * Google Audiences, including Affinity, Custom Affinity, and In-market audiences * Inventory source * Keyword * Mobile app category * User lists * Video targeting * Viewability

        :return: The ad_group_criteria_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._ad_group_criteria_count

    @ad_group_criteria_count.setter
    def ad_group_criteria_count(self, ad_group_criteria_count):
        """Sets the ad_group_criteria_count of this AuditAdvertiserResponse.

        The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 4500000 ad group targeting options per advertiser. Qualifying Targeting types: * Channels, URLs, apps, and collections * Demographic * Google Audiences, including Affinity, Custom Affinity, and In-market audiences * Inventory source * Keyword * Mobile app category * User lists * Video targeting * Viewability

        :param ad_group_criteria_count: The ad_group_criteria_count of this AuditAdvertiserResponse.
        :type ad_group_criteria_count: str
        """

        self._ad_group_criteria_count = ad_group_criteria_count

    @property
    def campaign_criteria_count(self):
        """Gets the campaign_criteria_count of this AuditAdvertiserResponse.

        The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 900000 campaign targeting options per advertiser. Qualifying Targeting types: * Position * Browser * Connection speed * Day and time * Device and operating system * Digital content label * Sensitive categories * Environment * Geography, including business chains and proximity * ISP * Language * Third-party verification

        :return: The campaign_criteria_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._campaign_criteria_count

    @campaign_criteria_count.setter
    def campaign_criteria_count(self, campaign_criteria_count):
        """Sets the campaign_criteria_count of this AuditAdvertiserResponse.

        The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 900000 campaign targeting options per advertiser. Qualifying Targeting types: * Position * Browser * Connection speed * Day and time * Device and operating system * Digital content label * Sensitive categories * Environment * Geography, including business chains and proximity * ISP * Language * Third-party verification

        :param campaign_criteria_count: The campaign_criteria_count of this AuditAdvertiserResponse.
        :type campaign_criteria_count: str
        """

        self._campaign_criteria_count = campaign_criteria_count

    @property
    def channels_count(self):
        """Gets the channels_count of this AuditAdvertiserResponse.

        The number of channels created under this advertiser. These channels count towards the limit of 1000 channels per advertiser.

        :return: The channels_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._channels_count

    @channels_count.setter
    def channels_count(self, channels_count):
        """Sets the channels_count of this AuditAdvertiserResponse.

        The number of channels created under this advertiser. These channels count towards the limit of 1000 channels per advertiser.

        :param channels_count: The channels_count of this AuditAdvertiserResponse.
        :type channels_count: str
        """

        self._channels_count = channels_count

    @property
    def negative_keyword_lists_count(self):
        """Gets the negative_keyword_lists_count of this AuditAdvertiserResponse.

        The number of negative keyword lists created under this advertiser. These negative keyword lists count towards the limit of 20 negative keyword lists per advertiser.

        :return: The negative_keyword_lists_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._negative_keyword_lists_count

    @negative_keyword_lists_count.setter
    def negative_keyword_lists_count(self, negative_keyword_lists_count):
        """Sets the negative_keyword_lists_count of this AuditAdvertiserResponse.

        The number of negative keyword lists created under this advertiser. These negative keyword lists count towards the limit of 20 negative keyword lists per advertiser.

        :param negative_keyword_lists_count: The negative_keyword_lists_count of this AuditAdvertiserResponse.
        :type negative_keyword_lists_count: str
        """

        self._negative_keyword_lists_count = negative_keyword_lists_count

    @property
    def negatively_targeted_channels_count(self):
        """Gets the negatively_targeted_channels_count of this AuditAdvertiserResponse.

        The number of negatively targeted channels created under this advertiser. These negatively targeted channels count towards the limit of 5 negatively targeted channels per advertiser.

        :return: The negatively_targeted_channels_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._negatively_targeted_channels_count

    @negatively_targeted_channels_count.setter
    def negatively_targeted_channels_count(self, negatively_targeted_channels_count):
        """Sets the negatively_targeted_channels_count of this AuditAdvertiserResponse.

        The number of negatively targeted channels created under this advertiser. These negatively targeted channels count towards the limit of 5 negatively targeted channels per advertiser.

        :param negatively_targeted_channels_count: The negatively_targeted_channels_count of this AuditAdvertiserResponse.
        :type negatively_targeted_channels_count: str
        """

        self._negatively_targeted_channels_count = negatively_targeted_channels_count

    @property
    def used_campaigns_count(self):
        """Gets the used_campaigns_count of this AuditAdvertiserResponse.

        The number of ACTIVE and PAUSED campaigns under this advertiser. These campaigns count towards the limit of 9999 campaigns per advertiser.

        :return: The used_campaigns_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._used_campaigns_count

    @used_campaigns_count.setter
    def used_campaigns_count(self, used_campaigns_count):
        """Sets the used_campaigns_count of this AuditAdvertiserResponse.

        The number of ACTIVE and PAUSED campaigns under this advertiser. These campaigns count towards the limit of 9999 campaigns per advertiser.

        :param used_campaigns_count: The used_campaigns_count of this AuditAdvertiserResponse.
        :type used_campaigns_count: str
        """

        self._used_campaigns_count = used_campaigns_count

    @property
    def used_insertion_orders_count(self):
        """Gets the used_insertion_orders_count of this AuditAdvertiserResponse.

        The number of ACTIVE, PAUSED and DRAFT insertion orders under this advertiser. These insertion orders count towards the limit of 9999 insertion orders per advertiser.

        :return: The used_insertion_orders_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._used_insertion_orders_count

    @used_insertion_orders_count.setter
    def used_insertion_orders_count(self, used_insertion_orders_count):
        """Sets the used_insertion_orders_count of this AuditAdvertiserResponse.

        The number of ACTIVE, PAUSED and DRAFT insertion orders under this advertiser. These insertion orders count towards the limit of 9999 insertion orders per advertiser.

        :param used_insertion_orders_count: The used_insertion_orders_count of this AuditAdvertiserResponse.
        :type used_insertion_orders_count: str
        """

        self._used_insertion_orders_count = used_insertion_orders_count

    @property
    def used_line_items_count(self):
        """Gets the used_line_items_count of this AuditAdvertiserResponse.

        The number of ACTIVE, PAUSED, and DRAFT line items under this advertiser. These line items count towards the limit of 9999 line items per advertiser.

        :return: The used_line_items_count of this AuditAdvertiserResponse.
        :rtype: str
        """
        return self._used_line_items_count

    @used_line_items_count.setter
    def used_line_items_count(self, used_line_items_count):
        """Sets the used_line_items_count of this AuditAdvertiserResponse.

        The number of ACTIVE, PAUSED, and DRAFT line items under this advertiser. These line items count towards the limit of 9999 line items per advertiser.

        :param used_line_items_count: The used_line_items_count of this AuditAdvertiserResponse.
        :type used_line_items_count: str
        """

        self._used_line_items_count = used_line_items_count
