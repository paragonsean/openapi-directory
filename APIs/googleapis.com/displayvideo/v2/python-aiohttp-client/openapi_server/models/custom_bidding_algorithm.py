# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_bidding_model_details import CustomBiddingModelDetails
from openapi_server import util


class CustomBiddingAlgorithm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertiser_id: str=None, custom_bidding_algorithm_id: str=None, custom_bidding_algorithm_type: str=None, display_name: str=None, entity_status: str=None, model_details: List[CustomBiddingModelDetails]=None, name: str=None, partner_id: str=None, shared_advertiser_ids: List[str]=None):
        """CustomBiddingAlgorithm - a model defined in OpenAPI

        :param advertiser_id: The advertiser_id of this CustomBiddingAlgorithm.
        :param custom_bidding_algorithm_id: The custom_bidding_algorithm_id of this CustomBiddingAlgorithm.
        :param custom_bidding_algorithm_type: The custom_bidding_algorithm_type of this CustomBiddingAlgorithm.
        :param display_name: The display_name of this CustomBiddingAlgorithm.
        :param entity_status: The entity_status of this CustomBiddingAlgorithm.
        :param model_details: The model_details of this CustomBiddingAlgorithm.
        :param name: The name of this CustomBiddingAlgorithm.
        :param partner_id: The partner_id of this CustomBiddingAlgorithm.
        :param shared_advertiser_ids: The shared_advertiser_ids of this CustomBiddingAlgorithm.
        """
        self.openapi_types = {
            'advertiser_id': str,
            'custom_bidding_algorithm_id': str,
            'custom_bidding_algorithm_type': str,
            'display_name': str,
            'entity_status': str,
            'model_details': List[CustomBiddingModelDetails],
            'name': str,
            'partner_id': str,
            'shared_advertiser_ids': List[str]
        }

        self.attribute_map = {
            'advertiser_id': 'advertiserId',
            'custom_bidding_algorithm_id': 'customBiddingAlgorithmId',
            'custom_bidding_algorithm_type': 'customBiddingAlgorithmType',
            'display_name': 'displayName',
            'entity_status': 'entityStatus',
            'model_details': 'modelDetails',
            'name': 'name',
            'partner_id': 'partnerId',
            'shared_advertiser_ids': 'sharedAdvertiserIds'
        }

        self._advertiser_id = advertiser_id
        self._custom_bidding_algorithm_id = custom_bidding_algorithm_id
        self._custom_bidding_algorithm_type = custom_bidding_algorithm_type
        self._display_name = display_name
        self._entity_status = entity_status
        self._model_details = model_details
        self._name = name
        self._partner_id = partner_id
        self._shared_advertiser_ids = shared_advertiser_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomBiddingAlgorithm':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomBiddingAlgorithm of this CustomBiddingAlgorithm.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this CustomBiddingAlgorithm.

        Immutable. The unique ID of the advertiser that owns the custom bidding algorithm.

        :return: The advertiser_id of this CustomBiddingAlgorithm.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this CustomBiddingAlgorithm.

        Immutable. The unique ID of the advertiser that owns the custom bidding algorithm.

        :param advertiser_id: The advertiser_id of this CustomBiddingAlgorithm.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def custom_bidding_algorithm_id(self):
        """Gets the custom_bidding_algorithm_id of this CustomBiddingAlgorithm.

        Output only. The unique ID of the custom bidding algorithm. Assigned by the system.

        :return: The custom_bidding_algorithm_id of this CustomBiddingAlgorithm.
        :rtype: str
        """
        return self._custom_bidding_algorithm_id

    @custom_bidding_algorithm_id.setter
    def custom_bidding_algorithm_id(self, custom_bidding_algorithm_id):
        """Sets the custom_bidding_algorithm_id of this CustomBiddingAlgorithm.

        Output only. The unique ID of the custom bidding algorithm. Assigned by the system.

        :param custom_bidding_algorithm_id: The custom_bidding_algorithm_id of this CustomBiddingAlgorithm.
        :type custom_bidding_algorithm_id: str
        """

        self._custom_bidding_algorithm_id = custom_bidding_algorithm_id

    @property
    def custom_bidding_algorithm_type(self):
        """Gets the custom_bidding_algorithm_type of this CustomBiddingAlgorithm.

        Required. Immutable. The type of custom bidding algorithm.

        :return: The custom_bidding_algorithm_type of this CustomBiddingAlgorithm.
        :rtype: str
        """
        return self._custom_bidding_algorithm_type

    @custom_bidding_algorithm_type.setter
    def custom_bidding_algorithm_type(self, custom_bidding_algorithm_type):
        """Sets the custom_bidding_algorithm_type of this CustomBiddingAlgorithm.

        Required. Immutable. The type of custom bidding algorithm.

        :param custom_bidding_algorithm_type: The custom_bidding_algorithm_type of this CustomBiddingAlgorithm.
        :type custom_bidding_algorithm_type: str
        """
        allowed_values = ["CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED", "SCRIPT_BASED", "ADS_DATA_HUB_BASED", "GOAL_BUILDER_BASED"]  # noqa: E501
        if custom_bidding_algorithm_type not in allowed_values:
            raise ValueError(
                "Invalid value for `custom_bidding_algorithm_type` ({0}), must be one of {1}"
                .format(custom_bidding_algorithm_type, allowed_values)
            )

        self._custom_bidding_algorithm_type = custom_bidding_algorithm_type

    @property
    def display_name(self):
        """Gets the display_name of this CustomBiddingAlgorithm.

        Required. The display name of the custom bidding algorithm. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :return: The display_name of this CustomBiddingAlgorithm.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CustomBiddingAlgorithm.

        Required. The display name of the custom bidding algorithm. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :param display_name: The display_name of this CustomBiddingAlgorithm.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def entity_status(self):
        """Gets the entity_status of this CustomBiddingAlgorithm.

        Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED`

        :return: The entity_status of this CustomBiddingAlgorithm.
        :rtype: str
        """
        return self._entity_status

    @entity_status.setter
    def entity_status(self, entity_status):
        """Sets the entity_status of this CustomBiddingAlgorithm.

        Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED`

        :param entity_status: The entity_status of this CustomBiddingAlgorithm.
        :type entity_status: str
        """
        allowed_values = ["ENTITY_STATUS_UNSPECIFIED", "ENTITY_STATUS_ACTIVE", "ENTITY_STATUS_ARCHIVED", "ENTITY_STATUS_DRAFT", "ENTITY_STATUS_PAUSED", "ENTITY_STATUS_SCHEDULED_FOR_DELETION"]  # noqa: E501
        if entity_status not in allowed_values:
            raise ValueError(
                "Invalid value for `entity_status` ({0}), must be one of {1}"
                .format(entity_status, allowed_values)
            )

        self._entity_status = entity_status

    @property
    def model_details(self):
        """Gets the model_details of this CustomBiddingAlgorithm.

        Output only. The details of custom bidding models for each advertiser who has access. This field may only include the details of the queried advertiser if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).

        :return: The model_details of this CustomBiddingAlgorithm.
        :rtype: List[CustomBiddingModelDetails]
        """
        return self._model_details

    @model_details.setter
    def model_details(self, model_details):
        """Sets the model_details of this CustomBiddingAlgorithm.

        Output only. The details of custom bidding models for each advertiser who has access. This field may only include the details of the queried advertiser if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).

        :param model_details: The model_details of this CustomBiddingAlgorithm.
        :type model_details: List[CustomBiddingModelDetails]
        """

        self._model_details = model_details

    @property
    def name(self):
        """Gets the name of this CustomBiddingAlgorithm.

        Output only. The resource name of the custom bidding algorithm.

        :return: The name of this CustomBiddingAlgorithm.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomBiddingAlgorithm.

        Output only. The resource name of the custom bidding algorithm.

        :param name: The name of this CustomBiddingAlgorithm.
        :type name: str
        """

        self._name = name

    @property
    def partner_id(self):
        """Gets the partner_id of this CustomBiddingAlgorithm.

        Immutable. The unique ID of the partner that owns the custom bidding algorithm.

        :return: The partner_id of this CustomBiddingAlgorithm.
        :rtype: str
        """
        return self._partner_id

    @partner_id.setter
    def partner_id(self, partner_id):
        """Sets the partner_id of this CustomBiddingAlgorithm.

        Immutable. The unique ID of the partner that owns the custom bidding algorithm.

        :param partner_id: The partner_id of this CustomBiddingAlgorithm.
        :type partner_id: str
        """

        self._partner_id = partner_id

    @property
    def shared_advertiser_ids(self):
        """Gets the shared_advertiser_ids of this CustomBiddingAlgorithm.

        The IDs of the advertisers who have access to this algorithm. If advertiser_id is set, this field will only consist of that value. This field will not be set if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).

        :return: The shared_advertiser_ids of this CustomBiddingAlgorithm.
        :rtype: List[str]
        """
        return self._shared_advertiser_ids

    @shared_advertiser_ids.setter
    def shared_advertiser_ids(self, shared_advertiser_ids):
        """Sets the shared_advertiser_ids of this CustomBiddingAlgorithm.

        The IDs of the advertisers who have access to this algorithm. If advertiser_id is set, this field will only consist of that value. This field will not be set if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).

        :param shared_advertiser_ids: The shared_advertiser_ids of this CustomBiddingAlgorithm.
        :type shared_advertiser_ids: List[str]
        """

        self._shared_advertiser_ids = shared_advertiser_ids
