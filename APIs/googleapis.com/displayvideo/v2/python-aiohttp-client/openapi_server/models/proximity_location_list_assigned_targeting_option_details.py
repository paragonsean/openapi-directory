# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProximityLocationListAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, proximity_location_list_id: str=None, proximity_radius: float=None, proximity_radius_unit: str=None):
        """ProximityLocationListAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param proximity_location_list_id: The proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.
        :param proximity_radius: The proximity_radius of this ProximityLocationListAssignedTargetingOptionDetails.
        :param proximity_radius_unit: The proximity_radius_unit of this ProximityLocationListAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'proximity_location_list_id': str,
            'proximity_radius': float,
            'proximity_radius_unit': str
        }

        self.attribute_map = {
            'proximity_location_list_id': 'proximityLocationListId',
            'proximity_radius': 'proximityRadius',
            'proximity_radius_unit': 'proximityRadiusUnit'
        }

        self._proximity_location_list_id = proximity_location_list_id
        self._proximity_radius = proximity_radius
        self._proximity_radius_unit = proximity_radius_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProximityLocationListAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProximityLocationListAssignedTargetingOptionDetails of this ProximityLocationListAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def proximity_location_list_id(self):
        """Gets the proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. ID of the proximity location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_PROXIMITY`.

        :return: The proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._proximity_location_list_id

    @proximity_location_list_id.setter
    def proximity_location_list_id(self, proximity_location_list_id):
        """Sets the proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. ID of the proximity location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_PROXIMITY`.

        :param proximity_location_list_id: The proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.
        :type proximity_location_list_id: str
        """

        self._proximity_location_list_id = proximity_location_list_id

    @property
    def proximity_radius(self):
        """Gets the proximity_radius of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. Radius expressed in the distance units set in proximity_radius_unit. This represents the size of the area around a chosen location that will be targeted. Radius should be between 1 and 500 miles or 800 kilometers.

        :return: The proximity_radius of this ProximityLocationListAssignedTargetingOptionDetails.
        :rtype: float
        """
        return self._proximity_radius

    @proximity_radius.setter
    def proximity_radius(self, proximity_radius):
        """Sets the proximity_radius of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. Radius expressed in the distance units set in proximity_radius_unit. This represents the size of the area around a chosen location that will be targeted. Radius should be between 1 and 500 miles or 800 kilometers.

        :param proximity_radius: The proximity_radius of this ProximityLocationListAssignedTargetingOptionDetails.
        :type proximity_radius: float
        """

        self._proximity_radius = proximity_radius

    @property
    def proximity_radius_unit(self):
        """Gets the proximity_radius_unit of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. Radius distance units.

        :return: The proximity_radius_unit of this ProximityLocationListAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._proximity_radius_unit

    @proximity_radius_unit.setter
    def proximity_radius_unit(self, proximity_radius_unit):
        """Sets the proximity_radius_unit of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. Radius distance units.

        :param proximity_radius_unit: The proximity_radius_unit of this ProximityLocationListAssignedTargetingOptionDetails.
        :type proximity_radius_unit: str
        """
        allowed_values = ["PROXIMITY_RADIUS_UNIT_UNSPECIFIED", "PROXIMITY_RADIUS_UNIT_MILES", "PROXIMITY_RADIUS_UNIT_KILOMETERS"]  # noqa: E501
        if proximity_radius_unit not in allowed_values:
            raise ValueError(
                "Invalid value for `proximity_radius_unit` ({0}), must be one of {1}"
                .format(proximity_radius_unit, allowed_values)
            )

        self._proximity_radius_unit = proximity_radius_unit
