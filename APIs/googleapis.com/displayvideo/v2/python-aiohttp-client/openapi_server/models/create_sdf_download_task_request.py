# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.id_filter import IdFilter
from openapi_server.models.inventory_source_filter import InventorySourceFilter
from openapi_server.models.parent_entity_filter import ParentEntityFilter
from openapi_server import util


class CreateSdfDownloadTaskRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertiser_id: str=None, id_filter: IdFilter=None, inventory_source_filter: InventorySourceFilter=None, parent_entity_filter: ParentEntityFilter=None, partner_id: str=None, version: str=None):
        """CreateSdfDownloadTaskRequest - a model defined in OpenAPI

        :param advertiser_id: The advertiser_id of this CreateSdfDownloadTaskRequest.
        :param id_filter: The id_filter of this CreateSdfDownloadTaskRequest.
        :param inventory_source_filter: The inventory_source_filter of this CreateSdfDownloadTaskRequest.
        :param parent_entity_filter: The parent_entity_filter of this CreateSdfDownloadTaskRequest.
        :param partner_id: The partner_id of this CreateSdfDownloadTaskRequest.
        :param version: The version of this CreateSdfDownloadTaskRequest.
        """
        self.openapi_types = {
            'advertiser_id': str,
            'id_filter': IdFilter,
            'inventory_source_filter': InventorySourceFilter,
            'parent_entity_filter': ParentEntityFilter,
            'partner_id': str,
            'version': str
        }

        self.attribute_map = {
            'advertiser_id': 'advertiserId',
            'id_filter': 'idFilter',
            'inventory_source_filter': 'inventorySourceFilter',
            'parent_entity_filter': 'parentEntityFilter',
            'partner_id': 'partnerId',
            'version': 'version'
        }

        self._advertiser_id = advertiser_id
        self._id_filter = id_filter
        self._inventory_source_filter = inventory_source_filter
        self._parent_entity_filter = parent_entity_filter
        self._partner_id = partner_id
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSdfDownloadTaskRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSdfDownloadTaskRequest of this CreateSdfDownloadTaskRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this CreateSdfDownloadTaskRequest.

        The ID of the advertiser to download SDF for.

        :return: The advertiser_id of this CreateSdfDownloadTaskRequest.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this CreateSdfDownloadTaskRequest.

        The ID of the advertiser to download SDF for.

        :param advertiser_id: The advertiser_id of this CreateSdfDownloadTaskRequest.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def id_filter(self):
        """Gets the id_filter of this CreateSdfDownloadTaskRequest.


        :return: The id_filter of this CreateSdfDownloadTaskRequest.
        :rtype: IdFilter
        """
        return self._id_filter

    @id_filter.setter
    def id_filter(self, id_filter):
        """Sets the id_filter of this CreateSdfDownloadTaskRequest.


        :param id_filter: The id_filter of this CreateSdfDownloadTaskRequest.
        :type id_filter: IdFilter
        """

        self._id_filter = id_filter

    @property
    def inventory_source_filter(self):
        """Gets the inventory_source_filter of this CreateSdfDownloadTaskRequest.


        :return: The inventory_source_filter of this CreateSdfDownloadTaskRequest.
        :rtype: InventorySourceFilter
        """
        return self._inventory_source_filter

    @inventory_source_filter.setter
    def inventory_source_filter(self, inventory_source_filter):
        """Sets the inventory_source_filter of this CreateSdfDownloadTaskRequest.


        :param inventory_source_filter: The inventory_source_filter of this CreateSdfDownloadTaskRequest.
        :type inventory_source_filter: InventorySourceFilter
        """

        self._inventory_source_filter = inventory_source_filter

    @property
    def parent_entity_filter(self):
        """Gets the parent_entity_filter of this CreateSdfDownloadTaskRequest.


        :return: The parent_entity_filter of this CreateSdfDownloadTaskRequest.
        :rtype: ParentEntityFilter
        """
        return self._parent_entity_filter

    @parent_entity_filter.setter
    def parent_entity_filter(self, parent_entity_filter):
        """Sets the parent_entity_filter of this CreateSdfDownloadTaskRequest.


        :param parent_entity_filter: The parent_entity_filter of this CreateSdfDownloadTaskRequest.
        :type parent_entity_filter: ParentEntityFilter
        """

        self._parent_entity_filter = parent_entity_filter

    @property
    def partner_id(self):
        """Gets the partner_id of this CreateSdfDownloadTaskRequest.

        The ID of the partner to download SDF for.

        :return: The partner_id of this CreateSdfDownloadTaskRequest.
        :rtype: str
        """
        return self._partner_id

    @partner_id.setter
    def partner_id(self, partner_id):
        """Sets the partner_id of this CreateSdfDownloadTaskRequest.

        The ID of the partner to download SDF for.

        :param partner_id: The partner_id of this CreateSdfDownloadTaskRequest.
        :type partner_id: str
        """

        self._partner_id = partner_id

    @property
    def version(self):
        """Gets the version of this CreateSdfDownloadTaskRequest.

        Required. The SDF version of the downloaded file. If set to `SDF_VERSION_UNSPECIFIED`, this will default to the version specified by the advertiser or partner identified by `root_id`. An advertiser inherits its SDF version from its partner unless configured otherwise.

        :return: The version of this CreateSdfDownloadTaskRequest.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CreateSdfDownloadTaskRequest.

        Required. The SDF version of the downloaded file. If set to `SDF_VERSION_UNSPECIFIED`, this will default to the version specified by the advertiser or partner identified by `root_id`. An advertiser inherits its SDF version from its partner unless configured otherwise.

        :param version: The version of this CreateSdfDownloadTaskRequest.
        :type version: str
        """
        allowed_values = ["SDF_VERSION_UNSPECIFIED", "SDF_VERSION_3_1", "SDF_VERSION_4", "SDF_VERSION_4_1", "SDF_VERSION_4_2", "SDF_VERSION_5", "SDF_VERSION_5_1", "SDF_VERSION_5_2", "SDF_VERSION_5_3", "SDF_VERSION_5_4", "SDF_VERSION_5_5", "SDF_VERSION_6", "SDF_VERSION_7"]  # noqa: E501
        if version not in allowed_values:
            raise ValueError(
                "Invalid value for `version` ({0}), must be one of {1}"
                .format(version, allowed_values)
            )

        self._version = version
