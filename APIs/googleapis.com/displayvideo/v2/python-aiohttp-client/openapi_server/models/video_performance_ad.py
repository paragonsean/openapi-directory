# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_asset import ImageAsset
from openapi_server.models.youtube_video_details import YoutubeVideoDetails
from openapi_server import util


class VideoPerformanceAd(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_button_labels: List[str]=None, companion_banners: List[ImageAsset]=None, custom_parameters: Dict[str, str]=None, descriptions: List[str]=None, display_url_breadcrumb1: str=None, display_url_breadcrumb2: str=None, domain: str=None, final_url: str=None, headlines: List[str]=None, long_headlines: List[str]=None, tracking_url: str=None, videos: List[YoutubeVideoDetails]=None):
        """VideoPerformanceAd - a model defined in OpenAPI

        :param action_button_labels: The action_button_labels of this VideoPerformanceAd.
        :param companion_banners: The companion_banners of this VideoPerformanceAd.
        :param custom_parameters: The custom_parameters of this VideoPerformanceAd.
        :param descriptions: The descriptions of this VideoPerformanceAd.
        :param display_url_breadcrumb1: The display_url_breadcrumb1 of this VideoPerformanceAd.
        :param display_url_breadcrumb2: The display_url_breadcrumb2 of this VideoPerformanceAd.
        :param domain: The domain of this VideoPerformanceAd.
        :param final_url: The final_url of this VideoPerformanceAd.
        :param headlines: The headlines of this VideoPerformanceAd.
        :param long_headlines: The long_headlines of this VideoPerformanceAd.
        :param tracking_url: The tracking_url of this VideoPerformanceAd.
        :param videos: The videos of this VideoPerformanceAd.
        """
        self.openapi_types = {
            'action_button_labels': List[str],
            'companion_banners': List[ImageAsset],
            'custom_parameters': Dict[str, str],
            'descriptions': List[str],
            'display_url_breadcrumb1': str,
            'display_url_breadcrumb2': str,
            'domain': str,
            'final_url': str,
            'headlines': List[str],
            'long_headlines': List[str],
            'tracking_url': str,
            'videos': List[YoutubeVideoDetails]
        }

        self.attribute_map = {
            'action_button_labels': 'actionButtonLabels',
            'companion_banners': 'companionBanners',
            'custom_parameters': 'customParameters',
            'descriptions': 'descriptions',
            'display_url_breadcrumb1': 'displayUrlBreadcrumb1',
            'display_url_breadcrumb2': 'displayUrlBreadcrumb2',
            'domain': 'domain',
            'final_url': 'finalUrl',
            'headlines': 'headlines',
            'long_headlines': 'longHeadlines',
            'tracking_url': 'trackingUrl',
            'videos': 'videos'
        }

        self._action_button_labels = action_button_labels
        self._companion_banners = companion_banners
        self._custom_parameters = custom_parameters
        self._descriptions = descriptions
        self._display_url_breadcrumb1 = display_url_breadcrumb1
        self._display_url_breadcrumb2 = display_url_breadcrumb2
        self._domain = domain
        self._final_url = final_url
        self._headlines = headlines
        self._long_headlines = long_headlines
        self._tracking_url = tracking_url
        self._videos = videos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoPerformanceAd':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoPerformanceAd of this VideoPerformanceAd.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_button_labels(self):
        """Gets the action_button_labels of this VideoPerformanceAd.

        The list of text assets shown on the call-to-action button.

        :return: The action_button_labels of this VideoPerformanceAd.
        :rtype: List[str]
        """
        return self._action_button_labels

    @action_button_labels.setter
    def action_button_labels(self, action_button_labels):
        """Sets the action_button_labels of this VideoPerformanceAd.

        The list of text assets shown on the call-to-action button.

        :param action_button_labels: The action_button_labels of this VideoPerformanceAd.
        :type action_button_labels: List[str]
        """

        self._action_button_labels = action_button_labels

    @property
    def companion_banners(self):
        """Gets the companion_banners of this VideoPerformanceAd.

        The list of companion banners used by this ad.

        :return: The companion_banners of this VideoPerformanceAd.
        :rtype: List[ImageAsset]
        """
        return self._companion_banners

    @companion_banners.setter
    def companion_banners(self, companion_banners):
        """Sets the companion_banners of this VideoPerformanceAd.

        The list of companion banners used by this ad.

        :param companion_banners: The companion_banners of this VideoPerformanceAd.
        :type companion_banners: List[ImageAsset]
        """

        self._companion_banners = companion_banners

    @property
    def custom_parameters(self):
        """Gets the custom_parameters of this VideoPerformanceAd.

        The custom parameters to pass custom values to tracking URL template.

        :return: The custom_parameters of this VideoPerformanceAd.
        :rtype: Dict[str, str]
        """
        return self._custom_parameters

    @custom_parameters.setter
    def custom_parameters(self, custom_parameters):
        """Sets the custom_parameters of this VideoPerformanceAd.

        The custom parameters to pass custom values to tracking URL template.

        :param custom_parameters: The custom_parameters of this VideoPerformanceAd.
        :type custom_parameters: Dict[str, str]
        """

        self._custom_parameters = custom_parameters

    @property
    def descriptions(self):
        """Gets the descriptions of this VideoPerformanceAd.

        The list of descriptions shown on the call-to-action banner.

        :return: The descriptions of this VideoPerformanceAd.
        :rtype: List[str]
        """
        return self._descriptions

    @descriptions.setter
    def descriptions(self, descriptions):
        """Sets the descriptions of this VideoPerformanceAd.

        The list of descriptions shown on the call-to-action banner.

        :param descriptions: The descriptions of this VideoPerformanceAd.
        :type descriptions: List[str]
        """

        self._descriptions = descriptions

    @property
    def display_url_breadcrumb1(self):
        """Gets the display_url_breadcrumb1 of this VideoPerformanceAd.

        The first piece after the domain in the display URL.

        :return: The display_url_breadcrumb1 of this VideoPerformanceAd.
        :rtype: str
        """
        return self._display_url_breadcrumb1

    @display_url_breadcrumb1.setter
    def display_url_breadcrumb1(self, display_url_breadcrumb1):
        """Sets the display_url_breadcrumb1 of this VideoPerformanceAd.

        The first piece after the domain in the display URL.

        :param display_url_breadcrumb1: The display_url_breadcrumb1 of this VideoPerformanceAd.
        :type display_url_breadcrumb1: str
        """

        self._display_url_breadcrumb1 = display_url_breadcrumb1

    @property
    def display_url_breadcrumb2(self):
        """Gets the display_url_breadcrumb2 of this VideoPerformanceAd.

        The second piece after the domain in the display URL.

        :return: The display_url_breadcrumb2 of this VideoPerformanceAd.
        :rtype: str
        """
        return self._display_url_breadcrumb2

    @display_url_breadcrumb2.setter
    def display_url_breadcrumb2(self, display_url_breadcrumb2):
        """Sets the display_url_breadcrumb2 of this VideoPerformanceAd.

        The second piece after the domain in the display URL.

        :param display_url_breadcrumb2: The display_url_breadcrumb2 of this VideoPerformanceAd.
        :type display_url_breadcrumb2: str
        """

        self._display_url_breadcrumb2 = display_url_breadcrumb2

    @property
    def domain(self):
        """Gets the domain of this VideoPerformanceAd.

        The domain of the display URL.

        :return: The domain of this VideoPerformanceAd.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this VideoPerformanceAd.

        The domain of the display URL.

        :param domain: The domain of this VideoPerformanceAd.
        :type domain: str
        """

        self._domain = domain

    @property
    def final_url(self):
        """Gets the final_url of this VideoPerformanceAd.

        The URL address of the webpage that people reach after they click the ad.

        :return: The final_url of this VideoPerformanceAd.
        :rtype: str
        """
        return self._final_url

    @final_url.setter
    def final_url(self, final_url):
        """Sets the final_url of this VideoPerformanceAd.

        The URL address of the webpage that people reach after they click the ad.

        :param final_url: The final_url of this VideoPerformanceAd.
        :type final_url: str
        """

        self._final_url = final_url

    @property
    def headlines(self):
        """Gets the headlines of this VideoPerformanceAd.

        The list of headlines shown on the call-to-action banner.

        :return: The headlines of this VideoPerformanceAd.
        :rtype: List[str]
        """
        return self._headlines

    @headlines.setter
    def headlines(self, headlines):
        """Sets the headlines of this VideoPerformanceAd.

        The list of headlines shown on the call-to-action banner.

        :param headlines: The headlines of this VideoPerformanceAd.
        :type headlines: List[str]
        """

        self._headlines = headlines

    @property
    def long_headlines(self):
        """Gets the long_headlines of this VideoPerformanceAd.

        The list of lone headlines shown on the call-to-action banner.

        :return: The long_headlines of this VideoPerformanceAd.
        :rtype: List[str]
        """
        return self._long_headlines

    @long_headlines.setter
    def long_headlines(self, long_headlines):
        """Sets the long_headlines of this VideoPerformanceAd.

        The list of lone headlines shown on the call-to-action banner.

        :param long_headlines: The long_headlines of this VideoPerformanceAd.
        :type long_headlines: List[str]
        """

        self._long_headlines = long_headlines

    @property
    def tracking_url(self):
        """Gets the tracking_url of this VideoPerformanceAd.

        The URL address loaded in the background for tracking purposes.

        :return: The tracking_url of this VideoPerformanceAd.
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this VideoPerformanceAd.

        The URL address loaded in the background for tracking purposes.

        :param tracking_url: The tracking_url of this VideoPerformanceAd.
        :type tracking_url: str
        """

        self._tracking_url = tracking_url

    @property
    def videos(self):
        """Gets the videos of this VideoPerformanceAd.

        The list of YouTube video assets used by this ad.

        :return: The videos of this VideoPerformanceAd.
        :rtype: List[YoutubeVideoDetails]
        """
        return self._videos

    @videos.setter
    def videos(self, videos):
        """Sets the videos of this VideoPerformanceAd.

        The list of YouTube video assets used by this ad.

        :param videos: The videos of this VideoPerformanceAd.
        :type videos: List[YoutubeVideoDetails]
        """

        self._videos = videos
