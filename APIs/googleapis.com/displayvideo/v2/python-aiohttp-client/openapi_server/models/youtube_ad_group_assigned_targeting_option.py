# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assigned_targeting_option import AssignedTargetingOption
from openapi_server import util


class YoutubeAdGroupAssignedTargetingOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assigned_targeting_option: AssignedTargetingOption=None, youtube_ad_group_id: str=None):
        """YoutubeAdGroupAssignedTargetingOption - a model defined in OpenAPI

        :param assigned_targeting_option: The assigned_targeting_option of this YoutubeAdGroupAssignedTargetingOption.
        :param youtube_ad_group_id: The youtube_ad_group_id of this YoutubeAdGroupAssignedTargetingOption.
        """
        self.openapi_types = {
            'assigned_targeting_option': AssignedTargetingOption,
            'youtube_ad_group_id': str
        }

        self.attribute_map = {
            'assigned_targeting_option': 'assignedTargetingOption',
            'youtube_ad_group_id': 'youtubeAdGroupId'
        }

        self._assigned_targeting_option = assigned_targeting_option
        self._youtube_ad_group_id = youtube_ad_group_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'YoutubeAdGroupAssignedTargetingOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The YoutubeAdGroupAssignedTargetingOption of this YoutubeAdGroupAssignedTargetingOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assigned_targeting_option(self):
        """Gets the assigned_targeting_option of this YoutubeAdGroupAssignedTargetingOption.


        :return: The assigned_targeting_option of this YoutubeAdGroupAssignedTargetingOption.
        :rtype: AssignedTargetingOption
        """
        return self._assigned_targeting_option

    @assigned_targeting_option.setter
    def assigned_targeting_option(self, assigned_targeting_option):
        """Sets the assigned_targeting_option of this YoutubeAdGroupAssignedTargetingOption.


        :param assigned_targeting_option: The assigned_targeting_option of this YoutubeAdGroupAssignedTargetingOption.
        :type assigned_targeting_option: AssignedTargetingOption
        """

        self._assigned_targeting_option = assigned_targeting_option

    @property
    def youtube_ad_group_id(self):
        """Gets the youtube_ad_group_id of this YoutubeAdGroupAssignedTargetingOption.

        The ID of the youtube ad group the assigned targeting option is assigned to.

        :return: The youtube_ad_group_id of this YoutubeAdGroupAssignedTargetingOption.
        :rtype: str
        """
        return self._youtube_ad_group_id

    @youtube_ad_group_id.setter
    def youtube_ad_group_id(self, youtube_ad_group_id):
        """Sets the youtube_ad_group_id of this YoutubeAdGroupAssignedTargetingOption.

        The ID of the youtube ad group the assigned targeting option is assigned to.

        :param youtube_ad_group_id: The youtube_ad_group_id of this YoutubeAdGroupAssignedTargetingOption.
        :type youtube_ad_group_id: str
        """

        self._youtube_ad_group_id = youtube_ad_group_id
