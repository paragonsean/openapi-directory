# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tracking_floodlight_activity_config import TrackingFloodlightActivityConfig
from openapi_server import util


class ConversionCountingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, floodlight_activity_configs: List[TrackingFloodlightActivityConfig]=None, post_view_count_percentage_millis: str=None):
        """ConversionCountingConfig - a model defined in OpenAPI

        :param floodlight_activity_configs: The floodlight_activity_configs of this ConversionCountingConfig.
        :param post_view_count_percentage_millis: The post_view_count_percentage_millis of this ConversionCountingConfig.
        """
        self.openapi_types = {
            'floodlight_activity_configs': List[TrackingFloodlightActivityConfig],
            'post_view_count_percentage_millis': str
        }

        self.attribute_map = {
            'floodlight_activity_configs': 'floodlightActivityConfigs',
            'post_view_count_percentage_millis': 'postViewCountPercentageMillis'
        }

        self._floodlight_activity_configs = floodlight_activity_configs
        self._post_view_count_percentage_millis = post_view_count_percentage_millis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversionCountingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConversionCountingConfig of this ConversionCountingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def floodlight_activity_configs(self):
        """Gets the floodlight_activity_configs of this ConversionCountingConfig.

        The Floodlight activity configs used to track conversions. The number of conversions counted is the sum of all of the conversions counted by all of the Floodlight activity IDs specified in this field.

        :return: The floodlight_activity_configs of this ConversionCountingConfig.
        :rtype: List[TrackingFloodlightActivityConfig]
        """
        return self._floodlight_activity_configs

    @floodlight_activity_configs.setter
    def floodlight_activity_configs(self, floodlight_activity_configs):
        """Sets the floodlight_activity_configs of this ConversionCountingConfig.

        The Floodlight activity configs used to track conversions. The number of conversions counted is the sum of all of the conversions counted by all of the Floodlight activity IDs specified in this field.

        :param floodlight_activity_configs: The floodlight_activity_configs of this ConversionCountingConfig.
        :type floodlight_activity_configs: List[TrackingFloodlightActivityConfig]
        """

        self._floodlight_activity_configs = floodlight_activity_configs

    @property
    def post_view_count_percentage_millis(self):
        """Gets the post_view_count_percentage_millis of this ConversionCountingConfig.

        The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a value of 50000.

        :return: The post_view_count_percentage_millis of this ConversionCountingConfig.
        :rtype: str
        """
        return self._post_view_count_percentage_millis

    @post_view_count_percentage_millis.setter
    def post_view_count_percentage_millis(self, post_view_count_percentage_millis):
        """Sets the post_view_count_percentage_millis of this ConversionCountingConfig.

        The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a value of 50000.

        :param post_view_count_percentage_millis: The post_view_count_percentage_millis of this ConversionCountingConfig.
        :type post_view_count_percentage_millis: str
        """

        self._post_view_count_percentage_millis = post_view_count_percentage_millis
