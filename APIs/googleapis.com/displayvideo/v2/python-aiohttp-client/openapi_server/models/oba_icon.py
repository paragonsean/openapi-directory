# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimensions import Dimensions
from openapi_server import util


class ObaIcon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, click_tracking_url: str=None, dimensions: Dimensions=None, landing_page_url: str=None, position: str=None, program: str=None, resource_mime_type: str=None, resource_url: str=None, view_tracking_url: str=None):
        """ObaIcon - a model defined in OpenAPI

        :param click_tracking_url: The click_tracking_url of this ObaIcon.
        :param dimensions: The dimensions of this ObaIcon.
        :param landing_page_url: The landing_page_url of this ObaIcon.
        :param position: The position of this ObaIcon.
        :param program: The program of this ObaIcon.
        :param resource_mime_type: The resource_mime_type of this ObaIcon.
        :param resource_url: The resource_url of this ObaIcon.
        :param view_tracking_url: The view_tracking_url of this ObaIcon.
        """
        self.openapi_types = {
            'click_tracking_url': str,
            'dimensions': Dimensions,
            'landing_page_url': str,
            'position': str,
            'program': str,
            'resource_mime_type': str,
            'resource_url': str,
            'view_tracking_url': str
        }

        self.attribute_map = {
            'click_tracking_url': 'clickTrackingUrl',
            'dimensions': 'dimensions',
            'landing_page_url': 'landingPageUrl',
            'position': 'position',
            'program': 'program',
            'resource_mime_type': 'resourceMimeType',
            'resource_url': 'resourceUrl',
            'view_tracking_url': 'viewTrackingUrl'
        }

        self._click_tracking_url = click_tracking_url
        self._dimensions = dimensions
        self._landing_page_url = landing_page_url
        self._position = position
        self._program = program
        self._resource_mime_type = resource_mime_type
        self._resource_url = resource_url
        self._view_tracking_url = view_tracking_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObaIcon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObaIcon of this ObaIcon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def click_tracking_url(self):
        """Gets the click_tracking_url of this ObaIcon.

        Required. The click tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com

        :return: The click_tracking_url of this ObaIcon.
        :rtype: str
        """
        return self._click_tracking_url

    @click_tracking_url.setter
    def click_tracking_url(self, click_tracking_url):
        """Sets the click_tracking_url of this ObaIcon.

        Required. The click tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com

        :param click_tracking_url: The click_tracking_url of this ObaIcon.
        :type click_tracking_url: str
        """

        self._click_tracking_url = click_tracking_url

    @property
    def dimensions(self):
        """Gets the dimensions of this ObaIcon.


        :return: The dimensions of this ObaIcon.
        :rtype: Dimensions
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this ObaIcon.


        :param dimensions: The dimensions of this ObaIcon.
        :type dimensions: Dimensions
        """

        self._dimensions = dimensions

    @property
    def landing_page_url(self):
        """Gets the landing_page_url of this ObaIcon.

        Required. The landing page URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com

        :return: The landing_page_url of this ObaIcon.
        :rtype: str
        """
        return self._landing_page_url

    @landing_page_url.setter
    def landing_page_url(self, landing_page_url):
        """Sets the landing_page_url of this ObaIcon.

        Required. The landing page URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com

        :param landing_page_url: The landing_page_url of this ObaIcon.
        :type landing_page_url: str
        """

        self._landing_page_url = landing_page_url

    @property
    def position(self):
        """Gets the position of this ObaIcon.

        The position of the OBA icon on the creative.

        :return: The position of this ObaIcon.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ObaIcon.

        The position of the OBA icon on the creative.

        :param position: The position of this ObaIcon.
        :type position: str
        """
        allowed_values = ["OBA_ICON_POSITION_UNSPECIFIED", "OBA_ICON_POSITION_UPPER_RIGHT", "OBA_ICON_POSITION_UPPER_LEFT", "OBA_ICON_POSITION_LOWER_RIGHT", "OBA_ICON_POSITION_LOWER_LEFT"]  # noqa: E501
        if position not in allowed_values:
            raise ValueError(
                "Invalid value for `position` ({0}), must be one of {1}"
                .format(position, allowed_values)
            )

        self._position = position

    @property
    def program(self):
        """Gets the program of this ObaIcon.

        The program of the OBA icon. For example: “AdChoices”.

        :return: The program of this ObaIcon.
        :rtype: str
        """
        return self._program

    @program.setter
    def program(self, program):
        """Sets the program of this ObaIcon.

        The program of the OBA icon. For example: “AdChoices”.

        :param program: The program of this ObaIcon.
        :type program: str
        """

        self._program = program

    @property
    def resource_mime_type(self):
        """Gets the resource_mime_type of this ObaIcon.

        The MIME type of the OBA icon resource.

        :return: The resource_mime_type of this ObaIcon.
        :rtype: str
        """
        return self._resource_mime_type

    @resource_mime_type.setter
    def resource_mime_type(self, resource_mime_type):
        """Sets the resource_mime_type of this ObaIcon.

        The MIME type of the OBA icon resource.

        :param resource_mime_type: The resource_mime_type of this ObaIcon.
        :type resource_mime_type: str
        """

        self._resource_mime_type = resource_mime_type

    @property
    def resource_url(self):
        """Gets the resource_url of this ObaIcon.

        The URL of the OBA icon resource.

        :return: The resource_url of this ObaIcon.
        :rtype: str
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url):
        """Sets the resource_url of this ObaIcon.

        The URL of the OBA icon resource.

        :param resource_url: The resource_url of this ObaIcon.
        :type resource_url: str
        """

        self._resource_url = resource_url

    @property
    def view_tracking_url(self):
        """Gets the view_tracking_url of this ObaIcon.

        Required. The view tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com

        :return: The view_tracking_url of this ObaIcon.
        :rtype: str
        """
        return self._view_tracking_url

    @view_tracking_url.setter
    def view_tracking_url(self, view_tracking_url):
        """Sets the view_tracking_url of this ObaIcon.

        Required. The view tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com

        :param view_tracking_url: The view_tracking_url of this ObaIcon.
        :type view_tracking_url: str
        """

        self._view_tracking_url = view_tracking_url
