# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Dimensions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, height_pixels: int=None, width_pixels: int=None):
        """Dimensions - a model defined in OpenAPI

        :param height_pixels: The height_pixels of this Dimensions.
        :param width_pixels: The width_pixels of this Dimensions.
        """
        self.openapi_types = {
            'height_pixels': int,
            'width_pixels': int
        }

        self.attribute_map = {
            'height_pixels': 'heightPixels',
            'width_pixels': 'widthPixels'
        }

        self._height_pixels = height_pixels
        self._width_pixels = width_pixels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Dimensions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Dimensions of this Dimensions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def height_pixels(self):
        """Gets the height_pixels of this Dimensions.

        The height in pixels.

        :return: The height_pixels of this Dimensions.
        :rtype: int
        """
        return self._height_pixels

    @height_pixels.setter
    def height_pixels(self, height_pixels):
        """Sets the height_pixels of this Dimensions.

        The height in pixels.

        :param height_pixels: The height_pixels of this Dimensions.
        :type height_pixels: int
        """

        self._height_pixels = height_pixels

    @property
    def width_pixels(self):
        """Gets the width_pixels of this Dimensions.

        The width in pixels.

        :return: The width_pixels of this Dimensions.
        :rtype: int
        """
        return self._width_pixels

    @width_pixels.setter
    def width_pixels(self, width_pixels):
        """Sets the width_pixels of this Dimensions.

        The width in pixels.

        :param width_pixels: The width_pixels of this Dimensions.
        :type width_pixels: int
        """

        self._width_pixels = width_pixels
