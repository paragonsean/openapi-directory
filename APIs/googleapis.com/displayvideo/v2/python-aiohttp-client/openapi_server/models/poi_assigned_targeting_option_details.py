# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PoiAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, latitude: float=None, longitude: float=None, proximity_radius_amount: float=None, proximity_radius_unit: str=None, targeting_option_id: str=None):
        """PoiAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param display_name: The display_name of this PoiAssignedTargetingOptionDetails.
        :param latitude: The latitude of this PoiAssignedTargetingOptionDetails.
        :param longitude: The longitude of this PoiAssignedTargetingOptionDetails.
        :param proximity_radius_amount: The proximity_radius_amount of this PoiAssignedTargetingOptionDetails.
        :param proximity_radius_unit: The proximity_radius_unit of this PoiAssignedTargetingOptionDetails.
        :param targeting_option_id: The targeting_option_id of this PoiAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'display_name': str,
            'latitude': float,
            'longitude': float,
            'proximity_radius_amount': float,
            'proximity_radius_unit': str,
            'targeting_option_id': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'proximity_radius_amount': 'proximityRadiusAmount',
            'proximity_radius_unit': 'proximityRadiusUnit',
            'targeting_option_id': 'targetingOptionId'
        }

        self._display_name = display_name
        self._latitude = latitude
        self._longitude = longitude
        self._proximity_radius_amount = proximity_radius_amount
        self._proximity_radius_unit = proximity_radius_unit
        self._targeting_option_id = targeting_option_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PoiAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PoiAssignedTargetingOptionDetails of this PoiAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this PoiAssignedTargetingOptionDetails.

        Output only. The display name of a POI, e.g. \"Times Square\", \"Space Needle\", followed by its full address if available.

        :return: The display_name of this PoiAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this PoiAssignedTargetingOptionDetails.

        Output only. The display name of a POI, e.g. \"Times Square\", \"Space Needle\", followed by its full address if available.

        :param display_name: The display_name of this PoiAssignedTargetingOptionDetails.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def latitude(self):
        """Gets the latitude of this PoiAssignedTargetingOptionDetails.

        Output only. Latitude of the POI rounding to 6th decimal place.

        :return: The latitude of this PoiAssignedTargetingOptionDetails.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this PoiAssignedTargetingOptionDetails.

        Output only. Latitude of the POI rounding to 6th decimal place.

        :param latitude: The latitude of this PoiAssignedTargetingOptionDetails.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this PoiAssignedTargetingOptionDetails.

        Output only. Longitude of the POI rounding to 6th decimal place.

        :return: The longitude of this PoiAssignedTargetingOptionDetails.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this PoiAssignedTargetingOptionDetails.

        Output only. Longitude of the POI rounding to 6th decimal place.

        :param longitude: The longitude of this PoiAssignedTargetingOptionDetails.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def proximity_radius_amount(self):
        """Gets the proximity_radius_amount of this PoiAssignedTargetingOptionDetails.

        Required. The radius of the area around the POI that will be targeted. The units of the radius are specified by proximity_radius_unit. Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is `DISTANCE_UNIT_MILES`.

        :return: The proximity_radius_amount of this PoiAssignedTargetingOptionDetails.
        :rtype: float
        """
        return self._proximity_radius_amount

    @proximity_radius_amount.setter
    def proximity_radius_amount(self, proximity_radius_amount):
        """Sets the proximity_radius_amount of this PoiAssignedTargetingOptionDetails.

        Required. The radius of the area around the POI that will be targeted. The units of the radius are specified by proximity_radius_unit. Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is `DISTANCE_UNIT_MILES`.

        :param proximity_radius_amount: The proximity_radius_amount of this PoiAssignedTargetingOptionDetails.
        :type proximity_radius_amount: float
        """

        self._proximity_radius_amount = proximity_radius_amount

    @property
    def proximity_radius_unit(self):
        """Gets the proximity_radius_unit of this PoiAssignedTargetingOptionDetails.

        Required. The unit of distance by which the targeting radius is measured.

        :return: The proximity_radius_unit of this PoiAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._proximity_radius_unit

    @proximity_radius_unit.setter
    def proximity_radius_unit(self, proximity_radius_unit):
        """Sets the proximity_radius_unit of this PoiAssignedTargetingOptionDetails.

        Required. The unit of distance by which the targeting radius is measured.

        :param proximity_radius_unit: The proximity_radius_unit of this PoiAssignedTargetingOptionDetails.
        :type proximity_radius_unit: str
        """
        allowed_values = ["DISTANCE_UNIT_UNSPECIFIED", "DISTANCE_UNIT_MILES", "DISTANCE_UNIT_KILOMETERS"]  # noqa: E501
        if proximity_radius_unit not in allowed_values:
            raise ValueError(
                "Invalid value for `proximity_radius_unit` ({0}), must be one of {1}"
                .format(proximity_radius_unit, allowed_values)
            )

        self._proximity_radius_unit = proximity_radius_unit

    @property
    def targeting_option_id(self):
        """Gets the targeting_option_id of this PoiAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_POI`. Accepted POI targeting option IDs can be retrieved using `targetingTypes.targetingOptions.search`. If targeting a specific latitude/longitude coordinate removed from an address or POI name, you can generate the necessary targeting option ID by rounding the desired coordinate values to the 6th decimal place, removing the decimals, and concatenating the string values separated by a semicolon. For example, you can target the latitude/longitude pair of 40.7414691, -74.003387 using the targeting option ID \"40741469;-74003387\". **Upon** **creation, this field value will be updated to append a semicolon and** **alphanumerical hash value if only latitude/longitude coordinates are** **provided.**

        :return: The targeting_option_id of this PoiAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._targeting_option_id

    @targeting_option_id.setter
    def targeting_option_id(self, targeting_option_id):
        """Sets the targeting_option_id of this PoiAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_POI`. Accepted POI targeting option IDs can be retrieved using `targetingTypes.targetingOptions.search`. If targeting a specific latitude/longitude coordinate removed from an address or POI name, you can generate the necessary targeting option ID by rounding the desired coordinate values to the 6th decimal place, removing the decimals, and concatenating the string values separated by a semicolon. For example, you can target the latitude/longitude pair of 40.7414691, -74.003387 using the targeting option ID \"40741469;-74003387\". **Upon** **creation, this field value will be updated to append a semicolon and** **alphanumerical hash value if only latitude/longitude coordinates are** **provided.**

        :param targeting_option_id: The targeting_option_id of this PoiAssignedTargetingOptionDetails.
        :type targeting_option_id: str
        """

        self._targeting_option_id = targeting_option_id
