# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class YoutubeVideoDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, unavailable_reason: str=None):
        """YoutubeVideoDetails - a model defined in OpenAPI

        :param id: The id of this YoutubeVideoDetails.
        :param unavailable_reason: The unavailable_reason of this YoutubeVideoDetails.
        """
        self.openapi_types = {
            'id': str,
            'unavailable_reason': str
        }

        self.attribute_map = {
            'id': 'id',
            'unavailable_reason': 'unavailableReason'
        }

        self._id = id
        self._unavailable_reason = unavailable_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'YoutubeVideoDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The YoutubeVideoDetails of this YoutubeVideoDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this YoutubeVideoDetails.

        The YouTube video ID which can be searched on YouTube webpage.

        :return: The id of this YoutubeVideoDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this YoutubeVideoDetails.

        The YouTube video ID which can be searched on YouTube webpage.

        :param id: The id of this YoutubeVideoDetails.
        :type id: str
        """

        self._id = id

    @property
    def unavailable_reason(self):
        """Gets the unavailable_reason of this YoutubeVideoDetails.

        The reason why the video data is not available.

        :return: The unavailable_reason of this YoutubeVideoDetails.
        :rtype: str
        """
        return self._unavailable_reason

    @unavailable_reason.setter
    def unavailable_reason(self, unavailable_reason):
        """Sets the unavailable_reason of this YoutubeVideoDetails.

        The reason why the video data is not available.

        :param unavailable_reason: The unavailable_reason of this YoutubeVideoDetails.
        :type unavailable_reason: str
        """
        allowed_values = ["VIDEO_UNAVAILABLE_REASON_UNSPECIFIED", "VIDEO_UNAVAILABLE_REASON_PRIVATE", "VIDEO_UNAVAILABLE_REASON_DELETED"]  # noqa: E501
        if unavailable_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `unavailable_reason` ({0}), must be one of {1}"
                .format(unavailable_reason, allowed_values)
            )

        self._unavailable_reason = unavailable_reason
