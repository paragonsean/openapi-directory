# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.measurement_config import MeasurementConfig
from openapi_server import util


class PartnerAdServerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, measurement_config: MeasurementConfig=None):
        """PartnerAdServerConfig - a model defined in OpenAPI

        :param measurement_config: The measurement_config of this PartnerAdServerConfig.
        """
        self.openapi_types = {
            'measurement_config': MeasurementConfig
        }

        self.attribute_map = {
            'measurement_config': 'measurementConfig'
        }

        self._measurement_config = measurement_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PartnerAdServerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PartnerAdServerConfig of this PartnerAdServerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def measurement_config(self):
        """Gets the measurement_config of this PartnerAdServerConfig.


        :return: The measurement_config of this PartnerAdServerConfig.
        :rtype: MeasurementConfig
        """
        return self._measurement_config

    @measurement_config.setter
    def measurement_config(self, measurement_config):
        """Sets the measurement_config of this PartnerAdServerConfig.


        :param measurement_config: The measurement_config of this PartnerAdServerConfig.
        :type measurement_config: MeasurementConfig
        """

        self._measurement_config = measurement_config
