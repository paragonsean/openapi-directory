# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DuplicateLineItemRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_display_name: str=None):
        """DuplicateLineItemRequest - a model defined in OpenAPI

        :param target_display_name: The target_display_name of this DuplicateLineItemRequest.
        """
        self.openapi_types = {
            'target_display_name': str
        }

        self.attribute_map = {
            'target_display_name': 'targetDisplayName'
        }

        self._target_display_name = target_display_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DuplicateLineItemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DuplicateLineItemRequest of this DuplicateLineItemRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_display_name(self):
        """Gets the target_display_name of this DuplicateLineItemRequest.

        The display name of the new line item. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :return: The target_display_name of this DuplicateLineItemRequest.
        :rtype: str
        """
        return self._target_display_name

    @target_display_name.setter
    def target_display_name(self, target_display_name):
        """Sets the target_display_name of this DuplicateLineItemRequest.

        The display name of the new line item. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :param target_display_name: The target_display_name of this DuplicateLineItemRequest.
        :type target_display_name: str
        """

        self._target_display_name = target_display_name
