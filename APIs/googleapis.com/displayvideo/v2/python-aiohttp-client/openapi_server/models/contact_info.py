# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_code: str=None, hashed_emails: List[str]=None, hashed_first_name: str=None, hashed_last_name: str=None, hashed_phone_numbers: List[str]=None, zip_codes: List[str]=None):
        """ContactInfo - a model defined in OpenAPI

        :param country_code: The country_code of this ContactInfo.
        :param hashed_emails: The hashed_emails of this ContactInfo.
        :param hashed_first_name: The hashed_first_name of this ContactInfo.
        :param hashed_last_name: The hashed_last_name of this ContactInfo.
        :param hashed_phone_numbers: The hashed_phone_numbers of this ContactInfo.
        :param zip_codes: The zip_codes of this ContactInfo.
        """
        self.openapi_types = {
            'country_code': str,
            'hashed_emails': List[str],
            'hashed_first_name': str,
            'hashed_last_name': str,
            'hashed_phone_numbers': List[str],
            'zip_codes': List[str]
        }

        self.attribute_map = {
            'country_code': 'countryCode',
            'hashed_emails': 'hashedEmails',
            'hashed_first_name': 'hashedFirstName',
            'hashed_last_name': 'hashedLastName',
            'hashed_phone_numbers': 'hashedPhoneNumbers',
            'zip_codes': 'zipCodes'
        }

        self._country_code = country_code
        self._hashed_emails = hashed_emails
        self._hashed_first_name = hashed_first_name
        self._hashed_last_name = hashed_last_name
        self._hashed_phone_numbers = hashed_phone_numbers
        self._zip_codes = zip_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactInfo of this ContactInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_code(self):
        """Gets the country_code of this ContactInfo.

        Country code of the member. Must also be set with the following fields: * hashed_first_name * hashed_last_name * zip_codes

        :return: The country_code of this ContactInfo.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this ContactInfo.

        Country code of the member. Must also be set with the following fields: * hashed_first_name * hashed_last_name * zip_codes

        :param country_code: The country_code of this ContactInfo.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def hashed_emails(self):
        """Gets the hashed_emails of this ContactInfo.

        A list of SHA256 hashed email of the member. Before hashing, remove all whitespace and make sure the string is all lowercase.

        :return: The hashed_emails of this ContactInfo.
        :rtype: List[str]
        """
        return self._hashed_emails

    @hashed_emails.setter
    def hashed_emails(self, hashed_emails):
        """Sets the hashed_emails of this ContactInfo.

        A list of SHA256 hashed email of the member. Before hashing, remove all whitespace and make sure the string is all lowercase.

        :param hashed_emails: The hashed_emails of this ContactInfo.
        :type hashed_emails: List[str]
        """

        self._hashed_emails = hashed_emails

    @property
    def hashed_first_name(self):
        """Gets the hashed_first_name of this ContactInfo.

        SHA256 hashed first name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_last_name * zip_codes

        :return: The hashed_first_name of this ContactInfo.
        :rtype: str
        """
        return self._hashed_first_name

    @hashed_first_name.setter
    def hashed_first_name(self, hashed_first_name):
        """Sets the hashed_first_name of this ContactInfo.

        SHA256 hashed first name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_last_name * zip_codes

        :param hashed_first_name: The hashed_first_name of this ContactInfo.
        :type hashed_first_name: str
        """

        self._hashed_first_name = hashed_first_name

    @property
    def hashed_last_name(self):
        """Gets the hashed_last_name of this ContactInfo.

        SHA256 hashed last name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_first_name * zip_codes

        :return: The hashed_last_name of this ContactInfo.
        :rtype: str
        """
        return self._hashed_last_name

    @hashed_last_name.setter
    def hashed_last_name(self, hashed_last_name):
        """Sets the hashed_last_name of this ContactInfo.

        SHA256 hashed last name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_first_name * zip_codes

        :param hashed_last_name: The hashed_last_name of this ContactInfo.
        :type hashed_last_name: str
        """

        self._hashed_last_name = hashed_last_name

    @property
    def hashed_phone_numbers(self):
        """Gets the hashed_phone_numbers of this ContactInfo.

        A list of SHA256 hashed phone numbers of the member. Before hashing, all phone numbers must be formatted using the [E.164 format](//en.wikipedia.org/wiki/E.164) and include the country calling code.

        :return: The hashed_phone_numbers of this ContactInfo.
        :rtype: List[str]
        """
        return self._hashed_phone_numbers

    @hashed_phone_numbers.setter
    def hashed_phone_numbers(self, hashed_phone_numbers):
        """Sets the hashed_phone_numbers of this ContactInfo.

        A list of SHA256 hashed phone numbers of the member. Before hashing, all phone numbers must be formatted using the [E.164 format](//en.wikipedia.org/wiki/E.164) and include the country calling code.

        :param hashed_phone_numbers: The hashed_phone_numbers of this ContactInfo.
        :type hashed_phone_numbers: List[str]
        """

        self._hashed_phone_numbers = hashed_phone_numbers

    @property
    def zip_codes(self):
        """Gets the zip_codes of this ContactInfo.

        A list of zip codes of the member. Must also be set with the following fields: * country_code * hashed_first_name * hashed_last_name

        :return: The zip_codes of this ContactInfo.
        :rtype: List[str]
        """
        return self._zip_codes

    @zip_codes.setter
    def zip_codes(self, zip_codes):
        """Sets the zip_codes of this ContactInfo.

        A list of zip codes of the member. Must also be set with the following fields: * country_code * hashed_first_name * hashed_last_name

        :param zip_codes: The zip_codes of this ContactInfo.
        :type zip_codes: List[str]
        """

        self._zip_codes = zip_codes
