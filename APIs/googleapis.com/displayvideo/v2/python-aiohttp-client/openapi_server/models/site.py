# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Site(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, url_or_app_id: str=None):
        """Site - a model defined in OpenAPI

        :param name: The name of this Site.
        :param url_or_app_id: The url_or_app_id of this Site.
        """
        self.openapi_types = {
            'name': str,
            'url_or_app_id': str
        }

        self.attribute_map = {
            'name': 'name',
            'url_or_app_id': 'urlOrAppId'
        }

        self._name = name
        self._url_or_app_id = url_or_app_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Site':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Site of this Site.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Site.

        Output only. The resource name of the site.

        :return: The name of this Site.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Site.

        Output only. The resource name of the site.

        :param name: The name of this Site.
        :type name: str
        """

        self._name = name

    @property
    def url_or_app_id(self):
        """Gets the url_or_app_id of this Site.

        Required. The app ID or URL of the site. Must be UTF-8 encoded with a maximum length of 240 bytes.

        :return: The url_or_app_id of this Site.
        :rtype: str
        """
        return self._url_or_app_id

    @url_or_app_id.setter
    def url_or_app_id(self, url_or_app_id):
        """Sets the url_or_app_id of this Site.

        Required. The app ID or URL of the site. Must be UTF-8 encoded with a maximum length of 240 bytes.

        :param url_or_app_id: The url_or_app_id of this Site.
        :type url_or_app_id: str
        """

        self._url_or_app_id = url_or_app_id
