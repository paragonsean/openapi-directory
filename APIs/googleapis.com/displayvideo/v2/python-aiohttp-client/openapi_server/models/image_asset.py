# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimensions import Dimensions
from openapi_server import util


class ImageAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_size: str=None, full_size: Dimensions=None, mime_type: str=None):
        """ImageAsset - a model defined in OpenAPI

        :param file_size: The file_size of this ImageAsset.
        :param full_size: The full_size of this ImageAsset.
        :param mime_type: The mime_type of this ImageAsset.
        """
        self.openapi_types = {
            'file_size': str,
            'full_size': Dimensions,
            'mime_type': str
        }

        self.attribute_map = {
            'file_size': 'fileSize',
            'full_size': 'fullSize',
            'mime_type': 'mimeType'
        }

        self._file_size = file_size
        self._full_size = full_size
        self._mime_type = mime_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageAsset of this ImageAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_size(self):
        """Gets the file_size of this ImageAsset.

        File size of the image asset in bytes.

        :return: The file_size of this ImageAsset.
        :rtype: str
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this ImageAsset.

        File size of the image asset in bytes.

        :param file_size: The file_size of this ImageAsset.
        :type file_size: str
        """

        self._file_size = file_size

    @property
    def full_size(self):
        """Gets the full_size of this ImageAsset.


        :return: The full_size of this ImageAsset.
        :rtype: Dimensions
        """
        return self._full_size

    @full_size.setter
    def full_size(self, full_size):
        """Sets the full_size of this ImageAsset.


        :param full_size: The full_size of this ImageAsset.
        :type full_size: Dimensions
        """

        self._full_size = full_size

    @property
    def mime_type(self):
        """Gets the mime_type of this ImageAsset.

        MIME type of the image asset.

        :return: The mime_type of this ImageAsset.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this ImageAsset.

        MIME type of the image asset.

        :param mime_type: The mime_type of this ImageAsset.
        :type mime_type: str
        """

        self._mime_type = mime_type
