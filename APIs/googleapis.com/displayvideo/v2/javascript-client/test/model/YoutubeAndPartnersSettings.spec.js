/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DisplayVideo360Api);
  }
}(this, function(expect, DisplayVideo360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('YoutubeAndPartnersSettings', function() {
    it('should create an instance of YoutubeAndPartnersSettings', function() {
      // uncomment below and update the code to test YoutubeAndPartnersSettings
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be.a(DisplayVideo360Api.YoutubeAndPartnersSettings);
    });

    it('should have the property biddingStrategy (base name: "biddingStrategy")', function() {
      // uncomment below and update the code to test the property biddingStrategy
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property contentCategory (base name: "contentCategory")', function() {
      // uncomment below and update the code to test the property contentCategory
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property effectiveContentCategory (base name: "effectiveContentCategory")', function() {
      // uncomment below and update the code to test the property effectiveContentCategory
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property inventorySourceSettings (base name: "inventorySourceSettings")', function() {
      // uncomment below and update the code to test the property inventorySourceSettings
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property leadFormId (base name: "leadFormId")', function() {
      // uncomment below and update the code to test the property leadFormId
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property linkedMerchantId (base name: "linkedMerchantId")', function() {
      // uncomment below and update the code to test the property linkedMerchantId
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property relatedVideoIds (base name: "relatedVideoIds")', function() {
      // uncomment below and update the code to test the property relatedVideoIds
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property targetFrequency (base name: "targetFrequency")', function() {
      // uncomment below and update the code to test the property targetFrequency
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyMeasurementSettings (base name: "thirdPartyMeasurementSettings")', function() {
      // uncomment below and update the code to test the property thirdPartyMeasurementSettings
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property videoAdSequenceSettings (base name: "videoAdSequenceSettings")', function() {
      // uncomment below and update the code to test the property videoAdSequenceSettings
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

    it('should have the property viewFrequencyCap (base name: "viewFrequencyCap")', function() {
      // uncomment below and update the code to test the property viewFrequencyCap
      //var instance = new DisplayVideo360Api.YoutubeAndPartnersSettings();
      //expect(instance).to.be();
    });

  });

}));
