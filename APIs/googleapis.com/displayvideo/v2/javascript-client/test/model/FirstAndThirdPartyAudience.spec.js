/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DisplayVideo360Api);
  }
}(this, function(expect, DisplayVideo360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FirstAndThirdPartyAudience', function() {
    it('should create an instance of FirstAndThirdPartyAudience', function() {
      // uncomment below and update the code to test FirstAndThirdPartyAudience
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be.a(DisplayVideo360Api.FirstAndThirdPartyAudience);
    });

    it('should have the property activeDisplayAudienceSize (base name: "activeDisplayAudienceSize")', function() {
      // uncomment below and update the code to test the property activeDisplayAudienceSize
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property audienceSource (base name: "audienceSource")', function() {
      // uncomment below and update the code to test the property audienceSource
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property audienceType (base name: "audienceType")', function() {
      // uncomment below and update the code to test the property audienceType
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property contactInfoList (base name: "contactInfoList")', function() {
      // uncomment below and update the code to test the property contactInfoList
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property displayAudienceSize (base name: "displayAudienceSize")', function() {
      // uncomment below and update the code to test the property displayAudienceSize
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property displayDesktopAudienceSize (base name: "displayDesktopAudienceSize")', function() {
      // uncomment below and update the code to test the property displayDesktopAudienceSize
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property displayMobileAppAudienceSize (base name: "displayMobileAppAudienceSize")', function() {
      // uncomment below and update the code to test the property displayMobileAppAudienceSize
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property displayMobileWebAudienceSize (base name: "displayMobileWebAudienceSize")', function() {
      // uncomment below and update the code to test the property displayMobileWebAudienceSize
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property firstAndThirdPartyAudienceId (base name: "firstAndThirdPartyAudienceId")', function() {
      // uncomment below and update the code to test the property firstAndThirdPartyAudienceId
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property firstAndThirdPartyAudienceType (base name: "firstAndThirdPartyAudienceType")', function() {
      // uncomment below and update the code to test the property firstAndThirdPartyAudienceType
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property gmailAudienceSize (base name: "gmailAudienceSize")', function() {
      // uncomment below and update the code to test the property gmailAudienceSize
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property membershipDurationDays (base name: "membershipDurationDays")', function() {
      // uncomment below and update the code to test the property membershipDurationDays
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property mobileDeviceIdList (base name: "mobileDeviceIdList")', function() {
      // uncomment below and update the code to test the property mobileDeviceIdList
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

    it('should have the property youtubeAudienceSize (base name: "youtubeAudienceSize")', function() {
      // uncomment below and update the code to test the property youtubeAudienceSize
      //var instance = new DisplayVideo360Api.FirstAndThirdPartyAudience();
      //expect(instance).to.be();
    });

  });

}));
