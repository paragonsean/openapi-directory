/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The BulkUpdateLineItemsResponse model module.
 * @module model/BulkUpdateLineItemsResponse
 * @version v2
 */
class BulkUpdateLineItemsResponse {
    /**
     * Constructs a new <code>BulkUpdateLineItemsResponse</code>.
     * Response message for LineItemService.BulkUpdateLineItems.
     * @alias module:model/BulkUpdateLineItemsResponse
     */
    constructor() { 
        
        BulkUpdateLineItemsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BulkUpdateLineItemsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkUpdateLineItemsResponse} obj Optional instance to populate.
     * @return {module:model/BulkUpdateLineItemsResponse} The populated <code>BulkUpdateLineItemsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkUpdateLineItemsResponse();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [Status]);
            }
            if (data.hasOwnProperty('failedLineItemIds')) {
                obj['failedLineItemIds'] = ApiClient.convertToType(data['failedLineItemIds'], ['String']);
            }
            if (data.hasOwnProperty('skippedLineItemIds')) {
                obj['skippedLineItemIds'] = ApiClient.convertToType(data['skippedLineItemIds'], ['String']);
            }
            if (data.hasOwnProperty('updatedLineItemIds')) {
                obj['updatedLineItemIds'] = ApiClient.convertToType(data['updatedLineItemIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkUpdateLineItemsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkUpdateLineItemsResponse</code>.
     */
    static validateJSON(data) {
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                Status.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['failedLineItemIds'])) {
            throw new Error("Expected the field `failedLineItemIds` to be an array in the JSON data but got " + data['failedLineItemIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['skippedLineItemIds'])) {
            throw new Error("Expected the field `skippedLineItemIds` to be an array in the JSON data but got " + data['skippedLineItemIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['updatedLineItemIds'])) {
            throw new Error("Expected the field `updatedLineItemIds` to be an array in the JSON data but got " + data['updatedLineItemIds']);
        }

        return true;
    }


}



/**
 * Errors returned by line items that failed to update.
 * @member {Array.<module:model/Status>} errors
 */
BulkUpdateLineItemsResponse.prototype['errors'] = undefined;

/**
 * The IDs of line items that failed to update.
 * @member {Array.<String>} failedLineItemIds
 */
BulkUpdateLineItemsResponse.prototype['failedLineItemIds'] = undefined;

/**
 * The IDs of line items that are skipped for updates. For example, unnecessary mutates that will result in effectively no changes to line items will be skipped and corresponding line item IDs can be tracked here.
 * @member {Array.<String>} skippedLineItemIds
 */
BulkUpdateLineItemsResponse.prototype['skippedLineItemIds'] = undefined;

/**
 * The IDs of successfully updated line items.
 * @member {Array.<String>} updatedLineItemIds
 */
BulkUpdateLineItemsResponse.prototype['updatedLineItemIds'] = undefined;






export default BulkUpdateLineItemsResponse;

