/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActiveViewVideoViewabilityMetricConfig model module.
 * @module model/ActiveViewVideoViewabilityMetricConfig
 * @version v2
 */
class ActiveViewVideoViewabilityMetricConfig {
    /**
     * Constructs a new <code>ActiveViewVideoViewabilityMetricConfig</code>.
     * Configuration for custom Active View video viewability metrics.
     * @alias module:model/ActiveViewVideoViewabilityMetricConfig
     */
    constructor() { 
        
        ActiveViewVideoViewabilityMetricConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActiveViewVideoViewabilityMetricConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActiveViewVideoViewabilityMetricConfig} obj Optional instance to populate.
     * @return {module:model/ActiveViewVideoViewabilityMetricConfig} The populated <code>ActiveViewVideoViewabilityMetricConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActiveViewVideoViewabilityMetricConfig();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('minimumDuration')) {
                obj['minimumDuration'] = ApiClient.convertToType(data['minimumDuration'], 'String');
            }
            if (data.hasOwnProperty('minimumQuartile')) {
                obj['minimumQuartile'] = ApiClient.convertToType(data['minimumQuartile'], 'String');
            }
            if (data.hasOwnProperty('minimumViewability')) {
                obj['minimumViewability'] = ApiClient.convertToType(data['minimumViewability'], 'String');
            }
            if (data.hasOwnProperty('minimumVolume')) {
                obj['minimumVolume'] = ApiClient.convertToType(data['minimumVolume'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActiveViewVideoViewabilityMetricConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActiveViewVideoViewabilityMetricConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['minimumDuration'] && !(typeof data['minimumDuration'] === 'string' || data['minimumDuration'] instanceof String)) {
            throw new Error("Expected the field `minimumDuration` to be a primitive type in the JSON string but got " + data['minimumDuration']);
        }
        // ensure the json data is a string
        if (data['minimumQuartile'] && !(typeof data['minimumQuartile'] === 'string' || data['minimumQuartile'] instanceof String)) {
            throw new Error("Expected the field `minimumQuartile` to be a primitive type in the JSON string but got " + data['minimumQuartile']);
        }
        // ensure the json data is a string
        if (data['minimumViewability'] && !(typeof data['minimumViewability'] === 'string' || data['minimumViewability'] instanceof String)) {
            throw new Error("Expected the field `minimumViewability` to be a primitive type in the JSON string but got " + data['minimumViewability']);
        }
        // ensure the json data is a string
        if (data['minimumVolume'] && !(typeof data['minimumVolume'] === 'string' || data['minimumVolume'] instanceof String)) {
            throw new Error("Expected the field `minimumVolume` to be a primitive type in the JSON string but got " + data['minimumVolume']);
        }

        return true;
    }


}



/**
 * Required. The display name of the custom metric.
 * @member {String} displayName
 */
ActiveViewVideoViewabilityMetricConfig.prototype['displayName'] = undefined;

/**
 * The minimum visible video duration required (in seconds) in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first).
 * @member {module:model/ActiveViewVideoViewabilityMetricConfig.MinimumDurationEnum} minimumDuration
 */
ActiveViewVideoViewabilityMetricConfig.prototype['minimumDuration'] = undefined;

/**
 * The minimum visible video duration required, based on the video quartiles, in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first).
 * @member {module:model/ActiveViewVideoViewabilityMetricConfig.MinimumQuartileEnum} minimumQuartile
 */
ActiveViewVideoViewabilityMetricConfig.prototype['minimumQuartile'] = undefined;

/**
 * Required. The minimum percentage of the video ad's pixels visible on the screen in order for an impression to be recorded.
 * @member {module:model/ActiveViewVideoViewabilityMetricConfig.MinimumViewabilityEnum} minimumViewability
 */
ActiveViewVideoViewabilityMetricConfig.prototype['minimumViewability'] = undefined;

/**
 * Required. The minimum percentage of the video ad's volume required in order for an impression to be recorded.
 * @member {module:model/ActiveViewVideoViewabilityMetricConfig.MinimumVolumeEnum} minimumVolume
 */
ActiveViewVideoViewabilityMetricConfig.prototype['minimumVolume'] = undefined;





/**
 * Allowed values for the <code>minimumDuration</code> property.
 * @enum {String}
 * @readonly
 */
ActiveViewVideoViewabilityMetricConfig['MinimumDurationEnum'] = {

    /**
     * value: "VIDEO_DURATION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VIDEO_DURATION_UNSPECIFIED",

    /**
     * value: "VIDEO_DURATION_SECONDS_NONE"
     * @const
     */
    "SECONDS_NONE": "VIDEO_DURATION_SECONDS_NONE",

    /**
     * value: "VIDEO_DURATION_SECONDS_0"
     * @const
     */
    "SECONDS_0": "VIDEO_DURATION_SECONDS_0",

    /**
     * value: "VIDEO_DURATION_SECONDS_1"
     * @const
     */
    "SECONDS_1": "VIDEO_DURATION_SECONDS_1",

    /**
     * value: "VIDEO_DURATION_SECONDS_2"
     * @const
     */
    "SECONDS_2": "VIDEO_DURATION_SECONDS_2",

    /**
     * value: "VIDEO_DURATION_SECONDS_3"
     * @const
     */
    "SECONDS_3": "VIDEO_DURATION_SECONDS_3",

    /**
     * value: "VIDEO_DURATION_SECONDS_4"
     * @const
     */
    "SECONDS_4": "VIDEO_DURATION_SECONDS_4",

    /**
     * value: "VIDEO_DURATION_SECONDS_5"
     * @const
     */
    "SECONDS_5": "VIDEO_DURATION_SECONDS_5",

    /**
     * value: "VIDEO_DURATION_SECONDS_6"
     * @const
     */
    "SECONDS_6": "VIDEO_DURATION_SECONDS_6",

    /**
     * value: "VIDEO_DURATION_SECONDS_7"
     * @const
     */
    "SECONDS_7": "VIDEO_DURATION_SECONDS_7",

    /**
     * value: "VIDEO_DURATION_SECONDS_8"
     * @const
     */
    "SECONDS_8": "VIDEO_DURATION_SECONDS_8",

    /**
     * value: "VIDEO_DURATION_SECONDS_9"
     * @const
     */
    "SECONDS_9": "VIDEO_DURATION_SECONDS_9",

    /**
     * value: "VIDEO_DURATION_SECONDS_10"
     * @const
     */
    "SECONDS_10": "VIDEO_DURATION_SECONDS_10",

    /**
     * value: "VIDEO_DURATION_SECONDS_11"
     * @const
     */
    "SECONDS_11": "VIDEO_DURATION_SECONDS_11",

    /**
     * value: "VIDEO_DURATION_SECONDS_12"
     * @const
     */
    "SECONDS_12": "VIDEO_DURATION_SECONDS_12",

    /**
     * value: "VIDEO_DURATION_SECONDS_13"
     * @const
     */
    "SECONDS_13": "VIDEO_DURATION_SECONDS_13",

    /**
     * value: "VIDEO_DURATION_SECONDS_14"
     * @const
     */
    "SECONDS_14": "VIDEO_DURATION_SECONDS_14",

    /**
     * value: "VIDEO_DURATION_SECONDS_15"
     * @const
     */
    "SECONDS_15": "VIDEO_DURATION_SECONDS_15",

    /**
     * value: "VIDEO_DURATION_SECONDS_30"
     * @const
     */
    "SECONDS_30": "VIDEO_DURATION_SECONDS_30",

    /**
     * value: "VIDEO_DURATION_SECONDS_45"
     * @const
     */
    "SECONDS_45": "VIDEO_DURATION_SECONDS_45",

    /**
     * value: "VIDEO_DURATION_SECONDS_60"
     * @const
     */
    "SECONDS_60": "VIDEO_DURATION_SECONDS_60"
};


/**
 * Allowed values for the <code>minimumQuartile</code> property.
 * @enum {String}
 * @readonly
 */
ActiveViewVideoViewabilityMetricConfig['MinimumQuartileEnum'] = {

    /**
     * value: "VIDEO_DURATION_QUARTILE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VIDEO_DURATION_QUARTILE_UNSPECIFIED",

    /**
     * value: "VIDEO_DURATION_QUARTILE_NONE"
     * @const
     */
    "NONE": "VIDEO_DURATION_QUARTILE_NONE",

    /**
     * value: "VIDEO_DURATION_QUARTILE_FIRST"
     * @const
     */
    "FIRST": "VIDEO_DURATION_QUARTILE_FIRST",

    /**
     * value: "VIDEO_DURATION_QUARTILE_SECOND"
     * @const
     */
    "SECOND": "VIDEO_DURATION_QUARTILE_SECOND",

    /**
     * value: "VIDEO_DURATION_QUARTILE_THIRD"
     * @const
     */
    "THIRD": "VIDEO_DURATION_QUARTILE_THIRD",

    /**
     * value: "VIDEO_DURATION_QUARTILE_FOURTH"
     * @const
     */
    "FOURTH": "VIDEO_DURATION_QUARTILE_FOURTH"
};


/**
 * Allowed values for the <code>minimumViewability</code> property.
 * @enum {String}
 * @readonly
 */
ActiveViewVideoViewabilityMetricConfig['MinimumViewabilityEnum'] = {

    /**
     * value: "VIEWABILITY_PERCENT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VIEWABILITY_PERCENT_UNSPECIFIED",

    /**
     * value: "VIEWABILITY_PERCENT_0"
     * @const
     */
    "0": "VIEWABILITY_PERCENT_0",

    /**
     * value: "VIEWABILITY_PERCENT_25"
     * @const
     */
    "25": "VIEWABILITY_PERCENT_25",

    /**
     * value: "VIEWABILITY_PERCENT_50"
     * @const
     */
    "50": "VIEWABILITY_PERCENT_50",

    /**
     * value: "VIEWABILITY_PERCENT_75"
     * @const
     */
    "75": "VIEWABILITY_PERCENT_75",

    /**
     * value: "VIEWABILITY_PERCENT_100"
     * @const
     */
    "100": "VIEWABILITY_PERCENT_100"
};


/**
 * Allowed values for the <code>minimumVolume</code> property.
 * @enum {String}
 * @readonly
 */
ActiveViewVideoViewabilityMetricConfig['MinimumVolumeEnum'] = {

    /**
     * value: "VIDEO_VOLUME_PERCENT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VIDEO_VOLUME_PERCENT_UNSPECIFIED",

    /**
     * value: "VIDEO_VOLUME_PERCENT_0"
     * @const
     */
    "0": "VIDEO_VOLUME_PERCENT_0",

    /**
     * value: "VIDEO_VOLUME_PERCENT_10"
     * @const
     */
    "10": "VIDEO_VOLUME_PERCENT_10"
};



export default ActiveViewVideoViewabilityMetricConfig;

