/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomLabel model module.
 * @module model/CustomLabel
 * @version v2
 */
class CustomLabel {
    /**
     * Constructs a new <code>CustomLabel</code>.
     * The key and value of a custom label.
     * @alias module:model/CustomLabel
     */
    constructor() { 
        
        CustomLabel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomLabel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomLabel} obj Optional instance to populate.
     * @return {module:model/CustomLabel} The populated <code>CustomLabel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomLabel();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomLabel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomLabel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * The key of the label.
 * @member {module:model/CustomLabel.KeyEnum} key
 */
CustomLabel.prototype['key'] = undefined;

/**
 * The value of the label.
 * @member {String} value
 */
CustomLabel.prototype['value'] = undefined;





/**
 * Allowed values for the <code>key</code> property.
 * @enum {String}
 * @readonly
 */
CustomLabel['KeyEnum'] = {

    /**
     * value: "CUSTOM_LABEL_KEY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "CUSTOM_LABEL_KEY_UNSPECIFIED",

    /**
     * value: "CUSTOM_LABEL_KEY_0"
     * @const
     */
    "0": "CUSTOM_LABEL_KEY_0",

    /**
     * value: "CUSTOM_LABEL_KEY_1"
     * @const
     */
    "1": "CUSTOM_LABEL_KEY_1",

    /**
     * value: "CUSTOM_LABEL_KEY_2"
     * @const
     */
    "2": "CUSTOM_LABEL_KEY_2",

    /**
     * value: "CUSTOM_LABEL_KEY_3"
     * @const
     */
    "3": "CUSTOM_LABEL_KEY_3",

    /**
     * value: "CUSTOM_LABEL_KEY_4"
     * @const
     */
    "4": "CUSTOM_LABEL_KEY_4"
};



export default CustomLabel;

