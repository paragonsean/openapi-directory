/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoAdSequenceStep model module.
 * @module model/VideoAdSequenceStep
 * @version v2
 */
class VideoAdSequenceStep {
    /**
     * Constructs a new <code>VideoAdSequenceStep</code>.
     * The detail of a single step in a VideoAdSequence.
     * @alias module:model/VideoAdSequenceStep
     */
    constructor() { 
        
        VideoAdSequenceStep.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoAdSequenceStep</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoAdSequenceStep} obj Optional instance to populate.
     * @return {module:model/VideoAdSequenceStep} The populated <code>VideoAdSequenceStep</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoAdSequenceStep();

            if (data.hasOwnProperty('adGroupId')) {
                obj['adGroupId'] = ApiClient.convertToType(data['adGroupId'], 'String');
            }
            if (data.hasOwnProperty('interactionType')) {
                obj['interactionType'] = ApiClient.convertToType(data['interactionType'], 'String');
            }
            if (data.hasOwnProperty('previousStepId')) {
                obj['previousStepId'] = ApiClient.convertToType(data['previousStepId'], 'String');
            }
            if (data.hasOwnProperty('stepId')) {
                obj['stepId'] = ApiClient.convertToType(data['stepId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoAdSequenceStep</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoAdSequenceStep</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adGroupId'] && !(typeof data['adGroupId'] === 'string' || data['adGroupId'] instanceof String)) {
            throw new Error("Expected the field `adGroupId` to be a primitive type in the JSON string but got " + data['adGroupId']);
        }
        // ensure the json data is a string
        if (data['interactionType'] && !(typeof data['interactionType'] === 'string' || data['interactionType'] instanceof String)) {
            throw new Error("Expected the field `interactionType` to be a primitive type in the JSON string but got " + data['interactionType']);
        }
        // ensure the json data is a string
        if (data['previousStepId'] && !(typeof data['previousStepId'] === 'string' || data['previousStepId'] instanceof String)) {
            throw new Error("Expected the field `previousStepId` to be a primitive type in the JSON string but got " + data['previousStepId']);
        }
        // ensure the json data is a string
        if (data['stepId'] && !(typeof data['stepId'] === 'string' || data['stepId'] instanceof String)) {
            throw new Error("Expected the field `stepId` to be a primitive type in the JSON string but got " + data['stepId']);
        }

        return true;
    }


}



/**
 * The ID of the corresponding ad group of the step.
 * @member {String} adGroupId
 */
VideoAdSequenceStep.prototype['adGroupId'] = undefined;

/**
 * The interaction on the previous step that will lead the viewer to this step. The first step does not have interaction_type.
 * @member {module:model/VideoAdSequenceStep.InteractionTypeEnum} interactionType
 */
VideoAdSequenceStep.prototype['interactionType'] = undefined;

/**
 * The ID of the previous step. The first step does not have previous step.
 * @member {String} previousStepId
 */
VideoAdSequenceStep.prototype['previousStepId'] = undefined;

/**
 * The ID of the step.
 * @member {String} stepId
 */
VideoAdSequenceStep.prototype['stepId'] = undefined;





/**
 * Allowed values for the <code>interactionType</code> property.
 * @enum {String}
 * @readonly
 */
VideoAdSequenceStep['InteractionTypeEnum'] = {

    /**
     * value: "INTERACTION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "INTERACTION_TYPE_UNSPECIFIED",

    /**
     * value: "INTERACTION_TYPE_PAID_VIEW"
     * @const
     */
    "PAID_VIEW": "INTERACTION_TYPE_PAID_VIEW",

    /**
     * value: "INTERACTION_TYPE_SKIP"
     * @const
     */
    "SKIP": "INTERACTION_TYPE_SKIP",

    /**
     * value: "INTERACTION_TYPE_IMPRESSION"
     * @const
     */
    "IMPRESSION": "INTERACTION_TYPE_IMPRESSION",

    /**
     * value: "INTERACTION_TYPE_ENGAGED_IMPRESSION"
     * @const
     */
    "ENGAGED_IMPRESSION": "INTERACTION_TYPE_ENGAGED_IMPRESSION"
};



export default VideoAdSequenceStep;

