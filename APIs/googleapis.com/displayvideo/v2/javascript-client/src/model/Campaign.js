/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CampaignBudget from './CampaignBudget';
import CampaignFlight from './CampaignFlight';
import CampaignGoal from './CampaignGoal';
import FrequencyCap from './FrequencyCap';

/**
 * The Campaign model module.
 * @module model/Campaign
 * @version v2
 */
class Campaign {
    /**
     * Constructs a new <code>Campaign</code>.
     * A single campaign.
     * @alias module:model/Campaign
     */
    constructor() { 
        
        Campaign.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Campaign</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Campaign} obj Optional instance to populate.
     * @return {module:model/Campaign} The populated <code>Campaign</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Campaign();

            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('campaignBudgets')) {
                obj['campaignBudgets'] = ApiClient.convertToType(data['campaignBudgets'], [CampaignBudget]);
            }
            if (data.hasOwnProperty('campaignFlight')) {
                obj['campaignFlight'] = CampaignFlight.constructFromObject(data['campaignFlight']);
            }
            if (data.hasOwnProperty('campaignGoal')) {
                obj['campaignGoal'] = CampaignGoal.constructFromObject(data['campaignGoal']);
            }
            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('entityStatus')) {
                obj['entityStatus'] = ApiClient.convertToType(data['entityStatus'], 'String');
            }
            if (data.hasOwnProperty('frequencyCap')) {
                obj['frequencyCap'] = FrequencyCap.constructFromObject(data['frequencyCap']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Campaign</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Campaign</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        if (data['campaignBudgets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['campaignBudgets'])) {
                throw new Error("Expected the field `campaignBudgets` to be an array in the JSON data but got " + data['campaignBudgets']);
            }
            // validate the optional field `campaignBudgets` (array)
            for (const item of data['campaignBudgets']) {
                CampaignBudget.validateJSON(item);
            };
        }
        // validate the optional field `campaignFlight`
        if (data['campaignFlight']) { // data not null
          CampaignFlight.validateJSON(data['campaignFlight']);
        }
        // validate the optional field `campaignGoal`
        if (data['campaignGoal']) { // data not null
          CampaignGoal.validateJSON(data['campaignGoal']);
        }
        // ensure the json data is a string
        if (data['campaignId'] && !(typeof data['campaignId'] === 'string' || data['campaignId'] instanceof String)) {
            throw new Error("Expected the field `campaignId` to be a primitive type in the JSON string but got " + data['campaignId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['entityStatus'] && !(typeof data['entityStatus'] === 'string' || data['entityStatus'] instanceof String)) {
            throw new Error("Expected the field `entityStatus` to be a primitive type in the JSON string but got " + data['entityStatus']);
        }
        // validate the optional field `frequencyCap`
        if (data['frequencyCap']) { // data not null
          FrequencyCap.validateJSON(data['frequencyCap']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The unique ID of the advertiser the campaign belongs to.
 * @member {String} advertiserId
 */
Campaign.prototype['advertiserId'] = undefined;

/**
 * The list of budgets available to this campaign. If this field is not set, the campaign uses an unlimited budget.
 * @member {Array.<module:model/CampaignBudget>} campaignBudgets
 */
Campaign.prototype['campaignBudgets'] = undefined;

/**
 * @member {module:model/CampaignFlight} campaignFlight
 */
Campaign.prototype['campaignFlight'] = undefined;

/**
 * @member {module:model/CampaignGoal} campaignGoal
 */
Campaign.prototype['campaignGoal'] = undefined;

/**
 * Output only. The unique ID of the campaign. Assigned by the system.
 * @member {String} campaignId
 */
Campaign.prototype['campaignId'] = undefined;

/**
 * Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240 bytes.
 * @member {String} displayName
 */
Campaign.prototype['displayName'] = undefined;

/**
 * Required. Controls whether or not the insertion orders under this campaign can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method, `ENTITY_STATUS_ARCHIVED` is not allowed.
 * @member {module:model/Campaign.EntityStatusEnum} entityStatus
 */
Campaign.prototype['entityStatus'] = undefined;

/**
 * @member {module:model/FrequencyCap} frequencyCap
 */
Campaign.prototype['frequencyCap'] = undefined;

/**
 * Output only. The resource name of the campaign.
 * @member {String} name
 */
Campaign.prototype['name'] = undefined;

/**
 * Output only. The timestamp when the campaign was last updated. Assigned by the system.
 * @member {String} updateTime
 */
Campaign.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>entityStatus</code> property.
 * @enum {String}
 * @readonly
 */
Campaign['EntityStatusEnum'] = {

    /**
     * value: "ENTITY_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ENTITY_STATUS_UNSPECIFIED",

    /**
     * value: "ENTITY_STATUS_ACTIVE"
     * @const
     */
    "ACTIVE": "ENTITY_STATUS_ACTIVE",

    /**
     * value: "ENTITY_STATUS_ARCHIVED"
     * @const
     */
    "ARCHIVED": "ENTITY_STATUS_ARCHIVED",

    /**
     * value: "ENTITY_STATUS_DRAFT"
     * @const
     */
    "DRAFT": "ENTITY_STATUS_DRAFT",

    /**
     * value: "ENTITY_STATUS_PAUSED"
     * @const
     */
    "PAUSED": "ENTITY_STATUS_PAUSED",

    /**
     * value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
     * @const
     */
    "SCHEDULED_FOR_DELETION": "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
};



export default Campaign;

