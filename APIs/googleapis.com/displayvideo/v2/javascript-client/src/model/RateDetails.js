/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Money from './Money';

/**
 * The RateDetails model module.
 * @module model/RateDetails
 * @version v2
 */
class RateDetails {
    /**
     * Constructs a new <code>RateDetails</code>.
     * The rate related settings of the inventory source.
     * @alias module:model/RateDetails
     */
    constructor() { 
        
        RateDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RateDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RateDetails} obj Optional instance to populate.
     * @return {module:model/RateDetails} The populated <code>RateDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RateDetails();

            if (data.hasOwnProperty('inventorySourceRateType')) {
                obj['inventorySourceRateType'] = ApiClient.convertToType(data['inventorySourceRateType'], 'String');
            }
            if (data.hasOwnProperty('minimumSpend')) {
                obj['minimumSpend'] = Money.constructFromObject(data['minimumSpend']);
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = Money.constructFromObject(data['rate']);
            }
            if (data.hasOwnProperty('unitsPurchased')) {
                obj['unitsPurchased'] = ApiClient.convertToType(data['unitsPurchased'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RateDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RateDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['inventorySourceRateType'] && !(typeof data['inventorySourceRateType'] === 'string' || data['inventorySourceRateType'] instanceof String)) {
            throw new Error("Expected the field `inventorySourceRateType` to be a primitive type in the JSON string but got " + data['inventorySourceRateType']);
        }
        // validate the optional field `minimumSpend`
        if (data['minimumSpend']) { // data not null
          Money.validateJSON(data['minimumSpend']);
        }
        // validate the optional field `rate`
        if (data['rate']) { // data not null
          Money.validateJSON(data['rate']);
        }
        // ensure the json data is a string
        if (data['unitsPurchased'] && !(typeof data['unitsPurchased'] === 'string' || data['unitsPurchased'] instanceof String)) {
            throw new Error("Expected the field `unitsPurchased` to be a primitive type in the JSON string but got " + data['unitsPurchased']);
        }

        return true;
    }


}



/**
 * The rate type. Acceptable values are `INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED`, `INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR`, and `INVENTORY_SOURCE_RATE_TYPE_CPD`.
 * @member {module:model/RateDetails.InventorySourceRateTypeEnum} inventorySourceRateType
 */
RateDetails.prototype['inventorySourceRateType'] = undefined;

/**
 * @member {module:model/Money} minimumSpend
 */
RateDetails.prototype['minimumSpend'] = undefined;

/**
 * @member {module:model/Money} rate
 */
RateDetails.prototype['rate'] = undefined;

/**
 * Required for guaranteed inventory sources. The number of impressions guaranteed by the seller.
 * @member {String} unitsPurchased
 */
RateDetails.prototype['unitsPurchased'] = undefined;





/**
 * Allowed values for the <code>inventorySourceRateType</code> property.
 * @enum {String}
 * @readonly
 */
RateDetails['InventorySourceRateTypeEnum'] = {

    /**
     * value: "INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED",

    /**
     * value: "INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED"
     * @const
     */
    "CPM_FIXED": "INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED",

    /**
     * value: "INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR"
     * @const
     */
    "CPM_FLOOR": "INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR",

    /**
     * value: "INVENTORY_SOURCE_RATE_TYPE_CPD"
     * @const
     */
    "CPD": "INVENTORY_SOURCE_RATE_TYPE_CPD",

    /**
     * value: "INVENTORY_SOURCE_RATE_TYPE_FLAT"
     * @const
     */
    "FLAT": "INVENTORY_SOURCE_RATE_TYPE_FLAT"
};



export default RateDetails;

