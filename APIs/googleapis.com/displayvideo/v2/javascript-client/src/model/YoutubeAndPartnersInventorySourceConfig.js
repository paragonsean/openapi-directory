/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The YoutubeAndPartnersInventorySourceConfig model module.
 * @module model/YoutubeAndPartnersInventorySourceConfig
 * @version v2
 */
class YoutubeAndPartnersInventorySourceConfig {
    /**
     * Constructs a new <code>YoutubeAndPartnersInventorySourceConfig</code>.
     * Settings that control what YouTube related inventories the YouTube and Partners line item will target.
     * @alias module:model/YoutubeAndPartnersInventorySourceConfig
     */
    constructor() { 
        
        YoutubeAndPartnersInventorySourceConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>YoutubeAndPartnersInventorySourceConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/YoutubeAndPartnersInventorySourceConfig} obj Optional instance to populate.
     * @return {module:model/YoutubeAndPartnersInventorySourceConfig} The populated <code>YoutubeAndPartnersInventorySourceConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new YoutubeAndPartnersInventorySourceConfig();

            if (data.hasOwnProperty('includeGoogleTv')) {
                obj['includeGoogleTv'] = ApiClient.convertToType(data['includeGoogleTv'], 'Boolean');
            }
            if (data.hasOwnProperty('includeYoutubeSearch')) {
                obj['includeYoutubeSearch'] = ApiClient.convertToType(data['includeYoutubeSearch'], 'Boolean');
            }
            if (data.hasOwnProperty('includeYoutubeVideoPartners')) {
                obj['includeYoutubeVideoPartners'] = ApiClient.convertToType(data['includeYoutubeVideoPartners'], 'Boolean');
            }
            if (data.hasOwnProperty('includeYoutubeVideos')) {
                obj['includeYoutubeVideos'] = ApiClient.convertToType(data['includeYoutubeVideos'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>YoutubeAndPartnersInventorySourceConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>YoutubeAndPartnersInventorySourceConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Optional. Whether to target inventory in video apps available with Google TV.
 * @member {Boolean} includeGoogleTv
 */
YoutubeAndPartnersInventorySourceConfig.prototype['includeGoogleTv'] = undefined;

/**
 * Whether to target inventory on the YouTube search results page.
 * @member {Boolean} includeYoutubeSearch
 */
YoutubeAndPartnersInventorySourceConfig.prototype['includeYoutubeSearch'] = undefined;

/**
 * Whether to target inventory on a collection of partner sites and apps that follow the same brand safety standards as YouTube.
 * @member {Boolean} includeYoutubeVideoPartners
 */
YoutubeAndPartnersInventorySourceConfig.prototype['includeYoutubeVideoPartners'] = undefined;

/**
 * Whether to target inventory of channels and videos on YouTube and YouTube videos embedded on other sites.
 * @member {Boolean} includeYoutubeVideos
 */
YoutubeAndPartnersInventorySourceConfig.prototype['includeYoutubeVideos'] = undefined;






export default YoutubeAndPartnersInventorySourceConfig;

