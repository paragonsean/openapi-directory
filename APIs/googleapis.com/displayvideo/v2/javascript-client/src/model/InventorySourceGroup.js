/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InventorySourceGroup model module.
 * @module model/InventorySourceGroup
 * @version v2
 */
class InventorySourceGroup {
    /**
     * Constructs a new <code>InventorySourceGroup</code>.
     * A collection of targetable inventory sources.
     * @alias module:model/InventorySourceGroup
     */
    constructor() { 
        
        InventorySourceGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InventorySourceGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventorySourceGroup} obj Optional instance to populate.
     * @return {module:model/InventorySourceGroup} The populated <code>InventorySourceGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventorySourceGroup();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('inventorySourceGroupId')) {
                obj['inventorySourceGroupId'] = ApiClient.convertToType(data['inventorySourceGroupId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InventorySourceGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InventorySourceGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['inventorySourceGroupId'] && !(typeof data['inventorySourceGroupId'] === 'string' || data['inventorySourceGroupId'] instanceof String)) {
            throw new Error("Expected the field `inventorySourceGroupId` to be a primitive type in the JSON string but got " + data['inventorySourceGroupId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Required. The display name of the inventory source group. Must be UTF-8 encoded with a maximum size of 240 bytes.
 * @member {String} displayName
 */
InventorySourceGroup.prototype['displayName'] = undefined;

/**
 * Output only. The unique ID of the inventory source group. Assigned by the system.
 * @member {String} inventorySourceGroupId
 */
InventorySourceGroup.prototype['inventorySourceGroupId'] = undefined;

/**
 * Output only. The resource name of the inventory source group.
 * @member {String} name
 */
InventorySourceGroup.prototype['name'] = undefined;






export default InventorySourceGroup;

