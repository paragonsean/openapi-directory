/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PerformanceGoal model module.
 * @module model/PerformanceGoal
 * @version v2
 */
class PerformanceGoal {
    /**
     * Constructs a new <code>PerformanceGoal</code>.
     * Settings that control the performance goal of a campaign.
     * @alias module:model/PerformanceGoal
     */
    constructor() { 
        
        PerformanceGoal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerformanceGoal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerformanceGoal} obj Optional instance to populate.
     * @return {module:model/PerformanceGoal} The populated <code>PerformanceGoal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerformanceGoal();

            if (data.hasOwnProperty('performanceGoalAmountMicros')) {
                obj['performanceGoalAmountMicros'] = ApiClient.convertToType(data['performanceGoalAmountMicros'], 'String');
            }
            if (data.hasOwnProperty('performanceGoalPercentageMicros')) {
                obj['performanceGoalPercentageMicros'] = ApiClient.convertToType(data['performanceGoalPercentageMicros'], 'String');
            }
            if (data.hasOwnProperty('performanceGoalString')) {
                obj['performanceGoalString'] = ApiClient.convertToType(data['performanceGoalString'], 'String');
            }
            if (data.hasOwnProperty('performanceGoalType')) {
                obj['performanceGoalType'] = ApiClient.convertToType(data['performanceGoalType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerformanceGoal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerformanceGoal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['performanceGoalAmountMicros'] && !(typeof data['performanceGoalAmountMicros'] === 'string' || data['performanceGoalAmountMicros'] instanceof String)) {
            throw new Error("Expected the field `performanceGoalAmountMicros` to be a primitive type in the JSON string but got " + data['performanceGoalAmountMicros']);
        }
        // ensure the json data is a string
        if (data['performanceGoalPercentageMicros'] && !(typeof data['performanceGoalPercentageMicros'] === 'string' || data['performanceGoalPercentageMicros'] instanceof String)) {
            throw new Error("Expected the field `performanceGoalPercentageMicros` to be a primitive type in the JSON string but got " + data['performanceGoalPercentageMicros']);
        }
        // ensure the json data is a string
        if (data['performanceGoalString'] && !(typeof data['performanceGoalString'] === 'string' || data['performanceGoalString'] instanceof String)) {
            throw new Error("Expected the field `performanceGoalString` to be a primitive type in the JSON string but got " + data['performanceGoalString']);
        }
        // ensure the json data is a string
        if (data['performanceGoalType'] && !(typeof data['performanceGoalType'] === 'string' || data['performanceGoalType'] instanceof String)) {
            throw new Error("Expected the field `performanceGoalType` to be a primitive type in the JSON string but got " + data['performanceGoalType']);
        }

        return true;
    }


}



/**
 * The goal amount, in micros of the advertiser's currency. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_VCPM` For example 1500000 represents 1.5 standard units of the currency.
 * @member {String} performanceGoalAmountMicros
 */
PerformanceGoal.prototype['performanceGoalAmountMicros'] = undefined;

/**
 * The decimal representation of the goal percentage in micros. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_CLICK_CVR` * `PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR` * `PERFORMANCE_GOAL_TYPE_VTR` * `PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE` * `PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE` For example, 70000 represents 7% (decimal 0.07).
 * @member {String} performanceGoalPercentageMicros
 */
PerformanceGoal.prototype['performanceGoalPercentageMicros'] = undefined;

/**
 * A key performance indicator (KPI) string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`.
 * @member {String} performanceGoalString
 */
PerformanceGoal.prototype['performanceGoalString'] = undefined;

/**
 * Required. The type of the performance goal.
 * @member {module:model/PerformanceGoal.PerformanceGoalTypeEnum} performanceGoalType
 */
PerformanceGoal.prototype['performanceGoalType'] = undefined;





/**
 * Allowed values for the <code>performanceGoalType</code> property.
 * @enum {String}
 * @readonly
 */
PerformanceGoal['PerformanceGoalTypeEnum'] = {

    /**
     * value: "PERFORMANCE_GOAL_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PERFORMANCE_GOAL_TYPE_UNSPECIFIED",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_CPM"
     * @const
     */
    "CPM": "PERFORMANCE_GOAL_TYPE_CPM",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_CPC"
     * @const
     */
    "CPC": "PERFORMANCE_GOAL_TYPE_CPC",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_CPA"
     * @const
     */
    "CPA": "PERFORMANCE_GOAL_TYPE_CPA",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_CTR"
     * @const
     */
    "CTR": "PERFORMANCE_GOAL_TYPE_CTR",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_VIEWABILITY"
     * @const
     */
    "VIEWABILITY": "PERFORMANCE_GOAL_TYPE_VIEWABILITY",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_CPIAVC"
     * @const
     */
    "CPIAVC": "PERFORMANCE_GOAL_TYPE_CPIAVC",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_CPE"
     * @const
     */
    "CPE": "PERFORMANCE_GOAL_TYPE_CPE",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_CLICK_CVR"
     * @const
     */
    "CLICK_CVR": "PERFORMANCE_GOAL_TYPE_CLICK_CVR",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR"
     * @const
     */
    "IMPRESSION_CVR": "PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_VCPM"
     * @const
     */
    "VCPM": "PERFORMANCE_GOAL_TYPE_VCPM",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_VTR"
     * @const
     */
    "VTR": "PERFORMANCE_GOAL_TYPE_VTR",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE"
     * @const
     */
    "AUDIO_COMPLETION_RATE": "PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE"
     * @const
     */
    "VIDEO_COMPLETION_RATE": "PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE",

    /**
     * value: "PERFORMANCE_GOAL_TYPE_OTHER"
     * @const
     */
    "OTHER": "PERFORMANCE_GOAL_TYPE_OTHER"
};



export default PerformanceGoal;

