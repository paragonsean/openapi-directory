/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The YoutubeAndPartnersBiddingStrategy model module.
 * @module model/YoutubeAndPartnersBiddingStrategy
 * @version v2
 */
class YoutubeAndPartnersBiddingStrategy {
    /**
     * Constructs a new <code>YoutubeAndPartnersBiddingStrategy</code>.
     * Settings that control the bid strategy for YouTube and Partners resources.
     * @alias module:model/YoutubeAndPartnersBiddingStrategy
     */
    constructor() { 
        
        YoutubeAndPartnersBiddingStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>YoutubeAndPartnersBiddingStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/YoutubeAndPartnersBiddingStrategy} obj Optional instance to populate.
     * @return {module:model/YoutubeAndPartnersBiddingStrategy} The populated <code>YoutubeAndPartnersBiddingStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new YoutubeAndPartnersBiddingStrategy();

            if (data.hasOwnProperty('adGroupEffectiveTargetCpaSource')) {
                obj['adGroupEffectiveTargetCpaSource'] = ApiClient.convertToType(data['adGroupEffectiveTargetCpaSource'], 'String');
            }
            if (data.hasOwnProperty('adGroupEffectiveTargetCpaValue')) {
                obj['adGroupEffectiveTargetCpaValue'] = ApiClient.convertToType(data['adGroupEffectiveTargetCpaValue'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>YoutubeAndPartnersBiddingStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>YoutubeAndPartnersBiddingStrategy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adGroupEffectiveTargetCpaSource'] && !(typeof data['adGroupEffectiveTargetCpaSource'] === 'string' || data['adGroupEffectiveTargetCpaSource'] instanceof String)) {
            throw new Error("Expected the field `adGroupEffectiveTargetCpaSource` to be a primitive type in the JSON string but got " + data['adGroupEffectiveTargetCpaSource']);
        }
        // ensure the json data is a string
        if (data['adGroupEffectiveTargetCpaValue'] && !(typeof data['adGroupEffectiveTargetCpaValue'] === 'string' || data['adGroupEffectiveTargetCpaValue'] instanceof String)) {
            throw new Error("Expected the field `adGroupEffectiveTargetCpaValue` to be a primitive type in the JSON string but got " + data['adGroupEffectiveTargetCpaValue']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Output only. Source of the effective target CPA value for ad group.
 * @member {module:model/YoutubeAndPartnersBiddingStrategy.AdGroupEffectiveTargetCpaSourceEnum} adGroupEffectiveTargetCpaSource
 */
YoutubeAndPartnersBiddingStrategy.prototype['adGroupEffectiveTargetCpaSource'] = undefined;

/**
 * Output only. The effective target CPA for ad group, in micros of advertiser's currency.
 * @member {String} adGroupEffectiveTargetCpaValue
 */
YoutubeAndPartnersBiddingStrategy.prototype['adGroupEffectiveTargetCpaValue'] = undefined;

/**
 * The type of the bidding strategy.
 * @member {module:model/YoutubeAndPartnersBiddingStrategy.TypeEnum} type
 */
YoutubeAndPartnersBiddingStrategy.prototype['type'] = undefined;

/**
 * The value used by the bidding strategy. When the bidding strategy is assigned at the line item level, this field is only applicable for the following strategy types: * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_ROAS` When the bidding strategy is assigned at the ad group level, this field is only applicable for the following strategy types: * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM` * `YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_ROAS` If not using an applicable strategy, the value of this field will be 0.
 * @member {String} value
 */
YoutubeAndPartnersBiddingStrategy.prototype['value'] = undefined;





/**
 * Allowed values for the <code>adGroupEffectiveTargetCpaSource</code> property.
 * @enum {String}
 * @readonly
 */
YoutubeAndPartnersBiddingStrategy['AdGroupEffectiveTargetCpaSourceEnum'] = {

    /**
     * value: "BIDDING_SOURCE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BIDDING_SOURCE_UNSPECIFIED",

    /**
     * value: "BIDDING_SOURCE_LINE_ITEM"
     * @const
     */
    "LINE_ITEM": "BIDDING_SOURCE_LINE_ITEM",

    /**
     * value: "BIDDING_SOURCE_AD_GROUP"
     * @const
     */
    "AD_GROUP": "BIDDING_SOURCE_AD_GROUP"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
YoutubeAndPartnersBiddingStrategy['TypeEnum'] = {

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_UNSPECIFIED",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV"
     * @const
     */
    "MANUAL_CPV": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPV",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM"
     * @const
     */
    "MANUAL_CPM": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MANUAL_CPM",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA"
     * @const
     */
    "TARGET_CPA": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPA",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM"
     * @const
     */
    "TARGET_CPM": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPM",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_LIFT"
     * @const
     */
    "MAXIMIZE_LIFT": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_LIFT",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSIONS"
     * @const
     */
    "MAXIMIZE_CONVERSIONS": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSIONS",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPV"
     * @const
     */
    "TARGET_CPV": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_CPV",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_ROAS"
     * @const
     */
    "TARGET_ROAS": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_TARGET_ROAS",

    /**
     * value: "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSION_VALUE"
     * @const
     */
    "MAXIMIZE_CONVERSION_VALUE": "YOUTUBE_AND_PARTNERS_BIDDING_STRATEGY_TYPE_MAXIMIZE_CONVERSION_VALUE"
};



export default YoutubeAndPartnersBiddingStrategy;

