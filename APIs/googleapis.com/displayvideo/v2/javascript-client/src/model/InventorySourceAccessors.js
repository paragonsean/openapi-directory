/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InventorySourceAccessorsAdvertiserAccessors from './InventorySourceAccessorsAdvertiserAccessors';
import InventorySourceAccessorsPartnerAccessor from './InventorySourceAccessorsPartnerAccessor';

/**
 * The InventorySourceAccessors model module.
 * @module model/InventorySourceAccessors
 * @version v2
 */
class InventorySourceAccessors {
    /**
     * Constructs a new <code>InventorySourceAccessors</code>.
     * The partner or advertisers with access to the inventory source.
     * @alias module:model/InventorySourceAccessors
     */
    constructor() { 
        
        InventorySourceAccessors.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InventorySourceAccessors</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventorySourceAccessors} obj Optional instance to populate.
     * @return {module:model/InventorySourceAccessors} The populated <code>InventorySourceAccessors</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventorySourceAccessors();

            if (data.hasOwnProperty('advertisers')) {
                obj['advertisers'] = InventorySourceAccessorsAdvertiserAccessors.constructFromObject(data['advertisers']);
            }
            if (data.hasOwnProperty('partner')) {
                obj['partner'] = InventorySourceAccessorsPartnerAccessor.constructFromObject(data['partner']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InventorySourceAccessors</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InventorySourceAccessors</code>.
     */
    static validateJSON(data) {
        // validate the optional field `advertisers`
        if (data['advertisers']) { // data not null
          InventorySourceAccessorsAdvertiserAccessors.validateJSON(data['advertisers']);
        }
        // validate the optional field `partner`
        if (data['partner']) { // data not null
          InventorySourceAccessorsPartnerAccessor.validateJSON(data['partner']);
        }

        return true;
    }


}



/**
 * @member {module:model/InventorySourceAccessorsAdvertiserAccessors} advertisers
 */
InventorySourceAccessors.prototype['advertisers'] = undefined;

/**
 * @member {module:model/InventorySourceAccessorsPartnerAccessor} partner
 */
InventorySourceAccessors.prototype['partner'] = undefined;






export default InventorySourceAccessors;

