/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PoiAssignedTargetingOptionDetails model module.
 * @module model/PoiAssignedTargetingOptionDetails
 * @version v2
 */
class PoiAssignedTargetingOptionDetails {
    /**
     * Constructs a new <code>PoiAssignedTargetingOptionDetails</code>.
     * Details for assigned POI targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is &#x60;TARGETING_TYPE_POI&#x60;.
     * @alias module:model/PoiAssignedTargetingOptionDetails
     */
    constructor() { 
        
        PoiAssignedTargetingOptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PoiAssignedTargetingOptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PoiAssignedTargetingOptionDetails} obj Optional instance to populate.
     * @return {module:model/PoiAssignedTargetingOptionDetails} The populated <code>PoiAssignedTargetingOptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PoiAssignedTargetingOptionDetails();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('proximityRadiusAmount')) {
                obj['proximityRadiusAmount'] = ApiClient.convertToType(data['proximityRadiusAmount'], 'Number');
            }
            if (data.hasOwnProperty('proximityRadiusUnit')) {
                obj['proximityRadiusUnit'] = ApiClient.convertToType(data['proximityRadiusUnit'], 'String');
            }
            if (data.hasOwnProperty('targetingOptionId')) {
                obj['targetingOptionId'] = ApiClient.convertToType(data['targetingOptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PoiAssignedTargetingOptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PoiAssignedTargetingOptionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['proximityRadiusUnit'] && !(typeof data['proximityRadiusUnit'] === 'string' || data['proximityRadiusUnit'] instanceof String)) {
            throw new Error("Expected the field `proximityRadiusUnit` to be a primitive type in the JSON string but got " + data['proximityRadiusUnit']);
        }
        // ensure the json data is a string
        if (data['targetingOptionId'] && !(typeof data['targetingOptionId'] === 'string' || data['targetingOptionId'] instanceof String)) {
            throw new Error("Expected the field `targetingOptionId` to be a primitive type in the JSON string but got " + data['targetingOptionId']);
        }

        return true;
    }


}



/**
 * Output only. The display name of a POI, e.g. \"Times Square\", \"Space Needle\", followed by its full address if available.
 * @member {String} displayName
 */
PoiAssignedTargetingOptionDetails.prototype['displayName'] = undefined;

/**
 * Output only. Latitude of the POI rounding to 6th decimal place.
 * @member {Number} latitude
 */
PoiAssignedTargetingOptionDetails.prototype['latitude'] = undefined;

/**
 * Output only. Longitude of the POI rounding to 6th decimal place.
 * @member {Number} longitude
 */
PoiAssignedTargetingOptionDetails.prototype['longitude'] = undefined;

/**
 * Required. The radius of the area around the POI that will be targeted. The units of the radius are specified by proximity_radius_unit. Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is `DISTANCE_UNIT_MILES`.
 * @member {Number} proximityRadiusAmount
 */
PoiAssignedTargetingOptionDetails.prototype['proximityRadiusAmount'] = undefined;

/**
 * Required. The unit of distance by which the targeting radius is measured.
 * @member {module:model/PoiAssignedTargetingOptionDetails.ProximityRadiusUnitEnum} proximityRadiusUnit
 */
PoiAssignedTargetingOptionDetails.prototype['proximityRadiusUnit'] = undefined;

/**
 * Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_POI`. Accepted POI targeting option IDs can be retrieved using `targetingTypes.targetingOptions.search`. If targeting a specific latitude/longitude coordinate removed from an address or POI name, you can generate the necessary targeting option ID by rounding the desired coordinate values to the 6th decimal place, removing the decimals, and concatenating the string values separated by a semicolon. For example, you can target the latitude/longitude pair of 40.7414691, -74.003387 using the targeting option ID \"40741469;-74003387\". **Upon** **creation, this field value will be updated to append a semicolon and** **alphanumerical hash value if only latitude/longitude coordinates are** **provided.**
 * @member {String} targetingOptionId
 */
PoiAssignedTargetingOptionDetails.prototype['targetingOptionId'] = undefined;





/**
 * Allowed values for the <code>proximityRadiusUnit</code> property.
 * @enum {String}
 * @readonly
 */
PoiAssignedTargetingOptionDetails['ProximityRadiusUnitEnum'] = {

    /**
     * value: "DISTANCE_UNIT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "DISTANCE_UNIT_UNSPECIFIED",

    /**
     * value: "DISTANCE_UNIT_MILES"
     * @const
     */
    "MILES": "DISTANCE_UNIT_MILES",

    /**
     * value: "DISTANCE_UNIT_KILOMETERS"
     * @const
     */
    "KILOMETERS": "DISTANCE_UNIT_KILOMETERS"
};



export default PoiAssignedTargetingOptionDetails;

