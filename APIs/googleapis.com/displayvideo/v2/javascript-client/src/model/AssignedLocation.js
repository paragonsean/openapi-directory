/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssignedLocation model module.
 * @module model/AssignedLocation
 * @version v2
 */
class AssignedLocation {
    /**
     * Constructs a new <code>AssignedLocation</code>.
     * An assignment between a location list and a relevant targeting option.
     * @alias module:model/AssignedLocation
     */
    constructor() { 
        
        AssignedLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssignedLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssignedLocation} obj Optional instance to populate.
     * @return {module:model/AssignedLocation} The populated <code>AssignedLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssignedLocation();

            if (data.hasOwnProperty('assignedLocationId')) {
                obj['assignedLocationId'] = ApiClient.convertToType(data['assignedLocationId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('targetingOptionId')) {
                obj['targetingOptionId'] = ApiClient.convertToType(data['targetingOptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssignedLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssignedLocation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assignedLocationId'] && !(typeof data['assignedLocationId'] === 'string' || data['assignedLocationId'] instanceof String)) {
            throw new Error("Expected the field `assignedLocationId` to be a primitive type in the JSON string but got " + data['assignedLocationId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['targetingOptionId'] && !(typeof data['targetingOptionId'] === 'string' || data['targetingOptionId'] instanceof String)) {
            throw new Error("Expected the field `targetingOptionId` to be a primitive type in the JSON string but got " + data['targetingOptionId']);
        }

        return true;
    }


}



/**
 * Output only. The unique ID of the assigned location. The ID is only unique within a location list. It may be reused in other contexts.
 * @member {String} assignedLocationId
 */
AssignedLocation.prototype['assignedLocationId'] = undefined;

/**
 * Output only. The resource name of the assigned location.
 * @member {String} name
 */
AssignedLocation.prototype['name'] = undefined;

/**
 * Required. The ID of the targeting option assigned to the location list.
 * @member {String} targetingOptionId
 */
AssignedLocation.prototype['targetingOptionId'] = undefined;






export default AssignedLocation;

