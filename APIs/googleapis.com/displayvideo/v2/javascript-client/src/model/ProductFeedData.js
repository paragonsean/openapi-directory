/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductMatchDimension from './ProductMatchDimension';

/**
 * The ProductFeedData model module.
 * @module model/ProductFeedData
 * @version v2
 */
class ProductFeedData {
    /**
     * Constructs a new <code>ProductFeedData</code>.
     * The details of product feed.
     * @alias module:model/ProductFeedData
     */
    constructor() { 
        
        ProductFeedData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductFeedData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductFeedData} obj Optional instance to populate.
     * @return {module:model/ProductFeedData} The populated <code>ProductFeedData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductFeedData();

            if (data.hasOwnProperty('isFeedDisabled')) {
                obj['isFeedDisabled'] = ApiClient.convertToType(data['isFeedDisabled'], 'Boolean');
            }
            if (data.hasOwnProperty('productMatchDimensions')) {
                obj['productMatchDimensions'] = ApiClient.convertToType(data['productMatchDimensions'], [ProductMatchDimension]);
            }
            if (data.hasOwnProperty('productMatchType')) {
                obj['productMatchType'] = ApiClient.convertToType(data['productMatchType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductFeedData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductFeedData</code>.
     */
    static validateJSON(data) {
        if (data['productMatchDimensions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['productMatchDimensions'])) {
                throw new Error("Expected the field `productMatchDimensions` to be an array in the JSON data but got " + data['productMatchDimensions']);
            }
            // validate the optional field `productMatchDimensions` (array)
            for (const item of data['productMatchDimensions']) {
                ProductMatchDimension.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['productMatchType'] && !(typeof data['productMatchType'] === 'string' || data['productMatchType'] instanceof String)) {
            throw new Error("Expected the field `productMatchType` to be a primitive type in the JSON string but got " + data['productMatchType']);
        }

        return true;
    }


}



/**
 * Whether the product feed has opted-out of showing products.
 * @member {Boolean} isFeedDisabled
 */
ProductFeedData.prototype['isFeedDisabled'] = undefined;

/**
 * A list of dimensions used to match products.
 * @member {Array.<module:model/ProductMatchDimension>} productMatchDimensions
 */
ProductFeedData.prototype['productMatchDimensions'] = undefined;

/**
 * How products are selected by the product feed.
 * @member {module:model/ProductFeedData.ProductMatchTypeEnum} productMatchType
 */
ProductFeedData.prototype['productMatchType'] = undefined;





/**
 * Allowed values for the <code>productMatchType</code> property.
 * @enum {String}
 * @readonly
 */
ProductFeedData['ProductMatchTypeEnum'] = {

    /**
     * value: "PRODUCT_MATCH_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PRODUCT_MATCH_TYPE_UNSPECIFIED",

    /**
     * value: "PRODUCT_MATCH_TYPE_ALL_PRODUCTS"
     * @const
     */
    "ALL_PRODUCTS": "PRODUCT_MATCH_TYPE_ALL_PRODUCTS",

    /**
     * value: "PRODUCT_MATCH_TYPE_SPECIFIC_PRODUCTS"
     * @const
     */
    "SPECIFIC_PRODUCTS": "PRODUCT_MATCH_TYPE_SPECIFIC_PRODUCTS",

    /**
     * value: "PRODUCT_MATCH_TYPE_CUSTOM_LABEL"
     * @const
     */
    "CUSTOM_LABEL": "PRODUCT_MATCH_TYPE_CUSTOM_LABEL"
};



export default ProductFeedData;

