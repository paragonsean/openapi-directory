/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KeywordAssignedTargetingOptionDetails model module.
 * @module model/KeywordAssignedTargetingOptionDetails
 * @version v2
 */
class KeywordAssignedTargetingOptionDetails {
    /**
     * Constructs a new <code>KeywordAssignedTargetingOptionDetails</code>.
     * Details for assigned keyword targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is &#x60;TARGETING_TYPE_KEYWORD&#x60;.
     * @alias module:model/KeywordAssignedTargetingOptionDetails
     */
    constructor() { 
        
        KeywordAssignedTargetingOptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeywordAssignedTargetingOptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeywordAssignedTargetingOptionDetails} obj Optional instance to populate.
     * @return {module:model/KeywordAssignedTargetingOptionDetails} The populated <code>KeywordAssignedTargetingOptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeywordAssignedTargetingOptionDetails();

            if (data.hasOwnProperty('keyword')) {
                obj['keyword'] = ApiClient.convertToType(data['keyword'], 'String');
            }
            if (data.hasOwnProperty('negative')) {
                obj['negative'] = ApiClient.convertToType(data['negative'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeywordAssignedTargetingOptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeywordAssignedTargetingOptionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyword'] && !(typeof data['keyword'] === 'string' || data['keyword'] instanceof String)) {
            throw new Error("Expected the field `keyword` to be a primitive type in the JSON string but got " + data['keyword']);
        }

        return true;
    }


}



/**
 * Required. The keyword, for example `car insurance`. Positive keyword cannot be offensive word. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10.
 * @member {String} keyword
 */
KeywordAssignedTargetingOptionDetails.prototype['keyword'] = undefined;

/**
 * Indicates if this option is being negatively targeted.
 * @member {Boolean} negative
 */
KeywordAssignedTargetingOptionDetails.prototype['negative'] = undefined;






export default KeywordAssignedTargetingOptionDetails;

