/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssignedInventorySource from '../model/AssignedInventorySource';
import BulkEditAssignedInventorySourcesRequest from '../model/BulkEditAssignedInventorySourcesRequest';
import BulkEditAssignedInventorySourcesResponse from '../model/BulkEditAssignedInventorySourcesResponse';
import InventorySourceGroup from '../model/InventorySourceGroup';
import ListAssignedInventorySourcesResponse from '../model/ListAssignedInventorySourcesResponse';
import ListInventorySourceGroupsResponse from '../model/ListInventorySourceGroupsResponse';

/**
* InventorySourceGroups service.
* @module api/InventorySourceGroupsApi
* @version v2
*/
export default class InventorySourceGroupsApi {

    /**
    * Constructs a new InventorySourceGroupsApi. 
    * @alias module:api/InventorySourceGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsAssignedInventorySourcesBulkEdit operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesBulkEditCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkEditAssignedInventorySourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bulk edits multiple assignments between inventory sources and a single inventory source group. The operation will delete the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.deleted_assigned_inventory_sources and then create the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.created_assigned_inventory_sources.
     * @param {String} inventorySourceGroupId Required. The ID of the inventory source group to which the assignments are assigned.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/BulkEditAssignedInventorySourcesRequest} [bulkEditAssignedInventorySourcesRequest] 
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesBulkEditCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkEditAssignedInventorySourcesResponse}
     */
    displayvideoInventorySourceGroupsAssignedInventorySourcesBulkEdit(inventorySourceGroupId, opts, callback) {
      opts = opts || {};
      let postBody = opts['bulkEditAssignedInventorySourcesRequest'];
      // verify the required parameter 'inventorySourceGroupId' is set
      if (inventorySourceGroupId === undefined || inventorySourceGroupId === null) {
        throw new Error("Missing the required parameter 'inventorySourceGroupId' when calling displayvideoInventorySourceGroupsAssignedInventorySourcesBulkEdit");
      }

      let pathParams = {
        'inventorySourceGroupId': inventorySourceGroupId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BulkEditAssignedInventorySourcesResponse;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups/{inventorySourceGroupId}/assignedInventorySources:bulkEdit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsAssignedInventorySourcesCreate operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssignedInventorySource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an assignment between an inventory source and an inventory source group.
     * @param {String} inventorySourceGroupId Required. The ID of the inventory source group to which the assignment will be assigned.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the parent inventory source group. The parent partner will not have access to this assigned inventory source.
     * @param {String} [partnerId] The ID of the partner that owns the parent inventory source group. Only this partner will have write access to this assigned inventory source.
     * @param {module:model/AssignedInventorySource} [assignedInventorySource] 
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssignedInventorySource}
     */
    displayvideoInventorySourceGroupsAssignedInventorySourcesCreate(inventorySourceGroupId, opts, callback) {
      opts = opts || {};
      let postBody = opts['assignedInventorySource'];
      // verify the required parameter 'inventorySourceGroupId' is set
      if (inventorySourceGroupId === undefined || inventorySourceGroupId === null) {
        throw new Error("Missing the required parameter 'inventorySourceGroupId' when calling displayvideoInventorySourceGroupsAssignedInventorySourcesCreate");
      }

      let pathParams = {
        'inventorySourceGroupId': inventorySourceGroupId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssignedInventorySource;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups/{inventorySourceGroupId}/assignedInventorySources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsAssignedInventorySourcesDelete operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the assignment between an inventory source and an inventory source group.
     * @param {String} inventorySourceGroupId Required. The ID of the inventory source group to which this assignment is assigned.
     * @param {String} assignedInventorySourceId Required. The ID of the assigned inventory source to delete.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the parent inventory source group. The parent partner does not have access to this assigned inventory source.
     * @param {String} [partnerId] The ID of the partner that owns the parent inventory source group. Only this partner has write access to this assigned inventory source.
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    displayvideoInventorySourceGroupsAssignedInventorySourcesDelete(inventorySourceGroupId, assignedInventorySourceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'inventorySourceGroupId' is set
      if (inventorySourceGroupId === undefined || inventorySourceGroupId === null) {
        throw new Error("Missing the required parameter 'inventorySourceGroupId' when calling displayvideoInventorySourceGroupsAssignedInventorySourcesDelete");
      }
      // verify the required parameter 'assignedInventorySourceId' is set
      if (assignedInventorySourceId === undefined || assignedInventorySourceId === null) {
        throw new Error("Missing the required parameter 'assignedInventorySourceId' when calling displayvideoInventorySourceGroupsAssignedInventorySourcesDelete");
      }

      let pathParams = {
        'inventorySourceGroupId': inventorySourceGroupId,
        'assignedInventorySourceId': assignedInventorySourceId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups/{inventorySourceGroupId}/assignedInventorySources/{assignedInventorySourceId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsAssignedInventorySourcesList operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAssignedInventorySourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists inventory sources assigned to an inventory source group.
     * @param {String} inventorySourceGroupId Required. The ID of the inventory source group to which these assignments are assigned.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that has access to the assignment. If the parent inventory source group is partner-owned, only advertisers to which the parent group is explicitly shared can access the assigned inventory source.
     * @param {String} [filter] Allows filtering by assigned inventory source fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the `OR` logical operator. * A restriction has the form of `{field} {operator} {value}`. * All fields must use the `EQUALS (=)` operator. Supported fields: * `assignedInventorySourceId` The length of this field should be no more than 500 characters. Reference our [filter `LIST` requests](/display-video/api/guides/how-tos/filters) guide for more information.
     * @param {String} [orderBy] Field by which to sort the list. Acceptable values are: * `assignedInventorySourceId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \" desc\" should be added to the field name. Example: `assignedInventorySourceId desc`.
     * @param {Number} [pageSize] Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
     * @param {String} [pageToken] A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAssignedInventorySources` method. If not specified, the first page of results will be returned.
     * @param {String} [partnerId] The ID of the partner that has access to the assignment. If the parent inventory source group is advertiser-owned, the assignment cannot be accessed via a partner.
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsAssignedInventorySourcesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAssignedInventorySourcesResponse}
     */
    displayvideoInventorySourceGroupsAssignedInventorySourcesList(inventorySourceGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'inventorySourceGroupId' is set
      if (inventorySourceGroupId === undefined || inventorySourceGroupId === null) {
        throw new Error("Missing the required parameter 'inventorySourceGroupId' when calling displayvideoInventorySourceGroupsAssignedInventorySourcesList");
      }

      let pathParams = {
        'inventorySourceGroupId': inventorySourceGroupId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAssignedInventorySourcesResponse;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups/{inventorySourceGroupId}/assignedInventorySources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsCreate operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InventorySourceGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new inventory source group. Returns the newly created inventory source group if successful.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the inventory source group. The parent partner will not have access to this group.
     * @param {String} [partnerId] The ID of the partner that owns the inventory source group. Only this partner will have write access to this group. Only advertisers to which this group is explicitly shared will have read access to this group.
     * @param {module:model/InventorySourceGroup} [inventorySourceGroup] 
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InventorySourceGroup}
     */
    displayvideoInventorySourceGroupsCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['inventorySourceGroup'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InventorySourceGroup;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsDelete operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an inventory source group.
     * @param {String} inventorySourceGroupId Required. The ID of the inventory source group to delete.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the inventory source group. The parent partner does not have access to this group.
     * @param {String} [partnerId] The ID of the partner that owns the inventory source group. Only this partner has write access to this group.
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    displayvideoInventorySourceGroupsDelete(inventorySourceGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'inventorySourceGroupId' is set
      if (inventorySourceGroupId === undefined || inventorySourceGroupId === null) {
        throw new Error("Missing the required parameter 'inventorySourceGroupId' when calling displayvideoInventorySourceGroupsDelete");
      }

      let pathParams = {
        'inventorySourceGroupId': inventorySourceGroupId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups/{inventorySourceGroupId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsGet operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InventorySourceGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets an inventory source group.
     * @param {String} inventorySourceGroupId Required. The ID of the inventory source group to fetch.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group.
     * @param {String} [partnerId] The ID of the partner that has access to the inventory source group. A partner cannot access an advertiser-owned inventory source group.
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InventorySourceGroup}
     */
    displayvideoInventorySourceGroupsGet(inventorySourceGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'inventorySourceGroupId' is set
      if (inventorySourceGroupId === undefined || inventorySourceGroupId === null) {
        throw new Error("Missing the required parameter 'inventorySourceGroupId' when calling displayvideoInventorySourceGroupsGet");
      }

      let pathParams = {
        'inventorySourceGroupId': inventorySourceGroupId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InventorySourceGroup;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups/{inventorySourceGroupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoInventorySourceGroupsList operation.
     * @callback module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListInventorySourceGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists inventory source groups that are accessible to the current user. The order is defined by the order_by parameter.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group.
     * @param {String} [filter] Allows filtering by inventory source group fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * All fields must use the `EQUALS (=)` operator. Supported fields: * `inventorySourceGroupId` The length of this field should be no more than 500 characters. Reference our [filter `LIST` requests](/display-video/api/guides/how-tos/filters) guide for more information.
     * @param {String} [orderBy] Field by which to sort the list. Acceptable values are: * `displayName` (default) * `inventorySourceGroupId` The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. For example, `displayName desc`.
     * @param {Number} [pageSize] Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
     * @param {String} [pageToken] A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInventorySources` method. If not specified, the first page of results will be returned.
     * @param {String} [partnerId] The ID of the partner that has access to the inventory source group. A partner cannot access advertiser-owned inventory source groups.
     * @param {module:api/InventorySourceGroupsApi~displayvideoInventorySourceGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListInventorySourceGroupsResponse}
     */
    displayvideoInventorySourceGroupsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListInventorySourceGroupsResponse;
      return this.apiClient.callApi(
        '/v2/inventorySourceGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
