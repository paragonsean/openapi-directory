/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomBiddingAlgorithm from '../model/CustomBiddingAlgorithm';
import CustomBiddingScript from '../model/CustomBiddingScript';
import CustomBiddingScriptRef from '../model/CustomBiddingScriptRef';
import ListCustomBiddingAlgorithmsResponse from '../model/ListCustomBiddingAlgorithmsResponse';
import ListCustomBiddingScriptsResponse from '../model/ListCustomBiddingScriptsResponse';

/**
* CustomBiddingAlgorithms service.
* @module api/CustomBiddingAlgorithmsApi
* @version v2
*/
export default class CustomBiddingAlgorithmsApi {

    /**
    * Constructs a new CustomBiddingAlgorithmsApi. 
    * @alias module:api/CustomBiddingAlgorithmsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsCreate operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomBiddingAlgorithm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new custom bidding algorithm. Returns the newly created custom bidding algorithm if successful.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/CustomBiddingAlgorithm} [customBiddingAlgorithm] 
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomBiddingAlgorithm}
     */
    displayvideoCustomBiddingAlgorithmsCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['customBiddingAlgorithm'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomBiddingAlgorithm;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsGet operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomBiddingAlgorithm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a custom bidding algorithm.
     * @param {String} customBiddingAlgorithmId Required. The ID of the custom bidding algorithm to fetch.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the DV360 partner that has access to the custom bidding algorithm.
     * @param {String} [partnerId] The ID of the DV360 partner that has access to the custom bidding algorithm.
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomBiddingAlgorithm}
     */
    displayvideoCustomBiddingAlgorithmsGet(customBiddingAlgorithmId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'customBiddingAlgorithmId' is set
      if (customBiddingAlgorithmId === undefined || customBiddingAlgorithmId === null) {
        throw new Error("Missing the required parameter 'customBiddingAlgorithmId' when calling displayvideoCustomBiddingAlgorithmsGet");
      }

      let pathParams = {
        'customBiddingAlgorithmId': customBiddingAlgorithmId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomBiddingAlgorithm;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms/{customBiddingAlgorithmId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsList operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCustomBiddingAlgorithmsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists custom bidding algorithms that are accessible to the current user and can be used in bidding stratgies. The order is defined by the order_by parameter.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the DV360 advertiser that has access to the custom bidding algorithm.
     * @param {String} [filter] Allows filtering by custom bidding algorithm fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND`. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The `customBiddingAlgorithmType` field must use the `EQUALS (=)` operator. * The `displayName` field must use the `HAS (:)` operator. Supported fields: * `customBiddingAlgorithmType` * `displayName` Examples: * All custom bidding algorithms for which the display name contains \"politics\": `displayName:\"politics\"`. * All custom bidding algorithms for which the type is \"SCRIPT_BASED\": `customBiddingAlgorithmType=SCRIPT_BASED` The length of this field should be no more than 500 characters. Reference our [filter `LIST` requests](/display-video/api/guides/how-tos/filters) guide for more information.
     * @param {String} [orderBy] Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix \"desc\" should be added to the field name. Example: `displayName desc`.
     * @param {Number} [pageSize] Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
     * @param {String} [pageToken] A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomBiddingAlgorithms` method. If not specified, the first page of results will be returned.
     * @param {String} [partnerId] The ID of the DV360 partner that has access to the custom bidding algorithm.
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCustomBiddingAlgorithmsResponse}
     */
    displayvideoCustomBiddingAlgorithmsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCustomBiddingAlgorithmsResponse;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsPatch operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomBiddingAlgorithm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing custom bidding algorithm. Returns the updated custom bidding algorithm if successful.
     * @param {String} customBiddingAlgorithmId Output only. The unique ID of the custom bidding algorithm. Assigned by the system.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [updateMask] Required. The mask to control which fields to update.
     * @param {module:model/CustomBiddingAlgorithm} [customBiddingAlgorithm] 
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomBiddingAlgorithm}
     */
    displayvideoCustomBiddingAlgorithmsPatch(customBiddingAlgorithmId, opts, callback) {
      opts = opts || {};
      let postBody = opts['customBiddingAlgorithm'];
      // verify the required parameter 'customBiddingAlgorithmId' is set
      if (customBiddingAlgorithmId === undefined || customBiddingAlgorithmId === null) {
        throw new Error("Missing the required parameter 'customBiddingAlgorithmId' when calling displayvideoCustomBiddingAlgorithmsPatch");
      }

      let pathParams = {
        'customBiddingAlgorithmId': customBiddingAlgorithmId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomBiddingAlgorithm;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms/{customBiddingAlgorithmId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsScriptsCreate operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsScriptsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomBiddingScript} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new custom bidding script. Returns the newly created script if successful.
     * @param {String} customBiddingAlgorithmId Required. The ID of the custom bidding algorithm that owns the script.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the parent custom bidding algorithm.
     * @param {String} [partnerId] The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
     * @param {module:model/CustomBiddingScript} [customBiddingScript] 
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsScriptsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomBiddingScript}
     */
    displayvideoCustomBiddingAlgorithmsScriptsCreate(customBiddingAlgorithmId, opts, callback) {
      opts = opts || {};
      let postBody = opts['customBiddingScript'];
      // verify the required parameter 'customBiddingAlgorithmId' is set
      if (customBiddingAlgorithmId === undefined || customBiddingAlgorithmId === null) {
        throw new Error("Missing the required parameter 'customBiddingAlgorithmId' when calling displayvideoCustomBiddingAlgorithmsScriptsCreate");
      }

      let pathParams = {
        'customBiddingAlgorithmId': customBiddingAlgorithmId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomBiddingScript;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms/{customBiddingAlgorithmId}/scripts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsScriptsGet operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsScriptsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomBiddingScript} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a custom bidding script.
     * @param {String} customBiddingAlgorithmId Required. The ID of the custom bidding algorithm owns the script.
     * @param {String} customBiddingScriptId Required. The ID of the custom bidding script to fetch.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the parent custom bidding algorithm.
     * @param {String} [partnerId] The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsScriptsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomBiddingScript}
     */
    displayvideoCustomBiddingAlgorithmsScriptsGet(customBiddingAlgorithmId, customBiddingScriptId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'customBiddingAlgorithmId' is set
      if (customBiddingAlgorithmId === undefined || customBiddingAlgorithmId === null) {
        throw new Error("Missing the required parameter 'customBiddingAlgorithmId' when calling displayvideoCustomBiddingAlgorithmsScriptsGet");
      }
      // verify the required parameter 'customBiddingScriptId' is set
      if (customBiddingScriptId === undefined || customBiddingScriptId === null) {
        throw new Error("Missing the required parameter 'customBiddingScriptId' when calling displayvideoCustomBiddingAlgorithmsScriptsGet");
      }

      let pathParams = {
        'customBiddingAlgorithmId': customBiddingAlgorithmId,
        'customBiddingScriptId': customBiddingScriptId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomBiddingScript;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms/{customBiddingAlgorithmId}/scripts/{customBiddingScriptId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsScriptsList operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsScriptsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCustomBiddingScriptsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists custom bidding scripts that belong to the given algorithm. The order is defined by the order_by parameter.
     * @param {String} customBiddingAlgorithmId Required. The ID of the custom bidding algorithm owns the script.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the parent custom bidding algorithm.
     * @param {String} [orderBy] Field by which to sort the list. Acceptable values are: * `createTime desc` (default) The default sorting order is descending. To specify ascending order for a field, the suffix \"desc\" should be removed. Example: `createTime`.
     * @param {Number} [pageSize] Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
     * @param {String} [pageToken] A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomBiddingScripts` method. If not specified, the first page of results will be returned.
     * @param {String} [partnerId] The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsScriptsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCustomBiddingScriptsResponse}
     */
    displayvideoCustomBiddingAlgorithmsScriptsList(customBiddingAlgorithmId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'customBiddingAlgorithmId' is set
      if (customBiddingAlgorithmId === undefined || customBiddingAlgorithmId === null) {
        throw new Error("Missing the required parameter 'customBiddingAlgorithmId' when calling displayvideoCustomBiddingAlgorithmsScriptsList");
      }

      let pathParams = {
        'customBiddingAlgorithmId': customBiddingAlgorithmId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCustomBiddingScriptsResponse;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms/{customBiddingAlgorithmId}/scripts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the displayvideoCustomBiddingAlgorithmsUploadScript operation.
     * @callback module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsUploadScriptCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomBiddingScriptRef} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a custom bidding script reference object for a script file. The resulting reference object provides a resource path to which the script file should be uploaded. This reference object should be included in when creating a new custom bidding script object.
     * @param {String} customBiddingAlgorithmId Required. The ID of the custom bidding algorithm owns the script.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [advertiserId] The ID of the advertiser that owns the parent custom bidding algorithm.
     * @param {String} [partnerId] The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
     * @param {module:api/CustomBiddingAlgorithmsApi~displayvideoCustomBiddingAlgorithmsUploadScriptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomBiddingScriptRef}
     */
    displayvideoCustomBiddingAlgorithmsUploadScript(customBiddingAlgorithmId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'customBiddingAlgorithmId' is set
      if (customBiddingAlgorithmId === undefined || customBiddingAlgorithmId === null) {
        throw new Error("Missing the required parameter 'customBiddingAlgorithmId' when calling displayvideoCustomBiddingAlgorithmsUploadScript");
      }

      let pathParams = {
        'customBiddingAlgorithmId': customBiddingAlgorithmId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'advertiserId': opts['advertiserId'],
        'partnerId': opts['partnerId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomBiddingScriptRef;
      return this.apiClient.callApi(
        '/v2/customBiddingAlgorithms/{customBiddingAlgorithmId}:uploadScript', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
