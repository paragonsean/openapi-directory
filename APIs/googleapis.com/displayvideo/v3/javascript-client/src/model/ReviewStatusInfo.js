/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExchangeReviewStatus from './ExchangeReviewStatus';
import PublisherReviewStatus from './PublisherReviewStatus';

/**
 * The ReviewStatusInfo model module.
 * @module model/ReviewStatusInfo
 * @version v3
 */
class ReviewStatusInfo {
    /**
     * Constructs a new <code>ReviewStatusInfo</code>.
     * Review statuses for the creative.
     * @alias module:model/ReviewStatusInfo
     */
    constructor() { 
        
        ReviewStatusInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReviewStatusInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReviewStatusInfo} obj Optional instance to populate.
     * @return {module:model/ReviewStatusInfo} The populated <code>ReviewStatusInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReviewStatusInfo();

            if (data.hasOwnProperty('approvalStatus')) {
                obj['approvalStatus'] = ApiClient.convertToType(data['approvalStatus'], 'String');
            }
            if (data.hasOwnProperty('contentAndPolicyReviewStatus')) {
                obj['contentAndPolicyReviewStatus'] = ApiClient.convertToType(data['contentAndPolicyReviewStatus'], 'String');
            }
            if (data.hasOwnProperty('creativeAndLandingPageReviewStatus')) {
                obj['creativeAndLandingPageReviewStatus'] = ApiClient.convertToType(data['creativeAndLandingPageReviewStatus'], 'String');
            }
            if (data.hasOwnProperty('exchangeReviewStatuses')) {
                obj['exchangeReviewStatuses'] = ApiClient.convertToType(data['exchangeReviewStatuses'], [ExchangeReviewStatus]);
            }
            if (data.hasOwnProperty('publisherReviewStatuses')) {
                obj['publisherReviewStatuses'] = ApiClient.convertToType(data['publisherReviewStatuses'], [PublisherReviewStatus]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReviewStatusInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReviewStatusInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['approvalStatus'] && !(typeof data['approvalStatus'] === 'string' || data['approvalStatus'] instanceof String)) {
            throw new Error("Expected the field `approvalStatus` to be a primitive type in the JSON string but got " + data['approvalStatus']);
        }
        // ensure the json data is a string
        if (data['contentAndPolicyReviewStatus'] && !(typeof data['contentAndPolicyReviewStatus'] === 'string' || data['contentAndPolicyReviewStatus'] instanceof String)) {
            throw new Error("Expected the field `contentAndPolicyReviewStatus` to be a primitive type in the JSON string but got " + data['contentAndPolicyReviewStatus']);
        }
        // ensure the json data is a string
        if (data['creativeAndLandingPageReviewStatus'] && !(typeof data['creativeAndLandingPageReviewStatus'] === 'string' || data['creativeAndLandingPageReviewStatus'] instanceof String)) {
            throw new Error("Expected the field `creativeAndLandingPageReviewStatus` to be a primitive type in the JSON string but got " + data['creativeAndLandingPageReviewStatus']);
        }
        if (data['exchangeReviewStatuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['exchangeReviewStatuses'])) {
                throw new Error("Expected the field `exchangeReviewStatuses` to be an array in the JSON data but got " + data['exchangeReviewStatuses']);
            }
            // validate the optional field `exchangeReviewStatuses` (array)
            for (const item of data['exchangeReviewStatuses']) {
                ExchangeReviewStatus.validateJSON(item);
            };
        }
        if (data['publisherReviewStatuses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['publisherReviewStatuses'])) {
                throw new Error("Expected the field `publisherReviewStatuses` to be an array in the JSON data but got " + data['publisherReviewStatuses']);
            }
            // validate the optional field `publisherReviewStatuses` (array)
            for (const item of data['publisherReviewStatuses']) {
                PublisherReviewStatus.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Represents the basic approval needed for a creative to begin serving. Summary of creative_and_landing_page_review_status and content_and_policy_review_status.
 * @member {module:model/ReviewStatusInfo.ApprovalStatusEnum} approvalStatus
 */
ReviewStatusInfo.prototype['approvalStatus'] = undefined;

/**
 * Content and policy review status for the creative.
 * @member {module:model/ReviewStatusInfo.ContentAndPolicyReviewStatusEnum} contentAndPolicyReviewStatus
 */
ReviewStatusInfo.prototype['contentAndPolicyReviewStatus'] = undefined;

/**
 * Creative and landing page review status for the creative.
 * @member {module:model/ReviewStatusInfo.CreativeAndLandingPageReviewStatusEnum} creativeAndLandingPageReviewStatus
 */
ReviewStatusInfo.prototype['creativeAndLandingPageReviewStatus'] = undefined;

/**
 * Exchange review statuses for the creative.
 * @member {Array.<module:model/ExchangeReviewStatus>} exchangeReviewStatuses
 */
ReviewStatusInfo.prototype['exchangeReviewStatuses'] = undefined;

/**
 * Publisher review statuses for the creative.
 * @member {Array.<module:model/PublisherReviewStatus>} publisherReviewStatuses
 */
ReviewStatusInfo.prototype['publisherReviewStatuses'] = undefined;





/**
 * Allowed values for the <code>approvalStatus</code> property.
 * @enum {String}
 * @readonly
 */
ReviewStatusInfo['ApprovalStatusEnum'] = {

    /**
     * value: "APPROVAL_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "APPROVAL_STATUS_UNSPECIFIED",

    /**
     * value: "APPROVAL_STATUS_PENDING_NOT_SERVABLE"
     * @const
     */
    "PENDING_NOT_SERVABLE": "APPROVAL_STATUS_PENDING_NOT_SERVABLE",

    /**
     * value: "APPROVAL_STATUS_PENDING_SERVABLE"
     * @const
     */
    "PENDING_SERVABLE": "APPROVAL_STATUS_PENDING_SERVABLE",

    /**
     * value: "APPROVAL_STATUS_APPROVED_SERVABLE"
     * @const
     */
    "APPROVED_SERVABLE": "APPROVAL_STATUS_APPROVED_SERVABLE",

    /**
     * value: "APPROVAL_STATUS_REJECTED_NOT_SERVABLE"
     * @const
     */
    "REJECTED_NOT_SERVABLE": "APPROVAL_STATUS_REJECTED_NOT_SERVABLE"
};


/**
 * Allowed values for the <code>contentAndPolicyReviewStatus</code> property.
 * @enum {String}
 * @readonly
 */
ReviewStatusInfo['ContentAndPolicyReviewStatusEnum'] = {

    /**
     * value: "REVIEW_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "REVIEW_STATUS_UNSPECIFIED",

    /**
     * value: "REVIEW_STATUS_APPROVED"
     * @const
     */
    "APPROVED": "REVIEW_STATUS_APPROVED",

    /**
     * value: "REVIEW_STATUS_REJECTED"
     * @const
     */
    "REJECTED": "REVIEW_STATUS_REJECTED",

    /**
     * value: "REVIEW_STATUS_PENDING"
     * @const
     */
    "PENDING": "REVIEW_STATUS_PENDING"
};


/**
 * Allowed values for the <code>creativeAndLandingPageReviewStatus</code> property.
 * @enum {String}
 * @readonly
 */
ReviewStatusInfo['CreativeAndLandingPageReviewStatusEnum'] = {

    /**
     * value: "REVIEW_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "REVIEW_STATUS_UNSPECIFIED",

    /**
     * value: "REVIEW_STATUS_APPROVED"
     * @const
     */
    "APPROVED": "REVIEW_STATUS_APPROVED",

    /**
     * value: "REVIEW_STATUS_REJECTED"
     * @const
     */
    "REJECTED": "REVIEW_STATUS_REJECTED",

    /**
     * value: "REVIEW_STATUS_PENDING"
     * @const
     */
    "PENDING": "REVIEW_STATUS_PENDING"
};



export default ReviewStatusInfo;

