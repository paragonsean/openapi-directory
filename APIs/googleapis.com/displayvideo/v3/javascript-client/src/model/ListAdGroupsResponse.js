/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdGroup from './AdGroup';

/**
 * The ListAdGroupsResponse model module.
 * @module model/ListAdGroupsResponse
 * @version v3
 */
class ListAdGroupsResponse {
    /**
     * Constructs a new <code>ListAdGroupsResponse</code>.
     * @alias module:model/ListAdGroupsResponse
     */
    constructor() { 
        
        ListAdGroupsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListAdGroupsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListAdGroupsResponse} obj Optional instance to populate.
     * @return {module:model/ListAdGroupsResponse} The populated <code>ListAdGroupsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListAdGroupsResponse();

            if (data.hasOwnProperty('adGroups')) {
                obj['adGroups'] = ApiClient.convertToType(data['adGroups'], [AdGroup]);
            }
            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListAdGroupsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListAdGroupsResponse</code>.
     */
    static validateJSON(data) {
        if (data['adGroups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['adGroups'])) {
                throw new Error("Expected the field `adGroups` to be an array in the JSON data but got " + data['adGroups']);
            }
            // validate the optional field `adGroups` (array)
            for (const item of data['adGroups']) {
                AdGroup.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }

        return true;
    }


}



/**
 * The list of ad groups. This list will be absent if empty.
 * @member {Array.<module:model/AdGroup>} adGroups
 */
ListAdGroupsResponse.prototype['adGroups'] = undefined;

/**
 * A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAdGroups` method to retrieve the next page of results.
 * @member {String} nextPageToken
 */
ListAdGroupsResponse.prototype['nextPageToken'] = undefined;






export default ListAdGroupsResponse;

