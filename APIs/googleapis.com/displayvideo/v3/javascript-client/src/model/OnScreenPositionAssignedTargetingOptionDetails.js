/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OnScreenPositionAssignedTargetingOptionDetails model module.
 * @module model/OnScreenPositionAssignedTargetingOptionDetails
 * @version v3
 */
class OnScreenPositionAssignedTargetingOptionDetails {
    /**
     * Constructs a new <code>OnScreenPositionAssignedTargetingOptionDetails</code>.
     * On screen position targeting option details. This will be populated in the on_screen_position_details field when targeting_type is &#x60;TARGETING_TYPE_ON_SCREEN_POSITION&#x60;.
     * @alias module:model/OnScreenPositionAssignedTargetingOptionDetails
     */
    constructor() { 
        
        OnScreenPositionAssignedTargetingOptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OnScreenPositionAssignedTargetingOptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnScreenPositionAssignedTargetingOptionDetails} obj Optional instance to populate.
     * @return {module:model/OnScreenPositionAssignedTargetingOptionDetails} The populated <code>OnScreenPositionAssignedTargetingOptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnScreenPositionAssignedTargetingOptionDetails();

            if (data.hasOwnProperty('adType')) {
                obj['adType'] = ApiClient.convertToType(data['adType'], 'String');
            }
            if (data.hasOwnProperty('onScreenPosition')) {
                obj['onScreenPosition'] = ApiClient.convertToType(data['onScreenPosition'], 'String');
            }
            if (data.hasOwnProperty('targetingOptionId')) {
                obj['targetingOptionId'] = ApiClient.convertToType(data['targetingOptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnScreenPositionAssignedTargetingOptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnScreenPositionAssignedTargetingOptionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adType'] && !(typeof data['adType'] === 'string' || data['adType'] instanceof String)) {
            throw new Error("Expected the field `adType` to be a primitive type in the JSON string but got " + data['adType']);
        }
        // ensure the json data is a string
        if (data['onScreenPosition'] && !(typeof data['onScreenPosition'] === 'string' || data['onScreenPosition'] instanceof String)) {
            throw new Error("Expected the field `onScreenPosition` to be a primitive type in the JSON string but got " + data['onScreenPosition']);
        }
        // ensure the json data is a string
        if (data['targetingOptionId'] && !(typeof data['targetingOptionId'] === 'string' || data['targetingOptionId'] instanceof String)) {
            throw new Error("Expected the field `targetingOptionId` to be a primitive type in the JSON string but got " + data['targetingOptionId']);
        }

        return true;
    }


}



/**
 * Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`.
 * @member {module:model/OnScreenPositionAssignedTargetingOptionDetails.AdTypeEnum} adType
 */
OnScreenPositionAssignedTargetingOptionDetails.prototype['adType'] = undefined;

/**
 * Output only. The on screen position.
 * @member {module:model/OnScreenPositionAssignedTargetingOptionDetails.OnScreenPositionEnum} onScreenPosition
 */
OnScreenPositionAssignedTargetingOptionDetails.prototype['onScreenPosition'] = undefined;

/**
 * Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.
 * @member {String} targetingOptionId
 */
OnScreenPositionAssignedTargetingOptionDetails.prototype['targetingOptionId'] = undefined;





/**
 * Allowed values for the <code>adType</code> property.
 * @enum {String}
 * @readonly
 */
OnScreenPositionAssignedTargetingOptionDetails['AdTypeEnum'] = {

    /**
     * value: "AD_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "AD_TYPE_UNSPECIFIED",

    /**
     * value: "AD_TYPE_DISPLAY"
     * @const
     */
    "DISPLAY": "AD_TYPE_DISPLAY",

    /**
     * value: "AD_TYPE_VIDEO"
     * @const
     */
    "VIDEO": "AD_TYPE_VIDEO",

    /**
     * value: "AD_TYPE_AUDIO"
     * @const
     */
    "AUDIO": "AD_TYPE_AUDIO"
};


/**
 * Allowed values for the <code>onScreenPosition</code> property.
 * @enum {String}
 * @readonly
 */
OnScreenPositionAssignedTargetingOptionDetails['OnScreenPositionEnum'] = {

    /**
     * value: "ON_SCREEN_POSITION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ON_SCREEN_POSITION_UNSPECIFIED",

    /**
     * value: "ON_SCREEN_POSITION_UNKNOWN"
     * @const
     */
    "UNKNOWN": "ON_SCREEN_POSITION_UNKNOWN",

    /**
     * value: "ON_SCREEN_POSITION_ABOVE_THE_FOLD"
     * @const
     */
    "ABOVE_THE_FOLD": "ON_SCREEN_POSITION_ABOVE_THE_FOLD",

    /**
     * value: "ON_SCREEN_POSITION_BELOW_THE_FOLD"
     * @const
     */
    "BELOW_THE_FOLD": "ON_SCREEN_POSITION_BELOW_THE_FOLD"
};



export default OnScreenPositionAssignedTargetingOptionDetails;

