/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BusinessChainSearchTerms model module.
 * @module model/BusinessChainSearchTerms
 * @version v3
 */
class BusinessChainSearchTerms {
    /**
     * Constructs a new <code>BusinessChainSearchTerms</code>.
     * Search terms for Business Chain targeting options. At least one of the field should be populated.
     * @alias module:model/BusinessChainSearchTerms
     */
    constructor() { 
        
        BusinessChainSearchTerms.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BusinessChainSearchTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BusinessChainSearchTerms} obj Optional instance to populate.
     * @return {module:model/BusinessChainSearchTerms} The populated <code>BusinessChainSearchTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BusinessChainSearchTerms();

            if (data.hasOwnProperty('businessChainQuery')) {
                obj['businessChainQuery'] = ApiClient.convertToType(data['businessChainQuery'], 'String');
            }
            if (data.hasOwnProperty('regionQuery')) {
                obj['regionQuery'] = ApiClient.convertToType(data['regionQuery'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BusinessChainSearchTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BusinessChainSearchTerms</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['businessChainQuery'] && !(typeof data['businessChainQuery'] === 'string' || data['businessChainQuery'] instanceof String)) {
            throw new Error("Expected the field `businessChainQuery` to be a primitive type in the JSON string but got " + data['businessChainQuery']);
        }
        // ensure the json data is a string
        if (data['regionQuery'] && !(typeof data['regionQuery'] === 'string' || data['regionQuery'] instanceof String)) {
            throw new Error("Expected the field `regionQuery` to be a primitive type in the JSON string but got " + data['regionQuery']);
        }

        return true;
    }


}



/**
 * The search query for the desired business chain. The query must be the full name of the business, e.g. \"KFC\", \"mercedes-benz\".
 * @member {String} businessChainQuery
 */
BusinessChainSearchTerms.prototype['businessChainQuery'] = undefined;

/**
 * The search query for the desired geo region, e.g. \"Seattle\", \"United State\".
 * @member {String} regionQuery
 */
BusinessChainSearchTerms.prototype['regionQuery'] = undefined;






export default BusinessChainSearchTerms;

