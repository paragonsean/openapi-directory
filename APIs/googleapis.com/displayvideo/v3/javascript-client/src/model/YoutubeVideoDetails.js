/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The YoutubeVideoDetails model module.
 * @module model/YoutubeVideoDetails
 * @version v3
 */
class YoutubeVideoDetails {
    /**
     * Constructs a new <code>YoutubeVideoDetails</code>.
     * Details of a YouTube video.
     * @alias module:model/YoutubeVideoDetails
     */
    constructor() { 
        
        YoutubeVideoDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>YoutubeVideoDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/YoutubeVideoDetails} obj Optional instance to populate.
     * @return {module:model/YoutubeVideoDetails} The populated <code>YoutubeVideoDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new YoutubeVideoDetails();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('unavailableReason')) {
                obj['unavailableReason'] = ApiClient.convertToType(data['unavailableReason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>YoutubeVideoDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>YoutubeVideoDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['unavailableReason'] && !(typeof data['unavailableReason'] === 'string' || data['unavailableReason'] instanceof String)) {
            throw new Error("Expected the field `unavailableReason` to be a primitive type in the JSON string but got " + data['unavailableReason']);
        }

        return true;
    }


}



/**
 * The YouTube video ID which can be searched on YouTube webpage.
 * @member {String} id
 */
YoutubeVideoDetails.prototype['id'] = undefined;

/**
 * The reason why the video data is not available.
 * @member {module:model/YoutubeVideoDetails.UnavailableReasonEnum} unavailableReason
 */
YoutubeVideoDetails.prototype['unavailableReason'] = undefined;





/**
 * Allowed values for the <code>unavailableReason</code> property.
 * @enum {String}
 * @readonly
 */
YoutubeVideoDetails['UnavailableReasonEnum'] = {

    /**
     * value: "VIDEO_UNAVAILABLE_REASON_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VIDEO_UNAVAILABLE_REASON_UNSPECIFIED",

    /**
     * value: "VIDEO_UNAVAILABLE_REASON_PRIVATE"
     * @const
     */
    "PRIVATE": "VIDEO_UNAVAILABLE_REASON_PRIVATE",

    /**
     * value: "VIDEO_UNAVAILABLE_REASON_DELETED"
     * @const
     */
    "DELETED": "VIDEO_UNAVAILABLE_REASON_DELETED"
};



export default YoutubeVideoDetails;

