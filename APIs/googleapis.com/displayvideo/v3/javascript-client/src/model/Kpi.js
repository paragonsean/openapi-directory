/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Kpi model module.
 * @module model/Kpi
 * @version v3
 */
class Kpi {
    /**
     * Constructs a new <code>Kpi</code>.
     * Settings that control the key performance indicator, or KPI, of an insertion order.
     * @alias module:model/Kpi
     */
    constructor() { 
        
        Kpi.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Kpi</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Kpi} obj Optional instance to populate.
     * @return {module:model/Kpi} The populated <code>Kpi</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Kpi();

            if (data.hasOwnProperty('kpiAmountMicros')) {
                obj['kpiAmountMicros'] = ApiClient.convertToType(data['kpiAmountMicros'], 'String');
            }
            if (data.hasOwnProperty('kpiPercentageMicros')) {
                obj['kpiPercentageMicros'] = ApiClient.convertToType(data['kpiPercentageMicros'], 'String');
            }
            if (data.hasOwnProperty('kpiString')) {
                obj['kpiString'] = ApiClient.convertToType(data['kpiString'], 'String');
            }
            if (data.hasOwnProperty('kpiType')) {
                obj['kpiType'] = ApiClient.convertToType(data['kpiType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Kpi</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Kpi</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kpiAmountMicros'] && !(typeof data['kpiAmountMicros'] === 'string' || data['kpiAmountMicros'] instanceof String)) {
            throw new Error("Expected the field `kpiAmountMicros` to be a primitive type in the JSON string but got " + data['kpiAmountMicros']);
        }
        // ensure the json data is a string
        if (data['kpiPercentageMicros'] && !(typeof data['kpiPercentageMicros'] === 'string' || data['kpiPercentageMicros'] instanceof String)) {
            throw new Error("Expected the field `kpiPercentageMicros` to be a primitive type in the JSON string but got " + data['kpiPercentageMicros']);
        }
        // ensure the json data is a string
        if (data['kpiString'] && !(typeof data['kpiString'] === 'string' || data['kpiString'] instanceof String)) {
            throw new Error("Expected the field `kpiString` to be a primitive type in the JSON string but got " + data['kpiString']);
        }
        // ensure the json data is a string
        if (data['kpiType'] && !(typeof data['kpiType'] === 'string' || data['kpiType'] instanceof String)) {
            throw new Error("Expected the field `kpiType` to be a primitive type in the JSON string but got " + data['kpiType']);
        }

        return true;
    }


}



/**
 * The goal amount, in micros of the advertiser's currency. Applicable when kpi_type is one of: * `KPI_TYPE_CPM` * `KPI_TYPE_CPC` * `KPI_TYPE_CPA` * `KPI_TYPE_CPIAVC` * `KPI_TYPE_VCPM` For example: 1500000 represents 1.5 standard units of the currency.
 * @member {String} kpiAmountMicros
 */
Kpi.prototype['kpiAmountMicros'] = undefined;

/**
 * The decimal representation of the goal percentage in micros. Applicable when kpi_type is one of: * `KPI_TYPE_CTR` * `KPI_TYPE_VIEWABILITY` * `KPI_TYPE_CLICK_CVR` * `KPI_TYPE_IMPRESSION_CVR` * `KPI_TYPE_VTR` * `KPI_TYPE_AUDIO_COMPLETION_RATE` * `KPI_TYPE_VIDEO_COMPLETION_RATE` For example: 70000 represents 7% (decimal 0.07).
 * @member {String} kpiPercentageMicros
 */
Kpi.prototype['kpiPercentageMicros'] = undefined;

/**
 * A KPI string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when kpi_type is `KPI_TYPE_OTHER`.
 * @member {String} kpiString
 */
Kpi.prototype['kpiString'] = undefined;

/**
 * Required. The type of KPI.
 * @member {module:model/Kpi.KpiTypeEnum} kpiType
 */
Kpi.prototype['kpiType'] = undefined;





/**
 * Allowed values for the <code>kpiType</code> property.
 * @enum {String}
 * @readonly
 */
Kpi['KpiTypeEnum'] = {

    /**
     * value: "KPI_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "KPI_TYPE_UNSPECIFIED",

    /**
     * value: "KPI_TYPE_CPM"
     * @const
     */
    "CPM": "KPI_TYPE_CPM",

    /**
     * value: "KPI_TYPE_CPC"
     * @const
     */
    "CPC": "KPI_TYPE_CPC",

    /**
     * value: "KPI_TYPE_CPA"
     * @const
     */
    "CPA": "KPI_TYPE_CPA",

    /**
     * value: "KPI_TYPE_CTR"
     * @const
     */
    "CTR": "KPI_TYPE_CTR",

    /**
     * value: "KPI_TYPE_VIEWABILITY"
     * @const
     */
    "VIEWABILITY": "KPI_TYPE_VIEWABILITY",

    /**
     * value: "KPI_TYPE_CPIAVC"
     * @const
     */
    "CPIAVC": "KPI_TYPE_CPIAVC",

    /**
     * value: "KPI_TYPE_CPE"
     * @const
     */
    "CPE": "KPI_TYPE_CPE",

    /**
     * value: "KPI_TYPE_CLICK_CVR"
     * @const
     */
    "CLICK_CVR": "KPI_TYPE_CLICK_CVR",

    /**
     * value: "KPI_TYPE_IMPRESSION_CVR"
     * @const
     */
    "IMPRESSION_CVR": "KPI_TYPE_IMPRESSION_CVR",

    /**
     * value: "KPI_TYPE_VCPM"
     * @const
     */
    "VCPM": "KPI_TYPE_VCPM",

    /**
     * value: "KPI_TYPE_VTR"
     * @const
     */
    "VTR": "KPI_TYPE_VTR",

    /**
     * value: "KPI_TYPE_AUDIO_COMPLETION_RATE"
     * @const
     */
    "AUDIO_COMPLETION_RATE": "KPI_TYPE_AUDIO_COMPLETION_RATE",

    /**
     * value: "KPI_TYPE_VIDEO_COMPLETION_RATE"
     * @const
     */
    "VIDEO_COMPLETION_RATE": "KPI_TYPE_VIDEO_COMPLETION_RATE",

    /**
     * value: "KPI_TYPE_OTHER"
     * @const
     */
    "OTHER": "KPI_TYPE_OTHER"
};



export default Kpi;

