/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvertiserAdServerConfig from './AdvertiserAdServerConfig';
import AdvertiserBillingConfig from './AdvertiserBillingConfig';
import AdvertiserCreativeConfig from './AdvertiserCreativeConfig';
import AdvertiserDataAccessConfig from './AdvertiserDataAccessConfig';
import AdvertiserGeneralConfig from './AdvertiserGeneralConfig';
import AdvertiserTargetingConfig from './AdvertiserTargetingConfig';
import IntegrationDetails from './IntegrationDetails';

/**
 * The Advertiser model module.
 * @module model/Advertiser
 * @version v3
 */
class Advertiser {
    /**
     * Constructs a new <code>Advertiser</code>.
     * A single advertiser in Display &amp; Video 360 (DV360).
     * @alias module:model/Advertiser
     */
    constructor() { 
        
        Advertiser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Advertiser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Advertiser} obj Optional instance to populate.
     * @return {module:model/Advertiser} The populated <code>Advertiser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Advertiser();

            if (data.hasOwnProperty('adServerConfig')) {
                obj['adServerConfig'] = AdvertiserAdServerConfig.constructFromObject(data['adServerConfig']);
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('billingConfig')) {
                obj['billingConfig'] = AdvertiserBillingConfig.constructFromObject(data['billingConfig']);
            }
            if (data.hasOwnProperty('creativeConfig')) {
                obj['creativeConfig'] = AdvertiserCreativeConfig.constructFromObject(data['creativeConfig']);
            }
            if (data.hasOwnProperty('dataAccessConfig')) {
                obj['dataAccessConfig'] = AdvertiserDataAccessConfig.constructFromObject(data['dataAccessConfig']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('entityStatus')) {
                obj['entityStatus'] = ApiClient.convertToType(data['entityStatus'], 'String');
            }
            if (data.hasOwnProperty('generalConfig')) {
                obj['generalConfig'] = AdvertiserGeneralConfig.constructFromObject(data['generalConfig']);
            }
            if (data.hasOwnProperty('integrationDetails')) {
                obj['integrationDetails'] = IntegrationDetails.constructFromObject(data['integrationDetails']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('partnerId')) {
                obj['partnerId'] = ApiClient.convertToType(data['partnerId'], 'String');
            }
            if (data.hasOwnProperty('prismaEnabled')) {
                obj['prismaEnabled'] = ApiClient.convertToType(data['prismaEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('servingConfig')) {
                obj['servingConfig'] = AdvertiserTargetingConfig.constructFromObject(data['servingConfig']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Advertiser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Advertiser</code>.
     */
    static validateJSON(data) {
        // validate the optional field `adServerConfig`
        if (data['adServerConfig']) { // data not null
          AdvertiserAdServerConfig.validateJSON(data['adServerConfig']);
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // validate the optional field `billingConfig`
        if (data['billingConfig']) { // data not null
          AdvertiserBillingConfig.validateJSON(data['billingConfig']);
        }
        // validate the optional field `creativeConfig`
        if (data['creativeConfig']) { // data not null
          AdvertiserCreativeConfig.validateJSON(data['creativeConfig']);
        }
        // validate the optional field `dataAccessConfig`
        if (data['dataAccessConfig']) { // data not null
          AdvertiserDataAccessConfig.validateJSON(data['dataAccessConfig']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['entityStatus'] && !(typeof data['entityStatus'] === 'string' || data['entityStatus'] instanceof String)) {
            throw new Error("Expected the field `entityStatus` to be a primitive type in the JSON string but got " + data['entityStatus']);
        }
        // validate the optional field `generalConfig`
        if (data['generalConfig']) { // data not null
          AdvertiserGeneralConfig.validateJSON(data['generalConfig']);
        }
        // validate the optional field `integrationDetails`
        if (data['integrationDetails']) { // data not null
          IntegrationDetails.validateJSON(data['integrationDetails']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['partnerId'] && !(typeof data['partnerId'] === 'string' || data['partnerId'] instanceof String)) {
            throw new Error("Expected the field `partnerId` to be a primitive type in the JSON string but got " + data['partnerId']);
        }
        // validate the optional field `servingConfig`
        if (data['servingConfig']) { // data not null
          AdvertiserTargetingConfig.validateJSON(data['servingConfig']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdvertiserAdServerConfig} adServerConfig
 */
Advertiser.prototype['adServerConfig'] = undefined;

/**
 * Output only. The unique ID of the advertiser. Assigned by the system.
 * @member {String} advertiserId
 */
Advertiser.prototype['advertiserId'] = undefined;

/**
 * @member {module:model/AdvertiserBillingConfig} billingConfig
 */
Advertiser.prototype['billingConfig'] = undefined;

/**
 * @member {module:model/AdvertiserCreativeConfig} creativeConfig
 */
Advertiser.prototype['creativeConfig'] = undefined;

/**
 * @member {module:model/AdvertiserDataAccessConfig} dataAccessConfig
 */
Advertiser.prototype['dataAccessConfig'] = undefined;

/**
 * Required. The display name of the advertiser. Must be UTF-8 encoded with a maximum size of 240 bytes.
 * @member {String} displayName
 */
Advertiser.prototype['displayName'] = undefined;

/**
 * Required. Controls whether or not insertion orders and line items of the advertiser can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_PAUSED` and `ENTITY_STATUS_SCHEDULED_FOR_DELETION`. * If set to `ENTITY_STATUS_SCHEDULED_FOR_DELETION`, the advertiser will be deleted 30 days from when it was first scheduled for deletion.
 * @member {module:model/Advertiser.EntityStatusEnum} entityStatus
 */
Advertiser.prototype['entityStatus'] = undefined;

/**
 * @member {module:model/AdvertiserGeneralConfig} generalConfig
 */
Advertiser.prototype['generalConfig'] = undefined;

/**
 * @member {module:model/IntegrationDetails} integrationDetails
 */
Advertiser.prototype['integrationDetails'] = undefined;

/**
 * Output only. The resource name of the advertiser.
 * @member {String} name
 */
Advertiser.prototype['name'] = undefined;

/**
 * Required. Immutable. The unique ID of the partner that the advertiser belongs to.
 * @member {String} partnerId
 */
Advertiser.prototype['partnerId'] = undefined;

/**
 * Whether integration with Mediaocean (Prisma) is enabled. By enabling this, you agree to the following: On behalf of my company, I authorize Mediaocean (Prisma) to send budget segment plans to Google, and I authorize Google to send corresponding reporting and invoices from DV360 to Mediaocean for the purposes of budget planning, billing, and reconciliation for this advertiser.
 * @member {Boolean} prismaEnabled
 */
Advertiser.prototype['prismaEnabled'] = undefined;

/**
 * @member {module:model/AdvertiserTargetingConfig} servingConfig
 */
Advertiser.prototype['servingConfig'] = undefined;

/**
 * Output only. The timestamp when the advertiser was last updated. Assigned by the system.
 * @member {String} updateTime
 */
Advertiser.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>entityStatus</code> property.
 * @enum {String}
 * @readonly
 */
Advertiser['EntityStatusEnum'] = {

    /**
     * value: "ENTITY_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ENTITY_STATUS_UNSPECIFIED",

    /**
     * value: "ENTITY_STATUS_ACTIVE"
     * @const
     */
    "ACTIVE": "ENTITY_STATUS_ACTIVE",

    /**
     * value: "ENTITY_STATUS_ARCHIVED"
     * @const
     */
    "ARCHIVED": "ENTITY_STATUS_ARCHIVED",

    /**
     * value: "ENTITY_STATUS_DRAFT"
     * @const
     */
    "DRAFT": "ENTITY_STATUS_DRAFT",

    /**
     * value: "ENTITY_STATUS_PAUSED"
     * @const
     */
    "PAUSED": "ENTITY_STATUS_PAUSED",

    /**
     * value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
     * @const
     */
    "SCHEDULED_FOR_DELETION": "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
};



export default Advertiser;

