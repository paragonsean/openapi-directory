/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Adloox model module.
 * @module model/Adloox
 * @version v3
 */
class Adloox {
    /**
     * Constructs a new <code>Adloox</code>.
     * Details of Adloox settings.
     * @alias module:model/Adloox
     */
    constructor() { 
        
        Adloox.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Adloox</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Adloox} obj Optional instance to populate.
     * @return {module:model/Adloox} The populated <code>Adloox</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Adloox();

            if (data.hasOwnProperty('excludedAdlooxCategories')) {
                obj['excludedAdlooxCategories'] = ApiClient.convertToType(data['excludedAdlooxCategories'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Adloox</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Adloox</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['excludedAdlooxCategories'])) {
            throw new Error("Expected the field `excludedAdlooxCategories` to be an array in the JSON data but got " + data['excludedAdlooxCategories']);
        }

        return true;
    }


}



/**
 * Adloox's brand safety settings.
 * @member {Array.<module:model/Adloox.ExcludedAdlooxCategoriesEnum>} excludedAdlooxCategories
 */
Adloox.prototype['excludedAdlooxCategories'] = undefined;





/**
 * Allowed values for the <code>excludedAdlooxCategories</code> property.
 * @enum {String}
 * @readonly
 */
Adloox['ExcludedAdlooxCategoriesEnum'] = {

    /**
     * value: "ADLOOX_UNSPECIFIED"
     * @const
     */
    "ADLOOX_UNSPECIFIED": "ADLOOX_UNSPECIFIED",

    /**
     * value: "ADULT_CONTENT_HARD"
     * @const
     */
    "ADULT_CONTENT_HARD": "ADULT_CONTENT_HARD",

    /**
     * value: "ADULT_CONTENT_SOFT"
     * @const
     */
    "ADULT_CONTENT_SOFT": "ADULT_CONTENT_SOFT",

    /**
     * value: "ILLEGAL_CONTENT"
     * @const
     */
    "ILLEGAL_CONTENT": "ILLEGAL_CONTENT",

    /**
     * value: "BORDERLINE_CONTENT"
     * @const
     */
    "BORDERLINE_CONTENT": "BORDERLINE_CONTENT",

    /**
     * value: "DISCRIMINATORY_CONTENT"
     * @const
     */
    "DISCRIMINATORY_CONTENT": "DISCRIMINATORY_CONTENT",

    /**
     * value: "VIOLENT_CONTENT_WEAPONS"
     * @const
     */
    "VIOLENT_CONTENT_WEAPONS": "VIOLENT_CONTENT_WEAPONS",

    /**
     * value: "LOW_VIEWABILITY_DOMAINS"
     * @const
     */
    "LOW_VIEWABILITY_DOMAINS": "LOW_VIEWABILITY_DOMAINS",

    /**
     * value: "FRAUD"
     * @const
     */
    "FRAUD": "FRAUD"
};



export default Adloox;

