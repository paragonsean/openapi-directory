/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LineItemBudget model module.
 * @module model/LineItemBudget
 * @version v3
 */
class LineItemBudget {
    /**
     * Constructs a new <code>LineItemBudget</code>.
     * Settings that control how budget is allocated.
     * @alias module:model/LineItemBudget
     */
    constructor() { 
        
        LineItemBudget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineItemBudget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineItemBudget} obj Optional instance to populate.
     * @return {module:model/LineItemBudget} The populated <code>LineItemBudget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItemBudget();

            if (data.hasOwnProperty('budgetAllocationType')) {
                obj['budgetAllocationType'] = ApiClient.convertToType(data['budgetAllocationType'], 'String');
            }
            if (data.hasOwnProperty('budgetUnit')) {
                obj['budgetUnit'] = ApiClient.convertToType(data['budgetUnit'], 'String');
            }
            if (data.hasOwnProperty('maxAmount')) {
                obj['maxAmount'] = ApiClient.convertToType(data['maxAmount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineItemBudget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineItemBudget</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['budgetAllocationType'] && !(typeof data['budgetAllocationType'] === 'string' || data['budgetAllocationType'] instanceof String)) {
            throw new Error("Expected the field `budgetAllocationType` to be a primitive type in the JSON string but got " + data['budgetAllocationType']);
        }
        // ensure the json data is a string
        if (data['budgetUnit'] && !(typeof data['budgetUnit'] === 'string' || data['budgetUnit'] instanceof String)) {
            throw new Error("Expected the field `budgetUnit` to be a primitive type in the JSON string but got " + data['budgetUnit']);
        }
        // ensure the json data is a string
        if (data['maxAmount'] && !(typeof data['maxAmount'] === 'string' || data['maxAmount'] instanceof String)) {
            throw new Error("Expected the field `maxAmount` to be a primitive type in the JSON string but got " + data['maxAmount']);
        }

        return true;
    }


}



/**
 * Required. The type of the budget allocation. `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is only applicable when automatic budget allocation is enabled for the parent insertion order.
 * @member {module:model/LineItemBudget.BudgetAllocationTypeEnum} budgetAllocationType
 */
LineItemBudget.prototype['budgetAllocationType'] = undefined;

/**
 * Output only. The budget unit specifies whether the budget is currency based or impression based. This value is inherited from the parent insertion order.
 * @member {module:model/LineItemBudget.BudgetUnitEnum} budgetUnit
 */
LineItemBudget.prototype['budgetUnit'] = undefined;

/**
 * The maximum budget amount the line item will spend. Must be greater than 0. When budget_allocation_type is: * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is immutable and is set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if budget_unit is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum budget amount to spend, in micros of the advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. - `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of impressions to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this field is not applicable and will be ignored by the system.
 * @member {String} maxAmount
 */
LineItemBudget.prototype['maxAmount'] = undefined;





/**
 * Allowed values for the <code>budgetAllocationType</code> property.
 * @enum {String}
 * @readonly
 */
LineItemBudget['BudgetAllocationTypeEnum'] = {

    /**
     * value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED",

    /**
     * value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC"
     * @const
     */
    "AUTOMATIC": "LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC",

    /**
     * value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED"
     * @const
     */
    "FIXED": "LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED",

    /**
     * value: "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED"
     * @const
     */
    "UNLIMITED": "LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED"
};


/**
 * Allowed values for the <code>budgetUnit</code> property.
 * @enum {String}
 * @readonly
 */
LineItemBudget['BudgetUnitEnum'] = {

    /**
     * value: "BUDGET_UNIT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BUDGET_UNIT_UNSPECIFIED",

    /**
     * value: "BUDGET_UNIT_CURRENCY"
     * @const
     */
    "CURRENCY": "BUDGET_UNIT_CURRENCY",

    /**
     * value: "BUDGET_UNIT_IMPRESSIONS"
     * @const
     */
    "IMPRESSIONS": "BUDGET_UNIT_IMPRESSIONS"
};



export default LineItemBudget;

