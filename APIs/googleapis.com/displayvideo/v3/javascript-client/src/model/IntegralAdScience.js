/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IntegralAdScience model module.
 * @module model/IntegralAdScience
 * @version v3
 */
class IntegralAdScience {
    /**
     * Constructs a new <code>IntegralAdScience</code>.
     * Details of Integral Ad Science settings.
     * @alias module:model/IntegralAdScience
     */
    constructor() { 
        
        IntegralAdScience.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntegralAdScience</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegralAdScience} obj Optional instance to populate.
     * @return {module:model/IntegralAdScience} The populated <code>IntegralAdScience</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegralAdScience();

            if (data.hasOwnProperty('customSegmentId')) {
                obj['customSegmentId'] = ApiClient.convertToType(data['customSegmentId'], ['String']);
            }
            if (data.hasOwnProperty('displayViewability')) {
                obj['displayViewability'] = ApiClient.convertToType(data['displayViewability'], 'String');
            }
            if (data.hasOwnProperty('excludeUnrateable')) {
                obj['excludeUnrateable'] = ApiClient.convertToType(data['excludeUnrateable'], 'Boolean');
            }
            if (data.hasOwnProperty('excludedAdFraudRisk')) {
                obj['excludedAdFraudRisk'] = ApiClient.convertToType(data['excludedAdFraudRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedAdultRisk')) {
                obj['excludedAdultRisk'] = ApiClient.convertToType(data['excludedAdultRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedAlcoholRisk')) {
                obj['excludedAlcoholRisk'] = ApiClient.convertToType(data['excludedAlcoholRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedDrugsRisk')) {
                obj['excludedDrugsRisk'] = ApiClient.convertToType(data['excludedDrugsRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedGamblingRisk')) {
                obj['excludedGamblingRisk'] = ApiClient.convertToType(data['excludedGamblingRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedHateSpeechRisk')) {
                obj['excludedHateSpeechRisk'] = ApiClient.convertToType(data['excludedHateSpeechRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedIllegalDownloadsRisk')) {
                obj['excludedIllegalDownloadsRisk'] = ApiClient.convertToType(data['excludedIllegalDownloadsRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedOffensiveLanguageRisk')) {
                obj['excludedOffensiveLanguageRisk'] = ApiClient.convertToType(data['excludedOffensiveLanguageRisk'], 'String');
            }
            if (data.hasOwnProperty('excludedViolenceRisk')) {
                obj['excludedViolenceRisk'] = ApiClient.convertToType(data['excludedViolenceRisk'], 'String');
            }
            if (data.hasOwnProperty('traqScoreOption')) {
                obj['traqScoreOption'] = ApiClient.convertToType(data['traqScoreOption'], 'String');
            }
            if (data.hasOwnProperty('videoViewability')) {
                obj['videoViewability'] = ApiClient.convertToType(data['videoViewability'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegralAdScience</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegralAdScience</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['customSegmentId'])) {
            throw new Error("Expected the field `customSegmentId` to be an array in the JSON data but got " + data['customSegmentId']);
        }
        // ensure the json data is a string
        if (data['displayViewability'] && !(typeof data['displayViewability'] === 'string' || data['displayViewability'] instanceof String)) {
            throw new Error("Expected the field `displayViewability` to be a primitive type in the JSON string but got " + data['displayViewability']);
        }
        // ensure the json data is a string
        if (data['excludedAdFraudRisk'] && !(typeof data['excludedAdFraudRisk'] === 'string' || data['excludedAdFraudRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedAdFraudRisk` to be a primitive type in the JSON string but got " + data['excludedAdFraudRisk']);
        }
        // ensure the json data is a string
        if (data['excludedAdultRisk'] && !(typeof data['excludedAdultRisk'] === 'string' || data['excludedAdultRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedAdultRisk` to be a primitive type in the JSON string but got " + data['excludedAdultRisk']);
        }
        // ensure the json data is a string
        if (data['excludedAlcoholRisk'] && !(typeof data['excludedAlcoholRisk'] === 'string' || data['excludedAlcoholRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedAlcoholRisk` to be a primitive type in the JSON string but got " + data['excludedAlcoholRisk']);
        }
        // ensure the json data is a string
        if (data['excludedDrugsRisk'] && !(typeof data['excludedDrugsRisk'] === 'string' || data['excludedDrugsRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedDrugsRisk` to be a primitive type in the JSON string but got " + data['excludedDrugsRisk']);
        }
        // ensure the json data is a string
        if (data['excludedGamblingRisk'] && !(typeof data['excludedGamblingRisk'] === 'string' || data['excludedGamblingRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedGamblingRisk` to be a primitive type in the JSON string but got " + data['excludedGamblingRisk']);
        }
        // ensure the json data is a string
        if (data['excludedHateSpeechRisk'] && !(typeof data['excludedHateSpeechRisk'] === 'string' || data['excludedHateSpeechRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedHateSpeechRisk` to be a primitive type in the JSON string but got " + data['excludedHateSpeechRisk']);
        }
        // ensure the json data is a string
        if (data['excludedIllegalDownloadsRisk'] && !(typeof data['excludedIllegalDownloadsRisk'] === 'string' || data['excludedIllegalDownloadsRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedIllegalDownloadsRisk` to be a primitive type in the JSON string but got " + data['excludedIllegalDownloadsRisk']);
        }
        // ensure the json data is a string
        if (data['excludedOffensiveLanguageRisk'] && !(typeof data['excludedOffensiveLanguageRisk'] === 'string' || data['excludedOffensiveLanguageRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedOffensiveLanguageRisk` to be a primitive type in the JSON string but got " + data['excludedOffensiveLanguageRisk']);
        }
        // ensure the json data is a string
        if (data['excludedViolenceRisk'] && !(typeof data['excludedViolenceRisk'] === 'string' || data['excludedViolenceRisk'] instanceof String)) {
            throw new Error("Expected the field `excludedViolenceRisk` to be a primitive type in the JSON string but got " + data['excludedViolenceRisk']);
        }
        // ensure the json data is a string
        if (data['traqScoreOption'] && !(typeof data['traqScoreOption'] === 'string' || data['traqScoreOption'] instanceof String)) {
            throw new Error("Expected the field `traqScoreOption` to be a primitive type in the JSON string but got " + data['traqScoreOption']);
        }
        // ensure the json data is a string
        if (data['videoViewability'] && !(typeof data['videoViewability'] === 'string' || data['videoViewability'] instanceof String)) {
            throw new Error("Expected the field `videoViewability` to be a primitive type in the JSON string but got " + data['videoViewability']);
        }

        return true;
    }


}



/**
 * The custom segment ID provided by Integral Ad Science. The ID must be between `1000001` and `1999999`, inclusive.
 * @member {Array.<String>} customSegmentId
 */
IntegralAdScience.prototype['customSegmentId'] = undefined;

/**
 * Display Viewability section (applicable to display line items only).
 * @member {module:model/IntegralAdScience.DisplayViewabilityEnum} displayViewability
 */
IntegralAdScience.prototype['displayViewability'] = undefined;

/**
 * Brand Safety - **Unrateable**.
 * @member {Boolean} excludeUnrateable
 */
IntegralAdScience.prototype['excludeUnrateable'] = undefined;

/**
 * Ad Fraud settings.
 * @member {module:model/IntegralAdScience.ExcludedAdFraudRiskEnum} excludedAdFraudRisk
 */
IntegralAdScience.prototype['excludedAdFraudRisk'] = undefined;

/**
 * Brand Safety - **Adult content**.
 * @member {module:model/IntegralAdScience.ExcludedAdultRiskEnum} excludedAdultRisk
 */
IntegralAdScience.prototype['excludedAdultRisk'] = undefined;

/**
 * Brand Safety - **Alcohol**.
 * @member {module:model/IntegralAdScience.ExcludedAlcoholRiskEnum} excludedAlcoholRisk
 */
IntegralAdScience.prototype['excludedAlcoholRisk'] = undefined;

/**
 * Brand Safety - **Drugs**.
 * @member {module:model/IntegralAdScience.ExcludedDrugsRiskEnum} excludedDrugsRisk
 */
IntegralAdScience.prototype['excludedDrugsRisk'] = undefined;

/**
 * Brand Safety - **Gambling**.
 * @member {module:model/IntegralAdScience.ExcludedGamblingRiskEnum} excludedGamblingRisk
 */
IntegralAdScience.prototype['excludedGamblingRisk'] = undefined;

/**
 * Brand Safety - **Hate speech**.
 * @member {module:model/IntegralAdScience.ExcludedHateSpeechRiskEnum} excludedHateSpeechRisk
 */
IntegralAdScience.prototype['excludedHateSpeechRisk'] = undefined;

/**
 * Brand Safety - **Illegal downloads**.
 * @member {module:model/IntegralAdScience.ExcludedIllegalDownloadsRiskEnum} excludedIllegalDownloadsRisk
 */
IntegralAdScience.prototype['excludedIllegalDownloadsRisk'] = undefined;

/**
 * Brand Safety - **Offensive language**.
 * @member {module:model/IntegralAdScience.ExcludedOffensiveLanguageRiskEnum} excludedOffensiveLanguageRisk
 */
IntegralAdScience.prototype['excludedOffensiveLanguageRisk'] = undefined;

/**
 * Brand Safety - **Violence**.
 * @member {module:model/IntegralAdScience.ExcludedViolenceRiskEnum} excludedViolenceRisk
 */
IntegralAdScience.prototype['excludedViolenceRisk'] = undefined;

/**
 * True advertising quality (applicable to Display line items only).
 * @member {module:model/IntegralAdScience.TraqScoreOptionEnum} traqScoreOption
 */
IntegralAdScience.prototype['traqScoreOption'] = undefined;

/**
 * Video Viewability Section (applicable to video line items only).
 * @member {module:model/IntegralAdScience.VideoViewabilityEnum} videoViewability
 */
IntegralAdScience.prototype['videoViewability'] = undefined;





/**
 * Allowed values for the <code>displayViewability</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['DisplayViewabilityEnum'] = {

    /**
     * value: "PERFORMANCE_VIEWABILITY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PERFORMANCE_VIEWABILITY_UNSPECIFIED",

    /**
     * value: "PERFORMANCE_VIEWABILITY_40"
     * @const
     */
    "40": "PERFORMANCE_VIEWABILITY_40",

    /**
     * value: "PERFORMANCE_VIEWABILITY_50"
     * @const
     */
    "50": "PERFORMANCE_VIEWABILITY_50",

    /**
     * value: "PERFORMANCE_VIEWABILITY_60"
     * @const
     */
    "60": "PERFORMANCE_VIEWABILITY_60",

    /**
     * value: "PERFORMANCE_VIEWABILITY_70"
     * @const
     */
    "70": "PERFORMANCE_VIEWABILITY_70"
};


/**
 * Allowed values for the <code>excludedAdFraudRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedAdFraudRiskEnum'] = {

    /**
     * value: "SUSPICIOUS_ACTIVITY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SUSPICIOUS_ACTIVITY_UNSPECIFIED",

    /**
     * value: "SUSPICIOUS_ACTIVITY_HR"
     * @const
     */
    "HR": "SUSPICIOUS_ACTIVITY_HR",

    /**
     * value: "SUSPICIOUS_ACTIVITY_HMR"
     * @const
     */
    "HMR": "SUSPICIOUS_ACTIVITY_HMR"
};


/**
 * Allowed values for the <code>excludedAdultRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedAdultRiskEnum'] = {

    /**
     * value: "ADULT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ADULT_UNSPECIFIED",

    /**
     * value: "ADULT_HR"
     * @const
     */
    "HR": "ADULT_HR",

    /**
     * value: "ADULT_HMR"
     * @const
     */
    "HMR": "ADULT_HMR"
};


/**
 * Allowed values for the <code>excludedAlcoholRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedAlcoholRiskEnum'] = {

    /**
     * value: "ALCOHOL_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ALCOHOL_UNSPECIFIED",

    /**
     * value: "ALCOHOL_HR"
     * @const
     */
    "HR": "ALCOHOL_HR",

    /**
     * value: "ALCOHOL_HMR"
     * @const
     */
    "HMR": "ALCOHOL_HMR"
};


/**
 * Allowed values for the <code>excludedDrugsRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedDrugsRiskEnum'] = {

    /**
     * value: "DRUGS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "DRUGS_UNSPECIFIED",

    /**
     * value: "DRUGS_HR"
     * @const
     */
    "HR": "DRUGS_HR",

    /**
     * value: "DRUGS_HMR"
     * @const
     */
    "HMR": "DRUGS_HMR"
};


/**
 * Allowed values for the <code>excludedGamblingRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedGamblingRiskEnum'] = {

    /**
     * value: "GAMBLING_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "GAMBLING_UNSPECIFIED",

    /**
     * value: "GAMBLING_HR"
     * @const
     */
    "HR": "GAMBLING_HR",

    /**
     * value: "GAMBLING_HMR"
     * @const
     */
    "HMR": "GAMBLING_HMR"
};


/**
 * Allowed values for the <code>excludedHateSpeechRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedHateSpeechRiskEnum'] = {

    /**
     * value: "HATE_SPEECH_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "HATE_SPEECH_UNSPECIFIED",

    /**
     * value: "HATE_SPEECH_HR"
     * @const
     */
    "HR": "HATE_SPEECH_HR",

    /**
     * value: "HATE_SPEECH_HMR"
     * @const
     */
    "HMR": "HATE_SPEECH_HMR"
};


/**
 * Allowed values for the <code>excludedIllegalDownloadsRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedIllegalDownloadsRiskEnum'] = {

    /**
     * value: "ILLEGAL_DOWNLOADS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ILLEGAL_DOWNLOADS_UNSPECIFIED",

    /**
     * value: "ILLEGAL_DOWNLOADS_HR"
     * @const
     */
    "HR": "ILLEGAL_DOWNLOADS_HR",

    /**
     * value: "ILLEGAL_DOWNLOADS_HMR"
     * @const
     */
    "HMR": "ILLEGAL_DOWNLOADS_HMR"
};


/**
 * Allowed values for the <code>excludedOffensiveLanguageRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedOffensiveLanguageRiskEnum'] = {

    /**
     * value: "OFFENSIVE_LANGUAGE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "OFFENSIVE_LANGUAGE_UNSPECIFIED",

    /**
     * value: "OFFENSIVE_LANGUAGE_HR"
     * @const
     */
    "HR": "OFFENSIVE_LANGUAGE_HR",

    /**
     * value: "OFFENSIVE_LANGUAGE_HMR"
     * @const
     */
    "HMR": "OFFENSIVE_LANGUAGE_HMR"
};


/**
 * Allowed values for the <code>excludedViolenceRisk</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['ExcludedViolenceRiskEnum'] = {

    /**
     * value: "VIOLENCE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VIOLENCE_UNSPECIFIED",

    /**
     * value: "VIOLENCE_HR"
     * @const
     */
    "HR": "VIOLENCE_HR",

    /**
     * value: "VIOLENCE_HMR"
     * @const
     */
    "HMR": "VIOLENCE_HMR"
};


/**
 * Allowed values for the <code>traqScoreOption</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['TraqScoreOptionEnum'] = {

    /**
     * value: "TRAQ_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "TRAQ_UNSPECIFIED",

    /**
     * value: "TRAQ_250"
     * @const
     */
    "250": "TRAQ_250",

    /**
     * value: "TRAQ_500"
     * @const
     */
    "500": "TRAQ_500",

    /**
     * value: "TRAQ_600"
     * @const
     */
    "600": "TRAQ_600",

    /**
     * value: "TRAQ_700"
     * @const
     */
    "700": "TRAQ_700",

    /**
     * value: "TRAQ_750"
     * @const
     */
    "750": "TRAQ_750",

    /**
     * value: "TRAQ_875"
     * @const
     */
    "875": "TRAQ_875",

    /**
     * value: "TRAQ_1000"
     * @const
     */
    "1000": "TRAQ_1000"
};


/**
 * Allowed values for the <code>videoViewability</code> property.
 * @enum {String}
 * @readonly
 */
IntegralAdScience['VideoViewabilityEnum'] = {

    /**
     * value: "VIDEO_VIEWABILITY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "VIDEO_VIEWABILITY_UNSPECIFIED",

    /**
     * value: "VIDEO_VIEWABILITY_40"
     * @const
     */
    "40": "VIDEO_VIEWABILITY_40",

    /**
     * value: "VIDEO_VIEWABILITY_50"
     * @const
     */
    "50": "VIDEO_VIEWABILITY_50",

    /**
     * value: "VIDEO_VIEWABILITY_60"
     * @const
     */
    "60": "VIDEO_VIEWABILITY_60",

    /**
     * value: "VIDEO_VIEWABILITY_70"
     * @const
     */
    "70": "VIDEO_VIEWABILITY_70"
};



export default IntegralAdScience;

