/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlgorithmRulesRuleCondition from './AlgorithmRulesRuleCondition';
import AlgorithmRulesSignalValue from './AlgorithmRulesSignalValue';

/**
 * The AlgorithmRulesRule model module.
 * @module model/AlgorithmRulesRule
 * @version v3
 */
class AlgorithmRulesRule {
    /**
     * Constructs a new <code>AlgorithmRulesRule</code>.
     * Set of conditions. The return value of the rule is either: * The return value for single met condition or * The defined default return value if no conditions are met.
     * @alias module:model/AlgorithmRulesRule
     */
    constructor() { 
        
        AlgorithmRulesRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AlgorithmRulesRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlgorithmRulesRule} obj Optional instance to populate.
     * @return {module:model/AlgorithmRulesRule} The populated <code>AlgorithmRulesRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlgorithmRulesRule();

            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [AlgorithmRulesRuleCondition]);
            }
            if (data.hasOwnProperty('defaultReturnValue')) {
                obj['defaultReturnValue'] = AlgorithmRulesSignalValue.constructFromObject(data['defaultReturnValue']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlgorithmRulesRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlgorithmRulesRule</code>.
     */
    static validateJSON(data) {
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                AlgorithmRulesRuleCondition.validateJSON(item);
            };
        }
        // validate the optional field `defaultReturnValue`
        if (data['defaultReturnValue']) { // data not null
          AlgorithmRulesSignalValue.validateJSON(data['defaultReturnValue']);
        }

        return true;
    }


}



/**
 * List of conditions in this rule. The criteria among conditions should be mutually exclusive.
 * @member {Array.<module:model/AlgorithmRulesRuleCondition>} conditions
 */
AlgorithmRulesRule.prototype['conditions'] = undefined;

/**
 * @member {module:model/AlgorithmRulesSignalValue} defaultReturnValue
 */
AlgorithmRulesRule.prototype['defaultReturnValue'] = undefined;






export default AlgorithmRulesRule;

