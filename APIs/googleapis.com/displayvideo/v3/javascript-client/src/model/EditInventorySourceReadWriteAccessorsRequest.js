/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate from './EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate';

/**
 * The EditInventorySourceReadWriteAccessorsRequest model module.
 * @module model/EditInventorySourceReadWriteAccessorsRequest
 * @version v3
 */
class EditInventorySourceReadWriteAccessorsRequest {
    /**
     * Constructs a new <code>EditInventorySourceReadWriteAccessorsRequest</code>.
     * Request message for InventorySourceService.EditInventorySourceReadWriteAccessors.
     * @alias module:model/EditInventorySourceReadWriteAccessorsRequest
     */
    constructor() { 
        
        EditInventorySourceReadWriteAccessorsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EditInventorySourceReadWriteAccessorsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EditInventorySourceReadWriteAccessorsRequest} obj Optional instance to populate.
     * @return {module:model/EditInventorySourceReadWriteAccessorsRequest} The populated <code>EditInventorySourceReadWriteAccessorsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EditInventorySourceReadWriteAccessorsRequest();

            if (data.hasOwnProperty('advertisersUpdate')) {
                obj['advertisersUpdate'] = EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate.constructFromObject(data['advertisersUpdate']);
            }
            if (data.hasOwnProperty('assignPartner')) {
                obj['assignPartner'] = ApiClient.convertToType(data['assignPartner'], 'Boolean');
            }
            if (data.hasOwnProperty('partnerId')) {
                obj['partnerId'] = ApiClient.convertToType(data['partnerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EditInventorySourceReadWriteAccessorsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EditInventorySourceReadWriteAccessorsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `advertisersUpdate`
        if (data['advertisersUpdate']) { // data not null
          EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate.validateJSON(data['advertisersUpdate']);
        }
        // ensure the json data is a string
        if (data['partnerId'] && !(typeof data['partnerId'] === 'string' || data['partnerId'] instanceof String)) {
            throw new Error("Expected the field `partnerId` to be a primitive type in the JSON string but got " + data['partnerId']);
        }

        return true;
    }


}



/**
 * @member {module:model/EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate} advertisersUpdate
 */
EditInventorySourceReadWriteAccessorsRequest.prototype['advertisersUpdate'] = undefined;

/**
 * Set the partner context as read/write accessor of the inventory source. This will remove all other current read/write advertiser accessors.
 * @member {Boolean} assignPartner
 */
EditInventorySourceReadWriteAccessorsRequest.prototype['assignPartner'] = undefined;

/**
 * Required. The partner context by which the accessors change is being made.
 * @member {String} partnerId
 */
EditInventorySourceReadWriteAccessorsRequest.prototype['partnerId'] = undefined;






export default EditInventorySourceReadWriteAccessorsRequest;

