/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssignedTargetingOption from './AssignedTargetingOption';

/**
 * The LineItemAssignedTargetingOption model module.
 * @module model/LineItemAssignedTargetingOption
 * @version v3
 */
class LineItemAssignedTargetingOption {
    /**
     * Constructs a new <code>LineItemAssignedTargetingOption</code>.
     * Wrapper object associating an assigned_targeting_option resource and the line item it is assigned to.
     * @alias module:model/LineItemAssignedTargetingOption
     */
    constructor() { 
        
        LineItemAssignedTargetingOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineItemAssignedTargetingOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineItemAssignedTargetingOption} obj Optional instance to populate.
     * @return {module:model/LineItemAssignedTargetingOption} The populated <code>LineItemAssignedTargetingOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItemAssignedTargetingOption();

            if (data.hasOwnProperty('assignedTargetingOption')) {
                obj['assignedTargetingOption'] = AssignedTargetingOption.constructFromObject(data['assignedTargetingOption']);
            }
            if (data.hasOwnProperty('lineItemId')) {
                obj['lineItemId'] = ApiClient.convertToType(data['lineItemId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineItemAssignedTargetingOption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineItemAssignedTargetingOption</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assignedTargetingOption`
        if (data['assignedTargetingOption']) { // data not null
          AssignedTargetingOption.validateJSON(data['assignedTargetingOption']);
        }
        // ensure the json data is a string
        if (data['lineItemId'] && !(typeof data['lineItemId'] === 'string' || data['lineItemId'] instanceof String)) {
            throw new Error("Expected the field `lineItemId` to be a primitive type in the JSON string but got " + data['lineItemId']);
        }

        return true;
    }


}



/**
 * @member {module:model/AssignedTargetingOption} assignedTargetingOption
 */
LineItemAssignedTargetingOption.prototype['assignedTargetingOption'] = undefined;

/**
 * The ID of the line item the assigned targeting option is assigned to.
 * @member {String} lineItemId
 */
LineItemAssignedTargetingOption.prototype['lineItemId'] = undefined;






export default LineItemAssignedTargetingOption;

