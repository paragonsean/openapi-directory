/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MaximizeSpendBidStrategy model module.
 * @module model/MaximizeSpendBidStrategy
 * @version v3
 */
class MaximizeSpendBidStrategy {
    /**
     * Constructs a new <code>MaximizeSpendBidStrategy</code>.
     * A strategy that automatically adjusts the bid to optimize a specified performance goal while spending the full budget.
     * @alias module:model/MaximizeSpendBidStrategy
     */
    constructor() { 
        
        MaximizeSpendBidStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaximizeSpendBidStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaximizeSpendBidStrategy} obj Optional instance to populate.
     * @return {module:model/MaximizeSpendBidStrategy} The populated <code>MaximizeSpendBidStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaximizeSpendBidStrategy();

            if (data.hasOwnProperty('customBiddingAlgorithmId')) {
                obj['customBiddingAlgorithmId'] = ApiClient.convertToType(data['customBiddingAlgorithmId'], 'String');
            }
            if (data.hasOwnProperty('maxAverageCpmBidAmountMicros')) {
                obj['maxAverageCpmBidAmountMicros'] = ApiClient.convertToType(data['maxAverageCpmBidAmountMicros'], 'String');
            }
            if (data.hasOwnProperty('performanceGoalType')) {
                obj['performanceGoalType'] = ApiClient.convertToType(data['performanceGoalType'], 'String');
            }
            if (data.hasOwnProperty('raiseBidForDeals')) {
                obj['raiseBidForDeals'] = ApiClient.convertToType(data['raiseBidForDeals'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaximizeSpendBidStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaximizeSpendBidStrategy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customBiddingAlgorithmId'] && !(typeof data['customBiddingAlgorithmId'] === 'string' || data['customBiddingAlgorithmId'] instanceof String)) {
            throw new Error("Expected the field `customBiddingAlgorithmId` to be a primitive type in the JSON string but got " + data['customBiddingAlgorithmId']);
        }
        // ensure the json data is a string
        if (data['maxAverageCpmBidAmountMicros'] && !(typeof data['maxAverageCpmBidAmountMicros'] === 'string' || data['maxAverageCpmBidAmountMicros'] instanceof String)) {
            throw new Error("Expected the field `maxAverageCpmBidAmountMicros` to be a primitive type in the JSON string but got " + data['maxAverageCpmBidAmountMicros']);
        }
        // ensure the json data is a string
        if (data['performanceGoalType'] && !(typeof data['performanceGoalType'] === 'string' || data['performanceGoalType'] instanceof String)) {
            throw new Error("Expected the field `performanceGoalType` to be a primitive type in the JSON string but got " + data['performanceGoalType']);
        }

        return true;
    }


}



/**
 * The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
 * @member {String} customBiddingAlgorithmId
 */
MaximizeSpendBidStrategy.prototype['customBiddingAlgorithmId'] = undefined;

/**
 * The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. For example, 1500000 represents 1.5 standard units of the currency.
 * @member {String} maxAverageCpmBidAmountMicros
 */
MaximizeSpendBidStrategy.prototype['maxAverageCpmBidAmountMicros'] = undefined;

/**
 * Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy.
 * @member {module:model/MaximizeSpendBidStrategy.PerformanceGoalTypeEnum} performanceGoalType
 */
MaximizeSpendBidStrategy.prototype['performanceGoalType'] = undefined;

/**
 * Whether the strategy takes deal floor prices into account.
 * @member {Boolean} raiseBidForDeals
 */
MaximizeSpendBidStrategy.prototype['raiseBidForDeals'] = undefined;





/**
 * Allowed values for the <code>performanceGoalType</code> property.
 * @enum {String}
 * @readonly
 */
MaximizeSpendBidStrategy['PerformanceGoalTypeEnum'] = {

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA"
     * @const
     */
    "CPA": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC"
     * @const
     */
    "CPC": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM"
     * @const
     */
    "VIEWABLE_CPM": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO"
     * @const
     */
    "CUSTOM_ALGO": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA"
     * @const
     */
    "CIVA": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN"
     * @const
     */
    "IVO_TEN": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
     * @const
     */
    "AV_VIEWED": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
};



export default MaximizeSpendBidStrategy;

