/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublisherReviewStatus model module.
 * @module model/PublisherReviewStatus
 * @version v3
 */
class PublisherReviewStatus {
    /**
     * Constructs a new <code>PublisherReviewStatus</code>.
     * Publisher review status for the creative.
     * @alias module:model/PublisherReviewStatus
     */
    constructor() { 
        
        PublisherReviewStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublisherReviewStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublisherReviewStatus} obj Optional instance to populate.
     * @return {module:model/PublisherReviewStatus} The populated <code>PublisherReviewStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublisherReviewStatus();

            if (data.hasOwnProperty('publisherName')) {
                obj['publisherName'] = ApiClient.convertToType(data['publisherName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublisherReviewStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublisherReviewStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['publisherName'] && !(typeof data['publisherName'] === 'string' || data['publisherName'] instanceof String)) {
            throw new Error("Expected the field `publisherName` to be a primitive type in the JSON string but got " + data['publisherName']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The publisher reviewing the creative.
 * @member {String} publisherName
 */
PublisherReviewStatus.prototype['publisherName'] = undefined;

/**
 * Status of the publisher review.
 * @member {module:model/PublisherReviewStatus.StatusEnum} status
 */
PublisherReviewStatus.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
PublisherReviewStatus['StatusEnum'] = {

    /**
     * value: "REVIEW_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "REVIEW_STATUS_UNSPECIFIED",

    /**
     * value: "REVIEW_STATUS_APPROVED"
     * @const
     */
    "APPROVED": "REVIEW_STATUS_APPROVED",

    /**
     * value: "REVIEW_STATUS_REJECTED"
     * @const
     */
    "REJECTED": "REVIEW_STATUS_REJECTED",

    /**
     * value: "REVIEW_STATUS_PENDING"
     * @const
     */
    "PENDING": "REVIEW_STATUS_PENDING"
};



export default PublisherReviewStatus;

