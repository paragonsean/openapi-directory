/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DayAndTimeAssignedTargetingOptionDetails model module.
 * @module model/DayAndTimeAssignedTargetingOptionDetails
 * @version v3
 */
class DayAndTimeAssignedTargetingOptionDetails {
    /**
     * Constructs a new <code>DayAndTimeAssignedTargetingOptionDetails</code>.
     * Representation of a segment of time defined on a specific day of the week and with a start and end time. The time represented by &#x60;start_hour&#x60; must be before the time represented by &#x60;end_hour&#x60;.
     * @alias module:model/DayAndTimeAssignedTargetingOptionDetails
     */
    constructor() { 
        
        DayAndTimeAssignedTargetingOptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DayAndTimeAssignedTargetingOptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DayAndTimeAssignedTargetingOptionDetails} obj Optional instance to populate.
     * @return {module:model/DayAndTimeAssignedTargetingOptionDetails} The populated <code>DayAndTimeAssignedTargetingOptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DayAndTimeAssignedTargetingOptionDetails();

            if (data.hasOwnProperty('dayOfWeek')) {
                obj['dayOfWeek'] = ApiClient.convertToType(data['dayOfWeek'], 'String');
            }
            if (data.hasOwnProperty('endHour')) {
                obj['endHour'] = ApiClient.convertToType(data['endHour'], 'Number');
            }
            if (data.hasOwnProperty('startHour')) {
                obj['startHour'] = ApiClient.convertToType(data['startHour'], 'Number');
            }
            if (data.hasOwnProperty('timeZoneResolution')) {
                obj['timeZoneResolution'] = ApiClient.convertToType(data['timeZoneResolution'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DayAndTimeAssignedTargetingOptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DayAndTimeAssignedTargetingOptionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dayOfWeek'] && !(typeof data['dayOfWeek'] === 'string' || data['dayOfWeek'] instanceof String)) {
            throw new Error("Expected the field `dayOfWeek` to be a primitive type in the JSON string but got " + data['dayOfWeek']);
        }
        // ensure the json data is a string
        if (data['timeZoneResolution'] && !(typeof data['timeZoneResolution'] === 'string' || data['timeZoneResolution'] instanceof String)) {
            throw new Error("Expected the field `timeZoneResolution` to be a primitive type in the JSON string but got " + data['timeZoneResolution']);
        }

        return true;
    }


}



/**
 * Required. The day of the week for this day and time targeting setting.
 * @member {module:model/DayAndTimeAssignedTargetingOptionDetails.DayOfWeekEnum} dayOfWeek
 */
DayAndTimeAssignedTargetingOptionDetails.prototype['dayOfWeek'] = undefined;

/**
 * Required. The end hour for day and time targeting. Must be between 1 (1 hour after start of day) and 24 (end of day).
 * @member {Number} endHour
 */
DayAndTimeAssignedTargetingOptionDetails.prototype['endHour'] = undefined;

/**
 * Required. The start hour for day and time targeting. Must be between 0 (start of day) and 23 (1 hour before end of day).
 * @member {Number} startHour
 */
DayAndTimeAssignedTargetingOptionDetails.prototype['startHour'] = undefined;

/**
 * Required. The mechanism used to determine which timezone to use for this day and time targeting setting.
 * @member {module:model/DayAndTimeAssignedTargetingOptionDetails.TimeZoneResolutionEnum} timeZoneResolution
 */
DayAndTimeAssignedTargetingOptionDetails.prototype['timeZoneResolution'] = undefined;





/**
 * Allowed values for the <code>dayOfWeek</code> property.
 * @enum {String}
 * @readonly
 */
DayAndTimeAssignedTargetingOptionDetails['DayOfWeekEnum'] = {

    /**
     * value: "DAY_OF_WEEK_UNSPECIFIED"
     * @const
     */
    "DAY_OF_WEEK_UNSPECIFIED": "DAY_OF_WEEK_UNSPECIFIED",

    /**
     * value: "MONDAY"
     * @const
     */
    "MONDAY": "MONDAY",

    /**
     * value: "TUESDAY"
     * @const
     */
    "TUESDAY": "TUESDAY",

    /**
     * value: "WEDNESDAY"
     * @const
     */
    "WEDNESDAY": "WEDNESDAY",

    /**
     * value: "THURSDAY"
     * @const
     */
    "THURSDAY": "THURSDAY",

    /**
     * value: "FRIDAY"
     * @const
     */
    "FRIDAY": "FRIDAY",

    /**
     * value: "SATURDAY"
     * @const
     */
    "SATURDAY": "SATURDAY",

    /**
     * value: "SUNDAY"
     * @const
     */
    "SUNDAY": "SUNDAY"
};


/**
 * Allowed values for the <code>timeZoneResolution</code> property.
 * @enum {String}
 * @readonly
 */
DayAndTimeAssignedTargetingOptionDetails['TimeZoneResolutionEnum'] = {

    /**
     * value: "TIME_ZONE_RESOLUTION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "TIME_ZONE_RESOLUTION_UNSPECIFIED",

    /**
     * value: "TIME_ZONE_RESOLUTION_END_USER"
     * @const
     */
    "END_USER": "TIME_ZONE_RESOLUTION_END_USER",

    /**
     * value: "TIME_ZONE_RESOLUTION_ADVERTISER"
     * @const
     */
    "ADVERTISER": "TIME_ZONE_RESOLUTION_ADVERTISER"
};



export default DayAndTimeAssignedTargetingOptionDetails;

