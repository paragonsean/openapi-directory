/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Consent from './Consent';
import ContactInfo from './ContactInfo';

/**
 * The ContactInfoList model module.
 * @module model/ContactInfoList
 * @version v3
 */
class ContactInfoList {
    /**
     * Constructs a new <code>ContactInfoList</code>.
     * Wrapper message for a list of contact information defining Customer Match audience members.
     * @alias module:model/ContactInfoList
     */
    constructor() { 
        
        ContactInfoList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContactInfoList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactInfoList} obj Optional instance to populate.
     * @return {module:model/ContactInfoList} The populated <code>ContactInfoList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactInfoList();

            if (data.hasOwnProperty('consent')) {
                obj['consent'] = Consent.constructFromObject(data['consent']);
            }
            if (data.hasOwnProperty('contactInfos')) {
                obj['contactInfos'] = ApiClient.convertToType(data['contactInfos'], [ContactInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContactInfoList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContactInfoList</code>.
     */
    static validateJSON(data) {
        // validate the optional field `consent`
        if (data['consent']) { // data not null
          Consent.validateJSON(data['consent']);
        }
        if (data['contactInfos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['contactInfos'])) {
                throw new Error("Expected the field `contactInfos` to be an array in the JSON data but got " + data['contactInfos']);
            }
            // validate the optional field `contactInfos` (array)
            for (const item of data['contactInfos']) {
                ContactInfo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/Consent} consent
 */
ContactInfoList.prototype['consent'] = undefined;

/**
 * A list of ContactInfo objects defining Customer Match audience members. The size of members after splitting the contact_infos mustn't be greater than 500,000.
 * @member {Array.<module:model/ContactInfo>} contactInfos
 */
ContactInfoList.prototype['contactInfos'] = undefined;






export default ContactInfoList;

