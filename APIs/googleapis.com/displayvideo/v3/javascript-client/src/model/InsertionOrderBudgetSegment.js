/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateRange from './DateRange';

/**
 * The InsertionOrderBudgetSegment model module.
 * @module model/InsertionOrderBudgetSegment
 * @version v3
 */
class InsertionOrderBudgetSegment {
    /**
     * Constructs a new <code>InsertionOrderBudgetSegment</code>.
     * Settings that control the budget of a single budget segment.
     * @alias module:model/InsertionOrderBudgetSegment
     */
    constructor() { 
        
        InsertionOrderBudgetSegment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsertionOrderBudgetSegment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsertionOrderBudgetSegment} obj Optional instance to populate.
     * @return {module:model/InsertionOrderBudgetSegment} The populated <code>InsertionOrderBudgetSegment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertionOrderBudgetSegment();

            if (data.hasOwnProperty('budgetAmountMicros')) {
                obj['budgetAmountMicros'] = ApiClient.convertToType(data['budgetAmountMicros'], 'String');
            }
            if (data.hasOwnProperty('campaignBudgetId')) {
                obj['campaignBudgetId'] = ApiClient.convertToType(data['campaignBudgetId'], 'String');
            }
            if (data.hasOwnProperty('dateRange')) {
                obj['dateRange'] = DateRange.constructFromObject(data['dateRange']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsertionOrderBudgetSegment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsertionOrderBudgetSegment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['budgetAmountMicros'] && !(typeof data['budgetAmountMicros'] === 'string' || data['budgetAmountMicros'] instanceof String)) {
            throw new Error("Expected the field `budgetAmountMicros` to be a primitive type in the JSON string but got " + data['budgetAmountMicros']);
        }
        // ensure the json data is a string
        if (data['campaignBudgetId'] && !(typeof data['campaignBudgetId'] === 'string' || data['campaignBudgetId'] instanceof String)) {
            throw new Error("Expected the field `campaignBudgetId` to be a primitive type in the JSON string but got " + data['campaignBudgetId']);
        }
        // validate the optional field `dateRange`
        if (data['dateRange']) { // data not null
          DateRange.validateJSON(data['dateRange']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }


}



/**
 * Required. The budget amount the insertion order will spend for the given date_range. The amount is in micros. Must be greater than 0. For example, 500000000 represents 500 standard units of the currency.
 * @member {String} budgetAmountMicros
 */
InsertionOrderBudgetSegment.prototype['budgetAmountMicros'] = undefined;

/**
 * The budget_id of the campaign budget that this insertion order budget segment is a part of.
 * @member {String} campaignBudgetId
 */
InsertionOrderBudgetSegment.prototype['campaignBudgetId'] = undefined;

/**
 * @member {module:model/DateRange} dateRange
 */
InsertionOrderBudgetSegment.prototype['dateRange'] = undefined;

/**
 * The budget segment description. It can be used to enter Purchase Order information for each budget segment and have that information printed on the invoices. Must be UTF-8 encoded.
 * @member {String} description
 */
InsertionOrderBudgetSegment.prototype['description'] = undefined;






export default InsertionOrderBudgetSegment;

