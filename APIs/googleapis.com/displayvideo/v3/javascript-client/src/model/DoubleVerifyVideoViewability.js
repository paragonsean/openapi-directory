/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DoubleVerifyVideoViewability model module.
 * @module model/DoubleVerifyVideoViewability
 * @version v3
 */
class DoubleVerifyVideoViewability {
    /**
     * Constructs a new <code>DoubleVerifyVideoViewability</code>.
     * Details of DoubleVerify video viewability settings.
     * @alias module:model/DoubleVerifyVideoViewability
     */
    constructor() { 
        
        DoubleVerifyVideoViewability.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DoubleVerifyVideoViewability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DoubleVerifyVideoViewability} obj Optional instance to populate.
     * @return {module:model/DoubleVerifyVideoViewability} The populated <code>DoubleVerifyVideoViewability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DoubleVerifyVideoViewability();

            if (data.hasOwnProperty('playerImpressionRate')) {
                obj['playerImpressionRate'] = ApiClient.convertToType(data['playerImpressionRate'], 'String');
            }
            if (data.hasOwnProperty('videoIab')) {
                obj['videoIab'] = ApiClient.convertToType(data['videoIab'], 'String');
            }
            if (data.hasOwnProperty('videoViewableRate')) {
                obj['videoViewableRate'] = ApiClient.convertToType(data['videoViewableRate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DoubleVerifyVideoViewability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DoubleVerifyVideoViewability</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['playerImpressionRate'] && !(typeof data['playerImpressionRate'] === 'string' || data['playerImpressionRate'] instanceof String)) {
            throw new Error("Expected the field `playerImpressionRate` to be a primitive type in the JSON string but got " + data['playerImpressionRate']);
        }
        // ensure the json data is a string
        if (data['videoIab'] && !(typeof data['videoIab'] === 'string' || data['videoIab'] instanceof String)) {
            throw new Error("Expected the field `videoIab` to be a primitive type in the JSON string but got " + data['videoIab']);
        }
        // ensure the json data is a string
        if (data['videoViewableRate'] && !(typeof data['videoViewableRate'] === 'string' || data['videoViewableRate'] instanceof String)) {
            throw new Error("Expected the field `videoViewableRate` to be a primitive type in the JSON string but got " + data['videoViewableRate']);
        }

        return true;
    }


}



/**
 * Target inventory to maximize impressions with 400x300 or greater player size.
 * @member {module:model/DoubleVerifyVideoViewability.PlayerImpressionRateEnum} playerImpressionRate
 */
DoubleVerifyVideoViewability.prototype['playerImpressionRate'] = undefined;

/**
 * Target web inventory to maximize IAB viewable rate.
 * @member {module:model/DoubleVerifyVideoViewability.VideoIabEnum} videoIab
 */
DoubleVerifyVideoViewability.prototype['videoIab'] = undefined;

/**
 * Target web inventory to maximize fully viewable rate.
 * @member {module:model/DoubleVerifyVideoViewability.VideoViewableRateEnum} videoViewableRate
 */
DoubleVerifyVideoViewability.prototype['videoViewableRate'] = undefined;





/**
 * Allowed values for the <code>playerImpressionRate</code> property.
 * @enum {String}
 * @readonly
 */
DoubleVerifyVideoViewability['PlayerImpressionRateEnum'] = {

    /**
     * value: "PLAYER_SIZE_400X300_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PLAYER_SIZE_400X300_UNSPECIFIED",

    /**
     * value: "PLAYER_SIZE_400X300_95"
     * @const
     */
    "95": "PLAYER_SIZE_400X300_95",

    /**
     * value: "PLAYER_SIZE_400X300_70"
     * @const
     */
    "70": "PLAYER_SIZE_400X300_70",

    /**
     * value: "PLAYER_SIZE_400X300_25"
     * @const
     */
    "25": "PLAYER_SIZE_400X300_25",

    /**
     * value: "PLAYER_SIZE_400X300_5"
     * @const
     */
    "5": "PLAYER_SIZE_400X300_5"
};


/**
 * Allowed values for the <code>videoIab</code> property.
 * @enum {String}
 * @readonly
 */
DoubleVerifyVideoViewability['VideoIabEnum'] = {

    /**
     * value: "VIDEO_IAB_UNSPECIFIED"
     * @const
     */
    "VIDEO_IAB_UNSPECIFIED": "VIDEO_IAB_UNSPECIFIED",

    /**
     * value: "IAB_VIEWABILITY_80_PERCENT_HIGHER"
     * @const
     */
    "IAB_VIEWABILITY_80_PERCENT_HIGHER": "IAB_VIEWABILITY_80_PERCENT_HIGHER",

    /**
     * value: "IAB_VIEWABILITY_75_PERCENT_HIGHER"
     * @const
     */
    "IAB_VIEWABILITY_75_PERCENT_HIGHER": "IAB_VIEWABILITY_75_PERCENT_HIGHER",

    /**
     * value: "IAB_VIEWABILITY_70_PERCENT_HIGHER"
     * @const
     */
    "IAB_VIEWABILITY_70_PERCENT_HIGHER": "IAB_VIEWABILITY_70_PERCENT_HIGHER",

    /**
     * value: "IAB_VIEWABILITY_65_PERCENT_HIHGER"
     * @const
     */
    "IAB_VIEWABILITY_65_PERCENT_HIHGER": "IAB_VIEWABILITY_65_PERCENT_HIHGER",

    /**
     * value: "IAB_VIEWABILITY_60_PERCENT_HIGHER"
     * @const
     */
    "IAB_VIEWABILITY_60_PERCENT_HIGHER": "IAB_VIEWABILITY_60_PERCENT_HIGHER",

    /**
     * value: "IAB_VIEWABILITY_55_PERCENT_HIHGER"
     * @const
     */
    "IAB_VIEWABILITY_55_PERCENT_HIHGER": "IAB_VIEWABILITY_55_PERCENT_HIHGER",

    /**
     * value: "IAB_VIEWABILITY_50_PERCENT_HIGHER"
     * @const
     */
    "IAB_VIEWABILITY_50_PERCENT_HIGHER": "IAB_VIEWABILITY_50_PERCENT_HIGHER",

    /**
     * value: "IAB_VIEWABILITY_40_PERCENT_HIHGER"
     * @const
     */
    "IAB_VIEWABILITY_40_PERCENT_HIHGER": "IAB_VIEWABILITY_40_PERCENT_HIHGER",

    /**
     * value: "IAB_VIEWABILITY_30_PERCENT_HIHGER"
     * @const
     */
    "IAB_VIEWABILITY_30_PERCENT_HIHGER": "IAB_VIEWABILITY_30_PERCENT_HIHGER"
};


/**
 * Allowed values for the <code>videoViewableRate</code> property.
 * @enum {String}
 * @readonly
 */
DoubleVerifyVideoViewability['VideoViewableRateEnum'] = {

    /**
     * value: "VIDEO_VIEWABLE_RATE_UNSPECIFIED"
     * @const
     */
    "VIDEO_VIEWABLE_RATE_UNSPECIFIED": "VIDEO_VIEWABLE_RATE_UNSPECIFIED",

    /**
     * value: "VIEWED_PERFORMANCE_40_PERCENT_HIGHER"
     * @const
     */
    "VIEWED_PERFORMANCE_40_PERCENT_HIGHER": "VIEWED_PERFORMANCE_40_PERCENT_HIGHER",

    /**
     * value: "VIEWED_PERFORMANCE_35_PERCENT_HIGHER"
     * @const
     */
    "VIEWED_PERFORMANCE_35_PERCENT_HIGHER": "VIEWED_PERFORMANCE_35_PERCENT_HIGHER",

    /**
     * value: "VIEWED_PERFORMANCE_30_PERCENT_HIGHER"
     * @const
     */
    "VIEWED_PERFORMANCE_30_PERCENT_HIGHER": "VIEWED_PERFORMANCE_30_PERCENT_HIGHER",

    /**
     * value: "VIEWED_PERFORMANCE_25_PERCENT_HIGHER"
     * @const
     */
    "VIEWED_PERFORMANCE_25_PERCENT_HIGHER": "VIEWED_PERFORMANCE_25_PERCENT_HIGHER",

    /**
     * value: "VIEWED_PERFORMANCE_20_PERCENT_HIGHER"
     * @const
     */
    "VIEWED_PERFORMANCE_20_PERCENT_HIGHER": "VIEWED_PERFORMANCE_20_PERCENT_HIGHER",

    /**
     * value: "VIEWED_PERFORMANCE_10_PERCENT_HIGHER"
     * @const
     */
    "VIEWED_PERFORMANCE_10_PERCENT_HIGHER": "VIEWED_PERFORMANCE_10_PERCENT_HIGHER"
};



export default DoubleVerifyVideoViewability;

