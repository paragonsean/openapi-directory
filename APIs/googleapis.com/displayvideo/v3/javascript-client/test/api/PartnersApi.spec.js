/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DisplayVideo360Api);
  }
}(this, function(expect, DisplayVideo360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DisplayVideo360Api.PartnersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PartnersApi', function() {
    describe('displayvideoPartnersChannelsCreate', function() {
      it('should call displayvideoPartnersChannelsCreate successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersChannelsCreate
        //instance.displayvideoPartnersChannelsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersChannelsList', function() {
      it('should call displayvideoPartnersChannelsList successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersChannelsList
        //instance.displayvideoPartnersChannelsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersChannelsPatch', function() {
      it('should call displayvideoPartnersChannelsPatch successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersChannelsPatch
        //instance.displayvideoPartnersChannelsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersChannelsSitesBulkEdit', function() {
      it('should call displayvideoPartnersChannelsSitesBulkEdit successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersChannelsSitesBulkEdit
        //instance.displayvideoPartnersChannelsSitesBulkEdit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersChannelsSitesDelete', function() {
      it('should call displayvideoPartnersChannelsSitesDelete successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersChannelsSitesDelete
        //instance.displayvideoPartnersChannelsSitesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersChannelsSitesList', function() {
      it('should call displayvideoPartnersChannelsSitesList successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersChannelsSitesList
        //instance.displayvideoPartnersChannelsSitesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersChannelsSitesReplace', function() {
      it('should call displayvideoPartnersChannelsSitesReplace successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersChannelsSitesReplace
        //instance.displayvideoPartnersChannelsSitesReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersEditAssignedTargetingOptions', function() {
      it('should call displayvideoPartnersEditAssignedTargetingOptions successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersEditAssignedTargetingOptions
        //instance.displayvideoPartnersEditAssignedTargetingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersGet', function() {
      it('should call displayvideoPartnersGet successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersGet
        //instance.displayvideoPartnersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersList', function() {
      it('should call displayvideoPartnersList successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersList
        //instance.displayvideoPartnersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersTargetingTypesAssignedTargetingOptionsCreate', function() {
      it('should call displayvideoPartnersTargetingTypesAssignedTargetingOptionsCreate successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersTargetingTypesAssignedTargetingOptionsCreate
        //instance.displayvideoPartnersTargetingTypesAssignedTargetingOptionsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersTargetingTypesAssignedTargetingOptionsDelete', function() {
      it('should call displayvideoPartnersTargetingTypesAssignedTargetingOptionsDelete successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersTargetingTypesAssignedTargetingOptionsDelete
        //instance.displayvideoPartnersTargetingTypesAssignedTargetingOptionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersTargetingTypesAssignedTargetingOptionsGet', function() {
      it('should call displayvideoPartnersTargetingTypesAssignedTargetingOptionsGet successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersTargetingTypesAssignedTargetingOptionsGet
        //instance.displayvideoPartnersTargetingTypesAssignedTargetingOptionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('displayvideoPartnersTargetingTypesAssignedTargetingOptionsList', function() {
      it('should call displayvideoPartnersTargetingTypesAssignedTargetingOptionsList successfully', function(done) {
        //uncomment below and update the code to test displayvideoPartnersTargetingTypesAssignedTargetingOptionsList
        //instance.displayvideoPartnersTargetingTypesAssignedTargetingOptionsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
