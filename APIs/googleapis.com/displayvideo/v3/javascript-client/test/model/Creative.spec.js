/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DisplayVideo360Api);
  }
}(this, function(expect, DisplayVideo360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DisplayVideo360Api.Creative();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Creative', function() {
    it('should create an instance of Creative', function() {
      // uncomment below and update the code to test Creative
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be.a(DisplayVideo360Api.Creative);
    });

    it('should have the property additionalDimensions (base name: "additionalDimensions")', function() {
      // uncomment below and update the code to test the property additionalDimensions
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property advertiserId (base name: "advertiserId")', function() {
      // uncomment below and update the code to test the property advertiserId
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property appendedTag (base name: "appendedTag")', function() {
      // uncomment below and update the code to test the property appendedTag
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property assets (base name: "assets")', function() {
      // uncomment below and update the code to test the property assets
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property cmPlacementId (base name: "cmPlacementId")', function() {
      // uncomment below and update the code to test the property cmPlacementId
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property cmTrackingAd (base name: "cmTrackingAd")', function() {
      // uncomment below and update the code to test the property cmTrackingAd
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property companionCreativeIds (base name: "companionCreativeIds")', function() {
      // uncomment below and update the code to test the property companionCreativeIds
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property counterEvents (base name: "counterEvents")', function() {
      // uncomment below and update the code to test the property counterEvents
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property creativeAttributes (base name: "creativeAttributes")', function() {
      // uncomment below and update the code to test the property creativeAttributes
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property creativeId (base name: "creativeId")', function() {
      // uncomment below and update the code to test the property creativeId
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property creativeType (base name: "creativeType")', function() {
      // uncomment below and update the code to test the property creativeType
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property dimensions (base name: "dimensions")', function() {
      // uncomment below and update the code to test the property dimensions
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property dynamic (base name: "dynamic")', function() {
      // uncomment below and update the code to test the property dynamic
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property entityStatus (base name: "entityStatus")', function() {
      // uncomment below and update the code to test the property entityStatus
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property exitEvents (base name: "exitEvents")', function() {
      // uncomment below and update the code to test the property exitEvents
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property expandOnHover (base name: "expandOnHover")', function() {
      // uncomment below and update the code to test the property expandOnHover
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property expandingDirection (base name: "expandingDirection")', function() {
      // uncomment below and update the code to test the property expandingDirection
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property hostingSource (base name: "hostingSource")', function() {
      // uncomment below and update the code to test the property hostingSource
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property html5Video (base name: "html5Video")', function() {
      // uncomment below and update the code to test the property html5Video
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property iasCampaignMonitoring (base name: "iasCampaignMonitoring")', function() {
      // uncomment below and update the code to test the property iasCampaignMonitoring
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property integrationCode (base name: "integrationCode")', function() {
      // uncomment below and update the code to test the property integrationCode
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property jsTrackerUrl (base name: "jsTrackerUrl")', function() {
      // uncomment below and update the code to test the property jsTrackerUrl
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property lineItemIds (base name: "lineItemIds")', function() {
      // uncomment below and update the code to test the property lineItemIds
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property mediaDuration (base name: "mediaDuration")', function() {
      // uncomment below and update the code to test the property mediaDuration
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property mp3Audio (base name: "mp3Audio")', function() {
      // uncomment below and update the code to test the property mp3Audio
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property obaIcon (base name: "obaIcon")', function() {
      // uncomment below and update the code to test the property obaIcon
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property oggAudio (base name: "oggAudio")', function() {
      // uncomment below and update the code to test the property oggAudio
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property progressOffset (base name: "progressOffset")', function() {
      // uncomment below and update the code to test the property progressOffset
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property requireHtml5 (base name: "requireHtml5")', function() {
      // uncomment below and update the code to test the property requireHtml5
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property requireMraid (base name: "requireMraid")', function() {
      // uncomment below and update the code to test the property requireMraid
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property requirePingForAttribution (base name: "requirePingForAttribution")', function() {
      // uncomment below and update the code to test the property requirePingForAttribution
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property reviewStatus (base name: "reviewStatus")', function() {
      // uncomment below and update the code to test the property reviewStatus
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property skipOffset (base name: "skipOffset")', function() {
      // uncomment below and update the code to test the property skipOffset
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property skippable (base name: "skippable")', function() {
      // uncomment below and update the code to test the property skippable
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyTag (base name: "thirdPartyTag")', function() {
      // uncomment below and update the code to test the property thirdPartyTag
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartyUrls (base name: "thirdPartyUrls")', function() {
      // uncomment below and update the code to test the property thirdPartyUrls
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property timerEvents (base name: "timerEvents")', function() {
      // uncomment below and update the code to test the property timerEvents
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property trackerUrls (base name: "trackerUrls")', function() {
      // uncomment below and update the code to test the property trackerUrls
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property transcodes (base name: "transcodes")', function() {
      // uncomment below and update the code to test the property transcodes
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property universalAdId (base name: "universalAdId")', function() {
      // uncomment below and update the code to test the property universalAdId
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property vastTagUrl (base name: "vastTagUrl")', function() {
      // uncomment below and update the code to test the property vastTagUrl
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

    it('should have the property vpaid (base name: "vpaid")', function() {
      // uncomment below and update the code to test the property vpaid
      //var instance = new DisplayVideo360Api.Creative();
      //expect(instance).to.be();
    });

  });

}));
