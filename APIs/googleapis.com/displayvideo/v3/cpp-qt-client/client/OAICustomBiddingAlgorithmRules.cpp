/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomBiddingAlgorithmRules.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomBiddingAlgorithmRules::OAICustomBiddingAlgorithmRules(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomBiddingAlgorithmRules::OAICustomBiddingAlgorithmRules() {
    this->initializeModel();
}

OAICustomBiddingAlgorithmRules::~OAICustomBiddingAlgorithmRules() {}

void OAICustomBiddingAlgorithmRules::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_custom_bidding_algorithm_id_isSet = false;
    m_custom_bidding_algorithm_id_isValid = false;

    m_custom_bidding_algorithm_rules_id_isSet = false;
    m_custom_bidding_algorithm_rules_id_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_rules_isSet = false;
    m_rules_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAICustomBiddingAlgorithmRules::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomBiddingAlgorithmRules::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_custom_bidding_algorithm_id_isValid = ::OpenAPI::fromJsonValue(m_custom_bidding_algorithm_id, json[QString("customBiddingAlgorithmId")]);
    m_custom_bidding_algorithm_id_isSet = !json[QString("customBiddingAlgorithmId")].isNull() && m_custom_bidding_algorithm_id_isValid;

    m_custom_bidding_algorithm_rules_id_isValid = ::OpenAPI::fromJsonValue(m_custom_bidding_algorithm_rules_id, json[QString("customBiddingAlgorithmRulesId")]);
    m_custom_bidding_algorithm_rules_id_isSet = !json[QString("customBiddingAlgorithmRulesId")].isNull() && m_custom_bidding_algorithm_rules_id_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("rules")]);
    m_rules_isSet = !json[QString("rules")].isNull() && m_rules_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAICustomBiddingAlgorithmRules::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomBiddingAlgorithmRules::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_custom_bidding_algorithm_id_isSet) {
        obj.insert(QString("customBiddingAlgorithmId"), ::OpenAPI::toJsonValue(m_custom_bidding_algorithm_id));
    }
    if (m_custom_bidding_algorithm_rules_id_isSet) {
        obj.insert(QString("customBiddingAlgorithmRulesId"), ::OpenAPI::toJsonValue(m_custom_bidding_algorithm_rules_id));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_rules.isSet()) {
        obj.insert(QString("rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

bool OAICustomBiddingAlgorithmRules::isActive() const {
    return m_active;
}
void OAICustomBiddingAlgorithmRules::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_active_Set() const{
    return m_active_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_active_Valid() const{
    return m_active_isValid;
}

QString OAICustomBiddingAlgorithmRules::getCreateTime() const {
    return m_create_time;
}
void OAICustomBiddingAlgorithmRules::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAICustomBiddingAlgorithmRules::getCustomBiddingAlgorithmId() const {
    return m_custom_bidding_algorithm_id;
}
void OAICustomBiddingAlgorithmRules::setCustomBiddingAlgorithmId(const QString &custom_bidding_algorithm_id) {
    m_custom_bidding_algorithm_id = custom_bidding_algorithm_id;
    m_custom_bidding_algorithm_id_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_custom_bidding_algorithm_id_Set() const{
    return m_custom_bidding_algorithm_id_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_custom_bidding_algorithm_id_Valid() const{
    return m_custom_bidding_algorithm_id_isValid;
}

QString OAICustomBiddingAlgorithmRules::getCustomBiddingAlgorithmRulesId() const {
    return m_custom_bidding_algorithm_rules_id;
}
void OAICustomBiddingAlgorithmRules::setCustomBiddingAlgorithmRulesId(const QString &custom_bidding_algorithm_rules_id) {
    m_custom_bidding_algorithm_rules_id = custom_bidding_algorithm_rules_id;
    m_custom_bidding_algorithm_rules_id_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_custom_bidding_algorithm_rules_id_Set() const{
    return m_custom_bidding_algorithm_rules_id_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_custom_bidding_algorithm_rules_id_Valid() const{
    return m_custom_bidding_algorithm_rules_id_isValid;
}

OAICustomBiddingAlgorithmRulesError OAICustomBiddingAlgorithmRules::getError() const {
    return m_error;
}
void OAICustomBiddingAlgorithmRules::setError(const OAICustomBiddingAlgorithmRulesError &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_error_Set() const{
    return m_error_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_error_Valid() const{
    return m_error_isValid;
}

QString OAICustomBiddingAlgorithmRules::getName() const {
    return m_name;
}
void OAICustomBiddingAlgorithmRules::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_name_Valid() const{
    return m_name_isValid;
}

OAICustomBiddingAlgorithmRulesRef OAICustomBiddingAlgorithmRules::getRules() const {
    return m_rules;
}
void OAICustomBiddingAlgorithmRules::setRules(const OAICustomBiddingAlgorithmRulesRef &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_rules_Valid() const{
    return m_rules_isValid;
}

QString OAICustomBiddingAlgorithmRules::getState() const {
    return m_state;
}
void OAICustomBiddingAlgorithmRules::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAICustomBiddingAlgorithmRules::is_state_Set() const{
    return m_state_isSet;
}

bool OAICustomBiddingAlgorithmRules::is_state_Valid() const{
    return m_state_isValid;
}

bool OAICustomBiddingAlgorithmRules::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_bidding_algorithm_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_bidding_algorithm_rules_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomBiddingAlgorithmRules::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
