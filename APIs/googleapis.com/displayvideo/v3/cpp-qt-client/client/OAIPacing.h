/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPacing.h
 *
 * Settings that control the rate at which a budget is spent.
 */

#ifndef OAIPacing_H
#define OAIPacing_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPacing : public OAIObject {
public:
    OAIPacing();
    OAIPacing(QString json);
    ~OAIPacing() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDailyMaxImpressions() const;
    void setDailyMaxImpressions(const QString &daily_max_impressions);
    bool is_daily_max_impressions_Set() const;
    bool is_daily_max_impressions_Valid() const;

    QString getDailyMaxMicros() const;
    void setDailyMaxMicros(const QString &daily_max_micros);
    bool is_daily_max_micros_Set() const;
    bool is_daily_max_micros_Valid() const;

    QString getPacingPeriod() const;
    void setPacingPeriod(const QString &pacing_period);
    bool is_pacing_period_Set() const;
    bool is_pacing_period_Valid() const;

    QString getPacingType() const;
    void setPacingType(const QString &pacing_type);
    bool is_pacing_type_Set() const;
    bool is_pacing_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_daily_max_impressions;
    bool m_daily_max_impressions_isSet;
    bool m_daily_max_impressions_isValid;

    QString m_daily_max_micros;
    bool m_daily_max_micros_isSet;
    bool m_daily_max_micros_isValid;

    QString m_pacing_period;
    bool m_pacing_period_isSet;
    bool m_pacing_period_isValid;

    QString m_pacing_type;
    bool m_pacing_type_isSet;
    bool m_pacing_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPacing)

#endif // OAIPacing_H
