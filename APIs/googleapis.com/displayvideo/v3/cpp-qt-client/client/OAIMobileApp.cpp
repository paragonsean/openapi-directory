/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMobileApp.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMobileApp::OAIMobileApp(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMobileApp::OAIMobileApp() {
    this->initializeModel();
}

OAIMobileApp::~OAIMobileApp() {}

void OAIMobileApp::initializeModel() {

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_platform_isSet = false;
    m_platform_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;
}

void OAIMobileApp::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMobileApp::fromJsonObject(QJsonObject json) {

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_platform_isValid = ::OpenAPI::fromJsonValue(m_platform, json[QString("platform")]);
    m_platform_isSet = !json[QString("platform")].isNull() && m_platform_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;
}

QString OAIMobileApp::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMobileApp::asJsonObject() const {
    QJsonObject obj;
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_platform_isSet) {
        obj.insert(QString("platform"), ::OpenAPI::toJsonValue(m_platform));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    return obj;
}

QString OAIMobileApp::getAppId() const {
    return m_app_id;
}
void OAIMobileApp::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIMobileApp::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIMobileApp::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAIMobileApp::getDisplayName() const {
    return m_display_name;
}
void OAIMobileApp::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIMobileApp::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIMobileApp::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIMobileApp::getPlatform() const {
    return m_platform;
}
void OAIMobileApp::setPlatform(const QString &platform) {
    m_platform = platform;
    m_platform_isSet = true;
}

bool OAIMobileApp::is_platform_Set() const{
    return m_platform_isSet;
}

bool OAIMobileApp::is_platform_Valid() const{
    return m_platform_isValid;
}

QString OAIMobileApp::getPublisher() const {
    return m_publisher;
}
void OAIMobileApp::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIMobileApp::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIMobileApp::is_publisher_Valid() const{
    return m_publisher_isValid;
}

bool OAIMobileApp::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMobileApp::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
