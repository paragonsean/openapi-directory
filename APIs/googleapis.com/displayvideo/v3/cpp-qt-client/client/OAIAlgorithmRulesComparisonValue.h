/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlgorithmRulesComparisonValue.h
 *
 * A value to compare the signal to.
 */

#ifndef OAIAlgorithmRulesComparisonValue_H
#define OAIAlgorithmRulesComparisonValue_H

#include <QJsonObject>

#include "OAIDayAndTime.h"
#include "OAIDimensions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensions;
class OAIDayAndTime;

class OAIAlgorithmRulesComparisonValue : public OAIObject {
public:
    OAIAlgorithmRulesComparisonValue();
    OAIAlgorithmRulesComparisonValue(QString json);
    ~OAIAlgorithmRulesComparisonValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBoolValue() const;
    void setBoolValue(const bool &bool_value);
    bool is_bool_value_Set() const;
    bool is_bool_value_Valid() const;

    OAIDimensions getCreativeDimensionValue() const;
    void setCreativeDimensionValue(const OAIDimensions &creative_dimension_value);
    bool is_creative_dimension_value_Set() const;
    bool is_creative_dimension_value_Valid() const;

    OAIDayAndTime getDayAndTimeValue() const;
    void setDayAndTimeValue(const OAIDayAndTime &day_and_time_value);
    bool is_day_and_time_value_Set() const;
    bool is_day_and_time_value_Valid() const;

    QString getDeviceTypeValue() const;
    void setDeviceTypeValue(const QString &device_type_value);
    bool is_device_type_value_Set() const;
    bool is_device_type_value_Valid() const;

    double getDoubleValue() const;
    void setDoubleValue(const double &double_value);
    bool is_double_value_Set() const;
    bool is_double_value_Valid() const;

    QString getEnvironmentValue() const;
    void setEnvironmentValue(const QString &environment_value);
    bool is_environment_value_Set() const;
    bool is_environment_value_Valid() const;

    QString getExchangeValue() const;
    void setExchangeValue(const QString &exchange_value);
    bool is_exchange_value_Set() const;
    bool is_exchange_value_Valid() const;

    QString getInt64Value() const;
    void setInt64Value(const QString &int64_value);
    bool is_int64_value_Set() const;
    bool is_int64_value_Valid() const;

    QString getOnScreenPositionValue() const;
    void setOnScreenPositionValue(const QString &on_screen_position_value);
    bool is_on_screen_position_value_Set() const;
    bool is_on_screen_position_value_Valid() const;

    QString getStringValue() const;
    void setStringValue(const QString &string_value);
    bool is_string_value_Set() const;
    bool is_string_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bool_value;
    bool m_bool_value_isSet;
    bool m_bool_value_isValid;

    OAIDimensions m_creative_dimension_value;
    bool m_creative_dimension_value_isSet;
    bool m_creative_dimension_value_isValid;

    OAIDayAndTime m_day_and_time_value;
    bool m_day_and_time_value_isSet;
    bool m_day_and_time_value_isValid;

    QString m_device_type_value;
    bool m_device_type_value_isSet;
    bool m_device_type_value_isValid;

    double m_double_value;
    bool m_double_value_isSet;
    bool m_double_value_isValid;

    QString m_environment_value;
    bool m_environment_value_isSet;
    bool m_environment_value_isValid;

    QString m_exchange_value;
    bool m_exchange_value_isSet;
    bool m_exchange_value_isValid;

    QString m_int64_value;
    bool m_int64_value_isSet;
    bool m_int64_value_isValid;

    QString m_on_screen_position_value;
    bool m_on_screen_position_value_isSet;
    bool m_on_screen_position_value_isValid;

    QString m_string_value;
    bool m_string_value_isSet;
    bool m_string_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlgorithmRulesComparisonValue)

#endif // OAIAlgorithmRulesComparisonValue_H
