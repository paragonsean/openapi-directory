/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlgorithmRulesSignal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlgorithmRulesSignal::OAIAlgorithmRulesSignal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlgorithmRulesSignal::OAIAlgorithmRulesSignal() {
    this->initializeModel();
}

OAIAlgorithmRulesSignal::~OAIAlgorithmRulesSignal() {}

void OAIAlgorithmRulesSignal::initializeModel() {

    m_impression_signal_isSet = false;
    m_impression_signal_isValid = false;
}

void OAIAlgorithmRulesSignal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlgorithmRulesSignal::fromJsonObject(QJsonObject json) {

    m_impression_signal_isValid = ::OpenAPI::fromJsonValue(m_impression_signal, json[QString("impressionSignal")]);
    m_impression_signal_isSet = !json[QString("impressionSignal")].isNull() && m_impression_signal_isValid;
}

QString OAIAlgorithmRulesSignal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlgorithmRulesSignal::asJsonObject() const {
    QJsonObject obj;
    if (m_impression_signal_isSet) {
        obj.insert(QString("impressionSignal"), ::OpenAPI::toJsonValue(m_impression_signal));
    }
    return obj;
}

QString OAIAlgorithmRulesSignal::getImpressionSignal() const {
    return m_impression_signal;
}
void OAIAlgorithmRulesSignal::setImpressionSignal(const QString &impression_signal) {
    m_impression_signal = impression_signal;
    m_impression_signal_isSet = true;
}

bool OAIAlgorithmRulesSignal::is_impression_signal_Set() const{
    return m_impression_signal_isSet;
}

bool OAIAlgorithmRulesSignal::is_impression_signal_Valid() const{
    return m_impression_signal_isValid;
}

bool OAIAlgorithmRulesSignal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_impression_signal_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlgorithmRulesSignal::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
