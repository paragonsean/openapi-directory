/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoice::OAIInvoice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoice::OAIInvoice() {
    this->initializeModel();
}

OAIInvoice::~OAIInvoice() {}

void OAIInvoice::initializeModel() {

    m_budget_invoice_grouping_id_isSet = false;
    m_budget_invoice_grouping_id_isValid = false;

    m_budget_summaries_isSet = false;
    m_budget_summaries_isValid = false;

    m_corrected_invoice_id_isSet = false;
    m_corrected_invoice_id_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_due_date_isSet = false;
    m_due_date_isValid = false;

    m_invoice_id_isSet = false;
    m_invoice_id_isValid = false;

    m_invoice_type_isSet = false;
    m_invoice_type_isValid = false;

    m_issue_date_isSet = false;
    m_issue_date_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_non_budget_micros_isSet = false;
    m_non_budget_micros_isValid = false;

    m_payments_account_id_isSet = false;
    m_payments_account_id_isValid = false;

    m_payments_profile_id_isSet = false;
    m_payments_profile_id_isValid = false;

    m_pdf_url_isSet = false;
    m_pdf_url_isValid = false;

    m_purchase_order_number_isSet = false;
    m_purchase_order_number_isValid = false;

    m_replaced_invoice_ids_isSet = false;
    m_replaced_invoice_ids_isValid = false;

    m_service_date_range_isSet = false;
    m_service_date_range_isValid = false;

    m_subtotal_amount_micros_isSet = false;
    m_subtotal_amount_micros_isValid = false;

    m_total_amount_micros_isSet = false;
    m_total_amount_micros_isValid = false;

    m_total_tax_amount_micros_isSet = false;
    m_total_tax_amount_micros_isValid = false;
}

void OAIInvoice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoice::fromJsonObject(QJsonObject json) {

    m_budget_invoice_grouping_id_isValid = ::OpenAPI::fromJsonValue(m_budget_invoice_grouping_id, json[QString("budgetInvoiceGroupingId")]);
    m_budget_invoice_grouping_id_isSet = !json[QString("budgetInvoiceGroupingId")].isNull() && m_budget_invoice_grouping_id_isValid;

    m_budget_summaries_isValid = ::OpenAPI::fromJsonValue(m_budget_summaries, json[QString("budgetSummaries")]);
    m_budget_summaries_isSet = !json[QString("budgetSummaries")].isNull() && m_budget_summaries_isValid;

    m_corrected_invoice_id_isValid = ::OpenAPI::fromJsonValue(m_corrected_invoice_id, json[QString("correctedInvoiceId")]);
    m_corrected_invoice_id_isSet = !json[QString("correctedInvoiceId")].isNull() && m_corrected_invoice_id_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_due_date_isValid = ::OpenAPI::fromJsonValue(m_due_date, json[QString("dueDate")]);
    m_due_date_isSet = !json[QString("dueDate")].isNull() && m_due_date_isValid;

    m_invoice_id_isValid = ::OpenAPI::fromJsonValue(m_invoice_id, json[QString("invoiceId")]);
    m_invoice_id_isSet = !json[QString("invoiceId")].isNull() && m_invoice_id_isValid;

    m_invoice_type_isValid = ::OpenAPI::fromJsonValue(m_invoice_type, json[QString("invoiceType")]);
    m_invoice_type_isSet = !json[QString("invoiceType")].isNull() && m_invoice_type_isValid;

    m_issue_date_isValid = ::OpenAPI::fromJsonValue(m_issue_date, json[QString("issueDate")]);
    m_issue_date_isSet = !json[QString("issueDate")].isNull() && m_issue_date_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_non_budget_micros_isValid = ::OpenAPI::fromJsonValue(m_non_budget_micros, json[QString("nonBudgetMicros")]);
    m_non_budget_micros_isSet = !json[QString("nonBudgetMicros")].isNull() && m_non_budget_micros_isValid;

    m_payments_account_id_isValid = ::OpenAPI::fromJsonValue(m_payments_account_id, json[QString("paymentsAccountId")]);
    m_payments_account_id_isSet = !json[QString("paymentsAccountId")].isNull() && m_payments_account_id_isValid;

    m_payments_profile_id_isValid = ::OpenAPI::fromJsonValue(m_payments_profile_id, json[QString("paymentsProfileId")]);
    m_payments_profile_id_isSet = !json[QString("paymentsProfileId")].isNull() && m_payments_profile_id_isValid;

    m_pdf_url_isValid = ::OpenAPI::fromJsonValue(m_pdf_url, json[QString("pdfUrl")]);
    m_pdf_url_isSet = !json[QString("pdfUrl")].isNull() && m_pdf_url_isValid;

    m_purchase_order_number_isValid = ::OpenAPI::fromJsonValue(m_purchase_order_number, json[QString("purchaseOrderNumber")]);
    m_purchase_order_number_isSet = !json[QString("purchaseOrderNumber")].isNull() && m_purchase_order_number_isValid;

    m_replaced_invoice_ids_isValid = ::OpenAPI::fromJsonValue(m_replaced_invoice_ids, json[QString("replacedInvoiceIds")]);
    m_replaced_invoice_ids_isSet = !json[QString("replacedInvoiceIds")].isNull() && m_replaced_invoice_ids_isValid;

    m_service_date_range_isValid = ::OpenAPI::fromJsonValue(m_service_date_range, json[QString("serviceDateRange")]);
    m_service_date_range_isSet = !json[QString("serviceDateRange")].isNull() && m_service_date_range_isValid;

    m_subtotal_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_subtotal_amount_micros, json[QString("subtotalAmountMicros")]);
    m_subtotal_amount_micros_isSet = !json[QString("subtotalAmountMicros")].isNull() && m_subtotal_amount_micros_isValid;

    m_total_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_total_amount_micros, json[QString("totalAmountMicros")]);
    m_total_amount_micros_isSet = !json[QString("totalAmountMicros")].isNull() && m_total_amount_micros_isValid;

    m_total_tax_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_total_tax_amount_micros, json[QString("totalTaxAmountMicros")]);
    m_total_tax_amount_micros_isSet = !json[QString("totalTaxAmountMicros")].isNull() && m_total_tax_amount_micros_isValid;
}

QString OAIInvoice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoice::asJsonObject() const {
    QJsonObject obj;
    if (m_budget_invoice_grouping_id_isSet) {
        obj.insert(QString("budgetInvoiceGroupingId"), ::OpenAPI::toJsonValue(m_budget_invoice_grouping_id));
    }
    if (m_budget_summaries.size() > 0) {
        obj.insert(QString("budgetSummaries"), ::OpenAPI::toJsonValue(m_budget_summaries));
    }
    if (m_corrected_invoice_id_isSet) {
        obj.insert(QString("correctedInvoiceId"), ::OpenAPI::toJsonValue(m_corrected_invoice_id));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_due_date.isSet()) {
        obj.insert(QString("dueDate"), ::OpenAPI::toJsonValue(m_due_date));
    }
    if (m_invoice_id_isSet) {
        obj.insert(QString("invoiceId"), ::OpenAPI::toJsonValue(m_invoice_id));
    }
    if (m_invoice_type_isSet) {
        obj.insert(QString("invoiceType"), ::OpenAPI::toJsonValue(m_invoice_type));
    }
    if (m_issue_date.isSet()) {
        obj.insert(QString("issueDate"), ::OpenAPI::toJsonValue(m_issue_date));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_non_budget_micros_isSet) {
        obj.insert(QString("nonBudgetMicros"), ::OpenAPI::toJsonValue(m_non_budget_micros));
    }
    if (m_payments_account_id_isSet) {
        obj.insert(QString("paymentsAccountId"), ::OpenAPI::toJsonValue(m_payments_account_id));
    }
    if (m_payments_profile_id_isSet) {
        obj.insert(QString("paymentsProfileId"), ::OpenAPI::toJsonValue(m_payments_profile_id));
    }
    if (m_pdf_url_isSet) {
        obj.insert(QString("pdfUrl"), ::OpenAPI::toJsonValue(m_pdf_url));
    }
    if (m_purchase_order_number_isSet) {
        obj.insert(QString("purchaseOrderNumber"), ::OpenAPI::toJsonValue(m_purchase_order_number));
    }
    if (m_replaced_invoice_ids.size() > 0) {
        obj.insert(QString("replacedInvoiceIds"), ::OpenAPI::toJsonValue(m_replaced_invoice_ids));
    }
    if (m_service_date_range.isSet()) {
        obj.insert(QString("serviceDateRange"), ::OpenAPI::toJsonValue(m_service_date_range));
    }
    if (m_subtotal_amount_micros_isSet) {
        obj.insert(QString("subtotalAmountMicros"), ::OpenAPI::toJsonValue(m_subtotal_amount_micros));
    }
    if (m_total_amount_micros_isSet) {
        obj.insert(QString("totalAmountMicros"), ::OpenAPI::toJsonValue(m_total_amount_micros));
    }
    if (m_total_tax_amount_micros_isSet) {
        obj.insert(QString("totalTaxAmountMicros"), ::OpenAPI::toJsonValue(m_total_tax_amount_micros));
    }
    return obj;
}

QString OAIInvoice::getBudgetInvoiceGroupingId() const {
    return m_budget_invoice_grouping_id;
}
void OAIInvoice::setBudgetInvoiceGroupingId(const QString &budget_invoice_grouping_id) {
    m_budget_invoice_grouping_id = budget_invoice_grouping_id;
    m_budget_invoice_grouping_id_isSet = true;
}

bool OAIInvoice::is_budget_invoice_grouping_id_Set() const{
    return m_budget_invoice_grouping_id_isSet;
}

bool OAIInvoice::is_budget_invoice_grouping_id_Valid() const{
    return m_budget_invoice_grouping_id_isValid;
}

QList<OAIBudgetSummary> OAIInvoice::getBudgetSummaries() const {
    return m_budget_summaries;
}
void OAIInvoice::setBudgetSummaries(const QList<OAIBudgetSummary> &budget_summaries) {
    m_budget_summaries = budget_summaries;
    m_budget_summaries_isSet = true;
}

bool OAIInvoice::is_budget_summaries_Set() const{
    return m_budget_summaries_isSet;
}

bool OAIInvoice::is_budget_summaries_Valid() const{
    return m_budget_summaries_isValid;
}

QString OAIInvoice::getCorrectedInvoiceId() const {
    return m_corrected_invoice_id;
}
void OAIInvoice::setCorrectedInvoiceId(const QString &corrected_invoice_id) {
    m_corrected_invoice_id = corrected_invoice_id;
    m_corrected_invoice_id_isSet = true;
}

bool OAIInvoice::is_corrected_invoice_id_Set() const{
    return m_corrected_invoice_id_isSet;
}

bool OAIInvoice::is_corrected_invoice_id_Valid() const{
    return m_corrected_invoice_id_isValid;
}

QString OAIInvoice::getCurrencyCode() const {
    return m_currency_code;
}
void OAIInvoice::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIInvoice::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIInvoice::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIInvoice::getDisplayName() const {
    return m_display_name;
}
void OAIInvoice::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIInvoice::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIInvoice::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIDate OAIInvoice::getDueDate() const {
    return m_due_date;
}
void OAIInvoice::setDueDate(const OAIDate &due_date) {
    m_due_date = due_date;
    m_due_date_isSet = true;
}

bool OAIInvoice::is_due_date_Set() const{
    return m_due_date_isSet;
}

bool OAIInvoice::is_due_date_Valid() const{
    return m_due_date_isValid;
}

QString OAIInvoice::getInvoiceId() const {
    return m_invoice_id;
}
void OAIInvoice::setInvoiceId(const QString &invoice_id) {
    m_invoice_id = invoice_id;
    m_invoice_id_isSet = true;
}

bool OAIInvoice::is_invoice_id_Set() const{
    return m_invoice_id_isSet;
}

bool OAIInvoice::is_invoice_id_Valid() const{
    return m_invoice_id_isValid;
}

QString OAIInvoice::getInvoiceType() const {
    return m_invoice_type;
}
void OAIInvoice::setInvoiceType(const QString &invoice_type) {
    m_invoice_type = invoice_type;
    m_invoice_type_isSet = true;
}

bool OAIInvoice::is_invoice_type_Set() const{
    return m_invoice_type_isSet;
}

bool OAIInvoice::is_invoice_type_Valid() const{
    return m_invoice_type_isValid;
}

OAIDate OAIInvoice::getIssueDate() const {
    return m_issue_date;
}
void OAIInvoice::setIssueDate(const OAIDate &issue_date) {
    m_issue_date = issue_date;
    m_issue_date_isSet = true;
}

bool OAIInvoice::is_issue_date_Set() const{
    return m_issue_date_isSet;
}

bool OAIInvoice::is_issue_date_Valid() const{
    return m_issue_date_isValid;
}

QString OAIInvoice::getName() const {
    return m_name;
}
void OAIInvoice::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIInvoice::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInvoice::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIInvoice::getNonBudgetMicros() const {
    return m_non_budget_micros;
}
void OAIInvoice::setNonBudgetMicros(const QString &non_budget_micros) {
    m_non_budget_micros = non_budget_micros;
    m_non_budget_micros_isSet = true;
}

bool OAIInvoice::is_non_budget_micros_Set() const{
    return m_non_budget_micros_isSet;
}

bool OAIInvoice::is_non_budget_micros_Valid() const{
    return m_non_budget_micros_isValid;
}

QString OAIInvoice::getPaymentsAccountId() const {
    return m_payments_account_id;
}
void OAIInvoice::setPaymentsAccountId(const QString &payments_account_id) {
    m_payments_account_id = payments_account_id;
    m_payments_account_id_isSet = true;
}

bool OAIInvoice::is_payments_account_id_Set() const{
    return m_payments_account_id_isSet;
}

bool OAIInvoice::is_payments_account_id_Valid() const{
    return m_payments_account_id_isValid;
}

QString OAIInvoice::getPaymentsProfileId() const {
    return m_payments_profile_id;
}
void OAIInvoice::setPaymentsProfileId(const QString &payments_profile_id) {
    m_payments_profile_id = payments_profile_id;
    m_payments_profile_id_isSet = true;
}

bool OAIInvoice::is_payments_profile_id_Set() const{
    return m_payments_profile_id_isSet;
}

bool OAIInvoice::is_payments_profile_id_Valid() const{
    return m_payments_profile_id_isValid;
}

QString OAIInvoice::getPdfUrl() const {
    return m_pdf_url;
}
void OAIInvoice::setPdfUrl(const QString &pdf_url) {
    m_pdf_url = pdf_url;
    m_pdf_url_isSet = true;
}

bool OAIInvoice::is_pdf_url_Set() const{
    return m_pdf_url_isSet;
}

bool OAIInvoice::is_pdf_url_Valid() const{
    return m_pdf_url_isValid;
}

QString OAIInvoice::getPurchaseOrderNumber() const {
    return m_purchase_order_number;
}
void OAIInvoice::setPurchaseOrderNumber(const QString &purchase_order_number) {
    m_purchase_order_number = purchase_order_number;
    m_purchase_order_number_isSet = true;
}

bool OAIInvoice::is_purchase_order_number_Set() const{
    return m_purchase_order_number_isSet;
}

bool OAIInvoice::is_purchase_order_number_Valid() const{
    return m_purchase_order_number_isValid;
}

QList<QString> OAIInvoice::getReplacedInvoiceIds() const {
    return m_replaced_invoice_ids;
}
void OAIInvoice::setReplacedInvoiceIds(const QList<QString> &replaced_invoice_ids) {
    m_replaced_invoice_ids = replaced_invoice_ids;
    m_replaced_invoice_ids_isSet = true;
}

bool OAIInvoice::is_replaced_invoice_ids_Set() const{
    return m_replaced_invoice_ids_isSet;
}

bool OAIInvoice::is_replaced_invoice_ids_Valid() const{
    return m_replaced_invoice_ids_isValid;
}

OAIDateRange OAIInvoice::getServiceDateRange() const {
    return m_service_date_range;
}
void OAIInvoice::setServiceDateRange(const OAIDateRange &service_date_range) {
    m_service_date_range = service_date_range;
    m_service_date_range_isSet = true;
}

bool OAIInvoice::is_service_date_range_Set() const{
    return m_service_date_range_isSet;
}

bool OAIInvoice::is_service_date_range_Valid() const{
    return m_service_date_range_isValid;
}

QString OAIInvoice::getSubtotalAmountMicros() const {
    return m_subtotal_amount_micros;
}
void OAIInvoice::setSubtotalAmountMicros(const QString &subtotal_amount_micros) {
    m_subtotal_amount_micros = subtotal_amount_micros;
    m_subtotal_amount_micros_isSet = true;
}

bool OAIInvoice::is_subtotal_amount_micros_Set() const{
    return m_subtotal_amount_micros_isSet;
}

bool OAIInvoice::is_subtotal_amount_micros_Valid() const{
    return m_subtotal_amount_micros_isValid;
}

QString OAIInvoice::getTotalAmountMicros() const {
    return m_total_amount_micros;
}
void OAIInvoice::setTotalAmountMicros(const QString &total_amount_micros) {
    m_total_amount_micros = total_amount_micros;
    m_total_amount_micros_isSet = true;
}

bool OAIInvoice::is_total_amount_micros_Set() const{
    return m_total_amount_micros_isSet;
}

bool OAIInvoice::is_total_amount_micros_Valid() const{
    return m_total_amount_micros_isValid;
}

QString OAIInvoice::getTotalTaxAmountMicros() const {
    return m_total_tax_amount_micros;
}
void OAIInvoice::setTotalTaxAmountMicros(const QString &total_tax_amount_micros) {
    m_total_tax_amount_micros = total_tax_amount_micros;
    m_total_tax_amount_micros_isSet = true;
}

bool OAIInvoice::is_total_tax_amount_micros_Set() const{
    return m_total_tax_amount_micros_isSet;
}

bool OAIInvoice::is_total_tax_amount_micros_Valid() const{
    return m_total_tax_amount_micros_isValid;
}

bool OAIInvoice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_budget_invoice_grouping_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_summaries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_corrected_invoice_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_due_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_non_budget_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replaced_invoice_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_tax_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
