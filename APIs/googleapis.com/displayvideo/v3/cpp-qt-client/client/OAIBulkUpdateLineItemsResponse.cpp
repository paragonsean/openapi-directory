/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkUpdateLineItemsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkUpdateLineItemsResponse::OAIBulkUpdateLineItemsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkUpdateLineItemsResponse::OAIBulkUpdateLineItemsResponse() {
    this->initializeModel();
}

OAIBulkUpdateLineItemsResponse::~OAIBulkUpdateLineItemsResponse() {}

void OAIBulkUpdateLineItemsResponse::initializeModel() {

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_failed_line_item_ids_isSet = false;
    m_failed_line_item_ids_isValid = false;

    m_skipped_line_item_ids_isSet = false;
    m_skipped_line_item_ids_isValid = false;

    m_updated_line_item_ids_isSet = false;
    m_updated_line_item_ids_isValid = false;
}

void OAIBulkUpdateLineItemsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkUpdateLineItemsResponse::fromJsonObject(QJsonObject json) {

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_failed_line_item_ids_isValid = ::OpenAPI::fromJsonValue(m_failed_line_item_ids, json[QString("failedLineItemIds")]);
    m_failed_line_item_ids_isSet = !json[QString("failedLineItemIds")].isNull() && m_failed_line_item_ids_isValid;

    m_skipped_line_item_ids_isValid = ::OpenAPI::fromJsonValue(m_skipped_line_item_ids, json[QString("skippedLineItemIds")]);
    m_skipped_line_item_ids_isSet = !json[QString("skippedLineItemIds")].isNull() && m_skipped_line_item_ids_isValid;

    m_updated_line_item_ids_isValid = ::OpenAPI::fromJsonValue(m_updated_line_item_ids, json[QString("updatedLineItemIds")]);
    m_updated_line_item_ids_isSet = !json[QString("updatedLineItemIds")].isNull() && m_updated_line_item_ids_isValid;
}

QString OAIBulkUpdateLineItemsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkUpdateLineItemsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_failed_line_item_ids.size() > 0) {
        obj.insert(QString("failedLineItemIds"), ::OpenAPI::toJsonValue(m_failed_line_item_ids));
    }
    if (m_skipped_line_item_ids.size() > 0) {
        obj.insert(QString("skippedLineItemIds"), ::OpenAPI::toJsonValue(m_skipped_line_item_ids));
    }
    if (m_updated_line_item_ids.size() > 0) {
        obj.insert(QString("updatedLineItemIds"), ::OpenAPI::toJsonValue(m_updated_line_item_ids));
    }
    return obj;
}

QList<OAIStatus> OAIBulkUpdateLineItemsResponse::getErrors() const {
    return m_errors;
}
void OAIBulkUpdateLineItemsResponse::setErrors(const QList<OAIStatus> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIBulkUpdateLineItemsResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIBulkUpdateLineItemsResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

QList<QString> OAIBulkUpdateLineItemsResponse::getFailedLineItemIds() const {
    return m_failed_line_item_ids;
}
void OAIBulkUpdateLineItemsResponse::setFailedLineItemIds(const QList<QString> &failed_line_item_ids) {
    m_failed_line_item_ids = failed_line_item_ids;
    m_failed_line_item_ids_isSet = true;
}

bool OAIBulkUpdateLineItemsResponse::is_failed_line_item_ids_Set() const{
    return m_failed_line_item_ids_isSet;
}

bool OAIBulkUpdateLineItemsResponse::is_failed_line_item_ids_Valid() const{
    return m_failed_line_item_ids_isValid;
}

QList<QString> OAIBulkUpdateLineItemsResponse::getSkippedLineItemIds() const {
    return m_skipped_line_item_ids;
}
void OAIBulkUpdateLineItemsResponse::setSkippedLineItemIds(const QList<QString> &skipped_line_item_ids) {
    m_skipped_line_item_ids = skipped_line_item_ids;
    m_skipped_line_item_ids_isSet = true;
}

bool OAIBulkUpdateLineItemsResponse::is_skipped_line_item_ids_Set() const{
    return m_skipped_line_item_ids_isSet;
}

bool OAIBulkUpdateLineItemsResponse::is_skipped_line_item_ids_Valid() const{
    return m_skipped_line_item_ids_isValid;
}

QList<QString> OAIBulkUpdateLineItemsResponse::getUpdatedLineItemIds() const {
    return m_updated_line_item_ids;
}
void OAIBulkUpdateLineItemsResponse::setUpdatedLineItemIds(const QList<QString> &updated_line_item_ids) {
    m_updated_line_item_ids = updated_line_item_ids;
    m_updated_line_item_ids_isSet = true;
}

bool OAIBulkUpdateLineItemsResponse::is_updated_line_item_ids_Set() const{
    return m_updated_line_item_ids_isSet;
}

bool OAIBulkUpdateLineItemsResponse::is_updated_line_item_ids_Valid() const{
    return m_updated_line_item_ids_isValid;
}

bool OAIBulkUpdateLineItemsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_failed_line_item_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skipped_line_item_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_line_item_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkUpdateLineItemsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
