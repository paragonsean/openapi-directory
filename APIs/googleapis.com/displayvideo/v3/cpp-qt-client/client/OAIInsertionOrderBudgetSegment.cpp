/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsertionOrderBudgetSegment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsertionOrderBudgetSegment::OAIInsertionOrderBudgetSegment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsertionOrderBudgetSegment::OAIInsertionOrderBudgetSegment() {
    this->initializeModel();
}

OAIInsertionOrderBudgetSegment::~OAIInsertionOrderBudgetSegment() {}

void OAIInsertionOrderBudgetSegment::initializeModel() {

    m_budget_amount_micros_isSet = false;
    m_budget_amount_micros_isValid = false;

    m_campaign_budget_id_isSet = false;
    m_campaign_budget_id_isValid = false;

    m_date_range_isSet = false;
    m_date_range_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIInsertionOrderBudgetSegment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInsertionOrderBudgetSegment::fromJsonObject(QJsonObject json) {

    m_budget_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_budget_amount_micros, json[QString("budgetAmountMicros")]);
    m_budget_amount_micros_isSet = !json[QString("budgetAmountMicros")].isNull() && m_budget_amount_micros_isValid;

    m_campaign_budget_id_isValid = ::OpenAPI::fromJsonValue(m_campaign_budget_id, json[QString("campaignBudgetId")]);
    m_campaign_budget_id_isSet = !json[QString("campaignBudgetId")].isNull() && m_campaign_budget_id_isValid;

    m_date_range_isValid = ::OpenAPI::fromJsonValue(m_date_range, json[QString("dateRange")]);
    m_date_range_isSet = !json[QString("dateRange")].isNull() && m_date_range_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIInsertionOrderBudgetSegment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInsertionOrderBudgetSegment::asJsonObject() const {
    QJsonObject obj;
    if (m_budget_amount_micros_isSet) {
        obj.insert(QString("budgetAmountMicros"), ::OpenAPI::toJsonValue(m_budget_amount_micros));
    }
    if (m_campaign_budget_id_isSet) {
        obj.insert(QString("campaignBudgetId"), ::OpenAPI::toJsonValue(m_campaign_budget_id));
    }
    if (m_date_range.isSet()) {
        obj.insert(QString("dateRange"), ::OpenAPI::toJsonValue(m_date_range));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAIInsertionOrderBudgetSegment::getBudgetAmountMicros() const {
    return m_budget_amount_micros;
}
void OAIInsertionOrderBudgetSegment::setBudgetAmountMicros(const QString &budget_amount_micros) {
    m_budget_amount_micros = budget_amount_micros;
    m_budget_amount_micros_isSet = true;
}

bool OAIInsertionOrderBudgetSegment::is_budget_amount_micros_Set() const{
    return m_budget_amount_micros_isSet;
}

bool OAIInsertionOrderBudgetSegment::is_budget_amount_micros_Valid() const{
    return m_budget_amount_micros_isValid;
}

QString OAIInsertionOrderBudgetSegment::getCampaignBudgetId() const {
    return m_campaign_budget_id;
}
void OAIInsertionOrderBudgetSegment::setCampaignBudgetId(const QString &campaign_budget_id) {
    m_campaign_budget_id = campaign_budget_id;
    m_campaign_budget_id_isSet = true;
}

bool OAIInsertionOrderBudgetSegment::is_campaign_budget_id_Set() const{
    return m_campaign_budget_id_isSet;
}

bool OAIInsertionOrderBudgetSegment::is_campaign_budget_id_Valid() const{
    return m_campaign_budget_id_isValid;
}

OAIDateRange OAIInsertionOrderBudgetSegment::getDateRange() const {
    return m_date_range;
}
void OAIInsertionOrderBudgetSegment::setDateRange(const OAIDateRange &date_range) {
    m_date_range = date_range;
    m_date_range_isSet = true;
}

bool OAIInsertionOrderBudgetSegment::is_date_range_Set() const{
    return m_date_range_isSet;
}

bool OAIInsertionOrderBudgetSegment::is_date_range_Valid() const{
    return m_date_range_isValid;
}

QString OAIInsertionOrderBudgetSegment::getDescription() const {
    return m_description;
}
void OAIInsertionOrderBudgetSegment::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIInsertionOrderBudgetSegment::is_description_Set() const{
    return m_description_isSet;
}

bool OAIInsertionOrderBudgetSegment::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIInsertionOrderBudgetSegment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_budget_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_campaign_budget_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInsertionOrderBudgetSegment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
