/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkUpdateLineItemsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkUpdateLineItemsRequest::OAIBulkUpdateLineItemsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkUpdateLineItemsRequest::OAIBulkUpdateLineItemsRequest() {
    this->initializeModel();
}

OAIBulkUpdateLineItemsRequest::~OAIBulkUpdateLineItemsRequest() {}

void OAIBulkUpdateLineItemsRequest::initializeModel() {

    m_line_item_ids_isSet = false;
    m_line_item_ids_isValid = false;

    m_target_line_item_isSet = false;
    m_target_line_item_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;
}

void OAIBulkUpdateLineItemsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkUpdateLineItemsRequest::fromJsonObject(QJsonObject json) {

    m_line_item_ids_isValid = ::OpenAPI::fromJsonValue(m_line_item_ids, json[QString("lineItemIds")]);
    m_line_item_ids_isSet = !json[QString("lineItemIds")].isNull() && m_line_item_ids_isValid;

    m_target_line_item_isValid = ::OpenAPI::fromJsonValue(m_target_line_item, json[QString("targetLineItem")]);
    m_target_line_item_isSet = !json[QString("targetLineItem")].isNull() && m_target_line_item_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;
}

QString OAIBulkUpdateLineItemsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkUpdateLineItemsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_line_item_ids.size() > 0) {
        obj.insert(QString("lineItemIds"), ::OpenAPI::toJsonValue(m_line_item_ids));
    }
    if (m_target_line_item.isSet()) {
        obj.insert(QString("targetLineItem"), ::OpenAPI::toJsonValue(m_target_line_item));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    return obj;
}

QList<QString> OAIBulkUpdateLineItemsRequest::getLineItemIds() const {
    return m_line_item_ids;
}
void OAIBulkUpdateLineItemsRequest::setLineItemIds(const QList<QString> &line_item_ids) {
    m_line_item_ids = line_item_ids;
    m_line_item_ids_isSet = true;
}

bool OAIBulkUpdateLineItemsRequest::is_line_item_ids_Set() const{
    return m_line_item_ids_isSet;
}

bool OAIBulkUpdateLineItemsRequest::is_line_item_ids_Valid() const{
    return m_line_item_ids_isValid;
}

OAILineItem OAIBulkUpdateLineItemsRequest::getTargetLineItem() const {
    return m_target_line_item;
}
void OAIBulkUpdateLineItemsRequest::setTargetLineItem(const OAILineItem &target_line_item) {
    m_target_line_item = target_line_item;
    m_target_line_item_isSet = true;
}

bool OAIBulkUpdateLineItemsRequest::is_target_line_item_Set() const{
    return m_target_line_item_isSet;
}

bool OAIBulkUpdateLineItemsRequest::is_target_line_item_Valid() const{
    return m_target_line_item_isValid;
}

QString OAIBulkUpdateLineItemsRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIBulkUpdateLineItemsRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIBulkUpdateLineItemsRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIBulkUpdateLineItemsRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

bool OAIBulkUpdateLineItemsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_item_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_line_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkUpdateLineItemsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
