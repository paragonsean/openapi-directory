/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIYoutubeAndPartnersSettings.h
 *
 * Settings for YouTube and Partners line items.
 */

#ifndef OAIYoutubeAndPartnersSettings_H
#define OAIYoutubeAndPartnersSettings_H

#include <QJsonObject>

#include "OAIFrequencyCap.h"
#include "OAITargetFrequency.h"
#include "OAIThirdPartyMeasurementConfigs.h"
#include "OAIVideoAdSequenceSettings.h"
#include "OAIYoutubeAndPartnersInventorySourceConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIYoutubeAndPartnersInventorySourceConfig;
class OAITargetFrequency;
class OAIThirdPartyMeasurementConfigs;
class OAIVideoAdSequenceSettings;
class OAIFrequencyCap;

class OAIYoutubeAndPartnersSettings : public OAIObject {
public:
    OAIYoutubeAndPartnersSettings();
    OAIYoutubeAndPartnersSettings(QString json);
    ~OAIYoutubeAndPartnersSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentCategory() const;
    void setContentCategory(const QString &content_category);
    bool is_content_category_Set() const;
    bool is_content_category_Valid() const;

    QString getEffectiveContentCategory() const;
    void setEffectiveContentCategory(const QString &effective_content_category);
    bool is_effective_content_category_Set() const;
    bool is_effective_content_category_Valid() const;

    OAIYoutubeAndPartnersInventorySourceConfig getInventorySourceSettings() const;
    void setInventorySourceSettings(const OAIYoutubeAndPartnersInventorySourceConfig &inventory_source_settings);
    bool is_inventory_source_settings_Set() const;
    bool is_inventory_source_settings_Valid() const;

    QString getLeadFormId() const;
    void setLeadFormId(const QString &lead_form_id);
    bool is_lead_form_id_Set() const;
    bool is_lead_form_id_Valid() const;

    QString getLinkedMerchantId() const;
    void setLinkedMerchantId(const QString &linked_merchant_id);
    bool is_linked_merchant_id_Set() const;
    bool is_linked_merchant_id_Valid() const;

    QList<QString> getRelatedVideoIds() const;
    void setRelatedVideoIds(const QList<QString> &related_video_ids);
    bool is_related_video_ids_Set() const;
    bool is_related_video_ids_Valid() const;

    OAITargetFrequency getTargetFrequency() const;
    void setTargetFrequency(const OAITargetFrequency &target_frequency);
    bool is_target_frequency_Set() const;
    bool is_target_frequency_Valid() const;

    OAIThirdPartyMeasurementConfigs getThirdPartyMeasurementConfigs() const;
    void setThirdPartyMeasurementConfigs(const OAIThirdPartyMeasurementConfigs &third_party_measurement_configs);
    bool is_third_party_measurement_configs_Set() const;
    bool is_third_party_measurement_configs_Valid() const;

    OAIVideoAdSequenceSettings getVideoAdSequenceSettings() const;
    void setVideoAdSequenceSettings(const OAIVideoAdSequenceSettings &video_ad_sequence_settings);
    bool is_video_ad_sequence_settings_Set() const;
    bool is_video_ad_sequence_settings_Valid() const;

    OAIFrequencyCap getViewFrequencyCap() const;
    void setViewFrequencyCap(const OAIFrequencyCap &view_frequency_cap);
    bool is_view_frequency_cap_Set() const;
    bool is_view_frequency_cap_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_category;
    bool m_content_category_isSet;
    bool m_content_category_isValid;

    QString m_effective_content_category;
    bool m_effective_content_category_isSet;
    bool m_effective_content_category_isValid;

    OAIYoutubeAndPartnersInventorySourceConfig m_inventory_source_settings;
    bool m_inventory_source_settings_isSet;
    bool m_inventory_source_settings_isValid;

    QString m_lead_form_id;
    bool m_lead_form_id_isSet;
    bool m_lead_form_id_isValid;

    QString m_linked_merchant_id;
    bool m_linked_merchant_id_isSet;
    bool m_linked_merchant_id_isValid;

    QList<QString> m_related_video_ids;
    bool m_related_video_ids_isSet;
    bool m_related_video_ids_isValid;

    OAITargetFrequency m_target_frequency;
    bool m_target_frequency_isSet;
    bool m_target_frequency_isValid;

    OAIThirdPartyMeasurementConfigs m_third_party_measurement_configs;
    bool m_third_party_measurement_configs_isSet;
    bool m_third_party_measurement_configs_isValid;

    OAIVideoAdSequenceSettings m_video_ad_sequence_settings;
    bool m_video_ad_sequence_settings_isSet;
    bool m_video_ad_sequence_settings_isValid;

    OAIFrequencyCap m_view_frequency_cap;
    bool m_view_frequency_cap_isSet;
    bool m_view_frequency_cap_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIYoutubeAndPartnersSettings)

#endif // OAIYoutubeAndPartnersSettings_H
