/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkEditNegativeKeywordsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkEditNegativeKeywordsRequest::OAIBulkEditNegativeKeywordsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkEditNegativeKeywordsRequest::OAIBulkEditNegativeKeywordsRequest() {
    this->initializeModel();
}

OAIBulkEditNegativeKeywordsRequest::~OAIBulkEditNegativeKeywordsRequest() {}

void OAIBulkEditNegativeKeywordsRequest::initializeModel() {

    m_created_negative_keywords_isSet = false;
    m_created_negative_keywords_isValid = false;

    m_deleted_negative_keywords_isSet = false;
    m_deleted_negative_keywords_isValid = false;
}

void OAIBulkEditNegativeKeywordsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkEditNegativeKeywordsRequest::fromJsonObject(QJsonObject json) {

    m_created_negative_keywords_isValid = ::OpenAPI::fromJsonValue(m_created_negative_keywords, json[QString("createdNegativeKeywords")]);
    m_created_negative_keywords_isSet = !json[QString("createdNegativeKeywords")].isNull() && m_created_negative_keywords_isValid;

    m_deleted_negative_keywords_isValid = ::OpenAPI::fromJsonValue(m_deleted_negative_keywords, json[QString("deletedNegativeKeywords")]);
    m_deleted_negative_keywords_isSet = !json[QString("deletedNegativeKeywords")].isNull() && m_deleted_negative_keywords_isValid;
}

QString OAIBulkEditNegativeKeywordsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkEditNegativeKeywordsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_created_negative_keywords.size() > 0) {
        obj.insert(QString("createdNegativeKeywords"), ::OpenAPI::toJsonValue(m_created_negative_keywords));
    }
    if (m_deleted_negative_keywords.size() > 0) {
        obj.insert(QString("deletedNegativeKeywords"), ::OpenAPI::toJsonValue(m_deleted_negative_keywords));
    }
    return obj;
}

QList<OAINegativeKeyword> OAIBulkEditNegativeKeywordsRequest::getCreatedNegativeKeywords() const {
    return m_created_negative_keywords;
}
void OAIBulkEditNegativeKeywordsRequest::setCreatedNegativeKeywords(const QList<OAINegativeKeyword> &created_negative_keywords) {
    m_created_negative_keywords = created_negative_keywords;
    m_created_negative_keywords_isSet = true;
}

bool OAIBulkEditNegativeKeywordsRequest::is_created_negative_keywords_Set() const{
    return m_created_negative_keywords_isSet;
}

bool OAIBulkEditNegativeKeywordsRequest::is_created_negative_keywords_Valid() const{
    return m_created_negative_keywords_isValid;
}

QList<QString> OAIBulkEditNegativeKeywordsRequest::getDeletedNegativeKeywords() const {
    return m_deleted_negative_keywords;
}
void OAIBulkEditNegativeKeywordsRequest::setDeletedNegativeKeywords(const QList<QString> &deleted_negative_keywords) {
    m_deleted_negative_keywords = deleted_negative_keywords;
    m_deleted_negative_keywords_isSet = true;
}

bool OAIBulkEditNegativeKeywordsRequest::is_deleted_negative_keywords_Set() const{
    return m_deleted_negative_keywords_isSet;
}

bool OAIBulkEditNegativeKeywordsRequest::is_deleted_negative_keywords_Valid() const{
    return m_deleted_negative_keywords_isValid;
}

bool OAIBulkEditNegativeKeywordsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_negative_keywords.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_negative_keywords.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkEditNegativeKeywordsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
