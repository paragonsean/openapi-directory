/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKpi.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKpi::OAIKpi(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKpi::OAIKpi() {
    this->initializeModel();
}

OAIKpi::~OAIKpi() {}

void OAIKpi::initializeModel() {

    m_kpi_amount_micros_isSet = false;
    m_kpi_amount_micros_isValid = false;

    m_kpi_percentage_micros_isSet = false;
    m_kpi_percentage_micros_isValid = false;

    m_kpi_string_isSet = false;
    m_kpi_string_isValid = false;

    m_kpi_type_isSet = false;
    m_kpi_type_isValid = false;
}

void OAIKpi::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKpi::fromJsonObject(QJsonObject json) {

    m_kpi_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_kpi_amount_micros, json[QString("kpiAmountMicros")]);
    m_kpi_amount_micros_isSet = !json[QString("kpiAmountMicros")].isNull() && m_kpi_amount_micros_isValid;

    m_kpi_percentage_micros_isValid = ::OpenAPI::fromJsonValue(m_kpi_percentage_micros, json[QString("kpiPercentageMicros")]);
    m_kpi_percentage_micros_isSet = !json[QString("kpiPercentageMicros")].isNull() && m_kpi_percentage_micros_isValid;

    m_kpi_string_isValid = ::OpenAPI::fromJsonValue(m_kpi_string, json[QString("kpiString")]);
    m_kpi_string_isSet = !json[QString("kpiString")].isNull() && m_kpi_string_isValid;

    m_kpi_type_isValid = ::OpenAPI::fromJsonValue(m_kpi_type, json[QString("kpiType")]);
    m_kpi_type_isSet = !json[QString("kpiType")].isNull() && m_kpi_type_isValid;
}

QString OAIKpi::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKpi::asJsonObject() const {
    QJsonObject obj;
    if (m_kpi_amount_micros_isSet) {
        obj.insert(QString("kpiAmountMicros"), ::OpenAPI::toJsonValue(m_kpi_amount_micros));
    }
    if (m_kpi_percentage_micros_isSet) {
        obj.insert(QString("kpiPercentageMicros"), ::OpenAPI::toJsonValue(m_kpi_percentage_micros));
    }
    if (m_kpi_string_isSet) {
        obj.insert(QString("kpiString"), ::OpenAPI::toJsonValue(m_kpi_string));
    }
    if (m_kpi_type_isSet) {
        obj.insert(QString("kpiType"), ::OpenAPI::toJsonValue(m_kpi_type));
    }
    return obj;
}

QString OAIKpi::getKpiAmountMicros() const {
    return m_kpi_amount_micros;
}
void OAIKpi::setKpiAmountMicros(const QString &kpi_amount_micros) {
    m_kpi_amount_micros = kpi_amount_micros;
    m_kpi_amount_micros_isSet = true;
}

bool OAIKpi::is_kpi_amount_micros_Set() const{
    return m_kpi_amount_micros_isSet;
}

bool OAIKpi::is_kpi_amount_micros_Valid() const{
    return m_kpi_amount_micros_isValid;
}

QString OAIKpi::getKpiPercentageMicros() const {
    return m_kpi_percentage_micros;
}
void OAIKpi::setKpiPercentageMicros(const QString &kpi_percentage_micros) {
    m_kpi_percentage_micros = kpi_percentage_micros;
    m_kpi_percentage_micros_isSet = true;
}

bool OAIKpi::is_kpi_percentage_micros_Set() const{
    return m_kpi_percentage_micros_isSet;
}

bool OAIKpi::is_kpi_percentage_micros_Valid() const{
    return m_kpi_percentage_micros_isValid;
}

QString OAIKpi::getKpiString() const {
    return m_kpi_string;
}
void OAIKpi::setKpiString(const QString &kpi_string) {
    m_kpi_string = kpi_string;
    m_kpi_string_isSet = true;
}

bool OAIKpi::is_kpi_string_Set() const{
    return m_kpi_string_isSet;
}

bool OAIKpi::is_kpi_string_Valid() const{
    return m_kpi_string_isValid;
}

QString OAIKpi::getKpiType() const {
    return m_kpi_type;
}
void OAIKpi::setKpiType(const QString &kpi_type) {
    m_kpi_type = kpi_type;
    m_kpi_type_isSet = true;
}

bool OAIKpi::is_kpi_type_Set() const{
    return m_kpi_type_isSet;
}

bool OAIKpi::is_kpi_type_Valid() const{
    return m_kpi_type_isValid;
}

bool OAIKpi::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kpi_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kpi_percentage_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kpi_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kpi_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKpi::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
