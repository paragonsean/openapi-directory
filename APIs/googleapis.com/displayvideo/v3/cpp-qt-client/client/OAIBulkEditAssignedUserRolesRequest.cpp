/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkEditAssignedUserRolesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkEditAssignedUserRolesRequest::OAIBulkEditAssignedUserRolesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkEditAssignedUserRolesRequest::OAIBulkEditAssignedUserRolesRequest() {
    this->initializeModel();
}

OAIBulkEditAssignedUserRolesRequest::~OAIBulkEditAssignedUserRolesRequest() {}

void OAIBulkEditAssignedUserRolesRequest::initializeModel() {

    m_created_assigned_user_roles_isSet = false;
    m_created_assigned_user_roles_isValid = false;

    m_deleted_assigned_user_roles_isSet = false;
    m_deleted_assigned_user_roles_isValid = false;
}

void OAIBulkEditAssignedUserRolesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkEditAssignedUserRolesRequest::fromJsonObject(QJsonObject json) {

    m_created_assigned_user_roles_isValid = ::OpenAPI::fromJsonValue(m_created_assigned_user_roles, json[QString("createdAssignedUserRoles")]);
    m_created_assigned_user_roles_isSet = !json[QString("createdAssignedUserRoles")].isNull() && m_created_assigned_user_roles_isValid;

    m_deleted_assigned_user_roles_isValid = ::OpenAPI::fromJsonValue(m_deleted_assigned_user_roles, json[QString("deletedAssignedUserRoles")]);
    m_deleted_assigned_user_roles_isSet = !json[QString("deletedAssignedUserRoles")].isNull() && m_deleted_assigned_user_roles_isValid;
}

QString OAIBulkEditAssignedUserRolesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkEditAssignedUserRolesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_created_assigned_user_roles.size() > 0) {
        obj.insert(QString("createdAssignedUserRoles"), ::OpenAPI::toJsonValue(m_created_assigned_user_roles));
    }
    if (m_deleted_assigned_user_roles.size() > 0) {
        obj.insert(QString("deletedAssignedUserRoles"), ::OpenAPI::toJsonValue(m_deleted_assigned_user_roles));
    }
    return obj;
}

QList<OAIAssignedUserRole> OAIBulkEditAssignedUserRolesRequest::getCreatedAssignedUserRoles() const {
    return m_created_assigned_user_roles;
}
void OAIBulkEditAssignedUserRolesRequest::setCreatedAssignedUserRoles(const QList<OAIAssignedUserRole> &created_assigned_user_roles) {
    m_created_assigned_user_roles = created_assigned_user_roles;
    m_created_assigned_user_roles_isSet = true;
}

bool OAIBulkEditAssignedUserRolesRequest::is_created_assigned_user_roles_Set() const{
    return m_created_assigned_user_roles_isSet;
}

bool OAIBulkEditAssignedUserRolesRequest::is_created_assigned_user_roles_Valid() const{
    return m_created_assigned_user_roles_isValid;
}

QList<QString> OAIBulkEditAssignedUserRolesRequest::getDeletedAssignedUserRoles() const {
    return m_deleted_assigned_user_roles;
}
void OAIBulkEditAssignedUserRolesRequest::setDeletedAssignedUserRoles(const QList<QString> &deleted_assigned_user_roles) {
    m_deleted_assigned_user_roles = deleted_assigned_user_roles;
    m_deleted_assigned_user_roles_isSet = true;
}

bool OAIBulkEditAssignedUserRolesRequest::is_deleted_assigned_user_roles_Set() const{
    return m_deleted_assigned_user_roles_isSet;
}

bool OAIBulkEditAssignedUserRolesRequest::is_deleted_assigned_user_roles_Valid() const{
    return m_deleted_assigned_user_roles_isValid;
}

bool OAIBulkEditAssignedUserRolesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_assigned_user_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_assigned_user_roles.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkEditAssignedUserRolesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
