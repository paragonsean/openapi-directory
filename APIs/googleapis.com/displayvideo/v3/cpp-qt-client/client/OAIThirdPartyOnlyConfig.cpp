/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIThirdPartyOnlyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIThirdPartyOnlyConfig::OAIThirdPartyOnlyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIThirdPartyOnlyConfig::OAIThirdPartyOnlyConfig() {
    this->initializeModel();
}

OAIThirdPartyOnlyConfig::~OAIThirdPartyOnlyConfig() {}

void OAIThirdPartyOnlyConfig::initializeModel() {

    m_pixel_order_id_reporting_enabled_isSet = false;
    m_pixel_order_id_reporting_enabled_isValid = false;
}

void OAIThirdPartyOnlyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIThirdPartyOnlyConfig::fromJsonObject(QJsonObject json) {

    m_pixel_order_id_reporting_enabled_isValid = ::OpenAPI::fromJsonValue(m_pixel_order_id_reporting_enabled, json[QString("pixelOrderIdReportingEnabled")]);
    m_pixel_order_id_reporting_enabled_isSet = !json[QString("pixelOrderIdReportingEnabled")].isNull() && m_pixel_order_id_reporting_enabled_isValid;
}

QString OAIThirdPartyOnlyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIThirdPartyOnlyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_pixel_order_id_reporting_enabled_isSet) {
        obj.insert(QString("pixelOrderIdReportingEnabled"), ::OpenAPI::toJsonValue(m_pixel_order_id_reporting_enabled));
    }
    return obj;
}

bool OAIThirdPartyOnlyConfig::isPixelOrderIdReportingEnabled() const {
    return m_pixel_order_id_reporting_enabled;
}
void OAIThirdPartyOnlyConfig::setPixelOrderIdReportingEnabled(const bool &pixel_order_id_reporting_enabled) {
    m_pixel_order_id_reporting_enabled = pixel_order_id_reporting_enabled;
    m_pixel_order_id_reporting_enabled_isSet = true;
}

bool OAIThirdPartyOnlyConfig::is_pixel_order_id_reporting_enabled_Set() const{
    return m_pixel_order_id_reporting_enabled_isSet;
}

bool OAIThirdPartyOnlyConfig::is_pixel_order_id_reporting_enabled_Valid() const{
    return m_pixel_order_id_reporting_enabled_isValid;
}

bool OAIThirdPartyOnlyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pixel_order_id_reporting_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIThirdPartyOnlyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
