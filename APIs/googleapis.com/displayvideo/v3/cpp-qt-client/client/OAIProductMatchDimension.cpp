/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductMatchDimension.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductMatchDimension::OAIProductMatchDimension(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductMatchDimension::OAIProductMatchDimension() {
    this->initializeModel();
}

OAIProductMatchDimension::~OAIProductMatchDimension() {}

void OAIProductMatchDimension::initializeModel() {

    m_custom_label_isSet = false;
    m_custom_label_isValid = false;

    m_product_offer_id_isSet = false;
    m_product_offer_id_isValid = false;
}

void OAIProductMatchDimension::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductMatchDimension::fromJsonObject(QJsonObject json) {

    m_custom_label_isValid = ::OpenAPI::fromJsonValue(m_custom_label, json[QString("customLabel")]);
    m_custom_label_isSet = !json[QString("customLabel")].isNull() && m_custom_label_isValid;

    m_product_offer_id_isValid = ::OpenAPI::fromJsonValue(m_product_offer_id, json[QString("productOfferId")]);
    m_product_offer_id_isSet = !json[QString("productOfferId")].isNull() && m_product_offer_id_isValid;
}

QString OAIProductMatchDimension::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductMatchDimension::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_label.isSet()) {
        obj.insert(QString("customLabel"), ::OpenAPI::toJsonValue(m_custom_label));
    }
    if (m_product_offer_id_isSet) {
        obj.insert(QString("productOfferId"), ::OpenAPI::toJsonValue(m_product_offer_id));
    }
    return obj;
}

OAICustomLabel OAIProductMatchDimension::getCustomLabel() const {
    return m_custom_label;
}
void OAIProductMatchDimension::setCustomLabel(const OAICustomLabel &custom_label) {
    m_custom_label = custom_label;
    m_custom_label_isSet = true;
}

bool OAIProductMatchDimension::is_custom_label_Set() const{
    return m_custom_label_isSet;
}

bool OAIProductMatchDimension::is_custom_label_Valid() const{
    return m_custom_label_isValid;
}

QString OAIProductMatchDimension::getProductOfferId() const {
    return m_product_offer_id;
}
void OAIProductMatchDimension::setProductOfferId(const QString &product_offer_id) {
    m_product_offer_id = product_offer_id;
    m_product_offer_id_isSet = true;
}

bool OAIProductMatchDimension::is_product_offer_id_Set() const{
    return m_product_offer_id_isSet;
}

bool OAIProductMatchDimension::is_product_offer_id_Valid() const{
    return m_product_offer_id_isValid;
}

bool OAIProductMatchDimension::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_label.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_offer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductMatchDimension::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
