/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILineItemBudget.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILineItemBudget::OAILineItemBudget(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILineItemBudget::OAILineItemBudget() {
    this->initializeModel();
}

OAILineItemBudget::~OAILineItemBudget() {}

void OAILineItemBudget::initializeModel() {

    m_budget_allocation_type_isSet = false;
    m_budget_allocation_type_isValid = false;

    m_budget_unit_isSet = false;
    m_budget_unit_isValid = false;

    m_max_amount_isSet = false;
    m_max_amount_isValid = false;
}

void OAILineItemBudget::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILineItemBudget::fromJsonObject(QJsonObject json) {

    m_budget_allocation_type_isValid = ::OpenAPI::fromJsonValue(m_budget_allocation_type, json[QString("budgetAllocationType")]);
    m_budget_allocation_type_isSet = !json[QString("budgetAllocationType")].isNull() && m_budget_allocation_type_isValid;

    m_budget_unit_isValid = ::OpenAPI::fromJsonValue(m_budget_unit, json[QString("budgetUnit")]);
    m_budget_unit_isSet = !json[QString("budgetUnit")].isNull() && m_budget_unit_isValid;

    m_max_amount_isValid = ::OpenAPI::fromJsonValue(m_max_amount, json[QString("maxAmount")]);
    m_max_amount_isSet = !json[QString("maxAmount")].isNull() && m_max_amount_isValid;
}

QString OAILineItemBudget::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILineItemBudget::asJsonObject() const {
    QJsonObject obj;
    if (m_budget_allocation_type_isSet) {
        obj.insert(QString("budgetAllocationType"), ::OpenAPI::toJsonValue(m_budget_allocation_type));
    }
    if (m_budget_unit_isSet) {
        obj.insert(QString("budgetUnit"), ::OpenAPI::toJsonValue(m_budget_unit));
    }
    if (m_max_amount_isSet) {
        obj.insert(QString("maxAmount"), ::OpenAPI::toJsonValue(m_max_amount));
    }
    return obj;
}

QString OAILineItemBudget::getBudgetAllocationType() const {
    return m_budget_allocation_type;
}
void OAILineItemBudget::setBudgetAllocationType(const QString &budget_allocation_type) {
    m_budget_allocation_type = budget_allocation_type;
    m_budget_allocation_type_isSet = true;
}

bool OAILineItemBudget::is_budget_allocation_type_Set() const{
    return m_budget_allocation_type_isSet;
}

bool OAILineItemBudget::is_budget_allocation_type_Valid() const{
    return m_budget_allocation_type_isValid;
}

QString OAILineItemBudget::getBudgetUnit() const {
    return m_budget_unit;
}
void OAILineItemBudget::setBudgetUnit(const QString &budget_unit) {
    m_budget_unit = budget_unit;
    m_budget_unit_isSet = true;
}

bool OAILineItemBudget::is_budget_unit_Set() const{
    return m_budget_unit_isSet;
}

bool OAILineItemBudget::is_budget_unit_Valid() const{
    return m_budget_unit_isValid;
}

QString OAILineItemBudget::getMaxAmount() const {
    return m_max_amount;
}
void OAILineItemBudget::setMaxAmount(const QString &max_amount) {
    m_max_amount = max_amount;
    m_max_amount_isSet = true;
}

bool OAILineItemBudget::is_max_amount_Set() const{
    return m_max_amount_isSet;
}

bool OAILineItemBudget::is_max_amount_Valid() const{
    return m_max_amount_isValid;
}

bool OAILineItemBudget::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_budget_allocation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILineItemBudget::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
