/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISensitiveCategoryAssignedTargetingOptionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISensitiveCategoryAssignedTargetingOptionDetails::OAISensitiveCategoryAssignedTargetingOptionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISensitiveCategoryAssignedTargetingOptionDetails::OAISensitiveCategoryAssignedTargetingOptionDetails() {
    this->initializeModel();
}

OAISensitiveCategoryAssignedTargetingOptionDetails::~OAISensitiveCategoryAssignedTargetingOptionDetails() {}

void OAISensitiveCategoryAssignedTargetingOptionDetails::initializeModel() {

    m_excluded_sensitive_category_isSet = false;
    m_excluded_sensitive_category_isValid = false;
}

void OAISensitiveCategoryAssignedTargetingOptionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISensitiveCategoryAssignedTargetingOptionDetails::fromJsonObject(QJsonObject json) {

    m_excluded_sensitive_category_isValid = ::OpenAPI::fromJsonValue(m_excluded_sensitive_category, json[QString("excludedSensitiveCategory")]);
    m_excluded_sensitive_category_isSet = !json[QString("excludedSensitiveCategory")].isNull() && m_excluded_sensitive_category_isValid;
}

QString OAISensitiveCategoryAssignedTargetingOptionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISensitiveCategoryAssignedTargetingOptionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_excluded_sensitive_category_isSet) {
        obj.insert(QString("excludedSensitiveCategory"), ::OpenAPI::toJsonValue(m_excluded_sensitive_category));
    }
    return obj;
}

QString OAISensitiveCategoryAssignedTargetingOptionDetails::getExcludedSensitiveCategory() const {
    return m_excluded_sensitive_category;
}
void OAISensitiveCategoryAssignedTargetingOptionDetails::setExcludedSensitiveCategory(const QString &excluded_sensitive_category) {
    m_excluded_sensitive_category = excluded_sensitive_category;
    m_excluded_sensitive_category_isSet = true;
}

bool OAISensitiveCategoryAssignedTargetingOptionDetails::is_excluded_sensitive_category_Set() const{
    return m_excluded_sensitive_category_isSet;
}

bool OAISensitiveCategoryAssignedTargetingOptionDetails::is_excluded_sensitive_category_Valid() const{
    return m_excluded_sensitive_category_isValid;
}

bool OAISensitiveCategoryAssignedTargetingOptionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_excluded_sensitive_category_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISensitiveCategoryAssignedTargetingOptionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
