/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvertiserGeneralConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvertiserGeneralConfig::OAIAdvertiserGeneralConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvertiserGeneralConfig::OAIAdvertiserGeneralConfig() {
    this->initializeModel();
}

OAIAdvertiserGeneralConfig::~OAIAdvertiserGeneralConfig() {}

void OAIAdvertiserGeneralConfig::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_domain_url_isSet = false;
    m_domain_url_isValid = false;

    m_time_zone_isSet = false;
    m_time_zone_isValid = false;
}

void OAIAdvertiserGeneralConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvertiserGeneralConfig::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_domain_url_isValid = ::OpenAPI::fromJsonValue(m_domain_url, json[QString("domainUrl")]);
    m_domain_url_isSet = !json[QString("domainUrl")].isNull() && m_domain_url_isValid;

    m_time_zone_isValid = ::OpenAPI::fromJsonValue(m_time_zone, json[QString("timeZone")]);
    m_time_zone_isSet = !json[QString("timeZone")].isNull() && m_time_zone_isValid;
}

QString OAIAdvertiserGeneralConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvertiserGeneralConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_domain_url_isSet) {
        obj.insert(QString("domainUrl"), ::OpenAPI::toJsonValue(m_domain_url));
    }
    if (m_time_zone_isSet) {
        obj.insert(QString("timeZone"), ::OpenAPI::toJsonValue(m_time_zone));
    }
    return obj;
}

QString OAIAdvertiserGeneralConfig::getCurrencyCode() const {
    return m_currency_code;
}
void OAIAdvertiserGeneralConfig::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIAdvertiserGeneralConfig::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIAdvertiserGeneralConfig::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIAdvertiserGeneralConfig::getDomainUrl() const {
    return m_domain_url;
}
void OAIAdvertiserGeneralConfig::setDomainUrl(const QString &domain_url) {
    m_domain_url = domain_url;
    m_domain_url_isSet = true;
}

bool OAIAdvertiserGeneralConfig::is_domain_url_Set() const{
    return m_domain_url_isSet;
}

bool OAIAdvertiserGeneralConfig::is_domain_url_Valid() const{
    return m_domain_url_isValid;
}

QString OAIAdvertiserGeneralConfig::getTimeZone() const {
    return m_time_zone;
}
void OAIAdvertiserGeneralConfig::setTimeZone(const QString &time_zone) {
    m_time_zone = time_zone;
    m_time_zone_isSet = true;
}

bool OAIAdvertiserGeneralConfig::is_time_zone_Set() const{
    return m_time_zone_isSet;
}

bool OAIAdvertiserGeneralConfig::is_time_zone_Valid() const{
    return m_time_zone_isValid;
}

bool OAIAdvertiserGeneralConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvertiserGeneralConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
