/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdGroup::OAIAdGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdGroup::OAIAdGroup() {
    this->initializeModel();
}

OAIAdGroup::~OAIAdGroup() {}

void OAIAdGroup::initializeModel() {

    m_ad_group_format_isSet = false;
    m_ad_group_format_isValid = false;

    m_ad_group_id_isSet = false;
    m_ad_group_id_isValid = false;

    m_advertiser_id_isSet = false;
    m_advertiser_id_isValid = false;

    m_bid_strategy_isSet = false;
    m_bid_strategy_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_entity_status_isSet = false;
    m_entity_status_isValid = false;

    m_line_item_id_isSet = false;
    m_line_item_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_product_feed_data_isSet = false;
    m_product_feed_data_isValid = false;

    m_targeting_expansion_isSet = false;
    m_targeting_expansion_isValid = false;
}

void OAIAdGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdGroup::fromJsonObject(QJsonObject json) {

    m_ad_group_format_isValid = ::OpenAPI::fromJsonValue(m_ad_group_format, json[QString("adGroupFormat")]);
    m_ad_group_format_isSet = !json[QString("adGroupFormat")].isNull() && m_ad_group_format_isValid;

    m_ad_group_id_isValid = ::OpenAPI::fromJsonValue(m_ad_group_id, json[QString("adGroupId")]);
    m_ad_group_id_isSet = !json[QString("adGroupId")].isNull() && m_ad_group_id_isValid;

    m_advertiser_id_isValid = ::OpenAPI::fromJsonValue(m_advertiser_id, json[QString("advertiserId")]);
    m_advertiser_id_isSet = !json[QString("advertiserId")].isNull() && m_advertiser_id_isValid;

    m_bid_strategy_isValid = ::OpenAPI::fromJsonValue(m_bid_strategy, json[QString("bidStrategy")]);
    m_bid_strategy_isSet = !json[QString("bidStrategy")].isNull() && m_bid_strategy_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_entity_status_isValid = ::OpenAPI::fromJsonValue(m_entity_status, json[QString("entityStatus")]);
    m_entity_status_isSet = !json[QString("entityStatus")].isNull() && m_entity_status_isValid;

    m_line_item_id_isValid = ::OpenAPI::fromJsonValue(m_line_item_id, json[QString("lineItemId")]);
    m_line_item_id_isSet = !json[QString("lineItemId")].isNull() && m_line_item_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_product_feed_data_isValid = ::OpenAPI::fromJsonValue(m_product_feed_data, json[QString("productFeedData")]);
    m_product_feed_data_isSet = !json[QString("productFeedData")].isNull() && m_product_feed_data_isValid;

    m_targeting_expansion_isValid = ::OpenAPI::fromJsonValue(m_targeting_expansion, json[QString("targetingExpansion")]);
    m_targeting_expansion_isSet = !json[QString("targetingExpansion")].isNull() && m_targeting_expansion_isValid;
}

QString OAIAdGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_group_format_isSet) {
        obj.insert(QString("adGroupFormat"), ::OpenAPI::toJsonValue(m_ad_group_format));
    }
    if (m_ad_group_id_isSet) {
        obj.insert(QString("adGroupId"), ::OpenAPI::toJsonValue(m_ad_group_id));
    }
    if (m_advertiser_id_isSet) {
        obj.insert(QString("advertiserId"), ::OpenAPI::toJsonValue(m_advertiser_id));
    }
    if (m_bid_strategy.isSet()) {
        obj.insert(QString("bidStrategy"), ::OpenAPI::toJsonValue(m_bid_strategy));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_entity_status_isSet) {
        obj.insert(QString("entityStatus"), ::OpenAPI::toJsonValue(m_entity_status));
    }
    if (m_line_item_id_isSet) {
        obj.insert(QString("lineItemId"), ::OpenAPI::toJsonValue(m_line_item_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_product_feed_data.isSet()) {
        obj.insert(QString("productFeedData"), ::OpenAPI::toJsonValue(m_product_feed_data));
    }
    if (m_targeting_expansion.isSet()) {
        obj.insert(QString("targetingExpansion"), ::OpenAPI::toJsonValue(m_targeting_expansion));
    }
    return obj;
}

QString OAIAdGroup::getAdGroupFormat() const {
    return m_ad_group_format;
}
void OAIAdGroup::setAdGroupFormat(const QString &ad_group_format) {
    m_ad_group_format = ad_group_format;
    m_ad_group_format_isSet = true;
}

bool OAIAdGroup::is_ad_group_format_Set() const{
    return m_ad_group_format_isSet;
}

bool OAIAdGroup::is_ad_group_format_Valid() const{
    return m_ad_group_format_isValid;
}

QString OAIAdGroup::getAdGroupId() const {
    return m_ad_group_id;
}
void OAIAdGroup::setAdGroupId(const QString &ad_group_id) {
    m_ad_group_id = ad_group_id;
    m_ad_group_id_isSet = true;
}

bool OAIAdGroup::is_ad_group_id_Set() const{
    return m_ad_group_id_isSet;
}

bool OAIAdGroup::is_ad_group_id_Valid() const{
    return m_ad_group_id_isValid;
}

QString OAIAdGroup::getAdvertiserId() const {
    return m_advertiser_id;
}
void OAIAdGroup::setAdvertiserId(const QString &advertiser_id) {
    m_advertiser_id = advertiser_id;
    m_advertiser_id_isSet = true;
}

bool OAIAdGroup::is_advertiser_id_Set() const{
    return m_advertiser_id_isSet;
}

bool OAIAdGroup::is_advertiser_id_Valid() const{
    return m_advertiser_id_isValid;
}

OAIBiddingStrategy OAIAdGroup::getBidStrategy() const {
    return m_bid_strategy;
}
void OAIAdGroup::setBidStrategy(const OAIBiddingStrategy &bid_strategy) {
    m_bid_strategy = bid_strategy;
    m_bid_strategy_isSet = true;
}

bool OAIAdGroup::is_bid_strategy_Set() const{
    return m_bid_strategy_isSet;
}

bool OAIAdGroup::is_bid_strategy_Valid() const{
    return m_bid_strategy_isValid;
}

QString OAIAdGroup::getDisplayName() const {
    return m_display_name;
}
void OAIAdGroup::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIAdGroup::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIAdGroup::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIAdGroup::getEntityStatus() const {
    return m_entity_status;
}
void OAIAdGroup::setEntityStatus(const QString &entity_status) {
    m_entity_status = entity_status;
    m_entity_status_isSet = true;
}

bool OAIAdGroup::is_entity_status_Set() const{
    return m_entity_status_isSet;
}

bool OAIAdGroup::is_entity_status_Valid() const{
    return m_entity_status_isValid;
}

QString OAIAdGroup::getLineItemId() const {
    return m_line_item_id;
}
void OAIAdGroup::setLineItemId(const QString &line_item_id) {
    m_line_item_id = line_item_id;
    m_line_item_id_isSet = true;
}

bool OAIAdGroup::is_line_item_id_Set() const{
    return m_line_item_id_isSet;
}

bool OAIAdGroup::is_line_item_id_Valid() const{
    return m_line_item_id_isValid;
}

QString OAIAdGroup::getName() const {
    return m_name;
}
void OAIAdGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAdGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAdGroup::is_name_Valid() const{
    return m_name_isValid;
}

OAIProductFeedData OAIAdGroup::getProductFeedData() const {
    return m_product_feed_data;
}
void OAIAdGroup::setProductFeedData(const OAIProductFeedData &product_feed_data) {
    m_product_feed_data = product_feed_data;
    m_product_feed_data_isSet = true;
}

bool OAIAdGroup::is_product_feed_data_Set() const{
    return m_product_feed_data_isSet;
}

bool OAIAdGroup::is_product_feed_data_Valid() const{
    return m_product_feed_data_isValid;
}

OAITargetingExpansionConfig OAIAdGroup::getTargetingExpansion() const {
    return m_targeting_expansion;
}
void OAIAdGroup::setTargetingExpansion(const OAITargetingExpansionConfig &targeting_expansion) {
    m_targeting_expansion = targeting_expansion;
    m_targeting_expansion_isSet = true;
}

bool OAIAdGroup::is_targeting_expansion_Set() const{
    return m_targeting_expansion_isSet;
}

bool OAIAdGroup::is_targeting_expansion_Valid() const{
    return m_targeting_expansion_isValid;
}

bool OAIAdGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_group_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ad_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_advertiser_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bid_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_feed_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_expansion.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
