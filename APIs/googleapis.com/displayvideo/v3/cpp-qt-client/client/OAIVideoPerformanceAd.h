/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoPerformanceAd.h
 *
 * Details for a video performance ad.
 */

#ifndef OAIVideoPerformanceAd_H
#define OAIVideoPerformanceAd_H

#include <QJsonObject>

#include "OAIImageAsset.h"
#include "OAIYoutubeVideoDetails.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageAsset;
class OAIYoutubeVideoDetails;

class OAIVideoPerformanceAd : public OAIObject {
public:
    OAIVideoPerformanceAd();
    OAIVideoPerformanceAd(QString json);
    ~OAIVideoPerformanceAd() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getActionButtonLabels() const;
    void setActionButtonLabels(const QList<QString> &action_button_labels);
    bool is_action_button_labels_Set() const;
    bool is_action_button_labels_Valid() const;

    QList<OAIImageAsset> getCompanionBanners() const;
    void setCompanionBanners(const QList<OAIImageAsset> &companion_banners);
    bool is_companion_banners_Set() const;
    bool is_companion_banners_Valid() const;

    QMap<QString, QString> getCustomParameters() const;
    void setCustomParameters(const QMap<QString, QString> &custom_parameters);
    bool is_custom_parameters_Set() const;
    bool is_custom_parameters_Valid() const;

    QList<QString> getDescriptions() const;
    void setDescriptions(const QList<QString> &descriptions);
    bool is_descriptions_Set() const;
    bool is_descriptions_Valid() const;

    QString getDisplayUrlBreadcrumb1() const;
    void setDisplayUrlBreadcrumb1(const QString &display_url_breadcrumb1);
    bool is_display_url_breadcrumb1_Set() const;
    bool is_display_url_breadcrumb1_Valid() const;

    QString getDisplayUrlBreadcrumb2() const;
    void setDisplayUrlBreadcrumb2(const QString &display_url_breadcrumb2);
    bool is_display_url_breadcrumb2_Set() const;
    bool is_display_url_breadcrumb2_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getFinalUrl() const;
    void setFinalUrl(const QString &final_url);
    bool is_final_url_Set() const;
    bool is_final_url_Valid() const;

    QList<QString> getHeadlines() const;
    void setHeadlines(const QList<QString> &headlines);
    bool is_headlines_Set() const;
    bool is_headlines_Valid() const;

    QList<QString> getLongHeadlines() const;
    void setLongHeadlines(const QList<QString> &long_headlines);
    bool is_long_headlines_Set() const;
    bool is_long_headlines_Valid() const;

    QString getTrackingUrl() const;
    void setTrackingUrl(const QString &tracking_url);
    bool is_tracking_url_Set() const;
    bool is_tracking_url_Valid() const;

    QList<OAIYoutubeVideoDetails> getVideos() const;
    void setVideos(const QList<OAIYoutubeVideoDetails> &videos);
    bool is_videos_Set() const;
    bool is_videos_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_action_button_labels;
    bool m_action_button_labels_isSet;
    bool m_action_button_labels_isValid;

    QList<OAIImageAsset> m_companion_banners;
    bool m_companion_banners_isSet;
    bool m_companion_banners_isValid;

    QMap<QString, QString> m_custom_parameters;
    bool m_custom_parameters_isSet;
    bool m_custom_parameters_isValid;

    QList<QString> m_descriptions;
    bool m_descriptions_isSet;
    bool m_descriptions_isValid;

    QString m_display_url_breadcrumb1;
    bool m_display_url_breadcrumb1_isSet;
    bool m_display_url_breadcrumb1_isValid;

    QString m_display_url_breadcrumb2;
    bool m_display_url_breadcrumb2_isSet;
    bool m_display_url_breadcrumb2_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_final_url;
    bool m_final_url_isSet;
    bool m_final_url_isValid;

    QList<QString> m_headlines;
    bool m_headlines_isSet;
    bool m_headlines_isValid;

    QList<QString> m_long_headlines;
    bool m_long_headlines_isSet;
    bool m_long_headlines_isValid;

    QString m_tracking_url;
    bool m_tracking_url_isSet;
    bool m_tracking_url_isValid;

    QList<OAIYoutubeVideoDetails> m_videos;
    bool m_videos_isSet;
    bool m_videos_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoPerformanceAd)

#endif // OAIVideoPerformanceAd_H
