/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlgorithmRulesSignalComparison.h
 *
 * A single comparison. The comparison compares the &#x60;signal&#x60; to the &#x60;comparisonValue&#x60;. The comparison of &#x60;siteId&#x3D;&#x3D;123&#x60; is represented with the following field values: * &#x60;signal&#x60; has an &#x60;impressionSignal&#x60; of &#x60;SITE_ID&#x60;. * &#x60;comparisonOperator&#x60; is set to &#x60;EQUAL&#x60;. * &#x60;comparisonValue&#x60; is set to 123.
 */

#ifndef OAIAlgorithmRulesSignalComparison_H
#define OAIAlgorithmRulesSignalComparison_H

#include <QJsonObject>

#include "OAIAlgorithmRulesComparisonValue.h"
#include "OAIAlgorithmRulesSignal.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlgorithmRulesComparisonValue;
class OAIAlgorithmRulesSignal;

class OAIAlgorithmRulesSignalComparison : public OAIObject {
public:
    OAIAlgorithmRulesSignalComparison();
    OAIAlgorithmRulesSignalComparison(QString json);
    ~OAIAlgorithmRulesSignalComparison() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComparisonOperator() const;
    void setComparisonOperator(const QString &comparison_operator);
    bool is_comparison_operator_Set() const;
    bool is_comparison_operator_Valid() const;

    OAIAlgorithmRulesComparisonValue getComparisonValue() const;
    void setComparisonValue(const OAIAlgorithmRulesComparisonValue &comparison_value);
    bool is_comparison_value_Set() const;
    bool is_comparison_value_Valid() const;

    OAIAlgorithmRulesSignal getSignal() const;
    void setSignal(const OAIAlgorithmRulesSignal &signal);
    bool is_signal_Set() const;
    bool is_signal_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comparison_operator;
    bool m_comparison_operator_isSet;
    bool m_comparison_operator_isValid;

    OAIAlgorithmRulesComparisonValue m_comparison_value;
    bool m_comparison_value_isSet;
    bool m_comparison_value_isValid;

    OAIAlgorithmRulesSignal m_signal;
    bool m_signal_isSet;
    bool m_signal_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlgorithmRulesSignalComparison)

#endif // OAIAlgorithmRulesSignalComparison_H
