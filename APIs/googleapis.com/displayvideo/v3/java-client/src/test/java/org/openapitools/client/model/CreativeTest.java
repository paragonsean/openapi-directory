/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AssetAssociation;
import org.openapitools.client.model.AudioVideoOffset;
import org.openapitools.client.model.CmTrackingAd;
import org.openapitools.client.model.CounterEvent;
import org.openapitools.client.model.Dimensions;
import org.openapitools.client.model.ExitEvent;
import org.openapitools.client.model.ObaIcon;
import org.openapitools.client.model.ReviewStatusInfo;
import org.openapitools.client.model.ThirdPartyUrl;
import org.openapitools.client.model.TimerEvent;
import org.openapitools.client.model.Transcode;
import org.openapitools.client.model.UniversalAdId;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Creative
 */
public class CreativeTest {
    private final Creative model = new Creative();

    /**
     * Model tests for Creative
     */
    @Test
    public void testCreative() {
        // TODO: test Creative
    }

    /**
     * Test the property 'additionalDimensions'
     */
    @Test
    public void additionalDimensionsTest() {
        // TODO: test additionalDimensions
    }

    /**
     * Test the property 'advertiserId'
     */
    @Test
    public void advertiserIdTest() {
        // TODO: test advertiserId
    }

    /**
     * Test the property 'appendedTag'
     */
    @Test
    public void appendedTagTest() {
        // TODO: test appendedTag
    }

    /**
     * Test the property 'assets'
     */
    @Test
    public void assetsTest() {
        // TODO: test assets
    }

    /**
     * Test the property 'cmPlacementId'
     */
    @Test
    public void cmPlacementIdTest() {
        // TODO: test cmPlacementId
    }

    /**
     * Test the property 'cmTrackingAd'
     */
    @Test
    public void cmTrackingAdTest() {
        // TODO: test cmTrackingAd
    }

    /**
     * Test the property 'companionCreativeIds'
     */
    @Test
    public void companionCreativeIdsTest() {
        // TODO: test companionCreativeIds
    }

    /**
     * Test the property 'counterEvents'
     */
    @Test
    public void counterEventsTest() {
        // TODO: test counterEvents
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'creativeAttributes'
     */
    @Test
    public void creativeAttributesTest() {
        // TODO: test creativeAttributes
    }

    /**
     * Test the property 'creativeId'
     */
    @Test
    public void creativeIdTest() {
        // TODO: test creativeId
    }

    /**
     * Test the property 'creativeType'
     */
    @Test
    public void creativeTypeTest() {
        // TODO: test creativeType
    }

    /**
     * Test the property 'dimensions'
     */
    @Test
    public void dimensionsTest() {
        // TODO: test dimensions
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'dynamic'
     */
    @Test
    public void dynamicTest() {
        // TODO: test dynamic
    }

    /**
     * Test the property 'entityStatus'
     */
    @Test
    public void entityStatusTest() {
        // TODO: test entityStatus
    }

    /**
     * Test the property 'exitEvents'
     */
    @Test
    public void exitEventsTest() {
        // TODO: test exitEvents
    }

    /**
     * Test the property 'expandOnHover'
     */
    @Test
    public void expandOnHoverTest() {
        // TODO: test expandOnHover
    }

    /**
     * Test the property 'expandingDirection'
     */
    @Test
    public void expandingDirectionTest() {
        // TODO: test expandingDirection
    }

    /**
     * Test the property 'hostingSource'
     */
    @Test
    public void hostingSourceTest() {
        // TODO: test hostingSource
    }

    /**
     * Test the property 'html5Video'
     */
    @Test
    public void html5VideoTest() {
        // TODO: test html5Video
    }

    /**
     * Test the property 'iasCampaignMonitoring'
     */
    @Test
    public void iasCampaignMonitoringTest() {
        // TODO: test iasCampaignMonitoring
    }

    /**
     * Test the property 'integrationCode'
     */
    @Test
    public void integrationCodeTest() {
        // TODO: test integrationCode
    }

    /**
     * Test the property 'jsTrackerUrl'
     */
    @Test
    public void jsTrackerUrlTest() {
        // TODO: test jsTrackerUrl
    }

    /**
     * Test the property 'lineItemIds'
     */
    @Test
    public void lineItemIdsTest() {
        // TODO: test lineItemIds
    }

    /**
     * Test the property 'mediaDuration'
     */
    @Test
    public void mediaDurationTest() {
        // TODO: test mediaDuration
    }

    /**
     * Test the property 'mp3Audio'
     */
    @Test
    public void mp3AudioTest() {
        // TODO: test mp3Audio
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'obaIcon'
     */
    @Test
    public void obaIconTest() {
        // TODO: test obaIcon
    }

    /**
     * Test the property 'oggAudio'
     */
    @Test
    public void oggAudioTest() {
        // TODO: test oggAudio
    }

    /**
     * Test the property 'progressOffset'
     */
    @Test
    public void progressOffsetTest() {
        // TODO: test progressOffset
    }

    /**
     * Test the property 'requireHtml5'
     */
    @Test
    public void requireHtml5Test() {
        // TODO: test requireHtml5
    }

    /**
     * Test the property 'requireMraid'
     */
    @Test
    public void requireMraidTest() {
        // TODO: test requireMraid
    }

    /**
     * Test the property 'requirePingForAttribution'
     */
    @Test
    public void requirePingForAttributionTest() {
        // TODO: test requirePingForAttribution
    }

    /**
     * Test the property 'reviewStatus'
     */
    @Test
    public void reviewStatusTest() {
        // TODO: test reviewStatus
    }

    /**
     * Test the property 'skipOffset'
     */
    @Test
    public void skipOffsetTest() {
        // TODO: test skipOffset
    }

    /**
     * Test the property 'skippable'
     */
    @Test
    public void skippableTest() {
        // TODO: test skippable
    }

    /**
     * Test the property 'thirdPartyTag'
     */
    @Test
    public void thirdPartyTagTest() {
        // TODO: test thirdPartyTag
    }

    /**
     * Test the property 'thirdPartyUrls'
     */
    @Test
    public void thirdPartyUrlsTest() {
        // TODO: test thirdPartyUrls
    }

    /**
     * Test the property 'timerEvents'
     */
    @Test
    public void timerEventsTest() {
        // TODO: test timerEvents
    }

    /**
     * Test the property 'trackerUrls'
     */
    @Test
    public void trackerUrlsTest() {
        // TODO: test trackerUrls
    }

    /**
     * Test the property 'transcodes'
     */
    @Test
    public void transcodesTest() {
        // TODO: test transcodes
    }

    /**
     * Test the property 'universalAdId'
     */
    @Test
    public void universalAdIdTest() {
        // TODO: test universalAdId
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'vastTagUrl'
     */
    @Test
    public void vastTagUrlTest() {
        // TODO: test vastTagUrl
    }

    /**
     * Test the property 'vpaid'
     */
    @Test
    public void vpaidTest() {
        // TODO: test vpaid
    }

}
