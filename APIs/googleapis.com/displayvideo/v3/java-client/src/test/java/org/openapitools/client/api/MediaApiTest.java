/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleBytestreamMedia;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MediaApi
 */
@Disabled
public class MediaApiTest {

    private final MediaApi api = new MediaApi();

    /**
     * Downloads media. Download is supported on the URI &#x60;/download/{resource_name&#x3D;**}?alt&#x3D;media.&#x60; **Note**: Download requests will not be successful without including &#x60;alt&#x3D;media&#x60; query string.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoMediaDownloadTest() throws ApiException {
        String resourceName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleBytestreamMedia response = api.displayvideoMediaDownload(resourceName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Uploads media. Upload is supported on the URI &#x60;/upload/media/{resource_name&#x3D;**}?upload_type&#x3D;media.&#x60; **Note**: Upload requests will not be successful without including &#x60;upload_type&#x3D;media&#x60; query string.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoMediaUploadTest() throws ApiException {
        String resourceName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleBytestreamMedia googleBytestreamMedia = null;
        GoogleBytestreamMedia response = api.displayvideoMediaUpload(resourceName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleBytestreamMedia);
        // TODO: test validations
    }

}
