/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CustomBiddingAlgorithmRulesError;
import org.openapitools.client.model.CustomBiddingAlgorithmRulesRef;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single custom bidding algorithm rules.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:00.456843-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomBiddingAlgorithmRules {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_ID = "customBiddingAlgorithmId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_ID)
  private String customBiddingAlgorithmId;

  public static final String SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_RULES_ID = "customBiddingAlgorithmRulesId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_BIDDING_ALGORITHM_RULES_ID)
  private String customBiddingAlgorithmRulesId;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private CustomBiddingAlgorithmRulesError error;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private CustomBiddingAlgorithmRulesRef rules;

  /**
   * Output only. The state of the rules resource.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    ACCEPTED("ACCEPTED"),
    
    REJECTED("REJECTED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public CustomBiddingAlgorithmRules() {
  }

  public CustomBiddingAlgorithmRules(
     Boolean active, 
     String createTime, 
     String customBiddingAlgorithmId, 
     String customBiddingAlgorithmRulesId, 
     String name, 
     StateEnum state
  ) {
    this();
    this.active = active;
    this.createTime = createTime;
    this.customBiddingAlgorithmId = customBiddingAlgorithmId;
    this.customBiddingAlgorithmRulesId = customBiddingAlgorithmRulesId;
    this.name = name;
    this.state = state;
  }

  /**
   * Output only. Whether the rules resource is currently being used for scoring by the parent algorithm.
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }



  /**
   * Output only. The time when the rules resource was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. The unique ID of the custom bidding algorithm that the rules resource belongs to.
   * @return customBiddingAlgorithmId
   */
  @javax.annotation.Nullable
  public String getCustomBiddingAlgorithmId() {
    return customBiddingAlgorithmId;
  }



  /**
   * Output only. The unique ID of the rules resource.
   * @return customBiddingAlgorithmRulesId
   */
  @javax.annotation.Nullable
  public String getCustomBiddingAlgorithmRulesId() {
    return customBiddingAlgorithmRulesId;
  }



  public CustomBiddingAlgorithmRules error(CustomBiddingAlgorithmRulesError error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public CustomBiddingAlgorithmRulesError getError() {
    return error;
  }

  public void setError(CustomBiddingAlgorithmRulesError error) {
    this.error = error;
  }


  /**
   * Output only. The resource name of the rules resource.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public CustomBiddingAlgorithmRules rules(CustomBiddingAlgorithmRulesRef rules) {
    this.rules = rules;
    return this;
  }

  /**
   * Get rules
   * @return rules
   */
  @javax.annotation.Nullable
  public CustomBiddingAlgorithmRulesRef getRules() {
    return rules;
  }

  public void setRules(CustomBiddingAlgorithmRulesRef rules) {
    this.rules = rules;
  }


  /**
   * Output only. The state of the rules resource.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomBiddingAlgorithmRules customBiddingAlgorithmRules = (CustomBiddingAlgorithmRules) o;
    return Objects.equals(this.active, customBiddingAlgorithmRules.active) &&
        Objects.equals(this.createTime, customBiddingAlgorithmRules.createTime) &&
        Objects.equals(this.customBiddingAlgorithmId, customBiddingAlgorithmRules.customBiddingAlgorithmId) &&
        Objects.equals(this.customBiddingAlgorithmRulesId, customBiddingAlgorithmRules.customBiddingAlgorithmRulesId) &&
        Objects.equals(this.error, customBiddingAlgorithmRules.error) &&
        Objects.equals(this.name, customBiddingAlgorithmRules.name) &&
        Objects.equals(this.rules, customBiddingAlgorithmRules.rules) &&
        Objects.equals(this.state, customBiddingAlgorithmRules.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, createTime, customBiddingAlgorithmId, customBiddingAlgorithmRulesId, error, name, rules, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomBiddingAlgorithmRules {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    customBiddingAlgorithmId: ").append(toIndentedString(customBiddingAlgorithmId)).append("\n");
    sb.append("    customBiddingAlgorithmRulesId: ").append(toIndentedString(customBiddingAlgorithmRulesId)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("createTime");
    openapiFields.add("customBiddingAlgorithmId");
    openapiFields.add("customBiddingAlgorithmRulesId");
    openapiFields.add("error");
    openapiFields.add("name");
    openapiFields.add("rules");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomBiddingAlgorithmRules
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomBiddingAlgorithmRules.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomBiddingAlgorithmRules is not found in the empty JSON string", CustomBiddingAlgorithmRules.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomBiddingAlgorithmRules.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomBiddingAlgorithmRules` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("customBiddingAlgorithmId") != null && !jsonObj.get("customBiddingAlgorithmId").isJsonNull()) && !jsonObj.get("customBiddingAlgorithmId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customBiddingAlgorithmId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customBiddingAlgorithmId").toString()));
      }
      if ((jsonObj.get("customBiddingAlgorithmRulesId") != null && !jsonObj.get("customBiddingAlgorithmRulesId").isJsonNull()) && !jsonObj.get("customBiddingAlgorithmRulesId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customBiddingAlgorithmRulesId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customBiddingAlgorithmRulesId").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        CustomBiddingAlgorithmRulesError.validateJsonElement(jsonObj.get("error"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `rules`
      if (jsonObj.get("rules") != null && !jsonObj.get("rules").isJsonNull()) {
        CustomBiddingAlgorithmRulesRef.validateJsonElement(jsonObj.get("rules"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomBiddingAlgorithmRules.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomBiddingAlgorithmRules' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomBiddingAlgorithmRules> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomBiddingAlgorithmRules.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomBiddingAlgorithmRules>() {
           @Override
           public void write(JsonWriter out, CustomBiddingAlgorithmRules value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomBiddingAlgorithmRules read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomBiddingAlgorithmRules given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomBiddingAlgorithmRules
   * @throws IOException if the JSON string is invalid with respect to CustomBiddingAlgorithmRules
   */
  public static CustomBiddingAlgorithmRules fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomBiddingAlgorithmRules.class);
  }

  /**
   * Convert an instance of CustomBiddingAlgorithmRules to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

