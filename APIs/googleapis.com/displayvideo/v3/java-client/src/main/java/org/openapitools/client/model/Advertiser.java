/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AdvertiserAdServerConfig;
import org.openapitools.client.model.AdvertiserBillingConfig;
import org.openapitools.client.model.AdvertiserCreativeConfig;
import org.openapitools.client.model.AdvertiserDataAccessConfig;
import org.openapitools.client.model.AdvertiserGeneralConfig;
import org.openapitools.client.model.AdvertiserTargetingConfig;
import org.openapitools.client.model.IntegrationDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single advertiser in Display &amp; Video 360 (DV360).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:00.456843-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Advertiser {
  public static final String SERIALIZED_NAME_AD_SERVER_CONFIG = "adServerConfig";
  @SerializedName(SERIALIZED_NAME_AD_SERVER_CONFIG)
  private AdvertiserAdServerConfig adServerConfig;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_BILLING_CONFIG = "billingConfig";
  @SerializedName(SERIALIZED_NAME_BILLING_CONFIG)
  private AdvertiserBillingConfig billingConfig;

  public static final String SERIALIZED_NAME_CREATIVE_CONFIG = "creativeConfig";
  @SerializedName(SERIALIZED_NAME_CREATIVE_CONFIG)
  private AdvertiserCreativeConfig creativeConfig;

  public static final String SERIALIZED_NAME_DATA_ACCESS_CONFIG = "dataAccessConfig";
  @SerializedName(SERIALIZED_NAME_DATA_ACCESS_CONFIG)
  private AdvertiserDataAccessConfig dataAccessConfig;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  /**
   * Required. Controls whether or not insertion orders and line items of the advertiser can spend their budgets and bid on inventory. * Accepted values are &#x60;ENTITY_STATUS_ACTIVE&#x60;, &#x60;ENTITY_STATUS_PAUSED&#x60; and &#x60;ENTITY_STATUS_SCHEDULED_FOR_DELETION&#x60;. * If set to &#x60;ENTITY_STATUS_SCHEDULED_FOR_DELETION&#x60;, the advertiser will be deleted 30 days from when it was first scheduled for deletion.
   */
  @JsonAdapter(EntityStatusEnum.Adapter.class)
  public enum EntityStatusEnum {
    UNSPECIFIED("ENTITY_STATUS_UNSPECIFIED"),
    
    ACTIVE("ENTITY_STATUS_ACTIVE"),
    
    ARCHIVED("ENTITY_STATUS_ARCHIVED"),
    
    DRAFT("ENTITY_STATUS_DRAFT"),
    
    PAUSED("ENTITY_STATUS_PAUSED"),
    
    SCHEDULED_FOR_DELETION("ENTITY_STATUS_SCHEDULED_FOR_DELETION");

    private String value;

    EntityStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityStatusEnum fromValue(String value) {
      for (EntityStatusEnum b : EntityStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntityStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntityStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EntityStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENTITY_STATUS = "entityStatus";
  @SerializedName(SERIALIZED_NAME_ENTITY_STATUS)
  private EntityStatusEnum entityStatus;

  public static final String SERIALIZED_NAME_GENERAL_CONFIG = "generalConfig";
  @SerializedName(SERIALIZED_NAME_GENERAL_CONFIG)
  private AdvertiserGeneralConfig generalConfig;

  public static final String SERIALIZED_NAME_INTEGRATION_DETAILS = "integrationDetails";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_DETAILS)
  private IntegrationDetails integrationDetails;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARTNER_ID = "partnerId";
  @SerializedName(SERIALIZED_NAME_PARTNER_ID)
  private String partnerId;

  public static final String SERIALIZED_NAME_PRISMA_ENABLED = "prismaEnabled";
  @SerializedName(SERIALIZED_NAME_PRISMA_ENABLED)
  private Boolean prismaEnabled;

  public static final String SERIALIZED_NAME_SERVING_CONFIG = "servingConfig";
  @SerializedName(SERIALIZED_NAME_SERVING_CONFIG)
  private AdvertiserTargetingConfig servingConfig;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public Advertiser() {
  }

  public Advertiser(
     String advertiserId, 
     String name, 
     String updateTime
  ) {
    this();
    this.advertiserId = advertiserId;
    this.name = name;
    this.updateTime = updateTime;
  }

  public Advertiser adServerConfig(AdvertiserAdServerConfig adServerConfig) {
    this.adServerConfig = adServerConfig;
    return this;
  }

  /**
   * Get adServerConfig
   * @return adServerConfig
   */
  @javax.annotation.Nullable
  public AdvertiserAdServerConfig getAdServerConfig() {
    return adServerConfig;
  }

  public void setAdServerConfig(AdvertiserAdServerConfig adServerConfig) {
    this.adServerConfig = adServerConfig;
  }


  /**
   * Output only. The unique ID of the advertiser. Assigned by the system.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }



  public Advertiser billingConfig(AdvertiserBillingConfig billingConfig) {
    this.billingConfig = billingConfig;
    return this;
  }

  /**
   * Get billingConfig
   * @return billingConfig
   */
  @javax.annotation.Nullable
  public AdvertiserBillingConfig getBillingConfig() {
    return billingConfig;
  }

  public void setBillingConfig(AdvertiserBillingConfig billingConfig) {
    this.billingConfig = billingConfig;
  }


  public Advertiser creativeConfig(AdvertiserCreativeConfig creativeConfig) {
    this.creativeConfig = creativeConfig;
    return this;
  }

  /**
   * Get creativeConfig
   * @return creativeConfig
   */
  @javax.annotation.Nullable
  public AdvertiserCreativeConfig getCreativeConfig() {
    return creativeConfig;
  }

  public void setCreativeConfig(AdvertiserCreativeConfig creativeConfig) {
    this.creativeConfig = creativeConfig;
  }


  public Advertiser dataAccessConfig(AdvertiserDataAccessConfig dataAccessConfig) {
    this.dataAccessConfig = dataAccessConfig;
    return this;
  }

  /**
   * Get dataAccessConfig
   * @return dataAccessConfig
   */
  @javax.annotation.Nullable
  public AdvertiserDataAccessConfig getDataAccessConfig() {
    return dataAccessConfig;
  }

  public void setDataAccessConfig(AdvertiserDataAccessConfig dataAccessConfig) {
    this.dataAccessConfig = dataAccessConfig;
  }


  public Advertiser displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the advertiser. Must be UTF-8 encoded with a maximum size of 240 bytes.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Advertiser entityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
    return this;
  }

  /**
   * Required. Controls whether or not insertion orders and line items of the advertiser can spend their budgets and bid on inventory. * Accepted values are &#x60;ENTITY_STATUS_ACTIVE&#x60;, &#x60;ENTITY_STATUS_PAUSED&#x60; and &#x60;ENTITY_STATUS_SCHEDULED_FOR_DELETION&#x60;. * If set to &#x60;ENTITY_STATUS_SCHEDULED_FOR_DELETION&#x60;, the advertiser will be deleted 30 days from when it was first scheduled for deletion.
   * @return entityStatus
   */
  @javax.annotation.Nullable
  public EntityStatusEnum getEntityStatus() {
    return entityStatus;
  }

  public void setEntityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
  }


  public Advertiser generalConfig(AdvertiserGeneralConfig generalConfig) {
    this.generalConfig = generalConfig;
    return this;
  }

  /**
   * Get generalConfig
   * @return generalConfig
   */
  @javax.annotation.Nullable
  public AdvertiserGeneralConfig getGeneralConfig() {
    return generalConfig;
  }

  public void setGeneralConfig(AdvertiserGeneralConfig generalConfig) {
    this.generalConfig = generalConfig;
  }


  public Advertiser integrationDetails(IntegrationDetails integrationDetails) {
    this.integrationDetails = integrationDetails;
    return this;
  }

  /**
   * Get integrationDetails
   * @return integrationDetails
   */
  @javax.annotation.Nullable
  public IntegrationDetails getIntegrationDetails() {
    return integrationDetails;
  }

  public void setIntegrationDetails(IntegrationDetails integrationDetails) {
    this.integrationDetails = integrationDetails;
  }


  /**
   * Output only. The resource name of the advertiser.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public Advertiser partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

  /**
   * Required. Immutable. The unique ID of the partner that the advertiser belongs to.
   * @return partnerId
   */
  @javax.annotation.Nullable
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }


  public Advertiser prismaEnabled(Boolean prismaEnabled) {
    this.prismaEnabled = prismaEnabled;
    return this;
  }

  /**
   * Whether integration with Mediaocean (Prisma) is enabled. By enabling this, you agree to the following: On behalf of my company, I authorize Mediaocean (Prisma) to send budget segment plans to Google, and I authorize Google to send corresponding reporting and invoices from DV360 to Mediaocean for the purposes of budget planning, billing, and reconciliation for this advertiser.
   * @return prismaEnabled
   */
  @javax.annotation.Nullable
  public Boolean getPrismaEnabled() {
    return prismaEnabled;
  }

  public void setPrismaEnabled(Boolean prismaEnabled) {
    this.prismaEnabled = prismaEnabled;
  }


  public Advertiser servingConfig(AdvertiserTargetingConfig servingConfig) {
    this.servingConfig = servingConfig;
    return this;
  }

  /**
   * Get servingConfig
   * @return servingConfig
   */
  @javax.annotation.Nullable
  public AdvertiserTargetingConfig getServingConfig() {
    return servingConfig;
  }

  public void setServingConfig(AdvertiserTargetingConfig servingConfig) {
    this.servingConfig = servingConfig;
  }


  /**
   * Output only. The timestamp when the advertiser was last updated. Assigned by the system.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Advertiser advertiser = (Advertiser) o;
    return Objects.equals(this.adServerConfig, advertiser.adServerConfig) &&
        Objects.equals(this.advertiserId, advertiser.advertiserId) &&
        Objects.equals(this.billingConfig, advertiser.billingConfig) &&
        Objects.equals(this.creativeConfig, advertiser.creativeConfig) &&
        Objects.equals(this.dataAccessConfig, advertiser.dataAccessConfig) &&
        Objects.equals(this.displayName, advertiser.displayName) &&
        Objects.equals(this.entityStatus, advertiser.entityStatus) &&
        Objects.equals(this.generalConfig, advertiser.generalConfig) &&
        Objects.equals(this.integrationDetails, advertiser.integrationDetails) &&
        Objects.equals(this.name, advertiser.name) &&
        Objects.equals(this.partnerId, advertiser.partnerId) &&
        Objects.equals(this.prismaEnabled, advertiser.prismaEnabled) &&
        Objects.equals(this.servingConfig, advertiser.servingConfig) &&
        Objects.equals(this.updateTime, advertiser.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adServerConfig, advertiserId, billingConfig, creativeConfig, dataAccessConfig, displayName, entityStatus, generalConfig, integrationDetails, name, partnerId, prismaEnabled, servingConfig, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Advertiser {\n");
    sb.append("    adServerConfig: ").append(toIndentedString(adServerConfig)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    billingConfig: ").append(toIndentedString(billingConfig)).append("\n");
    sb.append("    creativeConfig: ").append(toIndentedString(creativeConfig)).append("\n");
    sb.append("    dataAccessConfig: ").append(toIndentedString(dataAccessConfig)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    entityStatus: ").append(toIndentedString(entityStatus)).append("\n");
    sb.append("    generalConfig: ").append(toIndentedString(generalConfig)).append("\n");
    sb.append("    integrationDetails: ").append(toIndentedString(integrationDetails)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    prismaEnabled: ").append(toIndentedString(prismaEnabled)).append("\n");
    sb.append("    servingConfig: ").append(toIndentedString(servingConfig)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adServerConfig");
    openapiFields.add("advertiserId");
    openapiFields.add("billingConfig");
    openapiFields.add("creativeConfig");
    openapiFields.add("dataAccessConfig");
    openapiFields.add("displayName");
    openapiFields.add("entityStatus");
    openapiFields.add("generalConfig");
    openapiFields.add("integrationDetails");
    openapiFields.add("name");
    openapiFields.add("partnerId");
    openapiFields.add("prismaEnabled");
    openapiFields.add("servingConfig");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Advertiser
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Advertiser.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Advertiser is not found in the empty JSON string", Advertiser.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Advertiser.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Advertiser` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `adServerConfig`
      if (jsonObj.get("adServerConfig") != null && !jsonObj.get("adServerConfig").isJsonNull()) {
        AdvertiserAdServerConfig.validateJsonElement(jsonObj.get("adServerConfig"));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `billingConfig`
      if (jsonObj.get("billingConfig") != null && !jsonObj.get("billingConfig").isJsonNull()) {
        AdvertiserBillingConfig.validateJsonElement(jsonObj.get("billingConfig"));
      }
      // validate the optional field `creativeConfig`
      if (jsonObj.get("creativeConfig") != null && !jsonObj.get("creativeConfig").isJsonNull()) {
        AdvertiserCreativeConfig.validateJsonElement(jsonObj.get("creativeConfig"));
      }
      // validate the optional field `dataAccessConfig`
      if (jsonObj.get("dataAccessConfig") != null && !jsonObj.get("dataAccessConfig").isJsonNull()) {
        AdvertiserDataAccessConfig.validateJsonElement(jsonObj.get("dataAccessConfig"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) && !jsonObj.get("entityStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityStatus").toString()));
      }
      // validate the optional field `entityStatus`
      if (jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) {
        EntityStatusEnum.validateJsonElement(jsonObj.get("entityStatus"));
      }
      // validate the optional field `generalConfig`
      if (jsonObj.get("generalConfig") != null && !jsonObj.get("generalConfig").isJsonNull()) {
        AdvertiserGeneralConfig.validateJsonElement(jsonObj.get("generalConfig"));
      }
      // validate the optional field `integrationDetails`
      if (jsonObj.get("integrationDetails") != null && !jsonObj.get("integrationDetails").isJsonNull()) {
        IntegrationDetails.validateJsonElement(jsonObj.get("integrationDetails"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("partnerId") != null && !jsonObj.get("partnerId").isJsonNull()) && !jsonObj.get("partnerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partnerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partnerId").toString()));
      }
      // validate the optional field `servingConfig`
      if (jsonObj.get("servingConfig") != null && !jsonObj.get("servingConfig").isJsonNull()) {
        AdvertiserTargetingConfig.validateJsonElement(jsonObj.get("servingConfig"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Advertiser.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Advertiser' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Advertiser> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Advertiser.class));

       return (TypeAdapter<T>) new TypeAdapter<Advertiser>() {
           @Override
           public void write(JsonWriter out, Advertiser value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Advertiser read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Advertiser given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Advertiser
   * @throws IOException if the JSON string is invalid with respect to Advertiser
   */
  public static Advertiser fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Advertiser.class);
  }

  /**
   * Convert an instance of Advertiser to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

