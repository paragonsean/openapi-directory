/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details of first and third party audience targeting setting.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:00.456843-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FirstAndThirdPartyAudienceTargetingSetting {
  public static final String SERIALIZED_NAME_FIRST_AND_THIRD_PARTY_AUDIENCE_ID = "firstAndThirdPartyAudienceId";
  @SerializedName(SERIALIZED_NAME_FIRST_AND_THIRD_PARTY_AUDIENCE_ID)
  private String firstAndThirdPartyAudienceId;

  /**
   * The recency of the first and third party audience targeting setting. Only applicable to first party audiences, otherwise will be ignored. For more info, refer to https://support.google.com/displayvideo/answer/2949947#recency When unspecified, no recency limit will be used.
   */
  @JsonAdapter(RecencyEnum.Adapter.class)
  public enum RecencyEnum {
    NO_LIMIT("RECENCY_NO_LIMIT"),
    
    _1_MINUTE("RECENCY_1_MINUTE"),
    
    _5_MINUTES("RECENCY_5_MINUTES"),
    
    _10_MINUTES("RECENCY_10_MINUTES"),
    
    _15_MINUTES("RECENCY_15_MINUTES"),
    
    _30_MINUTES("RECENCY_30_MINUTES"),
    
    _1_HOUR("RECENCY_1_HOUR"),
    
    _2_HOURS("RECENCY_2_HOURS"),
    
    _3_HOURS("RECENCY_3_HOURS"),
    
    _6_HOURS("RECENCY_6_HOURS"),
    
    _12_HOURS("RECENCY_12_HOURS"),
    
    _1_DAY("RECENCY_1_DAY"),
    
    _2_DAYS("RECENCY_2_DAYS"),
    
    _3_DAYS("RECENCY_3_DAYS"),
    
    _5_DAYS("RECENCY_5_DAYS"),
    
    _7_DAYS("RECENCY_7_DAYS"),
    
    _10_DAYS("RECENCY_10_DAYS"),
    
    _14_DAYS("RECENCY_14_DAYS"),
    
    _15_DAYS("RECENCY_15_DAYS"),
    
    _21_DAYS("RECENCY_21_DAYS"),
    
    _28_DAYS("RECENCY_28_DAYS"),
    
    _30_DAYS("RECENCY_30_DAYS"),
    
    _40_DAYS("RECENCY_40_DAYS"),
    
    _45_DAYS("RECENCY_45_DAYS"),
    
    _60_DAYS("RECENCY_60_DAYS"),
    
    _90_DAYS("RECENCY_90_DAYS"),
    
    _120_DAYS("RECENCY_120_DAYS"),
    
    _180_DAYS("RECENCY_180_DAYS"),
    
    _270_DAYS("RECENCY_270_DAYS"),
    
    _365_DAYS("RECENCY_365_DAYS");

    private String value;

    RecencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecencyEnum fromValue(String value) {
      for (RecencyEnum b : RecencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecencyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecencyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RecencyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RECENCY = "recency";
  @SerializedName(SERIALIZED_NAME_RECENCY)
  private RecencyEnum recency;

  public FirstAndThirdPartyAudienceTargetingSetting() {
  }

  public FirstAndThirdPartyAudienceTargetingSetting firstAndThirdPartyAudienceId(String firstAndThirdPartyAudienceId) {
    this.firstAndThirdPartyAudienceId = firstAndThirdPartyAudienceId;
    return this;
  }

  /**
   * Required. First and third party audience id of the first and third party audience targeting setting. This id is first_and_third_party_audience_id.
   * @return firstAndThirdPartyAudienceId
   */
  @javax.annotation.Nullable
  public String getFirstAndThirdPartyAudienceId() {
    return firstAndThirdPartyAudienceId;
  }

  public void setFirstAndThirdPartyAudienceId(String firstAndThirdPartyAudienceId) {
    this.firstAndThirdPartyAudienceId = firstAndThirdPartyAudienceId;
  }


  public FirstAndThirdPartyAudienceTargetingSetting recency(RecencyEnum recency) {
    this.recency = recency;
    return this;
  }

  /**
   * The recency of the first and third party audience targeting setting. Only applicable to first party audiences, otherwise will be ignored. For more info, refer to https://support.google.com/displayvideo/answer/2949947#recency When unspecified, no recency limit will be used.
   * @return recency
   */
  @javax.annotation.Nullable
  public RecencyEnum getRecency() {
    return recency;
  }

  public void setRecency(RecencyEnum recency) {
    this.recency = recency;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FirstAndThirdPartyAudienceTargetingSetting firstAndThirdPartyAudienceTargetingSetting = (FirstAndThirdPartyAudienceTargetingSetting) o;
    return Objects.equals(this.firstAndThirdPartyAudienceId, firstAndThirdPartyAudienceTargetingSetting.firstAndThirdPartyAudienceId) &&
        Objects.equals(this.recency, firstAndThirdPartyAudienceTargetingSetting.recency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstAndThirdPartyAudienceId, recency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FirstAndThirdPartyAudienceTargetingSetting {\n");
    sb.append("    firstAndThirdPartyAudienceId: ").append(toIndentedString(firstAndThirdPartyAudienceId)).append("\n");
    sb.append("    recency: ").append(toIndentedString(recency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("firstAndThirdPartyAudienceId");
    openapiFields.add("recency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FirstAndThirdPartyAudienceTargetingSetting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FirstAndThirdPartyAudienceTargetingSetting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FirstAndThirdPartyAudienceTargetingSetting is not found in the empty JSON string", FirstAndThirdPartyAudienceTargetingSetting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FirstAndThirdPartyAudienceTargetingSetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FirstAndThirdPartyAudienceTargetingSetting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("firstAndThirdPartyAudienceId") != null && !jsonObj.get("firstAndThirdPartyAudienceId").isJsonNull()) && !jsonObj.get("firstAndThirdPartyAudienceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstAndThirdPartyAudienceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstAndThirdPartyAudienceId").toString()));
      }
      if ((jsonObj.get("recency") != null && !jsonObj.get("recency").isJsonNull()) && !jsonObj.get("recency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recency").toString()));
      }
      // validate the optional field `recency`
      if (jsonObj.get("recency") != null && !jsonObj.get("recency").isJsonNull()) {
        RecencyEnum.validateJsonElement(jsonObj.get("recency"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FirstAndThirdPartyAudienceTargetingSetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FirstAndThirdPartyAudienceTargetingSetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FirstAndThirdPartyAudienceTargetingSetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FirstAndThirdPartyAudienceTargetingSetting.class));

       return (TypeAdapter<T>) new TypeAdapter<FirstAndThirdPartyAudienceTargetingSetting>() {
           @Override
           public void write(JsonWriter out, FirstAndThirdPartyAudienceTargetingSetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FirstAndThirdPartyAudienceTargetingSetting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FirstAndThirdPartyAudienceTargetingSetting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FirstAndThirdPartyAudienceTargetingSetting
   * @throws IOException if the JSON string is invalid with respect to FirstAndThirdPartyAudienceTargetingSetting
   */
  public static FirstAndThirdPartyAudienceTargetingSetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FirstAndThirdPartyAudienceTargetingSetting.class);
  }

  /**
   * Convert an instance of FirstAndThirdPartyAudienceTargetingSetting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

