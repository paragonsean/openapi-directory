/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.YoutubeVideoDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details for a Masthead Ad.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:00.456843-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MastheadAd {
  public static final String SERIALIZED_NAME_AUTOPLAY_VIDEO_DURATION = "autoplayVideoDuration";
  @SerializedName(SERIALIZED_NAME_AUTOPLAY_VIDEO_DURATION)
  private String autoplayVideoDuration;

  public static final String SERIALIZED_NAME_AUTOPLAY_VIDEO_START_MILLISECOND = "autoplayVideoStartMillisecond";
  @SerializedName(SERIALIZED_NAME_AUTOPLAY_VIDEO_START_MILLISECOND)
  private String autoplayVideoStartMillisecond;

  public static final String SERIALIZED_NAME_CALL_TO_ACTION_BUTTON_LABEL = "callToActionButtonLabel";
  @SerializedName(SERIALIZED_NAME_CALL_TO_ACTION_BUTTON_LABEL)
  private String callToActionButtonLabel;

  public static final String SERIALIZED_NAME_CALL_TO_ACTION_FINAL_URL = "callToActionFinalUrl";
  @SerializedName(SERIALIZED_NAME_CALL_TO_ACTION_FINAL_URL)
  private String callToActionFinalUrl;

  public static final String SERIALIZED_NAME_CALL_TO_ACTION_TRACKING_URL = "callToActionTrackingUrl";
  @SerializedName(SERIALIZED_NAME_CALL_TO_ACTION_TRACKING_URL)
  private String callToActionTrackingUrl;

  public static final String SERIALIZED_NAME_COMPANION_YOUTUBE_VIDEOS = "companionYoutubeVideos";
  @SerializedName(SERIALIZED_NAME_COMPANION_YOUTUBE_VIDEOS)
  private List<YoutubeVideoDetails> companionYoutubeVideos = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_HEADLINE = "headline";
  @SerializedName(SERIALIZED_NAME_HEADLINE)
  private String headline;

  public static final String SERIALIZED_NAME_SHOW_CHANNEL_ART = "showChannelArt";
  @SerializedName(SERIALIZED_NAME_SHOW_CHANNEL_ART)
  private Boolean showChannelArt;

  public static final String SERIALIZED_NAME_VIDEO = "video";
  @SerializedName(SERIALIZED_NAME_VIDEO)
  private YoutubeVideoDetails video;

  /**
   * The aspect ratio of the autoplaying YouTube video on the Masthead.
   */
  @JsonAdapter(VideoAspectRatioEnum.Adapter.class)
  public enum VideoAspectRatioEnum {
    UNSPECIFIED("VIDEO_ASPECT_RATIO_UNSPECIFIED"),
    
    WIDESCREEN("VIDEO_ASPECT_RATIO_WIDESCREEN"),
    
    FIXED_16_9("VIDEO_ASPECT_RATIO_FIXED_16_9");

    private String value;

    VideoAspectRatioEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VideoAspectRatioEnum fromValue(String value) {
      for (VideoAspectRatioEnum b : VideoAspectRatioEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VideoAspectRatioEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VideoAspectRatioEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VideoAspectRatioEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VideoAspectRatioEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      VideoAspectRatioEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VIDEO_ASPECT_RATIO = "videoAspectRatio";
  @SerializedName(SERIALIZED_NAME_VIDEO_ASPECT_RATIO)
  private VideoAspectRatioEnum videoAspectRatio;

  public MastheadAd() {
  }

  public MastheadAd autoplayVideoDuration(String autoplayVideoDuration) {
    this.autoplayVideoDuration = autoplayVideoDuration;
    return this;
  }

  /**
   * The duration of time the video will autoplay.
   * @return autoplayVideoDuration
   */
  @javax.annotation.Nullable
  public String getAutoplayVideoDuration() {
    return autoplayVideoDuration;
  }

  public void setAutoplayVideoDuration(String autoplayVideoDuration) {
    this.autoplayVideoDuration = autoplayVideoDuration;
  }


  public MastheadAd autoplayVideoStartMillisecond(String autoplayVideoStartMillisecond) {
    this.autoplayVideoStartMillisecond = autoplayVideoStartMillisecond;
    return this;
  }

  /**
   * The amount of time in milliseconds after which the video will start to play.
   * @return autoplayVideoStartMillisecond
   */
  @javax.annotation.Nullable
  public String getAutoplayVideoStartMillisecond() {
    return autoplayVideoStartMillisecond;
  }

  public void setAutoplayVideoStartMillisecond(String autoplayVideoStartMillisecond) {
    this.autoplayVideoStartMillisecond = autoplayVideoStartMillisecond;
  }


  public MastheadAd callToActionButtonLabel(String callToActionButtonLabel) {
    this.callToActionButtonLabel = callToActionButtonLabel;
    return this;
  }

  /**
   * The text on the call-to-action button.
   * @return callToActionButtonLabel
   */
  @javax.annotation.Nullable
  public String getCallToActionButtonLabel() {
    return callToActionButtonLabel;
  }

  public void setCallToActionButtonLabel(String callToActionButtonLabel) {
    this.callToActionButtonLabel = callToActionButtonLabel;
  }


  public MastheadAd callToActionFinalUrl(String callToActionFinalUrl) {
    this.callToActionFinalUrl = callToActionFinalUrl;
    return this;
  }

  /**
   * The destination URL for the call-to-action button.
   * @return callToActionFinalUrl
   */
  @javax.annotation.Nullable
  public String getCallToActionFinalUrl() {
    return callToActionFinalUrl;
  }

  public void setCallToActionFinalUrl(String callToActionFinalUrl) {
    this.callToActionFinalUrl = callToActionFinalUrl;
  }


  public MastheadAd callToActionTrackingUrl(String callToActionTrackingUrl) {
    this.callToActionTrackingUrl = callToActionTrackingUrl;
    return this;
  }

  /**
   * The tracking URL for the call-to-action button.
   * @return callToActionTrackingUrl
   */
  @javax.annotation.Nullable
  public String getCallToActionTrackingUrl() {
    return callToActionTrackingUrl;
  }

  public void setCallToActionTrackingUrl(String callToActionTrackingUrl) {
    this.callToActionTrackingUrl = callToActionTrackingUrl;
  }


  public MastheadAd companionYoutubeVideos(List<YoutubeVideoDetails> companionYoutubeVideos) {
    this.companionYoutubeVideos = companionYoutubeVideos;
    return this;
  }

  public MastheadAd addCompanionYoutubeVideosItem(YoutubeVideoDetails companionYoutubeVideosItem) {
    if (this.companionYoutubeVideos == null) {
      this.companionYoutubeVideos = new ArrayList<>();
    }
    this.companionYoutubeVideos.add(companionYoutubeVideosItem);
    return this;
  }

  /**
   * The videos that appear next to the Masthead Ad on desktop. Can be no more than two.
   * @return companionYoutubeVideos
   */
  @javax.annotation.Nullable
  public List<YoutubeVideoDetails> getCompanionYoutubeVideos() {
    return companionYoutubeVideos;
  }

  public void setCompanionYoutubeVideos(List<YoutubeVideoDetails> companionYoutubeVideos) {
    this.companionYoutubeVideos = companionYoutubeVideos;
  }


  public MastheadAd description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the ad.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public MastheadAd headline(String headline) {
    this.headline = headline;
    return this;
  }

  /**
   * The headline of the ad.
   * @return headline
   */
  @javax.annotation.Nullable
  public String getHeadline() {
    return headline;
  }

  public void setHeadline(String headline) {
    this.headline = headline;
  }


  public MastheadAd showChannelArt(Boolean showChannelArt) {
    this.showChannelArt = showChannelArt;
    return this;
  }

  /**
   * Whether to show a background or banner that appears at the top of a YouTube page.
   * @return showChannelArt
   */
  @javax.annotation.Nullable
  public Boolean getShowChannelArt() {
    return showChannelArt;
  }

  public void setShowChannelArt(Boolean showChannelArt) {
    this.showChannelArt = showChannelArt;
  }


  public MastheadAd video(YoutubeVideoDetails video) {
    this.video = video;
    return this;
  }

  /**
   * Get video
   * @return video
   */
  @javax.annotation.Nullable
  public YoutubeVideoDetails getVideo() {
    return video;
  }

  public void setVideo(YoutubeVideoDetails video) {
    this.video = video;
  }


  public MastheadAd videoAspectRatio(VideoAspectRatioEnum videoAspectRatio) {
    this.videoAspectRatio = videoAspectRatio;
    return this;
  }

  /**
   * The aspect ratio of the autoplaying YouTube video on the Masthead.
   * @return videoAspectRatio
   */
  @javax.annotation.Nullable
  public VideoAspectRatioEnum getVideoAspectRatio() {
    return videoAspectRatio;
  }

  public void setVideoAspectRatio(VideoAspectRatioEnum videoAspectRatio) {
    this.videoAspectRatio = videoAspectRatio;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MastheadAd mastheadAd = (MastheadAd) o;
    return Objects.equals(this.autoplayVideoDuration, mastheadAd.autoplayVideoDuration) &&
        Objects.equals(this.autoplayVideoStartMillisecond, mastheadAd.autoplayVideoStartMillisecond) &&
        Objects.equals(this.callToActionButtonLabel, mastheadAd.callToActionButtonLabel) &&
        Objects.equals(this.callToActionFinalUrl, mastheadAd.callToActionFinalUrl) &&
        Objects.equals(this.callToActionTrackingUrl, mastheadAd.callToActionTrackingUrl) &&
        Objects.equals(this.companionYoutubeVideos, mastheadAd.companionYoutubeVideos) &&
        Objects.equals(this.description, mastheadAd.description) &&
        Objects.equals(this.headline, mastheadAd.headline) &&
        Objects.equals(this.showChannelArt, mastheadAd.showChannelArt) &&
        Objects.equals(this.video, mastheadAd.video) &&
        Objects.equals(this.videoAspectRatio, mastheadAd.videoAspectRatio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoplayVideoDuration, autoplayVideoStartMillisecond, callToActionButtonLabel, callToActionFinalUrl, callToActionTrackingUrl, companionYoutubeVideos, description, headline, showChannelArt, video, videoAspectRatio);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MastheadAd {\n");
    sb.append("    autoplayVideoDuration: ").append(toIndentedString(autoplayVideoDuration)).append("\n");
    sb.append("    autoplayVideoStartMillisecond: ").append(toIndentedString(autoplayVideoStartMillisecond)).append("\n");
    sb.append("    callToActionButtonLabel: ").append(toIndentedString(callToActionButtonLabel)).append("\n");
    sb.append("    callToActionFinalUrl: ").append(toIndentedString(callToActionFinalUrl)).append("\n");
    sb.append("    callToActionTrackingUrl: ").append(toIndentedString(callToActionTrackingUrl)).append("\n");
    sb.append("    companionYoutubeVideos: ").append(toIndentedString(companionYoutubeVideos)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    headline: ").append(toIndentedString(headline)).append("\n");
    sb.append("    showChannelArt: ").append(toIndentedString(showChannelArt)).append("\n");
    sb.append("    video: ").append(toIndentedString(video)).append("\n");
    sb.append("    videoAspectRatio: ").append(toIndentedString(videoAspectRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("autoplayVideoDuration");
    openapiFields.add("autoplayVideoStartMillisecond");
    openapiFields.add("callToActionButtonLabel");
    openapiFields.add("callToActionFinalUrl");
    openapiFields.add("callToActionTrackingUrl");
    openapiFields.add("companionYoutubeVideos");
    openapiFields.add("description");
    openapiFields.add("headline");
    openapiFields.add("showChannelArt");
    openapiFields.add("video");
    openapiFields.add("videoAspectRatio");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MastheadAd
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MastheadAd.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MastheadAd is not found in the empty JSON string", MastheadAd.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MastheadAd.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MastheadAd` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("autoplayVideoDuration") != null && !jsonObj.get("autoplayVideoDuration").isJsonNull()) && !jsonObj.get("autoplayVideoDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoplayVideoDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoplayVideoDuration").toString()));
      }
      if ((jsonObj.get("autoplayVideoStartMillisecond") != null && !jsonObj.get("autoplayVideoStartMillisecond").isJsonNull()) && !jsonObj.get("autoplayVideoStartMillisecond").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoplayVideoStartMillisecond` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoplayVideoStartMillisecond").toString()));
      }
      if ((jsonObj.get("callToActionButtonLabel") != null && !jsonObj.get("callToActionButtonLabel").isJsonNull()) && !jsonObj.get("callToActionButtonLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callToActionButtonLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callToActionButtonLabel").toString()));
      }
      if ((jsonObj.get("callToActionFinalUrl") != null && !jsonObj.get("callToActionFinalUrl").isJsonNull()) && !jsonObj.get("callToActionFinalUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callToActionFinalUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callToActionFinalUrl").toString()));
      }
      if ((jsonObj.get("callToActionTrackingUrl") != null && !jsonObj.get("callToActionTrackingUrl").isJsonNull()) && !jsonObj.get("callToActionTrackingUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callToActionTrackingUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callToActionTrackingUrl").toString()));
      }
      if (jsonObj.get("companionYoutubeVideos") != null && !jsonObj.get("companionYoutubeVideos").isJsonNull()) {
        JsonArray jsonArraycompanionYoutubeVideos = jsonObj.getAsJsonArray("companionYoutubeVideos");
        if (jsonArraycompanionYoutubeVideos != null) {
          // ensure the json data is an array
          if (!jsonObj.get("companionYoutubeVideos").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `companionYoutubeVideos` to be an array in the JSON string but got `%s`", jsonObj.get("companionYoutubeVideos").toString()));
          }

          // validate the optional field `companionYoutubeVideos` (array)
          for (int i = 0; i < jsonArraycompanionYoutubeVideos.size(); i++) {
            YoutubeVideoDetails.validateJsonElement(jsonArraycompanionYoutubeVideos.get(i));
          };
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("headline") != null && !jsonObj.get("headline").isJsonNull()) && !jsonObj.get("headline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `headline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("headline").toString()));
      }
      // validate the optional field `video`
      if (jsonObj.get("video") != null && !jsonObj.get("video").isJsonNull()) {
        YoutubeVideoDetails.validateJsonElement(jsonObj.get("video"));
      }
      if ((jsonObj.get("videoAspectRatio") != null && !jsonObj.get("videoAspectRatio").isJsonNull()) && !jsonObj.get("videoAspectRatio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `videoAspectRatio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("videoAspectRatio").toString()));
      }
      // validate the optional field `videoAspectRatio`
      if (jsonObj.get("videoAspectRatio") != null && !jsonObj.get("videoAspectRatio").isJsonNull()) {
        VideoAspectRatioEnum.validateJsonElement(jsonObj.get("videoAspectRatio"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MastheadAd.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MastheadAd' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MastheadAd> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MastheadAd.class));

       return (TypeAdapter<T>) new TypeAdapter<MastheadAd>() {
           @Override
           public void write(JsonWriter out, MastheadAd value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MastheadAd read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MastheadAd given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MastheadAd
   * @throws IOException if the JSON string is invalid with respect to MastheadAd
   */
  public static MastheadAd fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MastheadAd.class);
  }

  /**
   * Convert an instance of MastheadAd to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

