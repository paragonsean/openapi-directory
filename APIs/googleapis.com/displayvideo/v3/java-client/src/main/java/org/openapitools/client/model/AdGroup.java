/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BiddingStrategy;
import org.openapitools.client.model.ProductFeedData;
import org.openapitools.client.model.TargetingExpansionConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single ad group associated with a line item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:00.456843-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdGroup {
  /**
   * The format of the ads in the ad group.
   */
  @JsonAdapter(AdGroupFormatEnum.Adapter.class)
  public enum AdGroupFormatEnum {
    UNSPECIFIED("AD_GROUP_FORMAT_UNSPECIFIED"),
    
    IN_STREAM("AD_GROUP_FORMAT_IN_STREAM"),
    
    VIDEO_DISCOVERY("AD_GROUP_FORMAT_VIDEO_DISCOVERY"),
    
    BUMPER("AD_GROUP_FORMAT_BUMPER"),
    
    NON_SKIPPABLE_IN_STREAM("AD_GROUP_FORMAT_NON_SKIPPABLE_IN_STREAM"),
    
    AUDIO("AD_GROUP_FORMAT_AUDIO"),
    
    RESPONSIVE("AD_GROUP_FORMAT_RESPONSIVE"),
    
    REACH("AD_GROUP_FORMAT_REACH"),
    
    MASTHEAD("AD_GROUP_FORMAT_MASTHEAD");

    private String value;

    AdGroupFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AdGroupFormatEnum fromValue(String value) {
      for (AdGroupFormatEnum b : AdGroupFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AdGroupFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AdGroupFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AdGroupFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AdGroupFormatEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AdGroupFormatEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AD_GROUP_FORMAT = "adGroupFormat";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_FORMAT)
  private AdGroupFormatEnum adGroupFormat;

  public static final String SERIALIZED_NAME_AD_GROUP_ID = "adGroupId";
  @SerializedName(SERIALIZED_NAME_AD_GROUP_ID)
  private String adGroupId;

  public static final String SERIALIZED_NAME_ADVERTISER_ID = "advertiserId";
  @SerializedName(SERIALIZED_NAME_ADVERTISER_ID)
  private String advertiserId;

  public static final String SERIALIZED_NAME_BID_STRATEGY = "bidStrategy";
  @SerializedName(SERIALIZED_NAME_BID_STRATEGY)
  private BiddingStrategy bidStrategy;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  /**
   * Controls whether or not the ad group can spend its budget and bid on inventory. If the ad group&#39;s parent line item is not active, the ad group can&#39;t spend its budget even if its own status is &#x60;ENTITY_STATUS_ACTIVE&#x60;.
   */
  @JsonAdapter(EntityStatusEnum.Adapter.class)
  public enum EntityStatusEnum {
    UNSPECIFIED("ENTITY_STATUS_UNSPECIFIED"),
    
    ACTIVE("ENTITY_STATUS_ACTIVE"),
    
    ARCHIVED("ENTITY_STATUS_ARCHIVED"),
    
    DRAFT("ENTITY_STATUS_DRAFT"),
    
    PAUSED("ENTITY_STATUS_PAUSED"),
    
    SCHEDULED_FOR_DELETION("ENTITY_STATUS_SCHEDULED_FOR_DELETION");

    private String value;

    EntityStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityStatusEnum fromValue(String value) {
      for (EntityStatusEnum b : EntityStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EntityStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EntityStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EntityStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENTITY_STATUS = "entityStatus";
  @SerializedName(SERIALIZED_NAME_ENTITY_STATUS)
  private EntityStatusEnum entityStatus;

  public static final String SERIALIZED_NAME_LINE_ITEM_ID = "lineItemId";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_ID)
  private String lineItemId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_FEED_DATA = "productFeedData";
  @SerializedName(SERIALIZED_NAME_PRODUCT_FEED_DATA)
  private ProductFeedData productFeedData;

  public static final String SERIALIZED_NAME_TARGETING_EXPANSION = "targetingExpansion";
  @SerializedName(SERIALIZED_NAME_TARGETING_EXPANSION)
  private TargetingExpansionConfig targetingExpansion;

  public AdGroup() {
  }

  public AdGroup adGroupFormat(AdGroupFormatEnum adGroupFormat) {
    this.adGroupFormat = adGroupFormat;
    return this;
  }

  /**
   * The format of the ads in the ad group.
   * @return adGroupFormat
   */
  @javax.annotation.Nullable
  public AdGroupFormatEnum getAdGroupFormat() {
    return adGroupFormat;
  }

  public void setAdGroupFormat(AdGroupFormatEnum adGroupFormat) {
    this.adGroupFormat = adGroupFormat;
  }


  public AdGroup adGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
    return this;
  }

  /**
   * The unique ID of the ad group. Assigned by the system.
   * @return adGroupId
   */
  @javax.annotation.Nullable
  public String getAdGroupId() {
    return adGroupId;
  }

  public void setAdGroupId(String adGroupId) {
    this.adGroupId = adGroupId;
  }


  public AdGroup advertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
    return this;
  }

  /**
   * The unique ID of the advertiser the ad group belongs to.
   * @return advertiserId
   */
  @javax.annotation.Nullable
  public String getAdvertiserId() {
    return advertiserId;
  }

  public void setAdvertiserId(String advertiserId) {
    this.advertiserId = advertiserId;
  }


  public AdGroup bidStrategy(BiddingStrategy bidStrategy) {
    this.bidStrategy = bidStrategy;
    return this;
  }

  /**
   * Get bidStrategy
   * @return bidStrategy
   */
  @javax.annotation.Nullable
  public BiddingStrategy getBidStrategy() {
    return bidStrategy;
  }

  public void setBidStrategy(BiddingStrategy bidStrategy) {
    this.bidStrategy = bidStrategy;
  }


  public AdGroup displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the ad group. Must be UTF-8 encoded with a maximum size of 255 bytes.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public AdGroup entityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
    return this;
  }

  /**
   * Controls whether or not the ad group can spend its budget and bid on inventory. If the ad group&#39;s parent line item is not active, the ad group can&#39;t spend its budget even if its own status is &#x60;ENTITY_STATUS_ACTIVE&#x60;.
   * @return entityStatus
   */
  @javax.annotation.Nullable
  public EntityStatusEnum getEntityStatus() {
    return entityStatus;
  }

  public void setEntityStatus(EntityStatusEnum entityStatus) {
    this.entityStatus = entityStatus;
  }


  public AdGroup lineItemId(String lineItemId) {
    this.lineItemId = lineItemId;
    return this;
  }

  /**
   * The unique ID of the line item that the ad group belongs to.
   * @return lineItemId
   */
  @javax.annotation.Nullable
  public String getLineItemId() {
    return lineItemId;
  }

  public void setLineItemId(String lineItemId) {
    this.lineItemId = lineItemId;
  }


  public AdGroup name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the ad group.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AdGroup productFeedData(ProductFeedData productFeedData) {
    this.productFeedData = productFeedData;
    return this;
  }

  /**
   * Get productFeedData
   * @return productFeedData
   */
  @javax.annotation.Nullable
  public ProductFeedData getProductFeedData() {
    return productFeedData;
  }

  public void setProductFeedData(ProductFeedData productFeedData) {
    this.productFeedData = productFeedData;
  }


  public AdGroup targetingExpansion(TargetingExpansionConfig targetingExpansion) {
    this.targetingExpansion = targetingExpansion;
    return this;
  }

  /**
   * Get targetingExpansion
   * @return targetingExpansion
   */
  @javax.annotation.Nullable
  public TargetingExpansionConfig getTargetingExpansion() {
    return targetingExpansion;
  }

  public void setTargetingExpansion(TargetingExpansionConfig targetingExpansion) {
    this.targetingExpansion = targetingExpansion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdGroup adGroup = (AdGroup) o;
    return Objects.equals(this.adGroupFormat, adGroup.adGroupFormat) &&
        Objects.equals(this.adGroupId, adGroup.adGroupId) &&
        Objects.equals(this.advertiserId, adGroup.advertiserId) &&
        Objects.equals(this.bidStrategy, adGroup.bidStrategy) &&
        Objects.equals(this.displayName, adGroup.displayName) &&
        Objects.equals(this.entityStatus, adGroup.entityStatus) &&
        Objects.equals(this.lineItemId, adGroup.lineItemId) &&
        Objects.equals(this.name, adGroup.name) &&
        Objects.equals(this.productFeedData, adGroup.productFeedData) &&
        Objects.equals(this.targetingExpansion, adGroup.targetingExpansion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adGroupFormat, adGroupId, advertiserId, bidStrategy, displayName, entityStatus, lineItemId, name, productFeedData, targetingExpansion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdGroup {\n");
    sb.append("    adGroupFormat: ").append(toIndentedString(adGroupFormat)).append("\n");
    sb.append("    adGroupId: ").append(toIndentedString(adGroupId)).append("\n");
    sb.append("    advertiserId: ").append(toIndentedString(advertiserId)).append("\n");
    sb.append("    bidStrategy: ").append(toIndentedString(bidStrategy)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    entityStatus: ").append(toIndentedString(entityStatus)).append("\n");
    sb.append("    lineItemId: ").append(toIndentedString(lineItemId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productFeedData: ").append(toIndentedString(productFeedData)).append("\n");
    sb.append("    targetingExpansion: ").append(toIndentedString(targetingExpansion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adGroupFormat");
    openapiFields.add("adGroupId");
    openapiFields.add("advertiserId");
    openapiFields.add("bidStrategy");
    openapiFields.add("displayName");
    openapiFields.add("entityStatus");
    openapiFields.add("lineItemId");
    openapiFields.add("name");
    openapiFields.add("productFeedData");
    openapiFields.add("targetingExpansion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdGroup is not found in the empty JSON string", AdGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("adGroupFormat") != null && !jsonObj.get("adGroupFormat").isJsonNull()) && !jsonObj.get("adGroupFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adGroupFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adGroupFormat").toString()));
      }
      // validate the optional field `adGroupFormat`
      if (jsonObj.get("adGroupFormat") != null && !jsonObj.get("adGroupFormat").isJsonNull()) {
        AdGroupFormatEnum.validateJsonElement(jsonObj.get("adGroupFormat"));
      }
      if ((jsonObj.get("adGroupId") != null && !jsonObj.get("adGroupId").isJsonNull()) && !jsonObj.get("adGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adGroupId").toString()));
      }
      if ((jsonObj.get("advertiserId") != null && !jsonObj.get("advertiserId").isJsonNull()) && !jsonObj.get("advertiserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertiserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertiserId").toString()));
      }
      // validate the optional field `bidStrategy`
      if (jsonObj.get("bidStrategy") != null && !jsonObj.get("bidStrategy").isJsonNull()) {
        BiddingStrategy.validateJsonElement(jsonObj.get("bidStrategy"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) && !jsonObj.get("entityStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entityStatus").toString()));
      }
      // validate the optional field `entityStatus`
      if (jsonObj.get("entityStatus") != null && !jsonObj.get("entityStatus").isJsonNull()) {
        EntityStatusEnum.validateJsonElement(jsonObj.get("entityStatus"));
      }
      if ((jsonObj.get("lineItemId") != null && !jsonObj.get("lineItemId").isJsonNull()) && !jsonObj.get("lineItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineItemId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `productFeedData`
      if (jsonObj.get("productFeedData") != null && !jsonObj.get("productFeedData").isJsonNull()) {
        ProductFeedData.validateJsonElement(jsonObj.get("productFeedData"));
      }
      // validate the optional field `targetingExpansion`
      if (jsonObj.get("targetingExpansion") != null && !jsonObj.get("targetingExpansion").isJsonNull()) {
        TargetingExpansionConfig.validateJsonElement(jsonObj.get("targetingExpansion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<AdGroup>() {
           @Override
           public void write(JsonWriter out, AdGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdGroup
   * @throws IOException if the JSON string is invalid with respect to AdGroup
   */
  public static AdGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdGroup.class);
  }

  /**
   * Convert an instance of AdGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

