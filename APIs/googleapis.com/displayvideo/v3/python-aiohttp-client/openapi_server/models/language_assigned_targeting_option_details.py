# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LanguageAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, negative: bool=None, targeting_option_id: str=None):
        """LanguageAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param display_name: The display_name of this LanguageAssignedTargetingOptionDetails.
        :param negative: The negative of this LanguageAssignedTargetingOptionDetails.
        :param targeting_option_id: The targeting_option_id of this LanguageAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'display_name': str,
            'negative': bool,
            'targeting_option_id': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'negative': 'negative',
            'targeting_option_id': 'targetingOptionId'
        }

        self._display_name = display_name
        self._negative = negative
        self._targeting_option_id = targeting_option_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LanguageAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LanguageAssignedTargetingOptionDetails of this LanguageAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this LanguageAssignedTargetingOptionDetails.

        Output only. The display name of the language (e.g., \"French\").

        :return: The display_name of this LanguageAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this LanguageAssignedTargetingOptionDetails.

        Output only. The display name of the language (e.g., \"French\").

        :param display_name: The display_name of this LanguageAssignedTargetingOptionDetails.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def negative(self):
        """Gets the negative of this LanguageAssignedTargetingOptionDetails.

        Indicates if this option is being negatively targeted. All assigned language targeting options on the same resource must have the same value for this field.

        :return: The negative of this LanguageAssignedTargetingOptionDetails.
        :rtype: bool
        """
        return self._negative

    @negative.setter
    def negative(self, negative):
        """Sets the negative of this LanguageAssignedTargetingOptionDetails.

        Indicates if this option is being negatively targeted. All assigned language targeting options on the same resource must have the same value for this field.

        :param negative: The negative of this LanguageAssignedTargetingOptionDetails.
        :type negative: bool
        """

        self._negative = negative

    @property
    def targeting_option_id(self):
        """Gets the targeting_option_id of this LanguageAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_LANGUAGE`.

        :return: The targeting_option_id of this LanguageAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._targeting_option_id

    @targeting_option_id.setter
    def targeting_option_id(self, targeting_option_id):
        """Sets the targeting_option_id of this LanguageAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_LANGUAGE`.

        :param targeting_option_id: The targeting_option_id of this LanguageAssignedTargetingOptionDetails.
        :type targeting_option_id: str
        """

        self._targeting_option_id = targeting_option_id
