# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.youtube_video_details import YoutubeVideoDetails
from openapi_server import util


class VideoDiscoveryAd(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description1: str=None, description2: str=None, headline: str=None, thumbnail: str=None, video: YoutubeVideoDetails=None):
        """VideoDiscoveryAd - a model defined in OpenAPI

        :param description1: The description1 of this VideoDiscoveryAd.
        :param description2: The description2 of this VideoDiscoveryAd.
        :param headline: The headline of this VideoDiscoveryAd.
        :param thumbnail: The thumbnail of this VideoDiscoveryAd.
        :param video: The video of this VideoDiscoveryAd.
        """
        self.openapi_types = {
            'description1': str,
            'description2': str,
            'headline': str,
            'thumbnail': str,
            'video': YoutubeVideoDetails
        }

        self.attribute_map = {
            'description1': 'description1',
            'description2': 'description2',
            'headline': 'headline',
            'thumbnail': 'thumbnail',
            'video': 'video'
        }

        self._description1 = description1
        self._description2 = description2
        self._headline = headline
        self._thumbnail = thumbnail
        self._video = video

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoDiscoveryAd':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoDiscoveryAd of this VideoDiscoveryAd.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description1(self):
        """Gets the description1 of this VideoDiscoveryAd.

        First text line for the ad.

        :return: The description1 of this VideoDiscoveryAd.
        :rtype: str
        """
        return self._description1

    @description1.setter
    def description1(self, description1):
        """Sets the description1 of this VideoDiscoveryAd.

        First text line for the ad.

        :param description1: The description1 of this VideoDiscoveryAd.
        :type description1: str
        """

        self._description1 = description1

    @property
    def description2(self):
        """Gets the description2 of this VideoDiscoveryAd.

        Second text line for the ad.

        :return: The description2 of this VideoDiscoveryAd.
        :rtype: str
        """
        return self._description2

    @description2.setter
    def description2(self, description2):
        """Sets the description2 of this VideoDiscoveryAd.

        Second text line for the ad.

        :param description2: The description2 of this VideoDiscoveryAd.
        :type description2: str
        """

        self._description2 = description2

    @property
    def headline(self):
        """Gets the headline of this VideoDiscoveryAd.

        The headline of ad.

        :return: The headline of this VideoDiscoveryAd.
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this VideoDiscoveryAd.

        The headline of ad.

        :param headline: The headline of this VideoDiscoveryAd.
        :type headline: str
        """

        self._headline = headline

    @property
    def thumbnail(self):
        """Gets the thumbnail of this VideoDiscoveryAd.

        Thumbnail image used in the ad.

        :return: The thumbnail of this VideoDiscoveryAd.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this VideoDiscoveryAd.

        Thumbnail image used in the ad.

        :param thumbnail: The thumbnail of this VideoDiscoveryAd.
        :type thumbnail: str
        """
        allowed_values = ["THUMBNAIL_UNSPECIFIED", "THUMBNAIL_DEFAULT", "THUMBNAIL_1", "THUMBNAIL_2", "THUMBNAIL_3"]  # noqa: E501
        if thumbnail not in allowed_values:
            raise ValueError(
                "Invalid value for `thumbnail` ({0}), must be one of {1}"
                .format(thumbnail, allowed_values)
            )

        self._thumbnail = thumbnail

    @property
    def video(self):
        """Gets the video of this VideoDiscoveryAd.


        :return: The video of this VideoDiscoveryAd.
        :rtype: YoutubeVideoDetails
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this VideoDiscoveryAd.


        :param video: The video of this VideoDiscoveryAd.
        :type video: YoutubeVideoDetails
        """

        self._video = video
