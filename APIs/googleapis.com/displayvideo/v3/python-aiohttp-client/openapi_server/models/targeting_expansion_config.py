# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TargetingExpansionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audience_expansion_level: str=None, audience_expansion_seed_list_excluded: bool=None, enable_optimized_targeting: bool=None):
        """TargetingExpansionConfig - a model defined in OpenAPI

        :param audience_expansion_level: The audience_expansion_level of this TargetingExpansionConfig.
        :param audience_expansion_seed_list_excluded: The audience_expansion_seed_list_excluded of this TargetingExpansionConfig.
        :param enable_optimized_targeting: The enable_optimized_targeting of this TargetingExpansionConfig.
        """
        self.openapi_types = {
            'audience_expansion_level': str,
            'audience_expansion_seed_list_excluded': bool,
            'enable_optimized_targeting': bool
        }

        self.attribute_map = {
            'audience_expansion_level': 'audienceExpansionLevel',
            'audience_expansion_seed_list_excluded': 'audienceExpansionSeedListExcluded',
            'enable_optimized_targeting': 'enableOptimizedTargeting'
        }

        self._audience_expansion_level = audience_expansion_level
        self._audience_expansion_seed_list_excluded = audience_expansion_seed_list_excluded
        self._enable_optimized_targeting = enable_optimized_targeting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetingExpansionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetingExpansionConfig of this TargetingExpansionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audience_expansion_level(self):
        """Gets the audience_expansion_level of this TargetingExpansionConfig.

        Output only. Magnitude of expansion for eligible first-party user lists under this ad group. This field only applies to YouTube and Partners line item and ad group resources.

        :return: The audience_expansion_level of this TargetingExpansionConfig.
        :rtype: str
        """
        return self._audience_expansion_level

    @audience_expansion_level.setter
    def audience_expansion_level(self, audience_expansion_level):
        """Sets the audience_expansion_level of this TargetingExpansionConfig.

        Output only. Magnitude of expansion for eligible first-party user lists under this ad group. This field only applies to YouTube and Partners line item and ad group resources.

        :param audience_expansion_level: The audience_expansion_level of this TargetingExpansionConfig.
        :type audience_expansion_level: str
        """
        allowed_values = ["UNKNOWN", "NO_REACH", "LEAST_REACH", "MID_REACH", "MOST_REACH"]  # noqa: E501
        if audience_expansion_level not in allowed_values:
            raise ValueError(
                "Invalid value for `audience_expansion_level` ({0}), must be one of {1}"
                .format(audience_expansion_level, allowed_values)
            )

        self._audience_expansion_level = audience_expansion_level

    @property
    def audience_expansion_seed_list_excluded(self):
        """Gets the audience_expansion_seed_list_excluded of this TargetingExpansionConfig.

        Output only. Whether to exclude seed list for audience expansion. This field only applies to YouTube and Partners line item and ad group resources.

        :return: The audience_expansion_seed_list_excluded of this TargetingExpansionConfig.
        :rtype: bool
        """
        return self._audience_expansion_seed_list_excluded

    @audience_expansion_seed_list_excluded.setter
    def audience_expansion_seed_list_excluded(self, audience_expansion_seed_list_excluded):
        """Sets the audience_expansion_seed_list_excluded of this TargetingExpansionConfig.

        Output only. Whether to exclude seed list for audience expansion. This field only applies to YouTube and Partners line item and ad group resources.

        :param audience_expansion_seed_list_excluded: The audience_expansion_seed_list_excluded of this TargetingExpansionConfig.
        :type audience_expansion_seed_list_excluded: bool
        """

        self._audience_expansion_seed_list_excluded = audience_expansion_seed_list_excluded

    @property
    def enable_optimized_targeting(self):
        """Gets the enable_optimized_targeting of this TargetingExpansionConfig.

        Required. Whether to enable Optimized Targeting for the line item.

        :return: The enable_optimized_targeting of this TargetingExpansionConfig.
        :rtype: bool
        """
        return self._enable_optimized_targeting

    @enable_optimized_targeting.setter
    def enable_optimized_targeting(self, enable_optimized_targeting):
        """Sets the enable_optimized_targeting of this TargetingExpansionConfig.

        Required. Whether to enable Optimized Targeting for the line item.

        :param enable_optimized_targeting: The enable_optimized_targeting of this TargetingExpansionConfig.
        :type enable_optimized_targeting: bool
        """

        self._enable_optimized_targeting = enable_optimized_targeting
