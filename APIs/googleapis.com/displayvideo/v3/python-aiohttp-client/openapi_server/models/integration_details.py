# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IntegrationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: str=None, integration_code: str=None):
        """IntegrationDetails - a model defined in OpenAPI

        :param details: The details of this IntegrationDetails.
        :param integration_code: The integration_code of this IntegrationDetails.
        """
        self.openapi_types = {
            'details': str,
            'integration_code': str
        }

        self.attribute_map = {
            'details': 'details',
            'integration_code': 'integrationCode'
        }

        self._details = details
        self._integration_code = integration_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationDetails of this IntegrationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this IntegrationDetails.

        Additional details of the entry in string format. Must be UTF-8 encoded with a length of no more than 1000 characters.

        :return: The details of this IntegrationDetails.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this IntegrationDetails.

        Additional details of the entry in string format. Must be UTF-8 encoded with a length of no more than 1000 characters.

        :param details: The details of this IntegrationDetails.
        :type details: str
        """

        self._details = details

    @property
    def integration_code(self):
        """Gets the integration_code of this IntegrationDetails.

        An external identifier to be associated with the entry. The integration code will show up together with the entry in many places in the system, for example, reporting. Must be UTF-8 encoded with a length of no more than 500 characters.

        :return: The integration_code of this IntegrationDetails.
        :rtype: str
        """
        return self._integration_code

    @integration_code.setter
    def integration_code(self, integration_code):
        """Sets the integration_code of this IntegrationDetails.

        An external identifier to be associated with the entry. The integration code will show up together with the entry in many places in the system, for example, reporting. Must be UTF-8 encoded with a length of no more than 500 characters.

        :param integration_code: The integration_code of this IntegrationDetails.
        :type integration_code: str
        """

        self._integration_code = integration_code
