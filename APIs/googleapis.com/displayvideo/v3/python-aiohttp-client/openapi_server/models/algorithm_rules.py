# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.algorithm_rules_ruleset import AlgorithmRulesRuleset
from openapi_server import util


class AlgorithmRules(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, impression_signal_ruleset: AlgorithmRulesRuleset=None):
        """AlgorithmRules - a model defined in OpenAPI

        :param impression_signal_ruleset: The impression_signal_ruleset of this AlgorithmRules.
        """
        self.openapi_types = {
            'impression_signal_ruleset': AlgorithmRulesRuleset
        }

        self.attribute_map = {
            'impression_signal_ruleset': 'impressionSignalRuleset'
        }

        self._impression_signal_ruleset = impression_signal_ruleset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlgorithmRules':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlgorithmRules of this AlgorithmRules.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def impression_signal_ruleset(self):
        """Gets the impression_signal_ruleset of this AlgorithmRules.


        :return: The impression_signal_ruleset of this AlgorithmRules.
        :rtype: AlgorithmRulesRuleset
        """
        return self._impression_signal_ruleset

    @impression_signal_ruleset.setter
    def impression_signal_ruleset(self, impression_signal_ruleset):
        """Sets the impression_signal_ruleset of this AlgorithmRules.


        :param impression_signal_ruleset: The impression_signal_ruleset of this AlgorithmRules.
        :type impression_signal_ruleset: AlgorithmRulesRuleset
        """

        self._impression_signal_ruleset = impression_signal_ruleset
