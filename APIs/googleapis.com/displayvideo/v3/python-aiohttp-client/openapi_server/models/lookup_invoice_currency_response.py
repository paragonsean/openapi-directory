# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LookupInvoiceCurrencyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None):
        """LookupInvoiceCurrencyResponse - a model defined in OpenAPI

        :param currency_code: The currency_code of this LookupInvoiceCurrencyResponse.
        """
        self.openapi_types = {
            'currency_code': str
        }

        self.attribute_map = {
            'currency_code': 'currencyCode'
        }

        self._currency_code = currency_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LookupInvoiceCurrencyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LookupInvoiceCurrencyResponse of this LookupInvoiceCurrencyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this LookupInvoiceCurrencyResponse.

        Currency used by the advertiser in ISO 4217 format.

        :return: The currency_code of this LookupInvoiceCurrencyResponse.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this LookupInvoiceCurrencyResponse.

        Currency used by the advertiser in ISO 4217 format.

        :param currency_code: The currency_code of this LookupInvoiceCurrencyResponse.
        :type currency_code: str
        """

        self._currency_code = currency_code
