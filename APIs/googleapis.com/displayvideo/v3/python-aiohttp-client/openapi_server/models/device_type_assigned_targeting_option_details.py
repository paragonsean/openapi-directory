# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceTypeAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_type: str=None, youtube_and_partners_bid_multiplier: float=None):
        """DeviceTypeAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param device_type: The device_type of this DeviceTypeAssignedTargetingOptionDetails.
        :param youtube_and_partners_bid_multiplier: The youtube_and_partners_bid_multiplier of this DeviceTypeAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'device_type': str,
            'youtube_and_partners_bid_multiplier': float
        }

        self.attribute_map = {
            'device_type': 'deviceType',
            'youtube_and_partners_bid_multiplier': 'youtubeAndPartnersBidMultiplier'
        }

        self._device_type = device_type
        self._youtube_and_partners_bid_multiplier = youtube_and_partners_bid_multiplier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceTypeAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceTypeAssignedTargetingOptionDetails of this DeviceTypeAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_type(self):
        """Gets the device_type of this DeviceTypeAssignedTargetingOptionDetails.

        Required. The display name of the device type.

        :return: The device_type of this DeviceTypeAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this DeviceTypeAssignedTargetingOptionDetails.

        Required. The display name of the device type.

        :param device_type: The device_type of this DeviceTypeAssignedTargetingOptionDetails.
        :type device_type: str
        """
        allowed_values = ["DEVICE_TYPE_UNSPECIFIED", "DEVICE_TYPE_COMPUTER", "DEVICE_TYPE_CONNECTED_TV", "DEVICE_TYPE_SMART_PHONE", "DEVICE_TYPE_TABLET"]  # noqa: E501
        if device_type not in allowed_values:
            raise ValueError(
                "Invalid value for `device_type` ({0}), must be one of {1}"
                .format(device_type, allowed_values)
            )

        self._device_type = device_type

    @property
    def youtube_and_partners_bid_multiplier(self):
        """Gets the youtube_and_partners_bid_multiplier of this DeviceTypeAssignedTargetingOptionDetails.

        Output only. Bid multiplier allows you to show your ads more or less frequently based on the device type. It will apply a multiplier on the original bid price. When this field is 0, it indicates this field is not applicable instead of multiplying 0 on the original bid price. For example, if the bid price without multiplier is $10.0 and the multiplier is 1.5 for Tablet, the resulting bid price for Tablet will be $15.0. Only applicable to YouTube and Partners line items.

        :return: The youtube_and_partners_bid_multiplier of this DeviceTypeAssignedTargetingOptionDetails.
        :rtype: float
        """
        return self._youtube_and_partners_bid_multiplier

    @youtube_and_partners_bid_multiplier.setter
    def youtube_and_partners_bid_multiplier(self, youtube_and_partners_bid_multiplier):
        """Sets the youtube_and_partners_bid_multiplier of this DeviceTypeAssignedTargetingOptionDetails.

        Output only. Bid multiplier allows you to show your ads more or less frequently based on the device type. It will apply a multiplier on the original bid price. When this field is 0, it indicates this field is not applicable instead of multiplying 0 on the original bid price. For example, if the bid price without multiplier is $10.0 and the multiplier is 1.5 for Tablet, the resulting bid price for Tablet will be $15.0. Only applicable to YouTube and Partners line items.

        :param youtube_and_partners_bid_multiplier: The youtube_and_partners_bid_multiplier of this DeviceTypeAssignedTargetingOptionDetails.
        :type youtube_and_partners_bid_multiplier: float
        """

        self._youtube_and_partners_bid_multiplier = youtube_and_partners_bid_multiplier
