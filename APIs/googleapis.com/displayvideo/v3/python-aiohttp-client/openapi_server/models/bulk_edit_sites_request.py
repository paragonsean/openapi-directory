# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.site import Site
from openapi_server import util


class BulkEditSitesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertiser_id: str=None, created_sites: List[Site]=None, deleted_sites: List[str]=None, partner_id: str=None):
        """BulkEditSitesRequest - a model defined in OpenAPI

        :param advertiser_id: The advertiser_id of this BulkEditSitesRequest.
        :param created_sites: The created_sites of this BulkEditSitesRequest.
        :param deleted_sites: The deleted_sites of this BulkEditSitesRequest.
        :param partner_id: The partner_id of this BulkEditSitesRequest.
        """
        self.openapi_types = {
            'advertiser_id': str,
            'created_sites': List[Site],
            'deleted_sites': List[str],
            'partner_id': str
        }

        self.attribute_map = {
            'advertiser_id': 'advertiserId',
            'created_sites': 'createdSites',
            'deleted_sites': 'deletedSites',
            'partner_id': 'partnerId'
        }

        self._advertiser_id = advertiser_id
        self._created_sites = created_sites
        self._deleted_sites = deleted_sites
        self._partner_id = partner_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkEditSitesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkEditSitesRequest of this BulkEditSitesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this BulkEditSitesRequest.

        The ID of the advertiser that owns the parent channel.

        :return: The advertiser_id of this BulkEditSitesRequest.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this BulkEditSitesRequest.

        The ID of the advertiser that owns the parent channel.

        :param advertiser_id: The advertiser_id of this BulkEditSitesRequest.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def created_sites(self):
        """Gets the created_sites of this BulkEditSitesRequest.

        The sites to create in batch, specified as a list of Sites.

        :return: The created_sites of this BulkEditSitesRequest.
        :rtype: List[Site]
        """
        return self._created_sites

    @created_sites.setter
    def created_sites(self, created_sites):
        """Sets the created_sites of this BulkEditSitesRequest.

        The sites to create in batch, specified as a list of Sites.

        :param created_sites: The created_sites of this BulkEditSitesRequest.
        :type created_sites: List[Site]
        """

        self._created_sites = created_sites

    @property
    def deleted_sites(self):
        """Gets the deleted_sites of this BulkEditSitesRequest.

        The sites to delete in batch, specified as a list of site url_or_app_ids.

        :return: The deleted_sites of this BulkEditSitesRequest.
        :rtype: List[str]
        """
        return self._deleted_sites

    @deleted_sites.setter
    def deleted_sites(self, deleted_sites):
        """Sets the deleted_sites of this BulkEditSitesRequest.

        The sites to delete in batch, specified as a list of site url_or_app_ids.

        :param deleted_sites: The deleted_sites of this BulkEditSitesRequest.
        :type deleted_sites: List[str]
        """

        self._deleted_sites = deleted_sites

    @property
    def partner_id(self):
        """Gets the partner_id of this BulkEditSitesRequest.

        The ID of the partner that owns the parent channel.

        :return: The partner_id of this BulkEditSitesRequest.
        :rtype: str
        """
        return self._partner_id

    @partner_id.setter
    def partner_id(self, partner_id):
        """Sets the partner_id of this BulkEditSitesRequest.

        The ID of the partner that owns the parent channel.

        :param partner_id: The partner_id of this BulkEditSitesRequest.
        :type partner_id: str
        """

        self._partner_id = partner_id
