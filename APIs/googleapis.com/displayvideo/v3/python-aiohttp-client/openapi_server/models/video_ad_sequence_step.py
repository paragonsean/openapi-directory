# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoAdSequenceStep(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_group_id: str=None, interaction_type: str=None, previous_step_id: str=None, step_id: str=None):
        """VideoAdSequenceStep - a model defined in OpenAPI

        :param ad_group_id: The ad_group_id of this VideoAdSequenceStep.
        :param interaction_type: The interaction_type of this VideoAdSequenceStep.
        :param previous_step_id: The previous_step_id of this VideoAdSequenceStep.
        :param step_id: The step_id of this VideoAdSequenceStep.
        """
        self.openapi_types = {
            'ad_group_id': str,
            'interaction_type': str,
            'previous_step_id': str,
            'step_id': str
        }

        self.attribute_map = {
            'ad_group_id': 'adGroupId',
            'interaction_type': 'interactionType',
            'previous_step_id': 'previousStepId',
            'step_id': 'stepId'
        }

        self._ad_group_id = ad_group_id
        self._interaction_type = interaction_type
        self._previous_step_id = previous_step_id
        self._step_id = step_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoAdSequenceStep':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoAdSequenceStep of this VideoAdSequenceStep.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_group_id(self):
        """Gets the ad_group_id of this VideoAdSequenceStep.

        The ID of the corresponding ad group of the step.

        :return: The ad_group_id of this VideoAdSequenceStep.
        :rtype: str
        """
        return self._ad_group_id

    @ad_group_id.setter
    def ad_group_id(self, ad_group_id):
        """Sets the ad_group_id of this VideoAdSequenceStep.

        The ID of the corresponding ad group of the step.

        :param ad_group_id: The ad_group_id of this VideoAdSequenceStep.
        :type ad_group_id: str
        """

        self._ad_group_id = ad_group_id

    @property
    def interaction_type(self):
        """Gets the interaction_type of this VideoAdSequenceStep.

        The interaction on the previous step that will lead the viewer to this step. The first step does not have interaction_type.

        :return: The interaction_type of this VideoAdSequenceStep.
        :rtype: str
        """
        return self._interaction_type

    @interaction_type.setter
    def interaction_type(self, interaction_type):
        """Sets the interaction_type of this VideoAdSequenceStep.

        The interaction on the previous step that will lead the viewer to this step. The first step does not have interaction_type.

        :param interaction_type: The interaction_type of this VideoAdSequenceStep.
        :type interaction_type: str
        """
        allowed_values = ["INTERACTION_TYPE_UNSPECIFIED", "INTERACTION_TYPE_PAID_VIEW", "INTERACTION_TYPE_SKIP", "INTERACTION_TYPE_IMPRESSION", "INTERACTION_TYPE_ENGAGED_IMPRESSION"]  # noqa: E501
        if interaction_type not in allowed_values:
            raise ValueError(
                "Invalid value for `interaction_type` ({0}), must be one of {1}"
                .format(interaction_type, allowed_values)
            )

        self._interaction_type = interaction_type

    @property
    def previous_step_id(self):
        """Gets the previous_step_id of this VideoAdSequenceStep.

        The ID of the previous step. The first step does not have previous step.

        :return: The previous_step_id of this VideoAdSequenceStep.
        :rtype: str
        """
        return self._previous_step_id

    @previous_step_id.setter
    def previous_step_id(self, previous_step_id):
        """Sets the previous_step_id of this VideoAdSequenceStep.

        The ID of the previous step. The first step does not have previous step.

        :param previous_step_id: The previous_step_id of this VideoAdSequenceStep.
        :type previous_step_id: str
        """

        self._previous_step_id = previous_step_id

    @property
    def step_id(self):
        """Gets the step_id of this VideoAdSequenceStep.

        The ID of the step.

        :return: The step_id of this VideoAdSequenceStep.
        :rtype: str
        """
        return self._step_id

    @step_id.setter
    def step_id(self, step_id):
        """Sets the step_id of this VideoAdSequenceStep.

        The ID of the step.

        :param step_id: The step_id of this VideoAdSequenceStep.
        :type step_id: str
        """

        self._step_id = step_id
