# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_bidding_algorithm_rules_error import CustomBiddingAlgorithmRulesError
from openapi_server.models.custom_bidding_algorithm_rules_ref import CustomBiddingAlgorithmRulesRef
from openapi_server import util


class CustomBiddingAlgorithmRules(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, create_time: str=None, custom_bidding_algorithm_id: str=None, custom_bidding_algorithm_rules_id: str=None, error: CustomBiddingAlgorithmRulesError=None, name: str=None, rules: CustomBiddingAlgorithmRulesRef=None, state: str=None):
        """CustomBiddingAlgorithmRules - a model defined in OpenAPI

        :param active: The active of this CustomBiddingAlgorithmRules.
        :param create_time: The create_time of this CustomBiddingAlgorithmRules.
        :param custom_bidding_algorithm_id: The custom_bidding_algorithm_id of this CustomBiddingAlgorithmRules.
        :param custom_bidding_algorithm_rules_id: The custom_bidding_algorithm_rules_id of this CustomBiddingAlgorithmRules.
        :param error: The error of this CustomBiddingAlgorithmRules.
        :param name: The name of this CustomBiddingAlgorithmRules.
        :param rules: The rules of this CustomBiddingAlgorithmRules.
        :param state: The state of this CustomBiddingAlgorithmRules.
        """
        self.openapi_types = {
            'active': bool,
            'create_time': str,
            'custom_bidding_algorithm_id': str,
            'custom_bidding_algorithm_rules_id': str,
            'error': CustomBiddingAlgorithmRulesError,
            'name': str,
            'rules': CustomBiddingAlgorithmRulesRef,
            'state': str
        }

        self.attribute_map = {
            'active': 'active',
            'create_time': 'createTime',
            'custom_bidding_algorithm_id': 'customBiddingAlgorithmId',
            'custom_bidding_algorithm_rules_id': 'customBiddingAlgorithmRulesId',
            'error': 'error',
            'name': 'name',
            'rules': 'rules',
            'state': 'state'
        }

        self._active = active
        self._create_time = create_time
        self._custom_bidding_algorithm_id = custom_bidding_algorithm_id
        self._custom_bidding_algorithm_rules_id = custom_bidding_algorithm_rules_id
        self._error = error
        self._name = name
        self._rules = rules
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomBiddingAlgorithmRules':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomBiddingAlgorithmRules of this CustomBiddingAlgorithmRules.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this CustomBiddingAlgorithmRules.

        Output only. Whether the rules resource is currently being used for scoring by the parent algorithm.

        :return: The active of this CustomBiddingAlgorithmRules.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this CustomBiddingAlgorithmRules.

        Output only. Whether the rules resource is currently being used for scoring by the parent algorithm.

        :param active: The active of this CustomBiddingAlgorithmRules.
        :type active: bool
        """

        self._active = active

    @property
    def create_time(self):
        """Gets the create_time of this CustomBiddingAlgorithmRules.

        Output only. The time when the rules resource was created.

        :return: The create_time of this CustomBiddingAlgorithmRules.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this CustomBiddingAlgorithmRules.

        Output only. The time when the rules resource was created.

        :param create_time: The create_time of this CustomBiddingAlgorithmRules.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def custom_bidding_algorithm_id(self):
        """Gets the custom_bidding_algorithm_id of this CustomBiddingAlgorithmRules.

        Output only. The unique ID of the custom bidding algorithm that the rules resource belongs to.

        :return: The custom_bidding_algorithm_id of this CustomBiddingAlgorithmRules.
        :rtype: str
        """
        return self._custom_bidding_algorithm_id

    @custom_bidding_algorithm_id.setter
    def custom_bidding_algorithm_id(self, custom_bidding_algorithm_id):
        """Sets the custom_bidding_algorithm_id of this CustomBiddingAlgorithmRules.

        Output only. The unique ID of the custom bidding algorithm that the rules resource belongs to.

        :param custom_bidding_algorithm_id: The custom_bidding_algorithm_id of this CustomBiddingAlgorithmRules.
        :type custom_bidding_algorithm_id: str
        """

        self._custom_bidding_algorithm_id = custom_bidding_algorithm_id

    @property
    def custom_bidding_algorithm_rules_id(self):
        """Gets the custom_bidding_algorithm_rules_id of this CustomBiddingAlgorithmRules.

        Output only. The unique ID of the rules resource.

        :return: The custom_bidding_algorithm_rules_id of this CustomBiddingAlgorithmRules.
        :rtype: str
        """
        return self._custom_bidding_algorithm_rules_id

    @custom_bidding_algorithm_rules_id.setter
    def custom_bidding_algorithm_rules_id(self, custom_bidding_algorithm_rules_id):
        """Sets the custom_bidding_algorithm_rules_id of this CustomBiddingAlgorithmRules.

        Output only. The unique ID of the rules resource.

        :param custom_bidding_algorithm_rules_id: The custom_bidding_algorithm_rules_id of this CustomBiddingAlgorithmRules.
        :type custom_bidding_algorithm_rules_id: str
        """

        self._custom_bidding_algorithm_rules_id = custom_bidding_algorithm_rules_id

    @property
    def error(self):
        """Gets the error of this CustomBiddingAlgorithmRules.


        :return: The error of this CustomBiddingAlgorithmRules.
        :rtype: CustomBiddingAlgorithmRulesError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this CustomBiddingAlgorithmRules.


        :param error: The error of this CustomBiddingAlgorithmRules.
        :type error: CustomBiddingAlgorithmRulesError
        """

        self._error = error

    @property
    def name(self):
        """Gets the name of this CustomBiddingAlgorithmRules.

        Output only. The resource name of the rules resource.

        :return: The name of this CustomBiddingAlgorithmRules.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomBiddingAlgorithmRules.

        Output only. The resource name of the rules resource.

        :param name: The name of this CustomBiddingAlgorithmRules.
        :type name: str
        """

        self._name = name

    @property
    def rules(self):
        """Gets the rules of this CustomBiddingAlgorithmRules.


        :return: The rules of this CustomBiddingAlgorithmRules.
        :rtype: CustomBiddingAlgorithmRulesRef
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this CustomBiddingAlgorithmRules.


        :param rules: The rules of this CustomBiddingAlgorithmRules.
        :type rules: CustomBiddingAlgorithmRulesRef
        """

        self._rules = rules

    @property
    def state(self):
        """Gets the state of this CustomBiddingAlgorithmRules.

        Output only. The state of the rules resource.

        :return: The state of this CustomBiddingAlgorithmRules.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CustomBiddingAlgorithmRules.

        Output only. The state of the rules resource.

        :param state: The state of this CustomBiddingAlgorithmRules.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACCEPTED", "REJECTED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
