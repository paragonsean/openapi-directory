# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inventory_source_accessors_advertiser_accessors import InventorySourceAccessorsAdvertiserAccessors
from openapi_server.models.inventory_source_accessors_partner_accessor import InventorySourceAccessorsPartnerAccessor
from openapi_server import util


class InventorySourceAccessors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertisers: InventorySourceAccessorsAdvertiserAccessors=None, partner: InventorySourceAccessorsPartnerAccessor=None):
        """InventorySourceAccessors - a model defined in OpenAPI

        :param advertisers: The advertisers of this InventorySourceAccessors.
        :param partner: The partner of this InventorySourceAccessors.
        """
        self.openapi_types = {
            'advertisers': InventorySourceAccessorsAdvertiserAccessors,
            'partner': InventorySourceAccessorsPartnerAccessor
        }

        self.attribute_map = {
            'advertisers': 'advertisers',
            'partner': 'partner'
        }

        self._advertisers = advertisers
        self._partner = partner

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventorySourceAccessors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventorySourceAccessors of this InventorySourceAccessors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertisers(self):
        """Gets the advertisers of this InventorySourceAccessors.


        :return: The advertisers of this InventorySourceAccessors.
        :rtype: InventorySourceAccessorsAdvertiserAccessors
        """
        return self._advertisers

    @advertisers.setter
    def advertisers(self, advertisers):
        """Sets the advertisers of this InventorySourceAccessors.


        :param advertisers: The advertisers of this InventorySourceAccessors.
        :type advertisers: InventorySourceAccessorsAdvertiserAccessors
        """

        self._advertisers = advertisers

    @property
    def partner(self):
        """Gets the partner of this InventorySourceAccessors.


        :return: The partner of this InventorySourceAccessors.
        :rtype: InventorySourceAccessorsPartnerAccessor
        """
        return self._partner

    @partner.setter
    def partner(self, partner):
        """Sets the partner of this InventorySourceAccessors.


        :param partner: The partner of this InventorySourceAccessors.
        :type partner: InventorySourceAccessorsPartnerAccessor
        """

        self._partner = partner
