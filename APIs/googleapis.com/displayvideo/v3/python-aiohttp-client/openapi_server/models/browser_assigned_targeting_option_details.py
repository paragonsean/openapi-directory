# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BrowserAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, negative: bool=None, targeting_option_id: str=None):
        """BrowserAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param display_name: The display_name of this BrowserAssignedTargetingOptionDetails.
        :param negative: The negative of this BrowserAssignedTargetingOptionDetails.
        :param targeting_option_id: The targeting_option_id of this BrowserAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'display_name': str,
            'negative': bool,
            'targeting_option_id': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'negative': 'negative',
            'targeting_option_id': 'targetingOptionId'
        }

        self._display_name = display_name
        self._negative = negative
        self._targeting_option_id = targeting_option_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BrowserAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BrowserAssignedTargetingOptionDetails of this BrowserAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this BrowserAssignedTargetingOptionDetails.

        Output only. The display name of the browser.

        :return: The display_name of this BrowserAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this BrowserAssignedTargetingOptionDetails.

        Output only. The display name of the browser.

        :param display_name: The display_name of this BrowserAssignedTargetingOptionDetails.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def negative(self):
        """Gets the negative of this BrowserAssignedTargetingOptionDetails.

        Indicates if this option is being negatively targeted. All assigned browser targeting options on the same resource must have the same value for this field.

        :return: The negative of this BrowserAssignedTargetingOptionDetails.
        :rtype: bool
        """
        return self._negative

    @negative.setter
    def negative(self, negative):
        """Sets the negative of this BrowserAssignedTargetingOptionDetails.

        Indicates if this option is being negatively targeted. All assigned browser targeting options on the same resource must have the same value for this field.

        :param negative: The negative of this BrowserAssignedTargetingOptionDetails.
        :type negative: bool
        """

        self._negative = negative

    @property
    def targeting_option_id(self):
        """Gets the targeting_option_id of this BrowserAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_BROWSER`.

        :return: The targeting_option_id of this BrowserAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._targeting_option_id

    @targeting_option_id.setter
    def targeting_option_id(self, targeting_option_id):
        """Sets the targeting_option_id of this BrowserAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_BROWSER`.

        :param targeting_option_id: The targeting_option_id of this BrowserAssignedTargetingOptionDetails.
        :type targeting_option_id: str
        """

        self._targeting_option_id = targeting_option_id
