# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GeoRegionSearchTerms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, geo_region_query: str=None):
        """GeoRegionSearchTerms - a model defined in OpenAPI

        :param geo_region_query: The geo_region_query of this GeoRegionSearchTerms.
        """
        self.openapi_types = {
            'geo_region_query': str
        }

        self.attribute_map = {
            'geo_region_query': 'geoRegionQuery'
        }

        self._geo_region_query = geo_region_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeoRegionSearchTerms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeoRegionSearchTerms of this GeoRegionSearchTerms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def geo_region_query(self):
        """Gets the geo_region_query of this GeoRegionSearchTerms.

        The search query for the desired geo region. The query can be a prefix, e.g. \"New Yor\", \"Seattle\", \"USA\", etc.

        :return: The geo_region_query of this GeoRegionSearchTerms.
        :rtype: str
        """
        return self._geo_region_query

    @geo_region_query.setter
    def geo_region_query(self, geo_region_query):
        """Sets the geo_region_query of this GeoRegionSearchTerms.

        The search query for the desired geo region. The query can be a prefix, e.g. \"New Yor\", \"Seattle\", \"USA\", etc.

        :param geo_region_query: The geo_region_query of this GeoRegionSearchTerms.
        :type geo_region_query: str
        """

        self._geo_region_query = geo_region_query
