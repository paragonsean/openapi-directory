# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InventorySourceGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, inventory_source_group_id: str=None, name: str=None):
        """InventorySourceGroup - a model defined in OpenAPI

        :param display_name: The display_name of this InventorySourceGroup.
        :param inventory_source_group_id: The inventory_source_group_id of this InventorySourceGroup.
        :param name: The name of this InventorySourceGroup.
        """
        self.openapi_types = {
            'display_name': str,
            'inventory_source_group_id': str,
            'name': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'inventory_source_group_id': 'inventorySourceGroupId',
            'name': 'name'
        }

        self._display_name = display_name
        self._inventory_source_group_id = inventory_source_group_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventorySourceGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventorySourceGroup of this InventorySourceGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this InventorySourceGroup.

        Required. The display name of the inventory source group. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :return: The display_name of this InventorySourceGroup.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this InventorySourceGroup.

        Required. The display name of the inventory source group. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :param display_name: The display_name of this InventorySourceGroup.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def inventory_source_group_id(self):
        """Gets the inventory_source_group_id of this InventorySourceGroup.

        Output only. The unique ID of the inventory source group. Assigned by the system.

        :return: The inventory_source_group_id of this InventorySourceGroup.
        :rtype: str
        """
        return self._inventory_source_group_id

    @inventory_source_group_id.setter
    def inventory_source_group_id(self, inventory_source_group_id):
        """Sets the inventory_source_group_id of this InventorySourceGroup.

        Output only. The unique ID of the inventory source group. Assigned by the system.

        :param inventory_source_group_id: The inventory_source_group_id of this InventorySourceGroup.
        :type inventory_source_group_id: str
        """

        self._inventory_source_group_id = inventory_source_group_id

    @property
    def name(self):
        """Gets the name of this InventorySourceGroup.

        Output only. The resource name of the inventory source group.

        :return: The name of this InventorySourceGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InventorySourceGroup.

        Output only. The resource name of the inventory source group.

        :param name: The name of this InventorySourceGroup.
        :type name: str
        """

        self._name = name
