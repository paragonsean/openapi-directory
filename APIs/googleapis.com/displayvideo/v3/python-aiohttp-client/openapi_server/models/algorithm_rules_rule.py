# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.algorithm_rules_rule_condition import AlgorithmRulesRuleCondition
from openapi_server.models.algorithm_rules_signal_value import AlgorithmRulesSignalValue
from openapi_server import util


class AlgorithmRulesRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conditions: List[AlgorithmRulesRuleCondition]=None, default_return_value: AlgorithmRulesSignalValue=None):
        """AlgorithmRulesRule - a model defined in OpenAPI

        :param conditions: The conditions of this AlgorithmRulesRule.
        :param default_return_value: The default_return_value of this AlgorithmRulesRule.
        """
        self.openapi_types = {
            'conditions': List[AlgorithmRulesRuleCondition],
            'default_return_value': AlgorithmRulesSignalValue
        }

        self.attribute_map = {
            'conditions': 'conditions',
            'default_return_value': 'defaultReturnValue'
        }

        self._conditions = conditions
        self._default_return_value = default_return_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlgorithmRulesRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlgorithmRulesRule of this AlgorithmRulesRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conditions(self):
        """Gets the conditions of this AlgorithmRulesRule.

        List of conditions in this rule. The criteria among conditions should be mutually exclusive.

        :return: The conditions of this AlgorithmRulesRule.
        :rtype: List[AlgorithmRulesRuleCondition]
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this AlgorithmRulesRule.

        List of conditions in this rule. The criteria among conditions should be mutually exclusive.

        :param conditions: The conditions of this AlgorithmRulesRule.
        :type conditions: List[AlgorithmRulesRuleCondition]
        """

        self._conditions = conditions

    @property
    def default_return_value(self):
        """Gets the default_return_value of this AlgorithmRulesRule.


        :return: The default_return_value of this AlgorithmRulesRule.
        :rtype: AlgorithmRulesSignalValue
        """
        return self._default_return_value

    @default_return_value.setter
    def default_return_value(self, default_return_value):
        """Sets the default_return_value of this AlgorithmRulesRule.


        :param default_return_value: The default_return_value of this AlgorithmRulesRule.
        :type default_return_value: AlgorithmRulesSignalValue
        """

        self._default_return_value = default_return_value
