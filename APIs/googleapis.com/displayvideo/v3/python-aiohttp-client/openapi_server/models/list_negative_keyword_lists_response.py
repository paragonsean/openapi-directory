# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.negative_keyword_list import NegativeKeywordList
from openapi_server import util


class ListNegativeKeywordListsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, negative_keyword_lists: List[NegativeKeywordList]=None, next_page_token: str=None):
        """ListNegativeKeywordListsResponse - a model defined in OpenAPI

        :param negative_keyword_lists: The negative_keyword_lists of this ListNegativeKeywordListsResponse.
        :param next_page_token: The next_page_token of this ListNegativeKeywordListsResponse.
        """
        self.openapi_types = {
            'negative_keyword_lists': List[NegativeKeywordList],
            'next_page_token': str
        }

        self.attribute_map = {
            'negative_keyword_lists': 'negativeKeywordLists',
            'next_page_token': 'nextPageToken'
        }

        self._negative_keyword_lists = negative_keyword_lists
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListNegativeKeywordListsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListNegativeKeywordListsResponse of this ListNegativeKeywordListsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def negative_keyword_lists(self):
        """Gets the negative_keyword_lists of this ListNegativeKeywordListsResponse.

        The list of negative keyword lists. This list will be absent if empty.

        :return: The negative_keyword_lists of this ListNegativeKeywordListsResponse.
        :rtype: List[NegativeKeywordList]
        """
        return self._negative_keyword_lists

    @negative_keyword_lists.setter
    def negative_keyword_lists(self, negative_keyword_lists):
        """Sets the negative_keyword_lists of this ListNegativeKeywordListsResponse.

        The list of negative keyword lists. This list will be absent if empty.

        :param negative_keyword_lists: The negative_keyword_lists of this ListNegativeKeywordListsResponse.
        :type negative_keyword_lists: List[NegativeKeywordList]
        """

        self._negative_keyword_lists = negative_keyword_lists

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListNegativeKeywordListsResponse.

        A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywordLists` method to retrieve the next page of results.

        :return: The next_page_token of this ListNegativeKeywordListsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListNegativeKeywordListsResponse.

        A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywordLists` method to retrieve the next page of results.

        :param next_page_token: The next_page_token of this ListNegativeKeywordListsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
