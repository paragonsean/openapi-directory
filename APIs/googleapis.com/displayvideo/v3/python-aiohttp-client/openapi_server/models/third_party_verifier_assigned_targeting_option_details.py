# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.adloox import Adloox
from openapi_server.models.double_verify import DoubleVerify
from openapi_server.models.integral_ad_science import IntegralAdScience
from openapi_server import util


class ThirdPartyVerifierAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adloox: Adloox=None, double_verify: DoubleVerify=None, integral_ad_science: IntegralAdScience=None):
        """ThirdPartyVerifierAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param adloox: The adloox of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :param double_verify: The double_verify of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :param integral_ad_science: The integral_ad_science of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'adloox': Adloox,
            'double_verify': DoubleVerify,
            'integral_ad_science': IntegralAdScience
        }

        self.attribute_map = {
            'adloox': 'adloox',
            'double_verify': 'doubleVerify',
            'integral_ad_science': 'integralAdScience'
        }

        self._adloox = adloox
        self._double_verify = double_verify
        self._integral_ad_science = integral_ad_science

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThirdPartyVerifierAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThirdPartyVerifierAssignedTargetingOptionDetails of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adloox(self):
        """Gets the adloox of this ThirdPartyVerifierAssignedTargetingOptionDetails.


        :return: The adloox of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :rtype: Adloox
        """
        return self._adloox

    @adloox.setter
    def adloox(self, adloox):
        """Sets the adloox of this ThirdPartyVerifierAssignedTargetingOptionDetails.


        :param adloox: The adloox of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :type adloox: Adloox
        """

        self._adloox = adloox

    @property
    def double_verify(self):
        """Gets the double_verify of this ThirdPartyVerifierAssignedTargetingOptionDetails.


        :return: The double_verify of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :rtype: DoubleVerify
        """
        return self._double_verify

    @double_verify.setter
    def double_verify(self, double_verify):
        """Sets the double_verify of this ThirdPartyVerifierAssignedTargetingOptionDetails.


        :param double_verify: The double_verify of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :type double_verify: DoubleVerify
        """

        self._double_verify = double_verify

    @property
    def integral_ad_science(self):
        """Gets the integral_ad_science of this ThirdPartyVerifierAssignedTargetingOptionDetails.


        :return: The integral_ad_science of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :rtype: IntegralAdScience
        """
        return self._integral_ad_science

    @integral_ad_science.setter
    def integral_ad_science(self, integral_ad_science):
        """Sets the integral_ad_science of this ThirdPartyVerifierAssignedTargetingOptionDetails.


        :param integral_ad_science: The integral_ad_science of this ThirdPartyVerifierAssignedTargetingOptionDetails.
        :type integral_ad_science: IntegralAdScience
        """

        self._integral_ad_science = integral_ad_science
