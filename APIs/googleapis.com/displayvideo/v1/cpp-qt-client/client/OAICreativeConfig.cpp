/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreativeConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreativeConfig::OAICreativeConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreativeConfig::OAICreativeConfig() {
    this->initializeModel();
}

OAICreativeConfig::~OAICreativeConfig() {}

void OAICreativeConfig::initializeModel() {

    m_creative_type_isSet = false;
    m_creative_type_isValid = false;

    m_display_creative_config_isSet = false;
    m_display_creative_config_isValid = false;

    m_video_creative_config_isSet = false;
    m_video_creative_config_isValid = false;
}

void OAICreativeConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreativeConfig::fromJsonObject(QJsonObject json) {

    m_creative_type_isValid = ::OpenAPI::fromJsonValue(m_creative_type, json[QString("creativeType")]);
    m_creative_type_isSet = !json[QString("creativeType")].isNull() && m_creative_type_isValid;

    m_display_creative_config_isValid = ::OpenAPI::fromJsonValue(m_display_creative_config, json[QString("displayCreativeConfig")]);
    m_display_creative_config_isSet = !json[QString("displayCreativeConfig")].isNull() && m_display_creative_config_isValid;

    m_video_creative_config_isValid = ::OpenAPI::fromJsonValue(m_video_creative_config, json[QString("videoCreativeConfig")]);
    m_video_creative_config_isSet = !json[QString("videoCreativeConfig")].isNull() && m_video_creative_config_isValid;
}

QString OAICreativeConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreativeConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_creative_type_isSet) {
        obj.insert(QString("creativeType"), ::OpenAPI::toJsonValue(m_creative_type));
    }
    if (m_display_creative_config.isSet()) {
        obj.insert(QString("displayCreativeConfig"), ::OpenAPI::toJsonValue(m_display_creative_config));
    }
    if (m_video_creative_config.isSet()) {
        obj.insert(QString("videoCreativeConfig"), ::OpenAPI::toJsonValue(m_video_creative_config));
    }
    return obj;
}

QString OAICreativeConfig::getCreativeType() const {
    return m_creative_type;
}
void OAICreativeConfig::setCreativeType(const QString &creative_type) {
    m_creative_type = creative_type;
    m_creative_type_isSet = true;
}

bool OAICreativeConfig::is_creative_type_Set() const{
    return m_creative_type_isSet;
}

bool OAICreativeConfig::is_creative_type_Valid() const{
    return m_creative_type_isValid;
}

OAIInventorySourceDisplayCreativeConfig OAICreativeConfig::getDisplayCreativeConfig() const {
    return m_display_creative_config;
}
void OAICreativeConfig::setDisplayCreativeConfig(const OAIInventorySourceDisplayCreativeConfig &display_creative_config) {
    m_display_creative_config = display_creative_config;
    m_display_creative_config_isSet = true;
}

bool OAICreativeConfig::is_display_creative_config_Set() const{
    return m_display_creative_config_isSet;
}

bool OAICreativeConfig::is_display_creative_config_Valid() const{
    return m_display_creative_config_isValid;
}

OAIInventorySourceVideoCreativeConfig OAICreativeConfig::getVideoCreativeConfig() const {
    return m_video_creative_config;
}
void OAICreativeConfig::setVideoCreativeConfig(const OAIInventorySourceVideoCreativeConfig &video_creative_config) {
    m_video_creative_config = video_creative_config;
    m_video_creative_config_isSet = true;
}

bool OAICreativeConfig::is_video_creative_config_Set() const{
    return m_video_creative_config_isSet;
}

bool OAICreativeConfig::is_video_creative_config_Valid() const{
    return m_video_creative_config_isValid;
}

bool OAICreativeConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creative_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_creative_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_creative_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreativeConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
