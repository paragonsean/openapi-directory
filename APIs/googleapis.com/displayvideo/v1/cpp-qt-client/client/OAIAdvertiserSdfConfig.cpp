/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvertiserSdfConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvertiserSdfConfig::OAIAdvertiserSdfConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvertiserSdfConfig::OAIAdvertiserSdfConfig() {
    this->initializeModel();
}

OAIAdvertiserSdfConfig::~OAIAdvertiserSdfConfig() {}

void OAIAdvertiserSdfConfig::initializeModel() {

    m_override_partner_sdf_config_isSet = false;
    m_override_partner_sdf_config_isValid = false;

    m_sdf_config_isSet = false;
    m_sdf_config_isValid = false;
}

void OAIAdvertiserSdfConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvertiserSdfConfig::fromJsonObject(QJsonObject json) {

    m_override_partner_sdf_config_isValid = ::OpenAPI::fromJsonValue(m_override_partner_sdf_config, json[QString("overridePartnerSdfConfig")]);
    m_override_partner_sdf_config_isSet = !json[QString("overridePartnerSdfConfig")].isNull() && m_override_partner_sdf_config_isValid;

    m_sdf_config_isValid = ::OpenAPI::fromJsonValue(m_sdf_config, json[QString("sdfConfig")]);
    m_sdf_config_isSet = !json[QString("sdfConfig")].isNull() && m_sdf_config_isValid;
}

QString OAIAdvertiserSdfConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvertiserSdfConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_override_partner_sdf_config_isSet) {
        obj.insert(QString("overridePartnerSdfConfig"), ::OpenAPI::toJsonValue(m_override_partner_sdf_config));
    }
    if (m_sdf_config.isSet()) {
        obj.insert(QString("sdfConfig"), ::OpenAPI::toJsonValue(m_sdf_config));
    }
    return obj;
}

bool OAIAdvertiserSdfConfig::isOverridePartnerSdfConfig() const {
    return m_override_partner_sdf_config;
}
void OAIAdvertiserSdfConfig::setOverridePartnerSdfConfig(const bool &override_partner_sdf_config) {
    m_override_partner_sdf_config = override_partner_sdf_config;
    m_override_partner_sdf_config_isSet = true;
}

bool OAIAdvertiserSdfConfig::is_override_partner_sdf_config_Set() const{
    return m_override_partner_sdf_config_isSet;
}

bool OAIAdvertiserSdfConfig::is_override_partner_sdf_config_Valid() const{
    return m_override_partner_sdf_config_isValid;
}

OAISdfConfig OAIAdvertiserSdfConfig::getSdfConfig() const {
    return m_sdf_config;
}
void OAIAdvertiserSdfConfig::setSdfConfig(const OAISdfConfig &sdf_config) {
    m_sdf_config = sdf_config;
    m_sdf_config_isSet = true;
}

bool OAIAdvertiserSdfConfig::is_sdf_config_Set() const{
    return m_sdf_config_isSet;
}

bool OAIAdvertiserSdfConfig::is_sdf_config_Valid() const{
    return m_sdf_config_isValid;
}

bool OAIAdvertiserSdfConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_override_partner_sdf_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sdf_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvertiserSdfConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
