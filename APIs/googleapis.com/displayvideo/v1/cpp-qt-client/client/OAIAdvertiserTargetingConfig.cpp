/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvertiserTargetingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvertiserTargetingConfig::OAIAdvertiserTargetingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvertiserTargetingConfig::OAIAdvertiserTargetingConfig() {
    this->initializeModel();
}

OAIAdvertiserTargetingConfig::~OAIAdvertiserTargetingConfig() {}

void OAIAdvertiserTargetingConfig::initializeModel() {

    m_exempt_tv_from_viewability_targeting_isSet = false;
    m_exempt_tv_from_viewability_targeting_isValid = false;
}

void OAIAdvertiserTargetingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvertiserTargetingConfig::fromJsonObject(QJsonObject json) {

    m_exempt_tv_from_viewability_targeting_isValid = ::OpenAPI::fromJsonValue(m_exempt_tv_from_viewability_targeting, json[QString("exemptTvFromViewabilityTargeting")]);
    m_exempt_tv_from_viewability_targeting_isSet = !json[QString("exemptTvFromViewabilityTargeting")].isNull() && m_exempt_tv_from_viewability_targeting_isValid;
}

QString OAIAdvertiserTargetingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvertiserTargetingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_exempt_tv_from_viewability_targeting_isSet) {
        obj.insert(QString("exemptTvFromViewabilityTargeting"), ::OpenAPI::toJsonValue(m_exempt_tv_from_viewability_targeting));
    }
    return obj;
}

bool OAIAdvertiserTargetingConfig::isExemptTvFromViewabilityTargeting() const {
    return m_exempt_tv_from_viewability_targeting;
}
void OAIAdvertiserTargetingConfig::setExemptTvFromViewabilityTargeting(const bool &exempt_tv_from_viewability_targeting) {
    m_exempt_tv_from_viewability_targeting = exempt_tv_from_viewability_targeting;
    m_exempt_tv_from_viewability_targeting_isSet = true;
}

bool OAIAdvertiserTargetingConfig::is_exempt_tv_from_viewability_targeting_Set() const{
    return m_exempt_tv_from_viewability_targeting_isSet;
}

bool OAIAdvertiserTargetingConfig::is_exempt_tv_from_viewability_targeting_Valid() const{
    return m_exempt_tv_from_viewability_targeting_isValid;
}

bool OAIAdvertiserTargetingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exempt_tv_from_viewability_targeting_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvertiserTargetingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
