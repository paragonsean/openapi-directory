/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEditGuaranteedOrderReadAccessorsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEditGuaranteedOrderReadAccessorsResponse::OAIEditGuaranteedOrderReadAccessorsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEditGuaranteedOrderReadAccessorsResponse::OAIEditGuaranteedOrderReadAccessorsResponse() {
    this->initializeModel();
}

OAIEditGuaranteedOrderReadAccessorsResponse::~OAIEditGuaranteedOrderReadAccessorsResponse() {}

void OAIEditGuaranteedOrderReadAccessorsResponse::initializeModel() {

    m_read_access_inherited_isSet = false;
    m_read_access_inherited_isValid = false;

    m_read_advertiser_ids_isSet = false;
    m_read_advertiser_ids_isValid = false;
}

void OAIEditGuaranteedOrderReadAccessorsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEditGuaranteedOrderReadAccessorsResponse::fromJsonObject(QJsonObject json) {

    m_read_access_inherited_isValid = ::OpenAPI::fromJsonValue(m_read_access_inherited, json[QString("readAccessInherited")]);
    m_read_access_inherited_isSet = !json[QString("readAccessInherited")].isNull() && m_read_access_inherited_isValid;

    m_read_advertiser_ids_isValid = ::OpenAPI::fromJsonValue(m_read_advertiser_ids, json[QString("readAdvertiserIds")]);
    m_read_advertiser_ids_isSet = !json[QString("readAdvertiserIds")].isNull() && m_read_advertiser_ids_isValid;
}

QString OAIEditGuaranteedOrderReadAccessorsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEditGuaranteedOrderReadAccessorsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_read_access_inherited_isSet) {
        obj.insert(QString("readAccessInherited"), ::OpenAPI::toJsonValue(m_read_access_inherited));
    }
    if (m_read_advertiser_ids.size() > 0) {
        obj.insert(QString("readAdvertiserIds"), ::OpenAPI::toJsonValue(m_read_advertiser_ids));
    }
    return obj;
}

bool OAIEditGuaranteedOrderReadAccessorsResponse::isReadAccessInherited() const {
    return m_read_access_inherited;
}
void OAIEditGuaranteedOrderReadAccessorsResponse::setReadAccessInherited(const bool &read_access_inherited) {
    m_read_access_inherited = read_access_inherited;
    m_read_access_inherited_isSet = true;
}

bool OAIEditGuaranteedOrderReadAccessorsResponse::is_read_access_inherited_Set() const{
    return m_read_access_inherited_isSet;
}

bool OAIEditGuaranteedOrderReadAccessorsResponse::is_read_access_inherited_Valid() const{
    return m_read_access_inherited_isValid;
}

QList<QString> OAIEditGuaranteedOrderReadAccessorsResponse::getReadAdvertiserIds() const {
    return m_read_advertiser_ids;
}
void OAIEditGuaranteedOrderReadAccessorsResponse::setReadAdvertiserIds(const QList<QString> &read_advertiser_ids) {
    m_read_advertiser_ids = read_advertiser_ids;
    m_read_advertiser_ids_isSet = true;
}

bool OAIEditGuaranteedOrderReadAccessorsResponse::is_read_advertiser_ids_Set() const{
    return m_read_advertiser_ids_isSet;
}

bool OAIEditGuaranteedOrderReadAccessorsResponse::is_read_advertiser_ids_Valid() const{
    return m_read_advertiser_ids_isValid;
}

bool OAIEditGuaranteedOrderReadAccessorsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_read_access_inherited_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_read_advertiser_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEditGuaranteedOrderReadAccessorsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
