/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironmentAssignedTargetingOptionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironmentAssignedTargetingOptionDetails::OAIEnvironmentAssignedTargetingOptionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironmentAssignedTargetingOptionDetails::OAIEnvironmentAssignedTargetingOptionDetails() {
    this->initializeModel();
}

OAIEnvironmentAssignedTargetingOptionDetails::~OAIEnvironmentAssignedTargetingOptionDetails() {}

void OAIEnvironmentAssignedTargetingOptionDetails::initializeModel() {

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_targeting_option_id_isSet = false;
    m_targeting_option_id_isValid = false;
}

void OAIEnvironmentAssignedTargetingOptionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironmentAssignedTargetingOptionDetails::fromJsonObject(QJsonObject json) {

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_targeting_option_id_isValid = ::OpenAPI::fromJsonValue(m_targeting_option_id, json[QString("targetingOptionId")]);
    m_targeting_option_id_isSet = !json[QString("targetingOptionId")].isNull() && m_targeting_option_id_isValid;
}

QString OAIEnvironmentAssignedTargetingOptionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironmentAssignedTargetingOptionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_targeting_option_id_isSet) {
        obj.insert(QString("targetingOptionId"), ::OpenAPI::toJsonValue(m_targeting_option_id));
    }
    return obj;
}

QString OAIEnvironmentAssignedTargetingOptionDetails::getEnvironment() const {
    return m_environment;
}
void OAIEnvironmentAssignedTargetingOptionDetails::setEnvironment(const QString &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIEnvironmentAssignedTargetingOptionDetails::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIEnvironmentAssignedTargetingOptionDetails::is_environment_Valid() const{
    return m_environment_isValid;
}

QString OAIEnvironmentAssignedTargetingOptionDetails::getTargetingOptionId() const {
    return m_targeting_option_id;
}
void OAIEnvironmentAssignedTargetingOptionDetails::setTargetingOptionId(const QString &targeting_option_id) {
    m_targeting_option_id = targeting_option_id;
    m_targeting_option_id_isSet = true;
}

bool OAIEnvironmentAssignedTargetingOptionDetails::is_targeting_option_id_Set() const{
    return m_targeting_option_id_isSet;
}

bool OAIEnvironmentAssignedTargetingOptionDetails::is_targeting_option_id_Valid() const{
    return m_targeting_option_id_isValid;
}

bool OAIEnvironmentAssignedTargetingOptionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironmentAssignedTargetingOptionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
