/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICampaignBudget.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICampaignBudget::OAICampaignBudget(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICampaignBudget::OAICampaignBudget() {
    this->initializeModel();
}

OAICampaignBudget::~OAICampaignBudget() {}

void OAICampaignBudget::initializeModel() {

    m_budget_amount_micros_isSet = false;
    m_budget_amount_micros_isValid = false;

    m_budget_id_isSet = false;
    m_budget_id_isValid = false;

    m_budget_unit_isSet = false;
    m_budget_unit_isValid = false;

    m_date_range_isSet = false;
    m_date_range_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_external_budget_id_isSet = false;
    m_external_budget_id_isValid = false;

    m_external_budget_source_isSet = false;
    m_external_budget_source_isValid = false;

    m_invoice_grouping_id_isSet = false;
    m_invoice_grouping_id_isValid = false;

    m_prisma_config_isSet = false;
    m_prisma_config_isValid = false;
}

void OAICampaignBudget::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICampaignBudget::fromJsonObject(QJsonObject json) {

    m_budget_amount_micros_isValid = ::OpenAPI::fromJsonValue(m_budget_amount_micros, json[QString("budgetAmountMicros")]);
    m_budget_amount_micros_isSet = !json[QString("budgetAmountMicros")].isNull() && m_budget_amount_micros_isValid;

    m_budget_id_isValid = ::OpenAPI::fromJsonValue(m_budget_id, json[QString("budgetId")]);
    m_budget_id_isSet = !json[QString("budgetId")].isNull() && m_budget_id_isValid;

    m_budget_unit_isValid = ::OpenAPI::fromJsonValue(m_budget_unit, json[QString("budgetUnit")]);
    m_budget_unit_isSet = !json[QString("budgetUnit")].isNull() && m_budget_unit_isValid;

    m_date_range_isValid = ::OpenAPI::fromJsonValue(m_date_range, json[QString("dateRange")]);
    m_date_range_isSet = !json[QString("dateRange")].isNull() && m_date_range_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_external_budget_id_isValid = ::OpenAPI::fromJsonValue(m_external_budget_id, json[QString("externalBudgetId")]);
    m_external_budget_id_isSet = !json[QString("externalBudgetId")].isNull() && m_external_budget_id_isValid;

    m_external_budget_source_isValid = ::OpenAPI::fromJsonValue(m_external_budget_source, json[QString("externalBudgetSource")]);
    m_external_budget_source_isSet = !json[QString("externalBudgetSource")].isNull() && m_external_budget_source_isValid;

    m_invoice_grouping_id_isValid = ::OpenAPI::fromJsonValue(m_invoice_grouping_id, json[QString("invoiceGroupingId")]);
    m_invoice_grouping_id_isSet = !json[QString("invoiceGroupingId")].isNull() && m_invoice_grouping_id_isValid;

    m_prisma_config_isValid = ::OpenAPI::fromJsonValue(m_prisma_config, json[QString("prismaConfig")]);
    m_prisma_config_isSet = !json[QString("prismaConfig")].isNull() && m_prisma_config_isValid;
}

QString OAICampaignBudget::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICampaignBudget::asJsonObject() const {
    QJsonObject obj;
    if (m_budget_amount_micros_isSet) {
        obj.insert(QString("budgetAmountMicros"), ::OpenAPI::toJsonValue(m_budget_amount_micros));
    }
    if (m_budget_id_isSet) {
        obj.insert(QString("budgetId"), ::OpenAPI::toJsonValue(m_budget_id));
    }
    if (m_budget_unit_isSet) {
        obj.insert(QString("budgetUnit"), ::OpenAPI::toJsonValue(m_budget_unit));
    }
    if (m_date_range.isSet()) {
        obj.insert(QString("dateRange"), ::OpenAPI::toJsonValue(m_date_range));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_external_budget_id_isSet) {
        obj.insert(QString("externalBudgetId"), ::OpenAPI::toJsonValue(m_external_budget_id));
    }
    if (m_external_budget_source_isSet) {
        obj.insert(QString("externalBudgetSource"), ::OpenAPI::toJsonValue(m_external_budget_source));
    }
    if (m_invoice_grouping_id_isSet) {
        obj.insert(QString("invoiceGroupingId"), ::OpenAPI::toJsonValue(m_invoice_grouping_id));
    }
    if (m_prisma_config.isSet()) {
        obj.insert(QString("prismaConfig"), ::OpenAPI::toJsonValue(m_prisma_config));
    }
    return obj;
}

QString OAICampaignBudget::getBudgetAmountMicros() const {
    return m_budget_amount_micros;
}
void OAICampaignBudget::setBudgetAmountMicros(const QString &budget_amount_micros) {
    m_budget_amount_micros = budget_amount_micros;
    m_budget_amount_micros_isSet = true;
}

bool OAICampaignBudget::is_budget_amount_micros_Set() const{
    return m_budget_amount_micros_isSet;
}

bool OAICampaignBudget::is_budget_amount_micros_Valid() const{
    return m_budget_amount_micros_isValid;
}

QString OAICampaignBudget::getBudgetId() const {
    return m_budget_id;
}
void OAICampaignBudget::setBudgetId(const QString &budget_id) {
    m_budget_id = budget_id;
    m_budget_id_isSet = true;
}

bool OAICampaignBudget::is_budget_id_Set() const{
    return m_budget_id_isSet;
}

bool OAICampaignBudget::is_budget_id_Valid() const{
    return m_budget_id_isValid;
}

QString OAICampaignBudget::getBudgetUnit() const {
    return m_budget_unit;
}
void OAICampaignBudget::setBudgetUnit(const QString &budget_unit) {
    m_budget_unit = budget_unit;
    m_budget_unit_isSet = true;
}

bool OAICampaignBudget::is_budget_unit_Set() const{
    return m_budget_unit_isSet;
}

bool OAICampaignBudget::is_budget_unit_Valid() const{
    return m_budget_unit_isValid;
}

OAIDateRange OAICampaignBudget::getDateRange() const {
    return m_date_range;
}
void OAICampaignBudget::setDateRange(const OAIDateRange &date_range) {
    m_date_range = date_range;
    m_date_range_isSet = true;
}

bool OAICampaignBudget::is_date_range_Set() const{
    return m_date_range_isSet;
}

bool OAICampaignBudget::is_date_range_Valid() const{
    return m_date_range_isValid;
}

QString OAICampaignBudget::getDisplayName() const {
    return m_display_name;
}
void OAICampaignBudget::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICampaignBudget::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICampaignBudget::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAICampaignBudget::getExternalBudgetId() const {
    return m_external_budget_id;
}
void OAICampaignBudget::setExternalBudgetId(const QString &external_budget_id) {
    m_external_budget_id = external_budget_id;
    m_external_budget_id_isSet = true;
}

bool OAICampaignBudget::is_external_budget_id_Set() const{
    return m_external_budget_id_isSet;
}

bool OAICampaignBudget::is_external_budget_id_Valid() const{
    return m_external_budget_id_isValid;
}

QString OAICampaignBudget::getExternalBudgetSource() const {
    return m_external_budget_source;
}
void OAICampaignBudget::setExternalBudgetSource(const QString &external_budget_source) {
    m_external_budget_source = external_budget_source;
    m_external_budget_source_isSet = true;
}

bool OAICampaignBudget::is_external_budget_source_Set() const{
    return m_external_budget_source_isSet;
}

bool OAICampaignBudget::is_external_budget_source_Valid() const{
    return m_external_budget_source_isValid;
}

QString OAICampaignBudget::getInvoiceGroupingId() const {
    return m_invoice_grouping_id;
}
void OAICampaignBudget::setInvoiceGroupingId(const QString &invoice_grouping_id) {
    m_invoice_grouping_id = invoice_grouping_id;
    m_invoice_grouping_id_isSet = true;
}

bool OAICampaignBudget::is_invoice_grouping_id_Set() const{
    return m_invoice_grouping_id_isSet;
}

bool OAICampaignBudget::is_invoice_grouping_id_Valid() const{
    return m_invoice_grouping_id_isValid;
}

OAIPrismaConfig OAICampaignBudget::getPrismaConfig() const {
    return m_prisma_config;
}
void OAICampaignBudget::setPrismaConfig(const OAIPrismaConfig &prisma_config) {
    m_prisma_config = prisma_config;
    m_prisma_config_isSet = true;
}

bool OAICampaignBudget::is_prisma_config_Set() const{
    return m_prisma_config_isSet;
}

bool OAICampaignBudget::is_prisma_config_Valid() const{
    return m_prisma_config_isValid;
}

bool OAICampaignBudget::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_budget_amount_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_budget_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_budget_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_grouping_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prisma_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICampaignBudget::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
