/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrackingFloodlightActivityConfig.h
 *
 * Settings that control the behavior of a single Floodlight activity config.
 */

#ifndef OAITrackingFloodlightActivityConfig_H
#define OAITrackingFloodlightActivityConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITrackingFloodlightActivityConfig : public OAIObject {
public:
    OAITrackingFloodlightActivityConfig();
    OAITrackingFloodlightActivityConfig(QString json);
    ~OAITrackingFloodlightActivityConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFloodlightActivityId() const;
    void setFloodlightActivityId(const QString &floodlight_activity_id);
    bool is_floodlight_activity_id_Set() const;
    bool is_floodlight_activity_id_Valid() const;

    qint32 getPostClickLookbackWindowDays() const;
    void setPostClickLookbackWindowDays(const qint32 &post_click_lookback_window_days);
    bool is_post_click_lookback_window_days_Set() const;
    bool is_post_click_lookback_window_days_Valid() const;

    qint32 getPostViewLookbackWindowDays() const;
    void setPostViewLookbackWindowDays(const qint32 &post_view_lookback_window_days);
    bool is_post_view_lookback_window_days_Set() const;
    bool is_post_view_lookback_window_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_floodlight_activity_id;
    bool m_floodlight_activity_id_isSet;
    bool m_floodlight_activity_id_isValid;

    qint32 m_post_click_lookback_window_days;
    bool m_post_click_lookback_window_days_isSet;
    bool m_post_click_lookback_window_days_isValid;

    qint32 m_post_view_lookback_window_days;
    bool m_post_view_lookback_window_days_isSet;
    bool m_post_view_lookback_window_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrackingFloodlightActivityConfig)

#endif // OAITrackingFloodlightActivityConfig_H
