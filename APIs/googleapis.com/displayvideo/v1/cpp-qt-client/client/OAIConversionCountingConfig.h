/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversionCountingConfig.h
 *
 * Settings that control how conversions are counted. All post-click conversions will be counted. A percentage value can be set for post-view conversions counting.
 */

#ifndef OAIConversionCountingConfig_H
#define OAIConversionCountingConfig_H

#include <QJsonObject>

#include "OAITrackingFloodlightActivityConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrackingFloodlightActivityConfig;

class OAIConversionCountingConfig : public OAIObject {
public:
    OAIConversionCountingConfig();
    OAIConversionCountingConfig(QString json);
    ~OAIConversionCountingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITrackingFloodlightActivityConfig> getFloodlightActivityConfigs() const;
    void setFloodlightActivityConfigs(const QList<OAITrackingFloodlightActivityConfig> &floodlight_activity_configs);
    bool is_floodlight_activity_configs_Set() const;
    bool is_floodlight_activity_configs_Valid() const;

    QString getPostViewCountPercentageMillis() const;
    void setPostViewCountPercentageMillis(const QString &post_view_count_percentage_millis);
    bool is_post_view_count_percentage_millis_Set() const;
    bool is_post_view_count_percentage_millis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITrackingFloodlightActivityConfig> m_floodlight_activity_configs;
    bool m_floodlight_activity_configs_isSet;
    bool m_floodlight_activity_configs_isValid;

    QString m_post_view_count_percentage_millis;
    bool m_post_view_count_percentage_millis_isSet;
    bool m_post_view_count_percentage_millis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversionCountingConfig)

#endif // OAIConversionCountingConfig_H
