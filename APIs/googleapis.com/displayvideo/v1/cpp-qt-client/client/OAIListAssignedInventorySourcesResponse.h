/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListAssignedInventorySourcesResponse.h
 *
 * Response message for AssignedInventorySourceService.ListAssignedInventorySources.
 */

#ifndef OAIListAssignedInventorySourcesResponse_H
#define OAIListAssignedInventorySourcesResponse_H

#include <QJsonObject>

#include "OAIAssignedInventorySource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssignedInventorySource;

class OAIListAssignedInventorySourcesResponse : public OAIObject {
public:
    OAIListAssignedInventorySourcesResponse();
    OAIListAssignedInventorySourcesResponse(QString json);
    ~OAIListAssignedInventorySourcesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAssignedInventorySource> getAssignedInventorySources() const;
    void setAssignedInventorySources(const QList<OAIAssignedInventorySource> &assigned_inventory_sources);
    bool is_assigned_inventory_sources_Set() const;
    bool is_assigned_inventory_sources_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAssignedInventorySource> m_assigned_inventory_sources;
    bool m_assigned_inventory_sources_isSet;
    bool m_assigned_inventory_sources_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListAssignedInventorySourcesResponse)

#endif // OAIListAssignedInventorySourcesResponse_H
