/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITargetingOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITargetingOption::OAITargetingOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITargetingOption::OAITargetingOption() {
    this->initializeModel();
}

OAITargetingOption::~OAITargetingOption() {}

void OAITargetingOption::initializeModel() {

    m_age_range_details_isSet = false;
    m_age_range_details_isValid = false;

    m_app_category_details_isSet = false;
    m_app_category_details_isValid = false;

    m_audio_content_type_details_isSet = false;
    m_audio_content_type_details_isValid = false;

    m_authorized_seller_status_details_isSet = false;
    m_authorized_seller_status_details_isValid = false;

    m_browser_details_isSet = false;
    m_browser_details_isValid = false;

    m_business_chain_details_isSet = false;
    m_business_chain_details_isValid = false;

    m_carrier_and_isp_details_isSet = false;
    m_carrier_and_isp_details_isValid = false;

    m_category_details_isSet = false;
    m_category_details_isValid = false;

    m_content_duration_details_isSet = false;
    m_content_duration_details_isValid = false;

    m_content_genre_details_isSet = false;
    m_content_genre_details_isValid = false;

    m_content_instream_position_details_isSet = false;
    m_content_instream_position_details_isValid = false;

    m_content_outstream_position_details_isSet = false;
    m_content_outstream_position_details_isValid = false;

    m_content_stream_type_details_isSet = false;
    m_content_stream_type_details_isValid = false;

    m_device_make_model_details_isSet = false;
    m_device_make_model_details_isValid = false;

    m_device_type_details_isSet = false;
    m_device_type_details_isValid = false;

    m_digital_content_label_details_isSet = false;
    m_digital_content_label_details_isValid = false;

    m_environment_details_isSet = false;
    m_environment_details_isValid = false;

    m_exchange_details_isSet = false;
    m_exchange_details_isValid = false;

    m_gender_details_isSet = false;
    m_gender_details_isValid = false;

    m_geo_region_details_isSet = false;
    m_geo_region_details_isValid = false;

    m_household_income_details_isSet = false;
    m_household_income_details_isValid = false;

    m_language_details_isSet = false;
    m_language_details_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_native_content_position_details_isSet = false;
    m_native_content_position_details_isValid = false;

    m_omid_details_isSet = false;
    m_omid_details_isValid = false;

    m_on_screen_position_details_isSet = false;
    m_on_screen_position_details_isValid = false;

    m_operating_system_details_isSet = false;
    m_operating_system_details_isValid = false;

    m_parental_status_details_isSet = false;
    m_parental_status_details_isValid = false;

    m_poi_details_isSet = false;
    m_poi_details_isValid = false;

    m_sensitive_category_details_isSet = false;
    m_sensitive_category_details_isValid = false;

    m_sub_exchange_details_isSet = false;
    m_sub_exchange_details_isValid = false;

    m_targeting_option_id_isSet = false;
    m_targeting_option_id_isValid = false;

    m_targeting_type_isSet = false;
    m_targeting_type_isValid = false;

    m_user_rewarded_content_details_isSet = false;
    m_user_rewarded_content_details_isValid = false;

    m_video_player_size_details_isSet = false;
    m_video_player_size_details_isValid = false;

    m_viewability_details_isSet = false;
    m_viewability_details_isValid = false;
}

void OAITargetingOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITargetingOption::fromJsonObject(QJsonObject json) {

    m_age_range_details_isValid = ::OpenAPI::fromJsonValue(m_age_range_details, json[QString("ageRangeDetails")]);
    m_age_range_details_isSet = !json[QString("ageRangeDetails")].isNull() && m_age_range_details_isValid;

    m_app_category_details_isValid = ::OpenAPI::fromJsonValue(m_app_category_details, json[QString("appCategoryDetails")]);
    m_app_category_details_isSet = !json[QString("appCategoryDetails")].isNull() && m_app_category_details_isValid;

    m_audio_content_type_details_isValid = ::OpenAPI::fromJsonValue(m_audio_content_type_details, json[QString("audioContentTypeDetails")]);
    m_audio_content_type_details_isSet = !json[QString("audioContentTypeDetails")].isNull() && m_audio_content_type_details_isValid;

    m_authorized_seller_status_details_isValid = ::OpenAPI::fromJsonValue(m_authorized_seller_status_details, json[QString("authorizedSellerStatusDetails")]);
    m_authorized_seller_status_details_isSet = !json[QString("authorizedSellerStatusDetails")].isNull() && m_authorized_seller_status_details_isValid;

    m_browser_details_isValid = ::OpenAPI::fromJsonValue(m_browser_details, json[QString("browserDetails")]);
    m_browser_details_isSet = !json[QString("browserDetails")].isNull() && m_browser_details_isValid;

    m_business_chain_details_isValid = ::OpenAPI::fromJsonValue(m_business_chain_details, json[QString("businessChainDetails")]);
    m_business_chain_details_isSet = !json[QString("businessChainDetails")].isNull() && m_business_chain_details_isValid;

    m_carrier_and_isp_details_isValid = ::OpenAPI::fromJsonValue(m_carrier_and_isp_details, json[QString("carrierAndIspDetails")]);
    m_carrier_and_isp_details_isSet = !json[QString("carrierAndIspDetails")].isNull() && m_carrier_and_isp_details_isValid;

    m_category_details_isValid = ::OpenAPI::fromJsonValue(m_category_details, json[QString("categoryDetails")]);
    m_category_details_isSet = !json[QString("categoryDetails")].isNull() && m_category_details_isValid;

    m_content_duration_details_isValid = ::OpenAPI::fromJsonValue(m_content_duration_details, json[QString("contentDurationDetails")]);
    m_content_duration_details_isSet = !json[QString("contentDurationDetails")].isNull() && m_content_duration_details_isValid;

    m_content_genre_details_isValid = ::OpenAPI::fromJsonValue(m_content_genre_details, json[QString("contentGenreDetails")]);
    m_content_genre_details_isSet = !json[QString("contentGenreDetails")].isNull() && m_content_genre_details_isValid;

    m_content_instream_position_details_isValid = ::OpenAPI::fromJsonValue(m_content_instream_position_details, json[QString("contentInstreamPositionDetails")]);
    m_content_instream_position_details_isSet = !json[QString("contentInstreamPositionDetails")].isNull() && m_content_instream_position_details_isValid;

    m_content_outstream_position_details_isValid = ::OpenAPI::fromJsonValue(m_content_outstream_position_details, json[QString("contentOutstreamPositionDetails")]);
    m_content_outstream_position_details_isSet = !json[QString("contentOutstreamPositionDetails")].isNull() && m_content_outstream_position_details_isValid;

    m_content_stream_type_details_isValid = ::OpenAPI::fromJsonValue(m_content_stream_type_details, json[QString("contentStreamTypeDetails")]);
    m_content_stream_type_details_isSet = !json[QString("contentStreamTypeDetails")].isNull() && m_content_stream_type_details_isValid;

    m_device_make_model_details_isValid = ::OpenAPI::fromJsonValue(m_device_make_model_details, json[QString("deviceMakeModelDetails")]);
    m_device_make_model_details_isSet = !json[QString("deviceMakeModelDetails")].isNull() && m_device_make_model_details_isValid;

    m_device_type_details_isValid = ::OpenAPI::fromJsonValue(m_device_type_details, json[QString("deviceTypeDetails")]);
    m_device_type_details_isSet = !json[QString("deviceTypeDetails")].isNull() && m_device_type_details_isValid;

    m_digital_content_label_details_isValid = ::OpenAPI::fromJsonValue(m_digital_content_label_details, json[QString("digitalContentLabelDetails")]);
    m_digital_content_label_details_isSet = !json[QString("digitalContentLabelDetails")].isNull() && m_digital_content_label_details_isValid;

    m_environment_details_isValid = ::OpenAPI::fromJsonValue(m_environment_details, json[QString("environmentDetails")]);
    m_environment_details_isSet = !json[QString("environmentDetails")].isNull() && m_environment_details_isValid;

    m_exchange_details_isValid = ::OpenAPI::fromJsonValue(m_exchange_details, json[QString("exchangeDetails")]);
    m_exchange_details_isSet = !json[QString("exchangeDetails")].isNull() && m_exchange_details_isValid;

    m_gender_details_isValid = ::OpenAPI::fromJsonValue(m_gender_details, json[QString("genderDetails")]);
    m_gender_details_isSet = !json[QString("genderDetails")].isNull() && m_gender_details_isValid;

    m_geo_region_details_isValid = ::OpenAPI::fromJsonValue(m_geo_region_details, json[QString("geoRegionDetails")]);
    m_geo_region_details_isSet = !json[QString("geoRegionDetails")].isNull() && m_geo_region_details_isValid;

    m_household_income_details_isValid = ::OpenAPI::fromJsonValue(m_household_income_details, json[QString("householdIncomeDetails")]);
    m_household_income_details_isSet = !json[QString("householdIncomeDetails")].isNull() && m_household_income_details_isValid;

    m_language_details_isValid = ::OpenAPI::fromJsonValue(m_language_details, json[QString("languageDetails")]);
    m_language_details_isSet = !json[QString("languageDetails")].isNull() && m_language_details_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_native_content_position_details_isValid = ::OpenAPI::fromJsonValue(m_native_content_position_details, json[QString("nativeContentPositionDetails")]);
    m_native_content_position_details_isSet = !json[QString("nativeContentPositionDetails")].isNull() && m_native_content_position_details_isValid;

    m_omid_details_isValid = ::OpenAPI::fromJsonValue(m_omid_details, json[QString("omidDetails")]);
    m_omid_details_isSet = !json[QString("omidDetails")].isNull() && m_omid_details_isValid;

    m_on_screen_position_details_isValid = ::OpenAPI::fromJsonValue(m_on_screen_position_details, json[QString("onScreenPositionDetails")]);
    m_on_screen_position_details_isSet = !json[QString("onScreenPositionDetails")].isNull() && m_on_screen_position_details_isValid;

    m_operating_system_details_isValid = ::OpenAPI::fromJsonValue(m_operating_system_details, json[QString("operatingSystemDetails")]);
    m_operating_system_details_isSet = !json[QString("operatingSystemDetails")].isNull() && m_operating_system_details_isValid;

    m_parental_status_details_isValid = ::OpenAPI::fromJsonValue(m_parental_status_details, json[QString("parentalStatusDetails")]);
    m_parental_status_details_isSet = !json[QString("parentalStatusDetails")].isNull() && m_parental_status_details_isValid;

    m_poi_details_isValid = ::OpenAPI::fromJsonValue(m_poi_details, json[QString("poiDetails")]);
    m_poi_details_isSet = !json[QString("poiDetails")].isNull() && m_poi_details_isValid;

    m_sensitive_category_details_isValid = ::OpenAPI::fromJsonValue(m_sensitive_category_details, json[QString("sensitiveCategoryDetails")]);
    m_sensitive_category_details_isSet = !json[QString("sensitiveCategoryDetails")].isNull() && m_sensitive_category_details_isValid;

    m_sub_exchange_details_isValid = ::OpenAPI::fromJsonValue(m_sub_exchange_details, json[QString("subExchangeDetails")]);
    m_sub_exchange_details_isSet = !json[QString("subExchangeDetails")].isNull() && m_sub_exchange_details_isValid;

    m_targeting_option_id_isValid = ::OpenAPI::fromJsonValue(m_targeting_option_id, json[QString("targetingOptionId")]);
    m_targeting_option_id_isSet = !json[QString("targetingOptionId")].isNull() && m_targeting_option_id_isValid;

    m_targeting_type_isValid = ::OpenAPI::fromJsonValue(m_targeting_type, json[QString("targetingType")]);
    m_targeting_type_isSet = !json[QString("targetingType")].isNull() && m_targeting_type_isValid;

    m_user_rewarded_content_details_isValid = ::OpenAPI::fromJsonValue(m_user_rewarded_content_details, json[QString("userRewardedContentDetails")]);
    m_user_rewarded_content_details_isSet = !json[QString("userRewardedContentDetails")].isNull() && m_user_rewarded_content_details_isValid;

    m_video_player_size_details_isValid = ::OpenAPI::fromJsonValue(m_video_player_size_details, json[QString("videoPlayerSizeDetails")]);
    m_video_player_size_details_isSet = !json[QString("videoPlayerSizeDetails")].isNull() && m_video_player_size_details_isValid;

    m_viewability_details_isValid = ::OpenAPI::fromJsonValue(m_viewability_details, json[QString("viewabilityDetails")]);
    m_viewability_details_isSet = !json[QString("viewabilityDetails")].isNull() && m_viewability_details_isValid;
}

QString OAITargetingOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITargetingOption::asJsonObject() const {
    QJsonObject obj;
    if (m_age_range_details.isSet()) {
        obj.insert(QString("ageRangeDetails"), ::OpenAPI::toJsonValue(m_age_range_details));
    }
    if (m_app_category_details.isSet()) {
        obj.insert(QString("appCategoryDetails"), ::OpenAPI::toJsonValue(m_app_category_details));
    }
    if (m_audio_content_type_details.isSet()) {
        obj.insert(QString("audioContentTypeDetails"), ::OpenAPI::toJsonValue(m_audio_content_type_details));
    }
    if (m_authorized_seller_status_details.isSet()) {
        obj.insert(QString("authorizedSellerStatusDetails"), ::OpenAPI::toJsonValue(m_authorized_seller_status_details));
    }
    if (m_browser_details.isSet()) {
        obj.insert(QString("browserDetails"), ::OpenAPI::toJsonValue(m_browser_details));
    }
    if (m_business_chain_details.isSet()) {
        obj.insert(QString("businessChainDetails"), ::OpenAPI::toJsonValue(m_business_chain_details));
    }
    if (m_carrier_and_isp_details.isSet()) {
        obj.insert(QString("carrierAndIspDetails"), ::OpenAPI::toJsonValue(m_carrier_and_isp_details));
    }
    if (m_category_details.isSet()) {
        obj.insert(QString("categoryDetails"), ::OpenAPI::toJsonValue(m_category_details));
    }
    if (m_content_duration_details.isSet()) {
        obj.insert(QString("contentDurationDetails"), ::OpenAPI::toJsonValue(m_content_duration_details));
    }
    if (m_content_genre_details.isSet()) {
        obj.insert(QString("contentGenreDetails"), ::OpenAPI::toJsonValue(m_content_genre_details));
    }
    if (m_content_instream_position_details.isSet()) {
        obj.insert(QString("contentInstreamPositionDetails"), ::OpenAPI::toJsonValue(m_content_instream_position_details));
    }
    if (m_content_outstream_position_details.isSet()) {
        obj.insert(QString("contentOutstreamPositionDetails"), ::OpenAPI::toJsonValue(m_content_outstream_position_details));
    }
    if (m_content_stream_type_details.isSet()) {
        obj.insert(QString("contentStreamTypeDetails"), ::OpenAPI::toJsonValue(m_content_stream_type_details));
    }
    if (m_device_make_model_details.isSet()) {
        obj.insert(QString("deviceMakeModelDetails"), ::OpenAPI::toJsonValue(m_device_make_model_details));
    }
    if (m_device_type_details.isSet()) {
        obj.insert(QString("deviceTypeDetails"), ::OpenAPI::toJsonValue(m_device_type_details));
    }
    if (m_digital_content_label_details.isSet()) {
        obj.insert(QString("digitalContentLabelDetails"), ::OpenAPI::toJsonValue(m_digital_content_label_details));
    }
    if (m_environment_details.isSet()) {
        obj.insert(QString("environmentDetails"), ::OpenAPI::toJsonValue(m_environment_details));
    }
    if (m_exchange_details.isSet()) {
        obj.insert(QString("exchangeDetails"), ::OpenAPI::toJsonValue(m_exchange_details));
    }
    if (m_gender_details.isSet()) {
        obj.insert(QString("genderDetails"), ::OpenAPI::toJsonValue(m_gender_details));
    }
    if (m_geo_region_details.isSet()) {
        obj.insert(QString("geoRegionDetails"), ::OpenAPI::toJsonValue(m_geo_region_details));
    }
    if (m_household_income_details.isSet()) {
        obj.insert(QString("householdIncomeDetails"), ::OpenAPI::toJsonValue(m_household_income_details));
    }
    if (m_language_details.isSet()) {
        obj.insert(QString("languageDetails"), ::OpenAPI::toJsonValue(m_language_details));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_native_content_position_details.isSet()) {
        obj.insert(QString("nativeContentPositionDetails"), ::OpenAPI::toJsonValue(m_native_content_position_details));
    }
    if (m_omid_details.isSet()) {
        obj.insert(QString("omidDetails"), ::OpenAPI::toJsonValue(m_omid_details));
    }
    if (m_on_screen_position_details.isSet()) {
        obj.insert(QString("onScreenPositionDetails"), ::OpenAPI::toJsonValue(m_on_screen_position_details));
    }
    if (m_operating_system_details.isSet()) {
        obj.insert(QString("operatingSystemDetails"), ::OpenAPI::toJsonValue(m_operating_system_details));
    }
    if (m_parental_status_details.isSet()) {
        obj.insert(QString("parentalStatusDetails"), ::OpenAPI::toJsonValue(m_parental_status_details));
    }
    if (m_poi_details.isSet()) {
        obj.insert(QString("poiDetails"), ::OpenAPI::toJsonValue(m_poi_details));
    }
    if (m_sensitive_category_details.isSet()) {
        obj.insert(QString("sensitiveCategoryDetails"), ::OpenAPI::toJsonValue(m_sensitive_category_details));
    }
    if (m_sub_exchange_details.isSet()) {
        obj.insert(QString("subExchangeDetails"), ::OpenAPI::toJsonValue(m_sub_exchange_details));
    }
    if (m_targeting_option_id_isSet) {
        obj.insert(QString("targetingOptionId"), ::OpenAPI::toJsonValue(m_targeting_option_id));
    }
    if (m_targeting_type_isSet) {
        obj.insert(QString("targetingType"), ::OpenAPI::toJsonValue(m_targeting_type));
    }
    if (m_user_rewarded_content_details.isSet()) {
        obj.insert(QString("userRewardedContentDetails"), ::OpenAPI::toJsonValue(m_user_rewarded_content_details));
    }
    if (m_video_player_size_details.isSet()) {
        obj.insert(QString("videoPlayerSizeDetails"), ::OpenAPI::toJsonValue(m_video_player_size_details));
    }
    if (m_viewability_details.isSet()) {
        obj.insert(QString("viewabilityDetails"), ::OpenAPI::toJsonValue(m_viewability_details));
    }
    return obj;
}

OAIAgeRangeTargetingOptionDetails OAITargetingOption::getAgeRangeDetails() const {
    return m_age_range_details;
}
void OAITargetingOption::setAgeRangeDetails(const OAIAgeRangeTargetingOptionDetails &age_range_details) {
    m_age_range_details = age_range_details;
    m_age_range_details_isSet = true;
}

bool OAITargetingOption::is_age_range_details_Set() const{
    return m_age_range_details_isSet;
}

bool OAITargetingOption::is_age_range_details_Valid() const{
    return m_age_range_details_isValid;
}

OAIAppCategoryTargetingOptionDetails OAITargetingOption::getAppCategoryDetails() const {
    return m_app_category_details;
}
void OAITargetingOption::setAppCategoryDetails(const OAIAppCategoryTargetingOptionDetails &app_category_details) {
    m_app_category_details = app_category_details;
    m_app_category_details_isSet = true;
}

bool OAITargetingOption::is_app_category_details_Set() const{
    return m_app_category_details_isSet;
}

bool OAITargetingOption::is_app_category_details_Valid() const{
    return m_app_category_details_isValid;
}

OAIAudioContentTypeTargetingOptionDetails OAITargetingOption::getAudioContentTypeDetails() const {
    return m_audio_content_type_details;
}
void OAITargetingOption::setAudioContentTypeDetails(const OAIAudioContentTypeTargetingOptionDetails &audio_content_type_details) {
    m_audio_content_type_details = audio_content_type_details;
    m_audio_content_type_details_isSet = true;
}

bool OAITargetingOption::is_audio_content_type_details_Set() const{
    return m_audio_content_type_details_isSet;
}

bool OAITargetingOption::is_audio_content_type_details_Valid() const{
    return m_audio_content_type_details_isValid;
}

OAIAuthorizedSellerStatusTargetingOptionDetails OAITargetingOption::getAuthorizedSellerStatusDetails() const {
    return m_authorized_seller_status_details;
}
void OAITargetingOption::setAuthorizedSellerStatusDetails(const OAIAuthorizedSellerStatusTargetingOptionDetails &authorized_seller_status_details) {
    m_authorized_seller_status_details = authorized_seller_status_details;
    m_authorized_seller_status_details_isSet = true;
}

bool OAITargetingOption::is_authorized_seller_status_details_Set() const{
    return m_authorized_seller_status_details_isSet;
}

bool OAITargetingOption::is_authorized_seller_status_details_Valid() const{
    return m_authorized_seller_status_details_isValid;
}

OAIBrowserTargetingOptionDetails OAITargetingOption::getBrowserDetails() const {
    return m_browser_details;
}
void OAITargetingOption::setBrowserDetails(const OAIBrowserTargetingOptionDetails &browser_details) {
    m_browser_details = browser_details;
    m_browser_details_isSet = true;
}

bool OAITargetingOption::is_browser_details_Set() const{
    return m_browser_details_isSet;
}

bool OAITargetingOption::is_browser_details_Valid() const{
    return m_browser_details_isValid;
}

OAIBusinessChainTargetingOptionDetails OAITargetingOption::getBusinessChainDetails() const {
    return m_business_chain_details;
}
void OAITargetingOption::setBusinessChainDetails(const OAIBusinessChainTargetingOptionDetails &business_chain_details) {
    m_business_chain_details = business_chain_details;
    m_business_chain_details_isSet = true;
}

bool OAITargetingOption::is_business_chain_details_Set() const{
    return m_business_chain_details_isSet;
}

bool OAITargetingOption::is_business_chain_details_Valid() const{
    return m_business_chain_details_isValid;
}

OAICarrierAndIspTargetingOptionDetails OAITargetingOption::getCarrierAndIspDetails() const {
    return m_carrier_and_isp_details;
}
void OAITargetingOption::setCarrierAndIspDetails(const OAICarrierAndIspTargetingOptionDetails &carrier_and_isp_details) {
    m_carrier_and_isp_details = carrier_and_isp_details;
    m_carrier_and_isp_details_isSet = true;
}

bool OAITargetingOption::is_carrier_and_isp_details_Set() const{
    return m_carrier_and_isp_details_isSet;
}

bool OAITargetingOption::is_carrier_and_isp_details_Valid() const{
    return m_carrier_and_isp_details_isValid;
}

OAICategoryTargetingOptionDetails OAITargetingOption::getCategoryDetails() const {
    return m_category_details;
}
void OAITargetingOption::setCategoryDetails(const OAICategoryTargetingOptionDetails &category_details) {
    m_category_details = category_details;
    m_category_details_isSet = true;
}

bool OAITargetingOption::is_category_details_Set() const{
    return m_category_details_isSet;
}

bool OAITargetingOption::is_category_details_Valid() const{
    return m_category_details_isValid;
}

OAIContentDurationTargetingOptionDetails OAITargetingOption::getContentDurationDetails() const {
    return m_content_duration_details;
}
void OAITargetingOption::setContentDurationDetails(const OAIContentDurationTargetingOptionDetails &content_duration_details) {
    m_content_duration_details = content_duration_details;
    m_content_duration_details_isSet = true;
}

bool OAITargetingOption::is_content_duration_details_Set() const{
    return m_content_duration_details_isSet;
}

bool OAITargetingOption::is_content_duration_details_Valid() const{
    return m_content_duration_details_isValid;
}

OAIContentGenreTargetingOptionDetails OAITargetingOption::getContentGenreDetails() const {
    return m_content_genre_details;
}
void OAITargetingOption::setContentGenreDetails(const OAIContentGenreTargetingOptionDetails &content_genre_details) {
    m_content_genre_details = content_genre_details;
    m_content_genre_details_isSet = true;
}

bool OAITargetingOption::is_content_genre_details_Set() const{
    return m_content_genre_details_isSet;
}

bool OAITargetingOption::is_content_genre_details_Valid() const{
    return m_content_genre_details_isValid;
}

OAIContentInstreamPositionTargetingOptionDetails OAITargetingOption::getContentInstreamPositionDetails() const {
    return m_content_instream_position_details;
}
void OAITargetingOption::setContentInstreamPositionDetails(const OAIContentInstreamPositionTargetingOptionDetails &content_instream_position_details) {
    m_content_instream_position_details = content_instream_position_details;
    m_content_instream_position_details_isSet = true;
}

bool OAITargetingOption::is_content_instream_position_details_Set() const{
    return m_content_instream_position_details_isSet;
}

bool OAITargetingOption::is_content_instream_position_details_Valid() const{
    return m_content_instream_position_details_isValid;
}

OAIContentOutstreamPositionTargetingOptionDetails OAITargetingOption::getContentOutstreamPositionDetails() const {
    return m_content_outstream_position_details;
}
void OAITargetingOption::setContentOutstreamPositionDetails(const OAIContentOutstreamPositionTargetingOptionDetails &content_outstream_position_details) {
    m_content_outstream_position_details = content_outstream_position_details;
    m_content_outstream_position_details_isSet = true;
}

bool OAITargetingOption::is_content_outstream_position_details_Set() const{
    return m_content_outstream_position_details_isSet;
}

bool OAITargetingOption::is_content_outstream_position_details_Valid() const{
    return m_content_outstream_position_details_isValid;
}

OAIContentStreamTypeTargetingOptionDetails OAITargetingOption::getContentStreamTypeDetails() const {
    return m_content_stream_type_details;
}
void OAITargetingOption::setContentStreamTypeDetails(const OAIContentStreamTypeTargetingOptionDetails &content_stream_type_details) {
    m_content_stream_type_details = content_stream_type_details;
    m_content_stream_type_details_isSet = true;
}

bool OAITargetingOption::is_content_stream_type_details_Set() const{
    return m_content_stream_type_details_isSet;
}

bool OAITargetingOption::is_content_stream_type_details_Valid() const{
    return m_content_stream_type_details_isValid;
}

OAIDeviceMakeModelTargetingOptionDetails OAITargetingOption::getDeviceMakeModelDetails() const {
    return m_device_make_model_details;
}
void OAITargetingOption::setDeviceMakeModelDetails(const OAIDeviceMakeModelTargetingOptionDetails &device_make_model_details) {
    m_device_make_model_details = device_make_model_details;
    m_device_make_model_details_isSet = true;
}

bool OAITargetingOption::is_device_make_model_details_Set() const{
    return m_device_make_model_details_isSet;
}

bool OAITargetingOption::is_device_make_model_details_Valid() const{
    return m_device_make_model_details_isValid;
}

OAIDeviceTypeTargetingOptionDetails OAITargetingOption::getDeviceTypeDetails() const {
    return m_device_type_details;
}
void OAITargetingOption::setDeviceTypeDetails(const OAIDeviceTypeTargetingOptionDetails &device_type_details) {
    m_device_type_details = device_type_details;
    m_device_type_details_isSet = true;
}

bool OAITargetingOption::is_device_type_details_Set() const{
    return m_device_type_details_isSet;
}

bool OAITargetingOption::is_device_type_details_Valid() const{
    return m_device_type_details_isValid;
}

OAIDigitalContentLabelTargetingOptionDetails OAITargetingOption::getDigitalContentLabelDetails() const {
    return m_digital_content_label_details;
}
void OAITargetingOption::setDigitalContentLabelDetails(const OAIDigitalContentLabelTargetingOptionDetails &digital_content_label_details) {
    m_digital_content_label_details = digital_content_label_details;
    m_digital_content_label_details_isSet = true;
}

bool OAITargetingOption::is_digital_content_label_details_Set() const{
    return m_digital_content_label_details_isSet;
}

bool OAITargetingOption::is_digital_content_label_details_Valid() const{
    return m_digital_content_label_details_isValid;
}

OAIEnvironmentTargetingOptionDetails OAITargetingOption::getEnvironmentDetails() const {
    return m_environment_details;
}
void OAITargetingOption::setEnvironmentDetails(const OAIEnvironmentTargetingOptionDetails &environment_details) {
    m_environment_details = environment_details;
    m_environment_details_isSet = true;
}

bool OAITargetingOption::is_environment_details_Set() const{
    return m_environment_details_isSet;
}

bool OAITargetingOption::is_environment_details_Valid() const{
    return m_environment_details_isValid;
}

OAIExchangeTargetingOptionDetails OAITargetingOption::getExchangeDetails() const {
    return m_exchange_details;
}
void OAITargetingOption::setExchangeDetails(const OAIExchangeTargetingOptionDetails &exchange_details) {
    m_exchange_details = exchange_details;
    m_exchange_details_isSet = true;
}

bool OAITargetingOption::is_exchange_details_Set() const{
    return m_exchange_details_isSet;
}

bool OAITargetingOption::is_exchange_details_Valid() const{
    return m_exchange_details_isValid;
}

OAIGenderTargetingOptionDetails OAITargetingOption::getGenderDetails() const {
    return m_gender_details;
}
void OAITargetingOption::setGenderDetails(const OAIGenderTargetingOptionDetails &gender_details) {
    m_gender_details = gender_details;
    m_gender_details_isSet = true;
}

bool OAITargetingOption::is_gender_details_Set() const{
    return m_gender_details_isSet;
}

bool OAITargetingOption::is_gender_details_Valid() const{
    return m_gender_details_isValid;
}

OAIGeoRegionTargetingOptionDetails OAITargetingOption::getGeoRegionDetails() const {
    return m_geo_region_details;
}
void OAITargetingOption::setGeoRegionDetails(const OAIGeoRegionTargetingOptionDetails &geo_region_details) {
    m_geo_region_details = geo_region_details;
    m_geo_region_details_isSet = true;
}

bool OAITargetingOption::is_geo_region_details_Set() const{
    return m_geo_region_details_isSet;
}

bool OAITargetingOption::is_geo_region_details_Valid() const{
    return m_geo_region_details_isValid;
}

OAIHouseholdIncomeTargetingOptionDetails OAITargetingOption::getHouseholdIncomeDetails() const {
    return m_household_income_details;
}
void OAITargetingOption::setHouseholdIncomeDetails(const OAIHouseholdIncomeTargetingOptionDetails &household_income_details) {
    m_household_income_details = household_income_details;
    m_household_income_details_isSet = true;
}

bool OAITargetingOption::is_household_income_details_Set() const{
    return m_household_income_details_isSet;
}

bool OAITargetingOption::is_household_income_details_Valid() const{
    return m_household_income_details_isValid;
}

OAILanguageTargetingOptionDetails OAITargetingOption::getLanguageDetails() const {
    return m_language_details;
}
void OAITargetingOption::setLanguageDetails(const OAILanguageTargetingOptionDetails &language_details) {
    m_language_details = language_details;
    m_language_details_isSet = true;
}

bool OAITargetingOption::is_language_details_Set() const{
    return m_language_details_isSet;
}

bool OAITargetingOption::is_language_details_Valid() const{
    return m_language_details_isValid;
}

QString OAITargetingOption::getName() const {
    return m_name;
}
void OAITargetingOption::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITargetingOption::is_name_Set() const{
    return m_name_isSet;
}

bool OAITargetingOption::is_name_Valid() const{
    return m_name_isValid;
}

OAINativeContentPositionTargetingOptionDetails OAITargetingOption::getNativeContentPositionDetails() const {
    return m_native_content_position_details;
}
void OAITargetingOption::setNativeContentPositionDetails(const OAINativeContentPositionTargetingOptionDetails &native_content_position_details) {
    m_native_content_position_details = native_content_position_details;
    m_native_content_position_details_isSet = true;
}

bool OAITargetingOption::is_native_content_position_details_Set() const{
    return m_native_content_position_details_isSet;
}

bool OAITargetingOption::is_native_content_position_details_Valid() const{
    return m_native_content_position_details_isValid;
}

OAIOmidTargetingOptionDetails OAITargetingOption::getOmidDetails() const {
    return m_omid_details;
}
void OAITargetingOption::setOmidDetails(const OAIOmidTargetingOptionDetails &omid_details) {
    m_omid_details = omid_details;
    m_omid_details_isSet = true;
}

bool OAITargetingOption::is_omid_details_Set() const{
    return m_omid_details_isSet;
}

bool OAITargetingOption::is_omid_details_Valid() const{
    return m_omid_details_isValid;
}

OAIOnScreenPositionTargetingOptionDetails OAITargetingOption::getOnScreenPositionDetails() const {
    return m_on_screen_position_details;
}
void OAITargetingOption::setOnScreenPositionDetails(const OAIOnScreenPositionTargetingOptionDetails &on_screen_position_details) {
    m_on_screen_position_details = on_screen_position_details;
    m_on_screen_position_details_isSet = true;
}

bool OAITargetingOption::is_on_screen_position_details_Set() const{
    return m_on_screen_position_details_isSet;
}

bool OAITargetingOption::is_on_screen_position_details_Valid() const{
    return m_on_screen_position_details_isValid;
}

OAIOperatingSystemTargetingOptionDetails OAITargetingOption::getOperatingSystemDetails() const {
    return m_operating_system_details;
}
void OAITargetingOption::setOperatingSystemDetails(const OAIOperatingSystemTargetingOptionDetails &operating_system_details) {
    m_operating_system_details = operating_system_details;
    m_operating_system_details_isSet = true;
}

bool OAITargetingOption::is_operating_system_details_Set() const{
    return m_operating_system_details_isSet;
}

bool OAITargetingOption::is_operating_system_details_Valid() const{
    return m_operating_system_details_isValid;
}

OAIParentalStatusTargetingOptionDetails OAITargetingOption::getParentalStatusDetails() const {
    return m_parental_status_details;
}
void OAITargetingOption::setParentalStatusDetails(const OAIParentalStatusTargetingOptionDetails &parental_status_details) {
    m_parental_status_details = parental_status_details;
    m_parental_status_details_isSet = true;
}

bool OAITargetingOption::is_parental_status_details_Set() const{
    return m_parental_status_details_isSet;
}

bool OAITargetingOption::is_parental_status_details_Valid() const{
    return m_parental_status_details_isValid;
}

OAIPoiTargetingOptionDetails OAITargetingOption::getPoiDetails() const {
    return m_poi_details;
}
void OAITargetingOption::setPoiDetails(const OAIPoiTargetingOptionDetails &poi_details) {
    m_poi_details = poi_details;
    m_poi_details_isSet = true;
}

bool OAITargetingOption::is_poi_details_Set() const{
    return m_poi_details_isSet;
}

bool OAITargetingOption::is_poi_details_Valid() const{
    return m_poi_details_isValid;
}

OAISensitiveCategoryTargetingOptionDetails OAITargetingOption::getSensitiveCategoryDetails() const {
    return m_sensitive_category_details;
}
void OAITargetingOption::setSensitiveCategoryDetails(const OAISensitiveCategoryTargetingOptionDetails &sensitive_category_details) {
    m_sensitive_category_details = sensitive_category_details;
    m_sensitive_category_details_isSet = true;
}

bool OAITargetingOption::is_sensitive_category_details_Set() const{
    return m_sensitive_category_details_isSet;
}

bool OAITargetingOption::is_sensitive_category_details_Valid() const{
    return m_sensitive_category_details_isValid;
}

OAISubExchangeTargetingOptionDetails OAITargetingOption::getSubExchangeDetails() const {
    return m_sub_exchange_details;
}
void OAITargetingOption::setSubExchangeDetails(const OAISubExchangeTargetingOptionDetails &sub_exchange_details) {
    m_sub_exchange_details = sub_exchange_details;
    m_sub_exchange_details_isSet = true;
}

bool OAITargetingOption::is_sub_exchange_details_Set() const{
    return m_sub_exchange_details_isSet;
}

bool OAITargetingOption::is_sub_exchange_details_Valid() const{
    return m_sub_exchange_details_isValid;
}

QString OAITargetingOption::getTargetingOptionId() const {
    return m_targeting_option_id;
}
void OAITargetingOption::setTargetingOptionId(const QString &targeting_option_id) {
    m_targeting_option_id = targeting_option_id;
    m_targeting_option_id_isSet = true;
}

bool OAITargetingOption::is_targeting_option_id_Set() const{
    return m_targeting_option_id_isSet;
}

bool OAITargetingOption::is_targeting_option_id_Valid() const{
    return m_targeting_option_id_isValid;
}

QString OAITargetingOption::getTargetingType() const {
    return m_targeting_type;
}
void OAITargetingOption::setTargetingType(const QString &targeting_type) {
    m_targeting_type = targeting_type;
    m_targeting_type_isSet = true;
}

bool OAITargetingOption::is_targeting_type_Set() const{
    return m_targeting_type_isSet;
}

bool OAITargetingOption::is_targeting_type_Valid() const{
    return m_targeting_type_isValid;
}

OAIUserRewardedContentTargetingOptionDetails OAITargetingOption::getUserRewardedContentDetails() const {
    return m_user_rewarded_content_details;
}
void OAITargetingOption::setUserRewardedContentDetails(const OAIUserRewardedContentTargetingOptionDetails &user_rewarded_content_details) {
    m_user_rewarded_content_details = user_rewarded_content_details;
    m_user_rewarded_content_details_isSet = true;
}

bool OAITargetingOption::is_user_rewarded_content_details_Set() const{
    return m_user_rewarded_content_details_isSet;
}

bool OAITargetingOption::is_user_rewarded_content_details_Valid() const{
    return m_user_rewarded_content_details_isValid;
}

OAIVideoPlayerSizeTargetingOptionDetails OAITargetingOption::getVideoPlayerSizeDetails() const {
    return m_video_player_size_details;
}
void OAITargetingOption::setVideoPlayerSizeDetails(const OAIVideoPlayerSizeTargetingOptionDetails &video_player_size_details) {
    m_video_player_size_details = video_player_size_details;
    m_video_player_size_details_isSet = true;
}

bool OAITargetingOption::is_video_player_size_details_Set() const{
    return m_video_player_size_details_isSet;
}

bool OAITargetingOption::is_video_player_size_details_Valid() const{
    return m_video_player_size_details_isValid;
}

OAIViewabilityTargetingOptionDetails OAITargetingOption::getViewabilityDetails() const {
    return m_viewability_details;
}
void OAITargetingOption::setViewabilityDetails(const OAIViewabilityTargetingOptionDetails &viewability_details) {
    m_viewability_details = viewability_details;
    m_viewability_details_isSet = true;
}

bool OAITargetingOption::is_viewability_details_Set() const{
    return m_viewability_details_isSet;
}

bool OAITargetingOption::is_viewability_details_Valid() const{
    return m_viewability_details_isValid;
}

bool OAITargetingOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_age_range_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_category_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_audio_content_type_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorized_seller_status_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_browser_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_chain_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_and_isp_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_duration_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_genre_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_instream_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_outstream_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_stream_type_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_make_model_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_type_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_digital_content_label_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_geo_region_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_household_income_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_native_content_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_omid_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_screen_position_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operating_system_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parental_status_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_poi_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitive_category_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_exchange_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_targeting_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_rewarded_content_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_player_size_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_viewability_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITargetingOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
