/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkEditPartnerAssignedTargetingOptionsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkEditPartnerAssignedTargetingOptionsRequest::OAIBulkEditPartnerAssignedTargetingOptionsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkEditPartnerAssignedTargetingOptionsRequest::OAIBulkEditPartnerAssignedTargetingOptionsRequest() {
    this->initializeModel();
}

OAIBulkEditPartnerAssignedTargetingOptionsRequest::~OAIBulkEditPartnerAssignedTargetingOptionsRequest() {}

void OAIBulkEditPartnerAssignedTargetingOptionsRequest::initializeModel() {

    m_create_requests_isSet = false;
    m_create_requests_isValid = false;

    m_delete_requests_isSet = false;
    m_delete_requests_isValid = false;
}

void OAIBulkEditPartnerAssignedTargetingOptionsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkEditPartnerAssignedTargetingOptionsRequest::fromJsonObject(QJsonObject json) {

    m_create_requests_isValid = ::OpenAPI::fromJsonValue(m_create_requests, json[QString("createRequests")]);
    m_create_requests_isSet = !json[QString("createRequests")].isNull() && m_create_requests_isValid;

    m_delete_requests_isValid = ::OpenAPI::fromJsonValue(m_delete_requests, json[QString("deleteRequests")]);
    m_delete_requests_isSet = !json[QString("deleteRequests")].isNull() && m_delete_requests_isValid;
}

QString OAIBulkEditPartnerAssignedTargetingOptionsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkEditPartnerAssignedTargetingOptionsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_create_requests.size() > 0) {
        obj.insert(QString("createRequests"), ::OpenAPI::toJsonValue(m_create_requests));
    }
    if (m_delete_requests.size() > 0) {
        obj.insert(QString("deleteRequests"), ::OpenAPI::toJsonValue(m_delete_requests));
    }
    return obj;
}

QList<OAICreateAssignedTargetingOptionsRequest> OAIBulkEditPartnerAssignedTargetingOptionsRequest::getCreateRequests() const {
    return m_create_requests;
}
void OAIBulkEditPartnerAssignedTargetingOptionsRequest::setCreateRequests(const QList<OAICreateAssignedTargetingOptionsRequest> &create_requests) {
    m_create_requests = create_requests;
    m_create_requests_isSet = true;
}

bool OAIBulkEditPartnerAssignedTargetingOptionsRequest::is_create_requests_Set() const{
    return m_create_requests_isSet;
}

bool OAIBulkEditPartnerAssignedTargetingOptionsRequest::is_create_requests_Valid() const{
    return m_create_requests_isValid;
}

QList<OAIDeleteAssignedTargetingOptionsRequest> OAIBulkEditPartnerAssignedTargetingOptionsRequest::getDeleteRequests() const {
    return m_delete_requests;
}
void OAIBulkEditPartnerAssignedTargetingOptionsRequest::setDeleteRequests(const QList<OAIDeleteAssignedTargetingOptionsRequest> &delete_requests) {
    m_delete_requests = delete_requests;
    m_delete_requests_isSet = true;
}

bool OAIBulkEditPartnerAssignedTargetingOptionsRequest::is_delete_requests_Set() const{
    return m_delete_requests_isSet;
}

bool OAIBulkEditPartnerAssignedTargetingOptionsRequest::is_delete_requests_Valid() const{
    return m_delete_requests_isValid;
}

bool OAIBulkEditPartnerAssignedTargetingOptionsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_delete_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkEditPartnerAssignedTargetingOptionsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
