# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class RateDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inventory_source_rate_type: str=None, minimum_spend: Money=None, rate: Money=None, units_purchased: str=None):
        """RateDetails - a model defined in OpenAPI

        :param inventory_source_rate_type: The inventory_source_rate_type of this RateDetails.
        :param minimum_spend: The minimum_spend of this RateDetails.
        :param rate: The rate of this RateDetails.
        :param units_purchased: The units_purchased of this RateDetails.
        """
        self.openapi_types = {
            'inventory_source_rate_type': str,
            'minimum_spend': Money,
            'rate': Money,
            'units_purchased': str
        }

        self.attribute_map = {
            'inventory_source_rate_type': 'inventorySourceRateType',
            'minimum_spend': 'minimumSpend',
            'rate': 'rate',
            'units_purchased': 'unitsPurchased'
        }

        self._inventory_source_rate_type = inventory_source_rate_type
        self._minimum_spend = minimum_spend
        self._rate = rate
        self._units_purchased = units_purchased

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RateDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RateDetails of this RateDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inventory_source_rate_type(self):
        """Gets the inventory_source_rate_type of this RateDetails.

        The rate type. Acceptable values are `INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED`, `INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR`, and `INVENTORY_SOURCE_RATE_TYPE_CPD`.

        :return: The inventory_source_rate_type of this RateDetails.
        :rtype: str
        """
        return self._inventory_source_rate_type

    @inventory_source_rate_type.setter
    def inventory_source_rate_type(self, inventory_source_rate_type):
        """Sets the inventory_source_rate_type of this RateDetails.

        The rate type. Acceptable values are `INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED`, `INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR`, and `INVENTORY_SOURCE_RATE_TYPE_CPD`.

        :param inventory_source_rate_type: The inventory_source_rate_type of this RateDetails.
        :type inventory_source_rate_type: str
        """
        allowed_values = ["INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED", "INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED", "INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR", "INVENTORY_SOURCE_RATE_TYPE_CPD", "INVENTORY_SOURCE_RATE_TYPE_FLAT"]  # noqa: E501
        if inventory_source_rate_type not in allowed_values:
            raise ValueError(
                "Invalid value for `inventory_source_rate_type` ({0}), must be one of {1}"
                .format(inventory_source_rate_type, allowed_values)
            )

        self._inventory_source_rate_type = inventory_source_rate_type

    @property
    def minimum_spend(self):
        """Gets the minimum_spend of this RateDetails.


        :return: The minimum_spend of this RateDetails.
        :rtype: Money
        """
        return self._minimum_spend

    @minimum_spend.setter
    def minimum_spend(self, minimum_spend):
        """Sets the minimum_spend of this RateDetails.


        :param minimum_spend: The minimum_spend of this RateDetails.
        :type minimum_spend: Money
        """

        self._minimum_spend = minimum_spend

    @property
    def rate(self):
        """Gets the rate of this RateDetails.


        :return: The rate of this RateDetails.
        :rtype: Money
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this RateDetails.


        :param rate: The rate of this RateDetails.
        :type rate: Money
        """

        self._rate = rate

    @property
    def units_purchased(self):
        """Gets the units_purchased of this RateDetails.

        Required for guaranteed inventory sources. The number of impressions guaranteed by the seller.

        :return: The units_purchased of this RateDetails.
        :rtype: str
        """
        return self._units_purchased

    @units_purchased.setter
    def units_purchased(self, units_purchased):
        """Sets the units_purchased of this RateDetails.

        Required for guaranteed inventory sources. The number of impressions guaranteed by the seller.

        :param units_purchased: The units_purchased of this RateDetails.
        :type units_purchased: str
        """

        self._units_purchased = units_purchased
