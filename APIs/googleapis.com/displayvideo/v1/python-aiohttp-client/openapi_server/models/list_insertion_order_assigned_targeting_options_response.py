# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assigned_targeting_option import AssignedTargetingOption
from openapi_server import util


class ListInsertionOrderAssignedTargetingOptionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assigned_targeting_options: List[AssignedTargetingOption]=None, next_page_token: str=None):
        """ListInsertionOrderAssignedTargetingOptionsResponse - a model defined in OpenAPI

        :param assigned_targeting_options: The assigned_targeting_options of this ListInsertionOrderAssignedTargetingOptionsResponse.
        :param next_page_token: The next_page_token of this ListInsertionOrderAssignedTargetingOptionsResponse.
        """
        self.openapi_types = {
            'assigned_targeting_options': List[AssignedTargetingOption],
            'next_page_token': str
        }

        self.attribute_map = {
            'assigned_targeting_options': 'assignedTargetingOptions',
            'next_page_token': 'nextPageToken'
        }

        self._assigned_targeting_options = assigned_targeting_options
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListInsertionOrderAssignedTargetingOptionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListInsertionOrderAssignedTargetingOptionsResponse of this ListInsertionOrderAssignedTargetingOptionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assigned_targeting_options(self):
        """Gets the assigned_targeting_options of this ListInsertionOrderAssignedTargetingOptionsResponse.

        The list of assigned targeting options. This list will be absent if empty.

        :return: The assigned_targeting_options of this ListInsertionOrderAssignedTargetingOptionsResponse.
        :rtype: List[AssignedTargetingOption]
        """
        return self._assigned_targeting_options

    @assigned_targeting_options.setter
    def assigned_targeting_options(self, assigned_targeting_options):
        """Sets the assigned_targeting_options of this ListInsertionOrderAssignedTargetingOptionsResponse.

        The list of assigned targeting options. This list will be absent if empty.

        :param assigned_targeting_options: The assigned_targeting_options of this ListInsertionOrderAssignedTargetingOptionsResponse.
        :type assigned_targeting_options: List[AssignedTargetingOption]
        """

        self._assigned_targeting_options = assigned_targeting_options

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListInsertionOrderAssignedTargetingOptionsResponse.

        A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.

        :return: The next_page_token of this ListInsertionOrderAssignedTargetingOptionsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListInsertionOrderAssignedTargetingOptionsResponse.

        A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.

        :param next_page_token: The next_page_token of this ListInsertionOrderAssignedTargetingOptionsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
