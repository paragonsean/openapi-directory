# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeywordAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyword: str=None, negative: bool=None):
        """KeywordAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param keyword: The keyword of this KeywordAssignedTargetingOptionDetails.
        :param negative: The negative of this KeywordAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'keyword': str,
            'negative': bool
        }

        self.attribute_map = {
            'keyword': 'keyword',
            'negative': 'negative'
        }

        self._keyword = keyword
        self._negative = negative

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeywordAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeywordAssignedTargetingOptionDetails of this KeywordAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyword(self):
        """Gets the keyword of this KeywordAssignedTargetingOptionDetails.

        Required. The keyword, for example `car insurance`. Positive keyword cannot be offensive word. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10.

        :return: The keyword of this KeywordAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this KeywordAssignedTargetingOptionDetails.

        Required. The keyword, for example `car insurance`. Positive keyword cannot be offensive word. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10.

        :param keyword: The keyword of this KeywordAssignedTargetingOptionDetails.
        :type keyword: str
        """

        self._keyword = keyword

    @property
    def negative(self):
        """Gets the negative of this KeywordAssignedTargetingOptionDetails.

        Indicates if this option is being negatively targeted.

        :return: The negative of this KeywordAssignedTargetingOptionDetails.
        :rtype: bool
        """
        return self._negative

    @negative.setter
    def negative(self, negative):
        """Sets the negative of this KeywordAssignedTargetingOptionDetails.

        Indicates if this option is being negatively targeted.

        :param negative: The negative of this KeywordAssignedTargetingOptionDetails.
        :type negative: bool
        """

        self._negative = negative
