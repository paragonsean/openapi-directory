# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SdfDownloadTaskMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, end_time: str=None, version: str=None):
        """SdfDownloadTaskMetadata - a model defined in OpenAPI

        :param create_time: The create_time of this SdfDownloadTaskMetadata.
        :param end_time: The end_time of this SdfDownloadTaskMetadata.
        :param version: The version of this SdfDownloadTaskMetadata.
        """
        self.openapi_types = {
            'create_time': str,
            'end_time': str,
            'version': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'end_time': 'endTime',
            'version': 'version'
        }

        self._create_time = create_time
        self._end_time = end_time
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SdfDownloadTaskMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SdfDownloadTaskMetadata of this SdfDownloadTaskMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this SdfDownloadTaskMetadata.

        The time when the operation was created.

        :return: The create_time of this SdfDownloadTaskMetadata.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this SdfDownloadTaskMetadata.

        The time when the operation was created.

        :param create_time: The create_time of this SdfDownloadTaskMetadata.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def end_time(self):
        """Gets the end_time of this SdfDownloadTaskMetadata.

        The time when execution was completed.

        :return: The end_time of this SdfDownloadTaskMetadata.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this SdfDownloadTaskMetadata.

        The time when execution was completed.

        :param end_time: The end_time of this SdfDownloadTaskMetadata.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def version(self):
        """Gets the version of this SdfDownloadTaskMetadata.

        The SDF version used to execute this download task.

        :return: The version of this SdfDownloadTaskMetadata.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this SdfDownloadTaskMetadata.

        The SDF version used to execute this download task.

        :param version: The version of this SdfDownloadTaskMetadata.
        :type version: str
        """
        allowed_values = ["SDF_VERSION_UNSPECIFIED", "SDF_VERSION_3_1", "SDF_VERSION_4", "SDF_VERSION_4_1", "SDF_VERSION_4_2", "SDF_VERSION_5", "SDF_VERSION_5_1", "SDF_VERSION_5_2", "SDF_VERSION_5_3", "SDF_VERSION_5_4", "SDF_VERSION_5_5", "SDF_VERSION_6", "SDF_VERSION_7"]  # noqa: E501
        if version not in allowed_values:
            raise ValueError(
                "Invalid value for `version` ({0}), must be one of {1}"
                .format(version, allowed_values)
            )

        self._version = version
