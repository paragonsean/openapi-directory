# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OnScreenPositionTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, on_screen_position: str=None):
        """OnScreenPositionTargetingOptionDetails - a model defined in OpenAPI

        :param on_screen_position: The on_screen_position of this OnScreenPositionTargetingOptionDetails.
        """
        self.openapi_types = {
            'on_screen_position': str
        }

        self.attribute_map = {
            'on_screen_position': 'onScreenPosition'
        }

        self._on_screen_position = on_screen_position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnScreenPositionTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OnScreenPositionTargetingOptionDetails of this OnScreenPositionTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def on_screen_position(self):
        """Gets the on_screen_position of this OnScreenPositionTargetingOptionDetails.

        Output only. The on screen position.

        :return: The on_screen_position of this OnScreenPositionTargetingOptionDetails.
        :rtype: str
        """
        return self._on_screen_position

    @on_screen_position.setter
    def on_screen_position(self, on_screen_position):
        """Sets the on_screen_position of this OnScreenPositionTargetingOptionDetails.

        Output only. The on screen position.

        :param on_screen_position: The on_screen_position of this OnScreenPositionTargetingOptionDetails.
        :type on_screen_position: str
        """
        allowed_values = ["ON_SCREEN_POSITION_UNSPECIFIED", "ON_SCREEN_POSITION_UNKNOWN", "ON_SCREEN_POSITION_ABOVE_THE_FOLD", "ON_SCREEN_POSITION_BELOW_THE_FOLD"]  # noqa: E501
        if on_screen_position not in allowed_values:
            raise ValueError(
                "Invalid value for `on_screen_position` ({0}), must be one of {1}"
                .format(on_screen_position, allowed_values)
            )

        self._on_screen_position = on_screen_position
