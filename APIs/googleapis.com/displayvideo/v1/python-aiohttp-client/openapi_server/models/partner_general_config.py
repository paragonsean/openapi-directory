# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PartnerGeneralConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, time_zone: str=None):
        """PartnerGeneralConfig - a model defined in OpenAPI

        :param currency_code: The currency_code of this PartnerGeneralConfig.
        :param time_zone: The time_zone of this PartnerGeneralConfig.
        """
        self.openapi_types = {
            'currency_code': str,
            'time_zone': str
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'time_zone': 'timeZone'
        }

        self._currency_code = currency_code
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PartnerGeneralConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PartnerGeneralConfig of this PartnerGeneralConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this PartnerGeneralConfig.

        Immutable. Partner's currency in ISO 4217 format.

        :return: The currency_code of this PartnerGeneralConfig.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this PartnerGeneralConfig.

        Immutable. Partner's currency in ISO 4217 format.

        :param currency_code: The currency_code of this PartnerGeneralConfig.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def time_zone(self):
        """Gets the time_zone of this PartnerGeneralConfig.

        Immutable. The standard TZ database name of the partner's time zone. For example, `America/New_York`. See more at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

        :return: The time_zone of this PartnerGeneralConfig.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this PartnerGeneralConfig.

        Immutable. The standard TZ database name of the partner's time zone. For example, `America/New_York`. See more at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

        :param time_zone: The time_zone of this PartnerGeneralConfig.
        :type time_zone: str
        """

        self._time_zone = time_zone
