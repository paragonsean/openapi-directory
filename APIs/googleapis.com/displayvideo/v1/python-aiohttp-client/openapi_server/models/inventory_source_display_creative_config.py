# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimensions import Dimensions
from openapi_server import util


class InventorySourceDisplayCreativeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creative_size: Dimensions=None):
        """InventorySourceDisplayCreativeConfig - a model defined in OpenAPI

        :param creative_size: The creative_size of this InventorySourceDisplayCreativeConfig.
        """
        self.openapi_types = {
            'creative_size': Dimensions
        }

        self.attribute_map = {
            'creative_size': 'creativeSize'
        }

        self._creative_size = creative_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventorySourceDisplayCreativeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventorySourceDisplayCreativeConfig of this InventorySourceDisplayCreativeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creative_size(self):
        """Gets the creative_size of this InventorySourceDisplayCreativeConfig.


        :return: The creative_size of this InventorySourceDisplayCreativeConfig.
        :rtype: Dimensions
        """
        return self._creative_size

    @creative_size.setter
    def creative_size(self, creative_size):
        """Sets the creative_size of this InventorySourceDisplayCreativeConfig.


        :param creative_size: The creative_size of this InventorySourceDisplayCreativeConfig.
        :type creative_size: Dimensions
        """

        self._creative_size = creative_size
