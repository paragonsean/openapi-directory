# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NegativeKeyword(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyword_value: str=None, name: str=None):
        """NegativeKeyword - a model defined in OpenAPI

        :param keyword_value: The keyword_value of this NegativeKeyword.
        :param name: The name of this NegativeKeyword.
        """
        self.openapi_types = {
            'keyword_value': str,
            'name': str
        }

        self.attribute_map = {
            'keyword_value': 'keywordValue',
            'name': 'name'
        }

        self._keyword_value = keyword_value
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NegativeKeyword':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NegativeKeyword of this NegativeKeyword.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyword_value(self):
        """Gets the keyword_value of this NegativeKeyword.

        Required. Immutable. The negatively targeted keyword, for example `car insurance`. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10. Valid characters are restricted to ASCII characters only. The only URL-escaping permitted is for representing whitespace between words. Leading or trailing whitespace is ignored.

        :return: The keyword_value of this NegativeKeyword.
        :rtype: str
        """
        return self._keyword_value

    @keyword_value.setter
    def keyword_value(self, keyword_value):
        """Sets the keyword_value of this NegativeKeyword.

        Required. Immutable. The negatively targeted keyword, for example `car insurance`. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10. Valid characters are restricted to ASCII characters only. The only URL-escaping permitted is for representing whitespace between words. Leading or trailing whitespace is ignored.

        :param keyword_value: The keyword_value of this NegativeKeyword.
        :type keyword_value: str
        """

        self._keyword_value = keyword_value

    @property
    def name(self):
        """Gets the name of this NegativeKeyword.

        Output only. The resource name of the negative keyword.

        :return: The name of this NegativeKeyword.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NegativeKeyword.

        Output only. The resource name of the negative keyword.

        :param name: The name of this NegativeKeyword.
        :type name: str
        """

        self._name = name
