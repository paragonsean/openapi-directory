# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mobile_app import MobileApp
from openapi_server import util


class GenerateDefaultLineItemRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, insertion_order_id: str=None, line_item_type: str=None, mobile_app: MobileApp=None):
        """GenerateDefaultLineItemRequest - a model defined in OpenAPI

        :param display_name: The display_name of this GenerateDefaultLineItemRequest.
        :param insertion_order_id: The insertion_order_id of this GenerateDefaultLineItemRequest.
        :param line_item_type: The line_item_type of this GenerateDefaultLineItemRequest.
        :param mobile_app: The mobile_app of this GenerateDefaultLineItemRequest.
        """
        self.openapi_types = {
            'display_name': str,
            'insertion_order_id': str,
            'line_item_type': str,
            'mobile_app': MobileApp
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'insertion_order_id': 'insertionOrderId',
            'line_item_type': 'lineItemType',
            'mobile_app': 'mobileApp'
        }

        self._display_name = display_name
        self._insertion_order_id = insertion_order_id
        self._line_item_type = line_item_type
        self._mobile_app = mobile_app

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateDefaultLineItemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateDefaultLineItemRequest of this GenerateDefaultLineItemRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this GenerateDefaultLineItemRequest.

        Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :return: The display_name of this GenerateDefaultLineItemRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GenerateDefaultLineItemRequest.

        Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.

        :param display_name: The display_name of this GenerateDefaultLineItemRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def insertion_order_id(self):
        """Gets the insertion_order_id of this GenerateDefaultLineItemRequest.

        Required. The unique ID of the insertion order that the line item belongs to.

        :return: The insertion_order_id of this GenerateDefaultLineItemRequest.
        :rtype: str
        """
        return self._insertion_order_id

    @insertion_order_id.setter
    def insertion_order_id(self, insertion_order_id):
        """Sets the insertion_order_id of this GenerateDefaultLineItemRequest.

        Required. The unique ID of the insertion order that the line item belongs to.

        :param insertion_order_id: The insertion_order_id of this GenerateDefaultLineItemRequest.
        :type insertion_order_id: str
        """

        self._insertion_order_id = insertion_order_id

    @property
    def line_item_type(self):
        """Gets the line_item_type of this GenerateDefaultLineItemRequest.

        Required. The type of the line item.

        :return: The line_item_type of this GenerateDefaultLineItemRequest.
        :rtype: str
        """
        return self._line_item_type

    @line_item_type.setter
    def line_item_type(self, line_item_type):
        """Sets the line_item_type of this GenerateDefaultLineItemRequest.

        Required. The type of the line item.

        :param line_item_type: The line_item_type of this GenerateDefaultLineItemRequest.
        :type line_item_type: str
        """
        allowed_values = ["LINE_ITEM_TYPE_UNSPECIFIED", "LINE_ITEM_TYPE_DISPLAY_DEFAULT", "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL", "LINE_ITEM_TYPE_VIDEO_DEFAULT", "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL", "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY", "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY", "LINE_ITEM_TYPE_AUDIO_DEFAULT", "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP", "LINE_ITEM_TYPE_DISPLAY_OUT_OF_HOME", "LINE_ITEM_TYPE_VIDEO_OUT_OF_HOME"]  # noqa: E501
        if line_item_type not in allowed_values:
            raise ValueError(
                "Invalid value for `line_item_type` ({0}), must be one of {1}"
                .format(line_item_type, allowed_values)
            )

        self._line_item_type = line_item_type

    @property
    def mobile_app(self):
        """Gets the mobile_app of this GenerateDefaultLineItemRequest.


        :return: The mobile_app of this GenerateDefaultLineItemRequest.
        :rtype: MobileApp
        """
        return self._mobile_app

    @mobile_app.setter
    def mobile_app(self, mobile_app):
        """Sets the mobile_app of this GenerateDefaultLineItemRequest.


        :param mobile_app: The mobile_app of this GenerateDefaultLineItemRequest.
        :type mobile_app: MobileApp
        """

        self._mobile_app = mobile_app
