# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AgeRangeAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, age_range: str=None, targeting_option_id: str=None):
        """AgeRangeAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param age_range: The age_range of this AgeRangeAssignedTargetingOptionDetails.
        :param targeting_option_id: The targeting_option_id of this AgeRangeAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'age_range': str,
            'targeting_option_id': str
        }

        self.attribute_map = {
            'age_range': 'ageRange',
            'targeting_option_id': 'targetingOptionId'
        }

        self._age_range = age_range
        self._targeting_option_id = targeting_option_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgeRangeAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgeRangeAssignedTargetingOptionDetails of this AgeRangeAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age_range(self):
        """Gets the age_range of this AgeRangeAssignedTargetingOptionDetails.

        Required. The age range of an audience. We only support targeting a continuous age range of an audience. Thus, the age range represented in this field can be 1) targeted solely, or, 2) part of a larger continuous age range. The reach of a continuous age range targeting can be expanded by also targeting an audience of an unknown age.

        :return: The age_range of this AgeRangeAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._age_range

    @age_range.setter
    def age_range(self, age_range):
        """Sets the age_range of this AgeRangeAssignedTargetingOptionDetails.

        Required. The age range of an audience. We only support targeting a continuous age range of an audience. Thus, the age range represented in this field can be 1) targeted solely, or, 2) part of a larger continuous age range. The reach of a continuous age range targeting can be expanded by also targeting an audience of an unknown age.

        :param age_range: The age_range of this AgeRangeAssignedTargetingOptionDetails.
        :type age_range: str
        """
        allowed_values = ["AGE_RANGE_UNSPECIFIED", "AGE_RANGE_18_24", "AGE_RANGE_25_34", "AGE_RANGE_35_44", "AGE_RANGE_45_54", "AGE_RANGE_55_64", "AGE_RANGE_65_PLUS", "AGE_RANGE_UNKNOWN"]  # noqa: E501
        if age_range not in allowed_values:
            raise ValueError(
                "Invalid value for `age_range` ({0}), must be one of {1}"
                .format(age_range, allowed_values)
            )

        self._age_range = age_range

    @property
    def targeting_option_id(self):
        """Gets the targeting_option_id of this AgeRangeAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_AGE_RANGE`.

        :return: The targeting_option_id of this AgeRangeAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._targeting_option_id

    @targeting_option_id.setter
    def targeting_option_id(self, targeting_option_id):
        """Sets the targeting_option_id of this AgeRangeAssignedTargetingOptionDetails.

        Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_AGE_RANGE`.

        :param targeting_option_id: The targeting_option_id of this AgeRangeAssignedTargetingOptionDetails.
        :type targeting_option_id: str
        """

        self._targeting_option_id = targeting_option_id
