# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioVideoOffset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percentage: str=None, seconds: str=None):
        """AudioVideoOffset - a model defined in OpenAPI

        :param percentage: The percentage of this AudioVideoOffset.
        :param seconds: The seconds of this AudioVideoOffset.
        """
        self.openapi_types = {
            'percentage': str,
            'seconds': str
        }

        self.attribute_map = {
            'percentage': 'percentage',
            'seconds': 'seconds'
        }

        self._percentage = percentage
        self._seconds = seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioVideoOffset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioVideoOffset of this AudioVideoOffset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percentage(self):
        """Gets the percentage of this AudioVideoOffset.

        The offset in percentage of the audio or video duration.

        :return: The percentage of this AudioVideoOffset.
        :rtype: str
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage):
        """Sets the percentage of this AudioVideoOffset.

        The offset in percentage of the audio or video duration.

        :param percentage: The percentage of this AudioVideoOffset.
        :type percentage: str
        """

        self._percentage = percentage

    @property
    def seconds(self):
        """Gets the seconds of this AudioVideoOffset.

        The offset in seconds from the start of the audio or video.

        :return: The seconds of this AudioVideoOffset.
        :rtype: str
        """
        return self._seconds

    @seconds.setter
    def seconds(self, seconds):
        """Sets the seconds of this AudioVideoOffset.

        The offset in seconds from the start of the audio or video.

        :param seconds: The seconds of this AudioVideoOffset.
        :type seconds: str
        """

        self._seconds = seconds
