# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cm_hybrid_config import CmHybridConfig
from openapi_server.models.third_party_only_config import ThirdPartyOnlyConfig
from openapi_server import util


class AdvertiserAdServerConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cm_hybrid_config: CmHybridConfig=None, third_party_only_config: ThirdPartyOnlyConfig=None):
        """AdvertiserAdServerConfig - a model defined in OpenAPI

        :param cm_hybrid_config: The cm_hybrid_config of this AdvertiserAdServerConfig.
        :param third_party_only_config: The third_party_only_config of this AdvertiserAdServerConfig.
        """
        self.openapi_types = {
            'cm_hybrid_config': CmHybridConfig,
            'third_party_only_config': ThirdPartyOnlyConfig
        }

        self.attribute_map = {
            'cm_hybrid_config': 'cmHybridConfig',
            'third_party_only_config': 'thirdPartyOnlyConfig'
        }

        self._cm_hybrid_config = cm_hybrid_config
        self._third_party_only_config = third_party_only_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvertiserAdServerConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvertiserAdServerConfig of this AdvertiserAdServerConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cm_hybrid_config(self):
        """Gets the cm_hybrid_config of this AdvertiserAdServerConfig.


        :return: The cm_hybrid_config of this AdvertiserAdServerConfig.
        :rtype: CmHybridConfig
        """
        return self._cm_hybrid_config

    @cm_hybrid_config.setter
    def cm_hybrid_config(self, cm_hybrid_config):
        """Sets the cm_hybrid_config of this AdvertiserAdServerConfig.


        :param cm_hybrid_config: The cm_hybrid_config of this AdvertiserAdServerConfig.
        :type cm_hybrid_config: CmHybridConfig
        """

        self._cm_hybrid_config = cm_hybrid_config

    @property
    def third_party_only_config(self):
        """Gets the third_party_only_config of this AdvertiserAdServerConfig.


        :return: The third_party_only_config of this AdvertiserAdServerConfig.
        :rtype: ThirdPartyOnlyConfig
        """
        return self._third_party_only_config

    @third_party_only_config.setter
    def third_party_only_config(self, third_party_only_config):
        """Sets the third_party_only_config of this AdvertiserAdServerConfig.


        :param third_party_only_config: The third_party_only_config of this AdvertiserAdServerConfig.
        :type third_party_only_config: ThirdPartyOnlyConfig
        """

        self._third_party_only_config = third_party_only_config
