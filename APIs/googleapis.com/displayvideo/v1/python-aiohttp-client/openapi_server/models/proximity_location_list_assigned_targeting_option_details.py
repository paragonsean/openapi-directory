# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProximityLocationListAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, proximity_location_list_id: str=None, proximity_radius_range: str=None):
        """ProximityLocationListAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param proximity_location_list_id: The proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.
        :param proximity_radius_range: The proximity_radius_range of this ProximityLocationListAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'proximity_location_list_id': str,
            'proximity_radius_range': str
        }

        self.attribute_map = {
            'proximity_location_list_id': 'proximityLocationListId',
            'proximity_radius_range': 'proximityRadiusRange'
        }

        self._proximity_location_list_id = proximity_location_list_id
        self._proximity_radius_range = proximity_radius_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProximityLocationListAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProximityLocationListAssignedTargetingOptionDetails of this ProximityLocationListAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def proximity_location_list_id(self):
        """Gets the proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. ID of the proximity location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_PROXIMITY`.

        :return: The proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._proximity_location_list_id

    @proximity_location_list_id.setter
    def proximity_location_list_id(self, proximity_location_list_id):
        """Sets the proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. ID of the proximity location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_PROXIMITY`.

        :param proximity_location_list_id: The proximity_location_list_id of this ProximityLocationListAssignedTargetingOptionDetails.
        :type proximity_location_list_id: str
        """

        self._proximity_location_list_id = proximity_location_list_id

    @property
    def proximity_radius_range(self):
        """Gets the proximity_radius_range of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. Radius range for proximity location list. This represents the size of the area around a chosen location that will be targeted. `All` proximity location targeting under a single resource must have the same radius range value. Set this value to match any existing targeting. If updated, this field will change the radius range for all proximity targeting under the resource.

        :return: The proximity_radius_range of this ProximityLocationListAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._proximity_radius_range

    @proximity_radius_range.setter
    def proximity_radius_range(self, proximity_radius_range):
        """Sets the proximity_radius_range of this ProximityLocationListAssignedTargetingOptionDetails.

        Required. Radius range for proximity location list. This represents the size of the area around a chosen location that will be targeted. `All` proximity location targeting under a single resource must have the same radius range value. Set this value to match any existing targeting. If updated, this field will change the radius range for all proximity targeting under the resource.

        :param proximity_radius_range: The proximity_radius_range of this ProximityLocationListAssignedTargetingOptionDetails.
        :type proximity_radius_range: str
        """
        allowed_values = ["PROXIMITY_RADIUS_RANGE_UNSPECIFIED", "PROXIMITY_RADIUS_RANGE_SMALL", "PROXIMITY_RADIUS_RANGE_MEDIUM", "PROXIMITY_RADIUS_RANGE_LARGE"]  # noqa: E501
        if proximity_radius_range not in allowed_values:
            raise ValueError(
                "Invalid value for `proximity_radius_range` ({0}), must be one of {1}"
                .format(proximity_radius_range, allowed_values)
            )

        self._proximity_radius_range = proximity_radius_range
