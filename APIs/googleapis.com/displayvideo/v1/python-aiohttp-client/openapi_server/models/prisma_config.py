# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.prisma_cpe_code import PrismaCpeCode
from openapi_server import util


class PrismaConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prisma_cpe_code: PrismaCpeCode=None, prisma_type: str=None, supplier: str=None):
        """PrismaConfig - a model defined in OpenAPI

        :param prisma_cpe_code: The prisma_cpe_code of this PrismaConfig.
        :param prisma_type: The prisma_type of this PrismaConfig.
        :param supplier: The supplier of this PrismaConfig.
        """
        self.openapi_types = {
            'prisma_cpe_code': PrismaCpeCode,
            'prisma_type': str,
            'supplier': str
        }

        self.attribute_map = {
            'prisma_cpe_code': 'prismaCpeCode',
            'prisma_type': 'prismaType',
            'supplier': 'supplier'
        }

        self._prisma_cpe_code = prisma_cpe_code
        self._prisma_type = prisma_type
        self._supplier = supplier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrismaConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrismaConfig of this PrismaConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prisma_cpe_code(self):
        """Gets the prisma_cpe_code of this PrismaConfig.


        :return: The prisma_cpe_code of this PrismaConfig.
        :rtype: PrismaCpeCode
        """
        return self._prisma_cpe_code

    @prisma_cpe_code.setter
    def prisma_cpe_code(self, prisma_cpe_code):
        """Sets the prisma_cpe_code of this PrismaConfig.


        :param prisma_cpe_code: The prisma_cpe_code of this PrismaConfig.
        :type prisma_cpe_code: PrismaCpeCode
        """

        self._prisma_cpe_code = prisma_cpe_code

    @property
    def prisma_type(self):
        """Gets the prisma_type of this PrismaConfig.

        Required. The Prisma type.

        :return: The prisma_type of this PrismaConfig.
        :rtype: str
        """
        return self._prisma_type

    @prisma_type.setter
    def prisma_type(self, prisma_type):
        """Sets the prisma_type of this PrismaConfig.

        Required. The Prisma type.

        :param prisma_type: The prisma_type of this PrismaConfig.
        :type prisma_type: str
        """
        allowed_values = ["PRISMA_TYPE_UNSPECIFIED", "PRISMA_TYPE_DISPLAY", "PRISMA_TYPE_SEARCH", "PRISMA_TYPE_VIDEO", "PRISMA_TYPE_AUDIO", "PRISMA_TYPE_SOCIAL", "PRISMA_TYPE_FEE"]  # noqa: E501
        if prisma_type not in allowed_values:
            raise ValueError(
                "Invalid value for `prisma_type` ({0}), must be one of {1}"
                .format(prisma_type, allowed_values)
            )

        self._prisma_type = prisma_type

    @property
    def supplier(self):
        """Gets the supplier of this PrismaConfig.

        Required. The entity allocated this budget (DSP, site, etc.).

        :return: The supplier of this PrismaConfig.
        :rtype: str
        """
        return self._supplier

    @supplier.setter
    def supplier(self, supplier):
        """Sets the supplier of this PrismaConfig.

        Required. The entity allocated this budget (DSP, site, etc.).

        :param supplier: The supplier of this PrismaConfig.
        :type supplier: str
        """

        self._supplier = supplier
