# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentOutstreamPositionAssignedTargetingOptionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_type: str=None, content_outstream_position: str=None, targeting_option_id: str=None):
        """ContentOutstreamPositionAssignedTargetingOptionDetails - a model defined in OpenAPI

        :param ad_type: The ad_type of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :param content_outstream_position: The content_outstream_position of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :param targeting_option_id: The targeting_option_id of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        """
        self.openapi_types = {
            'ad_type': str,
            'content_outstream_position': str,
            'targeting_option_id': str
        }

        self.attribute_map = {
            'ad_type': 'adType',
            'content_outstream_position': 'contentOutstreamPosition',
            'targeting_option_id': 'targetingOptionId'
        }

        self._ad_type = ad_type
        self._content_outstream_position = content_outstream_position
        self._targeting_option_id = targeting_option_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentOutstreamPositionAssignedTargetingOptionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentOutstreamPositionAssignedTargetingOptionDetails of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_type(self):
        """Gets the ad_type of this ContentOutstreamPositionAssignedTargetingOptionDetails.

        Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`.

        :return: The ad_type of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._ad_type

    @ad_type.setter
    def ad_type(self, ad_type):
        """Sets the ad_type of this ContentOutstreamPositionAssignedTargetingOptionDetails.

        Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`.

        :param ad_type: The ad_type of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :type ad_type: str
        """
        allowed_values = ["AD_TYPE_UNSPECIFIED", "AD_TYPE_DISPLAY", "AD_TYPE_VIDEO", "AD_TYPE_AUDIO"]  # noqa: E501
        if ad_type not in allowed_values:
            raise ValueError(
                "Invalid value for `ad_type` ({0}), must be one of {1}"
                .format(ad_type, allowed_values)
            )

        self._ad_type = ad_type

    @property
    def content_outstream_position(self):
        """Gets the content_outstream_position of this ContentOutstreamPositionAssignedTargetingOptionDetails.

        Required. The content outstream position.

        :return: The content_outstream_position of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._content_outstream_position

    @content_outstream_position.setter
    def content_outstream_position(self, content_outstream_position):
        """Sets the content_outstream_position of this ContentOutstreamPositionAssignedTargetingOptionDetails.

        Required. The content outstream position.

        :param content_outstream_position: The content_outstream_position of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :type content_outstream_position: str
        """
        allowed_values = ["CONTENT_OUTSTREAM_POSITION_UNSPECIFIED", "CONTENT_OUTSTREAM_POSITION_UNKNOWN", "CONTENT_OUTSTREAM_POSITION_IN_ARTICLE", "CONTENT_OUTSTREAM_POSITION_IN_BANNER", "CONTENT_OUTSTREAM_POSITION_IN_FEED", "CONTENT_OUTSTREAM_POSITION_INTERSTITIAL"]  # noqa: E501
        if content_outstream_position not in allowed_values:
            raise ValueError(
                "Invalid value for `content_outstream_position` ({0}), must be one of {1}"
                .format(content_outstream_position, allowed_values)
            )

        self._content_outstream_position = content_outstream_position

    @property
    def targeting_option_id(self):
        """Gets the targeting_option_id of this ContentOutstreamPositionAssignedTargetingOptionDetails.

        Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.

        :return: The targeting_option_id of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :rtype: str
        """
        return self._targeting_option_id

    @targeting_option_id.setter
    def targeting_option_id(self, targeting_option_id):
        """Sets the targeting_option_id of this ContentOutstreamPositionAssignedTargetingOptionDetails.

        Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.

        :param targeting_option_id: The targeting_option_id of this ContentOutstreamPositionAssignedTargetingOptionDetails.
        :type targeting_option_id: str
        """

        self._targeting_option_id = targeting_option_id
