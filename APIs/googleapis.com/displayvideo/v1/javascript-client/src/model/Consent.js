/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Consent model module.
 * @module model/Consent
 * @version v1
 */
class Consent {
    /**
     * Constructs a new <code>Consent</code>.
     * User consent status.
     * @alias module:model/Consent
     */
    constructor() { 
        
        Consent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Consent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Consent} obj Optional instance to populate.
     * @return {module:model/Consent} The populated <code>Consent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Consent();

            if (data.hasOwnProperty('adPersonalization')) {
                obj['adPersonalization'] = ApiClient.convertToType(data['adPersonalization'], 'String');
            }
            if (data.hasOwnProperty('adUserData')) {
                obj['adUserData'] = ApiClient.convertToType(data['adUserData'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Consent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Consent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adPersonalization'] && !(typeof data['adPersonalization'] === 'string' || data['adPersonalization'] instanceof String)) {
            throw new Error("Expected the field `adPersonalization` to be a primitive type in the JSON string but got " + data['adPersonalization']);
        }
        // ensure the json data is a string
        if (data['adUserData'] && !(typeof data['adUserData'] === 'string' || data['adUserData'] instanceof String)) {
            throw new Error("Expected the field `adUserData` to be a primitive type in the JSON string but got " + data['adUserData']);
        }

        return true;
    }


}



/**
 * Represents consent for ad personalization.
 * @member {module:model/Consent.AdPersonalizationEnum} adPersonalization
 */
Consent.prototype['adPersonalization'] = undefined;

/**
 * Represents consent for ad user data.
 * @member {module:model/Consent.AdUserDataEnum} adUserData
 */
Consent.prototype['adUserData'] = undefined;





/**
 * Allowed values for the <code>adPersonalization</code> property.
 * @enum {String}
 * @readonly
 */
Consent['AdPersonalizationEnum'] = {

    /**
     * value: "CONSENT_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "CONSENT_STATUS_UNSPECIFIED",

    /**
     * value: "CONSENT_STATUS_GRANTED"
     * @const
     */
    "GRANTED": "CONSENT_STATUS_GRANTED",

    /**
     * value: "CONSENT_STATUS_DENIED"
     * @const
     */
    "DENIED": "CONSENT_STATUS_DENIED"
};


/**
 * Allowed values for the <code>adUserData</code> property.
 * @enum {String}
 * @readonly
 */
Consent['AdUserDataEnum'] = {

    /**
     * value: "CONSENT_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "CONSENT_STATUS_UNSPECIFIED",

    /**
     * value: "CONSENT_STATUS_GRANTED"
     * @const
     */
    "GRANTED": "CONSENT_STATUS_GRANTED",

    /**
     * value: "CONSENT_STATUS_DENIED"
     * @const
     */
    "DENIED": "CONSENT_STATUS_DENIED"
};



export default Consent;

