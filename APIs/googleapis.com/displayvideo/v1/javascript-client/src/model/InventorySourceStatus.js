/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InventorySourceStatus model module.
 * @module model/InventorySourceStatus
 * @version v1
 */
class InventorySourceStatus {
    /**
     * Constructs a new <code>InventorySourceStatus</code>.
     * The status related settings of the inventory source.
     * @alias module:model/InventorySourceStatus
     */
    constructor() { 
        
        InventorySourceStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InventorySourceStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventorySourceStatus} obj Optional instance to populate.
     * @return {module:model/InventorySourceStatus} The populated <code>InventorySourceStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventorySourceStatus();

            if (data.hasOwnProperty('configStatus')) {
                obj['configStatus'] = ApiClient.convertToType(data['configStatus'], 'String');
            }
            if (data.hasOwnProperty('entityPauseReason')) {
                obj['entityPauseReason'] = ApiClient.convertToType(data['entityPauseReason'], 'String');
            }
            if (data.hasOwnProperty('entityStatus')) {
                obj['entityStatus'] = ApiClient.convertToType(data['entityStatus'], 'String');
            }
            if (data.hasOwnProperty('sellerPauseReason')) {
                obj['sellerPauseReason'] = ApiClient.convertToType(data['sellerPauseReason'], 'String');
            }
            if (data.hasOwnProperty('sellerStatus')) {
                obj['sellerStatus'] = ApiClient.convertToType(data['sellerStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InventorySourceStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InventorySourceStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['configStatus'] && !(typeof data['configStatus'] === 'string' || data['configStatus'] instanceof String)) {
            throw new Error("Expected the field `configStatus` to be a primitive type in the JSON string but got " + data['configStatus']);
        }
        // ensure the json data is a string
        if (data['entityPauseReason'] && !(typeof data['entityPauseReason'] === 'string' || data['entityPauseReason'] instanceof String)) {
            throw new Error("Expected the field `entityPauseReason` to be a primitive type in the JSON string but got " + data['entityPauseReason']);
        }
        // ensure the json data is a string
        if (data['entityStatus'] && !(typeof data['entityStatus'] === 'string' || data['entityStatus'] instanceof String)) {
            throw new Error("Expected the field `entityStatus` to be a primitive type in the JSON string but got " + data['entityStatus']);
        }
        // ensure the json data is a string
        if (data['sellerPauseReason'] && !(typeof data['sellerPauseReason'] === 'string' || data['sellerPauseReason'] instanceof String)) {
            throw new Error("Expected the field `sellerPauseReason` to be a primitive type in the JSON string but got " + data['sellerPauseReason']);
        }
        // ensure the json data is a string
        if (data['sellerStatus'] && !(typeof data['sellerStatus'] === 'string' || data['sellerStatus'] instanceof String)) {
            throw new Error("Expected the field `sellerStatus` to be a primitive type in the JSON string but got " + data['sellerStatus']);
        }

        return true;
    }


}



/**
 * Output only. The configuration status of the inventory source. Only applicable for guaranteed inventory sources. Acceptable values are `INVENTORY_SOURCE_CONFIG_STATUS_PENDING` and `INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED`. An inventory source must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve.
 * @member {module:model/InventorySourceStatus.ConfigStatusEnum} configStatus
 */
InventorySourceStatus.prototype['configStatus'] = undefined;

/**
 * The user-provided reason for pausing this inventory source. Must not exceed 100 characters. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.
 * @member {String} entityPauseReason
 */
InventorySourceStatus.prototype['entityPauseReason'] = undefined;

/**
 * Whether or not the inventory source is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
 * @member {module:model/InventorySourceStatus.EntityStatusEnum} entityStatus
 */
InventorySourceStatus.prototype['entityStatus'] = undefined;

/**
 * Output only. The seller-provided reason for pausing this inventory source. Only applicable for inventory sources synced directly from the publishers and when seller_status is set to `ENTITY_STATUS_PAUSED`.
 * @member {String} sellerPauseReason
 */
InventorySourceStatus.prototype['sellerPauseReason'] = undefined;

/**
 * Output only. The status set by the seller for the inventory source. Only applicable for inventory sources synced directly from the publishers. Acceptable values are `ENTITY_STATUS_ACTIVE` and `ENTITY_STATUS_PAUSED`.
 * @member {module:model/InventorySourceStatus.SellerStatusEnum} sellerStatus
 */
InventorySourceStatus.prototype['sellerStatus'] = undefined;





/**
 * Allowed values for the <code>configStatus</code> property.
 * @enum {String}
 * @readonly
 */
InventorySourceStatus['ConfigStatusEnum'] = {

    /**
     * value: "INVENTORY_SOURCE_CONFIG_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "INVENTORY_SOURCE_CONFIG_STATUS_UNSPECIFIED",

    /**
     * value: "INVENTORY_SOURCE_CONFIG_STATUS_PENDING"
     * @const
     */
    "PENDING": "INVENTORY_SOURCE_CONFIG_STATUS_PENDING",

    /**
     * value: "INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED"
     * @const
     */
    "COMPLETED": "INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED"
};


/**
 * Allowed values for the <code>entityStatus</code> property.
 * @enum {String}
 * @readonly
 */
InventorySourceStatus['EntityStatusEnum'] = {

    /**
     * value: "ENTITY_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ENTITY_STATUS_UNSPECIFIED",

    /**
     * value: "ENTITY_STATUS_ACTIVE"
     * @const
     */
    "ACTIVE": "ENTITY_STATUS_ACTIVE",

    /**
     * value: "ENTITY_STATUS_ARCHIVED"
     * @const
     */
    "ARCHIVED": "ENTITY_STATUS_ARCHIVED",

    /**
     * value: "ENTITY_STATUS_DRAFT"
     * @const
     */
    "DRAFT": "ENTITY_STATUS_DRAFT",

    /**
     * value: "ENTITY_STATUS_PAUSED"
     * @const
     */
    "PAUSED": "ENTITY_STATUS_PAUSED",

    /**
     * value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
     * @const
     */
    "SCHEDULED_FOR_DELETION": "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
};


/**
 * Allowed values for the <code>sellerStatus</code> property.
 * @enum {String}
 * @readonly
 */
InventorySourceStatus['SellerStatusEnum'] = {

    /**
     * value: "ENTITY_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ENTITY_STATUS_UNSPECIFIED",

    /**
     * value: "ENTITY_STATUS_ACTIVE"
     * @const
     */
    "ACTIVE": "ENTITY_STATUS_ACTIVE",

    /**
     * value: "ENTITY_STATUS_ARCHIVED"
     * @const
     */
    "ARCHIVED": "ENTITY_STATUS_ARCHIVED",

    /**
     * value: "ENTITY_STATUS_DRAFT"
     * @const
     */
    "DRAFT": "ENTITY_STATUS_DRAFT",

    /**
     * value: "ENTITY_STATUS_PAUSED"
     * @const
     */
    "PAUSED": "ENTITY_STATUS_PAUSED",

    /**
     * value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
     * @const
     */
    "SCHEDULED_FOR_DELETION": "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
};



export default InventorySourceStatus;

