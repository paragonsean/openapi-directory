/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PerformanceGoalBidStrategy model module.
 * @module model/PerformanceGoalBidStrategy
 * @version v1
 */
class PerformanceGoalBidStrategy {
    /**
     * Constructs a new <code>PerformanceGoalBidStrategy</code>.
     * A strategy that automatically adjusts the bid to meet or beat a specified performance goal.
     * @alias module:model/PerformanceGoalBidStrategy
     */
    constructor() { 
        
        PerformanceGoalBidStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PerformanceGoalBidStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PerformanceGoalBidStrategy} obj Optional instance to populate.
     * @return {module:model/PerformanceGoalBidStrategy} The populated <code>PerformanceGoalBidStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PerformanceGoalBidStrategy();

            if (data.hasOwnProperty('customBiddingAlgorithmId')) {
                obj['customBiddingAlgorithmId'] = ApiClient.convertToType(data['customBiddingAlgorithmId'], 'String');
            }
            if (data.hasOwnProperty('maxAverageCpmBidAmountMicros')) {
                obj['maxAverageCpmBidAmountMicros'] = ApiClient.convertToType(data['maxAverageCpmBidAmountMicros'], 'String');
            }
            if (data.hasOwnProperty('performanceGoalAmountMicros')) {
                obj['performanceGoalAmountMicros'] = ApiClient.convertToType(data['performanceGoalAmountMicros'], 'String');
            }
            if (data.hasOwnProperty('performanceGoalType')) {
                obj['performanceGoalType'] = ApiClient.convertToType(data['performanceGoalType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PerformanceGoalBidStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PerformanceGoalBidStrategy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customBiddingAlgorithmId'] && !(typeof data['customBiddingAlgorithmId'] === 'string' || data['customBiddingAlgorithmId'] instanceof String)) {
            throw new Error("Expected the field `customBiddingAlgorithmId` to be a primitive type in the JSON string but got " + data['customBiddingAlgorithmId']);
        }
        // ensure the json data is a string
        if (data['maxAverageCpmBidAmountMicros'] && !(typeof data['maxAverageCpmBidAmountMicros'] === 'string' || data['maxAverageCpmBidAmountMicros'] instanceof String)) {
            throw new Error("Expected the field `maxAverageCpmBidAmountMicros` to be a primitive type in the JSON string but got " + data['maxAverageCpmBidAmountMicros']);
        }
        // ensure the json data is a string
        if (data['performanceGoalAmountMicros'] && !(typeof data['performanceGoalAmountMicros'] === 'string' || data['performanceGoalAmountMicros'] instanceof String)) {
            throw new Error("Expected the field `performanceGoalAmountMicros` to be a primitive type in the JSON string but got " + data['performanceGoalAmountMicros']);
        }
        // ensure the json data is a string
        if (data['performanceGoalType'] && !(typeof data['performanceGoalType'] === 'string' || data['performanceGoalType'] instanceof String)) {
            throw new Error("Expected the field `performanceGoalType` to be a primitive type in the JSON string but got " + data['performanceGoalType']);
        }

        return true;
    }


}



/**
 * The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
 * @member {String} customBiddingAlgorithmId
 */
PerformanceGoalBidStrategy.prototype['customBiddingAlgorithmId'] = undefined;

/**
 * The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. Not applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`. For example, 1500000 represents 1.5 standard units of the currency.
 * @member {String} maxAverageCpmBidAmountMicros
 */
PerformanceGoalBidStrategy.prototype['maxAverageCpmBidAmountMicros'] = undefined;

/**
 * Required. The performance goal the bidding strategy will attempt to meet or beat, in micros of the advertiser's currency or in micro of the ROAS (Return On Advertising Spend) value which is also based on advertiser's currency. Must be greater than or equal to a billable unit of the given currency and smaller or equal to upper bounds. Each performance_goal_type has its upper bound: * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA`, upper bound is 10000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`, upper bound is 1000.00 and lower bound is 0.01. Example: If set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, the bid price will be based on the probability that each available impression will be viewable. For example, if viewable CPM target is $2 and an impression is 40% likely to be viewable, the bid price will be $0.80 CPM (40% of $2). For example, 1500000 represents 1.5 standard units of the currency or ROAS value.
 * @member {String} performanceGoalAmountMicros
 */
PerformanceGoalBidStrategy.prototype['performanceGoalAmountMicros'] = undefined;

/**
 * Required. The type of the performance goal that the bidding strategy will try to meet or beat. For line item level usage, the value must be one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
 * @member {module:model/PerformanceGoalBidStrategy.PerformanceGoalTypeEnum} performanceGoalType
 */
PerformanceGoalBidStrategy.prototype['performanceGoalType'] = undefined;





/**
 * Allowed values for the <code>performanceGoalType</code> property.
 * @enum {String}
 * @readonly
 */
PerformanceGoalBidStrategy['PerformanceGoalTypeEnum'] = {

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA"
     * @const
     */
    "CPA": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC"
     * @const
     */
    "CPC": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM"
     * @const
     */
    "VIEWABLE_CPM": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO"
     * @const
     */
    "CUSTOM_ALGO": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA"
     * @const
     */
    "CIVA": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN"
     * @const
     */
    "IVO_TEN": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN",

    /**
     * value: "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
     * @const
     */
    "AV_VIEWED": "BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED"
};



export default PerformanceGoalBidStrategy;

