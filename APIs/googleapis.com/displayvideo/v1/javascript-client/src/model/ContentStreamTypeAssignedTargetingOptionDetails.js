/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContentStreamTypeAssignedTargetingOptionDetails model module.
 * @module model/ContentStreamTypeAssignedTargetingOptionDetails
 * @version v1
 */
class ContentStreamTypeAssignedTargetingOptionDetails {
    /**
     * Constructs a new <code>ContentStreamTypeAssignedTargetingOptionDetails</code>.
     * Details for content stream type assigned targeting option. This will be populated in the content_stream_type_details field when targeting_type is &#x60;TARGETING_TYPE_CONTENT_STREAM_TYPE&#x60;. Explicitly targeting all options is not supported. Remove all content stream type targeting options to achieve this effect.
     * @alias module:model/ContentStreamTypeAssignedTargetingOptionDetails
     */
    constructor() { 
        
        ContentStreamTypeAssignedTargetingOptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentStreamTypeAssignedTargetingOptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentStreamTypeAssignedTargetingOptionDetails} obj Optional instance to populate.
     * @return {module:model/ContentStreamTypeAssignedTargetingOptionDetails} The populated <code>ContentStreamTypeAssignedTargetingOptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentStreamTypeAssignedTargetingOptionDetails();

            if (data.hasOwnProperty('contentStreamType')) {
                obj['contentStreamType'] = ApiClient.convertToType(data['contentStreamType'], 'String');
            }
            if (data.hasOwnProperty('targetingOptionId')) {
                obj['targetingOptionId'] = ApiClient.convertToType(data['targetingOptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentStreamTypeAssignedTargetingOptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentStreamTypeAssignedTargetingOptionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contentStreamType'] && !(typeof data['contentStreamType'] === 'string' || data['contentStreamType'] instanceof String)) {
            throw new Error("Expected the field `contentStreamType` to be a primitive type in the JSON string but got " + data['contentStreamType']);
        }
        // ensure the json data is a string
        if (data['targetingOptionId'] && !(typeof data['targetingOptionId'] === 'string' || data['targetingOptionId'] instanceof String)) {
            throw new Error("Expected the field `targetingOptionId` to be a primitive type in the JSON string but got " + data['targetingOptionId']);
        }

        return true;
    }


}



/**
 * Output only. The content stream type.
 * @member {module:model/ContentStreamTypeAssignedTargetingOptionDetails.ContentStreamTypeEnum} contentStreamType
 */
ContentStreamTypeAssignedTargetingOptionDetails.prototype['contentStreamType'] = undefined;

/**
 * Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_STREAM_TYPE`.
 * @member {String} targetingOptionId
 */
ContentStreamTypeAssignedTargetingOptionDetails.prototype['targetingOptionId'] = undefined;





/**
 * Allowed values for the <code>contentStreamType</code> property.
 * @enum {String}
 * @readonly
 */
ContentStreamTypeAssignedTargetingOptionDetails['ContentStreamTypeEnum'] = {

    /**
     * value: "CONTENT_STREAM_TYPE_UNSPECIFIED"
     * @const
     */
    "STREAM_TYPE_UNSPECIFIED": "CONTENT_STREAM_TYPE_UNSPECIFIED",

    /**
     * value: "CONTENT_LIVE_STREAM"
     * @const
     */
    "LIVE_STREAM": "CONTENT_LIVE_STREAM",

    /**
     * value: "CONTENT_ON_DEMAND"
     * @const
     */
    "ON_DEMAND": "CONTENT_ON_DEMAND"
};



export default ContentStreamTypeAssignedTargetingOptionDetails;

