/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InsertionOrderBudgetSegment from './InsertionOrderBudgetSegment';

/**
 * The InsertionOrderBudget model module.
 * @module model/InsertionOrderBudget
 * @version v1
 */
class InsertionOrderBudget {
    /**
     * Constructs a new <code>InsertionOrderBudget</code>.
     * Settings that control how insertion order budget is allocated.
     * @alias module:model/InsertionOrderBudget
     */
    constructor() { 
        
        InsertionOrderBudget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsertionOrderBudget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsertionOrderBudget} obj Optional instance to populate.
     * @return {module:model/InsertionOrderBudget} The populated <code>InsertionOrderBudget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertionOrderBudget();

            if (data.hasOwnProperty('automationType')) {
                obj['automationType'] = ApiClient.convertToType(data['automationType'], 'String');
            }
            if (data.hasOwnProperty('budgetSegments')) {
                obj['budgetSegments'] = ApiClient.convertToType(data['budgetSegments'], [InsertionOrderBudgetSegment]);
            }
            if (data.hasOwnProperty('budgetUnit')) {
                obj['budgetUnit'] = ApiClient.convertToType(data['budgetUnit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsertionOrderBudget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsertionOrderBudget</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['automationType'] && !(typeof data['automationType'] === 'string' || data['automationType'] instanceof String)) {
            throw new Error("Expected the field `automationType` to be a primitive type in the JSON string but got " + data['automationType']);
        }
        if (data['budgetSegments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['budgetSegments'])) {
                throw new Error("Expected the field `budgetSegments` to be an array in the JSON data but got " + data['budgetSegments']);
            }
            // validate the optional field `budgetSegments` (array)
            for (const item of data['budgetSegments']) {
                InsertionOrderBudgetSegment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['budgetUnit'] && !(typeof data['budgetUnit'] === 'string' || data['budgetUnit'] instanceof String)) {
            throw new Error("Expected the field `budgetUnit` to be a primitive type in the JSON string but got " + data['budgetUnit']);
        }

        return true;
    }


}



/**
 * The type of automation used to manage bid and budget for the insertion order. If this field is unspecified in creation, the value defaults to `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.
 * @member {module:model/InsertionOrderBudget.AutomationTypeEnum} automationType
 */
InsertionOrderBudget.prototype['automationType'] = undefined;

/**
 * Required. The list of budget segments. Use a budget segment to specify a specific budget for a given period of time an insertion order is running.
 * @member {Array.<module:model/InsertionOrderBudgetSegment>} budgetSegments
 */
InsertionOrderBudget.prototype['budgetSegments'] = undefined;

/**
 * Required. Immutable. The budget unit specifies whether the budget is currency based or impression based.
 * @member {module:model/InsertionOrderBudget.BudgetUnitEnum} budgetUnit
 */
InsertionOrderBudget.prototype['budgetUnit'] = undefined;





/**
 * Allowed values for the <code>automationType</code> property.
 * @enum {String}
 * @readonly
 */
InsertionOrderBudget['AutomationTypeEnum'] = {

    /**
     * value: "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED",

    /**
     * value: "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET"
     * @const
     */
    "BUDGET": "INSERTION_ORDER_AUTOMATION_TYPE_BUDGET",

    /**
     * value: "INSERTION_ORDER_AUTOMATION_TYPE_NONE"
     * @const
     */
    "NONE": "INSERTION_ORDER_AUTOMATION_TYPE_NONE",

    /**
     * value: "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET"
     * @const
     */
    "BID_BUDGET": "INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET"
};


/**
 * Allowed values for the <code>budgetUnit</code> property.
 * @enum {String}
 * @readonly
 */
InsertionOrderBudget['BudgetUnitEnum'] = {

    /**
     * value: "BUDGET_UNIT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "BUDGET_UNIT_UNSPECIFIED",

    /**
     * value: "BUDGET_UNIT_CURRENCY"
     * @const
     */
    "CURRENCY": "BUDGET_UNIT_CURRENCY",

    /**
     * value: "BUDGET_UNIT_IMPRESSIONS"
     * @const
     */
    "IMPRESSIONS": "BUDGET_UNIT_IMPRESSIONS"
};



export default InsertionOrderBudget;

