/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateRange from './DateRange';

/**
 * The LineItemFlight model module.
 * @module model/LineItemFlight
 * @version v1
 */
class LineItemFlight {
    /**
     * Constructs a new <code>LineItemFlight</code>.
     * Settings that control the active duration of a line item.
     * @alias module:model/LineItemFlight
     */
    constructor() { 
        
        LineItemFlight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineItemFlight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineItemFlight} obj Optional instance to populate.
     * @return {module:model/LineItemFlight} The populated <code>LineItemFlight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItemFlight();

            if (data.hasOwnProperty('dateRange')) {
                obj['dateRange'] = DateRange.constructFromObject(data['dateRange']);
            }
            if (data.hasOwnProperty('flightDateType')) {
                obj['flightDateType'] = ApiClient.convertToType(data['flightDateType'], 'String');
            }
            if (data.hasOwnProperty('triggerId')) {
                obj['triggerId'] = ApiClient.convertToType(data['triggerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineItemFlight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineItemFlight</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dateRange`
        if (data['dateRange']) { // data not null
          DateRange.validateJSON(data['dateRange']);
        }
        // ensure the json data is a string
        if (data['flightDateType'] && !(typeof data['flightDateType'] === 'string' || data['flightDateType'] instanceof String)) {
            throw new Error("Expected the field `flightDateType` to be a primitive type in the JSON string but got " + data['flightDateType']);
        }
        // ensure the json data is a string
        if (data['triggerId'] && !(typeof data['triggerId'] === 'string' || data['triggerId'] instanceof String)) {
            throw new Error("Expected the field `triggerId` to be a primitive type in the JSON string but got " + data['triggerId']);
        }

        return true;
    }


}



/**
 * @member {module:model/DateRange} dateRange
 */
LineItemFlight.prototype['dateRange'] = undefined;

/**
 * Required. The type of the line item's flight dates.
 * @member {module:model/LineItemFlight.FlightDateTypeEnum} flightDateType
 */
LineItemFlight.prototype['flightDateType'] = undefined;

/**
 * The ID of the manual trigger associated with the line item. * Required when flight_date_type is `LINE_ITEM_FLIGHT_DATE_TYPE_TRIGGER`. Must not be set otherwise. * When set, the line item's flight dates are inherited from its parent insertion order. * Active line items will spend when the selected trigger is activated within the parent insertion order's flight dates. **Warning:** Line Items using manual triggers no longer serve in Display & Video 360. This field will sunset on August 1, 2023. Read our [feature deprecation announcement](/display-video/api/deprecations#features.manual_triggers) for more information.
 * @member {String} triggerId
 */
LineItemFlight.prototype['triggerId'] = undefined;





/**
 * Allowed values for the <code>flightDateType</code> property.
 * @enum {String}
 * @readonly
 */
LineItemFlight['FlightDateTypeEnum'] = {

    /**
     * value: "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED",

    /**
     * value: "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED"
     * @const
     */
    "INHERITED": "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED",

    /**
     * value: "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM"
     * @const
     */
    "CUSTOM": "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM",

    /**
     * value: "LINE_ITEM_FLIGHT_DATE_TYPE_TRIGGER"
     * @const
     */
    "TRIGGER": "LINE_ITEM_FLIGHT_DATE_TYPE_TRIGGER"
};



export default LineItemFlight;

