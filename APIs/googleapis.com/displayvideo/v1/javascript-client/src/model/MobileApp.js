/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MobileApp model module.
 * @module model/MobileApp
 * @version v1
 */
class MobileApp {
    /**
     * Constructs a new <code>MobileApp</code>.
     * A mobile app promoted by a mobile app install line item.
     * @alias module:model/MobileApp
     */
    constructor() { 
        
        MobileApp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MobileApp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MobileApp} obj Optional instance to populate.
     * @return {module:model/MobileApp} The populated <code>MobileApp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MobileApp();

            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MobileApp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MobileApp</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['platform'] && !(typeof data['platform'] === 'string' || data['platform'] instanceof String)) {
            throw new Error("Expected the field `platform` to be a primitive type in the JSON string but got " + data['platform']);
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }

        return true;
    }


}



/**
 * Required. The ID of the app provided by the platform store. Android apps are identified by the bundle ID used by Android's Play store, such as `com.google.android.gm`. iOS apps are identified by a nine-digit app ID used by Apple's App store, such as `422689480`.
 * @member {String} appId
 */
MobileApp.prototype['appId'] = undefined;

/**
 * Output only. The app name.
 * @member {String} displayName
 */
MobileApp.prototype['displayName'] = undefined;

/**
 * Output only. The app platform.
 * @member {module:model/MobileApp.PlatformEnum} platform
 */
MobileApp.prototype['platform'] = undefined;

/**
 * Output only. The app publisher.
 * @member {String} publisher
 */
MobileApp.prototype['publisher'] = undefined;





/**
 * Allowed values for the <code>platform</code> property.
 * @enum {String}
 * @readonly
 */
MobileApp['PlatformEnum'] = {

    /**
     * value: "PLATFORM_UNSPECIFIED"
     * @const
     */
    "PLATFORM_UNSPECIFIED": "PLATFORM_UNSPECIFIED",

    /**
     * value: "IOS"
     * @const
     */
    "IOS": "IOS",

    /**
     * value: "ANDROID"
     * @const
     */
    "ANDROID": "ANDROID"
};



export default MobileApp;

