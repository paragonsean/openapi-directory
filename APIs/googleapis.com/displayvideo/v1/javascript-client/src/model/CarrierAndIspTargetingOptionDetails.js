/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CarrierAndIspTargetingOptionDetails model module.
 * @module model/CarrierAndIspTargetingOptionDetails
 * @version v1
 */
class CarrierAndIspTargetingOptionDetails {
    /**
     * Constructs a new <code>CarrierAndIspTargetingOptionDetails</code>.
     * Represents a targetable carrier or ISP. This will be populated in the carrier_and_isp_details field of a TargetingOption when targeting_type is &#x60;TARGETING_TYPE_CARRIER_AND_ISP&#x60;.
     * @alias module:model/CarrierAndIspTargetingOptionDetails
     */
    constructor() { 
        
        CarrierAndIspTargetingOptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CarrierAndIspTargetingOptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CarrierAndIspTargetingOptionDetails} obj Optional instance to populate.
     * @return {module:model/CarrierAndIspTargetingOptionDetails} The populated <code>CarrierAndIspTargetingOptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CarrierAndIspTargetingOptionDetails();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CarrierAndIspTargetingOptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CarrierAndIspTargetingOptionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Output only. The display name of the carrier or ISP.
 * @member {String} displayName
 */
CarrierAndIspTargetingOptionDetails.prototype['displayName'] = undefined;

/**
 * Output only. The type indicating if it's carrier or ISP.
 * @member {module:model/CarrierAndIspTargetingOptionDetails.TypeEnum} type
 */
CarrierAndIspTargetingOptionDetails.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CarrierAndIspTargetingOptionDetails['TypeEnum'] = {

    /**
     * value: "CARRIER_AND_ISP_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "CARRIER_AND_ISP_TYPE_UNSPECIFIED",

    /**
     * value: "CARRIER_AND_ISP_TYPE_ISP"
     * @const
     */
    "ISP": "CARRIER_AND_ISP_TYPE_ISP",

    /**
     * value: "CARRIER_AND_ISP_TYPE_CARRIER"
     * @const
     */
    "CARRIER": "CARRIER_AND_ISP_TYPE_CARRIER"
};



export default CarrierAndIspTargetingOptionDetails;

