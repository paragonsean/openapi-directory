/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CombinedAudienceGroup from './CombinedAudienceGroup';
import CustomListGroup from './CustomListGroup';
import FirstAndThirdPartyAudienceGroup from './FirstAndThirdPartyAudienceGroup';
import GoogleAudienceGroup from './GoogleAudienceGroup';

/**
 * The AudienceGroupAssignedTargetingOptionDetails model module.
 * @module model/AudienceGroupAssignedTargetingOptionDetails
 * @version v1
 */
class AudienceGroupAssignedTargetingOptionDetails {
    /**
     * Constructs a new <code>AudienceGroupAssignedTargetingOptionDetails</code>.
     * Assigned audience group targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is &#x60;TARGETING_TYPE_AUDIENCE_GROUP&#x60;. The relation between each group is UNION, except for excluded_first_and_third_party_audience_group and excluded_google_audience_group, of which COMPLEMENT is used as an INTERSECTION with other groups.
     * @alias module:model/AudienceGroupAssignedTargetingOptionDetails
     */
    constructor() { 
        
        AudienceGroupAssignedTargetingOptionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudienceGroupAssignedTargetingOptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudienceGroupAssignedTargetingOptionDetails} obj Optional instance to populate.
     * @return {module:model/AudienceGroupAssignedTargetingOptionDetails} The populated <code>AudienceGroupAssignedTargetingOptionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudienceGroupAssignedTargetingOptionDetails();

            if (data.hasOwnProperty('excludedFirstAndThirdPartyAudienceGroup')) {
                obj['excludedFirstAndThirdPartyAudienceGroup'] = FirstAndThirdPartyAudienceGroup.constructFromObject(data['excludedFirstAndThirdPartyAudienceGroup']);
            }
            if (data.hasOwnProperty('excludedGoogleAudienceGroup')) {
                obj['excludedGoogleAudienceGroup'] = GoogleAudienceGroup.constructFromObject(data['excludedGoogleAudienceGroup']);
            }
            if (data.hasOwnProperty('includedCombinedAudienceGroup')) {
                obj['includedCombinedAudienceGroup'] = CombinedAudienceGroup.constructFromObject(data['includedCombinedAudienceGroup']);
            }
            if (data.hasOwnProperty('includedCustomListGroup')) {
                obj['includedCustomListGroup'] = CustomListGroup.constructFromObject(data['includedCustomListGroup']);
            }
            if (data.hasOwnProperty('includedFirstAndThirdPartyAudienceGroups')) {
                obj['includedFirstAndThirdPartyAudienceGroups'] = ApiClient.convertToType(data['includedFirstAndThirdPartyAudienceGroups'], [FirstAndThirdPartyAudienceGroup]);
            }
            if (data.hasOwnProperty('includedGoogleAudienceGroup')) {
                obj['includedGoogleAudienceGroup'] = GoogleAudienceGroup.constructFromObject(data['includedGoogleAudienceGroup']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudienceGroupAssignedTargetingOptionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudienceGroupAssignedTargetingOptionDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `excludedFirstAndThirdPartyAudienceGroup`
        if (data['excludedFirstAndThirdPartyAudienceGroup']) { // data not null
          FirstAndThirdPartyAudienceGroup.validateJSON(data['excludedFirstAndThirdPartyAudienceGroup']);
        }
        // validate the optional field `excludedGoogleAudienceGroup`
        if (data['excludedGoogleAudienceGroup']) { // data not null
          GoogleAudienceGroup.validateJSON(data['excludedGoogleAudienceGroup']);
        }
        // validate the optional field `includedCombinedAudienceGroup`
        if (data['includedCombinedAudienceGroup']) { // data not null
          CombinedAudienceGroup.validateJSON(data['includedCombinedAudienceGroup']);
        }
        // validate the optional field `includedCustomListGroup`
        if (data['includedCustomListGroup']) { // data not null
          CustomListGroup.validateJSON(data['includedCustomListGroup']);
        }
        if (data['includedFirstAndThirdPartyAudienceGroups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['includedFirstAndThirdPartyAudienceGroups'])) {
                throw new Error("Expected the field `includedFirstAndThirdPartyAudienceGroups` to be an array in the JSON data but got " + data['includedFirstAndThirdPartyAudienceGroups']);
            }
            // validate the optional field `includedFirstAndThirdPartyAudienceGroups` (array)
            for (const item of data['includedFirstAndThirdPartyAudienceGroups']) {
                FirstAndThirdPartyAudienceGroup.validateJSON(item);
            };
        }
        // validate the optional field `includedGoogleAudienceGroup`
        if (data['includedGoogleAudienceGroup']) { // data not null
          GoogleAudienceGroup.validateJSON(data['includedGoogleAudienceGroup']);
        }

        return true;
    }


}



/**
 * @member {module:model/FirstAndThirdPartyAudienceGroup} excludedFirstAndThirdPartyAudienceGroup
 */
AudienceGroupAssignedTargetingOptionDetails.prototype['excludedFirstAndThirdPartyAudienceGroup'] = undefined;

/**
 * @member {module:model/GoogleAudienceGroup} excludedGoogleAudienceGroup
 */
AudienceGroupAssignedTargetingOptionDetails.prototype['excludedGoogleAudienceGroup'] = undefined;

/**
 * @member {module:model/CombinedAudienceGroup} includedCombinedAudienceGroup
 */
AudienceGroupAssignedTargetingOptionDetails.prototype['includedCombinedAudienceGroup'] = undefined;

/**
 * @member {module:model/CustomListGroup} includedCustomListGroup
 */
AudienceGroupAssignedTargetingOptionDetails.prototype['includedCustomListGroup'] = undefined;

/**
 * The first and third party audience ids and recencies of included first and third party audience groups. Each first and third party audience group contains first and third party audience ids only. The relation between each first and third party audience group is INTERSECTION, and the result is UNION'ed with other audience groups. Repeated groups with same settings will be ignored.
 * @member {Array.<module:model/FirstAndThirdPartyAudienceGroup>} includedFirstAndThirdPartyAudienceGroups
 */
AudienceGroupAssignedTargetingOptionDetails.prototype['includedFirstAndThirdPartyAudienceGroups'] = undefined;

/**
 * @member {module:model/GoogleAudienceGroup} includedGoogleAudienceGroup
 */
AudienceGroupAssignedTargetingOptionDetails.prototype['includedGoogleAudienceGroup'] = undefined;






export default AudienceGroupAssignedTargetingOptionDetails;

