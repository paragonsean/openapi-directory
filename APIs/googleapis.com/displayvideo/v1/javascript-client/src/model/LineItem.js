/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BiddingStrategy from './BiddingStrategy';
import ConversionCountingConfig from './ConversionCountingConfig';
import FrequencyCap from './FrequencyCap';
import IntegrationDetails from './IntegrationDetails';
import LineItemBudget from './LineItemBudget';
import LineItemFlight from './LineItemFlight';
import MobileApp from './MobileApp';
import Pacing from './Pacing';
import PartnerCost from './PartnerCost';
import PartnerRevenueModel from './PartnerRevenueModel';
import TargetingExpansionConfig from './TargetingExpansionConfig';

/**
 * The LineItem model module.
 * @module model/LineItem
 * @version v1
 */
class LineItem {
    /**
     * Constructs a new <code>LineItem</code>.
     * A single line item.
     * @alias module:model/LineItem
     */
    constructor() { 
        
        LineItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineItem} obj Optional instance to populate.
     * @return {module:model/LineItem} The populated <code>LineItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineItem();

            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('bidStrategy')) {
                obj['bidStrategy'] = BiddingStrategy.constructFromObject(data['bidStrategy']);
            }
            if (data.hasOwnProperty('budget')) {
                obj['budget'] = LineItemBudget.constructFromObject(data['budget']);
            }
            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'String');
            }
            if (data.hasOwnProperty('conversionCounting')) {
                obj['conversionCounting'] = ConversionCountingConfig.constructFromObject(data['conversionCounting']);
            }
            if (data.hasOwnProperty('creativeIds')) {
                obj['creativeIds'] = ApiClient.convertToType(data['creativeIds'], ['String']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('entityStatus')) {
                obj['entityStatus'] = ApiClient.convertToType(data['entityStatus'], 'String');
            }
            if (data.hasOwnProperty('excludeNewExchanges')) {
                obj['excludeNewExchanges'] = ApiClient.convertToType(data['excludeNewExchanges'], 'Boolean');
            }
            if (data.hasOwnProperty('flight')) {
                obj['flight'] = LineItemFlight.constructFromObject(data['flight']);
            }
            if (data.hasOwnProperty('frequencyCap')) {
                obj['frequencyCap'] = FrequencyCap.constructFromObject(data['frequencyCap']);
            }
            if (data.hasOwnProperty('insertionOrderId')) {
                obj['insertionOrderId'] = ApiClient.convertToType(data['insertionOrderId'], 'String');
            }
            if (data.hasOwnProperty('integrationDetails')) {
                obj['integrationDetails'] = IntegrationDetails.constructFromObject(data['integrationDetails']);
            }
            if (data.hasOwnProperty('inventorySourceIds')) {
                obj['inventorySourceIds'] = ApiClient.convertToType(data['inventorySourceIds'], ['String']);
            }
            if (data.hasOwnProperty('lineItemId')) {
                obj['lineItemId'] = ApiClient.convertToType(data['lineItemId'], 'String');
            }
            if (data.hasOwnProperty('lineItemType')) {
                obj['lineItemType'] = ApiClient.convertToType(data['lineItemType'], 'String');
            }
            if (data.hasOwnProperty('mobileApp')) {
                obj['mobileApp'] = MobileApp.constructFromObject(data['mobileApp']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pacing')) {
                obj['pacing'] = Pacing.constructFromObject(data['pacing']);
            }
            if (data.hasOwnProperty('partnerCosts')) {
                obj['partnerCosts'] = ApiClient.convertToType(data['partnerCosts'], [PartnerCost]);
            }
            if (data.hasOwnProperty('partnerRevenueModel')) {
                obj['partnerRevenueModel'] = PartnerRevenueModel.constructFromObject(data['partnerRevenueModel']);
            }
            if (data.hasOwnProperty('reservationType')) {
                obj['reservationType'] = ApiClient.convertToType(data['reservationType'], 'String');
            }
            if (data.hasOwnProperty('targetingExpansion')) {
                obj['targetingExpansion'] = TargetingExpansionConfig.constructFromObject(data['targetingExpansion']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('warningMessages')) {
                obj['warningMessages'] = ApiClient.convertToType(data['warningMessages'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // validate the optional field `bidStrategy`
        if (data['bidStrategy']) { // data not null
          BiddingStrategy.validateJSON(data['bidStrategy']);
        }
        // validate the optional field `budget`
        if (data['budget']) { // data not null
          LineItemBudget.validateJSON(data['budget']);
        }
        // ensure the json data is a string
        if (data['campaignId'] && !(typeof data['campaignId'] === 'string' || data['campaignId'] instanceof String)) {
            throw new Error("Expected the field `campaignId` to be a primitive type in the JSON string but got " + data['campaignId']);
        }
        // validate the optional field `conversionCounting`
        if (data['conversionCounting']) { // data not null
          ConversionCountingConfig.validateJSON(data['conversionCounting']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['creativeIds'])) {
            throw new Error("Expected the field `creativeIds` to be an array in the JSON data but got " + data['creativeIds']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['entityStatus'] && !(typeof data['entityStatus'] === 'string' || data['entityStatus'] instanceof String)) {
            throw new Error("Expected the field `entityStatus` to be a primitive type in the JSON string but got " + data['entityStatus']);
        }
        // validate the optional field `flight`
        if (data['flight']) { // data not null
          LineItemFlight.validateJSON(data['flight']);
        }
        // validate the optional field `frequencyCap`
        if (data['frequencyCap']) { // data not null
          FrequencyCap.validateJSON(data['frequencyCap']);
        }
        // ensure the json data is a string
        if (data['insertionOrderId'] && !(typeof data['insertionOrderId'] === 'string' || data['insertionOrderId'] instanceof String)) {
            throw new Error("Expected the field `insertionOrderId` to be a primitive type in the JSON string but got " + data['insertionOrderId']);
        }
        // validate the optional field `integrationDetails`
        if (data['integrationDetails']) { // data not null
          IntegrationDetails.validateJSON(data['integrationDetails']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['inventorySourceIds'])) {
            throw new Error("Expected the field `inventorySourceIds` to be an array in the JSON data but got " + data['inventorySourceIds']);
        }
        // ensure the json data is a string
        if (data['lineItemId'] && !(typeof data['lineItemId'] === 'string' || data['lineItemId'] instanceof String)) {
            throw new Error("Expected the field `lineItemId` to be a primitive type in the JSON string but got " + data['lineItemId']);
        }
        // ensure the json data is a string
        if (data['lineItemType'] && !(typeof data['lineItemType'] === 'string' || data['lineItemType'] instanceof String)) {
            throw new Error("Expected the field `lineItemType` to be a primitive type in the JSON string but got " + data['lineItemType']);
        }
        // validate the optional field `mobileApp`
        if (data['mobileApp']) { // data not null
          MobileApp.validateJSON(data['mobileApp']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `pacing`
        if (data['pacing']) { // data not null
          Pacing.validateJSON(data['pacing']);
        }
        if (data['partnerCosts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['partnerCosts'])) {
                throw new Error("Expected the field `partnerCosts` to be an array in the JSON data but got " + data['partnerCosts']);
            }
            // validate the optional field `partnerCosts` (array)
            for (const item of data['partnerCosts']) {
                PartnerCost.validateJSON(item);
            };
        }
        // validate the optional field `partnerRevenueModel`
        if (data['partnerRevenueModel']) { // data not null
          PartnerRevenueModel.validateJSON(data['partnerRevenueModel']);
        }
        // ensure the json data is a string
        if (data['reservationType'] && !(typeof data['reservationType'] === 'string' || data['reservationType'] instanceof String)) {
            throw new Error("Expected the field `reservationType` to be a primitive type in the JSON string but got " + data['reservationType']);
        }
        // validate the optional field `targetingExpansion`
        if (data['targetingExpansion']) { // data not null
          TargetingExpansionConfig.validateJSON(data['targetingExpansion']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['warningMessages'])) {
            throw new Error("Expected the field `warningMessages` to be an array in the JSON data but got " + data['warningMessages']);
        }

        return true;
    }


}



/**
 * Output only. The unique ID of the advertiser the line item belongs to.
 * @member {String} advertiserId
 */
LineItem.prototype['advertiserId'] = undefined;

/**
 * @member {module:model/BiddingStrategy} bidStrategy
 */
LineItem.prototype['bidStrategy'] = undefined;

/**
 * @member {module:model/LineItemBudget} budget
 */
LineItem.prototype['budget'] = undefined;

/**
 * Output only. The unique ID of the campaign that the line item belongs to.
 * @member {String} campaignId
 */
LineItem.prototype['campaignId'] = undefined;

/**
 * @member {module:model/ConversionCountingConfig} conversionCounting
 */
LineItem.prototype['conversionCounting'] = undefined;

/**
 * The IDs of the creatives associated with the line item.
 * @member {Array.<String>} creativeIds
 */
LineItem.prototype['creativeIds'] = undefined;

/**
 * Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.
 * @member {String} displayName
 */
LineItem.prototype['displayName'] = undefined;

/**
 * Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`.
 * @member {module:model/LineItem.EntityStatusEnum} entityStatus
 */
LineItem.prototype['entityStatus'] = undefined;

/**
 * Whether to exclude new exchanges from automatically being targeted by the line item. This field is false by default.
 * @member {Boolean} excludeNewExchanges
 */
LineItem.prototype['excludeNewExchanges'] = undefined;

/**
 * @member {module:model/LineItemFlight} flight
 */
LineItem.prototype['flight'] = undefined;

/**
 * @member {module:model/FrequencyCap} frequencyCap
 */
LineItem.prototype['frequencyCap'] = undefined;

/**
 * Required. Immutable. The unique ID of the insertion order that the line item belongs to.
 * @member {String} insertionOrderId
 */
LineItem.prototype['insertionOrderId'] = undefined;

/**
 * @member {module:model/IntegrationDetails} integrationDetails
 */
LineItem.prototype['integrationDetails'] = undefined;

/**
 * The IDs of the private inventory sources assigned to the line item.
 * @member {Array.<String>} inventorySourceIds
 */
LineItem.prototype['inventorySourceIds'] = undefined;

/**
 * Output only. The unique ID of the line item. Assigned by the system.
 * @member {String} lineItemId
 */
LineItem.prototype['lineItemId'] = undefined;

/**
 * Required. Immutable. The type of the line item.
 * @member {module:model/LineItem.LineItemTypeEnum} lineItemType
 */
LineItem.prototype['lineItemType'] = undefined;

/**
 * @member {module:model/MobileApp} mobileApp
 */
LineItem.prototype['mobileApp'] = undefined;

/**
 * Output only. The resource name of the line item.
 * @member {String} name
 */
LineItem.prototype['name'] = undefined;

/**
 * @member {module:model/Pacing} pacing
 */
LineItem.prototype['pacing'] = undefined;

/**
 * The partner costs associated with the line item. If absent or empty in CreateLineItem method, the newly created line item will inherit partner costs from its parent insertion order.
 * @member {Array.<module:model/PartnerCost>} partnerCosts
 */
LineItem.prototype['partnerCosts'] = undefined;

/**
 * @member {module:model/PartnerRevenueModel} partnerRevenueModel
 */
LineItem.prototype['partnerRevenueModel'] = undefined;

/**
 * Output only. The reservation type of the line item.
 * @member {module:model/LineItem.ReservationTypeEnum} reservationType
 */
LineItem.prototype['reservationType'] = undefined;

/**
 * @member {module:model/TargetingExpansionConfig} targetingExpansion
 */
LineItem.prototype['targetingExpansion'] = undefined;

/**
 * Output only. The timestamp when the line item was last updated. Assigned by the system.
 * @member {String} updateTime
 */
LineItem.prototype['updateTime'] = undefined;

/**
 * Output only. The warning messages generated by the line item. These warnings do not block saving the line item, but some may block the line item from running.
 * @member {Array.<module:model/LineItem.WarningMessagesEnum>} warningMessages
 */
LineItem.prototype['warningMessages'] = undefined;





/**
 * Allowed values for the <code>entityStatus</code> property.
 * @enum {String}
 * @readonly
 */
LineItem['EntityStatusEnum'] = {

    /**
     * value: "ENTITY_STATUS_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ENTITY_STATUS_UNSPECIFIED",

    /**
     * value: "ENTITY_STATUS_ACTIVE"
     * @const
     */
    "ACTIVE": "ENTITY_STATUS_ACTIVE",

    /**
     * value: "ENTITY_STATUS_ARCHIVED"
     * @const
     */
    "ARCHIVED": "ENTITY_STATUS_ARCHIVED",

    /**
     * value: "ENTITY_STATUS_DRAFT"
     * @const
     */
    "DRAFT": "ENTITY_STATUS_DRAFT",

    /**
     * value: "ENTITY_STATUS_PAUSED"
     * @const
     */
    "PAUSED": "ENTITY_STATUS_PAUSED",

    /**
     * value: "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
     * @const
     */
    "SCHEDULED_FOR_DELETION": "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
};


/**
 * Allowed values for the <code>lineItemType</code> property.
 * @enum {String}
 * @readonly
 */
LineItem['LineItemTypeEnum'] = {

    /**
     * value: "LINE_ITEM_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "LINE_ITEM_TYPE_UNSPECIFIED",

    /**
     * value: "LINE_ITEM_TYPE_DISPLAY_DEFAULT"
     * @const
     */
    "DISPLAY_DEFAULT": "LINE_ITEM_TYPE_DISPLAY_DEFAULT",

    /**
     * value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL"
     * @const
     */
    "DISPLAY_MOBILE_APP_INSTALL": "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL",

    /**
     * value: "LINE_ITEM_TYPE_VIDEO_DEFAULT"
     * @const
     */
    "VIDEO_DEFAULT": "LINE_ITEM_TYPE_VIDEO_DEFAULT",

    /**
     * value: "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL"
     * @const
     */
    "VIDEO_MOBILE_APP_INSTALL": "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL",

    /**
     * value: "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY"
     * @const
     */
    "DISPLAY_MOBILE_APP_INVENTORY": "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY",

    /**
     * value: "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY"
     * @const
     */
    "VIDEO_MOBILE_APP_INVENTORY": "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY",

    /**
     * value: "LINE_ITEM_TYPE_AUDIO_DEFAULT"
     * @const
     */
    "AUDIO_DEFAULT": "LINE_ITEM_TYPE_AUDIO_DEFAULT",

    /**
     * value: "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP"
     * @const
     */
    "VIDEO_OVER_THE_TOP": "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP",

    /**
     * value: "LINE_ITEM_TYPE_DISPLAY_OUT_OF_HOME"
     * @const
     */
    "DISPLAY_OUT_OF_HOME": "LINE_ITEM_TYPE_DISPLAY_OUT_OF_HOME",

    /**
     * value: "LINE_ITEM_TYPE_VIDEO_OUT_OF_HOME"
     * @const
     */
    "VIDEO_OUT_OF_HOME": "LINE_ITEM_TYPE_VIDEO_OUT_OF_HOME"
};


/**
 * Allowed values for the <code>reservationType</code> property.
 * @enum {String}
 * @readonly
 */
LineItem['ReservationTypeEnum'] = {

    /**
     * value: "RESERVATION_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "RESERVATION_TYPE_UNSPECIFIED",

    /**
     * value: "RESERVATION_TYPE_NOT_GUARANTEED"
     * @const
     */
    "NOT_GUARANTEED": "RESERVATION_TYPE_NOT_GUARANTEED",

    /**
     * value: "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED"
     * @const
     */
    "PROGRAMMATIC_GUARANTEED": "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED",

    /**
     * value: "RESERVATION_TYPE_TAG_GUARANTEED"
     * @const
     */
    "TAG_GUARANTEED": "RESERVATION_TYPE_TAG_GUARANTEED"
};


/**
 * Allowed values for the <code>warningMessages</code> property.
 * @enum {String}
 * @readonly
 */
LineItem['WarningMessagesEnum'] = {

    /**
     * value: "LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED"
     * @const
     */
    "LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED": "LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED",

    /**
     * value: "INVALID_FLIGHT_DATES"
     * @const
     */
    "INVALID_FLIGHT_DATES": "INVALID_FLIGHT_DATES",

    /**
     * value: "EXPIRED"
     * @const
     */
    "EXPIRED": "EXPIRED",

    /**
     * value: "PENDING_FLIGHT"
     * @const
     */
    "PENDING_FLIGHT": "PENDING_FLIGHT",

    /**
     * value: "ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED"
     * @const
     */
    "ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED": "ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED",

    /**
     * value: "INVALID_INVENTORY_SOURCE"
     * @const
     */
    "INVALID_INVENTORY_SOURCE": "INVALID_INVENTORY_SOURCE",

    /**
     * value: "APP_INVENTORY_INVALID_SITE_TARGETING"
     * @const
     */
    "APP_INVENTORY_INVALID_SITE_TARGETING": "APP_INVENTORY_INVALID_SITE_TARGETING",

    /**
     * value: "APP_INVENTORY_INVALID_AUDIENCE_LISTS"
     * @const
     */
    "APP_INVENTORY_INVALID_AUDIENCE_LISTS": "APP_INVENTORY_INVALID_AUDIENCE_LISTS",

    /**
     * value: "NO_VALID_CREATIVE"
     * @const
     */
    "NO_VALID_CREATIVE": "NO_VALID_CREATIVE",

    /**
     * value: "PARENT_INSERTION_ORDER_PAUSED"
     * @const
     */
    "PARENT_INSERTION_ORDER_PAUSED": "PARENT_INSERTION_ORDER_PAUSED",

    /**
     * value: "PARENT_INSERTION_ORDER_EXPIRED"
     * @const
     */
    "PARENT_INSERTION_ORDER_EXPIRED": "PARENT_INSERTION_ORDER_EXPIRED",

    /**
     * value: "NO_POSITIVE_AUDIENCE_LIST_TARGETED"
     * @const
     */
    "NO_POSITIVE_AUDIENCE_LIST_TARGETED": "NO_POSITIVE_AUDIENCE_LIST_TARGETED",

    /**
     * value: "APP_INSTALL_NO_CONVERSION_PIXEL"
     * @const
     */
    "APP_INSTALL_NO_CONVERSION_PIXEL": "APP_INSTALL_NO_CONVERSION_PIXEL",

    /**
     * value: "TARGETING_REVOKED_OR_CLOSED_USER_LIST"
     * @const
     */
    "TARGETING_REVOKED_OR_CLOSED_USER_LIST": "TARGETING_REVOKED_OR_CLOSED_USER_LIST",

    /**
     * value: "APP_INSTALL_NO_OPTIMAL_BIDDING_STRATEGY"
     * @const
     */
    "APP_INSTALL_NO_OPTIMAL_BIDDING_STRATEGY": "APP_INSTALL_NO_OPTIMAL_BIDDING_STRATEGY",

    /**
     * value: "CREATIVE_SIZE_NOT_IN_USE_FOR_TARGETED_DEALS"
     * @const
     */
    "CREATIVE_SIZE_NOT_IN_USE_FOR_TARGETED_DEALS": "CREATIVE_SIZE_NOT_IN_USE_FOR_TARGETED_DEALS",

    /**
     * value: "NO_CREATIVE_FOR_TARGETED_DEALS"
     * @const
     */
    "NO_CREATIVE_FOR_TARGETED_DEALS": "NO_CREATIVE_FOR_TARGETED_DEALS",

    /**
     * value: "TARGETING_DEPRECATED_GEO_TARGET"
     * @const
     */
    "TARGETING_DEPRECATED_GEO_TARGET": "TARGETING_DEPRECATED_GEO_TARGET",

    /**
     * value: "DEPRECATED_FIRST_PARTY_AUDIENCE_EXCLUSION"
     * @const
     */
    "DEPRECATED_FIRST_PARTY_AUDIENCE_EXCLUSION": "DEPRECATED_FIRST_PARTY_AUDIENCE_EXCLUSION"
};



export default LineItem;

