/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DoubleVerifyFraudInvalidTraffic model module.
 * @module model/DoubleVerifyFraudInvalidTraffic
 * @version v1
 */
class DoubleVerifyFraudInvalidTraffic {
    /**
     * Constructs a new <code>DoubleVerifyFraudInvalidTraffic</code>.
     * DoubleVerify Fraud &amp; Invalid Traffic settings.
     * @alias module:model/DoubleVerifyFraudInvalidTraffic
     */
    constructor() { 
        
        DoubleVerifyFraudInvalidTraffic.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DoubleVerifyFraudInvalidTraffic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DoubleVerifyFraudInvalidTraffic} obj Optional instance to populate.
     * @return {module:model/DoubleVerifyFraudInvalidTraffic} The populated <code>DoubleVerifyFraudInvalidTraffic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DoubleVerifyFraudInvalidTraffic();

            if (data.hasOwnProperty('avoidInsufficientOption')) {
                obj['avoidInsufficientOption'] = ApiClient.convertToType(data['avoidInsufficientOption'], 'Boolean');
            }
            if (data.hasOwnProperty('avoidedFraudOption')) {
                obj['avoidedFraudOption'] = ApiClient.convertToType(data['avoidedFraudOption'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DoubleVerifyFraudInvalidTraffic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DoubleVerifyFraudInvalidTraffic</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['avoidedFraudOption'] && !(typeof data['avoidedFraudOption'] === 'string' || data['avoidedFraudOption'] instanceof String)) {
            throw new Error("Expected the field `avoidedFraudOption` to be a primitive type in the JSON string but got " + data['avoidedFraudOption']);
        }

        return true;
    }


}



/**
 * Insufficient Historical Fraud & IVT Stats.
 * @member {Boolean} avoidInsufficientOption
 */
DoubleVerifyFraudInvalidTraffic.prototype['avoidInsufficientOption'] = undefined;

/**
 * Avoid Sites and Apps with historical Fraud & IVT.
 * @member {module:model/DoubleVerifyFraudInvalidTraffic.AvoidedFraudOptionEnum} avoidedFraudOption
 */
DoubleVerifyFraudInvalidTraffic.prototype['avoidedFraudOption'] = undefined;





/**
 * Allowed values for the <code>avoidedFraudOption</code> property.
 * @enum {String}
 * @readonly
 */
DoubleVerifyFraudInvalidTraffic['AvoidedFraudOptionEnum'] = {

    /**
     * value: "FRAUD_UNSPECIFIED"
     * @const
     */
    "FRAUD_UNSPECIFIED": "FRAUD_UNSPECIFIED",

    /**
     * value: "AD_IMPRESSION_FRAUD_100"
     * @const
     */
    "AD_IMPRESSION_FRAUD_100": "AD_IMPRESSION_FRAUD_100",

    /**
     * value: "AD_IMPRESSION_FRAUD_50"
     * @const
     */
    "AD_IMPRESSION_FRAUD_50": "AD_IMPRESSION_FRAUD_50",

    /**
     * value: "AD_IMPRESSION_FRAUD_25"
     * @const
     */
    "AD_IMPRESSION_FRAUD_25": "AD_IMPRESSION_FRAUD_25",

    /**
     * value: "AD_IMPRESSION_FRAUD_10"
     * @const
     */
    "AD_IMPRESSION_FRAUD_10": "AD_IMPRESSION_FRAUD_10",

    /**
     * value: "AD_IMPRESSION_FRAUD_8"
     * @const
     */
    "AD_IMPRESSION_FRAUD_8": "AD_IMPRESSION_FRAUD_8",

    /**
     * value: "AD_IMPRESSION_FRAUD_6"
     * @const
     */
    "AD_IMPRESSION_FRAUD_6": "AD_IMPRESSION_FRAUD_6",

    /**
     * value: "AD_IMPRESSION_FRAUD_4"
     * @const
     */
    "AD_IMPRESSION_FRAUD_4": "AD_IMPRESSION_FRAUD_4",

    /**
     * value: "AD_IMPRESSION_FRAUD_2"
     * @const
     */
    "AD_IMPRESSION_FRAUD_2": "AD_IMPRESSION_FRAUD_2"
};



export default DoubleVerifyFraudInvalidTraffic;

