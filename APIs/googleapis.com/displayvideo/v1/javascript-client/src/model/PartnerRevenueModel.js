/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PartnerRevenueModel model module.
 * @module model/PartnerRevenueModel
 * @version v1
 */
class PartnerRevenueModel {
    /**
     * Constructs a new <code>PartnerRevenueModel</code>.
     * Settings that control how partner revenue is calculated.
     * @alias module:model/PartnerRevenueModel
     */
    constructor() { 
        
        PartnerRevenueModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PartnerRevenueModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PartnerRevenueModel} obj Optional instance to populate.
     * @return {module:model/PartnerRevenueModel} The populated <code>PartnerRevenueModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PartnerRevenueModel();

            if (data.hasOwnProperty('markupAmount')) {
                obj['markupAmount'] = ApiClient.convertToType(data['markupAmount'], 'String');
            }
            if (data.hasOwnProperty('markupType')) {
                obj['markupType'] = ApiClient.convertToType(data['markupType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PartnerRevenueModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartnerRevenueModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['markupAmount'] && !(typeof data['markupAmount'] === 'string' || data['markupAmount'] instanceof String)) {
            throw new Error("Expected the field `markupAmount` to be a primitive type in the JSON string but got " + data['markupAmount']);
        }
        // ensure the json data is a string
        if (data['markupType'] && !(typeof data['markupType'] === 'string' || data['markupType'] instanceof String)) {
            throw new Error("Expected the field `markupType` to be a primitive type in the JSON string but got " + data['markupType']);
        }

        return true;
    }


}



/**
 * Required. The markup amount of the partner revenue model. Must be greater than or equal to 0. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`, this field represents the CPM markup in micros of advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP`, this field represents the media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001). * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP`, this field represents the total media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001).
 * @member {String} markupAmount
 */
PartnerRevenueModel.prototype['markupAmount'] = undefined;

/**
 * Required. The markup type of the partner revenue model.
 * @member {module:model/PartnerRevenueModel.MarkupTypeEnum} markupType
 */
PartnerRevenueModel.prototype['markupType'] = undefined;





/**
 * Allowed values for the <code>markupType</code> property.
 * @enum {String}
 * @readonly
 */
PartnerRevenueModel['MarkupTypeEnum'] = {

    /**
     * value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED",

    /**
     * value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM"
     * @const
     */
    "CPM": "PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM",

    /**
     * value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP"
     * @const
     */
    "MEDIA_COST_MARKUP": "PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP",

    /**
     * value: "PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP"
     * @const
     */
    "TOTAL_MEDIA_COST_MARKUP": "PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP"
};



export default PartnerRevenueModel;

