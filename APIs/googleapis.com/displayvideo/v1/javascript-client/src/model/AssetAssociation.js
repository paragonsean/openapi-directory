/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Asset from './Asset';

/**
 * The AssetAssociation model module.
 * @module model/AssetAssociation
 * @version v1
 */
class AssetAssociation {
    /**
     * Constructs a new <code>AssetAssociation</code>.
     * Asset association for the creative.
     * @alias module:model/AssetAssociation
     */
    constructor() { 
        
        AssetAssociation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssetAssociation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetAssociation} obj Optional instance to populate.
     * @return {module:model/AssetAssociation} The populated <code>AssetAssociation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetAssociation();

            if (data.hasOwnProperty('asset')) {
                obj['asset'] = Asset.constructFromObject(data['asset']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetAssociation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetAssociation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `asset`
        if (data['asset']) { // data not null
          Asset.validateJSON(data['asset']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}



/**
 * @member {module:model/Asset} asset
 */
AssetAssociation.prototype['asset'] = undefined;

/**
 * The role of this asset for the creative.
 * @member {module:model/AssetAssociation.RoleEnum} role
 */
AssetAssociation.prototype['role'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
AssetAssociation['RoleEnum'] = {

    /**
     * value: "ASSET_ROLE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ASSET_ROLE_UNSPECIFIED",

    /**
     * value: "ASSET_ROLE_MAIN"
     * @const
     */
    "MAIN": "ASSET_ROLE_MAIN",

    /**
     * value: "ASSET_ROLE_BACKUP"
     * @const
     */
    "BACKUP": "ASSET_ROLE_BACKUP",

    /**
     * value: "ASSET_ROLE_POLITE_LOAD"
     * @const
     */
    "POLITE_LOAD": "ASSET_ROLE_POLITE_LOAD",

    /**
     * value: "ASSET_ROLE_HEADLINE"
     * @const
     */
    "HEADLINE": "ASSET_ROLE_HEADLINE",

    /**
     * value: "ASSET_ROLE_LONG_HEADLINE"
     * @const
     */
    "LONG_HEADLINE": "ASSET_ROLE_LONG_HEADLINE",

    /**
     * value: "ASSET_ROLE_BODY"
     * @const
     */
    "BODY": "ASSET_ROLE_BODY",

    /**
     * value: "ASSET_ROLE_LONG_BODY"
     * @const
     */
    "LONG_BODY": "ASSET_ROLE_LONG_BODY",

    /**
     * value: "ASSET_ROLE_CAPTION_URL"
     * @const
     */
    "CAPTION_URL": "ASSET_ROLE_CAPTION_URL",

    /**
     * value: "ASSET_ROLE_CALL_TO_ACTION"
     * @const
     */
    "CALL_TO_ACTION": "ASSET_ROLE_CALL_TO_ACTION",

    /**
     * value: "ASSET_ROLE_ADVERTISER_NAME"
     * @const
     */
    "ADVERTISER_NAME": "ASSET_ROLE_ADVERTISER_NAME",

    /**
     * value: "ASSET_ROLE_PRICE"
     * @const
     */
    "PRICE": "ASSET_ROLE_PRICE",

    /**
     * value: "ASSET_ROLE_ANDROID_APP_ID"
     * @const
     */
    "ANDROID_APP_ID": "ASSET_ROLE_ANDROID_APP_ID",

    /**
     * value: "ASSET_ROLE_IOS_APP_ID"
     * @const
     */
    "IOS_APP_ID": "ASSET_ROLE_IOS_APP_ID",

    /**
     * value: "ASSET_ROLE_RATING"
     * @const
     */
    "RATING": "ASSET_ROLE_RATING",

    /**
     * value: "ASSET_ROLE_ICON"
     * @const
     */
    "ICON": "ASSET_ROLE_ICON",

    /**
     * value: "ASSET_ROLE_COVER_IMAGE"
     * @const
     */
    "COVER_IMAGE": "ASSET_ROLE_COVER_IMAGE"
};



export default AssetAssociation;

