/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdFilter model module.
 * @module model/IdFilter
 * @version v1
 */
class IdFilter {
    /**
     * Constructs a new <code>IdFilter</code>.
     * A filtering option that filters entities by their entity IDs.
     * @alias module:model/IdFilter
     */
    constructor() { 
        
        IdFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IdFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdFilter} obj Optional instance to populate.
     * @return {module:model/IdFilter} The populated <code>IdFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdFilter();

            if (data.hasOwnProperty('adGroupAdIds')) {
                obj['adGroupAdIds'] = ApiClient.convertToType(data['adGroupAdIds'], ['String']);
            }
            if (data.hasOwnProperty('adGroupIds')) {
                obj['adGroupIds'] = ApiClient.convertToType(data['adGroupIds'], ['String']);
            }
            if (data.hasOwnProperty('campaignIds')) {
                obj['campaignIds'] = ApiClient.convertToType(data['campaignIds'], ['String']);
            }
            if (data.hasOwnProperty('insertionOrderIds')) {
                obj['insertionOrderIds'] = ApiClient.convertToType(data['insertionOrderIds'], ['String']);
            }
            if (data.hasOwnProperty('lineItemIds')) {
                obj['lineItemIds'] = ApiClient.convertToType(data['lineItemIds'], ['String']);
            }
            if (data.hasOwnProperty('mediaProductIds')) {
                obj['mediaProductIds'] = ApiClient.convertToType(data['mediaProductIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['adGroupAdIds'])) {
            throw new Error("Expected the field `adGroupAdIds` to be an array in the JSON data but got " + data['adGroupAdIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['adGroupIds'])) {
            throw new Error("Expected the field `adGroupIds` to be an array in the JSON data but got " + data['adGroupIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['campaignIds'])) {
            throw new Error("Expected the field `campaignIds` to be an array in the JSON data but got " + data['campaignIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['insertionOrderIds'])) {
            throw new Error("Expected the field `insertionOrderIds` to be an array in the JSON data but got " + data['insertionOrderIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['lineItemIds'])) {
            throw new Error("Expected the field `lineItemIds` to be an array in the JSON data but got " + data['lineItemIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['mediaProductIds'])) {
            throw new Error("Expected the field `mediaProductIds` to be an array in the JSON data but got " + data['mediaProductIds']);
        }

        return true;
    }


}



/**
 * YouTube Ads to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 * @member {Array.<String>} adGroupAdIds
 */
IdFilter.prototype['adGroupAdIds'] = undefined;

/**
 * YouTube Ad Groups to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 * @member {Array.<String>} adGroupIds
 */
IdFilter.prototype['adGroupIds'] = undefined;

/**
 * Campaigns to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 * @member {Array.<String>} campaignIds
 */
IdFilter.prototype['campaignIds'] = undefined;

/**
 * Insertion Orders to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 * @member {Array.<String>} insertionOrderIds
 */
IdFilter.prototype['insertionOrderIds'] = undefined;

/**
 * Line Items to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 * @member {Array.<String>} lineItemIds
 */
IdFilter.prototype['lineItemIds'] = undefined;

/**
 * Media Products to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
 * @member {Array.<String>} mediaProductIds
 */
IdFilter.prototype['mediaProductIds'] = undefined;






export default IdFilter;

