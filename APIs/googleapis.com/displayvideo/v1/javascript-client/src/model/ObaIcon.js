/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Dimensions from './Dimensions';

/**
 * The ObaIcon model module.
 * @module model/ObaIcon
 * @version v1
 */
class ObaIcon {
    /**
     * Constructs a new <code>ObaIcon</code>.
     * OBA Icon for a Creative
     * @alias module:model/ObaIcon
     */
    constructor() { 
        
        ObaIcon.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ObaIcon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObaIcon} obj Optional instance to populate.
     * @return {module:model/ObaIcon} The populated <code>ObaIcon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObaIcon();

            if (data.hasOwnProperty('clickTrackingUrl')) {
                obj['clickTrackingUrl'] = ApiClient.convertToType(data['clickTrackingUrl'], 'String');
            }
            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = Dimensions.constructFromObject(data['dimensions']);
            }
            if (data.hasOwnProperty('landingPageUrl')) {
                obj['landingPageUrl'] = ApiClient.convertToType(data['landingPageUrl'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('program')) {
                obj['program'] = ApiClient.convertToType(data['program'], 'String');
            }
            if (data.hasOwnProperty('resourceMimeType')) {
                obj['resourceMimeType'] = ApiClient.convertToType(data['resourceMimeType'], 'String');
            }
            if (data.hasOwnProperty('resourceUrl')) {
                obj['resourceUrl'] = ApiClient.convertToType(data['resourceUrl'], 'String');
            }
            if (data.hasOwnProperty('viewTrackingUrl')) {
                obj['viewTrackingUrl'] = ApiClient.convertToType(data['viewTrackingUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObaIcon</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObaIcon</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clickTrackingUrl'] && !(typeof data['clickTrackingUrl'] === 'string' || data['clickTrackingUrl'] instanceof String)) {
            throw new Error("Expected the field `clickTrackingUrl` to be a primitive type in the JSON string but got " + data['clickTrackingUrl']);
        }
        // validate the optional field `dimensions`
        if (data['dimensions']) { // data not null
          Dimensions.validateJSON(data['dimensions']);
        }
        // ensure the json data is a string
        if (data['landingPageUrl'] && !(typeof data['landingPageUrl'] === 'string' || data['landingPageUrl'] instanceof String)) {
            throw new Error("Expected the field `landingPageUrl` to be a primitive type in the JSON string but got " + data['landingPageUrl']);
        }
        // ensure the json data is a string
        if (data['position'] && !(typeof data['position'] === 'string' || data['position'] instanceof String)) {
            throw new Error("Expected the field `position` to be a primitive type in the JSON string but got " + data['position']);
        }
        // ensure the json data is a string
        if (data['program'] && !(typeof data['program'] === 'string' || data['program'] instanceof String)) {
            throw new Error("Expected the field `program` to be a primitive type in the JSON string but got " + data['program']);
        }
        // ensure the json data is a string
        if (data['resourceMimeType'] && !(typeof data['resourceMimeType'] === 'string' || data['resourceMimeType'] instanceof String)) {
            throw new Error("Expected the field `resourceMimeType` to be a primitive type in the JSON string but got " + data['resourceMimeType']);
        }
        // ensure the json data is a string
        if (data['resourceUrl'] && !(typeof data['resourceUrl'] === 'string' || data['resourceUrl'] instanceof String)) {
            throw new Error("Expected the field `resourceUrl` to be a primitive type in the JSON string but got " + data['resourceUrl']);
        }
        // ensure the json data is a string
        if (data['viewTrackingUrl'] && !(typeof data['viewTrackingUrl'] === 'string' || data['viewTrackingUrl'] instanceof String)) {
            throw new Error("Expected the field `viewTrackingUrl` to be a primitive type in the JSON string but got " + data['viewTrackingUrl']);
        }

        return true;
    }


}



/**
 * Required. The click tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com
 * @member {String} clickTrackingUrl
 */
ObaIcon.prototype['clickTrackingUrl'] = undefined;

/**
 * @member {module:model/Dimensions} dimensions
 */
ObaIcon.prototype['dimensions'] = undefined;

/**
 * Required. The landing page URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com
 * @member {String} landingPageUrl
 */
ObaIcon.prototype['landingPageUrl'] = undefined;

/**
 * The position of the OBA icon on the creative.
 * @member {module:model/ObaIcon.PositionEnum} position
 */
ObaIcon.prototype['position'] = undefined;

/**
 * The program of the OBA icon. For example: “AdChoices”.
 * @member {String} program
 */
ObaIcon.prototype['program'] = undefined;

/**
 * The MIME type of the OBA icon resource.
 * @member {String} resourceMimeType
 */
ObaIcon.prototype['resourceMimeType'] = undefined;

/**
 * The URL of the OBA icon resource.
 * @member {String} resourceUrl
 */
ObaIcon.prototype['resourceUrl'] = undefined;

/**
 * Required. The view tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com
 * @member {String} viewTrackingUrl
 */
ObaIcon.prototype['viewTrackingUrl'] = undefined;





/**
 * Allowed values for the <code>position</code> property.
 * @enum {String}
 * @readonly
 */
ObaIcon['PositionEnum'] = {

    /**
     * value: "OBA_ICON_POSITION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "OBA_ICON_POSITION_UNSPECIFIED",

    /**
     * value: "OBA_ICON_POSITION_UPPER_RIGHT"
     * @const
     */
    "UPPER_RIGHT": "OBA_ICON_POSITION_UPPER_RIGHT",

    /**
     * value: "OBA_ICON_POSITION_UPPER_LEFT"
     * @const
     */
    "UPPER_LEFT": "OBA_ICON_POSITION_UPPER_LEFT",

    /**
     * value: "OBA_ICON_POSITION_LOWER_RIGHT"
     * @const
     */
    "LOWER_RIGHT": "OBA_ICON_POSITION_LOWER_RIGHT",

    /**
     * value: "OBA_ICON_POSITION_LOWER_LEFT"
     * @const
     */
    "LOWER_LEFT": "OBA_ICON_POSITION_LOWER_LEFT"
};



export default ObaIcon;

