/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DisplayVideo360Api);
  }
}(this, function(expect, DisplayVideo360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DisplayVideo360Api.Invoice();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Invoice', function() {
    it('should create an instance of Invoice', function() {
      // uncomment below and update the code to test Invoice
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be.a(DisplayVideo360Api.Invoice);
    });

    it('should have the property budgetInvoiceGroupingId (base name: "budgetInvoiceGroupingId")', function() {
      // uncomment below and update the code to test the property budgetInvoiceGroupingId
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property budgetSummaries (base name: "budgetSummaries")', function() {
      // uncomment below and update the code to test the property budgetSummaries
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property correctedInvoiceId (base name: "correctedInvoiceId")', function() {
      // uncomment below and update the code to test the property correctedInvoiceId
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invoiceId (base name: "invoiceId")', function() {
      // uncomment below and update the code to test the property invoiceId
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property invoiceType (base name: "invoiceType")', function() {
      // uncomment below and update the code to test the property invoiceType
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property issueDate (base name: "issueDate")', function() {
      // uncomment below and update the code to test the property issueDate
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property nonBudgetMicros (base name: "nonBudgetMicros")', function() {
      // uncomment below and update the code to test the property nonBudgetMicros
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentsAccountId (base name: "paymentsAccountId")', function() {
      // uncomment below and update the code to test the property paymentsAccountId
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property paymentsProfileId (base name: "paymentsProfileId")', function() {
      // uncomment below and update the code to test the property paymentsProfileId
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property pdfUrl (base name: "pdfUrl")', function() {
      // uncomment below and update the code to test the property pdfUrl
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property purchaseOrderNumber (base name: "purchaseOrderNumber")', function() {
      // uncomment below and update the code to test the property purchaseOrderNumber
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property replacedInvoiceIds (base name: "replacedInvoiceIds")', function() {
      // uncomment below and update the code to test the property replacedInvoiceIds
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property serviceDateRange (base name: "serviceDateRange")', function() {
      // uncomment below and update the code to test the property serviceDateRange
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property subtotalAmountMicros (base name: "subtotalAmountMicros")', function() {
      // uncomment below and update the code to test the property subtotalAmountMicros
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property totalAmountMicros (base name: "totalAmountMicros")', function() {
      // uncomment below and update the code to test the property totalAmountMicros
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

    it('should have the property totalTaxAmountMicros (base name: "totalTaxAmountMicros")', function() {
      // uncomment below and update the code to test the property totalTaxAmountMicros
      //var instance = new DisplayVideo360Api.Invoice();
      //expect(instance).to.be();
    });

  });

}));
