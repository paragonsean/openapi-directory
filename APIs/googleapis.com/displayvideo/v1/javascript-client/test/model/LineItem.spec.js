/**
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DisplayVideo360Api);
  }
}(this, function(expect, DisplayVideo360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DisplayVideo360Api.LineItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LineItem', function() {
    it('should create an instance of LineItem', function() {
      // uncomment below and update the code to test LineItem
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be.a(DisplayVideo360Api.LineItem);
    });

    it('should have the property advertiserId (base name: "advertiserId")', function() {
      // uncomment below and update the code to test the property advertiserId
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property bidStrategy (base name: "bidStrategy")', function() {
      // uncomment below and update the code to test the property bidStrategy
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property budget (base name: "budget")', function() {
      // uncomment below and update the code to test the property budget
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property campaignId (base name: "campaignId")', function() {
      // uncomment below and update the code to test the property campaignId
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property conversionCounting (base name: "conversionCounting")', function() {
      // uncomment below and update the code to test the property conversionCounting
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property creativeIds (base name: "creativeIds")', function() {
      // uncomment below and update the code to test the property creativeIds
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property entityStatus (base name: "entityStatus")', function() {
      // uncomment below and update the code to test the property entityStatus
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property excludeNewExchanges (base name: "excludeNewExchanges")', function() {
      // uncomment below and update the code to test the property excludeNewExchanges
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property flight (base name: "flight")', function() {
      // uncomment below and update the code to test the property flight
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property frequencyCap (base name: "frequencyCap")', function() {
      // uncomment below and update the code to test the property frequencyCap
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property insertionOrderId (base name: "insertionOrderId")', function() {
      // uncomment below and update the code to test the property insertionOrderId
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property integrationDetails (base name: "integrationDetails")', function() {
      // uncomment below and update the code to test the property integrationDetails
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property inventorySourceIds (base name: "inventorySourceIds")', function() {
      // uncomment below and update the code to test the property inventorySourceIds
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property lineItemId (base name: "lineItemId")', function() {
      // uncomment below and update the code to test the property lineItemId
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property lineItemType (base name: "lineItemType")', function() {
      // uncomment below and update the code to test the property lineItemType
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property mobileApp (base name: "mobileApp")', function() {
      // uncomment below and update the code to test the property mobileApp
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property pacing (base name: "pacing")', function() {
      // uncomment below and update the code to test the property pacing
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property partnerCosts (base name: "partnerCosts")', function() {
      // uncomment below and update the code to test the property partnerCosts
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property partnerRevenueModel (base name: "partnerRevenueModel")', function() {
      // uncomment below and update the code to test the property partnerRevenueModel
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property reservationType (base name: "reservationType")', function() {
      // uncomment below and update the code to test the property reservationType
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property targetingExpansion (base name: "targetingExpansion")', function() {
      // uncomment below and update the code to test the property targetingExpansion
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

    it('should have the property warningMessages (base name: "warningMessages")', function() {
      // uncomment below and update the code to test the property warningMessages
      //var instance = new DisplayVideo360Api.LineItem();
      //expect(instance).to.be();
    });

  });

}));
