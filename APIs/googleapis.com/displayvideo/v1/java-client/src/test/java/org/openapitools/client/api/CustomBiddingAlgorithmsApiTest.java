/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomBiddingAlgorithm;
import org.openapitools.client.model.CustomBiddingScript;
import org.openapitools.client.model.CustomBiddingScriptRef;
import org.openapitools.client.model.ListCustomBiddingAlgorithmsResponse;
import org.openapitools.client.model.ListCustomBiddingScriptsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomBiddingAlgorithmsApi
 */
@Disabled
public class CustomBiddingAlgorithmsApiTest {

    private final CustomBiddingAlgorithmsApi api = new CustomBiddingAlgorithmsApi();

    /**
     * Creates a new custom bidding algorithm. Returns the newly created custom bidding algorithm if successful.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CustomBiddingAlgorithm customBiddingAlgorithm = null;
        CustomBiddingAlgorithm response = api.displayvideoCustomBiddingAlgorithmsCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, customBiddingAlgorithm);
        // TODO: test validations
    }

    /**
     * Gets a custom bidding algorithm.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsGetTest() throws ApiException {
        String customBiddingAlgorithmId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String advertiserId = null;
        String partnerId = null;
        CustomBiddingAlgorithm response = api.displayvideoCustomBiddingAlgorithmsGet(customBiddingAlgorithmId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, advertiserId, partnerId);
        // TODO: test validations
    }

    /**
     * Lists custom bidding algorithms that are accessible to the current user and can be used in bidding stratgies. The order is defined by the order_by parameter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String advertiserId = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String partnerId = null;
        ListCustomBiddingAlgorithmsResponse response = api.displayvideoCustomBiddingAlgorithmsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, advertiserId, filter, orderBy, pageSize, pageToken, partnerId);
        // TODO: test validations
    }

    /**
     * Updates an existing custom bidding algorithm. Returns the updated custom bidding algorithm if successful.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsPatchTest() throws ApiException {
        String customBiddingAlgorithmId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        CustomBiddingAlgorithm customBiddingAlgorithm = null;
        CustomBiddingAlgorithm response = api.displayvideoCustomBiddingAlgorithmsPatch(customBiddingAlgorithmId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, customBiddingAlgorithm);
        // TODO: test validations
    }

    /**
     * Creates a new custom bidding script. Returns the newly created script if successful.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsScriptsCreateTest() throws ApiException {
        String customBiddingAlgorithmId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String advertiserId = null;
        String partnerId = null;
        CustomBiddingScript customBiddingScript = null;
        CustomBiddingScript response = api.displayvideoCustomBiddingAlgorithmsScriptsCreate(customBiddingAlgorithmId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, advertiserId, partnerId, customBiddingScript);
        // TODO: test validations
    }

    /**
     * Gets a custom bidding script.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsScriptsGetTest() throws ApiException {
        String customBiddingAlgorithmId = null;
        String customBiddingScriptId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String advertiserId = null;
        String partnerId = null;
        CustomBiddingScript response = api.displayvideoCustomBiddingAlgorithmsScriptsGet(customBiddingAlgorithmId, customBiddingScriptId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, advertiserId, partnerId);
        // TODO: test validations
    }

    /**
     * Lists custom bidding scripts that belong to the given algorithm. The order is defined by the order_by parameter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsScriptsListTest() throws ApiException {
        String customBiddingAlgorithmId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String advertiserId = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String partnerId = null;
        ListCustomBiddingScriptsResponse response = api.displayvideoCustomBiddingAlgorithmsScriptsList(customBiddingAlgorithmId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, advertiserId, orderBy, pageSize, pageToken, partnerId);
        // TODO: test validations
    }

    /**
     * Creates a custom bidding script reference object for a script file. The resulting reference object provides a resource path to which the script file should be uploaded. This reference object should be included in when creating a new custom bidding script object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void displayvideoCustomBiddingAlgorithmsUploadScriptTest() throws ApiException {
        String customBiddingAlgorithmId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String advertiserId = null;
        String partnerId = null;
        CustomBiddingScriptRef response = api.displayvideoCustomBiddingAlgorithmsUploadScript(customBiddingAlgorithmId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, advertiserId, partnerId);
        // TODO: test validations
    }

}
