/*
 * Display & Video 360 API
 * Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DoubleVerifyAppStarRating;
import org.openapitools.client.model.DoubleVerifyBrandSafetyCategories;
import org.openapitools.client.model.DoubleVerifyDisplayViewability;
import org.openapitools.client.model.DoubleVerifyFraudInvalidTraffic;
import org.openapitools.client.model.DoubleVerifyVideoViewability;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details of DoubleVerify settings.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:45:03.254016-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DoubleVerify {
  public static final String SERIALIZED_NAME_APP_STAR_RATING = "appStarRating";
  @SerializedName(SERIALIZED_NAME_APP_STAR_RATING)
  private DoubleVerifyAppStarRating appStarRating;

  /**
   * Gets or Sets avoidedAgeRatings
   */
  @JsonAdapter(AvoidedAgeRatingsEnum.Adapter.class)
  public enum AvoidedAgeRatingsEnum {
    AGE_RATING_UNSPECIFIED("AGE_RATING_UNSPECIFIED"),
    
    APP_AGE_RATE_UNKNOWN("APP_AGE_RATE_UNKNOWN"),
    
    APP_AGE_RATE_4_PLUS("APP_AGE_RATE_4_PLUS"),
    
    APP_AGE_RATE_9_PLUS("APP_AGE_RATE_9_PLUS"),
    
    APP_AGE_RATE_12_PLUS("APP_AGE_RATE_12_PLUS"),
    
    APP_AGE_RATE_17_PLUS("APP_AGE_RATE_17_PLUS"),
    
    APP_AGE_RATE_18_PLUS("APP_AGE_RATE_18_PLUS");

    private String value;

    AvoidedAgeRatingsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AvoidedAgeRatingsEnum fromValue(String value) {
      for (AvoidedAgeRatingsEnum b : AvoidedAgeRatingsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AvoidedAgeRatingsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AvoidedAgeRatingsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AvoidedAgeRatingsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AvoidedAgeRatingsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AvoidedAgeRatingsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AVOIDED_AGE_RATINGS = "avoidedAgeRatings";
  @SerializedName(SERIALIZED_NAME_AVOIDED_AGE_RATINGS)
  private List<AvoidedAgeRatingsEnum> avoidedAgeRatings = new ArrayList<>();

  public static final String SERIALIZED_NAME_BRAND_SAFETY_CATEGORIES = "brandSafetyCategories";
  @SerializedName(SERIALIZED_NAME_BRAND_SAFETY_CATEGORIES)
  private DoubleVerifyBrandSafetyCategories brandSafetyCategories;

  public static final String SERIALIZED_NAME_CUSTOM_SEGMENT_ID = "customSegmentId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SEGMENT_ID)
  private String customSegmentId;

  public static final String SERIALIZED_NAME_DISPLAY_VIEWABILITY = "displayViewability";
  @SerializedName(SERIALIZED_NAME_DISPLAY_VIEWABILITY)
  private DoubleVerifyDisplayViewability displayViewability;

  public static final String SERIALIZED_NAME_FRAUD_INVALID_TRAFFIC = "fraudInvalidTraffic";
  @SerializedName(SERIALIZED_NAME_FRAUD_INVALID_TRAFFIC)
  private DoubleVerifyFraudInvalidTraffic fraudInvalidTraffic;

  public static final String SERIALIZED_NAME_VIDEO_VIEWABILITY = "videoViewability";
  @SerializedName(SERIALIZED_NAME_VIDEO_VIEWABILITY)
  private DoubleVerifyVideoViewability videoViewability;

  public DoubleVerify() {
  }

  public DoubleVerify appStarRating(DoubleVerifyAppStarRating appStarRating) {
    this.appStarRating = appStarRating;
    return this;
  }

  /**
   * Get appStarRating
   * @return appStarRating
   */
  @javax.annotation.Nullable
  public DoubleVerifyAppStarRating getAppStarRating() {
    return appStarRating;
  }

  public void setAppStarRating(DoubleVerifyAppStarRating appStarRating) {
    this.appStarRating = appStarRating;
  }


  public DoubleVerify avoidedAgeRatings(List<AvoidedAgeRatingsEnum> avoidedAgeRatings) {
    this.avoidedAgeRatings = avoidedAgeRatings;
    return this;
  }

  public DoubleVerify addAvoidedAgeRatingsItem(AvoidedAgeRatingsEnum avoidedAgeRatingsItem) {
    if (this.avoidedAgeRatings == null) {
      this.avoidedAgeRatings = new ArrayList<>();
    }
    this.avoidedAgeRatings.add(avoidedAgeRatingsItem);
    return this;
  }

  /**
   * Avoid bidding on apps with the age rating.
   * @return avoidedAgeRatings
   */
  @javax.annotation.Nullable
  public List<AvoidedAgeRatingsEnum> getAvoidedAgeRatings() {
    return avoidedAgeRatings;
  }

  public void setAvoidedAgeRatings(List<AvoidedAgeRatingsEnum> avoidedAgeRatings) {
    this.avoidedAgeRatings = avoidedAgeRatings;
  }


  public DoubleVerify brandSafetyCategories(DoubleVerifyBrandSafetyCategories brandSafetyCategories) {
    this.brandSafetyCategories = brandSafetyCategories;
    return this;
  }

  /**
   * Get brandSafetyCategories
   * @return brandSafetyCategories
   */
  @javax.annotation.Nullable
  public DoubleVerifyBrandSafetyCategories getBrandSafetyCategories() {
    return brandSafetyCategories;
  }

  public void setBrandSafetyCategories(DoubleVerifyBrandSafetyCategories brandSafetyCategories) {
    this.brandSafetyCategories = brandSafetyCategories;
  }


  public DoubleVerify customSegmentId(String customSegmentId) {
    this.customSegmentId = customSegmentId;
    return this;
  }

  /**
   * The custom segment ID provided by DoubleVerify. The ID must start with \&quot;51\&quot; and consist of eight digits. Custom segment ID cannot be specified along with any of the following fields: * brand_safety_categories * avoided_age_ratings * app_star_rating * fraud_invalid_traffic
   * @return customSegmentId
   */
  @javax.annotation.Nullable
  public String getCustomSegmentId() {
    return customSegmentId;
  }

  public void setCustomSegmentId(String customSegmentId) {
    this.customSegmentId = customSegmentId;
  }


  public DoubleVerify displayViewability(DoubleVerifyDisplayViewability displayViewability) {
    this.displayViewability = displayViewability;
    return this;
  }

  /**
   * Get displayViewability
   * @return displayViewability
   */
  @javax.annotation.Nullable
  public DoubleVerifyDisplayViewability getDisplayViewability() {
    return displayViewability;
  }

  public void setDisplayViewability(DoubleVerifyDisplayViewability displayViewability) {
    this.displayViewability = displayViewability;
  }


  public DoubleVerify fraudInvalidTraffic(DoubleVerifyFraudInvalidTraffic fraudInvalidTraffic) {
    this.fraudInvalidTraffic = fraudInvalidTraffic;
    return this;
  }

  /**
   * Get fraudInvalidTraffic
   * @return fraudInvalidTraffic
   */
  @javax.annotation.Nullable
  public DoubleVerifyFraudInvalidTraffic getFraudInvalidTraffic() {
    return fraudInvalidTraffic;
  }

  public void setFraudInvalidTraffic(DoubleVerifyFraudInvalidTraffic fraudInvalidTraffic) {
    this.fraudInvalidTraffic = fraudInvalidTraffic;
  }


  public DoubleVerify videoViewability(DoubleVerifyVideoViewability videoViewability) {
    this.videoViewability = videoViewability;
    return this;
  }

  /**
   * Get videoViewability
   * @return videoViewability
   */
  @javax.annotation.Nullable
  public DoubleVerifyVideoViewability getVideoViewability() {
    return videoViewability;
  }

  public void setVideoViewability(DoubleVerifyVideoViewability videoViewability) {
    this.videoViewability = videoViewability;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DoubleVerify doubleVerify = (DoubleVerify) o;
    return Objects.equals(this.appStarRating, doubleVerify.appStarRating) &&
        Objects.equals(this.avoidedAgeRatings, doubleVerify.avoidedAgeRatings) &&
        Objects.equals(this.brandSafetyCategories, doubleVerify.brandSafetyCategories) &&
        Objects.equals(this.customSegmentId, doubleVerify.customSegmentId) &&
        Objects.equals(this.displayViewability, doubleVerify.displayViewability) &&
        Objects.equals(this.fraudInvalidTraffic, doubleVerify.fraudInvalidTraffic) &&
        Objects.equals(this.videoViewability, doubleVerify.videoViewability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appStarRating, avoidedAgeRatings, brandSafetyCategories, customSegmentId, displayViewability, fraudInvalidTraffic, videoViewability);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DoubleVerify {\n");
    sb.append("    appStarRating: ").append(toIndentedString(appStarRating)).append("\n");
    sb.append("    avoidedAgeRatings: ").append(toIndentedString(avoidedAgeRatings)).append("\n");
    sb.append("    brandSafetyCategories: ").append(toIndentedString(brandSafetyCategories)).append("\n");
    sb.append("    customSegmentId: ").append(toIndentedString(customSegmentId)).append("\n");
    sb.append("    displayViewability: ").append(toIndentedString(displayViewability)).append("\n");
    sb.append("    fraudInvalidTraffic: ").append(toIndentedString(fraudInvalidTraffic)).append("\n");
    sb.append("    videoViewability: ").append(toIndentedString(videoViewability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appStarRating");
    openapiFields.add("avoidedAgeRatings");
    openapiFields.add("brandSafetyCategories");
    openapiFields.add("customSegmentId");
    openapiFields.add("displayViewability");
    openapiFields.add("fraudInvalidTraffic");
    openapiFields.add("videoViewability");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DoubleVerify
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DoubleVerify.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DoubleVerify is not found in the empty JSON string", DoubleVerify.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DoubleVerify.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DoubleVerify` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appStarRating`
      if (jsonObj.get("appStarRating") != null && !jsonObj.get("appStarRating").isJsonNull()) {
        DoubleVerifyAppStarRating.validateJsonElement(jsonObj.get("appStarRating"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("avoidedAgeRatings") != null && !jsonObj.get("avoidedAgeRatings").isJsonNull() && !jsonObj.get("avoidedAgeRatings").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `avoidedAgeRatings` to be an array in the JSON string but got `%s`", jsonObj.get("avoidedAgeRatings").toString()));
      }
      // validate the optional field `brandSafetyCategories`
      if (jsonObj.get("brandSafetyCategories") != null && !jsonObj.get("brandSafetyCategories").isJsonNull()) {
        DoubleVerifyBrandSafetyCategories.validateJsonElement(jsonObj.get("brandSafetyCategories"));
      }
      if ((jsonObj.get("customSegmentId") != null && !jsonObj.get("customSegmentId").isJsonNull()) && !jsonObj.get("customSegmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customSegmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customSegmentId").toString()));
      }
      // validate the optional field `displayViewability`
      if (jsonObj.get("displayViewability") != null && !jsonObj.get("displayViewability").isJsonNull()) {
        DoubleVerifyDisplayViewability.validateJsonElement(jsonObj.get("displayViewability"));
      }
      // validate the optional field `fraudInvalidTraffic`
      if (jsonObj.get("fraudInvalidTraffic") != null && !jsonObj.get("fraudInvalidTraffic").isJsonNull()) {
        DoubleVerifyFraudInvalidTraffic.validateJsonElement(jsonObj.get("fraudInvalidTraffic"));
      }
      // validate the optional field `videoViewability`
      if (jsonObj.get("videoViewability") != null && !jsonObj.get("videoViewability").isJsonNull()) {
        DoubleVerifyVideoViewability.validateJsonElement(jsonObj.get("videoViewability"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DoubleVerify.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DoubleVerify' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DoubleVerify> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DoubleVerify.class));

       return (TypeAdapter<T>) new TypeAdapter<DoubleVerify>() {
           @Override
           public void write(JsonWriter out, DoubleVerify value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DoubleVerify read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DoubleVerify given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DoubleVerify
   * @throws IOException if the JSON string is invalid with respect to DoubleVerify
   */
  public static DoubleVerify fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DoubleVerify.class);
  }

  /**
   * Convert an instance of DoubleVerify to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

