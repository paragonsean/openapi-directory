# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.target_attribute import TargetAttribute
from openapi_server import util


class AutomationResourceSelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, targets: List[TargetAttribute]=None):
        """AutomationResourceSelector - a model defined in OpenAPI

        :param targets: The targets of this AutomationResourceSelector.
        """
        self.openapi_types = {
            'targets': List[TargetAttribute]
        }

        self.attribute_map = {
            'targets': 'targets'
        }

        self._targets = targets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutomationResourceSelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutomationResourceSelector of this AutomationResourceSelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def targets(self):
        """Gets the targets of this AutomationResourceSelector.

        Contains attributes about a target.

        :return: The targets of this AutomationResourceSelector.
        :rtype: List[TargetAttribute]
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this AutomationResourceSelector.

        Contains attributes about a target.

        :param targets: The targets of this AutomationResourceSelector.
        :type targets: List[TargetAttribute]
        """

        self._targets = targets
