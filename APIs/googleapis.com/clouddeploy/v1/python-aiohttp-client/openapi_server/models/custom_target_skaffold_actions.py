# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.skaffold_modules import SkaffoldModules
from openapi_server import util


class CustomTargetSkaffoldActions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deploy_action: str=None, include_skaffold_modules: List[SkaffoldModules]=None, render_action: str=None):
        """CustomTargetSkaffoldActions - a model defined in OpenAPI

        :param deploy_action: The deploy_action of this CustomTargetSkaffoldActions.
        :param include_skaffold_modules: The include_skaffold_modules of this CustomTargetSkaffoldActions.
        :param render_action: The render_action of this CustomTargetSkaffoldActions.
        """
        self.openapi_types = {
            'deploy_action': str,
            'include_skaffold_modules': List[SkaffoldModules],
            'render_action': str
        }

        self.attribute_map = {
            'deploy_action': 'deployAction',
            'include_skaffold_modules': 'includeSkaffoldModules',
            'render_action': 'renderAction'
        }

        self._deploy_action = deploy_action
        self._include_skaffold_modules = include_skaffold_modules
        self._render_action = render_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomTargetSkaffoldActions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomTargetSkaffoldActions of this CustomTargetSkaffoldActions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deploy_action(self):
        """Gets the deploy_action of this CustomTargetSkaffoldActions.

        Required. The Skaffold custom action responsible for deploy operations.

        :return: The deploy_action of this CustomTargetSkaffoldActions.
        :rtype: str
        """
        return self._deploy_action

    @deploy_action.setter
    def deploy_action(self, deploy_action):
        """Sets the deploy_action of this CustomTargetSkaffoldActions.

        Required. The Skaffold custom action responsible for deploy operations.

        :param deploy_action: The deploy_action of this CustomTargetSkaffoldActions.
        :type deploy_action: str
        """

        self._deploy_action = deploy_action

    @property
    def include_skaffold_modules(self):
        """Gets the include_skaffold_modules of this CustomTargetSkaffoldActions.

        Optional. List of Skaffold modules Cloud Deploy will include in the Skaffold Config as required before performing diagnose.

        :return: The include_skaffold_modules of this CustomTargetSkaffoldActions.
        :rtype: List[SkaffoldModules]
        """
        return self._include_skaffold_modules

    @include_skaffold_modules.setter
    def include_skaffold_modules(self, include_skaffold_modules):
        """Sets the include_skaffold_modules of this CustomTargetSkaffoldActions.

        Optional. List of Skaffold modules Cloud Deploy will include in the Skaffold Config as required before performing diagnose.

        :param include_skaffold_modules: The include_skaffold_modules of this CustomTargetSkaffoldActions.
        :type include_skaffold_modules: List[SkaffoldModules]
        """

        self._include_skaffold_modules = include_skaffold_modules

    @property
    def render_action(self):
        """Gets the render_action of this CustomTargetSkaffoldActions.

        Optional. The Skaffold custom action responsible for render operations. If not provided then Cloud Deploy will perform the render operations via `skaffold render`.

        :return: The render_action of this CustomTargetSkaffoldActions.
        :rtype: str
        """
        return self._render_action

    @render_action.setter
    def render_action(self, render_action):
        """Sets the render_action of this CustomTargetSkaffoldActions.

        Optional. The Skaffold custom action responsible for render operations. If not provided then Cloud Deploy will perform the render operations via `skaffold render`.

        :param render_action: The render_action of this CustomTargetSkaffoldActions.
        :type render_action: str
        """

        self._render_action = render_action
