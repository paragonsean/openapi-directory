# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.skaffold_gcs_source import SkaffoldGCSSource
from openapi_server.models.skaffold_git_source import SkaffoldGitSource
from openapi_server import util


class SkaffoldModules(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configs: List[str]=None, git: SkaffoldGitSource=None, google_cloud_storage: SkaffoldGCSSource=None):
        """SkaffoldModules - a model defined in OpenAPI

        :param configs: The configs of this SkaffoldModules.
        :param git: The git of this SkaffoldModules.
        :param google_cloud_storage: The google_cloud_storage of this SkaffoldModules.
        """
        self.openapi_types = {
            'configs': List[str],
            'git': SkaffoldGitSource,
            'google_cloud_storage': SkaffoldGCSSource
        }

        self.attribute_map = {
            'configs': 'configs',
            'git': 'git',
            'google_cloud_storage': 'googleCloudStorage'
        }

        self._configs = configs
        self._git = git
        self._google_cloud_storage = google_cloud_storage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkaffoldModules':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkaffoldModules of this SkaffoldModules.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configs(self):
        """Gets the configs of this SkaffoldModules.

        Optional. The Skaffold Config modules to use from the specified source.

        :return: The configs of this SkaffoldModules.
        :rtype: List[str]
        """
        return self._configs

    @configs.setter
    def configs(self, configs):
        """Sets the configs of this SkaffoldModules.

        Optional. The Skaffold Config modules to use from the specified source.

        :param configs: The configs of this SkaffoldModules.
        :type configs: List[str]
        """

        self._configs = configs

    @property
    def git(self):
        """Gets the git of this SkaffoldModules.


        :return: The git of this SkaffoldModules.
        :rtype: SkaffoldGitSource
        """
        return self._git

    @git.setter
    def git(self, git):
        """Sets the git of this SkaffoldModules.


        :param git: The git of this SkaffoldModules.
        :type git: SkaffoldGitSource
        """

        self._git = git

    @property
    def google_cloud_storage(self):
        """Gets the google_cloud_storage of this SkaffoldModules.


        :return: The google_cloud_storage of this SkaffoldModules.
        :rtype: SkaffoldGCSSource
        """
        return self._google_cloud_storage

    @google_cloud_storage.setter
    def google_cloud_storage(self, google_cloud_storage):
        """Sets the google_cloud_storage of this SkaffoldModules.


        :param google_cloud_storage: The google_cloud_storage of this SkaffoldModules.
        :type google_cloud_storage: SkaffoldGCSSource
        """

        self._google_cloud_storage = google_cloud_storage
