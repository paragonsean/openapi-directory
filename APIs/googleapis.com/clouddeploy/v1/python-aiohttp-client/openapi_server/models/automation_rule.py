# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advance_rollout_rule import AdvanceRolloutRule
from openapi_server.models.promote_release_rule import PromoteReleaseRule
from openapi_server.models.repair_rollout_rule import RepairRolloutRule
from openapi_server import util


class AutomationRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advance_rollout_rule: AdvanceRolloutRule=None, promote_release_rule: PromoteReleaseRule=None, repair_rollout_rule: RepairRolloutRule=None):
        """AutomationRule - a model defined in OpenAPI

        :param advance_rollout_rule: The advance_rollout_rule of this AutomationRule.
        :param promote_release_rule: The promote_release_rule of this AutomationRule.
        :param repair_rollout_rule: The repair_rollout_rule of this AutomationRule.
        """
        self.openapi_types = {
            'advance_rollout_rule': AdvanceRolloutRule,
            'promote_release_rule': PromoteReleaseRule,
            'repair_rollout_rule': RepairRolloutRule
        }

        self.attribute_map = {
            'advance_rollout_rule': 'advanceRolloutRule',
            'promote_release_rule': 'promoteReleaseRule',
            'repair_rollout_rule': 'repairRolloutRule'
        }

        self._advance_rollout_rule = advance_rollout_rule
        self._promote_release_rule = promote_release_rule
        self._repair_rollout_rule = repair_rollout_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutomationRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutomationRule of this AutomationRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advance_rollout_rule(self):
        """Gets the advance_rollout_rule of this AutomationRule.


        :return: The advance_rollout_rule of this AutomationRule.
        :rtype: AdvanceRolloutRule
        """
        return self._advance_rollout_rule

    @advance_rollout_rule.setter
    def advance_rollout_rule(self, advance_rollout_rule):
        """Sets the advance_rollout_rule of this AutomationRule.


        :param advance_rollout_rule: The advance_rollout_rule of this AutomationRule.
        :type advance_rollout_rule: AdvanceRolloutRule
        """

        self._advance_rollout_rule = advance_rollout_rule

    @property
    def promote_release_rule(self):
        """Gets the promote_release_rule of this AutomationRule.


        :return: The promote_release_rule of this AutomationRule.
        :rtype: PromoteReleaseRule
        """
        return self._promote_release_rule

    @promote_release_rule.setter
    def promote_release_rule(self, promote_release_rule):
        """Sets the promote_release_rule of this AutomationRule.


        :param promote_release_rule: The promote_release_rule of this AutomationRule.
        :type promote_release_rule: PromoteReleaseRule
        """

        self._promote_release_rule = promote_release_rule

    @property
    def repair_rollout_rule(self):
        """Gets the repair_rollout_rule of this AutomationRule.


        :return: The repair_rollout_rule of this AutomationRule.
        :rtype: RepairRolloutRule
        """
        return self._repair_rollout_rule

    @repair_rollout_rule.setter
    def repair_rollout_rule(self, repair_rollout_rule):
        """Sets the repair_rollout_rule of this AutomationRule.


        :param repair_rollout_rule: The repair_rollout_rule of this AutomationRule.
        :type repair_rollout_rule: RepairRolloutRule
        """

        self._repair_rollout_rule = repair_rollout_rule
