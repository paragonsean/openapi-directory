# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PromoteReleaseOperation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phase: str=None, rollout: str=None, target_id: str=None, wait: str=None):
        """PromoteReleaseOperation - a model defined in OpenAPI

        :param phase: The phase of this PromoteReleaseOperation.
        :param rollout: The rollout of this PromoteReleaseOperation.
        :param target_id: The target_id of this PromoteReleaseOperation.
        :param wait: The wait of this PromoteReleaseOperation.
        """
        self.openapi_types = {
            'phase': str,
            'rollout': str,
            'target_id': str,
            'wait': str
        }

        self.attribute_map = {
            'phase': 'phase',
            'rollout': 'rollout',
            'target_id': 'targetId',
            'wait': 'wait'
        }

        self._phase = phase
        self._rollout = rollout
        self._target_id = target_id
        self._wait = wait

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PromoteReleaseOperation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PromoteReleaseOperation of this PromoteReleaseOperation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phase(self):
        """Gets the phase of this PromoteReleaseOperation.

        Output only. The starting phase of the rollout created by this operation.

        :return: The phase of this PromoteReleaseOperation.
        :rtype: str
        """
        return self._phase

    @phase.setter
    def phase(self, phase):
        """Sets the phase of this PromoteReleaseOperation.

        Output only. The starting phase of the rollout created by this operation.

        :param phase: The phase of this PromoteReleaseOperation.
        :type phase: str
        """

        self._phase = phase

    @property
    def rollout(self):
        """Gets the rollout of this PromoteReleaseOperation.

        Output only. The name of the rollout that initiates the `AutomationRun`.

        :return: The rollout of this PromoteReleaseOperation.
        :rtype: str
        """
        return self._rollout

    @rollout.setter
    def rollout(self, rollout):
        """Sets the rollout of this PromoteReleaseOperation.

        Output only. The name of the rollout that initiates the `AutomationRun`.

        :param rollout: The rollout of this PromoteReleaseOperation.
        :type rollout: str
        """

        self._rollout = rollout

    @property
    def target_id(self):
        """Gets the target_id of this PromoteReleaseOperation.

        Output only. The ID of the target that represents the promotion stage to which the release will be promoted. The value of this field is the last segment of a target name.

        :return: The target_id of this PromoteReleaseOperation.
        :rtype: str
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this PromoteReleaseOperation.

        Output only. The ID of the target that represents the promotion stage to which the release will be promoted. The value of this field is the last segment of a target name.

        :param target_id: The target_id of this PromoteReleaseOperation.
        :type target_id: str
        """

        self._target_id = target_id

    @property
    def wait(self):
        """Gets the wait of this PromoteReleaseOperation.

        Output only. How long the operation will be paused.

        :return: The wait of this PromoteReleaseOperation.
        :rtype: str
        """
        return self._wait

    @wait.setter
    def wait(self, wait):
        """Sets the wait of this PromoteReleaseOperation.

        Output only. How long the operation will be paused.

        :param wait: The wait of this PromoteReleaseOperation.
        :type wait: str
        """

        self._wait = wait
