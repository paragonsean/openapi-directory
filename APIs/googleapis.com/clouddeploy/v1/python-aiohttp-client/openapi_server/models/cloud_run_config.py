# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CloudRunConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automatic_traffic_control: bool=None, canary_revision_tags: List[str]=None, prior_revision_tags: List[str]=None, stable_revision_tags: List[str]=None):
        """CloudRunConfig - a model defined in OpenAPI

        :param automatic_traffic_control: The automatic_traffic_control of this CloudRunConfig.
        :param canary_revision_tags: The canary_revision_tags of this CloudRunConfig.
        :param prior_revision_tags: The prior_revision_tags of this CloudRunConfig.
        :param stable_revision_tags: The stable_revision_tags of this CloudRunConfig.
        """
        self.openapi_types = {
            'automatic_traffic_control': bool,
            'canary_revision_tags': List[str],
            'prior_revision_tags': List[str],
            'stable_revision_tags': List[str]
        }

        self.attribute_map = {
            'automatic_traffic_control': 'automaticTrafficControl',
            'canary_revision_tags': 'canaryRevisionTags',
            'prior_revision_tags': 'priorRevisionTags',
            'stable_revision_tags': 'stableRevisionTags'
        }

        self._automatic_traffic_control = automatic_traffic_control
        self._canary_revision_tags = canary_revision_tags
        self._prior_revision_tags = prior_revision_tags
        self._stable_revision_tags = stable_revision_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudRunConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudRunConfig of this CloudRunConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automatic_traffic_control(self):
        """Gets the automatic_traffic_control of this CloudRunConfig.

        Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.

        :return: The automatic_traffic_control of this CloudRunConfig.
        :rtype: bool
        """
        return self._automatic_traffic_control

    @automatic_traffic_control.setter
    def automatic_traffic_control(self, automatic_traffic_control):
        """Sets the automatic_traffic_control of this CloudRunConfig.

        Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.

        :param automatic_traffic_control: The automatic_traffic_control of this CloudRunConfig.
        :type automatic_traffic_control: bool
        """

        self._automatic_traffic_control = automatic_traffic_control

    @property
    def canary_revision_tags(self):
        """Gets the canary_revision_tags of this CloudRunConfig.

        Optional. A list of tags that are added to the canary revision while the canary phase is in progress.

        :return: The canary_revision_tags of this CloudRunConfig.
        :rtype: List[str]
        """
        return self._canary_revision_tags

    @canary_revision_tags.setter
    def canary_revision_tags(self, canary_revision_tags):
        """Sets the canary_revision_tags of this CloudRunConfig.

        Optional. A list of tags that are added to the canary revision while the canary phase is in progress.

        :param canary_revision_tags: The canary_revision_tags of this CloudRunConfig.
        :type canary_revision_tags: List[str]
        """

        self._canary_revision_tags = canary_revision_tags

    @property
    def prior_revision_tags(self):
        """Gets the prior_revision_tags of this CloudRunConfig.

        Optional. A list of tags that are added to the prior revision while the canary phase is in progress.

        :return: The prior_revision_tags of this CloudRunConfig.
        :rtype: List[str]
        """
        return self._prior_revision_tags

    @prior_revision_tags.setter
    def prior_revision_tags(self, prior_revision_tags):
        """Sets the prior_revision_tags of this CloudRunConfig.

        Optional. A list of tags that are added to the prior revision while the canary phase is in progress.

        :param prior_revision_tags: The prior_revision_tags of this CloudRunConfig.
        :type prior_revision_tags: List[str]
        """

        self._prior_revision_tags = prior_revision_tags

    @property
    def stable_revision_tags(self):
        """Gets the stable_revision_tags of this CloudRunConfig.

        Optional. A list of tags that are added to the final stable revision when the stable phase is applied.

        :return: The stable_revision_tags of this CloudRunConfig.
        :rtype: List[str]
        """
        return self._stable_revision_tags

    @stable_revision_tags.setter
    def stable_revision_tags(self, stable_revision_tags):
        """Sets the stable_revision_tags of this CloudRunConfig.

        Optional. A list of tags that are added to the final stable revision when the stable phase is applied.

        :param stable_revision_tags: The stable_revision_tags of this CloudRunConfig.
        :type stable_revision_tags: List[str]
        """

        self._stable_revision_tags = stable_revision_tags
