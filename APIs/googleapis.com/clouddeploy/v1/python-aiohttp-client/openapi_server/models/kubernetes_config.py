# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gateway_service_mesh import GatewayServiceMesh
from openapi_server.models.service_networking import ServiceNetworking
from openapi_server import util


class KubernetesConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_service_mesh: GatewayServiceMesh=None, service_networking: ServiceNetworking=None):
        """KubernetesConfig - a model defined in OpenAPI

        :param gateway_service_mesh: The gateway_service_mesh of this KubernetesConfig.
        :param service_networking: The service_networking of this KubernetesConfig.
        """
        self.openapi_types = {
            'gateway_service_mesh': GatewayServiceMesh,
            'service_networking': ServiceNetworking
        }

        self.attribute_map = {
            'gateway_service_mesh': 'gatewayServiceMesh',
            'service_networking': 'serviceNetworking'
        }

        self._gateway_service_mesh = gateway_service_mesh
        self._service_networking = service_networking

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KubernetesConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KubernetesConfig of this KubernetesConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_service_mesh(self):
        """Gets the gateway_service_mesh of this KubernetesConfig.


        :return: The gateway_service_mesh of this KubernetesConfig.
        :rtype: GatewayServiceMesh
        """
        return self._gateway_service_mesh

    @gateway_service_mesh.setter
    def gateway_service_mesh(self, gateway_service_mesh):
        """Sets the gateway_service_mesh of this KubernetesConfig.


        :param gateway_service_mesh: The gateway_service_mesh of this KubernetesConfig.
        :type gateway_service_mesh: GatewayServiceMesh
        """

        self._gateway_service_mesh = gateway_service_mesh

    @property
    def service_networking(self):
        """Gets the service_networking of this KubernetesConfig.


        :return: The service_networking of this KubernetesConfig.
        :rtype: ServiceNetworking
        """
        return self._service_networking

    @service_networking.setter
    def service_networking(self, service_networking):
        """Sets the service_networking of this KubernetesConfig.


        :param service_networking: The service_networking of this KubernetesConfig.
        :type service_networking: ServiceNetworking
        """

        self._service_networking = service_networking
