# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deploy_parameters import DeployParameters
from openapi_server.models.strategy import Strategy
from openapi_server import util


class Stage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deploy_parameters: List[DeployParameters]=None, profiles: List[str]=None, strategy: Strategy=None, target_id: str=None):
        """Stage - a model defined in OpenAPI

        :param deploy_parameters: The deploy_parameters of this Stage.
        :param profiles: The profiles of this Stage.
        :param strategy: The strategy of this Stage.
        :param target_id: The target_id of this Stage.
        """
        self.openapi_types = {
            'deploy_parameters': List[DeployParameters],
            'profiles': List[str],
            'strategy': Strategy,
            'target_id': str
        }

        self.attribute_map = {
            'deploy_parameters': 'deployParameters',
            'profiles': 'profiles',
            'strategy': 'strategy',
            'target_id': 'targetId'
        }

        self._deploy_parameters = deploy_parameters
        self._profiles = profiles
        self._strategy = strategy
        self._target_id = target_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stage of this Stage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deploy_parameters(self):
        """Gets the deploy_parameters of this Stage.

        Optional. The deploy parameters to use for the target in this stage.

        :return: The deploy_parameters of this Stage.
        :rtype: List[DeployParameters]
        """
        return self._deploy_parameters

    @deploy_parameters.setter
    def deploy_parameters(self, deploy_parameters):
        """Sets the deploy_parameters of this Stage.

        Optional. The deploy parameters to use for the target in this stage.

        :param deploy_parameters: The deploy_parameters of this Stage.
        :type deploy_parameters: List[DeployParameters]
        """

        self._deploy_parameters = deploy_parameters

    @property
    def profiles(self):
        """Gets the profiles of this Stage.

        Skaffold profiles to use when rendering the manifest for this stage's `Target`.

        :return: The profiles of this Stage.
        :rtype: List[str]
        """
        return self._profiles

    @profiles.setter
    def profiles(self, profiles):
        """Sets the profiles of this Stage.

        Skaffold profiles to use when rendering the manifest for this stage's `Target`.

        :param profiles: The profiles of this Stage.
        :type profiles: List[str]
        """

        self._profiles = profiles

    @property
    def strategy(self):
        """Gets the strategy of this Stage.


        :return: The strategy of this Stage.
        :rtype: Strategy
        """
        return self._strategy

    @strategy.setter
    def strategy(self, strategy):
        """Sets the strategy of this Stage.


        :param strategy: The strategy of this Stage.
        :type strategy: Strategy
        """

        self._strategy = strategy

    @property
    def target_id(self):
        """Gets the target_id of this Stage.

        The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.

        :return: The target_id of this Stage.
        :rtype: str
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this Stage.

        The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.

        :param target_id: The target_id of this Stage.
        :type target_id: str
        """

        self._target_id = target_id
