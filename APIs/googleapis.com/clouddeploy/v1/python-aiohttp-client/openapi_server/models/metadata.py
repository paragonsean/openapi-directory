# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.automation_rollout_metadata import AutomationRolloutMetadata
from openapi_server.models.cloud_run_metadata import CloudRunMetadata
from openapi_server.models.custom_metadata import CustomMetadata
from openapi_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automation: AutomationRolloutMetadata=None, cloud_run: CloudRunMetadata=None, custom: CustomMetadata=None):
        """Metadata - a model defined in OpenAPI

        :param automation: The automation of this Metadata.
        :param cloud_run: The cloud_run of this Metadata.
        :param custom: The custom of this Metadata.
        """
        self.openapi_types = {
            'automation': AutomationRolloutMetadata,
            'cloud_run': CloudRunMetadata,
            'custom': CustomMetadata
        }

        self.attribute_map = {
            'automation': 'automation',
            'cloud_run': 'cloudRun',
            'custom': 'custom'
        }

        self._automation = automation
        self._cloud_run = cloud_run
        self._custom = custom

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata of this Metadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automation(self):
        """Gets the automation of this Metadata.


        :return: The automation of this Metadata.
        :rtype: AutomationRolloutMetadata
        """
        return self._automation

    @automation.setter
    def automation(self, automation):
        """Sets the automation of this Metadata.


        :param automation: The automation of this Metadata.
        :type automation: AutomationRolloutMetadata
        """

        self._automation = automation

    @property
    def cloud_run(self):
        """Gets the cloud_run of this Metadata.


        :return: The cloud_run of this Metadata.
        :rtype: CloudRunMetadata
        """
        return self._cloud_run

    @cloud_run.setter
    def cloud_run(self, cloud_run):
        """Sets the cloud_run of this Metadata.


        :param cloud_run: The cloud_run of this Metadata.
        :type cloud_run: CloudRunMetadata
        """

        self._cloud_run = cloud_run

    @property
    def custom(self):
        """Gets the custom of this Metadata.


        :return: The custom of this Metadata.
        :rtype: CustomMetadata
        """
        return self._custom

    @custom.setter
    def custom(self, custom):
        """Sets the custom of this Metadata.


        :param custom: The custom of this Metadata.
        :type custom: CustomMetadata
        """

        self._custom = custom
