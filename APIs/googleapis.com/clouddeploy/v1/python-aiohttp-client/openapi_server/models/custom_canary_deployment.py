# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.phase_config import PhaseConfig
from openapi_server import util


class CustomCanaryDeployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phase_configs: List[PhaseConfig]=None):
        """CustomCanaryDeployment - a model defined in OpenAPI

        :param phase_configs: The phase_configs of this CustomCanaryDeployment.
        """
        self.openapi_types = {
            'phase_configs': List[PhaseConfig]
        }

        self.attribute_map = {
            'phase_configs': 'phaseConfigs'
        }

        self._phase_configs = phase_configs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomCanaryDeployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomCanaryDeployment of this CustomCanaryDeployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phase_configs(self):
        """Gets the phase_configs of this CustomCanaryDeployment.

        Required. Configuration for each phase in the canary deployment in the order executed.

        :return: The phase_configs of this CustomCanaryDeployment.
        :rtype: List[PhaseConfig]
        """
        return self._phase_configs

    @phase_configs.setter
    def phase_configs(self, phase_configs):
        """Sets the phase_configs of this CustomCanaryDeployment.

        Required. Configuration for each phase in the canary deployment in the order executed.

        :param phase_configs: The phase_configs of this CustomCanaryDeployment.
        :type phase_configs: List[PhaseConfig]
        """

        self._phase_configs = phase_configs
