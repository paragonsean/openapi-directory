# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeployParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match_target_labels: Dict[str, str]=None, values: Dict[str, str]=None):
        """DeployParameters - a model defined in OpenAPI

        :param match_target_labels: The match_target_labels of this DeployParameters.
        :param values: The values of this DeployParameters.
        """
        self.openapi_types = {
            'match_target_labels': Dict[str, str],
            'values': Dict[str, str]
        }

        self.attribute_map = {
            'match_target_labels': 'matchTargetLabels',
            'values': 'values'
        }

        self._match_target_labels = match_target_labels
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeployParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeployParameters of this DeployParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match_target_labels(self):
        """Gets the match_target_labels of this DeployParameters.

        Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).

        :return: The match_target_labels of this DeployParameters.
        :rtype: Dict[str, str]
        """
        return self._match_target_labels

    @match_target_labels.setter
    def match_target_labels(self, match_target_labels):
        """Sets the match_target_labels of this DeployParameters.

        Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).

        :param match_target_labels: The match_target_labels of this DeployParameters.
        :type match_target_labels: Dict[str, str]
        """

        self._match_target_labels = match_target_labels

    @property
    def values(self):
        """Gets the values of this DeployParameters.

        Required. Values are deploy parameters in key-value pairs.

        :return: The values of this DeployParameters.
        :rtype: Dict[str, str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this DeployParameters.

        Required. Values are deploy parameters in key-value pairs.

        :param values: The values of this DeployParameters.
        :type values: Dict[str, str]
        """

        self._values = values
