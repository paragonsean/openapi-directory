# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GkeCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: str=None, internal_ip: bool=None):
        """GkeCluster - a model defined in OpenAPI

        :param cluster: The cluster of this GkeCluster.
        :param internal_ip: The internal_ip of this GkeCluster.
        """
        self.openapi_types = {
            'cluster': str,
            'internal_ip': bool
        }

        self.attribute_map = {
            'cluster': 'cluster',
            'internal_ip': 'internalIp'
        }

        self._cluster = cluster
        self._internal_ip = internal_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GkeCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GkeCluster of this GkeCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this GkeCluster.

        Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.

        :return: The cluster of this GkeCluster.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this GkeCluster.

        Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.

        :param cluster: The cluster of this GkeCluster.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def internal_ip(self):
        """Gets the internal_ip of this GkeCluster.

        Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).

        :return: The internal_ip of this GkeCluster.
        :rtype: bool
        """
        return self._internal_ip

    @internal_ip.setter
    def internal_ip(self, internal_ip):
        """Sets the internal_ip of this GkeCluster.

        Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).

        :param internal_ip: The internal_ip of this GkeCluster.
        :type internal_ip: bool
        """

        self._internal_ip = internal_ip
