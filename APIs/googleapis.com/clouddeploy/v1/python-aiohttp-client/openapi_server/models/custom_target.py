# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_target_type: str=None):
        """CustomTarget - a model defined in OpenAPI

        :param custom_target_type: The custom_target_type of this CustomTarget.
        """
        self.openapi_types = {
            'custom_target_type': str
        }

        self.attribute_map = {
            'custom_target_type': 'customTargetType'
        }

        self._custom_target_type = custom_target_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomTarget of this CustomTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_target_type(self):
        """Gets the custom_target_type of this CustomTarget.

        Required. The name of the CustomTargetType. Format must be `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.

        :return: The custom_target_type of this CustomTarget.
        :rtype: str
        """
        return self._custom_target_type

    @custom_target_type.setter
    def custom_target_type(self, custom_target_type):
        """Sets the custom_target_type of this CustomTarget.

        Required. The name of the CustomTargetType. Format must be `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.

        :param custom_target_type: The custom_target_type of this CustomTarget.
        :type custom_target_type: str
        """

        self._custom_target_type = custom_target_type
