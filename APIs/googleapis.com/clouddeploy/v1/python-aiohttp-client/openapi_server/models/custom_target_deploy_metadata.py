# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomTargetDeployMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, skip_message: str=None):
        """CustomTargetDeployMetadata - a model defined in OpenAPI

        :param skip_message: The skip_message of this CustomTargetDeployMetadata.
        """
        self.openapi_types = {
            'skip_message': str
        }

        self.attribute_map = {
            'skip_message': 'skipMessage'
        }

        self._skip_message = skip_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomTargetDeployMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomTargetDeployMetadata of this CustomTargetDeployMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def skip_message(self):
        """Gets the skip_message of this CustomTargetDeployMetadata.

        Output only. Skip message provided in the results of a custom deploy operation.

        :return: The skip_message of this CustomTargetDeployMetadata.
        :rtype: str
        """
        return self._skip_message

    @skip_message.setter
    def skip_message(self, skip_message):
        """Sets the skip_message of this CustomTargetDeployMetadata.

        Output only. Skip message provided in the results of a custom deploy operation.

        :param skip_message: The skip_message of this CustomTargetDeployMetadata.
        :type skip_message: str
        """

        self._skip_message = skip_message
