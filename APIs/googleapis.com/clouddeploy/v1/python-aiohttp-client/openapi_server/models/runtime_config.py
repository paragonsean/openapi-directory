# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_run_config import CloudRunConfig
from openapi_server.models.kubernetes_config import KubernetesConfig
from openapi_server import util


class RuntimeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_run: CloudRunConfig=None, kubernetes: KubernetesConfig=None):
        """RuntimeConfig - a model defined in OpenAPI

        :param cloud_run: The cloud_run of this RuntimeConfig.
        :param kubernetes: The kubernetes of this RuntimeConfig.
        """
        self.openapi_types = {
            'cloud_run': CloudRunConfig,
            'kubernetes': KubernetesConfig
        }

        self.attribute_map = {
            'cloud_run': 'cloudRun',
            'kubernetes': 'kubernetes'
        }

        self._cloud_run = cloud_run
        self._kubernetes = kubernetes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuntimeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuntimeConfig of this RuntimeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_run(self):
        """Gets the cloud_run of this RuntimeConfig.


        :return: The cloud_run of this RuntimeConfig.
        :rtype: CloudRunConfig
        """
        return self._cloud_run

    @cloud_run.setter
    def cloud_run(self, cloud_run):
        """Sets the cloud_run of this RuntimeConfig.


        :param cloud_run: The cloud_run of this RuntimeConfig.
        :type cloud_run: CloudRunConfig
        """

        self._cloud_run = cloud_run

    @property
    def kubernetes(self):
        """Gets the kubernetes of this RuntimeConfig.


        :return: The kubernetes of this RuntimeConfig.
        :rtype: KubernetesConfig
        """
        return self._kubernetes

    @kubernetes.setter
    def kubernetes(self, kubernetes):
        """Sets the kubernetes of this RuntimeConfig.


        :param kubernetes: The kubernetes of this RuntimeConfig.
        :type kubernetes: KubernetesConfig
        """

        self._kubernetes = kubernetes
