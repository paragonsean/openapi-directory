# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.phase_artifact import PhaseArtifact
from openapi_server import util


class TargetArtifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_uri: str=None, manifest_path: str=None, phase_artifacts: Dict[str, PhaseArtifact]=None, skaffold_config_path: str=None):
        """TargetArtifact - a model defined in OpenAPI

        :param artifact_uri: The artifact_uri of this TargetArtifact.
        :param manifest_path: The manifest_path of this TargetArtifact.
        :param phase_artifacts: The phase_artifacts of this TargetArtifact.
        :param skaffold_config_path: The skaffold_config_path of this TargetArtifact.
        """
        self.openapi_types = {
            'artifact_uri': str,
            'manifest_path': str,
            'phase_artifacts': Dict[str, PhaseArtifact],
            'skaffold_config_path': str
        }

        self.attribute_map = {
            'artifact_uri': 'artifactUri',
            'manifest_path': 'manifestPath',
            'phase_artifacts': 'phaseArtifacts',
            'skaffold_config_path': 'skaffoldConfigPath'
        }

        self._artifact_uri = artifact_uri
        self._manifest_path = manifest_path
        self._phase_artifacts = phase_artifacts
        self._skaffold_config_path = skaffold_config_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetArtifact of this TargetArtifact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_uri(self):
        """Gets the artifact_uri of this TargetArtifact.

        Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.

        :return: The artifact_uri of this TargetArtifact.
        :rtype: str
        """
        return self._artifact_uri

    @artifact_uri.setter
    def artifact_uri(self, artifact_uri):
        """Sets the artifact_uri of this TargetArtifact.

        Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.

        :param artifact_uri: The artifact_uri of this TargetArtifact.
        :type artifact_uri: str
        """

        self._artifact_uri = artifact_uri

    @property
    def manifest_path(self):
        """Gets the manifest_path of this TargetArtifact.

        Output only. File path of the rendered manifest relative to the URI.

        :return: The manifest_path of this TargetArtifact.
        :rtype: str
        """
        return self._manifest_path

    @manifest_path.setter
    def manifest_path(self, manifest_path):
        """Sets the manifest_path of this TargetArtifact.

        Output only. File path of the rendered manifest relative to the URI.

        :param manifest_path: The manifest_path of this TargetArtifact.
        :type manifest_path: str
        """

        self._manifest_path = manifest_path

    @property
    def phase_artifacts(self):
        """Gets the phase_artifacts of this TargetArtifact.

        Output only. Map from the phase ID to the phase artifacts for the `Target`.

        :return: The phase_artifacts of this TargetArtifact.
        :rtype: Dict[str, PhaseArtifact]
        """
        return self._phase_artifacts

    @phase_artifacts.setter
    def phase_artifacts(self, phase_artifacts):
        """Sets the phase_artifacts of this TargetArtifact.

        Output only. Map from the phase ID to the phase artifacts for the `Target`.

        :param phase_artifacts: The phase_artifacts of this TargetArtifact.
        :type phase_artifacts: Dict[str, PhaseArtifact]
        """

        self._phase_artifacts = phase_artifacts

    @property
    def skaffold_config_path(self):
        """Gets the skaffold_config_path of this TargetArtifact.

        Output only. File path of the resolved Skaffold configuration relative to the URI.

        :return: The skaffold_config_path of this TargetArtifact.
        :rtype: str
        """
        return self._skaffold_config_path

    @skaffold_config_path.setter
    def skaffold_config_path(self, skaffold_config_path):
        """Sets the skaffold_config_path of this TargetArtifact.

        Output only. File path of the resolved Skaffold configuration relative to the URI.

        :param skaffold_config_path: The skaffold_config_path of this TargetArtifact.
        :type skaffold_config_path: str
        """

        self._skaffold_config_path = skaffold_config_path
