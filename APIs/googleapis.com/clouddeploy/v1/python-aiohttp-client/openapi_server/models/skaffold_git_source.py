# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SkaffoldGitSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path: str=None, ref: str=None, repo: str=None):
        """SkaffoldGitSource - a model defined in OpenAPI

        :param path: The path of this SkaffoldGitSource.
        :param ref: The ref of this SkaffoldGitSource.
        :param repo: The repo of this SkaffoldGitSource.
        """
        self.openapi_types = {
            'path': str,
            'ref': str,
            'repo': str
        }

        self.attribute_map = {
            'path': 'path',
            'ref': 'ref',
            'repo': 'repo'
        }

        self._path = path
        self._ref = ref
        self._repo = repo

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkaffoldGitSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkaffoldGitSource of this SkaffoldGitSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self):
        """Gets the path of this SkaffoldGitSource.

        Optional. Relative path from the repository root to the Skaffold file.

        :return: The path of this SkaffoldGitSource.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this SkaffoldGitSource.

        Optional. Relative path from the repository root to the Skaffold file.

        :param path: The path of this SkaffoldGitSource.
        :type path: str
        """

        self._path = path

    @property
    def ref(self):
        """Gets the ref of this SkaffoldGitSource.

        Optional. Git ref the package should be cloned from.

        :return: The ref of this SkaffoldGitSource.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this SkaffoldGitSource.

        Optional. Git ref the package should be cloned from.

        :param ref: The ref of this SkaffoldGitSource.
        :type ref: str
        """

        self._ref = ref

    @property
    def repo(self):
        """Gets the repo of this SkaffoldGitSource.

        Required. Git repository the package should be cloned from.

        :return: The repo of this SkaffoldGitSource.
        :rtype: str
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this SkaffoldGitSource.

        Required. Git repository the package should be cloned from.

        :param repo: The repo of this SkaffoldGitSource.
        :type repo: str
        """

        self._repo = repo
