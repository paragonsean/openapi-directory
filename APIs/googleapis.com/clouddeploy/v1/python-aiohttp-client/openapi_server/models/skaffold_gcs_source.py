# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SkaffoldGCSSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path: str=None, source: str=None):
        """SkaffoldGCSSource - a model defined in OpenAPI

        :param path: The path of this SkaffoldGCSSource.
        :param source: The source of this SkaffoldGCSSource.
        """
        self.openapi_types = {
            'path': str,
            'source': str
        }

        self.attribute_map = {
            'path': 'path',
            'source': 'source'
        }

        self._path = path
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkaffoldGCSSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkaffoldGCSSource of this SkaffoldGCSSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self):
        """Gets the path of this SkaffoldGCSSource.

        Optional. Relative path from the source to the Skaffold file.

        :return: The path of this SkaffoldGCSSource.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this SkaffoldGCSSource.

        Optional. Relative path from the source to the Skaffold file.

        :param path: The path of this SkaffoldGCSSource.
        :type path: str
        """

        self._path = path

    @property
    def source(self):
        """Gets the source of this SkaffoldGCSSource.

        Required. Cloud Storage source paths to copy recursively. For example, providing \"gs://my-bucket/dir/configs/*\" will result in Skaffold copying all files within the \"dir/configs\" directory in the bucket \"my-bucket\".

        :return: The source of this SkaffoldGCSSource.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this SkaffoldGCSSource.

        Required. Cloud Storage source paths to copy recursively. For example, providing \"gs://my-bucket/dir/configs/*\" will result in Skaffold copying all files within the \"dir/configs\" directory in the bucket \"my-bucket\".

        :param source: The source of this SkaffoldGCSSource.
        :type source: str
        """

        self._source = source
