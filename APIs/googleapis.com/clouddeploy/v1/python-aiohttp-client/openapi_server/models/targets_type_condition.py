# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TargetsTypeCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_details: str=None, status: bool=None):
        """TargetsTypeCondition - a model defined in OpenAPI

        :param error_details: The error_details of this TargetsTypeCondition.
        :param status: The status of this TargetsTypeCondition.
        """
        self.openapi_types = {
            'error_details': str,
            'status': bool
        }

        self.attribute_map = {
            'error_details': 'errorDetails',
            'status': 'status'
        }

        self._error_details = error_details
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetsTypeCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetsTypeCondition of this TargetsTypeCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_details(self):
        """Gets the error_details of this TargetsTypeCondition.

        Human readable error message.

        :return: The error_details of this TargetsTypeCondition.
        :rtype: str
        """
        return self._error_details

    @error_details.setter
    def error_details(self, error_details):
        """Sets the error_details of this TargetsTypeCondition.

        Human readable error message.

        :param error_details: The error_details of this TargetsTypeCondition.
        :type error_details: str
        """

        self._error_details = error_details

    @property
    def status(self):
        """Gets the status of this TargetsTypeCondition.

        True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.

        :return: The status of this TargetsTypeCondition.
        :rtype: bool
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TargetsTypeCondition.

        True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.

        :param status: The status of this TargetsTypeCondition.
        :type status: bool
        """

        self._status = status
