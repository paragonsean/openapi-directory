/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdvanceChildRolloutJobRun from './model/AdvanceChildRolloutJobRun';
import AdvanceRolloutOperation from './model/AdvanceRolloutOperation';
import AdvanceRolloutRequest from './model/AdvanceRolloutRequest';
import AdvanceRolloutRule from './model/AdvanceRolloutRule';
import AnthosCluster from './model/AnthosCluster';
import ApproveRolloutRequest from './model/ApproveRolloutRequest';
import AuditConfig from './model/AuditConfig';
import AuditLogConfig from './model/AuditLogConfig';
import Automation from './model/Automation';
import AutomationEvent from './model/AutomationEvent';
import AutomationResourceSelector from './model/AutomationResourceSelector';
import AutomationRolloutMetadata from './model/AutomationRolloutMetadata';
import AutomationRule from './model/AutomationRule';
import AutomationRuleCondition from './model/AutomationRuleCondition';
import AutomationRun from './model/AutomationRun';
import AutomationRunEvent from './model/AutomationRunEvent';
import Binding from './model/Binding';
import BuildArtifact from './model/BuildArtifact';
import Canary from './model/Canary';
import CanaryDeployment from './model/CanaryDeployment';
import ChildRolloutJobs from './model/ChildRolloutJobs';
import CloudRunConfig from './model/CloudRunConfig';
import CloudRunLocation from './model/CloudRunLocation';
import CloudRunMetadata from './model/CloudRunMetadata';
import CloudRunRenderMetadata from './model/CloudRunRenderMetadata';
import Config from './model/Config';
import CreateChildRolloutJobRun from './model/CreateChildRolloutJobRun';
import CustomCanaryDeployment from './model/CustomCanaryDeployment';
import CustomMetadata from './model/CustomMetadata';
import CustomTarget from './model/CustomTarget';
import CustomTargetDeployMetadata from './model/CustomTargetDeployMetadata';
import CustomTargetSkaffoldActions from './model/CustomTargetSkaffoldActions';
import CustomTargetType from './model/CustomTargetType';
import DefaultPool from './model/DefaultPool';
import DeliveryPipeline from './model/DeliveryPipeline';
import DeliveryPipelineNotificationEvent from './model/DeliveryPipelineNotificationEvent';
import DeployArtifact from './model/DeployArtifact';
import DeployJobRun from './model/DeployJobRun';
import DeployJobRunMetadata from './model/DeployJobRunMetadata';
import DeployParameters from './model/DeployParameters';
import DeploymentJobs from './model/DeploymentJobs';
import ExecutionConfig from './model/ExecutionConfig';
import Expr from './model/Expr';
import GatewayServiceMesh from './model/GatewayServiceMesh';
import GkeCluster from './model/GkeCluster';
import IgnoreJobRequest from './model/IgnoreJobRequest';
import Job from './model/Job';
import JobRun from './model/JobRun';
import JobRunNotificationEvent from './model/JobRunNotificationEvent';
import KubernetesConfig from './model/KubernetesConfig';
import ListAutomationRunsResponse from './model/ListAutomationRunsResponse';
import ListAutomationsResponse from './model/ListAutomationsResponse';
import ListCustomTargetTypesResponse from './model/ListCustomTargetTypesResponse';
import ListDeliveryPipelinesResponse from './model/ListDeliveryPipelinesResponse';
import ListJobRunsResponse from './model/ListJobRunsResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListReleasesResponse from './model/ListReleasesResponse';
import ListRolloutsResponse from './model/ListRolloutsResponse';
import ListTargetsResponse from './model/ListTargetsResponse';
import Location from './model/Location';
import Metadata from './model/Metadata';
import ModelDate from './model/ModelDate';
import MultiTarget from './model/MultiTarget';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import Phase from './model/Phase';
import PhaseArtifact from './model/PhaseArtifact';
import PhaseConfig from './model/PhaseConfig';
import PipelineCondition from './model/PipelineCondition';
import PipelineReadyCondition from './model/PipelineReadyCondition';
import Policy from './model/Policy';
import Postdeploy from './model/Postdeploy';
import PostdeployJob from './model/PostdeployJob';
import PostdeployJobRun from './model/PostdeployJobRun';
import Predeploy from './model/Predeploy';
import PredeployJob from './model/PredeployJob';
import PredeployJobRun from './model/PredeployJobRun';
import PrivatePool from './model/PrivatePool';
import PromoteReleaseOperation from './model/PromoteReleaseOperation';
import PromoteReleaseRule from './model/PromoteReleaseRule';
import Release from './model/Release';
import ReleaseCondition from './model/ReleaseCondition';
import ReleaseNotificationEvent from './model/ReleaseNotificationEvent';
import ReleaseReadyCondition from './model/ReleaseReadyCondition';
import ReleaseRenderEvent from './model/ReleaseRenderEvent';
import RenderMetadata from './model/RenderMetadata';
import RepairMode from './model/RepairMode';
import RepairPhase from './model/RepairPhase';
import RepairRolloutOperation from './model/RepairRolloutOperation';
import RepairRolloutRule from './model/RepairRolloutRule';
import Retry from './model/Retry';
import RetryAttempt from './model/RetryAttempt';
import RetryJobRequest from './model/RetryJobRequest';
import RetryPhase from './model/RetryPhase';
import Rollback from './model/Rollback';
import RollbackAttempt from './model/RollbackAttempt';
import RollbackTargetConfig from './model/RollbackTargetConfig';
import RollbackTargetRequest from './model/RollbackTargetRequest';
import RollbackTargetResponse from './model/RollbackTargetResponse';
import Rollout from './model/Rollout';
import RolloutNotificationEvent from './model/RolloutNotificationEvent';
import RolloutUpdateEvent from './model/RolloutUpdateEvent';
import RuntimeConfig from './model/RuntimeConfig';
import SerialPipeline from './model/SerialPipeline';
import ServiceNetworking from './model/ServiceNetworking';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import SkaffoldGCSSource from './model/SkaffoldGCSSource';
import SkaffoldGitSource from './model/SkaffoldGitSource';
import SkaffoldModules from './model/SkaffoldModules';
import SkaffoldSupportedCondition from './model/SkaffoldSupportedCondition';
import SkaffoldVersion from './model/SkaffoldVersion';
import Stage from './model/Stage';
import Standard from './model/Standard';
import Status from './model/Status';
import Strategy from './model/Strategy';
import Target from './model/Target';
import TargetArtifact from './model/TargetArtifact';
import TargetAttribute from './model/TargetAttribute';
import TargetNotificationEvent from './model/TargetNotificationEvent';
import TargetRender from './model/TargetRender';
import TargetsPresentCondition from './model/TargetsPresentCondition';
import TargetsTypeCondition from './model/TargetsTypeCondition';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import VerifyJobRun from './model/VerifyJobRun';
import ProjectsApi from './api/ProjectsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudDeployApi = require('index'); // See note below*.
* var xxxSvc = new CloudDeployApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudDeployApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudDeployApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudDeployApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdvanceChildRolloutJobRun model constructor.
     * @property {module:model/AdvanceChildRolloutJobRun}
     */
    AdvanceChildRolloutJobRun,

    /**
     * The AdvanceRolloutOperation model constructor.
     * @property {module:model/AdvanceRolloutOperation}
     */
    AdvanceRolloutOperation,

    /**
     * The AdvanceRolloutRequest model constructor.
     * @property {module:model/AdvanceRolloutRequest}
     */
    AdvanceRolloutRequest,

    /**
     * The AdvanceRolloutRule model constructor.
     * @property {module:model/AdvanceRolloutRule}
     */
    AdvanceRolloutRule,

    /**
     * The AnthosCluster model constructor.
     * @property {module:model/AnthosCluster}
     */
    AnthosCluster,

    /**
     * The ApproveRolloutRequest model constructor.
     * @property {module:model/ApproveRolloutRequest}
     */
    ApproveRolloutRequest,

    /**
     * The AuditConfig model constructor.
     * @property {module:model/AuditConfig}
     */
    AuditConfig,

    /**
     * The AuditLogConfig model constructor.
     * @property {module:model/AuditLogConfig}
     */
    AuditLogConfig,

    /**
     * The Automation model constructor.
     * @property {module:model/Automation}
     */
    Automation,

    /**
     * The AutomationEvent model constructor.
     * @property {module:model/AutomationEvent}
     */
    AutomationEvent,

    /**
     * The AutomationResourceSelector model constructor.
     * @property {module:model/AutomationResourceSelector}
     */
    AutomationResourceSelector,

    /**
     * The AutomationRolloutMetadata model constructor.
     * @property {module:model/AutomationRolloutMetadata}
     */
    AutomationRolloutMetadata,

    /**
     * The AutomationRule model constructor.
     * @property {module:model/AutomationRule}
     */
    AutomationRule,

    /**
     * The AutomationRuleCondition model constructor.
     * @property {module:model/AutomationRuleCondition}
     */
    AutomationRuleCondition,

    /**
     * The AutomationRun model constructor.
     * @property {module:model/AutomationRun}
     */
    AutomationRun,

    /**
     * The AutomationRunEvent model constructor.
     * @property {module:model/AutomationRunEvent}
     */
    AutomationRunEvent,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The BuildArtifact model constructor.
     * @property {module:model/BuildArtifact}
     */
    BuildArtifact,

    /**
     * The Canary model constructor.
     * @property {module:model/Canary}
     */
    Canary,

    /**
     * The CanaryDeployment model constructor.
     * @property {module:model/CanaryDeployment}
     */
    CanaryDeployment,

    /**
     * The ChildRolloutJobs model constructor.
     * @property {module:model/ChildRolloutJobs}
     */
    ChildRolloutJobs,

    /**
     * The CloudRunConfig model constructor.
     * @property {module:model/CloudRunConfig}
     */
    CloudRunConfig,

    /**
     * The CloudRunLocation model constructor.
     * @property {module:model/CloudRunLocation}
     */
    CloudRunLocation,

    /**
     * The CloudRunMetadata model constructor.
     * @property {module:model/CloudRunMetadata}
     */
    CloudRunMetadata,

    /**
     * The CloudRunRenderMetadata model constructor.
     * @property {module:model/CloudRunRenderMetadata}
     */
    CloudRunRenderMetadata,

    /**
     * The Config model constructor.
     * @property {module:model/Config}
     */
    Config,

    /**
     * The CreateChildRolloutJobRun model constructor.
     * @property {module:model/CreateChildRolloutJobRun}
     */
    CreateChildRolloutJobRun,

    /**
     * The CustomCanaryDeployment model constructor.
     * @property {module:model/CustomCanaryDeployment}
     */
    CustomCanaryDeployment,

    /**
     * The CustomMetadata model constructor.
     * @property {module:model/CustomMetadata}
     */
    CustomMetadata,

    /**
     * The CustomTarget model constructor.
     * @property {module:model/CustomTarget}
     */
    CustomTarget,

    /**
     * The CustomTargetDeployMetadata model constructor.
     * @property {module:model/CustomTargetDeployMetadata}
     */
    CustomTargetDeployMetadata,

    /**
     * The CustomTargetSkaffoldActions model constructor.
     * @property {module:model/CustomTargetSkaffoldActions}
     */
    CustomTargetSkaffoldActions,

    /**
     * The CustomTargetType model constructor.
     * @property {module:model/CustomTargetType}
     */
    CustomTargetType,

    /**
     * The DefaultPool model constructor.
     * @property {module:model/DefaultPool}
     */
    DefaultPool,

    /**
     * The DeliveryPipeline model constructor.
     * @property {module:model/DeliveryPipeline}
     */
    DeliveryPipeline,

    /**
     * The DeliveryPipelineNotificationEvent model constructor.
     * @property {module:model/DeliveryPipelineNotificationEvent}
     */
    DeliveryPipelineNotificationEvent,

    /**
     * The DeployArtifact model constructor.
     * @property {module:model/DeployArtifact}
     */
    DeployArtifact,

    /**
     * The DeployJobRun model constructor.
     * @property {module:model/DeployJobRun}
     */
    DeployJobRun,

    /**
     * The DeployJobRunMetadata model constructor.
     * @property {module:model/DeployJobRunMetadata}
     */
    DeployJobRunMetadata,

    /**
     * The DeployParameters model constructor.
     * @property {module:model/DeployParameters}
     */
    DeployParameters,

    /**
     * The DeploymentJobs model constructor.
     * @property {module:model/DeploymentJobs}
     */
    DeploymentJobs,

    /**
     * The ExecutionConfig model constructor.
     * @property {module:model/ExecutionConfig}
     */
    ExecutionConfig,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The GatewayServiceMesh model constructor.
     * @property {module:model/GatewayServiceMesh}
     */
    GatewayServiceMesh,

    /**
     * The GkeCluster model constructor.
     * @property {module:model/GkeCluster}
     */
    GkeCluster,

    /**
     * The IgnoreJobRequest model constructor.
     * @property {module:model/IgnoreJobRequest}
     */
    IgnoreJobRequest,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobRun model constructor.
     * @property {module:model/JobRun}
     */
    JobRun,

    /**
     * The JobRunNotificationEvent model constructor.
     * @property {module:model/JobRunNotificationEvent}
     */
    JobRunNotificationEvent,

    /**
     * The KubernetesConfig model constructor.
     * @property {module:model/KubernetesConfig}
     */
    KubernetesConfig,

    /**
     * The ListAutomationRunsResponse model constructor.
     * @property {module:model/ListAutomationRunsResponse}
     */
    ListAutomationRunsResponse,

    /**
     * The ListAutomationsResponse model constructor.
     * @property {module:model/ListAutomationsResponse}
     */
    ListAutomationsResponse,

    /**
     * The ListCustomTargetTypesResponse model constructor.
     * @property {module:model/ListCustomTargetTypesResponse}
     */
    ListCustomTargetTypesResponse,

    /**
     * The ListDeliveryPipelinesResponse model constructor.
     * @property {module:model/ListDeliveryPipelinesResponse}
     */
    ListDeliveryPipelinesResponse,

    /**
     * The ListJobRunsResponse model constructor.
     * @property {module:model/ListJobRunsResponse}
     */
    ListJobRunsResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListReleasesResponse model constructor.
     * @property {module:model/ListReleasesResponse}
     */
    ListReleasesResponse,

    /**
     * The ListRolloutsResponse model constructor.
     * @property {module:model/ListRolloutsResponse}
     */
    ListRolloutsResponse,

    /**
     * The ListTargetsResponse model constructor.
     * @property {module:model/ListTargetsResponse}
     */
    ListTargetsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The ModelDate model constructor.
     * @property {module:model/ModelDate}
     */
    ModelDate,

    /**
     * The MultiTarget model constructor.
     * @property {module:model/MultiTarget}
     */
    MultiTarget,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The Phase model constructor.
     * @property {module:model/Phase}
     */
    Phase,

    /**
     * The PhaseArtifact model constructor.
     * @property {module:model/PhaseArtifact}
     */
    PhaseArtifact,

    /**
     * The PhaseConfig model constructor.
     * @property {module:model/PhaseConfig}
     */
    PhaseConfig,

    /**
     * The PipelineCondition model constructor.
     * @property {module:model/PipelineCondition}
     */
    PipelineCondition,

    /**
     * The PipelineReadyCondition model constructor.
     * @property {module:model/PipelineReadyCondition}
     */
    PipelineReadyCondition,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The Postdeploy model constructor.
     * @property {module:model/Postdeploy}
     */
    Postdeploy,

    /**
     * The PostdeployJob model constructor.
     * @property {module:model/PostdeployJob}
     */
    PostdeployJob,

    /**
     * The PostdeployJobRun model constructor.
     * @property {module:model/PostdeployJobRun}
     */
    PostdeployJobRun,

    /**
     * The Predeploy model constructor.
     * @property {module:model/Predeploy}
     */
    Predeploy,

    /**
     * The PredeployJob model constructor.
     * @property {module:model/PredeployJob}
     */
    PredeployJob,

    /**
     * The PredeployJobRun model constructor.
     * @property {module:model/PredeployJobRun}
     */
    PredeployJobRun,

    /**
     * The PrivatePool model constructor.
     * @property {module:model/PrivatePool}
     */
    PrivatePool,

    /**
     * The PromoteReleaseOperation model constructor.
     * @property {module:model/PromoteReleaseOperation}
     */
    PromoteReleaseOperation,

    /**
     * The PromoteReleaseRule model constructor.
     * @property {module:model/PromoteReleaseRule}
     */
    PromoteReleaseRule,

    /**
     * The Release model constructor.
     * @property {module:model/Release}
     */
    Release,

    /**
     * The ReleaseCondition model constructor.
     * @property {module:model/ReleaseCondition}
     */
    ReleaseCondition,

    /**
     * The ReleaseNotificationEvent model constructor.
     * @property {module:model/ReleaseNotificationEvent}
     */
    ReleaseNotificationEvent,

    /**
     * The ReleaseReadyCondition model constructor.
     * @property {module:model/ReleaseReadyCondition}
     */
    ReleaseReadyCondition,

    /**
     * The ReleaseRenderEvent model constructor.
     * @property {module:model/ReleaseRenderEvent}
     */
    ReleaseRenderEvent,

    /**
     * The RenderMetadata model constructor.
     * @property {module:model/RenderMetadata}
     */
    RenderMetadata,

    /**
     * The RepairMode model constructor.
     * @property {module:model/RepairMode}
     */
    RepairMode,

    /**
     * The RepairPhase model constructor.
     * @property {module:model/RepairPhase}
     */
    RepairPhase,

    /**
     * The RepairRolloutOperation model constructor.
     * @property {module:model/RepairRolloutOperation}
     */
    RepairRolloutOperation,

    /**
     * The RepairRolloutRule model constructor.
     * @property {module:model/RepairRolloutRule}
     */
    RepairRolloutRule,

    /**
     * The Retry model constructor.
     * @property {module:model/Retry}
     */
    Retry,

    /**
     * The RetryAttempt model constructor.
     * @property {module:model/RetryAttempt}
     */
    RetryAttempt,

    /**
     * The RetryJobRequest model constructor.
     * @property {module:model/RetryJobRequest}
     */
    RetryJobRequest,

    /**
     * The RetryPhase model constructor.
     * @property {module:model/RetryPhase}
     */
    RetryPhase,

    /**
     * The Rollback model constructor.
     * @property {module:model/Rollback}
     */
    Rollback,

    /**
     * The RollbackAttempt model constructor.
     * @property {module:model/RollbackAttempt}
     */
    RollbackAttempt,

    /**
     * The RollbackTargetConfig model constructor.
     * @property {module:model/RollbackTargetConfig}
     */
    RollbackTargetConfig,

    /**
     * The RollbackTargetRequest model constructor.
     * @property {module:model/RollbackTargetRequest}
     */
    RollbackTargetRequest,

    /**
     * The RollbackTargetResponse model constructor.
     * @property {module:model/RollbackTargetResponse}
     */
    RollbackTargetResponse,

    /**
     * The Rollout model constructor.
     * @property {module:model/Rollout}
     */
    Rollout,

    /**
     * The RolloutNotificationEvent model constructor.
     * @property {module:model/RolloutNotificationEvent}
     */
    RolloutNotificationEvent,

    /**
     * The RolloutUpdateEvent model constructor.
     * @property {module:model/RolloutUpdateEvent}
     */
    RolloutUpdateEvent,

    /**
     * The RuntimeConfig model constructor.
     * @property {module:model/RuntimeConfig}
     */
    RuntimeConfig,

    /**
     * The SerialPipeline model constructor.
     * @property {module:model/SerialPipeline}
     */
    SerialPipeline,

    /**
     * The ServiceNetworking model constructor.
     * @property {module:model/ServiceNetworking}
     */
    ServiceNetworking,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The SkaffoldGCSSource model constructor.
     * @property {module:model/SkaffoldGCSSource}
     */
    SkaffoldGCSSource,

    /**
     * The SkaffoldGitSource model constructor.
     * @property {module:model/SkaffoldGitSource}
     */
    SkaffoldGitSource,

    /**
     * The SkaffoldModules model constructor.
     * @property {module:model/SkaffoldModules}
     */
    SkaffoldModules,

    /**
     * The SkaffoldSupportedCondition model constructor.
     * @property {module:model/SkaffoldSupportedCondition}
     */
    SkaffoldSupportedCondition,

    /**
     * The SkaffoldVersion model constructor.
     * @property {module:model/SkaffoldVersion}
     */
    SkaffoldVersion,

    /**
     * The Stage model constructor.
     * @property {module:model/Stage}
     */
    Stage,

    /**
     * The Standard model constructor.
     * @property {module:model/Standard}
     */
    Standard,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The Strategy model constructor.
     * @property {module:model/Strategy}
     */
    Strategy,

    /**
     * The Target model constructor.
     * @property {module:model/Target}
     */
    Target,

    /**
     * The TargetArtifact model constructor.
     * @property {module:model/TargetArtifact}
     */
    TargetArtifact,

    /**
     * The TargetAttribute model constructor.
     * @property {module:model/TargetAttribute}
     */
    TargetAttribute,

    /**
     * The TargetNotificationEvent model constructor.
     * @property {module:model/TargetNotificationEvent}
     */
    TargetNotificationEvent,

    /**
     * The TargetRender model constructor.
     * @property {module:model/TargetRender}
     */
    TargetRender,

    /**
     * The TargetsPresentCondition model constructor.
     * @property {module:model/TargetsPresentCondition}
     */
    TargetsPresentCondition,

    /**
     * The TargetsTypeCondition model constructor.
     * @property {module:model/TargetsTypeCondition}
     */
    TargetsTypeCondition,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
     * The VerifyJobRun model constructor.
     * @property {module:model/VerifyJobRun}
     */
    VerifyJobRun,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
