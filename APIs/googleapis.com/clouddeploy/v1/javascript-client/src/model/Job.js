/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostdeployJob from './PostdeployJob';
import PredeployJob from './PredeployJob';

/**
 * The Job model module.
 * @module model/Job
 * @version v1
 */
class Job {
    /**
     * Constructs a new <code>Job</code>.
     * Job represents an operation for a &#x60;Rollout&#x60;.
     * @alias module:model/Job
     */
    constructor() { 
        
        Job.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Job} obj Optional instance to populate.
     * @return {module:model/Job} The populated <code>Job</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Job();

            if (data.hasOwnProperty('advanceChildRolloutJob')) {
                obj['advanceChildRolloutJob'] = ApiClient.convertToType(data['advanceChildRolloutJob'], Object);
            }
            if (data.hasOwnProperty('createChildRolloutJob')) {
                obj['createChildRolloutJob'] = ApiClient.convertToType(data['createChildRolloutJob'], Object);
            }
            if (data.hasOwnProperty('deployJob')) {
                obj['deployJob'] = ApiClient.convertToType(data['deployJob'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('jobRun')) {
                obj['jobRun'] = ApiClient.convertToType(data['jobRun'], 'String');
            }
            if (data.hasOwnProperty('postdeployJob')) {
                obj['postdeployJob'] = PostdeployJob.constructFromObject(data['postdeployJob']);
            }
            if (data.hasOwnProperty('predeployJob')) {
                obj['predeployJob'] = PredeployJob.constructFromObject(data['predeployJob']);
            }
            if (data.hasOwnProperty('skipMessage')) {
                obj['skipMessage'] = ApiClient.convertToType(data['skipMessage'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('verifyJob')) {
                obj['verifyJob'] = ApiClient.convertToType(data['verifyJob'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Job</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Job</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['jobRun'] && !(typeof data['jobRun'] === 'string' || data['jobRun'] instanceof String)) {
            throw new Error("Expected the field `jobRun` to be a primitive type in the JSON string but got " + data['jobRun']);
        }
        // validate the optional field `postdeployJob`
        if (data['postdeployJob']) { // data not null
          PostdeployJob.validateJSON(data['postdeployJob']);
        }
        // validate the optional field `predeployJob`
        if (data['predeployJob']) { // data not null
          PredeployJob.validateJSON(data['predeployJob']);
        }
        // ensure the json data is a string
        if (data['skipMessage'] && !(typeof data['skipMessage'] === 'string' || data['skipMessage'] instanceof String)) {
            throw new Error("Expected the field `skipMessage` to be a primitive type in the JSON string but got " + data['skipMessage']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * An advanceChildRollout Job.
 * @member {Object} advanceChildRolloutJob
 */
Job.prototype['advanceChildRolloutJob'] = undefined;

/**
 * A createChildRollout Job.
 * @member {Object} createChildRolloutJob
 */
Job.prototype['createChildRolloutJob'] = undefined;

/**
 * A deploy Job.
 * @member {Object} deployJob
 */
Job.prototype['deployJob'] = undefined;

/**
 * Output only. The ID of the Job.
 * @member {String} id
 */
Job.prototype['id'] = undefined;

/**
 * Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.
 * @member {String} jobRun
 */
Job.prototype['jobRun'] = undefined;

/**
 * @member {module:model/PostdeployJob} postdeployJob
 */
Job.prototype['postdeployJob'] = undefined;

/**
 * @member {module:model/PredeployJob} predeployJob
 */
Job.prototype['predeployJob'] = undefined;

/**
 * Output only. Additional information on why the Job was skipped, if available.
 * @member {String} skipMessage
 */
Job.prototype['skipMessage'] = undefined;

/**
 * Output only. The current state of the Job.
 * @member {module:model/Job.StateEnum} state
 */
Job.prototype['state'] = undefined;

/**
 * A verify Job.
 * @member {Object} verifyJob
 */
Job.prototype['verifyJob'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Job['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "ABORTED"
     * @const
     */
    "ABORTED": "ABORTED",

    /**
     * value: "SKIPPED"
     * @const
     */
    "SKIPPED": "SKIPPED",

    /**
     * value: "IGNORED"
     * @const
     */
    "IGNORED": "IGNORED"
};



export default Job;

