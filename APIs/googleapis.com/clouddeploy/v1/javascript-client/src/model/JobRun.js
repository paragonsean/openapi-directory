/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvanceChildRolloutJobRun from './AdvanceChildRolloutJobRun';
import CreateChildRolloutJobRun from './CreateChildRolloutJobRun';
import DeployJobRun from './DeployJobRun';
import PostdeployJobRun from './PostdeployJobRun';
import PredeployJobRun from './PredeployJobRun';
import VerifyJobRun from './VerifyJobRun';

/**
 * The JobRun model module.
 * @module model/JobRun
 * @version v1
 */
class JobRun {
    /**
     * Constructs a new <code>JobRun</code>.
     * A &#x60;JobRun&#x60; resource in the Cloud Deploy API. A &#x60;JobRun&#x60; contains information of a single &#x60;Rollout&#x60; job evaluation.
     * @alias module:model/JobRun
     */
    constructor() { 
        
        JobRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobRun} obj Optional instance to populate.
     * @return {module:model/JobRun} The populated <code>JobRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobRun();

            if (data.hasOwnProperty('advanceChildRolloutJobRun')) {
                obj['advanceChildRolloutJobRun'] = AdvanceChildRolloutJobRun.constructFromObject(data['advanceChildRolloutJobRun']);
            }
            if (data.hasOwnProperty('createChildRolloutJobRun')) {
                obj['createChildRolloutJobRun'] = CreateChildRolloutJobRun.constructFromObject(data['createChildRolloutJobRun']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('deployJobRun')) {
                obj['deployJobRun'] = DeployJobRun.constructFromObject(data['deployJobRun']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phaseId')) {
                obj['phaseId'] = ApiClient.convertToType(data['phaseId'], 'String');
            }
            if (data.hasOwnProperty('postdeployJobRun')) {
                obj['postdeployJobRun'] = PostdeployJobRun.constructFromObject(data['postdeployJobRun']);
            }
            if (data.hasOwnProperty('predeployJobRun')) {
                obj['predeployJobRun'] = PredeployJobRun.constructFromObject(data['predeployJobRun']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('verifyJobRun')) {
                obj['verifyJobRun'] = VerifyJobRun.constructFromObject(data['verifyJobRun']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobRun</code>.
     */
    static validateJSON(data) {
        // validate the optional field `advanceChildRolloutJobRun`
        if (data['advanceChildRolloutJobRun']) { // data not null
          AdvanceChildRolloutJobRun.validateJSON(data['advanceChildRolloutJobRun']);
        }
        // validate the optional field `createChildRolloutJobRun`
        if (data['createChildRolloutJobRun']) { // data not null
          CreateChildRolloutJobRun.validateJSON(data['createChildRolloutJobRun']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `deployJobRun`
        if (data['deployJobRun']) { // data not null
          DeployJobRun.validateJSON(data['deployJobRun']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['phaseId'] && !(typeof data['phaseId'] === 'string' || data['phaseId'] instanceof String)) {
            throw new Error("Expected the field `phaseId` to be a primitive type in the JSON string but got " + data['phaseId']);
        }
        // validate the optional field `postdeployJobRun`
        if (data['postdeployJobRun']) { // data not null
          PostdeployJobRun.validateJSON(data['postdeployJobRun']);
        }
        // validate the optional field `predeployJobRun`
        if (data['predeployJobRun']) { // data not null
          PredeployJobRun.validateJSON(data['predeployJobRun']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // validate the optional field `verifyJobRun`
        if (data['verifyJobRun']) { // data not null
          VerifyJobRun.validateJSON(data['verifyJobRun']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdvanceChildRolloutJobRun} advanceChildRolloutJobRun
 */
JobRun.prototype['advanceChildRolloutJobRun'] = undefined;

/**
 * @member {module:model/CreateChildRolloutJobRun} createChildRolloutJobRun
 */
JobRun.prototype['createChildRolloutJobRun'] = undefined;

/**
 * Output only. Time at which the `JobRun` was created.
 * @member {String} createTime
 */
JobRun.prototype['createTime'] = undefined;

/**
 * @member {module:model/DeployJobRun} deployJobRun
 */
JobRun.prototype['deployJobRun'] = undefined;

/**
 * Output only. Time at which the `JobRun` ended.
 * @member {String} endTime
 */
JobRun.prototype['endTime'] = undefined;

/**
 * Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
 * @member {String} etag
 */
JobRun.prototype['etag'] = undefined;

/**
 * Output only. ID of the `Rollout` job this `JobRun` corresponds to.
 * @member {String} jobId
 */
JobRun.prototype['jobId'] = undefined;

/**
 * Optional. Name of the `JobRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/{rollouts}/jobRuns/{uuid}`.
 * @member {String} name
 */
JobRun.prototype['name'] = undefined;

/**
 * Output only. ID of the `Rollout` phase this `JobRun` belongs in.
 * @member {String} phaseId
 */
JobRun.prototype['phaseId'] = undefined;

/**
 * @member {module:model/PostdeployJobRun} postdeployJobRun
 */
JobRun.prototype['postdeployJobRun'] = undefined;

/**
 * @member {module:model/PredeployJobRun} predeployJobRun
 */
JobRun.prototype['predeployJobRun'] = undefined;

/**
 * Output only. Time at which the `JobRun` was started.
 * @member {String} startTime
 */
JobRun.prototype['startTime'] = undefined;

/**
 * Output only. The current state of the `JobRun`.
 * @member {module:model/JobRun.StateEnum} state
 */
JobRun.prototype['state'] = undefined;

/**
 * Output only. Unique identifier of the `JobRun`.
 * @member {String} uid
 */
JobRun.prototype['uid'] = undefined;

/**
 * @member {module:model/VerifyJobRun} verifyJobRun
 */
JobRun.prototype['verifyJobRun'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
JobRun['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "TERMINATING"
     * @const
     */
    "TERMINATING": "TERMINATING",

    /**
     * value: "TERMINATED"
     * @const
     */
    "TERMINATED": "TERMINATED"
};



export default JobRun;

