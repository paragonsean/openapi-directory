/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RolloutNotificationEvent model module.
 * @module model/RolloutNotificationEvent
 * @version v1
 */
class RolloutNotificationEvent {
    /**
     * Constructs a new <code>RolloutNotificationEvent</code>.
     * Payload proto for \&quot;clouddeploy.googleapis.com/rollout_notification\&quot; Platform Log event that describes the failure to send rollout status change Pub/Sub notification.
     * @alias module:model/RolloutNotificationEvent
     */
    constructor() { 
        
        RolloutNotificationEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RolloutNotificationEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RolloutNotificationEvent} obj Optional instance to populate.
     * @return {module:model/RolloutNotificationEvent} The populated <code>RolloutNotificationEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RolloutNotificationEvent();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('pipelineUid')) {
                obj['pipelineUid'] = ApiClient.convertToType(data['pipelineUid'], 'String');
            }
            if (data.hasOwnProperty('release')) {
                obj['release'] = ApiClient.convertToType(data['release'], 'String');
            }
            if (data.hasOwnProperty('releaseUid')) {
                obj['releaseUid'] = ApiClient.convertToType(data['releaseUid'], 'String');
            }
            if (data.hasOwnProperty('rollout')) {
                obj['rollout'] = ApiClient.convertToType(data['rollout'], 'String');
            }
            if (data.hasOwnProperty('rolloutUid')) {
                obj['rolloutUid'] = ApiClient.convertToType(data['rolloutUid'], 'String');
            }
            if (data.hasOwnProperty('targetId')) {
                obj['targetId'] = ApiClient.convertToType(data['targetId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RolloutNotificationEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RolloutNotificationEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['pipelineUid'] && !(typeof data['pipelineUid'] === 'string' || data['pipelineUid'] instanceof String)) {
            throw new Error("Expected the field `pipelineUid` to be a primitive type in the JSON string but got " + data['pipelineUid']);
        }
        // ensure the json data is a string
        if (data['release'] && !(typeof data['release'] === 'string' || data['release'] instanceof String)) {
            throw new Error("Expected the field `release` to be a primitive type in the JSON string but got " + data['release']);
        }
        // ensure the json data is a string
        if (data['releaseUid'] && !(typeof data['releaseUid'] === 'string' || data['releaseUid'] instanceof String)) {
            throw new Error("Expected the field `releaseUid` to be a primitive type in the JSON string but got " + data['releaseUid']);
        }
        // ensure the json data is a string
        if (data['rollout'] && !(typeof data['rollout'] === 'string' || data['rollout'] instanceof String)) {
            throw new Error("Expected the field `rollout` to be a primitive type in the JSON string but got " + data['rollout']);
        }
        // ensure the json data is a string
        if (data['rolloutUid'] && !(typeof data['rolloutUid'] === 'string' || data['rolloutUid'] instanceof String)) {
            throw new Error("Expected the field `rolloutUid` to be a primitive type in the JSON string but got " + data['rolloutUid']);
        }
        // ensure the json data is a string
        if (data['targetId'] && !(typeof data['targetId'] === 'string' || data['targetId'] instanceof String)) {
            throw new Error("Expected the field `targetId` to be a primitive type in the JSON string but got " + data['targetId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Debug message for when a notification fails to send.
 * @member {String} message
 */
RolloutNotificationEvent.prototype['message'] = undefined;

/**
 * Unique identifier of the `DeliveryPipeline`.
 * @member {String} pipelineUid
 */
RolloutNotificationEvent.prototype['pipelineUid'] = undefined;

/**
 * The name of the `Release`.
 * @member {String} release
 */
RolloutNotificationEvent.prototype['release'] = undefined;

/**
 * Unique identifier of the `Release`.
 * @member {String} releaseUid
 */
RolloutNotificationEvent.prototype['releaseUid'] = undefined;

/**
 * The name of the `Rollout`.
 * @member {String} rollout
 */
RolloutNotificationEvent.prototype['rollout'] = undefined;

/**
 * Unique identifier of the `Rollout`.
 * @member {String} rolloutUid
 */
RolloutNotificationEvent.prototype['rolloutUid'] = undefined;

/**
 * ID of the `Target` that the rollout is deployed to.
 * @member {String} targetId
 */
RolloutNotificationEvent.prototype['targetId'] = undefined;

/**
 * Type of this notification, e.g. for a Pub/Sub failure.
 * @member {module:model/RolloutNotificationEvent.TypeEnum} type
 */
RolloutNotificationEvent.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
RolloutNotificationEvent['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "TYPE_PUBSUB_NOTIFICATION_FAILURE"
     * @const
     */
    "PUBSUB_NOTIFICATION_FAILURE": "TYPE_PUBSUB_NOTIFICATION_FAILURE",

    /**
     * value: "TYPE_RESOURCE_STATE_CHANGE"
     * @const
     */
    "RESOURCE_STATE_CHANGE": "TYPE_RESOURCE_STATE_CHANGE",

    /**
     * value: "TYPE_PROCESS_ABORTED"
     * @const
     */
    "PROCESS_ABORTED": "TYPE_PROCESS_ABORTED",

    /**
     * value: "TYPE_RESTRICTION_VIOLATED"
     * @const
     */
    "RESTRICTION_VIOLATED": "TYPE_RESTRICTION_VIOLATED",

    /**
     * value: "TYPE_RESOURCE_DELETED"
     * @const
     */
    "RESOURCE_DELETED": "TYPE_RESOURCE_DELETED",

    /**
     * value: "TYPE_ROLLOUT_UPDATE"
     * @const
     */
    "ROLLOUT_UPDATE": "TYPE_ROLLOUT_UPDATE",

    /**
     * value: "TYPE_DEPLOY_POLICY_EVALUATION"
     * @const
     */
    "DEPLOY_POLICY_EVALUATION": "TYPE_DEPLOY_POLICY_EVALUATION",

    /**
     * value: "TYPE_RENDER_STATUES_CHANGE"
     * @const
     */
    "RENDER_STATUES_CHANGE": "TYPE_RENDER_STATUES_CHANGE"
};



export default RolloutNotificationEvent;

