/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TargetAttribute from './TargetAttribute';

/**
 * The AutomationResourceSelector model module.
 * @module model/AutomationResourceSelector
 * @version v1
 */
class AutomationResourceSelector {
    /**
     * Constructs a new <code>AutomationResourceSelector</code>.
     * AutomationResourceSelector contains the information to select the resources to which an Automation is going to be applied.
     * @alias module:model/AutomationResourceSelector
     */
    constructor() { 
        
        AutomationResourceSelector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutomationResourceSelector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutomationResourceSelector} obj Optional instance to populate.
     * @return {module:model/AutomationResourceSelector} The populated <code>AutomationResourceSelector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutomationResourceSelector();

            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], [TargetAttribute]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutomationResourceSelector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutomationResourceSelector</code>.
     */
    static validateJSON(data) {
        if (data['targets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['targets'])) {
                throw new Error("Expected the field `targets` to be an array in the JSON data but got " + data['targets']);
            }
            // validate the optional field `targets` (array)
            for (const item of data['targets']) {
                TargetAttribute.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Contains attributes about a target.
 * @member {Array.<module:model/TargetAttribute>} targets
 */
AutomationResourceSelector.prototype['targets'] = undefined;






export default AutomationResourceSelector;

