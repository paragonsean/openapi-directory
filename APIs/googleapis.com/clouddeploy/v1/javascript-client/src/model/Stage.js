/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeployParameters from './DeployParameters';
import Strategy from './Strategy';

/**
 * The Stage model module.
 * @module model/Stage
 * @version v1
 */
class Stage {
    /**
     * Constructs a new <code>Stage</code>.
     * Stage specifies a location to which to deploy.
     * @alias module:model/Stage
     */
    constructor() { 
        
        Stage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Stage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Stage} obj Optional instance to populate.
     * @return {module:model/Stage} The populated <code>Stage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Stage();

            if (data.hasOwnProperty('deployParameters')) {
                obj['deployParameters'] = ApiClient.convertToType(data['deployParameters'], [DeployParameters]);
            }
            if (data.hasOwnProperty('profiles')) {
                obj['profiles'] = ApiClient.convertToType(data['profiles'], ['String']);
            }
            if (data.hasOwnProperty('strategy')) {
                obj['strategy'] = Strategy.constructFromObject(data['strategy']);
            }
            if (data.hasOwnProperty('targetId')) {
                obj['targetId'] = ApiClient.convertToType(data['targetId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Stage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Stage</code>.
     */
    static validateJSON(data) {
        if (data['deployParameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['deployParameters'])) {
                throw new Error("Expected the field `deployParameters` to be an array in the JSON data but got " + data['deployParameters']);
            }
            // validate the optional field `deployParameters` (array)
            for (const item of data['deployParameters']) {
                DeployParameters.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['profiles'])) {
            throw new Error("Expected the field `profiles` to be an array in the JSON data but got " + data['profiles']);
        }
        // validate the optional field `strategy`
        if (data['strategy']) { // data not null
          Strategy.validateJSON(data['strategy']);
        }
        // ensure the json data is a string
        if (data['targetId'] && !(typeof data['targetId'] === 'string' || data['targetId'] instanceof String)) {
            throw new Error("Expected the field `targetId` to be a primitive type in the JSON string but got " + data['targetId']);
        }

        return true;
    }


}



/**
 * Optional. The deploy parameters to use for the target in this stage.
 * @member {Array.<module:model/DeployParameters>} deployParameters
 */
Stage.prototype['deployParameters'] = undefined;

/**
 * Skaffold profiles to use when rendering the manifest for this stage's `Target`.
 * @member {Array.<String>} profiles
 */
Stage.prototype['profiles'] = undefined;

/**
 * @member {module:model/Strategy} strategy
 */
Stage.prototype['strategy'] = undefined;

/**
 * The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.
 * @member {String} targetId
 */
Stage.prototype['targetId'] = undefined;






export default Stage;

