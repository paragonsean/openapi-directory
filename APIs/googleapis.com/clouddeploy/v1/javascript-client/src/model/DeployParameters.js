/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeployParameters model module.
 * @module model/DeployParameters
 * @version v1
 */
class DeployParameters {
    /**
     * Constructs a new <code>DeployParameters</code>.
     * DeployParameters contains deploy parameters information.
     * @alias module:model/DeployParameters
     */
    constructor() { 
        
        DeployParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeployParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeployParameters} obj Optional instance to populate.
     * @return {module:model/DeployParameters} The populated <code>DeployParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeployParameters();

            if (data.hasOwnProperty('matchTargetLabels')) {
                obj['matchTargetLabels'] = ApiClient.convertToType(data['matchTargetLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeployParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeployParameters</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).
 * @member {Object.<String, String>} matchTargetLabels
 */
DeployParameters.prototype['matchTargetLabels'] = undefined;

/**
 * Required. Values are deploy parameters in key-value pairs.
 * @member {Object.<String, String>} values
 */
DeployParameters.prototype['values'] = undefined;






export default DeployParameters;

