/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SkaffoldGCSSource from './SkaffoldGCSSource';
import SkaffoldGitSource from './SkaffoldGitSource';

/**
 * The SkaffoldModules model module.
 * @module model/SkaffoldModules
 * @version v1
 */
class SkaffoldModules {
    /**
     * Constructs a new <code>SkaffoldModules</code>.
     * Skaffold Config modules and their remote source.
     * @alias module:model/SkaffoldModules
     */
    constructor() { 
        
        SkaffoldModules.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SkaffoldModules</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SkaffoldModules} obj Optional instance to populate.
     * @return {module:model/SkaffoldModules} The populated <code>SkaffoldModules</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SkaffoldModules();

            if (data.hasOwnProperty('configs')) {
                obj['configs'] = ApiClient.convertToType(data['configs'], ['String']);
            }
            if (data.hasOwnProperty('git')) {
                obj['git'] = SkaffoldGitSource.constructFromObject(data['git']);
            }
            if (data.hasOwnProperty('googleCloudStorage')) {
                obj['googleCloudStorage'] = SkaffoldGCSSource.constructFromObject(data['googleCloudStorage']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SkaffoldModules</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SkaffoldModules</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['configs'])) {
            throw new Error("Expected the field `configs` to be an array in the JSON data but got " + data['configs']);
        }
        // validate the optional field `git`
        if (data['git']) { // data not null
          SkaffoldGitSource.validateJSON(data['git']);
        }
        // validate the optional field `googleCloudStorage`
        if (data['googleCloudStorage']) { // data not null
          SkaffoldGCSSource.validateJSON(data['googleCloudStorage']);
        }

        return true;
    }


}



/**
 * Optional. The Skaffold Config modules to use from the specified source.
 * @member {Array.<String>} configs
 */
SkaffoldModules.prototype['configs'] = undefined;

/**
 * @member {module:model/SkaffoldGitSource} git
 */
SkaffoldModules.prototype['git'] = undefined;

/**
 * @member {module:model/SkaffoldGCSSource} googleCloudStorage
 */
SkaffoldModules.prototype['googleCloudStorage'] = undefined;






export default SkaffoldModules;

