/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DefaultPool from './DefaultPool';
import PrivatePool from './PrivatePool';

/**
 * The ExecutionConfig model module.
 * @module model/ExecutionConfig
 * @version v1
 */
class ExecutionConfig {
    /**
     * Constructs a new <code>ExecutionConfig</code>.
     * Configuration of the environment to use when calling Skaffold.
     * @alias module:model/ExecutionConfig
     */
    constructor() { 
        
        ExecutionConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExecutionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecutionConfig} obj Optional instance to populate.
     * @return {module:model/ExecutionConfig} The populated <code>ExecutionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecutionConfig();

            if (data.hasOwnProperty('artifactStorage')) {
                obj['artifactStorage'] = ApiClient.convertToType(data['artifactStorage'], 'String');
            }
            if (data.hasOwnProperty('defaultPool')) {
                obj['defaultPool'] = DefaultPool.constructFromObject(data['defaultPool']);
            }
            if (data.hasOwnProperty('executionTimeout')) {
                obj['executionTimeout'] = ApiClient.convertToType(data['executionTimeout'], 'String');
            }
            if (data.hasOwnProperty('privatePool')) {
                obj['privatePool'] = PrivatePool.constructFromObject(data['privatePool']);
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('usages')) {
                obj['usages'] = ApiClient.convertToType(data['usages'], ['String']);
            }
            if (data.hasOwnProperty('workerPool')) {
                obj['workerPool'] = ApiClient.convertToType(data['workerPool'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecutionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecutionConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['artifactStorage'] && !(typeof data['artifactStorage'] === 'string' || data['artifactStorage'] instanceof String)) {
            throw new Error("Expected the field `artifactStorage` to be a primitive type in the JSON string but got " + data['artifactStorage']);
        }
        // validate the optional field `defaultPool`
        if (data['defaultPool']) { // data not null
          DefaultPool.validateJSON(data['defaultPool']);
        }
        // ensure the json data is a string
        if (data['executionTimeout'] && !(typeof data['executionTimeout'] === 'string' || data['executionTimeout'] instanceof String)) {
            throw new Error("Expected the field `executionTimeout` to be a primitive type in the JSON string but got " + data['executionTimeout']);
        }
        // validate the optional field `privatePool`
        if (data['privatePool']) { // data not null
          PrivatePool.validateJSON(data['privatePool']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['usages'])) {
            throw new Error("Expected the field `usages` to be an array in the JSON data but got " + data['usages']);
        }
        // ensure the json data is a string
        if (data['workerPool'] && !(typeof data['workerPool'] === 'string' || data['workerPool'] instanceof String)) {
            throw new Error("Expected the field `workerPool` to be a primitive type in the JSON string but got " + data['workerPool']);
        }

        return true;
    }


}



/**
 * Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.
 * @member {String} artifactStorage
 */
ExecutionConfig.prototype['artifactStorage'] = undefined;

/**
 * @member {module:model/DefaultPool} defaultPool
 */
ExecutionConfig.prototype['defaultPool'] = undefined;

/**
 * Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
 * @member {String} executionTimeout
 */
ExecutionConfig.prototype['executionTimeout'] = undefined;

/**
 * @member {module:model/PrivatePool} privatePool
 */
ExecutionConfig.prototype['privatePool'] = undefined;

/**
 * Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
 * @member {String} serviceAccount
 */
ExecutionConfig.prototype['serviceAccount'] = undefined;

/**
 * Required. Usages when this configuration should be applied.
 * @member {Array.<module:model/ExecutionConfig.UsagesEnum>} usages
 */
ExecutionConfig.prototype['usages'] = undefined;

/**
 * Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
 * @member {String} workerPool
 */
ExecutionConfig.prototype['workerPool'] = undefined;





/**
 * Allowed values for the <code>usages</code> property.
 * @enum {String}
 * @readonly
 */
ExecutionConfig['UsagesEnum'] = {

    /**
     * value: "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED"
     * @const
     */
    "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED": "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED",

    /**
     * value: "RENDER"
     * @const
     */
    "RENDER": "RENDER",

    /**
     * value: "DEPLOY"
     * @const
     */
    "DEPLOY": "DEPLOY",

    /**
     * value: "VERIFY"
     * @const
     */
    "VERIFY": "VERIFY",

    /**
     * value: "PREDEPLOY"
     * @const
     */
    "PREDEPLOY": "PREDEPLOY",

    /**
     * value: "POSTDEPLOY"
     * @const
     */
    "POSTDEPLOY": "POSTDEPLOY"
};



export default ExecutionConfig;

