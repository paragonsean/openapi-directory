/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PrivatePool model module.
 * @module model/PrivatePool
 * @version v1
 */
class PrivatePool {
    /**
     * Constructs a new <code>PrivatePool</code>.
     * Execution using a private Cloud Build pool.
     * @alias module:model/PrivatePool
     */
    constructor() { 
        
        PrivatePool.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PrivatePool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrivatePool} obj Optional instance to populate.
     * @return {module:model/PrivatePool} The populated <code>PrivatePool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrivatePool();

            if (data.hasOwnProperty('artifactStorage')) {
                obj['artifactStorage'] = ApiClient.convertToType(data['artifactStorage'], 'String');
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('workerPool')) {
                obj['workerPool'] = ApiClient.convertToType(data['workerPool'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrivatePool</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrivatePool</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['artifactStorage'] && !(typeof data['artifactStorage'] === 'string' || data['artifactStorage'] instanceof String)) {
            throw new Error("Expected the field `artifactStorage` to be a primitive type in the JSON string but got " + data['artifactStorage']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['workerPool'] && !(typeof data['workerPool'] === 'string' || data['workerPool'] instanceof String)) {
            throw new Error("Expected the field `workerPool` to be a primitive type in the JSON string but got " + data['workerPool']);
        }

        return true;
    }


}



/**
 * Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.
 * @member {String} artifactStorage
 */
PrivatePool.prototype['artifactStorage'] = undefined;

/**
 * Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
 * @member {String} serviceAccount
 */
PrivatePool.prototype['serviceAccount'] = undefined;

/**
 * Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.
 * @member {String} workerPool
 */
PrivatePool.prototype['workerPool'] = undefined;






export default PrivatePool;

