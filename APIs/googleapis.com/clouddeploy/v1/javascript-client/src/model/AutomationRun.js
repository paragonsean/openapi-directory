/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvanceRolloutOperation from './AdvanceRolloutOperation';
import Automation from './Automation';
import PromoteReleaseOperation from './PromoteReleaseOperation';
import RepairRolloutOperation from './RepairRolloutOperation';

/**
 * The AutomationRun model module.
 * @module model/AutomationRun
 * @version v1
 */
class AutomationRun {
    /**
     * Constructs a new <code>AutomationRun</code>.
     * An &#x60;AutomationRun&#x60; resource in the Cloud Deploy API. An &#x60;AutomationRun&#x60; represents an execution instance of an automation rule.
     * @alias module:model/AutomationRun
     */
    constructor() { 
        
        AutomationRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutomationRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutomationRun} obj Optional instance to populate.
     * @return {module:model/AutomationRun} The populated <code>AutomationRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutomationRun();

            if (data.hasOwnProperty('advanceRolloutOperation')) {
                obj['advanceRolloutOperation'] = AdvanceRolloutOperation.constructFromObject(data['advanceRolloutOperation']);
            }
            if (data.hasOwnProperty('automationId')) {
                obj['automationId'] = ApiClient.convertToType(data['automationId'], 'String');
            }
            if (data.hasOwnProperty('automationSnapshot')) {
                obj['automationSnapshot'] = Automation.constructFromObject(data['automationSnapshot']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('expireTime')) {
                obj['expireTime'] = ApiClient.convertToType(data['expireTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('promoteReleaseOperation')) {
                obj['promoteReleaseOperation'] = PromoteReleaseOperation.constructFromObject(data['promoteReleaseOperation']);
            }
            if (data.hasOwnProperty('repairRolloutOperation')) {
                obj['repairRolloutOperation'] = RepairRolloutOperation.constructFromObject(data['repairRolloutOperation']);
            }
            if (data.hasOwnProperty('ruleId')) {
                obj['ruleId'] = ApiClient.convertToType(data['ruleId'], 'String');
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateDescription')) {
                obj['stateDescription'] = ApiClient.convertToType(data['stateDescription'], 'String');
            }
            if (data.hasOwnProperty('targetId')) {
                obj['targetId'] = ApiClient.convertToType(data['targetId'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('waitUntilTime')) {
                obj['waitUntilTime'] = ApiClient.convertToType(data['waitUntilTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutomationRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutomationRun</code>.
     */
    static validateJSON(data) {
        // validate the optional field `advanceRolloutOperation`
        if (data['advanceRolloutOperation']) { // data not null
          AdvanceRolloutOperation.validateJSON(data['advanceRolloutOperation']);
        }
        // ensure the json data is a string
        if (data['automationId'] && !(typeof data['automationId'] === 'string' || data['automationId'] instanceof String)) {
            throw new Error("Expected the field `automationId` to be a primitive type in the JSON string but got " + data['automationId']);
        }
        // validate the optional field `automationSnapshot`
        if (data['automationSnapshot']) { // data not null
          Automation.validateJSON(data['automationSnapshot']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['expireTime'] && !(typeof data['expireTime'] === 'string' || data['expireTime'] instanceof String)) {
            throw new Error("Expected the field `expireTime` to be a primitive type in the JSON string but got " + data['expireTime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `promoteReleaseOperation`
        if (data['promoteReleaseOperation']) { // data not null
          PromoteReleaseOperation.validateJSON(data['promoteReleaseOperation']);
        }
        // validate the optional field `repairRolloutOperation`
        if (data['repairRolloutOperation']) { // data not null
          RepairRolloutOperation.validateJSON(data['repairRolloutOperation']);
        }
        // ensure the json data is a string
        if (data['ruleId'] && !(typeof data['ruleId'] === 'string' || data['ruleId'] instanceof String)) {
            throw new Error("Expected the field `ruleId` to be a primitive type in the JSON string but got " + data['ruleId']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['stateDescription'] && !(typeof data['stateDescription'] === 'string' || data['stateDescription'] instanceof String)) {
            throw new Error("Expected the field `stateDescription` to be a primitive type in the JSON string but got " + data['stateDescription']);
        }
        // ensure the json data is a string
        if (data['targetId'] && !(typeof data['targetId'] === 'string' || data['targetId'] instanceof String)) {
            throw new Error("Expected the field `targetId` to be a primitive type in the JSON string but got " + data['targetId']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // ensure the json data is a string
        if (data['waitUntilTime'] && !(typeof data['waitUntilTime'] === 'string' || data['waitUntilTime'] instanceof String)) {
            throw new Error("Expected the field `waitUntilTime` to be a primitive type in the JSON string but got " + data['waitUntilTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdvanceRolloutOperation} advanceRolloutOperation
 */
AutomationRun.prototype['advanceRolloutOperation'] = undefined;

/**
 * Output only. The ID of the automation that initiated the operation.
 * @member {String} automationId
 */
AutomationRun.prototype['automationId'] = undefined;

/**
 * @member {module:model/Automation} automationSnapshot
 */
AutomationRun.prototype['automationSnapshot'] = undefined;

/**
 * Output only. Time at which the `AutomationRun` was created.
 * @member {String} createTime
 */
AutomationRun.prototype['createTime'] = undefined;

/**
 * Output only. The weak etag of the `AutomationRun` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
 * @member {String} etag
 */
AutomationRun.prototype['etag'] = undefined;

/**
 * Output only. Time the `AutomationRun` expires. An `AutomationRun` expires after 14 days from its creation date.
 * @member {String} expireTime
 */
AutomationRun.prototype['expireTime'] = undefined;

/**
 * Output only. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
 * @member {String} name
 */
AutomationRun.prototype['name'] = undefined;

/**
 * @member {module:model/PromoteReleaseOperation} promoteReleaseOperation
 */
AutomationRun.prototype['promoteReleaseOperation'] = undefined;

/**
 * @member {module:model/RepairRolloutOperation} repairRolloutOperation
 */
AutomationRun.prototype['repairRolloutOperation'] = undefined;

/**
 * Output only. The ID of the automation rule that initiated the operation.
 * @member {String} ruleId
 */
AutomationRun.prototype['ruleId'] = undefined;

/**
 * Output only. Email address of the user-managed IAM service account that performs the operations against Cloud Deploy resources.
 * @member {String} serviceAccount
 */
AutomationRun.prototype['serviceAccount'] = undefined;

/**
 * Output only. Current state of the `AutomationRun`.
 * @member {module:model/AutomationRun.StateEnum} state
 */
AutomationRun.prototype['state'] = undefined;

/**
 * Output only. Explains the current state of the `AutomationRun`. Present only when an explanation is needed.
 * @member {String} stateDescription
 */
AutomationRun.prototype['stateDescription'] = undefined;

/**
 * Output only. The ID of the target that represents the promotion stage that initiates the `AutomationRun`. The value of this field is the last segment of a target name.
 * @member {String} targetId
 */
AutomationRun.prototype['targetId'] = undefined;

/**
 * Output only. Time at which the automationRun was updated.
 * @member {String} updateTime
 */
AutomationRun.prototype['updateTime'] = undefined;

/**
 * Output only. Earliest time the `AutomationRun` will attempt to resume. Wait-time is configured by `wait` in automation rule.
 * @member {String} waitUntilTime
 */
AutomationRun.prototype['waitUntilTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
AutomationRun['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "ABORTED"
     * @const
     */
    "ABORTED": "ABORTED"
};



export default AutomationRun;

