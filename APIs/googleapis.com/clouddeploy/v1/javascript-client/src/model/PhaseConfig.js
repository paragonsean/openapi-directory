/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Postdeploy from './Postdeploy';
import Predeploy from './Predeploy';

/**
 * The PhaseConfig model module.
 * @module model/PhaseConfig
 * @version v1
 */
class PhaseConfig {
    /**
     * Constructs a new <code>PhaseConfig</code>.
     * PhaseConfig represents the configuration for a phase in the custom canary deployment.
     * @alias module:model/PhaseConfig
     */
    constructor() { 
        
        PhaseConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhaseConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhaseConfig} obj Optional instance to populate.
     * @return {module:model/PhaseConfig} The populated <code>PhaseConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhaseConfig();

            if (data.hasOwnProperty('percentage')) {
                obj['percentage'] = ApiClient.convertToType(data['percentage'], 'Number');
            }
            if (data.hasOwnProperty('phaseId')) {
                obj['phaseId'] = ApiClient.convertToType(data['phaseId'], 'String');
            }
            if (data.hasOwnProperty('postdeploy')) {
                obj['postdeploy'] = Postdeploy.constructFromObject(data['postdeploy']);
            }
            if (data.hasOwnProperty('predeploy')) {
                obj['predeploy'] = Predeploy.constructFromObject(data['predeploy']);
            }
            if (data.hasOwnProperty('profiles')) {
                obj['profiles'] = ApiClient.convertToType(data['profiles'], ['String']);
            }
            if (data.hasOwnProperty('verify')) {
                obj['verify'] = ApiClient.convertToType(data['verify'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhaseConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhaseConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['phaseId'] && !(typeof data['phaseId'] === 'string' || data['phaseId'] instanceof String)) {
            throw new Error("Expected the field `phaseId` to be a primitive type in the JSON string but got " + data['phaseId']);
        }
        // validate the optional field `postdeploy`
        if (data['postdeploy']) { // data not null
          Postdeploy.validateJSON(data['postdeploy']);
        }
        // validate the optional field `predeploy`
        if (data['predeploy']) { // data not null
          Predeploy.validateJSON(data['predeploy']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['profiles'])) {
            throw new Error("Expected the field `profiles` to be an array in the JSON data but got " + data['profiles']);
        }

        return true;
    }


}



/**
 * Required. Percentage deployment for the phase.
 * @member {Number} percentage
 */
PhaseConfig.prototype['percentage'] = undefined;

/**
 * Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
 * @member {String} phaseId
 */
PhaseConfig.prototype['phaseId'] = undefined;

/**
 * @member {module:model/Postdeploy} postdeploy
 */
PhaseConfig.prototype['postdeploy'] = undefined;

/**
 * @member {module:model/Predeploy} predeploy
 */
PhaseConfig.prototype['predeploy'] = undefined;

/**
 * Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage.
 * @member {Array.<String>} profiles
 */
PhaseConfig.prototype['profiles'] = undefined;

/**
 * Whether to run verify tests after the deployment.
 * @member {Boolean} verify
 */
PhaseConfig.prototype['verify'] = undefined;






export default PhaseConfig;

