/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomTargetSkaffoldActions from './CustomTargetSkaffoldActions';

/**
 * The CustomTargetType model module.
 * @module model/CustomTargetType
 * @version v1
 */
class CustomTargetType {
    /**
     * Constructs a new <code>CustomTargetType</code>.
     * A &#x60;CustomTargetType&#x60; resource in the Cloud Deploy API. A &#x60;CustomTargetType&#x60; defines a type of custom target that can be referenced in a &#x60;Target&#x60; in order to facilitate deploying to other systems besides the supported runtimes.
     * @alias module:model/CustomTargetType
     */
    constructor() { 
        
        CustomTargetType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomTargetType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomTargetType} obj Optional instance to populate.
     * @return {module:model/CustomTargetType} The populated <code>CustomTargetType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomTargetType();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('customActions')) {
                obj['customActions'] = CustomTargetSkaffoldActions.constructFromObject(data['customActions']);
            }
            if (data.hasOwnProperty('customTargetTypeId')) {
                obj['customTargetTypeId'] = ApiClient.convertToType(data['customTargetTypeId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomTargetType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomTargetType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `customActions`
        if (data['customActions']) { // data not null
          CustomTargetSkaffoldActions.validateJSON(data['customActions']);
        }
        // ensure the json data is a string
        if (data['customTargetTypeId'] && !(typeof data['customTargetTypeId'] === 'string' || data['customTargetTypeId'] instanceof String)) {
            throw new Error("Expected the field `customTargetTypeId` to be a primitive type in the JSON string but got " + data['customTargetTypeId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
 * @member {Object.<String, String>} annotations
 */
CustomTargetType.prototype['annotations'] = undefined;

/**
 * Output only. Time at which the `CustomTargetType` was created.
 * @member {String} createTime
 */
CustomTargetType.prototype['createTime'] = undefined;

/**
 * @member {module:model/CustomTargetSkaffoldActions} customActions
 */
CustomTargetType.prototype['customActions'] = undefined;

/**
 * Output only. Resource id of the `CustomTargetType`.
 * @member {String} customTargetTypeId
 */
CustomTargetType.prototype['customTargetTypeId'] = undefined;

/**
 * Optional. Description of the `CustomTargetType`. Max length is 255 characters.
 * @member {String} description
 */
CustomTargetType.prototype['description'] = undefined;

/**
 * Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
 * @member {String} etag
 */
CustomTargetType.prototype['etag'] = undefined;

/**
 * Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
 * @member {Object.<String, String>} labels
 */
CustomTargetType.prototype['labels'] = undefined;

/**
 * Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
 * @member {String} name
 */
CustomTargetType.prototype['name'] = undefined;

/**
 * Output only. Unique identifier of the `CustomTargetType`.
 * @member {String} uid
 */
CustomTargetType.prototype['uid'] = undefined;

/**
 * Output only. Most recent time at which the `CustomTargetType` was updated.
 * @member {String} updateTime
 */
CustomTargetType.prototype['updateTime'] = undefined;






export default CustomTargetType;

