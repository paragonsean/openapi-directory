/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PromoteReleaseOperation model module.
 * @module model/PromoteReleaseOperation
 * @version v1
 */
class PromoteReleaseOperation {
    /**
     * Constructs a new <code>PromoteReleaseOperation</code>.
     * Contains the information of an automated promote-release operation.
     * @alias module:model/PromoteReleaseOperation
     */
    constructor() { 
        
        PromoteReleaseOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PromoteReleaseOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PromoteReleaseOperation} obj Optional instance to populate.
     * @return {module:model/PromoteReleaseOperation} The populated <code>PromoteReleaseOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PromoteReleaseOperation();

            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ApiClient.convertToType(data['phase'], 'String');
            }
            if (data.hasOwnProperty('rollout')) {
                obj['rollout'] = ApiClient.convertToType(data['rollout'], 'String');
            }
            if (data.hasOwnProperty('targetId')) {
                obj['targetId'] = ApiClient.convertToType(data['targetId'], 'String');
            }
            if (data.hasOwnProperty('wait')) {
                obj['wait'] = ApiClient.convertToType(data['wait'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PromoteReleaseOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PromoteReleaseOperation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['phase'] && !(typeof data['phase'] === 'string' || data['phase'] instanceof String)) {
            throw new Error("Expected the field `phase` to be a primitive type in the JSON string but got " + data['phase']);
        }
        // ensure the json data is a string
        if (data['rollout'] && !(typeof data['rollout'] === 'string' || data['rollout'] instanceof String)) {
            throw new Error("Expected the field `rollout` to be a primitive type in the JSON string but got " + data['rollout']);
        }
        // ensure the json data is a string
        if (data['targetId'] && !(typeof data['targetId'] === 'string' || data['targetId'] instanceof String)) {
            throw new Error("Expected the field `targetId` to be a primitive type in the JSON string but got " + data['targetId']);
        }
        // ensure the json data is a string
        if (data['wait'] && !(typeof data['wait'] === 'string' || data['wait'] instanceof String)) {
            throw new Error("Expected the field `wait` to be a primitive type in the JSON string but got " + data['wait']);
        }

        return true;
    }


}



/**
 * Output only. The starting phase of the rollout created by this operation.
 * @member {String} phase
 */
PromoteReleaseOperation.prototype['phase'] = undefined;

/**
 * Output only. The name of the rollout that initiates the `AutomationRun`.
 * @member {String} rollout
 */
PromoteReleaseOperation.prototype['rollout'] = undefined;

/**
 * Output only. The ID of the target that represents the promotion stage to which the release will be promoted. The value of this field is the last segment of a target name.
 * @member {String} targetId
 */
PromoteReleaseOperation.prototype['targetId'] = undefined;

/**
 * Output only. How long the operation will be paused.
 * @member {String} wait
 */
PromoteReleaseOperation.prototype['wait'] = undefined;






export default PromoteReleaseOperation;

