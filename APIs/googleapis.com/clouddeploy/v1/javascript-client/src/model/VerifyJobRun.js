/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerifyJobRun model module.
 * @module model/VerifyJobRun
 * @version v1
 */
class VerifyJobRun {
    /**
     * Constructs a new <code>VerifyJobRun</code>.
     * VerifyJobRun contains information specific to a verify &#x60;JobRun&#x60;.
     * @alias module:model/VerifyJobRun
     */
    constructor() { 
        
        VerifyJobRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerifyJobRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyJobRun} obj Optional instance to populate.
     * @return {module:model/VerifyJobRun} The populated <code>VerifyJobRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyJobRun();

            if (data.hasOwnProperty('artifactUri')) {
                obj['artifactUri'] = ApiClient.convertToType(data['artifactUri'], 'String');
            }
            if (data.hasOwnProperty('build')) {
                obj['build'] = ApiClient.convertToType(data['build'], 'String');
            }
            if (data.hasOwnProperty('eventLogPath')) {
                obj['eventLogPath'] = ApiClient.convertToType(data['eventLogPath'], 'String');
            }
            if (data.hasOwnProperty('failureCause')) {
                obj['failureCause'] = ApiClient.convertToType(data['failureCause'], 'String');
            }
            if (data.hasOwnProperty('failureMessage')) {
                obj['failureMessage'] = ApiClient.convertToType(data['failureMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerifyJobRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerifyJobRun</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['artifactUri'] && !(typeof data['artifactUri'] === 'string' || data['artifactUri'] instanceof String)) {
            throw new Error("Expected the field `artifactUri` to be a primitive type in the JSON string but got " + data['artifactUri']);
        }
        // ensure the json data is a string
        if (data['build'] && !(typeof data['build'] === 'string' || data['build'] instanceof String)) {
            throw new Error("Expected the field `build` to be a primitive type in the JSON string but got " + data['build']);
        }
        // ensure the json data is a string
        if (data['eventLogPath'] && !(typeof data['eventLogPath'] === 'string' || data['eventLogPath'] instanceof String)) {
            throw new Error("Expected the field `eventLogPath` to be a primitive type in the JSON string but got " + data['eventLogPath']);
        }
        // ensure the json data is a string
        if (data['failureCause'] && !(typeof data['failureCause'] === 'string' || data['failureCause'] instanceof String)) {
            throw new Error("Expected the field `failureCause` to be a primitive type in the JSON string but got " + data['failureCause']);
        }
        // ensure the json data is a string
        if (data['failureMessage'] && !(typeof data['failureMessage'] === 'string' || data['failureMessage'] instanceof String)) {
            throw new Error("Expected the field `failureMessage` to be a primitive type in the JSON string but got " + data['failureMessage']);
        }

        return true;
    }


}



/**
 * Output only. URI of a directory containing the verify artifacts. This contains the Skaffold event log.
 * @member {String} artifactUri
 */
VerifyJobRun.prototype['artifactUri'] = undefined;

/**
 * Output only. The resource name of the Cloud Build `Build` object that is used to verify. Format is `projects/{project}/locations/{location}/builds/{build}`.
 * @member {String} build
 */
VerifyJobRun.prototype['build'] = undefined;

/**
 * Output only. File path of the Skaffold event log relative to the artifact URI.
 * @member {String} eventLogPath
 */
VerifyJobRun.prototype['eventLogPath'] = undefined;

/**
 * Output only. The reason the verify failed. This will always be unspecified while the verify is in progress or if it succeeded.
 * @member {module:model/VerifyJobRun.FailureCauseEnum} failureCause
 */
VerifyJobRun.prototype['failureCause'] = undefined;

/**
 * Output only. Additional information about the verify failure, if available.
 * @member {String} failureMessage
 */
VerifyJobRun.prototype['failureMessage'] = undefined;





/**
 * Allowed values for the <code>failureCause</code> property.
 * @enum {String}
 * @readonly
 */
VerifyJobRun['FailureCauseEnum'] = {

    /**
     * value: "FAILURE_CAUSE_UNSPECIFIED"
     * @const
     */
    "FAILURE_CAUSE_UNSPECIFIED": "FAILURE_CAUSE_UNSPECIFIED",

    /**
     * value: "CLOUD_BUILD_UNAVAILABLE"
     * @const
     */
    "CLOUD_BUILD_UNAVAILABLE": "CLOUD_BUILD_UNAVAILABLE",

    /**
     * value: "EXECUTION_FAILED"
     * @const
     */
    "EXECUTION_FAILED": "EXECUTION_FAILED",

    /**
     * value: "DEADLINE_EXCEEDED"
     * @const
     */
    "DEADLINE_EXCEEDED": "DEADLINE_EXCEEDED",

    /**
     * value: "VERIFICATION_CONFIG_NOT_FOUND"
     * @const
     */
    "VERIFICATION_CONFIG_NOT_FOUND": "VERIFICATION_CONFIG_NOT_FOUND",

    /**
     * value: "CLOUD_BUILD_REQUEST_FAILED"
     * @const
     */
    "CLOUD_BUILD_REQUEST_FAILED": "CLOUD_BUILD_REQUEST_FAILED"
};



export default VerifyJobRun;

