/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineCondition from './PipelineCondition';
import SerialPipeline from './SerialPipeline';

/**
 * The DeliveryPipeline model module.
 * @module model/DeliveryPipeline
 * @version v1
 */
class DeliveryPipeline {
    /**
     * Constructs a new <code>DeliveryPipeline</code>.
     * A &#x60;DeliveryPipeline&#x60; resource in the Cloud Deploy API. A &#x60;DeliveryPipeline&#x60; defines a pipeline through which a Skaffold configuration can progress.
     * @alias module:model/DeliveryPipeline
     */
    constructor() { 
        
        DeliveryPipeline.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeliveryPipeline</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryPipeline} obj Optional instance to populate.
     * @return {module:model/DeliveryPipeline} The populated <code>DeliveryPipeline</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryPipeline();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = PipelineCondition.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serialPipeline')) {
                obj['serialPipeline'] = SerialPipeline.constructFromObject(data['serialPipeline']);
            }
            if (data.hasOwnProperty('suspended')) {
                obj['suspended'] = ApiClient.convertToType(data['suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeliveryPipeline</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeliveryPipeline</code>.
     */
    static validateJSON(data) {
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          PipelineCondition.validateJSON(data['condition']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `serialPipeline`
        if (data['serialPipeline']) { // data not null
          SerialPipeline.validateJSON(data['serialPipeline']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.
 * @member {Object.<String, String>} annotations
 */
DeliveryPipeline.prototype['annotations'] = undefined;

/**
 * @member {module:model/PipelineCondition} condition
 */
DeliveryPipeline.prototype['condition'] = undefined;

/**
 * Output only. Time at which the pipeline was created.
 * @member {String} createTime
 */
DeliveryPipeline.prototype['createTime'] = undefined;

/**
 * Description of the `DeliveryPipeline`. Max length is 255 characters.
 * @member {String} description
 */
DeliveryPipeline.prototype['description'] = undefined;

/**
 * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
 * @member {String} etag
 */
DeliveryPipeline.prototype['etag'] = undefined;

/**
 * Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
 * @member {Object.<String, String>} labels
 */
DeliveryPipeline.prototype['labels'] = undefined;

/**
 * Optional. Name of the `DeliveryPipeline`. Format is `projects/{project}/locations/{location}/deliveryPipelines/a-z{0,62}`.
 * @member {String} name
 */
DeliveryPipeline.prototype['name'] = undefined;

/**
 * @member {module:model/SerialPipeline} serialPipeline
 */
DeliveryPipeline.prototype['serialPipeline'] = undefined;

/**
 * When suspended, no new releases or rollouts can be created, but in-progress ones will complete.
 * @member {Boolean} suspended
 */
DeliveryPipeline.prototype['suspended'] = undefined;

/**
 * Output only. Unique identifier of the `DeliveryPipeline`.
 * @member {String} uid
 */
DeliveryPipeline.prototype['uid'] = undefined;

/**
 * Output only. Most recent time at which the pipeline was updated.
 * @member {String} updateTime
 */
DeliveryPipeline.prototype['updateTime'] = undefined;






export default DeliveryPipeline;

