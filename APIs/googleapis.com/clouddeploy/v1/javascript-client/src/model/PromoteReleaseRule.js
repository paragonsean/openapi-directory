/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutomationRuleCondition from './AutomationRuleCondition';

/**
 * The PromoteReleaseRule model module.
 * @module model/PromoteReleaseRule
 * @version v1
 */
class PromoteReleaseRule {
    /**
     * Constructs a new <code>PromoteReleaseRule</code>.
     * &#x60;PromoteRelease&#x60; rule will automatically promote a release from the current target to a specified target.
     * @alias module:model/PromoteReleaseRule
     */
    constructor() { 
        
        PromoteReleaseRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PromoteReleaseRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PromoteReleaseRule} obj Optional instance to populate.
     * @return {module:model/PromoteReleaseRule} The populated <code>PromoteReleaseRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PromoteReleaseRule();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = AutomationRuleCondition.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('destinationPhase')) {
                obj['destinationPhase'] = ApiClient.convertToType(data['destinationPhase'], 'String');
            }
            if (data.hasOwnProperty('destinationTargetId')) {
                obj['destinationTargetId'] = ApiClient.convertToType(data['destinationTargetId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('wait')) {
                obj['wait'] = ApiClient.convertToType(data['wait'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PromoteReleaseRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PromoteReleaseRule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          AutomationRuleCondition.validateJSON(data['condition']);
        }
        // ensure the json data is a string
        if (data['destinationPhase'] && !(typeof data['destinationPhase'] === 'string' || data['destinationPhase'] instanceof String)) {
            throw new Error("Expected the field `destinationPhase` to be a primitive type in the JSON string but got " + data['destinationPhase']);
        }
        // ensure the json data is a string
        if (data['destinationTargetId'] && !(typeof data['destinationTargetId'] === 'string' || data['destinationTargetId'] instanceof String)) {
            throw new Error("Expected the field `destinationTargetId` to be a primitive type in the JSON string but got " + data['destinationTargetId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['wait'] && !(typeof data['wait'] === 'string' || data['wait'] instanceof String)) {
            throw new Error("Expected the field `wait` to be a primitive type in the JSON string but got " + data['wait']);
        }

        return true;
    }


}



/**
 * @member {module:model/AutomationRuleCondition} condition
 */
PromoteReleaseRule.prototype['condition'] = undefined;

/**
 * Optional. The starting phase of the rollout created by this operation. Default to the first phase.
 * @member {String} destinationPhase
 */
PromoteReleaseRule.prototype['destinationPhase'] = undefined;

/**
 * Optional. The ID of the stage in the pipeline to which this `Release` is deploying. If unspecified, default it to the next stage in the promotion flow. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine if the target is one of the stages in the promotion sequence defined in the pipeline. * \"@next\", the next target in the promotion sequence.
 * @member {String} destinationTargetId
 */
PromoteReleaseRule.prototype['destinationTargetId'] = undefined;

/**
 * Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
 * @member {String} id
 */
PromoteReleaseRule.prototype['id'] = undefined;

/**
 * Optional. How long the release need to be paused until being promoted to the next target.
 * @member {String} wait
 */
PromoteReleaseRule.prototype['wait'] = undefined;






export default PromoteReleaseRule;

