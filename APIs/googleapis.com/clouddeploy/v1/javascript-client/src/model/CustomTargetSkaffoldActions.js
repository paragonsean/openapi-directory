/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SkaffoldModules from './SkaffoldModules';

/**
 * The CustomTargetSkaffoldActions model module.
 * @module model/CustomTargetSkaffoldActions
 * @version v1
 */
class CustomTargetSkaffoldActions {
    /**
     * Constructs a new <code>CustomTargetSkaffoldActions</code>.
     * CustomTargetSkaffoldActions represents the &#x60;CustomTargetType&#x60; configuration using Skaffold custom actions.
     * @alias module:model/CustomTargetSkaffoldActions
     */
    constructor() { 
        
        CustomTargetSkaffoldActions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomTargetSkaffoldActions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomTargetSkaffoldActions} obj Optional instance to populate.
     * @return {module:model/CustomTargetSkaffoldActions} The populated <code>CustomTargetSkaffoldActions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomTargetSkaffoldActions();

            if (data.hasOwnProperty('deployAction')) {
                obj['deployAction'] = ApiClient.convertToType(data['deployAction'], 'String');
            }
            if (data.hasOwnProperty('includeSkaffoldModules')) {
                obj['includeSkaffoldModules'] = ApiClient.convertToType(data['includeSkaffoldModules'], [SkaffoldModules]);
            }
            if (data.hasOwnProperty('renderAction')) {
                obj['renderAction'] = ApiClient.convertToType(data['renderAction'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomTargetSkaffoldActions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomTargetSkaffoldActions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deployAction'] && !(typeof data['deployAction'] === 'string' || data['deployAction'] instanceof String)) {
            throw new Error("Expected the field `deployAction` to be a primitive type in the JSON string but got " + data['deployAction']);
        }
        if (data['includeSkaffoldModules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['includeSkaffoldModules'])) {
                throw new Error("Expected the field `includeSkaffoldModules` to be an array in the JSON data but got " + data['includeSkaffoldModules']);
            }
            // validate the optional field `includeSkaffoldModules` (array)
            for (const item of data['includeSkaffoldModules']) {
                SkaffoldModules.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['renderAction'] && !(typeof data['renderAction'] === 'string' || data['renderAction'] instanceof String)) {
            throw new Error("Expected the field `renderAction` to be a primitive type in the JSON string but got " + data['renderAction']);
        }

        return true;
    }


}



/**
 * Required. The Skaffold custom action responsible for deploy operations.
 * @member {String} deployAction
 */
CustomTargetSkaffoldActions.prototype['deployAction'] = undefined;

/**
 * Optional. List of Skaffold modules Cloud Deploy will include in the Skaffold Config as required before performing diagnose.
 * @member {Array.<module:model/SkaffoldModules>} includeSkaffoldModules
 */
CustomTargetSkaffoldActions.prototype['includeSkaffoldModules'] = undefined;

/**
 * Optional. The Skaffold custom action responsible for render operations. If not provided then Cloud Deploy will perform the render operations via `skaffold render`.
 * @member {String} renderAction
 */
CustomTargetSkaffoldActions.prototype['renderAction'] = undefined;






export default CustomTargetSkaffoldActions;

