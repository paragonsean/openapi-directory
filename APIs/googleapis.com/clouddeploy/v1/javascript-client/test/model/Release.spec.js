/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDeployApi);
  }
}(this, function(expect, CloudDeployApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDeployApi.Release();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Release', function() {
    it('should create an instance of Release', function() {
      // uncomment below and update the code to test Release
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be.a(CloudDeployApi.Release);
    });

    it('should have the property abandoned (base name: "abandoned")', function() {
      // uncomment below and update the code to test the property abandoned
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property annotations (base name: "annotations")', function() {
      // uncomment below and update the code to test the property annotations
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property buildArtifacts (base name: "buildArtifacts")', function() {
      // uncomment below and update the code to test the property buildArtifacts
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property condition (base name: "condition")', function() {
      // uncomment below and update the code to test the property condition
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property customTargetTypeSnapshots (base name: "customTargetTypeSnapshots")', function() {
      // uncomment below and update the code to test the property customTargetTypeSnapshots
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property deliveryPipelineSnapshot (base name: "deliveryPipelineSnapshot")', function() {
      // uncomment below and update the code to test the property deliveryPipelineSnapshot
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property deployParameters (base name: "deployParameters")', function() {
      // uncomment below and update the code to test the property deployParameters
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property renderEndTime (base name: "renderEndTime")', function() {
      // uncomment below and update the code to test the property renderEndTime
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property renderStartTime (base name: "renderStartTime")', function() {
      // uncomment below and update the code to test the property renderStartTime
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property renderState (base name: "renderState")', function() {
      // uncomment below and update the code to test the property renderState
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property skaffoldConfigPath (base name: "skaffoldConfigPath")', function() {
      // uncomment below and update the code to test the property skaffoldConfigPath
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property skaffoldConfigUri (base name: "skaffoldConfigUri")', function() {
      // uncomment below and update the code to test the property skaffoldConfigUri
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property skaffoldVersion (base name: "skaffoldVersion")', function() {
      // uncomment below and update the code to test the property skaffoldVersion
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property targetArtifacts (base name: "targetArtifacts")', function() {
      // uncomment below and update the code to test the property targetArtifacts
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property targetRenders (base name: "targetRenders")', function() {
      // uncomment below and update the code to test the property targetRenders
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property targetSnapshots (base name: "targetSnapshots")', function() {
      // uncomment below and update the code to test the property targetSnapshots
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

    it('should have the property uid (base name: "uid")', function() {
      // uncomment below and update the code to test the property uid
      //var instance = new CloudDeployApi.Release();
      //expect(instance).to.be();
    });

  });

}));
