/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKubernetesConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKubernetesConfig::OAIKubernetesConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKubernetesConfig::OAIKubernetesConfig() {
    this->initializeModel();
}

OAIKubernetesConfig::~OAIKubernetesConfig() {}

void OAIKubernetesConfig::initializeModel() {

    m_gateway_service_mesh_isSet = false;
    m_gateway_service_mesh_isValid = false;

    m_service_networking_isSet = false;
    m_service_networking_isValid = false;
}

void OAIKubernetesConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKubernetesConfig::fromJsonObject(QJsonObject json) {

    m_gateway_service_mesh_isValid = ::OpenAPI::fromJsonValue(m_gateway_service_mesh, json[QString("gatewayServiceMesh")]);
    m_gateway_service_mesh_isSet = !json[QString("gatewayServiceMesh")].isNull() && m_gateway_service_mesh_isValid;

    m_service_networking_isValid = ::OpenAPI::fromJsonValue(m_service_networking, json[QString("serviceNetworking")]);
    m_service_networking_isSet = !json[QString("serviceNetworking")].isNull() && m_service_networking_isValid;
}

QString OAIKubernetesConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKubernetesConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_gateway_service_mesh.isSet()) {
        obj.insert(QString("gatewayServiceMesh"), ::OpenAPI::toJsonValue(m_gateway_service_mesh));
    }
    if (m_service_networking.isSet()) {
        obj.insert(QString("serviceNetworking"), ::OpenAPI::toJsonValue(m_service_networking));
    }
    return obj;
}

OAIGatewayServiceMesh OAIKubernetesConfig::getGatewayServiceMesh() const {
    return m_gateway_service_mesh;
}
void OAIKubernetesConfig::setGatewayServiceMesh(const OAIGatewayServiceMesh &gateway_service_mesh) {
    m_gateway_service_mesh = gateway_service_mesh;
    m_gateway_service_mesh_isSet = true;
}

bool OAIKubernetesConfig::is_gateway_service_mesh_Set() const{
    return m_gateway_service_mesh_isSet;
}

bool OAIKubernetesConfig::is_gateway_service_mesh_Valid() const{
    return m_gateway_service_mesh_isValid;
}

OAIServiceNetworking OAIKubernetesConfig::getServiceNetworking() const {
    return m_service_networking;
}
void OAIKubernetesConfig::setServiceNetworking(const OAIServiceNetworking &service_networking) {
    m_service_networking = service_networking;
    m_service_networking_isSet = true;
}

bool OAIKubernetesConfig::is_service_networking_Set() const{
    return m_service_networking_isSet;
}

bool OAIKubernetesConfig::is_service_networking_Valid() const{
    return m_service_networking_isValid;
}

bool OAIKubernetesConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gateway_service_mesh.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_networking.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKubernetesConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
