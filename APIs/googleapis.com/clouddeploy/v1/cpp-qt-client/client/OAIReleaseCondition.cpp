/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReleaseCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReleaseCondition::OAIReleaseCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReleaseCondition::OAIReleaseCondition() {
    this->initializeModel();
}

OAIReleaseCondition::~OAIReleaseCondition() {}

void OAIReleaseCondition::initializeModel() {

    m_release_ready_condition_isSet = false;
    m_release_ready_condition_isValid = false;

    m_skaffold_supported_condition_isSet = false;
    m_skaffold_supported_condition_isValid = false;
}

void OAIReleaseCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReleaseCondition::fromJsonObject(QJsonObject json) {

    m_release_ready_condition_isValid = ::OpenAPI::fromJsonValue(m_release_ready_condition, json[QString("releaseReadyCondition")]);
    m_release_ready_condition_isSet = !json[QString("releaseReadyCondition")].isNull() && m_release_ready_condition_isValid;

    m_skaffold_supported_condition_isValid = ::OpenAPI::fromJsonValue(m_skaffold_supported_condition, json[QString("skaffoldSupportedCondition")]);
    m_skaffold_supported_condition_isSet = !json[QString("skaffoldSupportedCondition")].isNull() && m_skaffold_supported_condition_isValid;
}

QString OAIReleaseCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReleaseCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_release_ready_condition.isSet()) {
        obj.insert(QString("releaseReadyCondition"), ::OpenAPI::toJsonValue(m_release_ready_condition));
    }
    if (m_skaffold_supported_condition.isSet()) {
        obj.insert(QString("skaffoldSupportedCondition"), ::OpenAPI::toJsonValue(m_skaffold_supported_condition));
    }
    return obj;
}

OAIReleaseReadyCondition OAIReleaseCondition::getReleaseReadyCondition() const {
    return m_release_ready_condition;
}
void OAIReleaseCondition::setReleaseReadyCondition(const OAIReleaseReadyCondition &release_ready_condition) {
    m_release_ready_condition = release_ready_condition;
    m_release_ready_condition_isSet = true;
}

bool OAIReleaseCondition::is_release_ready_condition_Set() const{
    return m_release_ready_condition_isSet;
}

bool OAIReleaseCondition::is_release_ready_condition_Valid() const{
    return m_release_ready_condition_isValid;
}

OAISkaffoldSupportedCondition OAIReleaseCondition::getSkaffoldSupportedCondition() const {
    return m_skaffold_supported_condition;
}
void OAIReleaseCondition::setSkaffoldSupportedCondition(const OAISkaffoldSupportedCondition &skaffold_supported_condition) {
    m_skaffold_supported_condition = skaffold_supported_condition;
    m_skaffold_supported_condition_isSet = true;
}

bool OAIReleaseCondition::is_skaffold_supported_condition_Set() const{
    return m_skaffold_supported_condition_isSet;
}

bool OAIReleaseCondition::is_skaffold_supported_condition_Valid() const{
    return m_skaffold_supported_condition_isValid;
}

bool OAIReleaseCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_release_ready_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_skaffold_supported_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReleaseCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
