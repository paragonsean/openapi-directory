/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomationRolloutMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomationRolloutMetadata::OAIAutomationRolloutMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomationRolloutMetadata::OAIAutomationRolloutMetadata() {
    this->initializeModel();
}

OAIAutomationRolloutMetadata::~OAIAutomationRolloutMetadata() {}

void OAIAutomationRolloutMetadata::initializeModel() {

    m_advance_automation_runs_isSet = false;
    m_advance_automation_runs_isValid = false;

    m_current_repair_automation_run_isSet = false;
    m_current_repair_automation_run_isValid = false;

    m_promote_automation_run_isSet = false;
    m_promote_automation_run_isValid = false;

    m_repair_automation_runs_isSet = false;
    m_repair_automation_runs_isValid = false;
}

void OAIAutomationRolloutMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomationRolloutMetadata::fromJsonObject(QJsonObject json) {

    m_advance_automation_runs_isValid = ::OpenAPI::fromJsonValue(m_advance_automation_runs, json[QString("advanceAutomationRuns")]);
    m_advance_automation_runs_isSet = !json[QString("advanceAutomationRuns")].isNull() && m_advance_automation_runs_isValid;

    m_current_repair_automation_run_isValid = ::OpenAPI::fromJsonValue(m_current_repair_automation_run, json[QString("currentRepairAutomationRun")]);
    m_current_repair_automation_run_isSet = !json[QString("currentRepairAutomationRun")].isNull() && m_current_repair_automation_run_isValid;

    m_promote_automation_run_isValid = ::OpenAPI::fromJsonValue(m_promote_automation_run, json[QString("promoteAutomationRun")]);
    m_promote_automation_run_isSet = !json[QString("promoteAutomationRun")].isNull() && m_promote_automation_run_isValid;

    m_repair_automation_runs_isValid = ::OpenAPI::fromJsonValue(m_repair_automation_runs, json[QString("repairAutomationRuns")]);
    m_repair_automation_runs_isSet = !json[QString("repairAutomationRuns")].isNull() && m_repair_automation_runs_isValid;
}

QString OAIAutomationRolloutMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomationRolloutMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_advance_automation_runs.size() > 0) {
        obj.insert(QString("advanceAutomationRuns"), ::OpenAPI::toJsonValue(m_advance_automation_runs));
    }
    if (m_current_repair_automation_run_isSet) {
        obj.insert(QString("currentRepairAutomationRun"), ::OpenAPI::toJsonValue(m_current_repair_automation_run));
    }
    if (m_promote_automation_run_isSet) {
        obj.insert(QString("promoteAutomationRun"), ::OpenAPI::toJsonValue(m_promote_automation_run));
    }
    if (m_repair_automation_runs.size() > 0) {
        obj.insert(QString("repairAutomationRuns"), ::OpenAPI::toJsonValue(m_repair_automation_runs));
    }
    return obj;
}

QList<QString> OAIAutomationRolloutMetadata::getAdvanceAutomationRuns() const {
    return m_advance_automation_runs;
}
void OAIAutomationRolloutMetadata::setAdvanceAutomationRuns(const QList<QString> &advance_automation_runs) {
    m_advance_automation_runs = advance_automation_runs;
    m_advance_automation_runs_isSet = true;
}

bool OAIAutomationRolloutMetadata::is_advance_automation_runs_Set() const{
    return m_advance_automation_runs_isSet;
}

bool OAIAutomationRolloutMetadata::is_advance_automation_runs_Valid() const{
    return m_advance_automation_runs_isValid;
}

QString OAIAutomationRolloutMetadata::getCurrentRepairAutomationRun() const {
    return m_current_repair_automation_run;
}
void OAIAutomationRolloutMetadata::setCurrentRepairAutomationRun(const QString &current_repair_automation_run) {
    m_current_repair_automation_run = current_repair_automation_run;
    m_current_repair_automation_run_isSet = true;
}

bool OAIAutomationRolloutMetadata::is_current_repair_automation_run_Set() const{
    return m_current_repair_automation_run_isSet;
}

bool OAIAutomationRolloutMetadata::is_current_repair_automation_run_Valid() const{
    return m_current_repair_automation_run_isValid;
}

QString OAIAutomationRolloutMetadata::getPromoteAutomationRun() const {
    return m_promote_automation_run;
}
void OAIAutomationRolloutMetadata::setPromoteAutomationRun(const QString &promote_automation_run) {
    m_promote_automation_run = promote_automation_run;
    m_promote_automation_run_isSet = true;
}

bool OAIAutomationRolloutMetadata::is_promote_automation_run_Set() const{
    return m_promote_automation_run_isSet;
}

bool OAIAutomationRolloutMetadata::is_promote_automation_run_Valid() const{
    return m_promote_automation_run_isValid;
}

QList<QString> OAIAutomationRolloutMetadata::getRepairAutomationRuns() const {
    return m_repair_automation_runs;
}
void OAIAutomationRolloutMetadata::setRepairAutomationRuns(const QList<QString> &repair_automation_runs) {
    m_repair_automation_runs = repair_automation_runs;
    m_repair_automation_runs_isSet = true;
}

bool OAIAutomationRolloutMetadata::is_repair_automation_runs_Set() const{
    return m_repair_automation_runs_isSet;
}

bool OAIAutomationRolloutMetadata::is_repair_automation_runs_Valid() const{
    return m_repair_automation_runs_isValid;
}

bool OAIAutomationRolloutMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advance_automation_runs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_repair_automation_run_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_promote_automation_run_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repair_automation_runs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomationRolloutMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
