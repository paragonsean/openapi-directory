/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeliveryPipeline.h
 *
 * A &#x60;DeliveryPipeline&#x60; resource in the Cloud Deploy API. A &#x60;DeliveryPipeline&#x60; defines a pipeline through which a Skaffold configuration can progress.
 */

#ifndef OAIDeliveryPipeline_H
#define OAIDeliveryPipeline_H

#include <QJsonObject>

#include "OAIPipelineCondition.h"
#include "OAISerialPipeline.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPipelineCondition;
class OAISerialPipeline;

class OAIDeliveryPipeline : public OAIObject {
public:
    OAIDeliveryPipeline();
    OAIDeliveryPipeline(QString json);
    ~OAIDeliveryPipeline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    OAIPipelineCondition getCondition() const;
    void setCondition(const OAIPipelineCondition &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAISerialPipeline getSerialPipeline() const;
    void setSerialPipeline(const OAISerialPipeline &serial_pipeline);
    bool is_serial_pipeline_Set() const;
    bool is_serial_pipeline_Valid() const;

    bool isSuspended() const;
    void setSuspended(const bool &suspended);
    bool is_suspended_Set() const;
    bool is_suspended_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    OAIPipelineCondition m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAISerialPipeline m_serial_pipeline;
    bool m_serial_pipeline_isSet;
    bool m_serial_pipeline_isValid;

    bool m_suspended;
    bool m_suspended_isSet;
    bool m_suspended_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeliveryPipeline)

#endif // OAIDeliveryPipeline_H
