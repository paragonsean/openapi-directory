/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITarget.h
 *
 * A &#x60;Target&#x60; resource in the Cloud Deploy API. A &#x60;Target&#x60; defines a location to which a Skaffold configuration can be deployed.
 */

#ifndef OAITarget_H
#define OAITarget_H

#include <QJsonObject>

#include "OAIAnthosCluster.h"
#include "OAICloudRunLocation.h"
#include "OAICustomTarget.h"
#include "OAIExecutionConfig.h"
#include "OAIGkeCluster.h"
#include "OAIMultiTarget.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnthosCluster;
class OAICustomTarget;
class OAIExecutionConfig;
class OAIGkeCluster;
class OAIMultiTarget;
class OAICloudRunLocation;

class OAITarget : public OAIObject {
public:
    OAITarget();
    OAITarget(QString json);
    ~OAITarget() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    OAIAnthosCluster getAnthosCluster() const;
    void setAnthosCluster(const OAIAnthosCluster &anthos_cluster);
    bool is_anthos_cluster_Set() const;
    bool is_anthos_cluster_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAICustomTarget getCustomTarget() const;
    void setCustomTarget(const OAICustomTarget &custom_target);
    bool is_custom_target_Set() const;
    bool is_custom_target_Valid() const;

    QMap<QString, QString> getDeployParameters() const;
    void setDeployParameters(const QMap<QString, QString> &deploy_parameters);
    bool is_deploy_parameters_Set() const;
    bool is_deploy_parameters_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<OAIExecutionConfig> getExecutionConfigs() const;
    void setExecutionConfigs(const QList<OAIExecutionConfig> &execution_configs);
    bool is_execution_configs_Set() const;
    bool is_execution_configs_Valid() const;

    OAIGkeCluster getGke() const;
    void setGke(const OAIGkeCluster &gke);
    bool is_gke_Set() const;
    bool is_gke_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIMultiTarget getMultiTarget() const;
    void setMultiTarget(const OAIMultiTarget &multi_target);
    bool is_multi_target_Set() const;
    bool is_multi_target_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isRequireApproval() const;
    void setRequireApproval(const bool &require_approval);
    bool is_require_approval_Set() const;
    bool is_require_approval_Valid() const;

    OAICloudRunLocation getRun() const;
    void setRun(const OAICloudRunLocation &run);
    bool is_run_Set() const;
    bool is_run_Valid() const;

    QString getTargetId() const;
    void setTargetId(const QString &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    OAIAnthosCluster m_anthos_cluster;
    bool m_anthos_cluster_isSet;
    bool m_anthos_cluster_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAICustomTarget m_custom_target;
    bool m_custom_target_isSet;
    bool m_custom_target_isValid;

    QMap<QString, QString> m_deploy_parameters;
    bool m_deploy_parameters_isSet;
    bool m_deploy_parameters_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<OAIExecutionConfig> m_execution_configs;
    bool m_execution_configs_isSet;
    bool m_execution_configs_isValid;

    OAIGkeCluster m_gke;
    bool m_gke_isSet;
    bool m_gke_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIMultiTarget m_multi_target;
    bool m_multi_target_isSet;
    bool m_multi_target_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_require_approval;
    bool m_require_approval_isSet;
    bool m_require_approval_isValid;

    OAICloudRunLocation m_run;
    bool m_run_isSet;
    bool m_run_isValid;

    QString m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITarget)

#endif // OAITarget_H
