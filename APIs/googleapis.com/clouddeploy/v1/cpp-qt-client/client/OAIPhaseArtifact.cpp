/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPhaseArtifact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPhaseArtifact::OAIPhaseArtifact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPhaseArtifact::OAIPhaseArtifact() {
    this->initializeModel();
}

OAIPhaseArtifact::~OAIPhaseArtifact() {}

void OAIPhaseArtifact::initializeModel() {

    m_job_manifests_path_isSet = false;
    m_job_manifests_path_isValid = false;

    m_manifest_path_isSet = false;
    m_manifest_path_isValid = false;

    m_skaffold_config_path_isSet = false;
    m_skaffold_config_path_isValid = false;
}

void OAIPhaseArtifact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPhaseArtifact::fromJsonObject(QJsonObject json) {

    m_job_manifests_path_isValid = ::OpenAPI::fromJsonValue(m_job_manifests_path, json[QString("jobManifestsPath")]);
    m_job_manifests_path_isSet = !json[QString("jobManifestsPath")].isNull() && m_job_manifests_path_isValid;

    m_manifest_path_isValid = ::OpenAPI::fromJsonValue(m_manifest_path, json[QString("manifestPath")]);
    m_manifest_path_isSet = !json[QString("manifestPath")].isNull() && m_manifest_path_isValid;

    m_skaffold_config_path_isValid = ::OpenAPI::fromJsonValue(m_skaffold_config_path, json[QString("skaffoldConfigPath")]);
    m_skaffold_config_path_isSet = !json[QString("skaffoldConfigPath")].isNull() && m_skaffold_config_path_isValid;
}

QString OAIPhaseArtifact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPhaseArtifact::asJsonObject() const {
    QJsonObject obj;
    if (m_job_manifests_path_isSet) {
        obj.insert(QString("jobManifestsPath"), ::OpenAPI::toJsonValue(m_job_manifests_path));
    }
    if (m_manifest_path_isSet) {
        obj.insert(QString("manifestPath"), ::OpenAPI::toJsonValue(m_manifest_path));
    }
    if (m_skaffold_config_path_isSet) {
        obj.insert(QString("skaffoldConfigPath"), ::OpenAPI::toJsonValue(m_skaffold_config_path));
    }
    return obj;
}

QString OAIPhaseArtifact::getJobManifestsPath() const {
    return m_job_manifests_path;
}
void OAIPhaseArtifact::setJobManifestsPath(const QString &job_manifests_path) {
    m_job_manifests_path = job_manifests_path;
    m_job_manifests_path_isSet = true;
}

bool OAIPhaseArtifact::is_job_manifests_path_Set() const{
    return m_job_manifests_path_isSet;
}

bool OAIPhaseArtifact::is_job_manifests_path_Valid() const{
    return m_job_manifests_path_isValid;
}

QString OAIPhaseArtifact::getManifestPath() const {
    return m_manifest_path;
}
void OAIPhaseArtifact::setManifestPath(const QString &manifest_path) {
    m_manifest_path = manifest_path;
    m_manifest_path_isSet = true;
}

bool OAIPhaseArtifact::is_manifest_path_Set() const{
    return m_manifest_path_isSet;
}

bool OAIPhaseArtifact::is_manifest_path_Valid() const{
    return m_manifest_path_isValid;
}

QString OAIPhaseArtifact::getSkaffoldConfigPath() const {
    return m_skaffold_config_path;
}
void OAIPhaseArtifact::setSkaffoldConfigPath(const QString &skaffold_config_path) {
    m_skaffold_config_path = skaffold_config_path;
    m_skaffold_config_path_isSet = true;
}

bool OAIPhaseArtifact::is_skaffold_config_path_Set() const{
    return m_skaffold_config_path_isSet;
}

bool OAIPhaseArtifact::is_skaffold_config_path_Valid() const{
    return m_skaffold_config_path_isValid;
}

bool OAIPhaseArtifact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_manifests_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manifest_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skaffold_config_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPhaseArtifact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
