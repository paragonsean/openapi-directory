/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomTargetType.h
 *
 * A &#x60;CustomTargetType&#x60; resource in the Cloud Deploy API. A &#x60;CustomTargetType&#x60; defines a type of custom target that can be referenced in a &#x60;Target&#x60; in order to facilitate deploying to other systems besides the supported runtimes.
 */

#ifndef OAICustomTargetType_H
#define OAICustomTargetType_H

#include <QJsonObject>

#include "OAICustomTargetSkaffoldActions.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomTargetSkaffoldActions;

class OAICustomTargetType : public OAIObject {
public:
    OAICustomTargetType();
    OAICustomTargetType(QString json);
    ~OAICustomTargetType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAnnotations() const;
    void setAnnotations(const QMap<QString, QString> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAICustomTargetSkaffoldActions getCustomActions() const;
    void setCustomActions(const OAICustomTargetSkaffoldActions &custom_actions);
    bool is_custom_actions_Set() const;
    bool is_custom_actions_Valid() const;

    QString getCustomTargetTypeId() const;
    void setCustomTargetTypeId(const QString &custom_target_type_id);
    bool is_custom_target_type_id_Set() const;
    bool is_custom_target_type_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAICustomTargetSkaffoldActions m_custom_actions;
    bool m_custom_actions_isSet;
    bool m_custom_actions_isValid;

    QString m_custom_target_type_id;
    bool m_custom_target_type_id_isSet;
    bool m_custom_target_type_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomTargetType)

#endif // OAICustomTargetType_H
