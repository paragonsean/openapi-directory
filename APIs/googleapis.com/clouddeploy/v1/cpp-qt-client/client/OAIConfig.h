/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfig.h
 *
 * Service-wide configuration.
 */

#ifndef OAIConfig_H
#define OAIConfig_H

#include <QJsonObject>

#include "OAISkaffoldVersion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISkaffoldVersion;

class OAIConfig : public OAIObject {
public:
    OAIConfig();
    OAIConfig(QString json);
    ~OAIConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefaultSkaffoldVersion() const;
    void setDefaultSkaffoldVersion(const QString &default_skaffold_version);
    bool is_default_skaffold_version_Set() const;
    bool is_default_skaffold_version_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAISkaffoldVersion> getSupportedVersions() const;
    void setSupportedVersions(const QList<OAISkaffoldVersion> &supported_versions);
    bool is_supported_versions_Set() const;
    bool is_supported_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_default_skaffold_version;
    bool m_default_skaffold_version_isSet;
    bool m_default_skaffold_version_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAISkaffoldVersion> m_supported_versions;
    bool m_supported_versions_isSet;
    bool m_supported_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfig)

#endif // OAIConfig_H
