/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStage::OAIStage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStage::OAIStage() {
    this->initializeModel();
}

OAIStage::~OAIStage() {}

void OAIStage::initializeModel() {

    m_deploy_parameters_isSet = false;
    m_deploy_parameters_isValid = false;

    m_profiles_isSet = false;
    m_profiles_isValid = false;

    m_strategy_isSet = false;
    m_strategy_isValid = false;

    m_target_id_isSet = false;
    m_target_id_isValid = false;
}

void OAIStage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStage::fromJsonObject(QJsonObject json) {

    m_deploy_parameters_isValid = ::OpenAPI::fromJsonValue(m_deploy_parameters, json[QString("deployParameters")]);
    m_deploy_parameters_isSet = !json[QString("deployParameters")].isNull() && m_deploy_parameters_isValid;

    m_profiles_isValid = ::OpenAPI::fromJsonValue(m_profiles, json[QString("profiles")]);
    m_profiles_isSet = !json[QString("profiles")].isNull() && m_profiles_isValid;

    m_strategy_isValid = ::OpenAPI::fromJsonValue(m_strategy, json[QString("strategy")]);
    m_strategy_isSet = !json[QString("strategy")].isNull() && m_strategy_isValid;

    m_target_id_isValid = ::OpenAPI::fromJsonValue(m_target_id, json[QString("targetId")]);
    m_target_id_isSet = !json[QString("targetId")].isNull() && m_target_id_isValid;
}

QString OAIStage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStage::asJsonObject() const {
    QJsonObject obj;
    if (m_deploy_parameters.size() > 0) {
        obj.insert(QString("deployParameters"), ::OpenAPI::toJsonValue(m_deploy_parameters));
    }
    if (m_profiles.size() > 0) {
        obj.insert(QString("profiles"), ::OpenAPI::toJsonValue(m_profiles));
    }
    if (m_strategy.isSet()) {
        obj.insert(QString("strategy"), ::OpenAPI::toJsonValue(m_strategy));
    }
    if (m_target_id_isSet) {
        obj.insert(QString("targetId"), ::OpenAPI::toJsonValue(m_target_id));
    }
    return obj;
}

QList<OAIDeployParameters> OAIStage::getDeployParameters() const {
    return m_deploy_parameters;
}
void OAIStage::setDeployParameters(const QList<OAIDeployParameters> &deploy_parameters) {
    m_deploy_parameters = deploy_parameters;
    m_deploy_parameters_isSet = true;
}

bool OAIStage::is_deploy_parameters_Set() const{
    return m_deploy_parameters_isSet;
}

bool OAIStage::is_deploy_parameters_Valid() const{
    return m_deploy_parameters_isValid;
}

QList<QString> OAIStage::getProfiles() const {
    return m_profiles;
}
void OAIStage::setProfiles(const QList<QString> &profiles) {
    m_profiles = profiles;
    m_profiles_isSet = true;
}

bool OAIStage::is_profiles_Set() const{
    return m_profiles_isSet;
}

bool OAIStage::is_profiles_Valid() const{
    return m_profiles_isValid;
}

OAIStrategy OAIStage::getStrategy() const {
    return m_strategy;
}
void OAIStage::setStrategy(const OAIStrategy &strategy) {
    m_strategy = strategy;
    m_strategy_isSet = true;
}

bool OAIStage::is_strategy_Set() const{
    return m_strategy_isSet;
}

bool OAIStage::is_strategy_Valid() const{
    return m_strategy_isValid;
}

QString OAIStage::getTargetId() const {
    return m_target_id;
}
void OAIStage::setTargetId(const QString &target_id) {
    m_target_id = target_id;
    m_target_id_isSet = true;
}

bool OAIStage::is_target_id_Set() const{
    return m_target_id_isSet;
}

bool OAIStage::is_target_id_Valid() const{
    return m_target_id_isValid;
}

bool OAIStage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deploy_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_profiles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
