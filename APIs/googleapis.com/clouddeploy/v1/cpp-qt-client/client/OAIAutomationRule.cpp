/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomationRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomationRule::OAIAutomationRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomationRule::OAIAutomationRule() {
    this->initializeModel();
}

OAIAutomationRule::~OAIAutomationRule() {}

void OAIAutomationRule::initializeModel() {

    m_advance_rollout_rule_isSet = false;
    m_advance_rollout_rule_isValid = false;

    m_promote_release_rule_isSet = false;
    m_promote_release_rule_isValid = false;

    m_repair_rollout_rule_isSet = false;
    m_repair_rollout_rule_isValid = false;
}

void OAIAutomationRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomationRule::fromJsonObject(QJsonObject json) {

    m_advance_rollout_rule_isValid = ::OpenAPI::fromJsonValue(m_advance_rollout_rule, json[QString("advanceRolloutRule")]);
    m_advance_rollout_rule_isSet = !json[QString("advanceRolloutRule")].isNull() && m_advance_rollout_rule_isValid;

    m_promote_release_rule_isValid = ::OpenAPI::fromJsonValue(m_promote_release_rule, json[QString("promoteReleaseRule")]);
    m_promote_release_rule_isSet = !json[QString("promoteReleaseRule")].isNull() && m_promote_release_rule_isValid;

    m_repair_rollout_rule_isValid = ::OpenAPI::fromJsonValue(m_repair_rollout_rule, json[QString("repairRolloutRule")]);
    m_repair_rollout_rule_isSet = !json[QString("repairRolloutRule")].isNull() && m_repair_rollout_rule_isValid;
}

QString OAIAutomationRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomationRule::asJsonObject() const {
    QJsonObject obj;
    if (m_advance_rollout_rule.isSet()) {
        obj.insert(QString("advanceRolloutRule"), ::OpenAPI::toJsonValue(m_advance_rollout_rule));
    }
    if (m_promote_release_rule.isSet()) {
        obj.insert(QString("promoteReleaseRule"), ::OpenAPI::toJsonValue(m_promote_release_rule));
    }
    if (m_repair_rollout_rule.isSet()) {
        obj.insert(QString("repairRolloutRule"), ::OpenAPI::toJsonValue(m_repair_rollout_rule));
    }
    return obj;
}

OAIAdvanceRolloutRule OAIAutomationRule::getAdvanceRolloutRule() const {
    return m_advance_rollout_rule;
}
void OAIAutomationRule::setAdvanceRolloutRule(const OAIAdvanceRolloutRule &advance_rollout_rule) {
    m_advance_rollout_rule = advance_rollout_rule;
    m_advance_rollout_rule_isSet = true;
}

bool OAIAutomationRule::is_advance_rollout_rule_Set() const{
    return m_advance_rollout_rule_isSet;
}

bool OAIAutomationRule::is_advance_rollout_rule_Valid() const{
    return m_advance_rollout_rule_isValid;
}

OAIPromoteReleaseRule OAIAutomationRule::getPromoteReleaseRule() const {
    return m_promote_release_rule;
}
void OAIAutomationRule::setPromoteReleaseRule(const OAIPromoteReleaseRule &promote_release_rule) {
    m_promote_release_rule = promote_release_rule;
    m_promote_release_rule_isSet = true;
}

bool OAIAutomationRule::is_promote_release_rule_Set() const{
    return m_promote_release_rule_isSet;
}

bool OAIAutomationRule::is_promote_release_rule_Valid() const{
    return m_promote_release_rule_isValid;
}

OAIRepairRolloutRule OAIAutomationRule::getRepairRolloutRule() const {
    return m_repair_rollout_rule;
}
void OAIAutomationRule::setRepairRolloutRule(const OAIRepairRolloutRule &repair_rollout_rule) {
    m_repair_rollout_rule = repair_rollout_rule;
    m_repair_rollout_rule_isSet = true;
}

bool OAIAutomationRule::is_repair_rollout_rule_Set() const{
    return m_repair_rollout_rule_isSet;
}

bool OAIAutomationRule::is_repair_rollout_rule_Valid() const{
    return m_repair_rollout_rule_isValid;
}

bool OAIAutomationRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advance_rollout_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_promote_release_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_repair_rollout_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomationRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
