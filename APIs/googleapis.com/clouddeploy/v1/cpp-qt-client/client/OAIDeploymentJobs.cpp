/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeploymentJobs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeploymentJobs::OAIDeploymentJobs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeploymentJobs::OAIDeploymentJobs() {
    this->initializeModel();
}

OAIDeploymentJobs::~OAIDeploymentJobs() {}

void OAIDeploymentJobs::initializeModel() {

    m_deploy_job_isSet = false;
    m_deploy_job_isValid = false;

    m_postdeploy_job_isSet = false;
    m_postdeploy_job_isValid = false;

    m_predeploy_job_isSet = false;
    m_predeploy_job_isValid = false;

    m_verify_job_isSet = false;
    m_verify_job_isValid = false;
}

void OAIDeploymentJobs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeploymentJobs::fromJsonObject(QJsonObject json) {

    m_deploy_job_isValid = ::OpenAPI::fromJsonValue(m_deploy_job, json[QString("deployJob")]);
    m_deploy_job_isSet = !json[QString("deployJob")].isNull() && m_deploy_job_isValid;

    m_postdeploy_job_isValid = ::OpenAPI::fromJsonValue(m_postdeploy_job, json[QString("postdeployJob")]);
    m_postdeploy_job_isSet = !json[QString("postdeployJob")].isNull() && m_postdeploy_job_isValid;

    m_predeploy_job_isValid = ::OpenAPI::fromJsonValue(m_predeploy_job, json[QString("predeployJob")]);
    m_predeploy_job_isSet = !json[QString("predeployJob")].isNull() && m_predeploy_job_isValid;

    m_verify_job_isValid = ::OpenAPI::fromJsonValue(m_verify_job, json[QString("verifyJob")]);
    m_verify_job_isSet = !json[QString("verifyJob")].isNull() && m_verify_job_isValid;
}

QString OAIDeploymentJobs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeploymentJobs::asJsonObject() const {
    QJsonObject obj;
    if (m_deploy_job.isSet()) {
        obj.insert(QString("deployJob"), ::OpenAPI::toJsonValue(m_deploy_job));
    }
    if (m_postdeploy_job.isSet()) {
        obj.insert(QString("postdeployJob"), ::OpenAPI::toJsonValue(m_postdeploy_job));
    }
    if (m_predeploy_job.isSet()) {
        obj.insert(QString("predeployJob"), ::OpenAPI::toJsonValue(m_predeploy_job));
    }
    if (m_verify_job.isSet()) {
        obj.insert(QString("verifyJob"), ::OpenAPI::toJsonValue(m_verify_job));
    }
    return obj;
}

OAIJob OAIDeploymentJobs::getDeployJob() const {
    return m_deploy_job;
}
void OAIDeploymentJobs::setDeployJob(const OAIJob &deploy_job) {
    m_deploy_job = deploy_job;
    m_deploy_job_isSet = true;
}

bool OAIDeploymentJobs::is_deploy_job_Set() const{
    return m_deploy_job_isSet;
}

bool OAIDeploymentJobs::is_deploy_job_Valid() const{
    return m_deploy_job_isValid;
}

OAIJob OAIDeploymentJobs::getPostdeployJob() const {
    return m_postdeploy_job;
}
void OAIDeploymentJobs::setPostdeployJob(const OAIJob &postdeploy_job) {
    m_postdeploy_job = postdeploy_job;
    m_postdeploy_job_isSet = true;
}

bool OAIDeploymentJobs::is_postdeploy_job_Set() const{
    return m_postdeploy_job_isSet;
}

bool OAIDeploymentJobs::is_postdeploy_job_Valid() const{
    return m_postdeploy_job_isValid;
}

OAIJob OAIDeploymentJobs::getPredeployJob() const {
    return m_predeploy_job;
}
void OAIDeploymentJobs::setPredeployJob(const OAIJob &predeploy_job) {
    m_predeploy_job = predeploy_job;
    m_predeploy_job_isSet = true;
}

bool OAIDeploymentJobs::is_predeploy_job_Set() const{
    return m_predeploy_job_isSet;
}

bool OAIDeploymentJobs::is_predeploy_job_Valid() const{
    return m_predeploy_job_isValid;
}

OAIJob OAIDeploymentJobs::getVerifyJob() const {
    return m_verify_job;
}
void OAIDeploymentJobs::setVerifyJob(const OAIJob &verify_job) {
    m_verify_job = verify_job;
    m_verify_job_isSet = true;
}

bool OAIDeploymentJobs::is_verify_job_Set() const{
    return m_verify_job_isSet;
}

bool OAIDeploymentJobs::is_verify_job_Valid() const{
    return m_verify_job_isValid;
}

bool OAIDeploymentJobs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deploy_job.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_postdeploy_job.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_predeploy_job.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_verify_job.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeploymentJobs::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
