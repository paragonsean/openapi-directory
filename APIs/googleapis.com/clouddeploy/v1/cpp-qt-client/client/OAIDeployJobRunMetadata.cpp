/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeployJobRunMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeployJobRunMetadata::OAIDeployJobRunMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeployJobRunMetadata::OAIDeployJobRunMetadata() {
    this->initializeModel();
}

OAIDeployJobRunMetadata::~OAIDeployJobRunMetadata() {}

void OAIDeployJobRunMetadata::initializeModel() {

    m_cloud_run_isSet = false;
    m_cloud_run_isValid = false;

    m_custom_isSet = false;
    m_custom_isValid = false;

    m_custom_target_isSet = false;
    m_custom_target_isValid = false;
}

void OAIDeployJobRunMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeployJobRunMetadata::fromJsonObject(QJsonObject json) {

    m_cloud_run_isValid = ::OpenAPI::fromJsonValue(m_cloud_run, json[QString("cloudRun")]);
    m_cloud_run_isSet = !json[QString("cloudRun")].isNull() && m_cloud_run_isValid;

    m_custom_isValid = ::OpenAPI::fromJsonValue(m_custom, json[QString("custom")]);
    m_custom_isSet = !json[QString("custom")].isNull() && m_custom_isValid;

    m_custom_target_isValid = ::OpenAPI::fromJsonValue(m_custom_target, json[QString("customTarget")]);
    m_custom_target_isSet = !json[QString("customTarget")].isNull() && m_custom_target_isValid;
}

QString OAIDeployJobRunMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeployJobRunMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_run.isSet()) {
        obj.insert(QString("cloudRun"), ::OpenAPI::toJsonValue(m_cloud_run));
    }
    if (m_custom.isSet()) {
        obj.insert(QString("custom"), ::OpenAPI::toJsonValue(m_custom));
    }
    if (m_custom_target.isSet()) {
        obj.insert(QString("customTarget"), ::OpenAPI::toJsonValue(m_custom_target));
    }
    return obj;
}

OAICloudRunMetadata OAIDeployJobRunMetadata::getCloudRun() const {
    return m_cloud_run;
}
void OAIDeployJobRunMetadata::setCloudRun(const OAICloudRunMetadata &cloud_run) {
    m_cloud_run = cloud_run;
    m_cloud_run_isSet = true;
}

bool OAIDeployJobRunMetadata::is_cloud_run_Set() const{
    return m_cloud_run_isSet;
}

bool OAIDeployJobRunMetadata::is_cloud_run_Valid() const{
    return m_cloud_run_isValid;
}

OAICustomMetadata OAIDeployJobRunMetadata::getCustom() const {
    return m_custom;
}
void OAIDeployJobRunMetadata::setCustom(const OAICustomMetadata &custom) {
    m_custom = custom;
    m_custom_isSet = true;
}

bool OAIDeployJobRunMetadata::is_custom_Set() const{
    return m_custom_isSet;
}

bool OAIDeployJobRunMetadata::is_custom_Valid() const{
    return m_custom_isValid;
}

OAICustomTargetDeployMetadata OAIDeployJobRunMetadata::getCustomTarget() const {
    return m_custom_target;
}
void OAIDeployJobRunMetadata::setCustomTarget(const OAICustomTargetDeployMetadata &custom_target) {
    m_custom_target = custom_target;
    m_custom_target_isSet = true;
}

bool OAIDeployJobRunMetadata::is_custom_target_Set() const{
    return m_custom_target_isSet;
}

bool OAIDeployJobRunMetadata::is_custom_target_Valid() const{
    return m_custom_target_isValid;
}

bool OAIDeployJobRunMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_run.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_target.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeployJobRunMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
