/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAutomationsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAutomationsResponse::OAIListAutomationsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAutomationsResponse::OAIListAutomationsResponse() {
    this->initializeModel();
}

OAIListAutomationsResponse::~OAIListAutomationsResponse() {}

void OAIListAutomationsResponse::initializeModel() {

    m_automations_isSet = false;
    m_automations_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_unreachable_isSet = false;
    m_unreachable_isValid = false;
}

void OAIListAutomationsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAutomationsResponse::fromJsonObject(QJsonObject json) {

    m_automations_isValid = ::OpenAPI::fromJsonValue(m_automations, json[QString("automations")]);
    m_automations_isSet = !json[QString("automations")].isNull() && m_automations_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_unreachable_isValid = ::OpenAPI::fromJsonValue(m_unreachable, json[QString("unreachable")]);
    m_unreachable_isSet = !json[QString("unreachable")].isNull() && m_unreachable_isValid;
}

QString OAIListAutomationsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAutomationsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_automations.size() > 0) {
        obj.insert(QString("automations"), ::OpenAPI::toJsonValue(m_automations));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_unreachable.size() > 0) {
        obj.insert(QString("unreachable"), ::OpenAPI::toJsonValue(m_unreachable));
    }
    return obj;
}

QList<OAIAutomation> OAIListAutomationsResponse::getAutomations() const {
    return m_automations;
}
void OAIListAutomationsResponse::setAutomations(const QList<OAIAutomation> &automations) {
    m_automations = automations;
    m_automations_isSet = true;
}

bool OAIListAutomationsResponse::is_automations_Set() const{
    return m_automations_isSet;
}

bool OAIListAutomationsResponse::is_automations_Valid() const{
    return m_automations_isValid;
}

QString OAIListAutomationsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListAutomationsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListAutomationsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListAutomationsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<QString> OAIListAutomationsResponse::getUnreachable() const {
    return m_unreachable;
}
void OAIListAutomationsResponse::setUnreachable(const QList<QString> &unreachable) {
    m_unreachable = unreachable;
    m_unreachable_isSet = true;
}

bool OAIListAutomationsResponse::is_unreachable_Set() const{
    return m_unreachable_isSet;
}

bool OAIListAutomationsResponse::is_unreachable_Valid() const{
    return m_unreachable_isValid;
}

bool OAIListAutomationsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unreachable.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAutomationsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
