/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRetryAttempt.h
 *
 * RetryAttempt represents an action of retrying the failed Cloud Deploy job.
 */

#ifndef OAIRetryAttempt_H
#define OAIRetryAttempt_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRetryAttempt : public OAIObject {
public:
    OAIRetryAttempt();
    OAIRetryAttempt(QString json);
    ~OAIRetryAttempt() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttempt() const;
    void setAttempt(const QString &attempt);
    bool is_attempt_Set() const;
    bool is_attempt_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStateDesc() const;
    void setStateDesc(const QString &state_desc);
    bool is_state_desc_Set() const;
    bool is_state_desc_Valid() const;

    QString getWait() const;
    void setWait(const QString &wait);
    bool is_wait_Set() const;
    bool is_wait_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attempt;
    bool m_attempt_isSet;
    bool m_attempt_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_state_desc;
    bool m_state_desc_isSet;
    bool m_state_desc_isValid;

    QString m_wait;
    bool m_wait_isSet;
    bool m_wait_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRetryAttempt)

#endif // OAIRetryAttempt_H
