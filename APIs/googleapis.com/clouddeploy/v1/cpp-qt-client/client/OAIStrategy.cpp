/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStrategy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStrategy::OAIStrategy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStrategy::OAIStrategy() {
    this->initializeModel();
}

OAIStrategy::~OAIStrategy() {}

void OAIStrategy::initializeModel() {

    m_canary_isSet = false;
    m_canary_isValid = false;

    m_standard_isSet = false;
    m_standard_isValid = false;
}

void OAIStrategy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStrategy::fromJsonObject(QJsonObject json) {

    m_canary_isValid = ::OpenAPI::fromJsonValue(m_canary, json[QString("canary")]);
    m_canary_isSet = !json[QString("canary")].isNull() && m_canary_isValid;

    m_standard_isValid = ::OpenAPI::fromJsonValue(m_standard, json[QString("standard")]);
    m_standard_isSet = !json[QString("standard")].isNull() && m_standard_isValid;
}

QString OAIStrategy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStrategy::asJsonObject() const {
    QJsonObject obj;
    if (m_canary.isSet()) {
        obj.insert(QString("canary"), ::OpenAPI::toJsonValue(m_canary));
    }
    if (m_standard.isSet()) {
        obj.insert(QString("standard"), ::OpenAPI::toJsonValue(m_standard));
    }
    return obj;
}

OAICanary OAIStrategy::getCanary() const {
    return m_canary;
}
void OAIStrategy::setCanary(const OAICanary &canary) {
    m_canary = canary;
    m_canary_isSet = true;
}

bool OAIStrategy::is_canary_Set() const{
    return m_canary_isSet;
}

bool OAIStrategy::is_canary_Valid() const{
    return m_canary_isValid;
}

OAIStandard OAIStrategy::getStandard() const {
    return m_standard;
}
void OAIStrategy::setStandard(const OAIStandard &standard) {
    m_standard = standard;
    m_standard_isSet = true;
}

bool OAIStrategy::is_standard_Set() const{
    return m_standard_isSet;
}

bool OAIStrategy::is_standard_Valid() const{
    return m_standard_isValid;
}

bool OAIStrategy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_canary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStrategy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
