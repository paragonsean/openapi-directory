/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRollbackTargetConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRollbackTargetConfig::OAIRollbackTargetConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRollbackTargetConfig::OAIRollbackTargetConfig() {
    this->initializeModel();
}

OAIRollbackTargetConfig::~OAIRollbackTargetConfig() {}

void OAIRollbackTargetConfig::initializeModel() {

    m_rollout_isSet = false;
    m_rollout_isValid = false;

    m_starting_phase_id_isSet = false;
    m_starting_phase_id_isValid = false;
}

void OAIRollbackTargetConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRollbackTargetConfig::fromJsonObject(QJsonObject json) {

    m_rollout_isValid = ::OpenAPI::fromJsonValue(m_rollout, json[QString("rollout")]);
    m_rollout_isSet = !json[QString("rollout")].isNull() && m_rollout_isValid;

    m_starting_phase_id_isValid = ::OpenAPI::fromJsonValue(m_starting_phase_id, json[QString("startingPhaseId")]);
    m_starting_phase_id_isSet = !json[QString("startingPhaseId")].isNull() && m_starting_phase_id_isValid;
}

QString OAIRollbackTargetConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRollbackTargetConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_rollout.isSet()) {
        obj.insert(QString("rollout"), ::OpenAPI::toJsonValue(m_rollout));
    }
    if (m_starting_phase_id_isSet) {
        obj.insert(QString("startingPhaseId"), ::OpenAPI::toJsonValue(m_starting_phase_id));
    }
    return obj;
}

OAIRollout OAIRollbackTargetConfig::getRollout() const {
    return m_rollout;
}
void OAIRollbackTargetConfig::setRollout(const OAIRollout &rollout) {
    m_rollout = rollout;
    m_rollout_isSet = true;
}

bool OAIRollbackTargetConfig::is_rollout_Set() const{
    return m_rollout_isSet;
}

bool OAIRollbackTargetConfig::is_rollout_Valid() const{
    return m_rollout_isValid;
}

QString OAIRollbackTargetConfig::getStartingPhaseId() const {
    return m_starting_phase_id;
}
void OAIRollbackTargetConfig::setStartingPhaseId(const QString &starting_phase_id) {
    m_starting_phase_id = starting_phase_id;
    m_starting_phase_id_isSet = true;
}

bool OAIRollbackTargetConfig::is_starting_phase_id_Set() const{
    return m_starting_phase_id_isSet;
}

bool OAIRollbackTargetConfig::is_starting_phase_id_Valid() const{
    return m_starting_phase_id_isValid;
}

bool OAIRollbackTargetConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rollout.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_starting_phase_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRollbackTargetConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
