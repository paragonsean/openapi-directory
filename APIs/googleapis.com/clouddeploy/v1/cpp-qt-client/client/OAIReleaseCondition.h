/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReleaseCondition.h
 *
 * ReleaseCondition contains all conditions relevant to a Release.
 */

#ifndef OAIReleaseCondition_H
#define OAIReleaseCondition_H

#include <QJsonObject>

#include "OAIReleaseReadyCondition.h"
#include "OAISkaffoldSupportedCondition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReleaseReadyCondition;
class OAISkaffoldSupportedCondition;

class OAIReleaseCondition : public OAIObject {
public:
    OAIReleaseCondition();
    OAIReleaseCondition(QString json);
    ~OAIReleaseCondition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReleaseReadyCondition getReleaseReadyCondition() const;
    void setReleaseReadyCondition(const OAIReleaseReadyCondition &release_ready_condition);
    bool is_release_ready_condition_Set() const;
    bool is_release_ready_condition_Valid() const;

    OAISkaffoldSupportedCondition getSkaffoldSupportedCondition() const;
    void setSkaffoldSupportedCondition(const OAISkaffoldSupportedCondition &skaffold_supported_condition);
    bool is_skaffold_supported_condition_Set() const;
    bool is_skaffold_supported_condition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReleaseReadyCondition m_release_ready_condition;
    bool m_release_ready_condition_isSet;
    bool m_release_ready_condition_isValid;

    OAISkaffoldSupportedCondition m_skaffold_supported_condition;
    bool m_skaffold_supported_condition_isSet;
    bool m_skaffold_supported_condition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReleaseCondition)

#endif // OAIReleaseCondition_H
