/**
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGatewayServiceMesh.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGatewayServiceMesh::OAIGatewayServiceMesh(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGatewayServiceMesh::OAIGatewayServiceMesh() {
    this->initializeModel();
}

OAIGatewayServiceMesh::~OAIGatewayServiceMesh() {}

void OAIGatewayServiceMesh::initializeModel() {

    m_deployment_isSet = false;
    m_deployment_isValid = false;

    m_http_route_isSet = false;
    m_http_route_isValid = false;

    m_route_update_wait_time_isSet = false;
    m_route_update_wait_time_isValid = false;

    m_service_isSet = false;
    m_service_isValid = false;

    m_stable_cutback_duration_isSet = false;
    m_stable_cutback_duration_isValid = false;
}

void OAIGatewayServiceMesh::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGatewayServiceMesh::fromJsonObject(QJsonObject json) {

    m_deployment_isValid = ::OpenAPI::fromJsonValue(m_deployment, json[QString("deployment")]);
    m_deployment_isSet = !json[QString("deployment")].isNull() && m_deployment_isValid;

    m_http_route_isValid = ::OpenAPI::fromJsonValue(m_http_route, json[QString("httpRoute")]);
    m_http_route_isSet = !json[QString("httpRoute")].isNull() && m_http_route_isValid;

    m_route_update_wait_time_isValid = ::OpenAPI::fromJsonValue(m_route_update_wait_time, json[QString("routeUpdateWaitTime")]);
    m_route_update_wait_time_isSet = !json[QString("routeUpdateWaitTime")].isNull() && m_route_update_wait_time_isValid;

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;

    m_stable_cutback_duration_isValid = ::OpenAPI::fromJsonValue(m_stable_cutback_duration, json[QString("stableCutbackDuration")]);
    m_stable_cutback_duration_isSet = !json[QString("stableCutbackDuration")].isNull() && m_stable_cutback_duration_isValid;
}

QString OAIGatewayServiceMesh::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGatewayServiceMesh::asJsonObject() const {
    QJsonObject obj;
    if (m_deployment_isSet) {
        obj.insert(QString("deployment"), ::OpenAPI::toJsonValue(m_deployment));
    }
    if (m_http_route_isSet) {
        obj.insert(QString("httpRoute"), ::OpenAPI::toJsonValue(m_http_route));
    }
    if (m_route_update_wait_time_isSet) {
        obj.insert(QString("routeUpdateWaitTime"), ::OpenAPI::toJsonValue(m_route_update_wait_time));
    }
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_stable_cutback_duration_isSet) {
        obj.insert(QString("stableCutbackDuration"), ::OpenAPI::toJsonValue(m_stable_cutback_duration));
    }
    return obj;
}

QString OAIGatewayServiceMesh::getDeployment() const {
    return m_deployment;
}
void OAIGatewayServiceMesh::setDeployment(const QString &deployment) {
    m_deployment = deployment;
    m_deployment_isSet = true;
}

bool OAIGatewayServiceMesh::is_deployment_Set() const{
    return m_deployment_isSet;
}

bool OAIGatewayServiceMesh::is_deployment_Valid() const{
    return m_deployment_isValid;
}

QString OAIGatewayServiceMesh::getHttpRoute() const {
    return m_http_route;
}
void OAIGatewayServiceMesh::setHttpRoute(const QString &http_route) {
    m_http_route = http_route;
    m_http_route_isSet = true;
}

bool OAIGatewayServiceMesh::is_http_route_Set() const{
    return m_http_route_isSet;
}

bool OAIGatewayServiceMesh::is_http_route_Valid() const{
    return m_http_route_isValid;
}

QString OAIGatewayServiceMesh::getRouteUpdateWaitTime() const {
    return m_route_update_wait_time;
}
void OAIGatewayServiceMesh::setRouteUpdateWaitTime(const QString &route_update_wait_time) {
    m_route_update_wait_time = route_update_wait_time;
    m_route_update_wait_time_isSet = true;
}

bool OAIGatewayServiceMesh::is_route_update_wait_time_Set() const{
    return m_route_update_wait_time_isSet;
}

bool OAIGatewayServiceMesh::is_route_update_wait_time_Valid() const{
    return m_route_update_wait_time_isValid;
}

QString OAIGatewayServiceMesh::getService() const {
    return m_service;
}
void OAIGatewayServiceMesh::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIGatewayServiceMesh::is_service_Set() const{
    return m_service_isSet;
}

bool OAIGatewayServiceMesh::is_service_Valid() const{
    return m_service_isValid;
}

QString OAIGatewayServiceMesh::getStableCutbackDuration() const {
    return m_stable_cutback_duration;
}
void OAIGatewayServiceMesh::setStableCutbackDuration(const QString &stable_cutback_duration) {
    m_stable_cutback_duration = stable_cutback_duration;
    m_stable_cutback_duration_isSet = true;
}

bool OAIGatewayServiceMesh::is_stable_cutback_duration_Set() const{
    return m_stable_cutback_duration_isSet;
}

bool OAIGatewayServiceMesh::is_stable_cutback_duration_Valid() const{
    return m_stable_cutback_duration_isValid;
}

bool OAIGatewayServiceMesh::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deployment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_http_route_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_update_wait_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stable_cutback_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGatewayServiceMesh::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
