/*
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the Kubernetes Gateway API service mesh configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:08.046775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GatewayServiceMesh {
  public static final String SERIALIZED_NAME_DEPLOYMENT = "deployment";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT)
  private String deployment;

  public static final String SERIALIZED_NAME_HTTP_ROUTE = "httpRoute";
  @SerializedName(SERIALIZED_NAME_HTTP_ROUTE)
  private String httpRoute;

  public static final String SERIALIZED_NAME_ROUTE_UPDATE_WAIT_TIME = "routeUpdateWaitTime";
  @SerializedName(SERIALIZED_NAME_ROUTE_UPDATE_WAIT_TIME)
  private String routeUpdateWaitTime;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private String service;

  public static final String SERIALIZED_NAME_STABLE_CUTBACK_DURATION = "stableCutbackDuration";
  @SerializedName(SERIALIZED_NAME_STABLE_CUTBACK_DURATION)
  private String stableCutbackDuration;

  public GatewayServiceMesh() {
  }

  public GatewayServiceMesh deployment(String deployment) {
    this.deployment = deployment;
    return this;
  }

  /**
   * Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.
   * @return deployment
   */
  @javax.annotation.Nullable
  public String getDeployment() {
    return deployment;
  }

  public void setDeployment(String deployment) {
    this.deployment = deployment;
  }


  public GatewayServiceMesh httpRoute(String httpRoute) {
    this.httpRoute = httpRoute;
    return this;
  }

  /**
   * Required. Name of the Gateway API HTTPRoute.
   * @return httpRoute
   */
  @javax.annotation.Nullable
  public String getHttpRoute() {
    return httpRoute;
  }

  public void setHttpRoute(String httpRoute) {
    this.httpRoute = httpRoute;
  }


  public GatewayServiceMesh routeUpdateWaitTime(String routeUpdateWaitTime) {
    this.routeUpdateWaitTime = routeUpdateWaitTime;
    return this;
  }

  /**
   * Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.
   * @return routeUpdateWaitTime
   */
  @javax.annotation.Nullable
  public String getRouteUpdateWaitTime() {
    return routeUpdateWaitTime;
  }

  public void setRouteUpdateWaitTime(String routeUpdateWaitTime) {
    this.routeUpdateWaitTime = routeUpdateWaitTime;
  }


  public GatewayServiceMesh service(String service) {
    this.service = service;
    return this;
  }

  /**
   * Required. Name of the Kubernetes Service.
   * @return service
   */
  @javax.annotation.Nullable
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }


  public GatewayServiceMesh stableCutbackDuration(String stableCutbackDuration) {
    this.stableCutbackDuration = stableCutbackDuration;
    return this;
  }

  /**
   * Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.
   * @return stableCutbackDuration
   */
  @javax.annotation.Nullable
  public String getStableCutbackDuration() {
    return stableCutbackDuration;
  }

  public void setStableCutbackDuration(String stableCutbackDuration) {
    this.stableCutbackDuration = stableCutbackDuration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayServiceMesh gatewayServiceMesh = (GatewayServiceMesh) o;
    return Objects.equals(this.deployment, gatewayServiceMesh.deployment) &&
        Objects.equals(this.httpRoute, gatewayServiceMesh.httpRoute) &&
        Objects.equals(this.routeUpdateWaitTime, gatewayServiceMesh.routeUpdateWaitTime) &&
        Objects.equals(this.service, gatewayServiceMesh.service) &&
        Objects.equals(this.stableCutbackDuration, gatewayServiceMesh.stableCutbackDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployment, httpRoute, routeUpdateWaitTime, service, stableCutbackDuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayServiceMesh {\n");
    sb.append("    deployment: ").append(toIndentedString(deployment)).append("\n");
    sb.append("    httpRoute: ").append(toIndentedString(httpRoute)).append("\n");
    sb.append("    routeUpdateWaitTime: ").append(toIndentedString(routeUpdateWaitTime)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    stableCutbackDuration: ").append(toIndentedString(stableCutbackDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deployment");
    openapiFields.add("httpRoute");
    openapiFields.add("routeUpdateWaitTime");
    openapiFields.add("service");
    openapiFields.add("stableCutbackDuration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GatewayServiceMesh
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GatewayServiceMesh.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GatewayServiceMesh is not found in the empty JSON string", GatewayServiceMesh.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GatewayServiceMesh.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GatewayServiceMesh` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deployment") != null && !jsonObj.get("deployment").isJsonNull()) && !jsonObj.get("deployment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deployment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deployment").toString()));
      }
      if ((jsonObj.get("httpRoute") != null && !jsonObj.get("httpRoute").isJsonNull()) && !jsonObj.get("httpRoute").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `httpRoute` to be a primitive type in the JSON string but got `%s`", jsonObj.get("httpRoute").toString()));
      }
      if ((jsonObj.get("routeUpdateWaitTime") != null && !jsonObj.get("routeUpdateWaitTime").isJsonNull()) && !jsonObj.get("routeUpdateWaitTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routeUpdateWaitTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routeUpdateWaitTime").toString()));
      }
      if ((jsonObj.get("service") != null && !jsonObj.get("service").isJsonNull()) && !jsonObj.get("service").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service").toString()));
      }
      if ((jsonObj.get("stableCutbackDuration") != null && !jsonObj.get("stableCutbackDuration").isJsonNull()) && !jsonObj.get("stableCutbackDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stableCutbackDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stableCutbackDuration").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GatewayServiceMesh.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GatewayServiceMesh' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GatewayServiceMesh> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GatewayServiceMesh.class));

       return (TypeAdapter<T>) new TypeAdapter<GatewayServiceMesh>() {
           @Override
           public void write(JsonWriter out, GatewayServiceMesh value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GatewayServiceMesh read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GatewayServiceMesh given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GatewayServiceMesh
   * @throws IOException if the JSON string is invalid with respect to GatewayServiceMesh
   */
  public static GatewayServiceMesh fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GatewayServiceMesh.class);
  }

  /**
   * Convert an instance of GatewayServiceMesh to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

