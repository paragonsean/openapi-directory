/*
 * Cloud Deploy API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PostdeployJobRun contains information specific to a postdeploy &#x60;JobRun&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:08.046775-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PostdeployJobRun {
  public static final String SERIALIZED_NAME_BUILD = "build";
  @SerializedName(SERIALIZED_NAME_BUILD)
  private String build;

  /**
   * Output only. The reason the postdeploy failed. This will always be unspecified while the postdeploy is in progress or if it succeeded.
   */
  @JsonAdapter(FailureCauseEnum.Adapter.class)
  public enum FailureCauseEnum {
    FAILURE_CAUSE_UNSPECIFIED("FAILURE_CAUSE_UNSPECIFIED"),
    
    CLOUD_BUILD_UNAVAILABLE("CLOUD_BUILD_UNAVAILABLE"),
    
    EXECUTION_FAILED("EXECUTION_FAILED"),
    
    DEADLINE_EXCEEDED("DEADLINE_EXCEEDED"),
    
    CLOUD_BUILD_REQUEST_FAILED("CLOUD_BUILD_REQUEST_FAILED");

    private String value;

    FailureCauseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FailureCauseEnum fromValue(String value) {
      for (FailureCauseEnum b : FailureCauseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FailureCauseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FailureCauseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FailureCauseEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FailureCauseEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FailureCauseEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FAILURE_CAUSE = "failureCause";
  @SerializedName(SERIALIZED_NAME_FAILURE_CAUSE)
  private FailureCauseEnum failureCause;

  public static final String SERIALIZED_NAME_FAILURE_MESSAGE = "failureMessage";
  @SerializedName(SERIALIZED_NAME_FAILURE_MESSAGE)
  private String failureMessage;

  public PostdeployJobRun() {
  }

  public PostdeployJobRun(
     String build, 
     FailureCauseEnum failureCause, 
     String failureMessage
  ) {
    this();
    this.build = build;
    this.failureCause = failureCause;
    this.failureMessage = failureMessage;
  }

  /**
   * Output only. The resource name of the Cloud Build &#x60;Build&#x60; object that is used to execute the custom actions associated with the postdeploy Job. Format is &#x60;projects/{project}/locations/{location}/builds/{build}&#x60;.
   * @return build
   */
  @javax.annotation.Nullable
  public String getBuild() {
    return build;
  }



  /**
   * Output only. The reason the postdeploy failed. This will always be unspecified while the postdeploy is in progress or if it succeeded.
   * @return failureCause
   */
  @javax.annotation.Nullable
  public FailureCauseEnum getFailureCause() {
    return failureCause;
  }



  /**
   * Output only. Additional information about the postdeploy failure, if available.
   * @return failureMessage
   */
  @javax.annotation.Nullable
  public String getFailureMessage() {
    return failureMessage;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostdeployJobRun postdeployJobRun = (PostdeployJobRun) o;
    return Objects.equals(this.build, postdeployJobRun.build) &&
        Objects.equals(this.failureCause, postdeployJobRun.failureCause) &&
        Objects.equals(this.failureMessage, postdeployJobRun.failureMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(build, failureCause, failureMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostdeployJobRun {\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    failureCause: ").append(toIndentedString(failureCause)).append("\n");
    sb.append("    failureMessage: ").append(toIndentedString(failureMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("build");
    openapiFields.add("failureCause");
    openapiFields.add("failureMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PostdeployJobRun
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostdeployJobRun.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostdeployJobRun is not found in the empty JSON string", PostdeployJobRun.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostdeployJobRun.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostdeployJobRun` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("build") != null && !jsonObj.get("build").isJsonNull()) && !jsonObj.get("build").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `build` to be a primitive type in the JSON string but got `%s`", jsonObj.get("build").toString()));
      }
      if ((jsonObj.get("failureCause") != null && !jsonObj.get("failureCause").isJsonNull()) && !jsonObj.get("failureCause").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failureCause` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failureCause").toString()));
      }
      // validate the optional field `failureCause`
      if (jsonObj.get("failureCause") != null && !jsonObj.get("failureCause").isJsonNull()) {
        FailureCauseEnum.validateJsonElement(jsonObj.get("failureCause"));
      }
      if ((jsonObj.get("failureMessage") != null && !jsonObj.get("failureMessage").isJsonNull()) && !jsonObj.get("failureMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failureMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failureMessage").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostdeployJobRun.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostdeployJobRun' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostdeployJobRun> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostdeployJobRun.class));

       return (TypeAdapter<T>) new TypeAdapter<PostdeployJobRun>() {
           @Override
           public void write(JsonWriter out, PostdeployJobRun value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostdeployJobRun read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PostdeployJobRun given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PostdeployJobRun
   * @throws IOException if the JSON string is invalid with respect to PostdeployJobRun
   */
  public static PostdeployJobRun fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostdeployJobRun.class);
  }

  /**
   * Convert an instance of PostdeployJobRun to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

