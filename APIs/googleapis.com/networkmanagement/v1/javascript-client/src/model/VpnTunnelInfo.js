/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VpnTunnelInfo model module.
 * @module model/VpnTunnelInfo
 * @version v1
 */
class VpnTunnelInfo {
    /**
     * Constructs a new <code>VpnTunnelInfo</code>.
     * For display only. Metadata associated with a Compute Engine VPN tunnel.
     * @alias module:model/VpnTunnelInfo
     */
    constructor() { 
        
        VpnTunnelInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnTunnelInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnTunnelInfo} obj Optional instance to populate.
     * @return {module:model/VpnTunnelInfo} The populated <code>VpnTunnelInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnTunnelInfo();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('networkUri')) {
                obj['networkUri'] = ApiClient.convertToType(data['networkUri'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('remoteGateway')) {
                obj['remoteGateway'] = ApiClient.convertToType(data['remoteGateway'], 'String');
            }
            if (data.hasOwnProperty('remoteGatewayIp')) {
                obj['remoteGatewayIp'] = ApiClient.convertToType(data['remoteGatewayIp'], 'String');
            }
            if (data.hasOwnProperty('routingType')) {
                obj['routingType'] = ApiClient.convertToType(data['routingType'], 'String');
            }
            if (data.hasOwnProperty('sourceGateway')) {
                obj['sourceGateway'] = ApiClient.convertToType(data['sourceGateway'], 'String');
            }
            if (data.hasOwnProperty('sourceGatewayIp')) {
                obj['sourceGatewayIp'] = ApiClient.convertToType(data['sourceGatewayIp'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnTunnelInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnTunnelInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['networkUri'] && !(typeof data['networkUri'] === 'string' || data['networkUri'] instanceof String)) {
            throw new Error("Expected the field `networkUri` to be a primitive type in the JSON string but got " + data['networkUri']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['remoteGateway'] && !(typeof data['remoteGateway'] === 'string' || data['remoteGateway'] instanceof String)) {
            throw new Error("Expected the field `remoteGateway` to be a primitive type in the JSON string but got " + data['remoteGateway']);
        }
        // ensure the json data is a string
        if (data['remoteGatewayIp'] && !(typeof data['remoteGatewayIp'] === 'string' || data['remoteGatewayIp'] instanceof String)) {
            throw new Error("Expected the field `remoteGatewayIp` to be a primitive type in the JSON string but got " + data['remoteGatewayIp']);
        }
        // ensure the json data is a string
        if (data['routingType'] && !(typeof data['routingType'] === 'string' || data['routingType'] instanceof String)) {
            throw new Error("Expected the field `routingType` to be a primitive type in the JSON string but got " + data['routingType']);
        }
        // ensure the json data is a string
        if (data['sourceGateway'] && !(typeof data['sourceGateway'] === 'string' || data['sourceGateway'] instanceof String)) {
            throw new Error("Expected the field `sourceGateway` to be a primitive type in the JSON string but got " + data['sourceGateway']);
        }
        // ensure the json data is a string
        if (data['sourceGatewayIp'] && !(typeof data['sourceGatewayIp'] === 'string' || data['sourceGatewayIp'] instanceof String)) {
            throw new Error("Expected the field `sourceGatewayIp` to be a primitive type in the JSON string but got " + data['sourceGatewayIp']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Name of a VPN tunnel.
 * @member {String} displayName
 */
VpnTunnelInfo.prototype['displayName'] = undefined;

/**
 * URI of a Compute Engine network where the VPN tunnel is configured.
 * @member {String} networkUri
 */
VpnTunnelInfo.prototype['networkUri'] = undefined;

/**
 * Name of a Google Cloud region where this VPN tunnel is configured.
 * @member {String} region
 */
VpnTunnelInfo.prototype['region'] = undefined;

/**
 * URI of a VPN gateway at remote end of the tunnel.
 * @member {String} remoteGateway
 */
VpnTunnelInfo.prototype['remoteGateway'] = undefined;

/**
 * Remote VPN gateway's IP address.
 * @member {String} remoteGatewayIp
 */
VpnTunnelInfo.prototype['remoteGatewayIp'] = undefined;

/**
 * Type of the routing policy.
 * @member {module:model/VpnTunnelInfo.RoutingTypeEnum} routingType
 */
VpnTunnelInfo.prototype['routingType'] = undefined;

/**
 * URI of the VPN gateway at local end of the tunnel.
 * @member {String} sourceGateway
 */
VpnTunnelInfo.prototype['sourceGateway'] = undefined;

/**
 * Local VPN gateway's IP address.
 * @member {String} sourceGatewayIp
 */
VpnTunnelInfo.prototype['sourceGatewayIp'] = undefined;

/**
 * URI of a VPN tunnel.
 * @member {String} uri
 */
VpnTunnelInfo.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>routingType</code> property.
 * @enum {String}
 * @readonly
 */
VpnTunnelInfo['RoutingTypeEnum'] = {

    /**
     * value: "ROUTING_TYPE_UNSPECIFIED"
     * @const
     */
    "ROUTING_TYPE_UNSPECIFIED": "ROUTING_TYPE_UNSPECIFIED",

    /**
     * value: "ROUTE_BASED"
     * @const
     */
    "ROUTE_BASED": "ROUTE_BASED",

    /**
     * value: "POLICY_BASED"
     * @const
     */
    "POLICY_BASED": "POLICY_BASED",

    /**
     * value: "DYNAMIC"
     * @const
     */
    "DYNAMIC": "DYNAMIC"
};



export default VpnTunnelInfo;

