/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppEngineVersionEndpoint from './AppEngineVersionEndpoint';
import CloudFunctionEndpoint from './CloudFunctionEndpoint';
import CloudRunRevisionEndpoint from './CloudRunRevisionEndpoint';

/**
 * The Endpoint model module.
 * @module model/Endpoint
 * @version v1
 */
class Endpoint {
    /**
     * Constructs a new <code>Endpoint</code>.
     * Source or destination of the Connectivity Test.
     * @alias module:model/Endpoint
     */
    constructor() { 
        
        Endpoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Endpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Endpoint} obj Optional instance to populate.
     * @return {module:model/Endpoint} The populated <code>Endpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Endpoint();

            if (data.hasOwnProperty('appEngineVersion')) {
                obj['appEngineVersion'] = AppEngineVersionEndpoint.constructFromObject(data['appEngineVersion']);
            }
            if (data.hasOwnProperty('cloudFunction')) {
                obj['cloudFunction'] = CloudFunctionEndpoint.constructFromObject(data['cloudFunction']);
            }
            if (data.hasOwnProperty('cloudRunRevision')) {
                obj['cloudRunRevision'] = CloudRunRevisionEndpoint.constructFromObject(data['cloudRunRevision']);
            }
            if (data.hasOwnProperty('cloudSqlInstance')) {
                obj['cloudSqlInstance'] = ApiClient.convertToType(data['cloudSqlInstance'], 'String');
            }
            if (data.hasOwnProperty('forwardingRule')) {
                obj['forwardingRule'] = ApiClient.convertToType(data['forwardingRule'], 'String');
            }
            if (data.hasOwnProperty('forwardingRuleTarget')) {
                obj['forwardingRuleTarget'] = ApiClient.convertToType(data['forwardingRuleTarget'], 'String');
            }
            if (data.hasOwnProperty('gkeMasterCluster')) {
                obj['gkeMasterCluster'] = ApiClient.convertToType(data['gkeMasterCluster'], 'String');
            }
            if (data.hasOwnProperty('instance')) {
                obj['instance'] = ApiClient.convertToType(data['instance'], 'String');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('loadBalancerId')) {
                obj['loadBalancerId'] = ApiClient.convertToType(data['loadBalancerId'], 'String');
            }
            if (data.hasOwnProperty('loadBalancerType')) {
                obj['loadBalancerType'] = ApiClient.convertToType(data['loadBalancerType'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('networkType')) {
                obj['networkType'] = ApiClient.convertToType(data['networkType'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'Number');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Endpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Endpoint</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appEngineVersion`
        if (data['appEngineVersion']) { // data not null
          AppEngineVersionEndpoint.validateJSON(data['appEngineVersion']);
        }
        // validate the optional field `cloudFunction`
        if (data['cloudFunction']) { // data not null
          CloudFunctionEndpoint.validateJSON(data['cloudFunction']);
        }
        // validate the optional field `cloudRunRevision`
        if (data['cloudRunRevision']) { // data not null
          CloudRunRevisionEndpoint.validateJSON(data['cloudRunRevision']);
        }
        // ensure the json data is a string
        if (data['cloudSqlInstance'] && !(typeof data['cloudSqlInstance'] === 'string' || data['cloudSqlInstance'] instanceof String)) {
            throw new Error("Expected the field `cloudSqlInstance` to be a primitive type in the JSON string but got " + data['cloudSqlInstance']);
        }
        // ensure the json data is a string
        if (data['forwardingRule'] && !(typeof data['forwardingRule'] === 'string' || data['forwardingRule'] instanceof String)) {
            throw new Error("Expected the field `forwardingRule` to be a primitive type in the JSON string but got " + data['forwardingRule']);
        }
        // ensure the json data is a string
        if (data['forwardingRuleTarget'] && !(typeof data['forwardingRuleTarget'] === 'string' || data['forwardingRuleTarget'] instanceof String)) {
            throw new Error("Expected the field `forwardingRuleTarget` to be a primitive type in the JSON string but got " + data['forwardingRuleTarget']);
        }
        // ensure the json data is a string
        if (data['gkeMasterCluster'] && !(typeof data['gkeMasterCluster'] === 'string' || data['gkeMasterCluster'] instanceof String)) {
            throw new Error("Expected the field `gkeMasterCluster` to be a primitive type in the JSON string but got " + data['gkeMasterCluster']);
        }
        // ensure the json data is a string
        if (data['instance'] && !(typeof data['instance'] === 'string' || data['instance'] instanceof String)) {
            throw new Error("Expected the field `instance` to be a primitive type in the JSON string but got " + data['instance']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['loadBalancerId'] && !(typeof data['loadBalancerId'] === 'string' || data['loadBalancerId'] instanceof String)) {
            throw new Error("Expected the field `loadBalancerId` to be a primitive type in the JSON string but got " + data['loadBalancerId']);
        }
        // ensure the json data is a string
        if (data['loadBalancerType'] && !(typeof data['loadBalancerType'] === 'string' || data['loadBalancerType'] instanceof String)) {
            throw new Error("Expected the field `loadBalancerType` to be a primitive type in the JSON string but got " + data['loadBalancerType']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['networkType'] && !(typeof data['networkType'] === 'string' || data['networkType'] instanceof String)) {
            throw new Error("Expected the field `networkType` to be a primitive type in the JSON string but got " + data['networkType']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppEngineVersionEndpoint} appEngineVersion
 */
Endpoint.prototype['appEngineVersion'] = undefined;

/**
 * @member {module:model/CloudFunctionEndpoint} cloudFunction
 */
Endpoint.prototype['cloudFunction'] = undefined;

/**
 * @member {module:model/CloudRunRevisionEndpoint} cloudRunRevision
 */
Endpoint.prototype['cloudRunRevision'] = undefined;

/**
 * A [Cloud SQL](https://cloud.google.com/sql) instance URI.
 * @member {String} cloudSqlInstance
 */
Endpoint.prototype['cloudSqlInstance'] = undefined;

/**
 * A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}
 * @member {String} forwardingRule
 */
Endpoint.prototype['forwardingRule'] = undefined;

/**
 * Output only. Specifies the type of the target of the forwarding rule.
 * @member {module:model/Endpoint.ForwardingRuleTargetEnum} forwardingRuleTarget
 */
Endpoint.prototype['forwardingRuleTarget'] = undefined;

/**
 * A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
 * @member {String} gkeMasterCluster
 */
Endpoint.prototype['gkeMasterCluster'] = undefined;

/**
 * A Compute Engine instance URI.
 * @member {String} instance
 */
Endpoint.prototype['instance'] = undefined;

/**
 * The IP address of the endpoint, which can be an external or internal IP.
 * @member {String} ipAddress
 */
Endpoint.prototype['ipAddress'] = undefined;

/**
 * Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.
 * @member {String} loadBalancerId
 */
Endpoint.prototype['loadBalancerId'] = undefined;

/**
 * Output only. Type of the load balancer the forwarding rule points to.
 * @member {module:model/Endpoint.LoadBalancerTypeEnum} loadBalancerType
 */
Endpoint.prototype['loadBalancerType'] = undefined;

/**
 * A Compute Engine network URI.
 * @member {String} network
 */
Endpoint.prototype['network'] = undefined;

/**
 * Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
 * @member {module:model/Endpoint.NetworkTypeEnum} networkType
 */
Endpoint.prototype['networkType'] = undefined;

/**
 * The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
 * @member {Number} port
 */
Endpoint.prototype['port'] = undefined;

/**
 * Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
 * @member {String} projectId
 */
Endpoint.prototype['projectId'] = undefined;





/**
 * Allowed values for the <code>forwardingRuleTarget</code> property.
 * @enum {String}
 * @readonly
 */
Endpoint['ForwardingRuleTargetEnum'] = {

    /**
     * value: "FORWARDING_RULE_TARGET_UNSPECIFIED"
     * @const
     */
    "FORWARDING_RULE_TARGET_UNSPECIFIED": "FORWARDING_RULE_TARGET_UNSPECIFIED",

    /**
     * value: "INSTANCE"
     * @const
     */
    "INSTANCE": "INSTANCE",

    /**
     * value: "LOAD_BALANCER"
     * @const
     */
    "LOAD_BALANCER": "LOAD_BALANCER",

    /**
     * value: "VPN_GATEWAY"
     * @const
     */
    "VPN_GATEWAY": "VPN_GATEWAY",

    /**
     * value: "PSC"
     * @const
     */
    "PSC": "PSC"
};


/**
 * Allowed values for the <code>loadBalancerType</code> property.
 * @enum {String}
 * @readonly
 */
Endpoint['LoadBalancerTypeEnum'] = {

    /**
     * value: "LOAD_BALANCER_TYPE_UNSPECIFIED"
     * @const
     */
    "LOAD_BALANCER_TYPE_UNSPECIFIED": "LOAD_BALANCER_TYPE_UNSPECIFIED",

    /**
     * value: "HTTPS_ADVANCED_LOAD_BALANCER"
     * @const
     */
    "HTTPS_ADVANCED_LOAD_BALANCER": "HTTPS_ADVANCED_LOAD_BALANCER",

    /**
     * value: "HTTPS_LOAD_BALANCER"
     * @const
     */
    "HTTPS_LOAD_BALANCER": "HTTPS_LOAD_BALANCER",

    /**
     * value: "REGIONAL_HTTPS_LOAD_BALANCER"
     * @const
     */
    "REGIONAL_HTTPS_LOAD_BALANCER": "REGIONAL_HTTPS_LOAD_BALANCER",

    /**
     * value: "INTERNAL_HTTPS_LOAD_BALANCER"
     * @const
     */
    "INTERNAL_HTTPS_LOAD_BALANCER": "INTERNAL_HTTPS_LOAD_BALANCER",

    /**
     * value: "SSL_PROXY_LOAD_BALANCER"
     * @const
     */
    "SSL_PROXY_LOAD_BALANCER": "SSL_PROXY_LOAD_BALANCER",

    /**
     * value: "TCP_PROXY_LOAD_BALANCER"
     * @const
     */
    "TCP_PROXY_LOAD_BALANCER": "TCP_PROXY_LOAD_BALANCER",

    /**
     * value: "INTERNAL_TCP_PROXY_LOAD_BALANCER"
     * @const
     */
    "INTERNAL_TCP_PROXY_LOAD_BALANCER": "INTERNAL_TCP_PROXY_LOAD_BALANCER",

    /**
     * value: "NETWORK_LOAD_BALANCER"
     * @const
     */
    "NETWORK_LOAD_BALANCER": "NETWORK_LOAD_BALANCER",

    /**
     * value: "LEGACY_NETWORK_LOAD_BALANCER"
     * @const
     */
    "LEGACY_NETWORK_LOAD_BALANCER": "LEGACY_NETWORK_LOAD_BALANCER",

    /**
     * value: "TCP_UDP_INTERNAL_LOAD_BALANCER"
     * @const
     */
    "TCP_UDP_INTERNAL_LOAD_BALANCER": "TCP_UDP_INTERNAL_LOAD_BALANCER"
};


/**
 * Allowed values for the <code>networkType</code> property.
 * @enum {String}
 * @readonly
 */
Endpoint['NetworkTypeEnum'] = {

    /**
     * value: "NETWORK_TYPE_UNSPECIFIED"
     * @const
     */
    "NETWORK_TYPE_UNSPECIFIED": "NETWORK_TYPE_UNSPECIFIED",

    /**
     * value: "GCP_NETWORK"
     * @const
     */
    "GCP_NETWORK": "GCP_NETWORK",

    /**
     * value: "NON_GCP_NETWORK"
     * @const
     */
    "NON_GCP_NETWORK": "NON_GCP_NETWORK"
};



export default Endpoint;

