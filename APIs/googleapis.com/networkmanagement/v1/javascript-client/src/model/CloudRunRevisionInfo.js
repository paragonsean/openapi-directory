/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloudRunRevisionInfo model module.
 * @module model/CloudRunRevisionInfo
 * @version v1
 */
class CloudRunRevisionInfo {
    /**
     * Constructs a new <code>CloudRunRevisionInfo</code>.
     * For display only. Metadata associated with a Cloud Run revision.
     * @alias module:model/CloudRunRevisionInfo
     */
    constructor() { 
        
        CloudRunRevisionInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudRunRevisionInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudRunRevisionInfo} obj Optional instance to populate.
     * @return {module:model/CloudRunRevisionInfo} The populated <code>CloudRunRevisionInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudRunRevisionInfo();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('serviceUri')) {
                obj['serviceUri'] = ApiClient.convertToType(data['serviceUri'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudRunRevisionInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudRunRevisionInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['serviceUri'] && !(typeof data['serviceUri'] === 'string' || data['serviceUri'] instanceof String)) {
            throw new Error("Expected the field `serviceUri` to be a primitive type in the JSON string but got " + data['serviceUri']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Name of a Cloud Run revision.
 * @member {String} displayName
 */
CloudRunRevisionInfo.prototype['displayName'] = undefined;

/**
 * Location in which this revision is deployed.
 * @member {String} location
 */
CloudRunRevisionInfo.prototype['location'] = undefined;

/**
 * URI of Cloud Run service this revision belongs to.
 * @member {String} serviceUri
 */
CloudRunRevisionInfo.prototype['serviceUri'] = undefined;

/**
 * URI of a Cloud Run revision.
 * @member {String} uri
 */
CloudRunRevisionInfo.prototype['uri'] = undefined;






export default CloudRunRevisionInfo;

