/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VpnGatewayInfo model module.
 * @module model/VpnGatewayInfo
 * @version v1
 */
class VpnGatewayInfo {
    /**
     * Constructs a new <code>VpnGatewayInfo</code>.
     * For display only. Metadata associated with a Compute Engine VPN gateway.
     * @alias module:model/VpnGatewayInfo
     */
    constructor() { 
        
        VpnGatewayInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnGatewayInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnGatewayInfo} obj Optional instance to populate.
     * @return {module:model/VpnGatewayInfo} The populated <code>VpnGatewayInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnGatewayInfo();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('networkUri')) {
                obj['networkUri'] = ApiClient.convertToType(data['networkUri'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('vpnTunnelUri')) {
                obj['vpnTunnelUri'] = ApiClient.convertToType(data['vpnTunnelUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnGatewayInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnGatewayInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['networkUri'] && !(typeof data['networkUri'] === 'string' || data['networkUri'] instanceof String)) {
            throw new Error("Expected the field `networkUri` to be a primitive type in the JSON string but got " + data['networkUri']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }
        // ensure the json data is a string
        if (data['vpnTunnelUri'] && !(typeof data['vpnTunnelUri'] === 'string' || data['vpnTunnelUri'] instanceof String)) {
            throw new Error("Expected the field `vpnTunnelUri` to be a primitive type in the JSON string but got " + data['vpnTunnelUri']);
        }

        return true;
    }


}



/**
 * Name of a VPN gateway.
 * @member {String} displayName
 */
VpnGatewayInfo.prototype['displayName'] = undefined;

/**
 * IP address of the VPN gateway.
 * @member {String} ipAddress
 */
VpnGatewayInfo.prototype['ipAddress'] = undefined;

/**
 * URI of a Compute Engine network where the VPN gateway is configured.
 * @member {String} networkUri
 */
VpnGatewayInfo.prototype['networkUri'] = undefined;

/**
 * Name of a Google Cloud region where this VPN gateway is configured.
 * @member {String} region
 */
VpnGatewayInfo.prototype['region'] = undefined;

/**
 * URI of a VPN gateway.
 * @member {String} uri
 */
VpnGatewayInfo.prototype['uri'] = undefined;

/**
 * A VPN tunnel that is associated with this VPN gateway. There may be multiple VPN tunnels configured on a VPN gateway, and only the one relevant to the test is displayed.
 * @member {String} vpnTunnelUri
 */
VpnGatewayInfo.prototype['vpnTunnelUri'] = undefined;






export default VpnGatewayInfo;

