/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEdgeLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEdgeLocation::OAIEdgeLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEdgeLocation::OAIEdgeLocation() {
    this->initializeModel();
}

OAIEdgeLocation::~OAIEdgeLocation() {}

void OAIEdgeLocation::initializeModel() {

    m_metropolitan_area_isSet = false;
    m_metropolitan_area_isValid = false;
}

void OAIEdgeLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEdgeLocation::fromJsonObject(QJsonObject json) {

    m_metropolitan_area_isValid = ::OpenAPI::fromJsonValue(m_metropolitan_area, json[QString("metropolitanArea")]);
    m_metropolitan_area_isSet = !json[QString("metropolitanArea")].isNull() && m_metropolitan_area_isValid;
}

QString OAIEdgeLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEdgeLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_metropolitan_area_isSet) {
        obj.insert(QString("metropolitanArea"), ::OpenAPI::toJsonValue(m_metropolitan_area));
    }
    return obj;
}

QString OAIEdgeLocation::getMetropolitanArea() const {
    return m_metropolitan_area;
}
void OAIEdgeLocation::setMetropolitanArea(const QString &metropolitan_area) {
    m_metropolitan_area = metropolitan_area;
    m_metropolitan_area_isSet = true;
}

bool OAIEdgeLocation::is_metropolitan_area_Set() const{
    return m_metropolitan_area_isSet;
}

bool OAIEdgeLocation::is_metropolitan_area_Valid() const{
    return m_metropolitan_area_isValid;
}

bool OAIEdgeLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metropolitan_area_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEdgeLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
