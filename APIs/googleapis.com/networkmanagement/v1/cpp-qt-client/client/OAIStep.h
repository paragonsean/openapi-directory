/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStep.h
 *
 * A simulated forwarding path is composed of multiple steps. Each step has a well-defined state and an associated configuration.
 */

#ifndef OAIStep_H
#define OAIStep_H

#include <QJsonObject>

#include "OAIAbortInfo.h"
#include "OAIAppEngineVersionInfo.h"
#include "OAICloudFunctionInfo.h"
#include "OAICloudRunRevisionInfo.h"
#include "OAICloudSQLInstanceInfo.h"
#include "OAIDeliverInfo.h"
#include "OAIDropInfo.h"
#include "OAIEndpointInfo.h"
#include "OAIFirewallInfo.h"
#include "OAIForwardInfo.h"
#include "OAIForwardingRuleInfo.h"
#include "OAIGKEMasterInfo.h"
#include "OAIGoogleServiceInfo.h"
#include "OAIInstanceInfo.h"
#include "OAILoadBalancerBackendInfo.h"
#include "OAILoadBalancerInfo.h"
#include "OAINatInfo.h"
#include "OAINetworkInfo.h"
#include "OAIProxyConnectionInfo.h"
#include "OAIRouteInfo.h"
#include "OAIStorageBucketInfo.h"
#include "OAIVpcConnectorInfo.h"
#include "OAIVpnGatewayInfo.h"
#include "OAIVpnTunnelInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAbortInfo;
class OAIAppEngineVersionInfo;
class OAICloudFunctionInfo;
class OAICloudRunRevisionInfo;
class OAICloudSQLInstanceInfo;
class OAIDeliverInfo;
class OAIDropInfo;
class OAIEndpointInfo;
class OAIFirewallInfo;
class OAIForwardInfo;
class OAIForwardingRuleInfo;
class OAIGKEMasterInfo;
class OAIGoogleServiceInfo;
class OAIInstanceInfo;
class OAILoadBalancerInfo;
class OAILoadBalancerBackendInfo;
class OAINatInfo;
class OAINetworkInfo;
class OAIProxyConnectionInfo;
class OAIRouteInfo;
class OAIStorageBucketInfo;
class OAIVpcConnectorInfo;
class OAIVpnGatewayInfo;
class OAIVpnTunnelInfo;

class OAIStep : public OAIObject {
public:
    OAIStep();
    OAIStep(QString json);
    ~OAIStep() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAbortInfo getAbort() const;
    void setAbort(const OAIAbortInfo &abort);
    bool is_abort_Set() const;
    bool is_abort_Valid() const;

    OAIAppEngineVersionInfo getAppEngineVersion() const;
    void setAppEngineVersion(const OAIAppEngineVersionInfo &app_engine_version);
    bool is_app_engine_version_Set() const;
    bool is_app_engine_version_Valid() const;

    bool isCausesDrop() const;
    void setCausesDrop(const bool &causes_drop);
    bool is_causes_drop_Set() const;
    bool is_causes_drop_Valid() const;

    OAICloudFunctionInfo getCloudFunction() const;
    void setCloudFunction(const OAICloudFunctionInfo &cloud_function);
    bool is_cloud_function_Set() const;
    bool is_cloud_function_Valid() const;

    OAICloudRunRevisionInfo getCloudRunRevision() const;
    void setCloudRunRevision(const OAICloudRunRevisionInfo &cloud_run_revision);
    bool is_cloud_run_revision_Set() const;
    bool is_cloud_run_revision_Valid() const;

    OAICloudSQLInstanceInfo getCloudSqlInstance() const;
    void setCloudSqlInstance(const OAICloudSQLInstanceInfo &cloud_sql_instance);
    bool is_cloud_sql_instance_Set() const;
    bool is_cloud_sql_instance_Valid() const;

    OAIDeliverInfo getDeliver() const;
    void setDeliver(const OAIDeliverInfo &deliver);
    bool is_deliver_Set() const;
    bool is_deliver_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDropInfo getDrop() const;
    void setDrop(const OAIDropInfo &drop);
    bool is_drop_Set() const;
    bool is_drop_Valid() const;

    OAIEndpointInfo getEndpoint() const;
    void setEndpoint(const OAIEndpointInfo &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    OAIFirewallInfo getFirewall() const;
    void setFirewall(const OAIFirewallInfo &firewall);
    bool is_firewall_Set() const;
    bool is_firewall_Valid() const;

    OAIForwardInfo getForward() const;
    void setForward(const OAIForwardInfo &forward);
    bool is_forward_Set() const;
    bool is_forward_Valid() const;

    OAIForwardingRuleInfo getForwardingRule() const;
    void setForwardingRule(const OAIForwardingRuleInfo &forwarding_rule);
    bool is_forwarding_rule_Set() const;
    bool is_forwarding_rule_Valid() const;

    OAIGKEMasterInfo getGkeMaster() const;
    void setGkeMaster(const OAIGKEMasterInfo &gke_master);
    bool is_gke_master_Set() const;
    bool is_gke_master_Valid() const;

    OAIGoogleServiceInfo getGoogleService() const;
    void setGoogleService(const OAIGoogleServiceInfo &google_service);
    bool is_google_service_Set() const;
    bool is_google_service_Valid() const;

    OAIInstanceInfo getInstance() const;
    void setInstance(const OAIInstanceInfo &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    OAILoadBalancerInfo getLoadBalancer() const;
    void setLoadBalancer(const OAILoadBalancerInfo &load_balancer);
    bool is_load_balancer_Set() const;
    bool is_load_balancer_Valid() const;

    OAILoadBalancerBackendInfo getLoadBalancerBackendInfo() const;
    void setLoadBalancerBackendInfo(const OAILoadBalancerBackendInfo &load_balancer_backend_info);
    bool is_load_balancer_backend_info_Set() const;
    bool is_load_balancer_backend_info_Valid() const;

    OAINatInfo getNat() const;
    void setNat(const OAINatInfo &nat);
    bool is_nat_Set() const;
    bool is_nat_Valid() const;

    OAINetworkInfo getNetwork() const;
    void setNetwork(const OAINetworkInfo &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    OAIProxyConnectionInfo getProxyConnection() const;
    void setProxyConnection(const OAIProxyConnectionInfo &proxy_connection);
    bool is_proxy_connection_Set() const;
    bool is_proxy_connection_Valid() const;

    OAIRouteInfo getRoute() const;
    void setRoute(const OAIRouteInfo &route);
    bool is_route_Set() const;
    bool is_route_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIStorageBucketInfo getStorageBucket() const;
    void setStorageBucket(const OAIStorageBucketInfo &storage_bucket);
    bool is_storage_bucket_Set() const;
    bool is_storage_bucket_Valid() const;

    OAIVpcConnectorInfo getVpcConnector() const;
    void setVpcConnector(const OAIVpcConnectorInfo &vpc_connector);
    bool is_vpc_connector_Set() const;
    bool is_vpc_connector_Valid() const;

    OAIVpnGatewayInfo getVpnGateway() const;
    void setVpnGateway(const OAIVpnGatewayInfo &vpn_gateway);
    bool is_vpn_gateway_Set() const;
    bool is_vpn_gateway_Valid() const;

    OAIVpnTunnelInfo getVpnTunnel() const;
    void setVpnTunnel(const OAIVpnTunnelInfo &vpn_tunnel);
    bool is_vpn_tunnel_Set() const;
    bool is_vpn_tunnel_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAbortInfo m_abort;
    bool m_abort_isSet;
    bool m_abort_isValid;

    OAIAppEngineVersionInfo m_app_engine_version;
    bool m_app_engine_version_isSet;
    bool m_app_engine_version_isValid;

    bool m_causes_drop;
    bool m_causes_drop_isSet;
    bool m_causes_drop_isValid;

    OAICloudFunctionInfo m_cloud_function;
    bool m_cloud_function_isSet;
    bool m_cloud_function_isValid;

    OAICloudRunRevisionInfo m_cloud_run_revision;
    bool m_cloud_run_revision_isSet;
    bool m_cloud_run_revision_isValid;

    OAICloudSQLInstanceInfo m_cloud_sql_instance;
    bool m_cloud_sql_instance_isSet;
    bool m_cloud_sql_instance_isValid;

    OAIDeliverInfo m_deliver;
    bool m_deliver_isSet;
    bool m_deliver_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDropInfo m_drop;
    bool m_drop_isSet;
    bool m_drop_isValid;

    OAIEndpointInfo m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    OAIFirewallInfo m_firewall;
    bool m_firewall_isSet;
    bool m_firewall_isValid;

    OAIForwardInfo m_forward;
    bool m_forward_isSet;
    bool m_forward_isValid;

    OAIForwardingRuleInfo m_forwarding_rule;
    bool m_forwarding_rule_isSet;
    bool m_forwarding_rule_isValid;

    OAIGKEMasterInfo m_gke_master;
    bool m_gke_master_isSet;
    bool m_gke_master_isValid;

    OAIGoogleServiceInfo m_google_service;
    bool m_google_service_isSet;
    bool m_google_service_isValid;

    OAIInstanceInfo m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    OAILoadBalancerInfo m_load_balancer;
    bool m_load_balancer_isSet;
    bool m_load_balancer_isValid;

    OAILoadBalancerBackendInfo m_load_balancer_backend_info;
    bool m_load_balancer_backend_info_isSet;
    bool m_load_balancer_backend_info_isValid;

    OAINatInfo m_nat;
    bool m_nat_isSet;
    bool m_nat_isValid;

    OAINetworkInfo m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    OAIProxyConnectionInfo m_proxy_connection;
    bool m_proxy_connection_isSet;
    bool m_proxy_connection_isValid;

    OAIRouteInfo m_route;
    bool m_route_isSet;
    bool m_route_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIStorageBucketInfo m_storage_bucket;
    bool m_storage_bucket_isSet;
    bool m_storage_bucket_isValid;

    OAIVpcConnectorInfo m_vpc_connector;
    bool m_vpc_connector_isSet;
    bool m_vpc_connector_isValid;

    OAIVpnGatewayInfo m_vpn_gateway;
    bool m_vpn_gateway_isSet;
    bool m_vpn_gateway_isValid;

    OAIVpnTunnelInfo m_vpn_tunnel;
    bool m_vpn_tunnel_isSet;
    bool m_vpn_tunnel_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStep)

#endif // OAIStep_H
