/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleServiceInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleServiceInfo::OAIGoogleServiceInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleServiceInfo::OAIGoogleServiceInfo() {
    this->initializeModel();
}

OAIGoogleServiceInfo::~OAIGoogleServiceInfo() {}

void OAIGoogleServiceInfo::initializeModel() {

    m_google_service_type_isSet = false;
    m_google_service_type_isValid = false;

    m_source_ip_isSet = false;
    m_source_ip_isValid = false;
}

void OAIGoogleServiceInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleServiceInfo::fromJsonObject(QJsonObject json) {

    m_google_service_type_isValid = ::OpenAPI::fromJsonValue(m_google_service_type, json[QString("googleServiceType")]);
    m_google_service_type_isSet = !json[QString("googleServiceType")].isNull() && m_google_service_type_isValid;

    m_source_ip_isValid = ::OpenAPI::fromJsonValue(m_source_ip, json[QString("sourceIp")]);
    m_source_ip_isSet = !json[QString("sourceIp")].isNull() && m_source_ip_isValid;
}

QString OAIGoogleServiceInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleServiceInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_google_service_type_isSet) {
        obj.insert(QString("googleServiceType"), ::OpenAPI::toJsonValue(m_google_service_type));
    }
    if (m_source_ip_isSet) {
        obj.insert(QString("sourceIp"), ::OpenAPI::toJsonValue(m_source_ip));
    }
    return obj;
}

QString OAIGoogleServiceInfo::getGoogleServiceType() const {
    return m_google_service_type;
}
void OAIGoogleServiceInfo::setGoogleServiceType(const QString &google_service_type) {
    m_google_service_type = google_service_type;
    m_google_service_type_isSet = true;
}

bool OAIGoogleServiceInfo::is_google_service_type_Set() const{
    return m_google_service_type_isSet;
}

bool OAIGoogleServiceInfo::is_google_service_type_Valid() const{
    return m_google_service_type_isValid;
}

QString OAIGoogleServiceInfo::getSourceIp() const {
    return m_source_ip;
}
void OAIGoogleServiceInfo::setSourceIp(const QString &source_ip) {
    m_source_ip = source_ip;
    m_source_ip_isSet = true;
}

bool OAIGoogleServiceInfo::is_source_ip_Set() const{
    return m_source_ip_isSet;
}

bool OAIGoogleServiceInfo::is_source_ip_Valid() const{
    return m_source_ip_isValid;
}

bool OAIGoogleServiceInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_google_service_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_ip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleServiceInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
