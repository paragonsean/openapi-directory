# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GKEMasterInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_network_uri: str=None, cluster_uri: str=None, external_ip: str=None, internal_ip: str=None):
        """GKEMasterInfo - a model defined in OpenAPI

        :param cluster_network_uri: The cluster_network_uri of this GKEMasterInfo.
        :param cluster_uri: The cluster_uri of this GKEMasterInfo.
        :param external_ip: The external_ip of this GKEMasterInfo.
        :param internal_ip: The internal_ip of this GKEMasterInfo.
        """
        self.openapi_types = {
            'cluster_network_uri': str,
            'cluster_uri': str,
            'external_ip': str,
            'internal_ip': str
        }

        self.attribute_map = {
            'cluster_network_uri': 'clusterNetworkUri',
            'cluster_uri': 'clusterUri',
            'external_ip': 'externalIp',
            'internal_ip': 'internalIp'
        }

        self._cluster_network_uri = cluster_network_uri
        self._cluster_uri = cluster_uri
        self._external_ip = external_ip
        self._internal_ip = internal_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GKEMasterInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GKEMasterInfo of this GKEMasterInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_network_uri(self):
        """Gets the cluster_network_uri of this GKEMasterInfo.

        URI of a GKE cluster network.

        :return: The cluster_network_uri of this GKEMasterInfo.
        :rtype: str
        """
        return self._cluster_network_uri

    @cluster_network_uri.setter
    def cluster_network_uri(self, cluster_network_uri):
        """Sets the cluster_network_uri of this GKEMasterInfo.

        URI of a GKE cluster network.

        :param cluster_network_uri: The cluster_network_uri of this GKEMasterInfo.
        :type cluster_network_uri: str
        """

        self._cluster_network_uri = cluster_network_uri

    @property
    def cluster_uri(self):
        """Gets the cluster_uri of this GKEMasterInfo.

        URI of a GKE cluster.

        :return: The cluster_uri of this GKEMasterInfo.
        :rtype: str
        """
        return self._cluster_uri

    @cluster_uri.setter
    def cluster_uri(self, cluster_uri):
        """Sets the cluster_uri of this GKEMasterInfo.

        URI of a GKE cluster.

        :param cluster_uri: The cluster_uri of this GKEMasterInfo.
        :type cluster_uri: str
        """

        self._cluster_uri = cluster_uri

    @property
    def external_ip(self):
        """Gets the external_ip of this GKEMasterInfo.

        External IP address of a GKE cluster master.

        :return: The external_ip of this GKEMasterInfo.
        :rtype: str
        """
        return self._external_ip

    @external_ip.setter
    def external_ip(self, external_ip):
        """Sets the external_ip of this GKEMasterInfo.

        External IP address of a GKE cluster master.

        :param external_ip: The external_ip of this GKEMasterInfo.
        :type external_ip: str
        """

        self._external_ip = external_ip

    @property
    def internal_ip(self):
        """Gets the internal_ip of this GKEMasterInfo.

        Internal IP address of a GKE cluster master.

        :return: The internal_ip of this GKEMasterInfo.
        :rtype: str
        """
        return self._internal_ip

    @internal_ip.setter
    def internal_ip(self, internal_ip):
        """Sets the internal_ip of this GKEMasterInfo.

        Internal IP address of a GKE cluster master.

        :param internal_ip: The internal_ip of this GKEMasterInfo.
        :type internal_ip: str
        """

        self._internal_ip = internal_ip
