# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleServiceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, google_service_type: str=None, source_ip: str=None):
        """GoogleServiceInfo - a model defined in OpenAPI

        :param google_service_type: The google_service_type of this GoogleServiceInfo.
        :param source_ip: The source_ip of this GoogleServiceInfo.
        """
        self.openapi_types = {
            'google_service_type': str,
            'source_ip': str
        }

        self.attribute_map = {
            'google_service_type': 'googleServiceType',
            'source_ip': 'sourceIp'
        }

        self._google_service_type = google_service_type
        self._source_ip = source_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleServiceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleServiceInfo of this GoogleServiceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def google_service_type(self):
        """Gets the google_service_type of this GoogleServiceInfo.

        Recognized type of a Google Service.

        :return: The google_service_type of this GoogleServiceInfo.
        :rtype: str
        """
        return self._google_service_type

    @google_service_type.setter
    def google_service_type(self, google_service_type):
        """Sets the google_service_type of this GoogleServiceInfo.

        Recognized type of a Google Service.

        :param google_service_type: The google_service_type of this GoogleServiceInfo.
        :type google_service_type: str
        """
        allowed_values = ["GOOGLE_SERVICE_TYPE_UNSPECIFIED", "IAP", "GFE_PROXY_OR_HEALTH_CHECK_PROBER", "CLOUD_DNS", "GOOGLE_API", "GOOGLE_API_PSC", "GOOGLE_API_VPC_SC"]  # noqa: E501
        if google_service_type not in allowed_values:
            raise ValueError(
                "Invalid value for `google_service_type` ({0}), must be one of {1}"
                .format(google_service_type, allowed_values)
            )

        self._google_service_type = google_service_type

    @property
    def source_ip(self):
        """Gets the source_ip of this GoogleServiceInfo.

        Source IP address.

        :return: The source_ip of this GoogleServiceInfo.
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this GoogleServiceInfo.

        Source IP address.

        :param source_ip: The source_ip of this GoogleServiceInfo.
        :type source_ip: str
        """

        self._source_ip = source_ip
