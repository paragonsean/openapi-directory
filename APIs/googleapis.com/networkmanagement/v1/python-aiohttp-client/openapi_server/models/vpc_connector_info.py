# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VpcConnectorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, location: str=None, uri: str=None):
        """VpcConnectorInfo - a model defined in OpenAPI

        :param display_name: The display_name of this VpcConnectorInfo.
        :param location: The location of this VpcConnectorInfo.
        :param uri: The uri of this VpcConnectorInfo.
        """
        self.openapi_types = {
            'display_name': str,
            'location': str,
            'uri': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'location': 'location',
            'uri': 'uri'
        }

        self._display_name = display_name
        self._location = location
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpcConnectorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpcConnectorInfo of this VpcConnectorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this VpcConnectorInfo.

        Name of a VPC connector.

        :return: The display_name of this VpcConnectorInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this VpcConnectorInfo.

        Name of a VPC connector.

        :param display_name: The display_name of this VpcConnectorInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def location(self):
        """Gets the location of this VpcConnectorInfo.

        Location in which the VPC connector is deployed.

        :return: The location of this VpcConnectorInfo.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this VpcConnectorInfo.

        Location in which the VPC connector is deployed.

        :param location: The location of this VpcConnectorInfo.
        :type location: str
        """

        self._location = location

    @property
    def uri(self):
        """Gets the uri of this VpcConnectorInfo.

        URI of a VPC connector.

        :return: The uri of this VpcConnectorInfo.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this VpcConnectorInfo.

        URI of a VPC connector.

        :param uri: The uri of this VpcConnectorInfo.
        :type uri: str
        """

        self._uri = uri
