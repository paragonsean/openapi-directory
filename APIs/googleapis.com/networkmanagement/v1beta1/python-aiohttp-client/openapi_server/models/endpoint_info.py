# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_ip: str=None, destination_network_uri: str=None, destination_port: int=None, protocol: str=None, source_agent_uri: str=None, source_ip: str=None, source_network_uri: str=None, source_port: int=None):
        """EndpointInfo - a model defined in OpenAPI

        :param destination_ip: The destination_ip of this EndpointInfo.
        :param destination_network_uri: The destination_network_uri of this EndpointInfo.
        :param destination_port: The destination_port of this EndpointInfo.
        :param protocol: The protocol of this EndpointInfo.
        :param source_agent_uri: The source_agent_uri of this EndpointInfo.
        :param source_ip: The source_ip of this EndpointInfo.
        :param source_network_uri: The source_network_uri of this EndpointInfo.
        :param source_port: The source_port of this EndpointInfo.
        """
        self.openapi_types = {
            'destination_ip': str,
            'destination_network_uri': str,
            'destination_port': int,
            'protocol': str,
            'source_agent_uri': str,
            'source_ip': str,
            'source_network_uri': str,
            'source_port': int
        }

        self.attribute_map = {
            'destination_ip': 'destinationIp',
            'destination_network_uri': 'destinationNetworkUri',
            'destination_port': 'destinationPort',
            'protocol': 'protocol',
            'source_agent_uri': 'sourceAgentUri',
            'source_ip': 'sourceIp',
            'source_network_uri': 'sourceNetworkUri',
            'source_port': 'sourcePort'
        }

        self._destination_ip = destination_ip
        self._destination_network_uri = destination_network_uri
        self._destination_port = destination_port
        self._protocol = protocol
        self._source_agent_uri = source_agent_uri
        self._source_ip = source_ip
        self._source_network_uri = source_network_uri
        self._source_port = source_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointInfo of this EndpointInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_ip(self):
        """Gets the destination_ip of this EndpointInfo.

        Destination IP address.

        :return: The destination_ip of this EndpointInfo.
        :rtype: str
        """
        return self._destination_ip

    @destination_ip.setter
    def destination_ip(self, destination_ip):
        """Sets the destination_ip of this EndpointInfo.

        Destination IP address.

        :param destination_ip: The destination_ip of this EndpointInfo.
        :type destination_ip: str
        """

        self._destination_ip = destination_ip

    @property
    def destination_network_uri(self):
        """Gets the destination_network_uri of this EndpointInfo.

        URI of the network where this packet is sent to.

        :return: The destination_network_uri of this EndpointInfo.
        :rtype: str
        """
        return self._destination_network_uri

    @destination_network_uri.setter
    def destination_network_uri(self, destination_network_uri):
        """Sets the destination_network_uri of this EndpointInfo.

        URI of the network where this packet is sent to.

        :param destination_network_uri: The destination_network_uri of this EndpointInfo.
        :type destination_network_uri: str
        """

        self._destination_network_uri = destination_network_uri

    @property
    def destination_port(self):
        """Gets the destination_port of this EndpointInfo.

        Destination port. Only valid when protocol is TCP or UDP.

        :return: The destination_port of this EndpointInfo.
        :rtype: int
        """
        return self._destination_port

    @destination_port.setter
    def destination_port(self, destination_port):
        """Sets the destination_port of this EndpointInfo.

        Destination port. Only valid when protocol is TCP or UDP.

        :param destination_port: The destination_port of this EndpointInfo.
        :type destination_port: int
        """

        self._destination_port = destination_port

    @property
    def protocol(self):
        """Gets the protocol of this EndpointInfo.

        IP protocol in string format, for example: \"TCP\", \"UDP\", \"ICMP\".

        :return: The protocol of this EndpointInfo.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this EndpointInfo.

        IP protocol in string format, for example: \"TCP\", \"UDP\", \"ICMP\".

        :param protocol: The protocol of this EndpointInfo.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def source_agent_uri(self):
        """Gets the source_agent_uri of this EndpointInfo.

        URI of the source telemetry agent this packet originates from.

        :return: The source_agent_uri of this EndpointInfo.
        :rtype: str
        """
        return self._source_agent_uri

    @source_agent_uri.setter
    def source_agent_uri(self, source_agent_uri):
        """Sets the source_agent_uri of this EndpointInfo.

        URI of the source telemetry agent this packet originates from.

        :param source_agent_uri: The source_agent_uri of this EndpointInfo.
        :type source_agent_uri: str
        """

        self._source_agent_uri = source_agent_uri

    @property
    def source_ip(self):
        """Gets the source_ip of this EndpointInfo.

        Source IP address.

        :return: The source_ip of this EndpointInfo.
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this EndpointInfo.

        Source IP address.

        :param source_ip: The source_ip of this EndpointInfo.
        :type source_ip: str
        """

        self._source_ip = source_ip

    @property
    def source_network_uri(self):
        """Gets the source_network_uri of this EndpointInfo.

        URI of the network where this packet originates from.

        :return: The source_network_uri of this EndpointInfo.
        :rtype: str
        """
        return self._source_network_uri

    @source_network_uri.setter
    def source_network_uri(self, source_network_uri):
        """Sets the source_network_uri of this EndpointInfo.

        URI of the network where this packet originates from.

        :param source_network_uri: The source_network_uri of this EndpointInfo.
        :type source_network_uri: str
        """

        self._source_network_uri = source_network_uri

    @property
    def source_port(self):
        """Gets the source_port of this EndpointInfo.

        Source port. Only valid when protocol is TCP or UDP.

        :return: The source_port of this EndpointInfo.
        :rtype: int
        """
        return self._source_port

    @source_port.setter
    def source_port(self, source_port):
        """Sets the source_port of this EndpointInfo.

        Source port. Only valid when protocol is TCP or UDP.

        :param source_port: The source_port of this EndpointInfo.
        :type source_port: int
        """

        self._source_port = source_port
