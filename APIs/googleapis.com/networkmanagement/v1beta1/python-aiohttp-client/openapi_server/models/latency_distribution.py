# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.latency_percentile import LatencyPercentile
from openapi_server import util


class LatencyDistribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, latency_percentiles: List[LatencyPercentile]=None):
        """LatencyDistribution - a model defined in OpenAPI

        :param latency_percentiles: The latency_percentiles of this LatencyDistribution.
        """
        self.openapi_types = {
            'latency_percentiles': List[LatencyPercentile]
        }

        self.attribute_map = {
            'latency_percentiles': 'latencyPercentiles'
        }

        self._latency_percentiles = latency_percentiles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LatencyDistribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LatencyDistribution of this LatencyDistribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def latency_percentiles(self):
        """Gets the latency_percentiles of this LatencyDistribution.

        Representative latency percentiles.

        :return: The latency_percentiles of this LatencyDistribution.
        :rtype: List[LatencyPercentile]
        """
        return self._latency_percentiles

    @latency_percentiles.setter
    def latency_percentiles(self, latency_percentiles):
        """Sets the latency_percentiles of this LatencyDistribution.

        Representative latency percentiles.

        :param latency_percentiles: The latency_percentiles of this LatencyDistribution.
        :type latency_percentiles: List[LatencyPercentile]
        """

        self._latency_percentiles = latency_percentiles
