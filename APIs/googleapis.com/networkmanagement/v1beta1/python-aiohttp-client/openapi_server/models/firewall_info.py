# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FirewallInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, direction: str=None, display_name: str=None, firewall_rule_type: str=None, network_uri: str=None, policy: str=None, priority: int=None, target_service_accounts: List[str]=None, target_tags: List[str]=None, uri: str=None):
        """FirewallInfo - a model defined in OpenAPI

        :param action: The action of this FirewallInfo.
        :param direction: The direction of this FirewallInfo.
        :param display_name: The display_name of this FirewallInfo.
        :param firewall_rule_type: The firewall_rule_type of this FirewallInfo.
        :param network_uri: The network_uri of this FirewallInfo.
        :param policy: The policy of this FirewallInfo.
        :param priority: The priority of this FirewallInfo.
        :param target_service_accounts: The target_service_accounts of this FirewallInfo.
        :param target_tags: The target_tags of this FirewallInfo.
        :param uri: The uri of this FirewallInfo.
        """
        self.openapi_types = {
            'action': str,
            'direction': str,
            'display_name': str,
            'firewall_rule_type': str,
            'network_uri': str,
            'policy': str,
            'priority': int,
            'target_service_accounts': List[str],
            'target_tags': List[str],
            'uri': str
        }

        self.attribute_map = {
            'action': 'action',
            'direction': 'direction',
            'display_name': 'displayName',
            'firewall_rule_type': 'firewallRuleType',
            'network_uri': 'networkUri',
            'policy': 'policy',
            'priority': 'priority',
            'target_service_accounts': 'targetServiceAccounts',
            'target_tags': 'targetTags',
            'uri': 'uri'
        }

        self._action = action
        self._direction = direction
        self._display_name = display_name
        self._firewall_rule_type = firewall_rule_type
        self._network_uri = network_uri
        self._policy = policy
        self._priority = priority
        self._target_service_accounts = target_service_accounts
        self._target_tags = target_tags
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirewallInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FirewallInfo of this FirewallInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this FirewallInfo.

        Possible values: ALLOW, DENY, APPLY_SECURITY_PROFILE_GROUP

        :return: The action of this FirewallInfo.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this FirewallInfo.

        Possible values: ALLOW, DENY, APPLY_SECURITY_PROFILE_GROUP

        :param action: The action of this FirewallInfo.
        :type action: str
        """

        self._action = action

    @property
    def direction(self):
        """Gets the direction of this FirewallInfo.

        Possible values: INGRESS, EGRESS

        :return: The direction of this FirewallInfo.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this FirewallInfo.

        Possible values: INGRESS, EGRESS

        :param direction: The direction of this FirewallInfo.
        :type direction: str
        """

        self._direction = direction

    @property
    def display_name(self):
        """Gets the display_name of this FirewallInfo.

        The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.

        :return: The display_name of this FirewallInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this FirewallInfo.

        The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.

        :param display_name: The display_name of this FirewallInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def firewall_rule_type(self):
        """Gets the firewall_rule_type of this FirewallInfo.

        The firewall rule's type.

        :return: The firewall_rule_type of this FirewallInfo.
        :rtype: str
        """
        return self._firewall_rule_type

    @firewall_rule_type.setter
    def firewall_rule_type(self, firewall_rule_type):
        """Sets the firewall_rule_type of this FirewallInfo.

        The firewall rule's type.

        :param firewall_rule_type: The firewall_rule_type of this FirewallInfo.
        :type firewall_rule_type: str
        """
        allowed_values = ["FIREWALL_RULE_TYPE_UNSPECIFIED", "HIERARCHICAL_FIREWALL_POLICY_RULE", "VPC_FIREWALL_RULE", "IMPLIED_VPC_FIREWALL_RULE", "SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE", "NETWORK_FIREWALL_POLICY_RULE", "NETWORK_REGIONAL_FIREWALL_POLICY_RULE", "UNSUPPORTED_FIREWALL_POLICY_RULE", "TRACKING_STATE"]  # noqa: E501
        if firewall_rule_type not in allowed_values:
            raise ValueError(
                "Invalid value for `firewall_rule_type` ({0}), must be one of {1}"
                .format(firewall_rule_type, allowed_values)
            )

        self._firewall_rule_type = firewall_rule_type

    @property
    def network_uri(self):
        """Gets the network_uri of this FirewallInfo.

        The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.

        :return: The network_uri of this FirewallInfo.
        :rtype: str
        """
        return self._network_uri

    @network_uri.setter
    def network_uri(self, network_uri):
        """Sets the network_uri of this FirewallInfo.

        The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.

        :param network_uri: The network_uri of this FirewallInfo.
        :type network_uri: str
        """

        self._network_uri = network_uri

    @property
    def policy(self):
        """Gets the policy of this FirewallInfo.

        The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.

        :return: The policy of this FirewallInfo.
        :rtype: str
        """
        return self._policy

    @policy.setter
    def policy(self, policy):
        """Sets the policy of this FirewallInfo.

        The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.

        :param policy: The policy of this FirewallInfo.
        :type policy: str
        """

        self._policy = policy

    @property
    def priority(self):
        """Gets the priority of this FirewallInfo.

        The priority of the firewall rule.

        :return: The priority of this FirewallInfo.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this FirewallInfo.

        The priority of the firewall rule.

        :param priority: The priority of this FirewallInfo.
        :type priority: int
        """

        self._priority = priority

    @property
    def target_service_accounts(self):
        """Gets the target_service_accounts of this FirewallInfo.

        The target service accounts specified by the firewall rule.

        :return: The target_service_accounts of this FirewallInfo.
        :rtype: List[str]
        """
        return self._target_service_accounts

    @target_service_accounts.setter
    def target_service_accounts(self, target_service_accounts):
        """Sets the target_service_accounts of this FirewallInfo.

        The target service accounts specified by the firewall rule.

        :param target_service_accounts: The target_service_accounts of this FirewallInfo.
        :type target_service_accounts: List[str]
        """

        self._target_service_accounts = target_service_accounts

    @property
    def target_tags(self):
        """Gets the target_tags of this FirewallInfo.

        The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.

        :return: The target_tags of this FirewallInfo.
        :rtype: List[str]
        """
        return self._target_tags

    @target_tags.setter
    def target_tags(self, target_tags):
        """Sets the target_tags of this FirewallInfo.

        The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.

        :param target_tags: The target_tags of this FirewallInfo.
        :type target_tags: List[str]
        """

        self._target_tags = target_tags

    @property
    def uri(self):
        """Gets the uri of this FirewallInfo.

        The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.

        :return: The uri of this FirewallInfo.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this FirewallInfo.

        The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.

        :param uri: The uri of this FirewallInfo.
        :type uri: str
        """

        self._uri = uri
