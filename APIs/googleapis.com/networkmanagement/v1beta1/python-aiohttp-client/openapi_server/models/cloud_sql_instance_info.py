# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CloudSQLInstanceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, external_ip: str=None, internal_ip: str=None, network_uri: str=None, region: str=None, uri: str=None):
        """CloudSQLInstanceInfo - a model defined in OpenAPI

        :param display_name: The display_name of this CloudSQLInstanceInfo.
        :param external_ip: The external_ip of this CloudSQLInstanceInfo.
        :param internal_ip: The internal_ip of this CloudSQLInstanceInfo.
        :param network_uri: The network_uri of this CloudSQLInstanceInfo.
        :param region: The region of this CloudSQLInstanceInfo.
        :param uri: The uri of this CloudSQLInstanceInfo.
        """
        self.openapi_types = {
            'display_name': str,
            'external_ip': str,
            'internal_ip': str,
            'network_uri': str,
            'region': str,
            'uri': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'external_ip': 'externalIp',
            'internal_ip': 'internalIp',
            'network_uri': 'networkUri',
            'region': 'region',
            'uri': 'uri'
        }

        self._display_name = display_name
        self._external_ip = external_ip
        self._internal_ip = internal_ip
        self._network_uri = network_uri
        self._region = region
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudSQLInstanceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudSQLInstanceInfo of this CloudSQLInstanceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this CloudSQLInstanceInfo.

        Name of a Cloud SQL instance.

        :return: The display_name of this CloudSQLInstanceInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CloudSQLInstanceInfo.

        Name of a Cloud SQL instance.

        :param display_name: The display_name of this CloudSQLInstanceInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def external_ip(self):
        """Gets the external_ip of this CloudSQLInstanceInfo.

        External IP address of a Cloud SQL instance.

        :return: The external_ip of this CloudSQLInstanceInfo.
        :rtype: str
        """
        return self._external_ip

    @external_ip.setter
    def external_ip(self, external_ip):
        """Sets the external_ip of this CloudSQLInstanceInfo.

        External IP address of a Cloud SQL instance.

        :param external_ip: The external_ip of this CloudSQLInstanceInfo.
        :type external_ip: str
        """

        self._external_ip = external_ip

    @property
    def internal_ip(self):
        """Gets the internal_ip of this CloudSQLInstanceInfo.

        Internal IP address of a Cloud SQL instance.

        :return: The internal_ip of this CloudSQLInstanceInfo.
        :rtype: str
        """
        return self._internal_ip

    @internal_ip.setter
    def internal_ip(self, internal_ip):
        """Sets the internal_ip of this CloudSQLInstanceInfo.

        Internal IP address of a Cloud SQL instance.

        :param internal_ip: The internal_ip of this CloudSQLInstanceInfo.
        :type internal_ip: str
        """

        self._internal_ip = internal_ip

    @property
    def network_uri(self):
        """Gets the network_uri of this CloudSQLInstanceInfo.

        URI of a Cloud SQL instance network or empty string if the instance does not have one.

        :return: The network_uri of this CloudSQLInstanceInfo.
        :rtype: str
        """
        return self._network_uri

    @network_uri.setter
    def network_uri(self, network_uri):
        """Sets the network_uri of this CloudSQLInstanceInfo.

        URI of a Cloud SQL instance network or empty string if the instance does not have one.

        :param network_uri: The network_uri of this CloudSQLInstanceInfo.
        :type network_uri: str
        """

        self._network_uri = network_uri

    @property
    def region(self):
        """Gets the region of this CloudSQLInstanceInfo.

        Region in which the Cloud SQL instance is running.

        :return: The region of this CloudSQLInstanceInfo.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this CloudSQLInstanceInfo.

        Region in which the Cloud SQL instance is running.

        :param region: The region of this CloudSQLInstanceInfo.
        :type region: str
        """

        self._region = region

    @property
    def uri(self):
        """Gets the uri of this CloudSQLInstanceInfo.

        URI of a Cloud SQL instance.

        :return: The uri of this CloudSQLInstanceInfo.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this CloudSQLInstanceInfo.

        URI of a Cloud SQL instance.

        :param uri: The uri of this CloudSQLInstanceInfo.
        :type uri: str
        """

        self._uri = uri
