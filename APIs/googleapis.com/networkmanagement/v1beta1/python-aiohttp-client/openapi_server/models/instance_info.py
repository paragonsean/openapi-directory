# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, external_ip: str=None, interface: str=None, internal_ip: str=None, network_tags: List[str]=None, network_uri: str=None, service_account: str=None, uri: str=None):
        """InstanceInfo - a model defined in OpenAPI

        :param display_name: The display_name of this InstanceInfo.
        :param external_ip: The external_ip of this InstanceInfo.
        :param interface: The interface of this InstanceInfo.
        :param internal_ip: The internal_ip of this InstanceInfo.
        :param network_tags: The network_tags of this InstanceInfo.
        :param network_uri: The network_uri of this InstanceInfo.
        :param service_account: The service_account of this InstanceInfo.
        :param uri: The uri of this InstanceInfo.
        """
        self.openapi_types = {
            'display_name': str,
            'external_ip': str,
            'interface': str,
            'internal_ip': str,
            'network_tags': List[str],
            'network_uri': str,
            'service_account': str,
            'uri': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'external_ip': 'externalIp',
            'interface': 'interface',
            'internal_ip': 'internalIp',
            'network_tags': 'networkTags',
            'network_uri': 'networkUri',
            'service_account': 'serviceAccount',
            'uri': 'uri'
        }

        self._display_name = display_name
        self._external_ip = external_ip
        self._interface = interface
        self._internal_ip = internal_ip
        self._network_tags = network_tags
        self._network_uri = network_uri
        self._service_account = service_account
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceInfo of this InstanceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this InstanceInfo.

        Name of a Compute Engine instance.

        :return: The display_name of this InstanceInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this InstanceInfo.

        Name of a Compute Engine instance.

        :param display_name: The display_name of this InstanceInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def external_ip(self):
        """Gets the external_ip of this InstanceInfo.

        External IP address of the network interface.

        :return: The external_ip of this InstanceInfo.
        :rtype: str
        """
        return self._external_ip

    @external_ip.setter
    def external_ip(self, external_ip):
        """Sets the external_ip of this InstanceInfo.

        External IP address of the network interface.

        :param external_ip: The external_ip of this InstanceInfo.
        :type external_ip: str
        """

        self._external_ip = external_ip

    @property
    def interface(self):
        """Gets the interface of this InstanceInfo.

        Name of the network interface of a Compute Engine instance.

        :return: The interface of this InstanceInfo.
        :rtype: str
        """
        return self._interface

    @interface.setter
    def interface(self, interface):
        """Sets the interface of this InstanceInfo.

        Name of the network interface of a Compute Engine instance.

        :param interface: The interface of this InstanceInfo.
        :type interface: str
        """

        self._interface = interface

    @property
    def internal_ip(self):
        """Gets the internal_ip of this InstanceInfo.

        Internal IP address of the network interface.

        :return: The internal_ip of this InstanceInfo.
        :rtype: str
        """
        return self._internal_ip

    @internal_ip.setter
    def internal_ip(self, internal_ip):
        """Sets the internal_ip of this InstanceInfo.

        Internal IP address of the network interface.

        :param internal_ip: The internal_ip of this InstanceInfo.
        :type internal_ip: str
        """

        self._internal_ip = internal_ip

    @property
    def network_tags(self):
        """Gets the network_tags of this InstanceInfo.

        Network tags configured on the instance.

        :return: The network_tags of this InstanceInfo.
        :rtype: List[str]
        """
        return self._network_tags

    @network_tags.setter
    def network_tags(self, network_tags):
        """Sets the network_tags of this InstanceInfo.

        Network tags configured on the instance.

        :param network_tags: The network_tags of this InstanceInfo.
        :type network_tags: List[str]
        """

        self._network_tags = network_tags

    @property
    def network_uri(self):
        """Gets the network_uri of this InstanceInfo.

        URI of a Compute Engine network.

        :return: The network_uri of this InstanceInfo.
        :rtype: str
        """
        return self._network_uri

    @network_uri.setter
    def network_uri(self, network_uri):
        """Sets the network_uri of this InstanceInfo.

        URI of a Compute Engine network.

        :param network_uri: The network_uri of this InstanceInfo.
        :type network_uri: str
        """

        self._network_uri = network_uri

    @property
    def service_account(self):
        """Gets the service_account of this InstanceInfo.

        Service account authorized for the instance.

        :return: The service_account of this InstanceInfo.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this InstanceInfo.

        Service account authorized for the instance.

        :param service_account: The service_account of this InstanceInfo.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def uri(self):
        """Gets the uri of this InstanceInfo.

        URI of a Compute Engine instance.

        :return: The uri of this InstanceInfo.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this InstanceInfo.

        URI of a Compute Engine instance.

        :param uri: The uri of this InstanceInfo.
        :type uri: str
        """

        self._uri = uri
