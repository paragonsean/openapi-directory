# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeliverInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_address: str=None, resource_uri: str=None, target: str=None):
        """DeliverInfo - a model defined in OpenAPI

        :param ip_address: The ip_address of this DeliverInfo.
        :param resource_uri: The resource_uri of this DeliverInfo.
        :param target: The target of this DeliverInfo.
        """
        self.openapi_types = {
            'ip_address': str,
            'resource_uri': str,
            'target': str
        }

        self.attribute_map = {
            'ip_address': 'ipAddress',
            'resource_uri': 'resourceUri',
            'target': 'target'
        }

        self._ip_address = ip_address
        self._resource_uri = resource_uri
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliverInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliverInfo of this DeliverInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_address(self):
        """Gets the ip_address of this DeliverInfo.

        IP address of the target (if applicable).

        :return: The ip_address of this DeliverInfo.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this DeliverInfo.

        IP address of the target (if applicable).

        :param ip_address: The ip_address of this DeliverInfo.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def resource_uri(self):
        """Gets the resource_uri of this DeliverInfo.

        URI of the resource that the packet is delivered to.

        :return: The resource_uri of this DeliverInfo.
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """Sets the resource_uri of this DeliverInfo.

        URI of the resource that the packet is delivered to.

        :param resource_uri: The resource_uri of this DeliverInfo.
        :type resource_uri: str
        """

        self._resource_uri = resource_uri

    @property
    def target(self):
        """Gets the target of this DeliverInfo.

        Target type where the packet is delivered to.

        :return: The target of this DeliverInfo.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this DeliverInfo.

        Target type where the packet is delivered to.

        :param target: The target of this DeliverInfo.
        :type target: str
        """
        allowed_values = ["TARGET_UNSPECIFIED", "INSTANCE", "INTERNET", "GOOGLE_API", "GKE_MASTER", "CLOUD_SQL_INSTANCE", "PSC_PUBLISHED_SERVICE", "PSC_GOOGLE_API", "PSC_VPC_SC", "SERVERLESS_NEG", "STORAGE_BUCKET", "PRIVATE_NETWORK", "CLOUD_FUNCTION", "APP_ENGINE_VERSION", "CLOUD_RUN_REVISION"]  # noqa: E501
        if target not in allowed_values:
            raise ValueError(
                "Invalid value for `target` ({0}), must be one of {1}"
                .format(target, allowed_values)
            )

        self._target = target
