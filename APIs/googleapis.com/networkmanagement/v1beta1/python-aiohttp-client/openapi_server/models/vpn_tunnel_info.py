# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VpnTunnelInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, network_uri: str=None, region: str=None, remote_gateway: str=None, remote_gateway_ip: str=None, routing_type: str=None, source_gateway: str=None, source_gateway_ip: str=None, uri: str=None):
        """VpnTunnelInfo - a model defined in OpenAPI

        :param display_name: The display_name of this VpnTunnelInfo.
        :param network_uri: The network_uri of this VpnTunnelInfo.
        :param region: The region of this VpnTunnelInfo.
        :param remote_gateway: The remote_gateway of this VpnTunnelInfo.
        :param remote_gateway_ip: The remote_gateway_ip of this VpnTunnelInfo.
        :param routing_type: The routing_type of this VpnTunnelInfo.
        :param source_gateway: The source_gateway of this VpnTunnelInfo.
        :param source_gateway_ip: The source_gateway_ip of this VpnTunnelInfo.
        :param uri: The uri of this VpnTunnelInfo.
        """
        self.openapi_types = {
            'display_name': str,
            'network_uri': str,
            'region': str,
            'remote_gateway': str,
            'remote_gateway_ip': str,
            'routing_type': str,
            'source_gateway': str,
            'source_gateway_ip': str,
            'uri': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'network_uri': 'networkUri',
            'region': 'region',
            'remote_gateway': 'remoteGateway',
            'remote_gateway_ip': 'remoteGatewayIp',
            'routing_type': 'routingType',
            'source_gateway': 'sourceGateway',
            'source_gateway_ip': 'sourceGatewayIp',
            'uri': 'uri'
        }

        self._display_name = display_name
        self._network_uri = network_uri
        self._region = region
        self._remote_gateway = remote_gateway
        self._remote_gateway_ip = remote_gateway_ip
        self._routing_type = routing_type
        self._source_gateway = source_gateway
        self._source_gateway_ip = source_gateway_ip
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpnTunnelInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpnTunnelInfo of this VpnTunnelInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this VpnTunnelInfo.

        Name of a VPN tunnel.

        :return: The display_name of this VpnTunnelInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this VpnTunnelInfo.

        Name of a VPN tunnel.

        :param display_name: The display_name of this VpnTunnelInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def network_uri(self):
        """Gets the network_uri of this VpnTunnelInfo.

        URI of a Compute Engine network where the VPN tunnel is configured.

        :return: The network_uri of this VpnTunnelInfo.
        :rtype: str
        """
        return self._network_uri

    @network_uri.setter
    def network_uri(self, network_uri):
        """Sets the network_uri of this VpnTunnelInfo.

        URI of a Compute Engine network where the VPN tunnel is configured.

        :param network_uri: The network_uri of this VpnTunnelInfo.
        :type network_uri: str
        """

        self._network_uri = network_uri

    @property
    def region(self):
        """Gets the region of this VpnTunnelInfo.

        Name of a Google Cloud region where this VPN tunnel is configured.

        :return: The region of this VpnTunnelInfo.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this VpnTunnelInfo.

        Name of a Google Cloud region where this VPN tunnel is configured.

        :param region: The region of this VpnTunnelInfo.
        :type region: str
        """

        self._region = region

    @property
    def remote_gateway(self):
        """Gets the remote_gateway of this VpnTunnelInfo.

        URI of a VPN gateway at remote end of the tunnel.

        :return: The remote_gateway of this VpnTunnelInfo.
        :rtype: str
        """
        return self._remote_gateway

    @remote_gateway.setter
    def remote_gateway(self, remote_gateway):
        """Sets the remote_gateway of this VpnTunnelInfo.

        URI of a VPN gateway at remote end of the tunnel.

        :param remote_gateway: The remote_gateway of this VpnTunnelInfo.
        :type remote_gateway: str
        """

        self._remote_gateway = remote_gateway

    @property
    def remote_gateway_ip(self):
        """Gets the remote_gateway_ip of this VpnTunnelInfo.

        Remote VPN gateway's IP address.

        :return: The remote_gateway_ip of this VpnTunnelInfo.
        :rtype: str
        """
        return self._remote_gateway_ip

    @remote_gateway_ip.setter
    def remote_gateway_ip(self, remote_gateway_ip):
        """Sets the remote_gateway_ip of this VpnTunnelInfo.

        Remote VPN gateway's IP address.

        :param remote_gateway_ip: The remote_gateway_ip of this VpnTunnelInfo.
        :type remote_gateway_ip: str
        """

        self._remote_gateway_ip = remote_gateway_ip

    @property
    def routing_type(self):
        """Gets the routing_type of this VpnTunnelInfo.

        Type of the routing policy.

        :return: The routing_type of this VpnTunnelInfo.
        :rtype: str
        """
        return self._routing_type

    @routing_type.setter
    def routing_type(self, routing_type):
        """Sets the routing_type of this VpnTunnelInfo.

        Type of the routing policy.

        :param routing_type: The routing_type of this VpnTunnelInfo.
        :type routing_type: str
        """
        allowed_values = ["ROUTING_TYPE_UNSPECIFIED", "ROUTE_BASED", "POLICY_BASED", "DYNAMIC"]  # noqa: E501
        if routing_type not in allowed_values:
            raise ValueError(
                "Invalid value for `routing_type` ({0}), must be one of {1}"
                .format(routing_type, allowed_values)
            )

        self._routing_type = routing_type

    @property
    def source_gateway(self):
        """Gets the source_gateway of this VpnTunnelInfo.

        URI of the VPN gateway at local end of the tunnel.

        :return: The source_gateway of this VpnTunnelInfo.
        :rtype: str
        """
        return self._source_gateway

    @source_gateway.setter
    def source_gateway(self, source_gateway):
        """Sets the source_gateway of this VpnTunnelInfo.

        URI of the VPN gateway at local end of the tunnel.

        :param source_gateway: The source_gateway of this VpnTunnelInfo.
        :type source_gateway: str
        """

        self._source_gateway = source_gateway

    @property
    def source_gateway_ip(self):
        """Gets the source_gateway_ip of this VpnTunnelInfo.

        Local VPN gateway's IP address.

        :return: The source_gateway_ip of this VpnTunnelInfo.
        :rtype: str
        """
        return self._source_gateway_ip

    @source_gateway_ip.setter
    def source_gateway_ip(self, source_gateway_ip):
        """Sets the source_gateway_ip of this VpnTunnelInfo.

        Local VPN gateway's IP address.

        :param source_gateway_ip: The source_gateway_ip of this VpnTunnelInfo.
        :type source_gateway_ip: str
        """

        self._source_gateway_ip = source_gateway_ip

    @property
    def uri(self):
        """Gets the uri of this VpnTunnelInfo.

        URI of a VPN tunnel.

        :return: The uri of this VpnTunnelInfo.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this VpnTunnelInfo.

        URI of a VPN tunnel.

        :param uri: The uri of this VpnTunnelInfo.
        :type uri: str
        """

        self._uri = uri
