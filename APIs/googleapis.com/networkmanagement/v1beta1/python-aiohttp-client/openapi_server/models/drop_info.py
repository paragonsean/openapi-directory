# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DropInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cause: str=None, destination_ip: str=None, region: str=None, resource_uri: str=None, source_ip: str=None):
        """DropInfo - a model defined in OpenAPI

        :param cause: The cause of this DropInfo.
        :param destination_ip: The destination_ip of this DropInfo.
        :param region: The region of this DropInfo.
        :param resource_uri: The resource_uri of this DropInfo.
        :param source_ip: The source_ip of this DropInfo.
        """
        self.openapi_types = {
            'cause': str,
            'destination_ip': str,
            'region': str,
            'resource_uri': str,
            'source_ip': str
        }

        self.attribute_map = {
            'cause': 'cause',
            'destination_ip': 'destinationIp',
            'region': 'region',
            'resource_uri': 'resourceUri',
            'source_ip': 'sourceIp'
        }

        self._cause = cause
        self._destination_ip = destination_ip
        self._region = region
        self._resource_uri = resource_uri
        self._source_ip = source_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DropInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DropInfo of this DropInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cause(self):
        """Gets the cause of this DropInfo.

        Cause that the packet is dropped.

        :return: The cause of this DropInfo.
        :rtype: str
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this DropInfo.

        Cause that the packet is dropped.

        :param cause: The cause of this DropInfo.
        :type cause: str
        """
        allowed_values = ["CAUSE_UNSPECIFIED", "UNKNOWN_EXTERNAL_ADDRESS", "FOREIGN_IP_DISALLOWED", "FIREWALL_RULE", "NO_ROUTE", "ROUTE_BLACKHOLE", "ROUTE_WRONG_NETWORK", "ROUTE_NEXT_HOP_IP_ADDRESS_NOT_RESOLVED", "ROUTE_NEXT_HOP_RESOURCE_NOT_FOUND", "ROUTE_NEXT_HOP_INSTANCE_WRONG_NETWORK", "ROUTE_NEXT_HOP_INSTANCE_NON_PRIMARY_IP", "ROUTE_NEXT_HOP_FORWARDING_RULE_IP_MISMATCH", "ROUTE_NEXT_HOP_VPN_TUNNEL_NOT_ESTABLISHED", "ROUTE_NEXT_HOP_FORWARDING_RULE_TYPE_INVALID", "NO_ROUTE_FROM_INTERNET_TO_PRIVATE_IPV6_ADDRESS", "VPN_TUNNEL_LOCAL_SELECTOR_MISMATCH", "VPN_TUNNEL_REMOTE_SELECTOR_MISMATCH", "PRIVATE_TRAFFIC_TO_INTERNET", "PRIVATE_GOOGLE_ACCESS_DISALLOWED", "PRIVATE_GOOGLE_ACCESS_VIA_VPN_TUNNEL_UNSUPPORTED", "NO_EXTERNAL_ADDRESS", "UNKNOWN_INTERNAL_ADDRESS", "FORWARDING_RULE_MISMATCH", "FORWARDING_RULE_NO_INSTANCES", "FIREWALL_BLOCKING_LOAD_BALANCER_BACKEND_HEALTH_CHECK", "INSTANCE_NOT_RUNNING", "GKE_CLUSTER_NOT_RUNNING", "CLOUD_SQL_INSTANCE_NOT_RUNNING", "TRAFFIC_TYPE_BLOCKED", "GKE_MASTER_UNAUTHORIZED_ACCESS", "CLOUD_SQL_INSTANCE_UNAUTHORIZED_ACCESS", "DROPPED_INSIDE_GKE_SERVICE", "DROPPED_INSIDE_CLOUD_SQL_SERVICE", "GOOGLE_MANAGED_SERVICE_NO_PEERING", "GOOGLE_MANAGED_SERVICE_NO_PSC_ENDPOINT", "GKE_PSC_ENDPOINT_MISSING", "CLOUD_SQL_INSTANCE_NO_IP_ADDRESS", "GKE_CONTROL_PLANE_REGION_MISMATCH", "PUBLIC_GKE_CONTROL_PLANE_TO_PRIVATE_DESTINATION", "GKE_CONTROL_PLANE_NO_ROUTE", "CLOUD_SQL_INSTANCE_NOT_CONFIGURED_FOR_EXTERNAL_TRAFFIC", "PUBLIC_CLOUD_SQL_INSTANCE_TO_PRIVATE_DESTINATION", "CLOUD_SQL_INSTANCE_NO_ROUTE", "CLOUD_FUNCTION_NOT_ACTIVE", "VPC_CONNECTOR_NOT_SET", "VPC_CONNECTOR_NOT_RUNNING", "FORWARDING_RULE_REGION_MISMATCH", "PSC_CONNECTION_NOT_ACCEPTED", "PSC_ENDPOINT_ACCESSED_FROM_PEERED_NETWORK", "PSC_NEG_PRODUCER_ENDPOINT_NO_GLOBAL_ACCESS", "PSC_NEG_PRODUCER_FORWARDING_RULE_MULTIPLE_PORTS", "NO_NAT_SUBNETS_FOR_PSC_SERVICE_ATTACHMENT", "HYBRID_NEG_NON_DYNAMIC_ROUTE_MATCHED", "HYBRID_NEG_NON_LOCAL_DYNAMIC_ROUTE_MATCHED", "CLOUD_RUN_REVISION_NOT_READY", "DROPPED_INSIDE_PSC_SERVICE_PRODUCER", "LOAD_BALANCER_HAS_NO_PROXY_SUBNET", "CLOUD_NAT_NO_ADDRESSES"]  # noqa: E501
        if cause not in allowed_values:
            raise ValueError(
                "Invalid value for `cause` ({0}), must be one of {1}"
                .format(cause, allowed_values)
            )

        self._cause = cause

    @property
    def destination_ip(self):
        """Gets the destination_ip of this DropInfo.

        Destination IP address of the dropped packet (if relevant).

        :return: The destination_ip of this DropInfo.
        :rtype: str
        """
        return self._destination_ip

    @destination_ip.setter
    def destination_ip(self, destination_ip):
        """Sets the destination_ip of this DropInfo.

        Destination IP address of the dropped packet (if relevant).

        :param destination_ip: The destination_ip of this DropInfo.
        :type destination_ip: str
        """

        self._destination_ip = destination_ip

    @property
    def region(self):
        """Gets the region of this DropInfo.

        Region of the dropped packet (if relevant).

        :return: The region of this DropInfo.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this DropInfo.

        Region of the dropped packet (if relevant).

        :param region: The region of this DropInfo.
        :type region: str
        """

        self._region = region

    @property
    def resource_uri(self):
        """Gets the resource_uri of this DropInfo.

        URI of the resource that caused the drop.

        :return: The resource_uri of this DropInfo.
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """Sets the resource_uri of this DropInfo.

        URI of the resource that caused the drop.

        :param resource_uri: The resource_uri of this DropInfo.
        :type resource_uri: str
        """

        self._resource_uri = resource_uri

    @property
    def source_ip(self):
        """Gets the source_ip of this DropInfo.

        Source IP address of the dropped packet (if relevant).

        :return: The source_ip of this DropInfo.
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this DropInfo.

        Source IP address of the dropped packet (if relevant).

        :param source_ip: The source_ip of this DropInfo.
        :type source_ip: str
        """

        self._source_ip = source_ip
