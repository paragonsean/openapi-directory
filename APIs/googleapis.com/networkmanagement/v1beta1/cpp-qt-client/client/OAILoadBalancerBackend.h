/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoadBalancerBackend.h
 *
 * For display only. Metadata associated with a specific load balancer backend.
 */

#ifndef OAILoadBalancerBackend_H
#define OAILoadBalancerBackend_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoadBalancerBackend : public OAIObject {
public:
    OAILoadBalancerBackend();
    OAILoadBalancerBackend(QString json);
    ~OAILoadBalancerBackend() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getHealthCheckAllowingFirewallRules() const;
    void setHealthCheckAllowingFirewallRules(const QList<QString> &health_check_allowing_firewall_rules);
    bool is_health_check_allowing_firewall_rules_Set() const;
    bool is_health_check_allowing_firewall_rules_Valid() const;

    QList<QString> getHealthCheckBlockingFirewallRules() const;
    void setHealthCheckBlockingFirewallRules(const QList<QString> &health_check_blocking_firewall_rules);
    bool is_health_check_blocking_firewall_rules_Set() const;
    bool is_health_check_blocking_firewall_rules_Valid() const;

    QString getHealthCheckFirewallState() const;
    void setHealthCheckFirewallState(const QString &health_check_firewall_state);
    bool is_health_check_firewall_state_Set() const;
    bool is_health_check_firewall_state_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_health_check_allowing_firewall_rules;
    bool m_health_check_allowing_firewall_rules_isSet;
    bool m_health_check_allowing_firewall_rules_isValid;

    QList<QString> m_health_check_blocking_firewall_rules;
    bool m_health_check_blocking_firewall_rules_isSet;
    bool m_health_check_blocking_firewall_rules_isValid;

    QString m_health_check_firewall_state;
    bool m_health_check_firewall_state_isSet;
    bool m_health_check_firewall_state_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoadBalancerBackend)

#endif // OAILoadBalancerBackend_H
