/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFirewallInfo.h
 *
 * For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
 */

#ifndef OAIFirewallInfo_H
#define OAIFirewallInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFirewallInfo : public OAIObject {
public:
    OAIFirewallInfo();
    OAIFirewallInfo(QString json);
    ~OAIFirewallInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getFirewallRuleType() const;
    void setFirewallRuleType(const QString &firewall_rule_type);
    bool is_firewall_rule_type_Set() const;
    bool is_firewall_rule_type_Valid() const;

    QString getNetworkUri() const;
    void setNetworkUri(const QString &network_uri);
    bool is_network_uri_Set() const;
    bool is_network_uri_Valid() const;

    QString getPolicy() const;
    void setPolicy(const QString &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<QString> getTargetServiceAccounts() const;
    void setTargetServiceAccounts(const QList<QString> &target_service_accounts);
    bool is_target_service_accounts_Set() const;
    bool is_target_service_accounts_Valid() const;

    QList<QString> getTargetTags() const;
    void setTargetTags(const QList<QString> &target_tags);
    bool is_target_tags_Set() const;
    bool is_target_tags_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_firewall_rule_type;
    bool m_firewall_rule_type_isSet;
    bool m_firewall_rule_type_isValid;

    QString m_network_uri;
    bool m_network_uri_isSet;
    bool m_network_uri_isValid;

    QString m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<QString> m_target_service_accounts;
    bool m_target_service_accounts_isSet;
    bool m_target_service_accounts_isValid;

    QList<QString> m_target_tags;
    bool m_target_tags_isSet;
    bool m_target_tags_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFirewallInfo)

#endif // OAIFirewallInfo_H
