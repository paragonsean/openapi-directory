/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVpnTunnelInfo.h
 *
 * For display only. Metadata associated with a Compute Engine VPN tunnel.
 */

#ifndef OAIVpnTunnelInfo_H
#define OAIVpnTunnelInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVpnTunnelInfo : public OAIObject {
public:
    OAIVpnTunnelInfo();
    OAIVpnTunnelInfo(QString json);
    ~OAIVpnTunnelInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getNetworkUri() const;
    void setNetworkUri(const QString &network_uri);
    bool is_network_uri_Set() const;
    bool is_network_uri_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getRemoteGateway() const;
    void setRemoteGateway(const QString &remote_gateway);
    bool is_remote_gateway_Set() const;
    bool is_remote_gateway_Valid() const;

    QString getRemoteGatewayIp() const;
    void setRemoteGatewayIp(const QString &remote_gateway_ip);
    bool is_remote_gateway_ip_Set() const;
    bool is_remote_gateway_ip_Valid() const;

    QString getRoutingType() const;
    void setRoutingType(const QString &routing_type);
    bool is_routing_type_Set() const;
    bool is_routing_type_Valid() const;

    QString getSourceGateway() const;
    void setSourceGateway(const QString &source_gateway);
    bool is_source_gateway_Set() const;
    bool is_source_gateway_Valid() const;

    QString getSourceGatewayIp() const;
    void setSourceGatewayIp(const QString &source_gateway_ip);
    bool is_source_gateway_ip_Set() const;
    bool is_source_gateway_ip_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_network_uri;
    bool m_network_uri_isSet;
    bool m_network_uri_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_remote_gateway;
    bool m_remote_gateway_isSet;
    bool m_remote_gateway_isValid;

    QString m_remote_gateway_ip;
    bool m_remote_gateway_ip_isSet;
    bool m_remote_gateway_ip_isValid;

    QString m_routing_type;
    bool m_routing_type_isSet;
    bool m_routing_type_isValid;

    QString m_source_gateway;
    bool m_source_gateway_isSet;
    bool m_source_gateway_isValid;

    QString m_source_gateway_ip;
    bool m_source_gateway_ip_isSet;
    bool m_source_gateway_ip_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVpnTunnelInfo)

#endif // OAIVpnTunnelInfo_H
