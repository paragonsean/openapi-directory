/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForwardingRuleInfo.h
 *
 * For display only. Metadata associated with a Compute Engine forwarding rule.
 */

#ifndef OAIForwardingRuleInfo_H
#define OAIForwardingRuleInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForwardingRuleInfo : public OAIObject {
public:
    OAIForwardingRuleInfo();
    OAIForwardingRuleInfo(QString json);
    ~OAIForwardingRuleInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getMatchedPortRange() const;
    void setMatchedPortRange(const QString &matched_port_range);
    bool is_matched_port_range_Set() const;
    bool is_matched_port_range_Valid() const;

    QString getMatchedProtocol() const;
    void setMatchedProtocol(const QString &matched_protocol);
    bool is_matched_protocol_Set() const;
    bool is_matched_protocol_Valid() const;

    QString getNetworkUri() const;
    void setNetworkUri(const QString &network_uri);
    bool is_network_uri_Set() const;
    bool is_network_uri_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    QString getVip() const;
    void setVip(const QString &vip);
    bool is_vip_Set() const;
    bool is_vip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_matched_port_range;
    bool m_matched_port_range_isSet;
    bool m_matched_port_range_isValid;

    QString m_matched_protocol;
    bool m_matched_protocol_isSet;
    bool m_matched_protocol_isValid;

    QString m_network_uri;
    bool m_network_uri_isSet;
    bool m_network_uri_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    QString m_vip;
    bool m_vip_isSet;
    bool m_vip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForwardingRuleInfo)

#endif // OAIForwardingRuleInfo_H
