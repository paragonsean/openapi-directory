/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILatencyPercentile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILatencyPercentile::OAILatencyPercentile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILatencyPercentile::OAILatencyPercentile() {
    this->initializeModel();
}

OAILatencyPercentile::~OAILatencyPercentile() {}

void OAILatencyPercentile::initializeModel() {

    m_latency_micros_isSet = false;
    m_latency_micros_isValid = false;

    m_percent_isSet = false;
    m_percent_isValid = false;
}

void OAILatencyPercentile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILatencyPercentile::fromJsonObject(QJsonObject json) {

    m_latency_micros_isValid = ::OpenAPI::fromJsonValue(m_latency_micros, json[QString("latencyMicros")]);
    m_latency_micros_isSet = !json[QString("latencyMicros")].isNull() && m_latency_micros_isValid;

    m_percent_isValid = ::OpenAPI::fromJsonValue(m_percent, json[QString("percent")]);
    m_percent_isSet = !json[QString("percent")].isNull() && m_percent_isValid;
}

QString OAILatencyPercentile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILatencyPercentile::asJsonObject() const {
    QJsonObject obj;
    if (m_latency_micros_isSet) {
        obj.insert(QString("latencyMicros"), ::OpenAPI::toJsonValue(m_latency_micros));
    }
    if (m_percent_isSet) {
        obj.insert(QString("percent"), ::OpenAPI::toJsonValue(m_percent));
    }
    return obj;
}

QString OAILatencyPercentile::getLatencyMicros() const {
    return m_latency_micros;
}
void OAILatencyPercentile::setLatencyMicros(const QString &latency_micros) {
    m_latency_micros = latency_micros;
    m_latency_micros_isSet = true;
}

bool OAILatencyPercentile::is_latency_micros_Set() const{
    return m_latency_micros_isSet;
}

bool OAILatencyPercentile::is_latency_micros_Valid() const{
    return m_latency_micros_isValid;
}

qint32 OAILatencyPercentile::getPercent() const {
    return m_percent;
}
void OAILatencyPercentile::setPercent(const qint32 &percent) {
    m_percent = percent;
    m_percent_isSet = true;
}

bool OAILatencyPercentile::is_percent_Set() const{
    return m_percent_isSet;
}

bool OAILatencyPercentile::is_percent_Valid() const{
    return m_percent_isValid;
}

bool OAILatencyPercentile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_latency_micros_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILatencyPercentile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
