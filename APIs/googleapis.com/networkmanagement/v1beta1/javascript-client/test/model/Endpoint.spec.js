/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetworkManagementApi);
  }
}(this, function(expect, NetworkManagementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetworkManagementApi.Endpoint();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Endpoint', function() {
    it('should create an instance of Endpoint', function() {
      // uncomment below and update the code to test Endpoint
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be.a(NetworkManagementApi.Endpoint);
    });

    it('should have the property appEngineVersion (base name: "appEngineVersion")', function() {
      // uncomment below and update the code to test the property appEngineVersion
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property cloudFunction (base name: "cloudFunction")', function() {
      // uncomment below and update the code to test the property cloudFunction
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property cloudRunRevision (base name: "cloudRunRevision")', function() {
      // uncomment below and update the code to test the property cloudRunRevision
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property cloudSqlInstance (base name: "cloudSqlInstance")', function() {
      // uncomment below and update the code to test the property cloudSqlInstance
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property forwardingRule (base name: "forwardingRule")', function() {
      // uncomment below and update the code to test the property forwardingRule
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property forwardingRuleTarget (base name: "forwardingRuleTarget")', function() {
      // uncomment below and update the code to test the property forwardingRuleTarget
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property gkeMasterCluster (base name: "gkeMasterCluster")', function() {
      // uncomment below and update the code to test the property gkeMasterCluster
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property instance (base name: "instance")', function() {
      // uncomment below and update the code to test the property instance
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property ipAddress (base name: "ipAddress")', function() {
      // uncomment below and update the code to test the property ipAddress
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property loadBalancerId (base name: "loadBalancerId")', function() {
      // uncomment below and update the code to test the property loadBalancerId
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property loadBalancerType (base name: "loadBalancerType")', function() {
      // uncomment below and update the code to test the property loadBalancerType
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property network (base name: "network")', function() {
      // uncomment below and update the code to test the property network
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property networkType (base name: "networkType")', function() {
      // uncomment below and update the code to test the property networkType
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property port (base name: "port")', function() {
      // uncomment below and update the code to test the property port
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "projectId")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new NetworkManagementApi.Endpoint();
      //expect(instance).to.be();
    });

  });

}));
