/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EdgeLocation from './EdgeLocation';
import EndpointInfo from './EndpointInfo';
import LatencyDistribution from './LatencyDistribution';
import Status from './Status';

/**
 * The ProbingDetails model module.
 * @module model/ProbingDetails
 * @version v1beta1
 */
class ProbingDetails {
    /**
     * Constructs a new <code>ProbingDetails</code>.
     * Results of active probing from the last run of the test.
     * @alias module:model/ProbingDetails
     */
    constructor() { 
        
        ProbingDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProbingDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProbingDetails} obj Optional instance to populate.
     * @return {module:model/ProbingDetails} The populated <code>ProbingDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProbingDetails();

            if (data.hasOwnProperty('abortCause')) {
                obj['abortCause'] = ApiClient.convertToType(data['abortCause'], 'String');
            }
            if (data.hasOwnProperty('destinationEgressLocation')) {
                obj['destinationEgressLocation'] = EdgeLocation.constructFromObject(data['destinationEgressLocation']);
            }
            if (data.hasOwnProperty('endpointInfo')) {
                obj['endpointInfo'] = EndpointInfo.constructFromObject(data['endpointInfo']);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = Status.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('probingLatency')) {
                obj['probingLatency'] = LatencyDistribution.constructFromObject(data['probingLatency']);
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
            if (data.hasOwnProperty('sentProbeCount')) {
                obj['sentProbeCount'] = ApiClient.convertToType(data['sentProbeCount'], 'Number');
            }
            if (data.hasOwnProperty('successfulProbeCount')) {
                obj['successfulProbeCount'] = ApiClient.convertToType(data['successfulProbeCount'], 'Number');
            }
            if (data.hasOwnProperty('verifyTime')) {
                obj['verifyTime'] = ApiClient.convertToType(data['verifyTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProbingDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProbingDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['abortCause'] && !(typeof data['abortCause'] === 'string' || data['abortCause'] instanceof String)) {
            throw new Error("Expected the field `abortCause` to be a primitive type in the JSON string but got " + data['abortCause']);
        }
        // validate the optional field `destinationEgressLocation`
        if (data['destinationEgressLocation']) { // data not null
          EdgeLocation.validateJSON(data['destinationEgressLocation']);
        }
        // validate the optional field `endpointInfo`
        if (data['endpointInfo']) { // data not null
          EndpointInfo.validateJSON(data['endpointInfo']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          Status.validateJSON(data['error']);
        }
        // validate the optional field `probingLatency`
        if (data['probingLatency']) { // data not null
          LatencyDistribution.validateJSON(data['probingLatency']);
        }
        // ensure the json data is a string
        if (data['result'] && !(typeof data['result'] === 'string' || data['result'] instanceof String)) {
            throw new Error("Expected the field `result` to be a primitive type in the JSON string but got " + data['result']);
        }
        // ensure the json data is a string
        if (data['verifyTime'] && !(typeof data['verifyTime'] === 'string' || data['verifyTime'] instanceof String)) {
            throw new Error("Expected the field `verifyTime` to be a primitive type in the JSON string but got " + data['verifyTime']);
        }

        return true;
    }


}



/**
 * The reason probing was aborted.
 * @member {module:model/ProbingDetails.AbortCauseEnum} abortCause
 */
ProbingDetails.prototype['abortCause'] = undefined;

/**
 * @member {module:model/EdgeLocation} destinationEgressLocation
 */
ProbingDetails.prototype['destinationEgressLocation'] = undefined;

/**
 * @member {module:model/EndpointInfo} endpointInfo
 */
ProbingDetails.prototype['endpointInfo'] = undefined;

/**
 * @member {module:model/Status} error
 */
ProbingDetails.prototype['error'] = undefined;

/**
 * @member {module:model/LatencyDistribution} probingLatency
 */
ProbingDetails.prototype['probingLatency'] = undefined;

/**
 * The overall result of active probing.
 * @member {module:model/ProbingDetails.ResultEnum} result
 */
ProbingDetails.prototype['result'] = undefined;

/**
 * Number of probes sent.
 * @member {Number} sentProbeCount
 */
ProbingDetails.prototype['sentProbeCount'] = undefined;

/**
 * Number of probes that reached the destination.
 * @member {Number} successfulProbeCount
 */
ProbingDetails.prototype['successfulProbeCount'] = undefined;

/**
 * The time that reachability was assessed through active probing.
 * @member {String} verifyTime
 */
ProbingDetails.prototype['verifyTime'] = undefined;





/**
 * Allowed values for the <code>abortCause</code> property.
 * @enum {String}
 * @readonly
 */
ProbingDetails['AbortCauseEnum'] = {

    /**
     * value: "PROBING_ABORT_CAUSE_UNSPECIFIED"
     * @const
     */
    "PROBING_ABORT_CAUSE_UNSPECIFIED": "PROBING_ABORT_CAUSE_UNSPECIFIED",

    /**
     * value: "PERMISSION_DENIED"
     * @const
     */
    "PERMISSION_DENIED": "PERMISSION_DENIED",

    /**
     * value: "NO_SOURCE_LOCATION"
     * @const
     */
    "NO_SOURCE_LOCATION": "NO_SOURCE_LOCATION"
};


/**
 * Allowed values for the <code>result</code> property.
 * @enum {String}
 * @readonly
 */
ProbingDetails['ResultEnum'] = {

    /**
     * value: "PROBING_RESULT_UNSPECIFIED"
     * @const
     */
    "PROBING_RESULT_UNSPECIFIED": "PROBING_RESULT_UNSPECIFIED",

    /**
     * value: "REACHABLE"
     * @const
     */
    "REACHABLE": "REACHABLE",

    /**
     * value: "UNREACHABLE"
     * @const
     */
    "UNREACHABLE": "UNREACHABLE",

    /**
     * value: "REACHABILITY_INCONSISTENT"
     * @const
     */
    "REACHABILITY_INCONSISTENT": "REACHABILITY_INCONSISTENT",

    /**
     * value: "UNDETERMINED"
     * @const
     */
    "UNDETERMINED": "UNDETERMINED"
};



export default ProbingDetails;

