/**
 * Network Management API
 * The Network Management API provides a collection of network performance monitoring and diagnostic capabilities.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FirewallInfo model module.
 * @module model/FirewallInfo
 * @version v1beta1
 */
class FirewallInfo {
    /**
     * Constructs a new <code>FirewallInfo</code>.
     * For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
     * @alias module:model/FirewallInfo
     */
    constructor() { 
        
        FirewallInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FirewallInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FirewallInfo} obj Optional instance to populate.
     * @return {module:model/FirewallInfo} The populated <code>FirewallInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FirewallInfo();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('firewallRuleType')) {
                obj['firewallRuleType'] = ApiClient.convertToType(data['firewallRuleType'], 'String');
            }
            if (data.hasOwnProperty('networkUri')) {
                obj['networkUri'] = ApiClient.convertToType(data['networkUri'], 'String');
            }
            if (data.hasOwnProperty('policy')) {
                obj['policy'] = ApiClient.convertToType(data['policy'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('targetServiceAccounts')) {
                obj['targetServiceAccounts'] = ApiClient.convertToType(data['targetServiceAccounts'], ['String']);
            }
            if (data.hasOwnProperty('targetTags')) {
                obj['targetTags'] = ApiClient.convertToType(data['targetTags'], ['String']);
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FirewallInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FirewallInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['firewallRuleType'] && !(typeof data['firewallRuleType'] === 'string' || data['firewallRuleType'] instanceof String)) {
            throw new Error("Expected the field `firewallRuleType` to be a primitive type in the JSON string but got " + data['firewallRuleType']);
        }
        // ensure the json data is a string
        if (data['networkUri'] && !(typeof data['networkUri'] === 'string' || data['networkUri'] instanceof String)) {
            throw new Error("Expected the field `networkUri` to be a primitive type in the JSON string but got " + data['networkUri']);
        }
        // ensure the json data is a string
        if (data['policy'] && !(typeof data['policy'] === 'string' || data['policy'] instanceof String)) {
            throw new Error("Expected the field `policy` to be a primitive type in the JSON string but got " + data['policy']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targetServiceAccounts'])) {
            throw new Error("Expected the field `targetServiceAccounts` to be an array in the JSON data but got " + data['targetServiceAccounts']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targetTags'])) {
            throw new Error("Expected the field `targetTags` to be an array in the JSON data but got " + data['targetTags']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Possible values: ALLOW, DENY, APPLY_SECURITY_PROFILE_GROUP
 * @member {String} action
 */
FirewallInfo.prototype['action'] = undefined;

/**
 * Possible values: INGRESS, EGRESS
 * @member {String} direction
 */
FirewallInfo.prototype['direction'] = undefined;

/**
 * The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
 * @member {String} displayName
 */
FirewallInfo.prototype['displayName'] = undefined;

/**
 * The firewall rule's type.
 * @member {module:model/FirewallInfo.FirewallRuleTypeEnum} firewallRuleType
 */
FirewallInfo.prototype['firewallRuleType'] = undefined;

/**
 * The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
 * @member {String} networkUri
 */
FirewallInfo.prototype['networkUri'] = undefined;

/**
 * The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
 * @member {String} policy
 */
FirewallInfo.prototype['policy'] = undefined;

/**
 * The priority of the firewall rule.
 * @member {Number} priority
 */
FirewallInfo.prototype['priority'] = undefined;

/**
 * The target service accounts specified by the firewall rule.
 * @member {Array.<String>} targetServiceAccounts
 */
FirewallInfo.prototype['targetServiceAccounts'] = undefined;

/**
 * The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
 * @member {Array.<String>} targetTags
 */
FirewallInfo.prototype['targetTags'] = undefined;

/**
 * The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
 * @member {String} uri
 */
FirewallInfo.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>firewallRuleType</code> property.
 * @enum {String}
 * @readonly
 */
FirewallInfo['FirewallRuleTypeEnum'] = {

    /**
     * value: "FIREWALL_RULE_TYPE_UNSPECIFIED"
     * @const
     */
    "FIREWALL_RULE_TYPE_UNSPECIFIED": "FIREWALL_RULE_TYPE_UNSPECIFIED",

    /**
     * value: "HIERARCHICAL_FIREWALL_POLICY_RULE"
     * @const
     */
    "HIERARCHICAL_FIREWALL_POLICY_RULE": "HIERARCHICAL_FIREWALL_POLICY_RULE",

    /**
     * value: "VPC_FIREWALL_RULE"
     * @const
     */
    "VPC_FIREWALL_RULE": "VPC_FIREWALL_RULE",

    /**
     * value: "IMPLIED_VPC_FIREWALL_RULE"
     * @const
     */
    "IMPLIED_VPC_FIREWALL_RULE": "IMPLIED_VPC_FIREWALL_RULE",

    /**
     * value: "SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE"
     * @const
     */
    "SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE": "SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE",

    /**
     * value: "NETWORK_FIREWALL_POLICY_RULE"
     * @const
     */
    "NETWORK_FIREWALL_POLICY_RULE": "NETWORK_FIREWALL_POLICY_RULE",

    /**
     * value: "NETWORK_REGIONAL_FIREWALL_POLICY_RULE"
     * @const
     */
    "NETWORK_REGIONAL_FIREWALL_POLICY_RULE": "NETWORK_REGIONAL_FIREWALL_POLICY_RULE",

    /**
     * value: "UNSUPPORTED_FIREWALL_POLICY_RULE"
     * @const
     */
    "UNSUPPORTED_FIREWALL_POLICY_RULE": "UNSUPPORTED_FIREWALL_POLICY_RULE",

    /**
     * value: "TRACKING_STATE"
     * @const
     */
    "TRACKING_STATE": "TRACKING_STATE"
};



export default FirewallInfo;

