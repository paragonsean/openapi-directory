/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Acl from './model/Acl';
import AclRule from './model/AclRule';
import AclRuleScope from './model/AclRuleScope';
import Calendar from './model/Calendar';
import CalendarList from './model/CalendarList';
import CalendarListEntry from './model/CalendarListEntry';
import CalendarListEntryNotificationSettings from './model/CalendarListEntryNotificationSettings';
import CalendarNotification from './model/CalendarNotification';
import Channel from './model/Channel';
import ColorDefinition from './model/ColorDefinition';
import Colors from './model/Colors';
import ConferenceData from './model/ConferenceData';
import ConferenceParameters from './model/ConferenceParameters';
import ConferenceParametersAddOnParameters from './model/ConferenceParametersAddOnParameters';
import ConferenceProperties from './model/ConferenceProperties';
import ConferenceRequestStatus from './model/ConferenceRequestStatus';
import ConferenceSolution from './model/ConferenceSolution';
import ConferenceSolutionKey from './model/ConferenceSolutionKey';
import CreateConferenceRequest from './model/CreateConferenceRequest';
import EntryPoint from './model/EntryPoint';
import Error from './model/Error';
import Event from './model/Event';
import EventAttachment from './model/EventAttachment';
import EventAttendee from './model/EventAttendee';
import EventCreator from './model/EventCreator';
import EventDateTime from './model/EventDateTime';
import EventExtendedProperties from './model/EventExtendedProperties';
import EventFocusTimeProperties from './model/EventFocusTimeProperties';
import EventGadget from './model/EventGadget';
import EventOrganizer from './model/EventOrganizer';
import EventOutOfOfficeProperties from './model/EventOutOfOfficeProperties';
import EventReminder from './model/EventReminder';
import EventReminders from './model/EventReminders';
import EventSource from './model/EventSource';
import EventWorkingLocationProperties from './model/EventWorkingLocationProperties';
import EventWorkingLocationPropertiesCustomLocation from './model/EventWorkingLocationPropertiesCustomLocation';
import EventWorkingLocationPropertiesOfficeLocation from './model/EventWorkingLocationPropertiesOfficeLocation';
import Events from './model/Events';
import FreeBusyCalendar from './model/FreeBusyCalendar';
import FreeBusyGroup from './model/FreeBusyGroup';
import FreeBusyRequest from './model/FreeBusyRequest';
import FreeBusyRequestItem from './model/FreeBusyRequestItem';
import FreeBusyResponse from './model/FreeBusyResponse';
import Setting from './model/Setting';
import Settings from './model/Settings';
import TimePeriod from './model/TimePeriod';
import AclApi from './api/AclApi';
import CalendarListApi from './api/CalendarListApi';
import CalendarsApi from './api/CalendarsApi';
import ChannelsApi from './api/ChannelsApi';
import ColorsApi from './api/ColorsApi';
import EventsApi from './api/EventsApi';
import FreebusyApi from './api/FreebusyApi';
import SettingsApi from './api/SettingsApi';


/**
* Manipulates events and other calendar data..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CalendarApi = require('index'); // See note below*.
* var xxxSvc = new CalendarApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CalendarApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CalendarApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CalendarApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Acl model constructor.
     * @property {module:model/Acl}
     */
    Acl,

    /**
     * The AclRule model constructor.
     * @property {module:model/AclRule}
     */
    AclRule,

    /**
     * The AclRuleScope model constructor.
     * @property {module:model/AclRuleScope}
     */
    AclRuleScope,

    /**
     * The Calendar model constructor.
     * @property {module:model/Calendar}
     */
    Calendar,

    /**
     * The CalendarList model constructor.
     * @property {module:model/CalendarList}
     */
    CalendarList,

    /**
     * The CalendarListEntry model constructor.
     * @property {module:model/CalendarListEntry}
     */
    CalendarListEntry,

    /**
     * The CalendarListEntryNotificationSettings model constructor.
     * @property {module:model/CalendarListEntryNotificationSettings}
     */
    CalendarListEntryNotificationSettings,

    /**
     * The CalendarNotification model constructor.
     * @property {module:model/CalendarNotification}
     */
    CalendarNotification,

    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel,

    /**
     * The ColorDefinition model constructor.
     * @property {module:model/ColorDefinition}
     */
    ColorDefinition,

    /**
     * The Colors model constructor.
     * @property {module:model/Colors}
     */
    Colors,

    /**
     * The ConferenceData model constructor.
     * @property {module:model/ConferenceData}
     */
    ConferenceData,

    /**
     * The ConferenceParameters model constructor.
     * @property {module:model/ConferenceParameters}
     */
    ConferenceParameters,

    /**
     * The ConferenceParametersAddOnParameters model constructor.
     * @property {module:model/ConferenceParametersAddOnParameters}
     */
    ConferenceParametersAddOnParameters,

    /**
     * The ConferenceProperties model constructor.
     * @property {module:model/ConferenceProperties}
     */
    ConferenceProperties,

    /**
     * The ConferenceRequestStatus model constructor.
     * @property {module:model/ConferenceRequestStatus}
     */
    ConferenceRequestStatus,

    /**
     * The ConferenceSolution model constructor.
     * @property {module:model/ConferenceSolution}
     */
    ConferenceSolution,

    /**
     * The ConferenceSolutionKey model constructor.
     * @property {module:model/ConferenceSolutionKey}
     */
    ConferenceSolutionKey,

    /**
     * The CreateConferenceRequest model constructor.
     * @property {module:model/CreateConferenceRequest}
     */
    CreateConferenceRequest,

    /**
     * The EntryPoint model constructor.
     * @property {module:model/EntryPoint}
     */
    EntryPoint,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventAttachment model constructor.
     * @property {module:model/EventAttachment}
     */
    EventAttachment,

    /**
     * The EventAttendee model constructor.
     * @property {module:model/EventAttendee}
     */
    EventAttendee,

    /**
     * The EventCreator model constructor.
     * @property {module:model/EventCreator}
     */
    EventCreator,

    /**
     * The EventDateTime model constructor.
     * @property {module:model/EventDateTime}
     */
    EventDateTime,

    /**
     * The EventExtendedProperties model constructor.
     * @property {module:model/EventExtendedProperties}
     */
    EventExtendedProperties,

    /**
     * The EventFocusTimeProperties model constructor.
     * @property {module:model/EventFocusTimeProperties}
     */
    EventFocusTimeProperties,

    /**
     * The EventGadget model constructor.
     * @property {module:model/EventGadget}
     */
    EventGadget,

    /**
     * The EventOrganizer model constructor.
     * @property {module:model/EventOrganizer}
     */
    EventOrganizer,

    /**
     * The EventOutOfOfficeProperties model constructor.
     * @property {module:model/EventOutOfOfficeProperties}
     */
    EventOutOfOfficeProperties,

    /**
     * The EventReminder model constructor.
     * @property {module:model/EventReminder}
     */
    EventReminder,

    /**
     * The EventReminders model constructor.
     * @property {module:model/EventReminders}
     */
    EventReminders,

    /**
     * The EventSource model constructor.
     * @property {module:model/EventSource}
     */
    EventSource,

    /**
     * The EventWorkingLocationProperties model constructor.
     * @property {module:model/EventWorkingLocationProperties}
     */
    EventWorkingLocationProperties,

    /**
     * The EventWorkingLocationPropertiesCustomLocation model constructor.
     * @property {module:model/EventWorkingLocationPropertiesCustomLocation}
     */
    EventWorkingLocationPropertiesCustomLocation,

    /**
     * The EventWorkingLocationPropertiesOfficeLocation model constructor.
     * @property {module:model/EventWorkingLocationPropertiesOfficeLocation}
     */
    EventWorkingLocationPropertiesOfficeLocation,

    /**
     * The Events model constructor.
     * @property {module:model/Events}
     */
    Events,

    /**
     * The FreeBusyCalendar model constructor.
     * @property {module:model/FreeBusyCalendar}
     */
    FreeBusyCalendar,

    /**
     * The FreeBusyGroup model constructor.
     * @property {module:model/FreeBusyGroup}
     */
    FreeBusyGroup,

    /**
     * The FreeBusyRequest model constructor.
     * @property {module:model/FreeBusyRequest}
     */
    FreeBusyRequest,

    /**
     * The FreeBusyRequestItem model constructor.
     * @property {module:model/FreeBusyRequestItem}
     */
    FreeBusyRequestItem,

    /**
     * The FreeBusyResponse model constructor.
     * @property {module:model/FreeBusyResponse}
     */
    FreeBusyResponse,

    /**
     * The Setting model constructor.
     * @property {module:model/Setting}
     */
    Setting,

    /**
     * The Settings model constructor.
     * @property {module:model/Settings}
     */
    Settings,

    /**
     * The TimePeriod model constructor.
     * @property {module:model/TimePeriod}
     */
    TimePeriod,

    /**
    * The AclApi service constructor.
    * @property {module:api/AclApi}
    */
    AclApi,

    /**
    * The CalendarListApi service constructor.
    * @property {module:api/CalendarListApi}
    */
    CalendarListApi,

    /**
    * The CalendarsApi service constructor.
    * @property {module:api/CalendarsApi}
    */
    CalendarsApi,

    /**
    * The ChannelsApi service constructor.
    * @property {module:api/ChannelsApi}
    */
    ChannelsApi,

    /**
    * The ColorsApi service constructor.
    * @property {module:api/ColorsApi}
    */
    ColorsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The FreebusyApi service constructor.
    * @property {module:api/FreebusyApi}
    */
    FreebusyApi,

    /**
    * The SettingsApi service constructor.
    * @property {module:api/SettingsApi}
    */
    SettingsApi
};
