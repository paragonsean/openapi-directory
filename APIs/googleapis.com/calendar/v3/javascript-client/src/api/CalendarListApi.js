/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CalendarList from '../model/CalendarList';
import CalendarListEntry from '../model/CalendarListEntry';
import Channel from '../model/Channel';

/**
* CalendarList service.
* @module api/CalendarListApi
* @version v3
*/
export default class CalendarListApi {

    /**
    * Constructs a new CalendarListApi. 
    * @alias module:api/CalendarListApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the calendarCalendarListDelete operation.
     * @callback module:api/CalendarListApi~calendarCalendarListDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes a calendar from the user's calendar list.
     * @param {String} calendarId Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:api/CalendarListApi~calendarCalendarListDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    calendarCalendarListDelete(calendarId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'calendarId' is set
      if (calendarId === undefined || calendarId === null) {
        throw new Error("Missing the required parameter 'calendarId' when calling calendarCalendarListDelete");
      }

      let pathParams = {
        'calendarId': calendarId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/users/me/calendarList/{calendarId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarCalendarListGet operation.
     * @callback module:api/CalendarListApi~calendarCalendarListGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarListEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a calendar from the user's calendar list.
     * @param {String} calendarId Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {module:api/CalendarListApi~calendarCalendarListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarListEntry}
     */
    calendarCalendarListGet(calendarId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'calendarId' is set
      if (calendarId === undefined || calendarId === null) {
        throw new Error("Missing the required parameter 'calendarId' when calling calendarCalendarListGet");
      }

      let pathParams = {
        'calendarId': calendarId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CalendarListEntry;
      return this.apiClient.callApi(
        '/users/me/calendarList/{calendarId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarCalendarListInsert operation.
     * @callback module:api/CalendarListApi~calendarCalendarListInsertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarListEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Inserts an existing calendar into the user's calendar list.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Boolean} [colorRgbFormat] Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.
     * @param {module:model/CalendarListEntry} [calendarListEntry] 
     * @param {module:api/CalendarListApi~calendarCalendarListInsertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarListEntry}
     */
    calendarCalendarListInsert(opts, callback) {
      opts = opts || {};
      let postBody = opts['calendarListEntry'];

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'colorRgbFormat': opts['colorRgbFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CalendarListEntry;
      return this.apiClient.callApi(
        '/users/me/calendarList', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarCalendarListList operation.
     * @callback module:api/CalendarListApi~calendarCalendarListListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the calendars on the user's calendar list.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Number} [maxResults] Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
     * @param {module:model/String} [minAccessRole] The minimum access role for the user in the returned entries. Optional. The default is no restriction.
     * @param {String} [pageToken] Token specifying which result page to return. Optional.
     * @param {Boolean} [showDeleted] Whether to include deleted calendar list entries in the result. Optional. The default is False.
     * @param {Boolean} [showHidden] Whether to show hidden entries. Optional. The default is False.
     * @param {String} [syncToken] Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False. To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.
     * @param {module:api/CalendarListApi~calendarCalendarListListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarList}
     */
    calendarCalendarListList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'maxResults': opts['maxResults'],
        'minAccessRole': opts['minAccessRole'],
        'pageToken': opts['pageToken'],
        'showDeleted': opts['showDeleted'],
        'showHidden': opts['showHidden'],
        'syncToken': opts['syncToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CalendarList;
      return this.apiClient.callApi(
        '/users/me/calendarList', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarCalendarListPatch operation.
     * @callback module:api/CalendarListApi~calendarCalendarListPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarListEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing calendar on the user's calendar list. This method supports patch semantics.
     * @param {String} calendarId Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Boolean} [colorRgbFormat] Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.
     * @param {module:model/CalendarListEntry} [calendarListEntry] 
     * @param {module:api/CalendarListApi~calendarCalendarListPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarListEntry}
     */
    calendarCalendarListPatch(calendarId, opts, callback) {
      opts = opts || {};
      let postBody = opts['calendarListEntry'];
      // verify the required parameter 'calendarId' is set
      if (calendarId === undefined || calendarId === null) {
        throw new Error("Missing the required parameter 'calendarId' when calling calendarCalendarListPatch");
      }

      let pathParams = {
        'calendarId': calendarId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'colorRgbFormat': opts['colorRgbFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CalendarListEntry;
      return this.apiClient.callApi(
        '/users/me/calendarList/{calendarId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarCalendarListUpdate operation.
     * @callback module:api/CalendarListApi~calendarCalendarListUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CalendarListEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing calendar on the user's calendar list.
     * @param {String} calendarId Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Boolean} [colorRgbFormat] Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.
     * @param {module:model/CalendarListEntry} [calendarListEntry] 
     * @param {module:api/CalendarListApi~calendarCalendarListUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CalendarListEntry}
     */
    calendarCalendarListUpdate(calendarId, opts, callback) {
      opts = opts || {};
      let postBody = opts['calendarListEntry'];
      // verify the required parameter 'calendarId' is set
      if (calendarId === undefined || calendarId === null) {
        throw new Error("Missing the required parameter 'calendarId' when calling calendarCalendarListUpdate");
      }

      let pathParams = {
        'calendarId': calendarId
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'colorRgbFormat': opts['colorRgbFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CalendarListEntry;
      return this.apiClient.callApi(
        '/users/me/calendarList/{calendarId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarCalendarListWatch operation.
     * @callback module:api/CalendarListApi~calendarCalendarListWatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Channel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Watch for changes to CalendarList resources.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [alt] Data format for the response.
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * @param {String} [userIp] Deprecated. Please use quotaUser instead.
     * @param {Number} [maxResults] Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
     * @param {module:model/String} [minAccessRole] The minimum access role for the user in the returned entries. Optional. The default is no restriction.
     * @param {String} [pageToken] Token specifying which result page to return. Optional.
     * @param {Boolean} [showDeleted] Whether to include deleted calendar list entries in the result. Optional. The default is False.
     * @param {Boolean} [showHidden] Whether to show hidden entries. Optional. The default is False.
     * @param {String} [syncToken] Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False. To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken. If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken. Learn more about incremental synchronization. Optional. The default is to return all entries.
     * @param {module:model/Channel} [channel] 
     * @param {module:api/CalendarListApi~calendarCalendarListWatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Channel}
     */
    calendarCalendarListWatch(opts, callback) {
      opts = opts || {};
      let postBody = opts['channel'];

      let pathParams = {
      };
      let queryParams = {
        'alt': opts['alt'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'userIp': opts['userIp'],
        'maxResults': opts['maxResults'],
        'minAccessRole': opts['minAccessRole'],
        'pageToken': opts['pageToken'],
        'showDeleted': opts['showDeleted'],
        'showHidden': opts['showHidden'],
        'syncToken': opts['syncToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Channel;
      return this.apiClient.callApi(
        '/users/me/calendarList/watch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
