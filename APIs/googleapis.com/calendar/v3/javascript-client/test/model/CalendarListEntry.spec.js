/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CalendarApi);
  }
}(this, function(expect, CalendarApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CalendarApi.CalendarListEntry();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CalendarListEntry', function() {
    it('should create an instance of CalendarListEntry', function() {
      // uncomment below and update the code to test CalendarListEntry
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be.a(CalendarApi.CalendarListEntry);
    });

    it('should have the property accessRole (base name: "accessRole")', function() {
      // uncomment below and update the code to test the property accessRole
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property backgroundColor (base name: "backgroundColor")', function() {
      // uncomment below and update the code to test the property backgroundColor
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property colorId (base name: "colorId")', function() {
      // uncomment below and update the code to test the property colorId
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property conferenceProperties (base name: "conferenceProperties")', function() {
      // uncomment below and update the code to test the property conferenceProperties
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property defaultReminders (base name: "defaultReminders")', function() {
      // uncomment below and update the code to test the property defaultReminders
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property foregroundColor (base name: "foregroundColor")', function() {
      // uncomment below and update the code to test the property foregroundColor
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property hidden (base name: "hidden")', function() {
      // uncomment below and update the code to test the property hidden
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property notificationSettings (base name: "notificationSettings")', function() {
      // uncomment below and update the code to test the property notificationSettings
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property primary (base name: "primary")', function() {
      // uncomment below and update the code to test the property primary
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property selected (base name: "selected")', function() {
      // uncomment below and update the code to test the property selected
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property summaryOverride (base name: "summaryOverride")', function() {
      // uncomment below and update the code to test the property summaryOverride
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new CalendarApi.CalendarListEntry();
      //expect(instance).to.be();
    });

  });

}));
