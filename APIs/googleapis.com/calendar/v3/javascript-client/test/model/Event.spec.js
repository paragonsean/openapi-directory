/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CalendarApi);
  }
}(this, function(expect, CalendarApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CalendarApi.Event();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Event', function() {
    it('should create an instance of Event', function() {
      // uncomment below and update the code to test Event
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be.a(CalendarApi.Event);
    });

    it('should have the property anyoneCanAddSelf (base name: "anyoneCanAddSelf")', function() {
      // uncomment below and update the code to test the property anyoneCanAddSelf
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property attachments (base name: "attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property attendees (base name: "attendees")', function() {
      // uncomment below and update the code to test the property attendees
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property attendeesOmitted (base name: "attendeesOmitted")', function() {
      // uncomment below and update the code to test the property attendeesOmitted
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property colorId (base name: "colorId")', function() {
      // uncomment below and update the code to test the property colorId
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property conferenceData (base name: "conferenceData")', function() {
      // uncomment below and update the code to test the property conferenceData
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "end")', function() {
      // uncomment below and update the code to test the property end
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property endTimeUnspecified (base name: "endTimeUnspecified")', function() {
      // uncomment below and update the code to test the property endTimeUnspecified
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property eventType (base name: "eventType")', function() {
      // uncomment below and update the code to test the property eventType
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property extendedProperties (base name: "extendedProperties")', function() {
      // uncomment below and update the code to test the property extendedProperties
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property focusTimeProperties (base name: "focusTimeProperties")', function() {
      // uncomment below and update the code to test the property focusTimeProperties
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property gadget (base name: "gadget")', function() {
      // uncomment below and update the code to test the property gadget
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property guestsCanInviteOthers (base name: "guestsCanInviteOthers")', function() {
      // uncomment below and update the code to test the property guestsCanInviteOthers
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property guestsCanModify (base name: "guestsCanModify")', function() {
      // uncomment below and update the code to test the property guestsCanModify
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property guestsCanSeeOtherGuests (base name: "guestsCanSeeOtherGuests")', function() {
      // uncomment below and update the code to test the property guestsCanSeeOtherGuests
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property hangoutLink (base name: "hangoutLink")', function() {
      // uncomment below and update the code to test the property hangoutLink
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property htmlLink (base name: "htmlLink")', function() {
      // uncomment below and update the code to test the property htmlLink
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property iCalUID (base name: "iCalUID")', function() {
      // uncomment below and update the code to test the property iCalUID
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property locked (base name: "locked")', function() {
      // uncomment below and update the code to test the property locked
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property organizer (base name: "organizer")', function() {
      // uncomment below and update the code to test the property organizer
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property originalStartTime (base name: "originalStartTime")', function() {
      // uncomment below and update the code to test the property originalStartTime
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property outOfOfficeProperties (base name: "outOfOfficeProperties")', function() {
      // uncomment below and update the code to test the property outOfOfficeProperties
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property privateCopy (base name: "privateCopy")', function() {
      // uncomment below and update the code to test the property privateCopy
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property recurrence (base name: "recurrence")', function() {
      // uncomment below and update the code to test the property recurrence
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property recurringEventId (base name: "recurringEventId")', function() {
      // uncomment below and update the code to test the property recurringEventId
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property reminders (base name: "reminders")', function() {
      // uncomment below and update the code to test the property reminders
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property sequence (base name: "sequence")', function() {
      // uncomment below and update the code to test the property sequence
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "start")', function() {
      // uncomment below and update the code to test the property start
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property transparency (base name: "transparency")', function() {
      // uncomment below and update the code to test the property transparency
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property visibility (base name: "visibility")', function() {
      // uncomment below and update the code to test the property visibility
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

    it('should have the property workingLocationProperties (base name: "workingLocationProperties")', function() {
      // uncomment below and update the code to test the property workingLocationProperties
      //var instance = new CalendarApi.Event();
      //expect(instance).to.be();
    });

  });

}));
