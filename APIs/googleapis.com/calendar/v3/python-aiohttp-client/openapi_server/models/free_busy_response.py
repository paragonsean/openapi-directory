# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.free_busy_calendar import FreeBusyCalendar
from openapi_server.models.free_busy_group import FreeBusyGroup
from openapi_server import util


class FreeBusyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calendars: Dict[str, FreeBusyCalendar]=None, groups: Dict[str, FreeBusyGroup]=None, kind: str='calendar#freeBusy', time_max: datetime=None, time_min: datetime=None):
        """FreeBusyResponse - a model defined in OpenAPI

        :param calendars: The calendars of this FreeBusyResponse.
        :param groups: The groups of this FreeBusyResponse.
        :param kind: The kind of this FreeBusyResponse.
        :param time_max: The time_max of this FreeBusyResponse.
        :param time_min: The time_min of this FreeBusyResponse.
        """
        self.openapi_types = {
            'calendars': Dict[str, FreeBusyCalendar],
            'groups': Dict[str, FreeBusyGroup],
            'kind': str,
            'time_max': datetime,
            'time_min': datetime
        }

        self.attribute_map = {
            'calendars': 'calendars',
            'groups': 'groups',
            'kind': 'kind',
            'time_max': 'timeMax',
            'time_min': 'timeMin'
        }

        self._calendars = calendars
        self._groups = groups
        self._kind = kind
        self._time_max = time_max
        self._time_min = time_min

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FreeBusyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FreeBusyResponse of this FreeBusyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calendars(self):
        """Gets the calendars of this FreeBusyResponse.

        List of free/busy information for calendars.

        :return: The calendars of this FreeBusyResponse.
        :rtype: Dict[str, FreeBusyCalendar]
        """
        return self._calendars

    @calendars.setter
    def calendars(self, calendars):
        """Sets the calendars of this FreeBusyResponse.

        List of free/busy information for calendars.

        :param calendars: The calendars of this FreeBusyResponse.
        :type calendars: Dict[str, FreeBusyCalendar]
        """

        self._calendars = calendars

    @property
    def groups(self):
        """Gets the groups of this FreeBusyResponse.

        Expansion of groups.

        :return: The groups of this FreeBusyResponse.
        :rtype: Dict[str, FreeBusyGroup]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this FreeBusyResponse.

        Expansion of groups.

        :param groups: The groups of this FreeBusyResponse.
        :type groups: Dict[str, FreeBusyGroup]
        """

        self._groups = groups

    @property
    def kind(self):
        """Gets the kind of this FreeBusyResponse.

        Type of the resource (\"calendar#freeBusy\").

        :return: The kind of this FreeBusyResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this FreeBusyResponse.

        Type of the resource (\"calendar#freeBusy\").

        :param kind: The kind of this FreeBusyResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def time_max(self):
        """Gets the time_max of this FreeBusyResponse.

        The end of the interval.

        :return: The time_max of this FreeBusyResponse.
        :rtype: datetime
        """
        return self._time_max

    @time_max.setter
    def time_max(self, time_max):
        """Sets the time_max of this FreeBusyResponse.

        The end of the interval.

        :param time_max: The time_max of this FreeBusyResponse.
        :type time_max: datetime
        """

        self._time_max = time_max

    @property
    def time_min(self):
        """Gets the time_min of this FreeBusyResponse.

        The start of the interval.

        :return: The time_min of this FreeBusyResponse.
        :rtype: datetime
        """
        return self._time_min

    @time_min.setter
    def time_min(self, time_min):
        """Sets the time_min of this FreeBusyResponse.

        The start of the interval.

        :param time_min: The time_min of this FreeBusyResponse.
        :type time_min: datetime
        """

        self._time_min = time_min
