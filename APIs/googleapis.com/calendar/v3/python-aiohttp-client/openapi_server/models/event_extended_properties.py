# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventExtendedProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, private: Dict[str, str]=None, shared: Dict[str, str]=None):
        """EventExtendedProperties - a model defined in OpenAPI

        :param private: The private of this EventExtendedProperties.
        :param shared: The shared of this EventExtendedProperties.
        """
        self.openapi_types = {
            'private': Dict[str, str],
            'shared': Dict[str, str]
        }

        self.attribute_map = {
            'private': 'private',
            'shared': 'shared'
        }

        self._private = private
        self._shared = shared

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventExtendedProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Event_extendedProperties of this EventExtendedProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def private(self):
        """Gets the private of this EventExtendedProperties.

        Properties that are private to the copy of the event that appears on this calendar.

        :return: The private of this EventExtendedProperties.
        :rtype: Dict[str, str]
        """
        return self._private

    @private.setter
    def private(self, private):
        """Sets the private of this EventExtendedProperties.

        Properties that are private to the copy of the event that appears on this calendar.

        :param private: The private of this EventExtendedProperties.
        :type private: Dict[str, str]
        """

        self._private = private

    @property
    def shared(self):
        """Gets the shared of this EventExtendedProperties.

        Properties that are shared between copies of the event on other attendees' calendars.

        :return: The shared of this EventExtendedProperties.
        :rtype: Dict[str, str]
        """
        return self._shared

    @shared.setter
    def shared(self, shared):
        """Sets the shared of this EventExtendedProperties.

        Properties that are shared between copies of the event on other attendees' calendars.

        :param shared: The shared of this EventExtendedProperties.
        :type shared: Dict[str, str]
        """

        self._shared = shared
