# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.free_busy_request_item import FreeBusyRequestItem
from openapi_server import util


class FreeBusyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calendar_expansion_max: int=None, group_expansion_max: int=None, items: List[FreeBusyRequestItem]=None, time_max: datetime=None, time_min: datetime=None, time_zone: str='UTC'):
        """FreeBusyRequest - a model defined in OpenAPI

        :param calendar_expansion_max: The calendar_expansion_max of this FreeBusyRequest.
        :param group_expansion_max: The group_expansion_max of this FreeBusyRequest.
        :param items: The items of this FreeBusyRequest.
        :param time_max: The time_max of this FreeBusyRequest.
        :param time_min: The time_min of this FreeBusyRequest.
        :param time_zone: The time_zone of this FreeBusyRequest.
        """
        self.openapi_types = {
            'calendar_expansion_max': int,
            'group_expansion_max': int,
            'items': List[FreeBusyRequestItem],
            'time_max': datetime,
            'time_min': datetime,
            'time_zone': str
        }

        self.attribute_map = {
            'calendar_expansion_max': 'calendarExpansionMax',
            'group_expansion_max': 'groupExpansionMax',
            'items': 'items',
            'time_max': 'timeMax',
            'time_min': 'timeMin',
            'time_zone': 'timeZone'
        }

        self._calendar_expansion_max = calendar_expansion_max
        self._group_expansion_max = group_expansion_max
        self._items = items
        self._time_max = time_max
        self._time_min = time_min
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FreeBusyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FreeBusyRequest of this FreeBusyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calendar_expansion_max(self):
        """Gets the calendar_expansion_max of this FreeBusyRequest.

        Maximal number of calendars for which FreeBusy information is to be provided. Optional. Maximum value is 50.

        :return: The calendar_expansion_max of this FreeBusyRequest.
        :rtype: int
        """
        return self._calendar_expansion_max

    @calendar_expansion_max.setter
    def calendar_expansion_max(self, calendar_expansion_max):
        """Sets the calendar_expansion_max of this FreeBusyRequest.

        Maximal number of calendars for which FreeBusy information is to be provided. Optional. Maximum value is 50.

        :param calendar_expansion_max: The calendar_expansion_max of this FreeBusyRequest.
        :type calendar_expansion_max: int
        """

        self._calendar_expansion_max = calendar_expansion_max

    @property
    def group_expansion_max(self):
        """Gets the group_expansion_max of this FreeBusyRequest.

        Maximal number of calendar identifiers to be provided for a single group. Optional. An error is returned for a group with more members than this value. Maximum value is 100.

        :return: The group_expansion_max of this FreeBusyRequest.
        :rtype: int
        """
        return self._group_expansion_max

    @group_expansion_max.setter
    def group_expansion_max(self, group_expansion_max):
        """Sets the group_expansion_max of this FreeBusyRequest.

        Maximal number of calendar identifiers to be provided for a single group. Optional. An error is returned for a group with more members than this value. Maximum value is 100.

        :param group_expansion_max: The group_expansion_max of this FreeBusyRequest.
        :type group_expansion_max: int
        """

        self._group_expansion_max = group_expansion_max

    @property
    def items(self):
        """Gets the items of this FreeBusyRequest.

        List of calendars and/or groups to query.

        :return: The items of this FreeBusyRequest.
        :rtype: List[FreeBusyRequestItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this FreeBusyRequest.

        List of calendars and/or groups to query.

        :param items: The items of this FreeBusyRequest.
        :type items: List[FreeBusyRequestItem]
        """

        self._items = items

    @property
    def time_max(self):
        """Gets the time_max of this FreeBusyRequest.

        The end of the interval for the query formatted as per RFC3339.

        :return: The time_max of this FreeBusyRequest.
        :rtype: datetime
        """
        return self._time_max

    @time_max.setter
    def time_max(self, time_max):
        """Sets the time_max of this FreeBusyRequest.

        The end of the interval for the query formatted as per RFC3339.

        :param time_max: The time_max of this FreeBusyRequest.
        :type time_max: datetime
        """

        self._time_max = time_max

    @property
    def time_min(self):
        """Gets the time_min of this FreeBusyRequest.

        The start of the interval for the query formatted as per RFC3339.

        :return: The time_min of this FreeBusyRequest.
        :rtype: datetime
        """
        return self._time_min

    @time_min.setter
    def time_min(self, time_min):
        """Sets the time_min of this FreeBusyRequest.

        The start of the interval for the query formatted as per RFC3339.

        :param time_min: The time_min of this FreeBusyRequest.
        :type time_min: datetime
        """

        self._time_min = time_min

    @property
    def time_zone(self):
        """Gets the time_zone of this FreeBusyRequest.

        Time zone used in the response. Optional. The default is UTC.

        :return: The time_zone of this FreeBusyRequest.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this FreeBusyRequest.

        Time zone used in the response. Optional. The default is UTC.

        :param time_zone: The time_zone of this FreeBusyRequest.
        :type time_zone: str
        """

        self._time_zone = time_zone
