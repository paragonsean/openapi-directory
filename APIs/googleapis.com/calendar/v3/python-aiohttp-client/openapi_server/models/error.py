# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, reason: str=None):
        """Error - a model defined in OpenAPI

        :param domain: The domain of this Error.
        :param reason: The reason of this Error.
        """
        self.openapi_types = {
            'domain': str,
            'reason': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'reason': 'reason'
        }

        self._domain = domain
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this Error.

        Domain, or broad category, of the error.

        :return: The domain of this Error.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this Error.

        Domain, or broad category, of the error.

        :param domain: The domain of this Error.
        :type domain: str
        """

        self._domain = domain

    @property
    def reason(self):
        """Gets the reason of this Error.

        Specific reason for the error. Some of the possible values are:   - \"groupTooBig\" - The group of users requested is too large for a single query.  - \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query.  - \"notFound\" - The requested resource was not found.  - \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list.

        :return: The reason of this Error.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this Error.

        Specific reason for the error. Some of the possible values are:   - \"groupTooBig\" - The group of users requested is too large for a single query.  - \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query.  - \"notFound\" - The requested resource was not found.  - \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list.

        :param reason: The reason of this Error.
        :type reason: str
        """

        self._reason = reason
