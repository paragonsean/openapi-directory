# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.time_period import TimePeriod
from openapi_server import util


class FreeBusyCalendar(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, busy: List[TimePeriod]=None, errors: List[Error]=None):
        """FreeBusyCalendar - a model defined in OpenAPI

        :param busy: The busy of this FreeBusyCalendar.
        :param errors: The errors of this FreeBusyCalendar.
        """
        self.openapi_types = {
            'busy': List[TimePeriod],
            'errors': List[Error]
        }

        self.attribute_map = {
            'busy': 'busy',
            'errors': 'errors'
        }

        self._busy = busy
        self._errors = errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FreeBusyCalendar':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FreeBusyCalendar of this FreeBusyCalendar.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def busy(self):
        """Gets the busy of this FreeBusyCalendar.

        List of time ranges during which this calendar should be regarded as busy.

        :return: The busy of this FreeBusyCalendar.
        :rtype: List[TimePeriod]
        """
        return self._busy

    @busy.setter
    def busy(self, busy):
        """Sets the busy of this FreeBusyCalendar.

        List of time ranges during which this calendar should be regarded as busy.

        :param busy: The busy of this FreeBusyCalendar.
        :type busy: List[TimePeriod]
        """

        self._busy = busy

    @property
    def errors(self):
        """Gets the errors of this FreeBusyCalendar.

        Optional error(s) (if computation for the calendar failed).

        :return: The errors of this FreeBusyCalendar.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this FreeBusyCalendar.

        Optional error(s) (if computation for the calendar failed).

        :param errors: The errors of this FreeBusyCalendar.
        :type errors: List[Error]
        """

        self._errors = errors
