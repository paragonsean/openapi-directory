# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.acl_rule import AclRule
from openapi_server import util


class Acl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, items: List[AclRule]=None, kind: str='calendar#acl', next_page_token: str=None, next_sync_token: str=None):
        """Acl - a model defined in OpenAPI

        :param etag: The etag of this Acl.
        :param items: The items of this Acl.
        :param kind: The kind of this Acl.
        :param next_page_token: The next_page_token of this Acl.
        :param next_sync_token: The next_sync_token of this Acl.
        """
        self.openapi_types = {
            'etag': str,
            'items': List[AclRule],
            'kind': str,
            'next_page_token': str,
            'next_sync_token': str
        }

        self.attribute_map = {
            'etag': 'etag',
            'items': 'items',
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'next_sync_token': 'nextSyncToken'
        }

        self._etag = etag
        self._items = items
        self._kind = kind
        self._next_page_token = next_page_token
        self._next_sync_token = next_sync_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Acl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Acl of this Acl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this Acl.

        ETag of the collection.

        :return: The etag of this Acl.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this Acl.

        ETag of the collection.

        :param etag: The etag of this Acl.
        :type etag: str
        """

        self._etag = etag

    @property
    def items(self):
        """Gets the items of this Acl.

        List of rules on the access control list.

        :return: The items of this Acl.
        :rtype: List[AclRule]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Acl.

        List of rules on the access control list.

        :param items: The items of this Acl.
        :type items: List[AclRule]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this Acl.

        Type of the collection (\"calendar#acl\").

        :return: The kind of this Acl.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Acl.

        Type of the collection (\"calendar#acl\").

        :param kind: The kind of this Acl.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this Acl.

        Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.

        :return: The next_page_token of this Acl.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this Acl.

        Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.

        :param next_page_token: The next_page_token of this Acl.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def next_sync_token(self):
        """Gets the next_sync_token of this Acl.

        Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.

        :return: The next_sync_token of this Acl.
        :rtype: str
        """
        return self._next_sync_token

    @next_sync_token.setter
    def next_sync_token(self, next_sync_token):
        """Sets the next_sync_token of this Acl.

        Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.

        :param next_sync_token: The next_sync_token of this Acl.
        :type next_sync_token: str
        """

        self._next_sync_token = next_sync_token
