/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeBusyCalendar.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeBusyCalendar::OAIFreeBusyCalendar(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeBusyCalendar::OAIFreeBusyCalendar() {
    this->initializeModel();
}

OAIFreeBusyCalendar::~OAIFreeBusyCalendar() {}

void OAIFreeBusyCalendar::initializeModel() {

    m_busy_isSet = false;
    m_busy_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;
}

void OAIFreeBusyCalendar::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeBusyCalendar::fromJsonObject(QJsonObject json) {

    m_busy_isValid = ::OpenAPI::fromJsonValue(m_busy, json[QString("busy")]);
    m_busy_isSet = !json[QString("busy")].isNull() && m_busy_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;
}

QString OAIFreeBusyCalendar::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeBusyCalendar::asJsonObject() const {
    QJsonObject obj;
    if (m_busy.size() > 0) {
        obj.insert(QString("busy"), ::OpenAPI::toJsonValue(m_busy));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    return obj;
}

QList<OAITimePeriod> OAIFreeBusyCalendar::getBusy() const {
    return m_busy;
}
void OAIFreeBusyCalendar::setBusy(const QList<OAITimePeriod> &busy) {
    m_busy = busy;
    m_busy_isSet = true;
}

bool OAIFreeBusyCalendar::is_busy_Set() const{
    return m_busy_isSet;
}

bool OAIFreeBusyCalendar::is_busy_Valid() const{
    return m_busy_isValid;
}

QList<OAIError> OAIFreeBusyCalendar::getErrors() const {
    return m_errors;
}
void OAIFreeBusyCalendar::setErrors(const QList<OAIError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIFreeBusyCalendar::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIFreeBusyCalendar::is_errors_Valid() const{
    return m_errors_isValid;
}

bool OAIFreeBusyCalendar::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_busy.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeBusyCalendar::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
