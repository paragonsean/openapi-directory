/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColorDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColorDefinition::OAIColorDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColorDefinition::OAIColorDefinition() {
    this->initializeModel();
}

OAIColorDefinition::~OAIColorDefinition() {}

void OAIColorDefinition::initializeModel() {

    m_background_isSet = false;
    m_background_isValid = false;

    m_foreground_isSet = false;
    m_foreground_isValid = false;
}

void OAIColorDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColorDefinition::fromJsonObject(QJsonObject json) {

    m_background_isValid = ::OpenAPI::fromJsonValue(m_background, json[QString("background")]);
    m_background_isSet = !json[QString("background")].isNull() && m_background_isValid;

    m_foreground_isValid = ::OpenAPI::fromJsonValue(m_foreground, json[QString("foreground")]);
    m_foreground_isSet = !json[QString("foreground")].isNull() && m_foreground_isValid;
}

QString OAIColorDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColorDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_background_isSet) {
        obj.insert(QString("background"), ::OpenAPI::toJsonValue(m_background));
    }
    if (m_foreground_isSet) {
        obj.insert(QString("foreground"), ::OpenAPI::toJsonValue(m_foreground));
    }
    return obj;
}

QString OAIColorDefinition::getBackground() const {
    return m_background;
}
void OAIColorDefinition::setBackground(const QString &background) {
    m_background = background;
    m_background_isSet = true;
}

bool OAIColorDefinition::is_background_Set() const{
    return m_background_isSet;
}

bool OAIColorDefinition::is_background_Valid() const{
    return m_background_isValid;
}

QString OAIColorDefinition::getForeground() const {
    return m_foreground;
}
void OAIColorDefinition::setForeground(const QString &foreground) {
    m_foreground = foreground;
    m_foreground_isSet = true;
}

bool OAIColorDefinition::is_foreground_Set() const{
    return m_foreground_isSet;
}

bool OAIColorDefinition::is_foreground_Valid() const{
    return m_foreground_isValid;
}

bool OAIColorDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_background_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_foreground_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColorDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
