/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFreeBusyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFreeBusyResponse::OAIFreeBusyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFreeBusyResponse::OAIFreeBusyResponse() {
    this->initializeModel();
}

OAIFreeBusyResponse::~OAIFreeBusyResponse() {}

void OAIFreeBusyResponse::initializeModel() {

    m_calendars_isSet = false;
    m_calendars_isValid = false;

    m_groups_isSet = false;
    m_groups_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_time_max_isSet = false;
    m_time_max_isValid = false;

    m_time_min_isSet = false;
    m_time_min_isValid = false;
}

void OAIFreeBusyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFreeBusyResponse::fromJsonObject(QJsonObject json) {

    m_calendars_isValid = ::OpenAPI::fromJsonValue(m_calendars, json[QString("calendars")]);
    m_calendars_isSet = !json[QString("calendars")].isNull() && m_calendars_isValid;

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("groups")]);
    m_groups_isSet = !json[QString("groups")].isNull() && m_groups_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_time_max_isValid = ::OpenAPI::fromJsonValue(m_time_max, json[QString("timeMax")]);
    m_time_max_isSet = !json[QString("timeMax")].isNull() && m_time_max_isValid;

    m_time_min_isValid = ::OpenAPI::fromJsonValue(m_time_min, json[QString("timeMin")]);
    m_time_min_isSet = !json[QString("timeMin")].isNull() && m_time_min_isValid;
}

QString OAIFreeBusyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFreeBusyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_calendars.size() > 0) {
        obj.insert(QString("calendars"), ::OpenAPI::toJsonValue(m_calendars));
    }
    if (m_groups.size() > 0) {
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_time_max_isSet) {
        obj.insert(QString("timeMax"), ::OpenAPI::toJsonValue(m_time_max));
    }
    if (m_time_min_isSet) {
        obj.insert(QString("timeMin"), ::OpenAPI::toJsonValue(m_time_min));
    }
    return obj;
}

QMap<QString, OAIFreeBusyCalendar> OAIFreeBusyResponse::getCalendars() const {
    return m_calendars;
}
void OAIFreeBusyResponse::setCalendars(const QMap<QString, OAIFreeBusyCalendar> &calendars) {
    m_calendars = calendars;
    m_calendars_isSet = true;
}

bool OAIFreeBusyResponse::is_calendars_Set() const{
    return m_calendars_isSet;
}

bool OAIFreeBusyResponse::is_calendars_Valid() const{
    return m_calendars_isValid;
}

QMap<QString, OAIFreeBusyGroup> OAIFreeBusyResponse::getGroups() const {
    return m_groups;
}
void OAIFreeBusyResponse::setGroups(const QMap<QString, OAIFreeBusyGroup> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAIFreeBusyResponse::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAIFreeBusyResponse::is_groups_Valid() const{
    return m_groups_isValid;
}

QString OAIFreeBusyResponse::getKind() const {
    return m_kind;
}
void OAIFreeBusyResponse::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIFreeBusyResponse::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIFreeBusyResponse::is_kind_Valid() const{
    return m_kind_isValid;
}

QDateTime OAIFreeBusyResponse::getTimeMax() const {
    return m_time_max;
}
void OAIFreeBusyResponse::setTimeMax(const QDateTime &time_max) {
    m_time_max = time_max;
    m_time_max_isSet = true;
}

bool OAIFreeBusyResponse::is_time_max_Set() const{
    return m_time_max_isSet;
}

bool OAIFreeBusyResponse::is_time_max_Valid() const{
    return m_time_max_isValid;
}

QDateTime OAIFreeBusyResponse::getTimeMin() const {
    return m_time_min;
}
void OAIFreeBusyResponse::setTimeMin(const QDateTime &time_min) {
    m_time_min = time_min;
    m_time_min_isSet = true;
}

bool OAIFreeBusyResponse::is_time_min_Set() const{
    return m_time_min_isSet;
}

bool OAIFreeBusyResponse::is_time_min_Valid() const{
    return m_time_min_isValid;
}

bool OAIFreeBusyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calendars.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_min_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFreeBusyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
