/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntryPoint.h
 *
 * 
 */

#ifndef OAIEntryPoint_H
#define OAIEntryPoint_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntryPoint : public OAIObject {
public:
    OAIEntryPoint();
    OAIEntryPoint(QString json);
    ~OAIEntryPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessCode() const;
    void setAccessCode(const QString &access_code);
    bool is_access_code_Set() const;
    bool is_access_code_Valid() const;

    QList<QString> getEntryPointFeatures() const;
    void setEntryPointFeatures(const QList<QString> &entry_point_features);
    bool is_entry_point_features_Set() const;
    bool is_entry_point_features_Valid() const;

    QString getEntryPointType() const;
    void setEntryPointType(const QString &entry_point_type);
    bool is_entry_point_type_Set() const;
    bool is_entry_point_type_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getMeetingCode() const;
    void setMeetingCode(const QString &meeting_code);
    bool is_meeting_code_Set() const;
    bool is_meeting_code_Valid() const;

    QString getPasscode() const;
    void setPasscode(const QString &passcode);
    bool is_passcode_Set() const;
    bool is_passcode_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPin() const;
    void setPin(const QString &pin);
    bool is_pin_Set() const;
    bool is_pin_Valid() const;

    QString getRegionCode() const;
    void setRegionCode(const QString &region_code);
    bool is_region_code_Set() const;
    bool is_region_code_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_code;
    bool m_access_code_isSet;
    bool m_access_code_isValid;

    QList<QString> m_entry_point_features;
    bool m_entry_point_features_isSet;
    bool m_entry_point_features_isValid;

    QString m_entry_point_type;
    bool m_entry_point_type_isSet;
    bool m_entry_point_type_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_meeting_code;
    bool m_meeting_code_isSet;
    bool m_meeting_code_isValid;

    QString m_passcode;
    bool m_passcode_isSet;
    bool m_passcode_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_pin;
    bool m_pin_isSet;
    bool m_pin_isValid;

    QString m_region_code;
    bool m_region_code_isSet;
    bool m_region_code_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntryPoint)

#endif // OAIEntryPoint_H
