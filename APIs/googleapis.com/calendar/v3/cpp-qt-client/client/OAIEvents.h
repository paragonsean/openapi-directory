/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvents.h
 *
 * 
 */

#ifndef OAIEvents_H
#define OAIEvents_H

#include <QJsonObject>

#include "OAIEvent.h"
#include "OAIEventReminder.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventReminder;
class OAIEvent;

class OAIEvents : public OAIObject {
public:
    OAIEvents();
    OAIEvents(QString json);
    ~OAIEvents() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessRole() const;
    void setAccessRole(const QString &access_role);
    bool is_access_role_Set() const;
    bool is_access_role_Valid() const;

    QList<OAIEventReminder> getDefaultReminders() const;
    void setDefaultReminders(const QList<OAIEventReminder> &default_reminders);
    bool is_default_reminders_Set() const;
    bool is_default_reminders_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<OAIEvent> getItems() const;
    void setItems(const QList<OAIEvent> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    QString getNextSyncToken() const;
    void setNextSyncToken(const QString &next_sync_token);
    bool is_next_sync_token_Set() const;
    bool is_next_sync_token_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_role;
    bool m_access_role_isSet;
    bool m_access_role_isValid;

    QList<OAIEventReminder> m_default_reminders;
    bool m_default_reminders_isSet;
    bool m_default_reminders_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<OAIEvent> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    QString m_next_sync_token;
    bool m_next_sync_token_isSet;
    bool m_next_sync_token_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvents)

#endif // OAIEvents_H
