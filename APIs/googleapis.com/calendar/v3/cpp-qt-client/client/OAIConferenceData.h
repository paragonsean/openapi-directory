/**
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConferenceData.h
 *
 * 
 */

#ifndef OAIConferenceData_H
#define OAIConferenceData_H

#include <QJsonObject>

#include "OAIConferenceParameters.h"
#include "OAIConferenceSolution.h"
#include "OAICreateConferenceRequest.h"
#include "OAIEntryPoint.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConferenceSolution;
class OAICreateConferenceRequest;
class OAIEntryPoint;
class OAIConferenceParameters;

class OAIConferenceData : public OAIObject {
public:
    OAIConferenceData();
    OAIConferenceData(QString json);
    ~OAIConferenceData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConferenceId() const;
    void setConferenceId(const QString &conference_id);
    bool is_conference_id_Set() const;
    bool is_conference_id_Valid() const;

    OAIConferenceSolution getConferenceSolution() const;
    void setConferenceSolution(const OAIConferenceSolution &conference_solution);
    bool is_conference_solution_Set() const;
    bool is_conference_solution_Valid() const;

    OAICreateConferenceRequest getCreateRequest() const;
    void setCreateRequest(const OAICreateConferenceRequest &create_request);
    bool is_create_request_Set() const;
    bool is_create_request_Valid() const;

    QList<OAIEntryPoint> getEntryPoints() const;
    void setEntryPoints(const QList<OAIEntryPoint> &entry_points);
    bool is_entry_points_Set() const;
    bool is_entry_points_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAIConferenceParameters getParameters() const;
    void setParameters(const OAIConferenceParameters &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getSignature() const;
    void setSignature(const QString &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_conference_id;
    bool m_conference_id_isSet;
    bool m_conference_id_isValid;

    OAIConferenceSolution m_conference_solution;
    bool m_conference_solution_isSet;
    bool m_conference_solution_isValid;

    OAICreateConferenceRequest m_create_request;
    bool m_create_request_isSet;
    bool m_create_request_isValid;

    QList<OAIEntryPoint> m_entry_points;
    bool m_entry_points_isSet;
    bool m_entry_points_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAIConferenceParameters m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConferenceData)

#endif // OAIConferenceData_H
