/*
 * Calendar API
 * Manipulates events and other calendar data.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Acl;
import org.openapitools.client.model.AclRule;
import org.openapitools.client.model.Channel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AclApi
 */
@Disabled
public class AclApiTest {

    private final AclApi api = new AclApi();

    /**
     * Deletes an access control rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calendarAclDeleteTest() throws ApiException {
        String calendarId = null;
        String ruleId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        api.calendarAclDelete(calendarId, ruleId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Returns an access control rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calendarAclGetTest() throws ApiException {
        String calendarId = null;
        String ruleId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        AclRule response = api.calendarAclGet(calendarId, ruleId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp);
        // TODO: test validations
    }

    /**
     * Creates an access control rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calendarAclInsertTest() throws ApiException {
        String calendarId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Boolean sendNotifications = null;
        AclRule aclRule = null;
        AclRule response = api.calendarAclInsert(calendarId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, sendNotifications, aclRule);
        // TODO: test validations
    }

    /**
     * Returns the rules in the access control list for the calendar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calendarAclListTest() throws ApiException {
        String calendarId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Integer maxResults = null;
        String pageToken = null;
        Boolean showDeleted = null;
        String syncToken = null;
        Acl response = api.calendarAclList(calendarId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, maxResults, pageToken, showDeleted, syncToken);
        // TODO: test validations
    }

    /**
     * Updates an access control rule. This method supports patch semantics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calendarAclPatchTest() throws ApiException {
        String calendarId = null;
        String ruleId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Boolean sendNotifications = null;
        AclRule aclRule = null;
        AclRule response = api.calendarAclPatch(calendarId, ruleId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, sendNotifications, aclRule);
        // TODO: test validations
    }

    /**
     * Updates an access control rule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calendarAclUpdateTest() throws ApiException {
        String calendarId = null;
        String ruleId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Boolean sendNotifications = null;
        AclRule aclRule = null;
        AclRule response = api.calendarAclUpdate(calendarId, ruleId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, sendNotifications, aclRule);
        // TODO: test validations
    }

    /**
     * Watch for changes to ACL resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calendarAclWatchTest() throws ApiException {
        String calendarId = null;
        String alt = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String userIp = null;
        Integer maxResults = null;
        String pageToken = null;
        Boolean showDeleted = null;
        String syncToken = null;
        Channel channel = null;
        Channel response = api.calendarAclWatch(calendarId, alt, fields, key, oauthToken, prettyPrint, quotaUser, userIp, maxResults, pageToken, showDeleted, syncToken, channel);
        // TODO: test validations
    }

}
