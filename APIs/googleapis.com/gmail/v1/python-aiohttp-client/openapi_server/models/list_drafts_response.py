# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.draft import Draft
from openapi_server import util


class ListDraftsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drafts: List[Draft]=None, next_page_token: str=None, result_size_estimate: int=None):
        """ListDraftsResponse - a model defined in OpenAPI

        :param drafts: The drafts of this ListDraftsResponse.
        :param next_page_token: The next_page_token of this ListDraftsResponse.
        :param result_size_estimate: The result_size_estimate of this ListDraftsResponse.
        """
        self.openapi_types = {
            'drafts': List[Draft],
            'next_page_token': str,
            'result_size_estimate': int
        }

        self.attribute_map = {
            'drafts': 'drafts',
            'next_page_token': 'nextPageToken',
            'result_size_estimate': 'resultSizeEstimate'
        }

        self._drafts = drafts
        self._next_page_token = next_page_token
        self._result_size_estimate = result_size_estimate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDraftsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDraftsResponse of this ListDraftsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drafts(self):
        """Gets the drafts of this ListDraftsResponse.

        List of drafts. Note that the `Message` property in each `Draft` resource only contains an `id` and a `threadId`. The messages.get method can fetch additional message details.

        :return: The drafts of this ListDraftsResponse.
        :rtype: List[Draft]
        """
        return self._drafts

    @drafts.setter
    def drafts(self, drafts):
        """Sets the drafts of this ListDraftsResponse.

        List of drafts. Note that the `Message` property in each `Draft` resource only contains an `id` and a `threadId`. The messages.get method can fetch additional message details.

        :param drafts: The drafts of this ListDraftsResponse.
        :type drafts: List[Draft]
        """

        self._drafts = drafts

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListDraftsResponse.

        Token to retrieve the next page of results in the list.

        :return: The next_page_token of this ListDraftsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListDraftsResponse.

        Token to retrieve the next page of results in the list.

        :param next_page_token: The next_page_token of this ListDraftsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def result_size_estimate(self):
        """Gets the result_size_estimate of this ListDraftsResponse.

        Estimated total number of results.

        :return: The result_size_estimate of this ListDraftsResponse.
        :rtype: int
        """
        return self._result_size_estimate

    @result_size_estimate.setter
    def result_size_estimate(self, result_size_estimate):
        """Sets the result_size_estimate of this ListDraftsResponse.

        Estimated total number of results.

        :param result_size_estimate: The result_size_estimate of this ListDraftsResponse.
        :type result_size_estimate: int
        """

        self._result_size_estimate = result_size_estimate
