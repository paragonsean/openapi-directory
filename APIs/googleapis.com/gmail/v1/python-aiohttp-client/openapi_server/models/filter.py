# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.filter_action import FilterAction
from openapi_server.models.filter_criteria import FilterCriteria
from openapi_server import util


class Filter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: FilterAction=None, criteria: FilterCriteria=None, id: str=None):
        """Filter - a model defined in OpenAPI

        :param action: The action of this Filter.
        :param criteria: The criteria of this Filter.
        :param id: The id of this Filter.
        """
        self.openapi_types = {
            'action': FilterAction,
            'criteria': FilterCriteria,
            'id': str
        }

        self.attribute_map = {
            'action': 'action',
            'criteria': 'criteria',
            'id': 'id'
        }

        self._action = action
        self._criteria = criteria
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Filter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Filter of this Filter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this Filter.


        :return: The action of this Filter.
        :rtype: FilterAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this Filter.


        :param action: The action of this Filter.
        :type action: FilterAction
        """

        self._action = action

    @property
    def criteria(self):
        """Gets the criteria of this Filter.


        :return: The criteria of this Filter.
        :rtype: FilterCriteria
        """
        return self._criteria

    @criteria.setter
    def criteria(self, criteria):
        """Sets the criteria of this Filter.


        :param criteria: The criteria of this Filter.
        :type criteria: FilterCriteria
        """

        self._criteria = criteria

    @property
    def id(self):
        """Gets the id of this Filter.

        The server assigned ID of the filter.

        :return: The id of this Filter.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Filter.

        The server assigned ID of the filter.

        :param id: The id of this Filter.
        :type id: str
        """

        self._id = id
