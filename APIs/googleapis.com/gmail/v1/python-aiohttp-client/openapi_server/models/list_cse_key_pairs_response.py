# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cse_key_pair import CseKeyPair
from openapi_server import util


class ListCseKeyPairsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cse_key_pairs: List[CseKeyPair]=None, next_page_token: str=None):
        """ListCseKeyPairsResponse - a model defined in OpenAPI

        :param cse_key_pairs: The cse_key_pairs of this ListCseKeyPairsResponse.
        :param next_page_token: The next_page_token of this ListCseKeyPairsResponse.
        """
        self.openapi_types = {
            'cse_key_pairs': List[CseKeyPair],
            'next_page_token': str
        }

        self.attribute_map = {
            'cse_key_pairs': 'cseKeyPairs',
            'next_page_token': 'nextPageToken'
        }

        self._cse_key_pairs = cse_key_pairs
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCseKeyPairsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCseKeyPairsResponse of this ListCseKeyPairsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cse_key_pairs(self):
        """Gets the cse_key_pairs of this ListCseKeyPairsResponse.

        One page of the list of CSE key pairs installed for the user.

        :return: The cse_key_pairs of this ListCseKeyPairsResponse.
        :rtype: List[CseKeyPair]
        """
        return self._cse_key_pairs

    @cse_key_pairs.setter
    def cse_key_pairs(self, cse_key_pairs):
        """Sets the cse_key_pairs of this ListCseKeyPairsResponse.

        One page of the list of CSE key pairs installed for the user.

        :param cse_key_pairs: The cse_key_pairs of this ListCseKeyPairsResponse.
        :type cse_key_pairs: List[CseKeyPair]
        """

        self._cse_key_pairs = cse_key_pairs

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListCseKeyPairsResponse.

        Pagination token to be passed to a subsequent ListCseKeyPairs call in order to retrieve the next page of key pairs. If this value is not returned, then no further pages remain.

        :return: The next_page_token of this ListCseKeyPairsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListCseKeyPairsResponse.

        Pagination token to be passed to a subsequent ListCseKeyPairs call in order to retrieve the next page of key pairs. If this value is not returned, then no further pages remain.

        :param next_page_token: The next_page_token of this ListCseKeyPairsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
