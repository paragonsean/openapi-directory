# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.thread import Thread
from openapi_server import util


class ListThreadsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, result_size_estimate: int=None, threads: List[Thread]=None):
        """ListThreadsResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListThreadsResponse.
        :param result_size_estimate: The result_size_estimate of this ListThreadsResponse.
        :param threads: The threads of this ListThreadsResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'result_size_estimate': int,
            'threads': List[Thread]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'result_size_estimate': 'resultSizeEstimate',
            'threads': 'threads'
        }

        self._next_page_token = next_page_token
        self._result_size_estimate = result_size_estimate
        self._threads = threads

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListThreadsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListThreadsResponse of this ListThreadsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListThreadsResponse.

        Page token to retrieve the next page of results in the list.

        :return: The next_page_token of this ListThreadsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListThreadsResponse.

        Page token to retrieve the next page of results in the list.

        :param next_page_token: The next_page_token of this ListThreadsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def result_size_estimate(self):
        """Gets the result_size_estimate of this ListThreadsResponse.

        Estimated total number of results.

        :return: The result_size_estimate of this ListThreadsResponse.
        :rtype: int
        """
        return self._result_size_estimate

    @result_size_estimate.setter
    def result_size_estimate(self, result_size_estimate):
        """Sets the result_size_estimate of this ListThreadsResponse.

        Estimated total number of results.

        :param result_size_estimate: The result_size_estimate of this ListThreadsResponse.
        :type result_size_estimate: int
        """

        self._result_size_estimate = result_size_estimate

    @property
    def threads(self):
        """Gets the threads of this ListThreadsResponse.

        List of threads. Note that each thread resource does not contain a list of `messages`. The list of `messages` for a given thread can be fetched using the threads.get method.

        :return: The threads of this ListThreadsResponse.
        :rtype: List[Thread]
        """
        return self._threads

    @threads.setter
    def threads(self, threads):
        """Sets the threads of this ListThreadsResponse.

        List of threads. Note that each thread resource does not contain a list of `messages`. The list of `messages` for a given thread can be fetched using the threads.get method.

        :param threads: The threads of this ListThreadsResponse.
        :type threads: List[Thread]
        """

        self._threads = threads
