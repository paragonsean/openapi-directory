# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WatchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration: str=None, history_id: str=None):
        """WatchResponse - a model defined in OpenAPI

        :param expiration: The expiration of this WatchResponse.
        :param history_id: The history_id of this WatchResponse.
        """
        self.openapi_types = {
            'expiration': str,
            'history_id': str
        }

        self.attribute_map = {
            'expiration': 'expiration',
            'history_id': 'historyId'
        }

        self._expiration = expiration
        self._history_id = history_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WatchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WatchResponse of this WatchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration(self):
        """Gets the expiration of this WatchResponse.

        When Gmail will stop sending notifications for mailbox updates (epoch millis). Call `watch` again before this time to renew the watch.

        :return: The expiration of this WatchResponse.
        :rtype: str
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this WatchResponse.

        When Gmail will stop sending notifications for mailbox updates (epoch millis). Call `watch` again before this time to renew the watch.

        :param expiration: The expiration of this WatchResponse.
        :type expiration: str
        """

        self._expiration = expiration

    @property
    def history_id(self):
        """Gets the history_id of this WatchResponse.

        The ID of the mailbox's current history record.

        :return: The history_id of this WatchResponse.
        :rtype: str
        """
        return self._history_id

    @history_id.setter
    def history_id(self, history_id):
        """Sets the history_id of this WatchResponse.

        The ID of the mailbox's current history record.

        :param history_id: The history_id of this WatchResponse.
        :type history_id: str
        """

        self._history_id = history_id
