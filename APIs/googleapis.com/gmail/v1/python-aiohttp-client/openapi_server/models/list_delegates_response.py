# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delegate import Delegate
from openapi_server import util


class ListDelegatesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delegates: List[Delegate]=None):
        """ListDelegatesResponse - a model defined in OpenAPI

        :param delegates: The delegates of this ListDelegatesResponse.
        """
        self.openapi_types = {
            'delegates': List[Delegate]
        }

        self.attribute_map = {
            'delegates': 'delegates'
        }

        self._delegates = delegates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDelegatesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDelegatesResponse of this ListDelegatesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delegates(self):
        """Gets the delegates of this ListDelegatesResponse.

        List of the user's delegates (with any verification status). If an account doesn't have delegates, this field doesn't appear.

        :return: The delegates of this ListDelegatesResponse.
        :rtype: List[Delegate]
        """
        return self._delegates

    @delegates.setter
    def delegates(self, delegates):
        """Sets the delegates of this ListDelegatesResponse.

        List of the user's delegates (with any verification status). If an account doesn't have delegates, this field doesn't appear.

        :param delegates: The delegates of this ListDelegatesResponse.
        :type delegates: List[Delegate]
        """

        self._delegates = delegates
