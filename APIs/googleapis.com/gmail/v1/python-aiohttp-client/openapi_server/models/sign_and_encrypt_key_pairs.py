# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SignAndEncryptKeyPairs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_key_pair_id: str=None, signing_key_pair_id: str=None):
        """SignAndEncryptKeyPairs - a model defined in OpenAPI

        :param encryption_key_pair_id: The encryption_key_pair_id of this SignAndEncryptKeyPairs.
        :param signing_key_pair_id: The signing_key_pair_id of this SignAndEncryptKeyPairs.
        """
        self.openapi_types = {
            'encryption_key_pair_id': str,
            'signing_key_pair_id': str
        }

        self.attribute_map = {
            'encryption_key_pair_id': 'encryptionKeyPairId',
            'signing_key_pair_id': 'signingKeyPairId'
        }

        self._encryption_key_pair_id = encryption_key_pair_id
        self._signing_key_pair_id = signing_key_pair_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SignAndEncryptKeyPairs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SignAndEncryptKeyPairs of this SignAndEncryptKeyPairs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_key_pair_id(self):
        """Gets the encryption_key_pair_id of this SignAndEncryptKeyPairs.

        The ID of the CseKeyPair that encrypts signed outgoing mail.

        :return: The encryption_key_pair_id of this SignAndEncryptKeyPairs.
        :rtype: str
        """
        return self._encryption_key_pair_id

    @encryption_key_pair_id.setter
    def encryption_key_pair_id(self, encryption_key_pair_id):
        """Sets the encryption_key_pair_id of this SignAndEncryptKeyPairs.

        The ID of the CseKeyPair that encrypts signed outgoing mail.

        :param encryption_key_pair_id: The encryption_key_pair_id of this SignAndEncryptKeyPairs.
        :type encryption_key_pair_id: str
        """

        self._encryption_key_pair_id = encryption_key_pair_id

    @property
    def signing_key_pair_id(self):
        """Gets the signing_key_pair_id of this SignAndEncryptKeyPairs.

        The ID of the CseKeyPair that signs outgoing mail.

        :return: The signing_key_pair_id of this SignAndEncryptKeyPairs.
        :rtype: str
        """
        return self._signing_key_pair_id

    @signing_key_pair_id.setter
    def signing_key_pair_id(self, signing_key_pair_id):
        """Sets the signing_key_pair_id of this SignAndEncryptKeyPairs.

        The ID of the CseKeyPair that signs outgoing mail.

        :param signing_key_pair_id: The signing_key_pair_id of this SignAndEncryptKeyPairs.
        :type signing_key_pair_id: str
        """

        self._signing_key_pair_id = signing_key_pair_id
