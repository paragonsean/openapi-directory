# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cse_identity import CseIdentity
from openapi_server import util


class ListCseIdentitiesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cse_identities: List[CseIdentity]=None, next_page_token: str=None):
        """ListCseIdentitiesResponse - a model defined in OpenAPI

        :param cse_identities: The cse_identities of this ListCseIdentitiesResponse.
        :param next_page_token: The next_page_token of this ListCseIdentitiesResponse.
        """
        self.openapi_types = {
            'cse_identities': List[CseIdentity],
            'next_page_token': str
        }

        self.attribute_map = {
            'cse_identities': 'cseIdentities',
            'next_page_token': 'nextPageToken'
        }

        self._cse_identities = cse_identities
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCseIdentitiesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCseIdentitiesResponse of this ListCseIdentitiesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cse_identities(self):
        """Gets the cse_identities of this ListCseIdentitiesResponse.

        One page of the list of CSE identities configured for the user.

        :return: The cse_identities of this ListCseIdentitiesResponse.
        :rtype: List[CseIdentity]
        """
        return self._cse_identities

    @cse_identities.setter
    def cse_identities(self, cse_identities):
        """Sets the cse_identities of this ListCseIdentitiesResponse.

        One page of the list of CSE identities configured for the user.

        :param cse_identities: The cse_identities of this ListCseIdentitiesResponse.
        :type cse_identities: List[CseIdentity]
        """

        self._cse_identities = cse_identities

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListCseIdentitiesResponse.

        Pagination token to be passed to a subsequent ListCseIdentities call in order to retrieve the next page of identities. If this value is not returned or is the empty string, then no further pages remain.

        :return: The next_page_token of this ListCseIdentitiesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListCseIdentitiesResponse.

        Pagination token to be passed to a subsequent ListCseIdentities call in order to retrieve the next page of identities. If this value is not returned or is the empty string, then no further pages remain.

        :param next_page_token: The next_page_token of this ListCseIdentitiesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
