/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutoForwarding model module.
 * @module model/AutoForwarding
 * @version v1
 */
class AutoForwarding {
    /**
     * Constructs a new <code>AutoForwarding</code>.
     * Auto-forwarding settings for an account.
     * @alias module:model/AutoForwarding
     */
    constructor() { 
        
        AutoForwarding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoForwarding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoForwarding} obj Optional instance to populate.
     * @return {module:model/AutoForwarding} The populated <code>AutoForwarding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoForwarding();

            if (data.hasOwnProperty('disposition')) {
                obj['disposition'] = ApiClient.convertToType(data['disposition'], 'String');
            }
            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoForwarding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoForwarding</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['disposition'] && !(typeof data['disposition'] === 'string' || data['disposition'] instanceof String)) {
            throw new Error("Expected the field `disposition` to be a primitive type in the JSON string but got " + data['disposition']);
        }
        // ensure the json data is a string
        if (data['emailAddress'] && !(typeof data['emailAddress'] === 'string' || data['emailAddress'] instanceof String)) {
            throw new Error("Expected the field `emailAddress` to be a primitive type in the JSON string but got " + data['emailAddress']);
        }

        return true;
    }


}



/**
 * The state that a message should be left in after it has been forwarded.
 * @member {module:model/AutoForwarding.DispositionEnum} disposition
 */
AutoForwarding.prototype['disposition'] = undefined;

/**
 * Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.
 * @member {String} emailAddress
 */
AutoForwarding.prototype['emailAddress'] = undefined;

/**
 * Whether all incoming mail is automatically forwarded to another address.
 * @member {Boolean} enabled
 */
AutoForwarding.prototype['enabled'] = undefined;





/**
 * Allowed values for the <code>disposition</code> property.
 * @enum {String}
 * @readonly
 */
AutoForwarding['DispositionEnum'] = {

    /**
     * value: "dispositionUnspecified"
     * @const
     */
    "dispositionUnspecified": "dispositionUnspecified",

    /**
     * value: "leaveInInbox"
     * @const
     */
    "leaveInInbox": "leaveInInbox",

    /**
     * value: "archive"
     * @const
     */
    "archive": "archive",

    /**
     * value: "trash"
     * @const
     */
    "trash": "trash",

    /**
     * value: "markRead"
     * @const
     */
    "markRead": "markRead"
};



export default AutoForwarding;

