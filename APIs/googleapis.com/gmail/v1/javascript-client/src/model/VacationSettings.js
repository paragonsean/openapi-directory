/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VacationSettings model module.
 * @module model/VacationSettings
 * @version v1
 */
class VacationSettings {
    /**
     * Constructs a new <code>VacationSettings</code>.
     * Vacation auto-reply settings for an account. These settings correspond to the \&quot;Vacation responder\&quot; feature in the web interface.
     * @alias module:model/VacationSettings
     */
    constructor() { 
        
        VacationSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VacationSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VacationSettings} obj Optional instance to populate.
     * @return {module:model/VacationSettings} The populated <code>VacationSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VacationSettings();

            if (data.hasOwnProperty('enableAutoReply')) {
                obj['enableAutoReply'] = ApiClient.convertToType(data['enableAutoReply'], 'Boolean');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('responseBodyHtml')) {
                obj['responseBodyHtml'] = ApiClient.convertToType(data['responseBodyHtml'], 'String');
            }
            if (data.hasOwnProperty('responseBodyPlainText')) {
                obj['responseBodyPlainText'] = ApiClient.convertToType(data['responseBodyPlainText'], 'String');
            }
            if (data.hasOwnProperty('responseSubject')) {
                obj['responseSubject'] = ApiClient.convertToType(data['responseSubject'], 'String');
            }
            if (data.hasOwnProperty('restrictToContacts')) {
                obj['restrictToContacts'] = ApiClient.convertToType(data['restrictToContacts'], 'Boolean');
            }
            if (data.hasOwnProperty('restrictToDomain')) {
                obj['restrictToDomain'] = ApiClient.convertToType(data['restrictToDomain'], 'Boolean');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VacationSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VacationSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['responseBodyHtml'] && !(typeof data['responseBodyHtml'] === 'string' || data['responseBodyHtml'] instanceof String)) {
            throw new Error("Expected the field `responseBodyHtml` to be a primitive type in the JSON string but got " + data['responseBodyHtml']);
        }
        // ensure the json data is a string
        if (data['responseBodyPlainText'] && !(typeof data['responseBodyPlainText'] === 'string' || data['responseBodyPlainText'] instanceof String)) {
            throw new Error("Expected the field `responseBodyPlainText` to be a primitive type in the JSON string but got " + data['responseBodyPlainText']);
        }
        // ensure the json data is a string
        if (data['responseSubject'] && !(typeof data['responseSubject'] === 'string' || data['responseSubject'] instanceof String)) {
            throw new Error("Expected the field `responseSubject` to be a primitive type in the JSON string but got " + data['responseSubject']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * Flag that controls whether Gmail automatically replies to messages.
 * @member {Boolean} enableAutoReply
 */
VacationSettings.prototype['enableAutoReply'] = undefined;

/**
 * An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both `startTime` and `endTime` are specified, `startTime` must precede `endTime`.
 * @member {String} endTime
 */
VacationSettings.prototype['endTime'] = undefined;

/**
 * Response body in HTML format. Gmail will sanitize the HTML before storing it. If both `response_body_plain_text` and `response_body_html` are specified, `response_body_html` will be used.
 * @member {String} responseBodyHtml
 */
VacationSettings.prototype['responseBodyHtml'] = undefined;

/**
 * Response body in plain text format. If both `response_body_plain_text` and `response_body_html` are specified, `response_body_html` will be used.
 * @member {String} responseBodyPlainText
 */
VacationSettings.prototype['responseBodyPlainText'] = undefined;

/**
 * Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.
 * @member {String} responseSubject
 */
VacationSettings.prototype['responseSubject'] = undefined;

/**
 * Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.
 * @member {Boolean} restrictToContacts
 */
VacationSettings.prototype['restrictToContacts'] = undefined;

/**
 * Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for Google Workspace users.
 * @member {Boolean} restrictToDomain
 */
VacationSettings.prototype['restrictToDomain'] = undefined;

/**
 * An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both `startTime` and `endTime` are specified, `startTime` must precede `endTime`.
 * @member {String} startTime
 */
VacationSettings.prototype['startTime'] = undefined;






export default VacationSettings;

