/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImapSettings model module.
 * @module model/ImapSettings
 * @version v1
 */
class ImapSettings {
    /**
     * Constructs a new <code>ImapSettings</code>.
     * IMAP settings for an account.
     * @alias module:model/ImapSettings
     */
    constructor() { 
        
        ImapSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImapSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImapSettings} obj Optional instance to populate.
     * @return {module:model/ImapSettings} The populated <code>ImapSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImapSettings();

            if (data.hasOwnProperty('autoExpunge')) {
                obj['autoExpunge'] = ApiClient.convertToType(data['autoExpunge'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('expungeBehavior')) {
                obj['expungeBehavior'] = ApiClient.convertToType(data['expungeBehavior'], 'String');
            }
            if (data.hasOwnProperty('maxFolderSize')) {
                obj['maxFolderSize'] = ApiClient.convertToType(data['maxFolderSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImapSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImapSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expungeBehavior'] && !(typeof data['expungeBehavior'] === 'string' || data['expungeBehavior'] instanceof String)) {
            throw new Error("Expected the field `expungeBehavior` to be a primitive type in the JSON string but got " + data['expungeBehavior']);
        }

        return true;
    }


}



/**
 * If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.
 * @member {Boolean} autoExpunge
 */
ImapSettings.prototype['autoExpunge'] = undefined;

/**
 * Whether IMAP is enabled for the account.
 * @member {Boolean} enabled
 */
ImapSettings.prototype['enabled'] = undefined;

/**
 * The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.
 * @member {module:model/ImapSettings.ExpungeBehaviorEnum} expungeBehavior
 */
ImapSettings.prototype['expungeBehavior'] = undefined;

/**
 * An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.
 * @member {Number} maxFolderSize
 */
ImapSettings.prototype['maxFolderSize'] = undefined;





/**
 * Allowed values for the <code>expungeBehavior</code> property.
 * @enum {String}
 * @readonly
 */
ImapSettings['ExpungeBehaviorEnum'] = {

    /**
     * value: "expungeBehaviorUnspecified"
     * @const
     */
    "expungeBehaviorUnspecified": "expungeBehaviorUnspecified",

    /**
     * value: "archive"
     * @const
     */
    "archive": "archive",

    /**
     * value: "trash"
     * @const
     */
    "trash": "trash",

    /**
     * value: "deleteForever"
     * @const
     */
    "deleteForever": "deleteForever"
};



export default ImapSettings;

