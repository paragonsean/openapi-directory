/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LanguageSettings model module.
 * @module model/LanguageSettings
 * @version v1
 */
class LanguageSettings {
    /**
     * Constructs a new <code>LanguageSettings</code>.
     * Language settings for an account. These settings correspond to the \&quot;Language settings\&quot; feature in the web interface.
     * @alias module:model/LanguageSettings
     */
    constructor() { 
        
        LanguageSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LanguageSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LanguageSettings} obj Optional instance to populate.
     * @return {module:model/LanguageSettings} The populated <code>LanguageSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LanguageSettings();

            if (data.hasOwnProperty('displayLanguage')) {
                obj['displayLanguage'] = ApiClient.convertToType(data['displayLanguage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LanguageSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LanguageSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayLanguage'] && !(typeof data['displayLanguage'] === 'string' || data['displayLanguage'] instanceof String)) {
            throw new Error("Expected the field `displayLanguage` to be a primitive type in the JSON string but got " + data['displayLanguage']);
        }

        return true;
    }


}



/**
 * The language to display Gmail in, formatted as an RFC 3066 Language Tag (for example `en-GB`, `fr` or `ja` for British English, French, or Japanese respectively). The set of languages supported by Gmail evolves over time, so please refer to the \"Language\" dropdown in the Gmail settings for all available options, as described in the language settings help article. A table of sample values is also provided in the Managing Language Settings guide Not all Gmail clients can display the same set of languages. In the case that a user's display language is not available for use on a particular client, said client automatically chooses to display in the closest supported variant (or a reasonable default).
 * @member {String} displayLanguage
 */
LanguageSettings.prototype['displayLanguage'] = undefined;






export default LanguageSettings;

