/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WatchRequest model module.
 * @module model/WatchRequest
 * @version v1
 */
class WatchRequest {
    /**
     * Constructs a new <code>WatchRequest</code>.
     * Set up or update a new push notification watch on this user&#39;s mailbox.
     * @alias module:model/WatchRequest
     */
    constructor() { 
        
        WatchRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WatchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WatchRequest} obj Optional instance to populate.
     * @return {module:model/WatchRequest} The populated <code>WatchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WatchRequest();

            if (data.hasOwnProperty('labelFilterAction')) {
                obj['labelFilterAction'] = ApiClient.convertToType(data['labelFilterAction'], 'String');
            }
            if (data.hasOwnProperty('labelFilterBehavior')) {
                obj['labelFilterBehavior'] = ApiClient.convertToType(data['labelFilterBehavior'], 'String');
            }
            if (data.hasOwnProperty('labelIds')) {
                obj['labelIds'] = ApiClient.convertToType(data['labelIds'], ['String']);
            }
            if (data.hasOwnProperty('topicName')) {
                obj['topicName'] = ApiClient.convertToType(data['topicName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WatchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WatchRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['labelFilterAction'] && !(typeof data['labelFilterAction'] === 'string' || data['labelFilterAction'] instanceof String)) {
            throw new Error("Expected the field `labelFilterAction` to be a primitive type in the JSON string but got " + data['labelFilterAction']);
        }
        // ensure the json data is a string
        if (data['labelFilterBehavior'] && !(typeof data['labelFilterBehavior'] === 'string' || data['labelFilterBehavior'] instanceof String)) {
            throw new Error("Expected the field `labelFilterBehavior` to be a primitive type in the JSON string but got " + data['labelFilterBehavior']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['labelIds'])) {
            throw new Error("Expected the field `labelIds` to be an array in the JSON data but got " + data['labelIds']);
        }
        // ensure the json data is a string
        if (data['topicName'] && !(typeof data['topicName'] === 'string' || data['topicName'] instanceof String)) {
            throw new Error("Expected the field `topicName` to be a primitive type in the JSON string but got " + data['topicName']);
        }

        return true;
    }


}



/**
 * Filtering behavior of `labelIds list` specified. This field is deprecated because it caused incorrect behavior in some cases; use `label_filter_behavior` instead.
 * @member {module:model/WatchRequest.LabelFilterActionEnum} labelFilterAction
 */
WatchRequest.prototype['labelFilterAction'] = undefined;

/**
 * Filtering behavior of `labelIds list` specified. This field replaces `label_filter_action`; if set, `label_filter_action` is ignored.
 * @member {module:model/WatchRequest.LabelFilterBehaviorEnum} labelFilterBehavior
 */
WatchRequest.prototype['labelFilterBehavior'] = undefined;

/**
 * List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.
 * @member {Array.<String>} labelIds
 */
WatchRequest.prototype['labelIds'] = undefined;

/**
 * A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail \"publish\" permission on it. For example, \"projects/my-project-identifier/topics/my-topic-name\" (using the Cloud Pub/Sub \"v1\" topic naming format). Note that the \"my-project-identifier\" portion must exactly match your Google developer project id (the one executing this watch request).
 * @member {String} topicName
 */
WatchRequest.prototype['topicName'] = undefined;





/**
 * Allowed values for the <code>labelFilterAction</code> property.
 * @enum {String}
 * @readonly
 */
WatchRequest['LabelFilterActionEnum'] = {

    /**
     * value: "include"
     * @const
     */
    "include": "include",

    /**
     * value: "exclude"
     * @const
     */
    "exclude": "exclude"
};


/**
 * Allowed values for the <code>labelFilterBehavior</code> property.
 * @enum {String}
 * @readonly
 */
WatchRequest['LabelFilterBehaviorEnum'] = {

    /**
     * value: "include"
     * @const
     */
    "include": "include",

    /**
     * value: "exclude"
     * @const
     */
    "exclude": "exclude"
};



export default WatchRequest;

