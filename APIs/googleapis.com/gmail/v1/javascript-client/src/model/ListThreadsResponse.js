/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Thread from './Thread';

/**
 * The ListThreadsResponse model module.
 * @module model/ListThreadsResponse
 * @version v1
 */
class ListThreadsResponse {
    /**
     * Constructs a new <code>ListThreadsResponse</code>.
     * @alias module:model/ListThreadsResponse
     */
    constructor() { 
        
        ListThreadsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListThreadsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListThreadsResponse} obj Optional instance to populate.
     * @return {module:model/ListThreadsResponse} The populated <code>ListThreadsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListThreadsResponse();

            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('resultSizeEstimate')) {
                obj['resultSizeEstimate'] = ApiClient.convertToType(data['resultSizeEstimate'], 'Number');
            }
            if (data.hasOwnProperty('threads')) {
                obj['threads'] = ApiClient.convertToType(data['threads'], [Thread]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListThreadsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListThreadsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['threads']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['threads'])) {
                throw new Error("Expected the field `threads` to be an array in the JSON data but got " + data['threads']);
            }
            // validate the optional field `threads` (array)
            for (const item of data['threads']) {
                Thread.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Page token to retrieve the next page of results in the list.
 * @member {String} nextPageToken
 */
ListThreadsResponse.prototype['nextPageToken'] = undefined;

/**
 * Estimated total number of results.
 * @member {Number} resultSizeEstimate
 */
ListThreadsResponse.prototype['resultSizeEstimate'] = undefined;

/**
 * List of threads. Note that each thread resource does not contain a list of `messages`. The list of `messages` for a given thread can be fetched using the threads.get method.
 * @member {Array.<module:model/Thread>} threads
 */
ListThreadsResponse.prototype['threads'] = undefined;






export default ListThreadsResponse;

