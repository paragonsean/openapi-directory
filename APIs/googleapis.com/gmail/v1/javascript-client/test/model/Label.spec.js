/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GmailApi);
  }
}(this, function(expect, GmailApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GmailApi.Label();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Label', function() {
    it('should create an instance of Label', function() {
      // uncomment below and update the code to test Label
      //var instance = new GmailApi.Label();
      //expect(instance).to.be.a(GmailApi.Label);
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property labelListVisibility (base name: "labelListVisibility")', function() {
      // uncomment below and update the code to test the property labelListVisibility
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property messageListVisibility (base name: "messageListVisibility")', function() {
      // uncomment below and update the code to test the property messageListVisibility
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property messagesTotal (base name: "messagesTotal")', function() {
      // uncomment below and update the code to test the property messagesTotal
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property messagesUnread (base name: "messagesUnread")', function() {
      // uncomment below and update the code to test the property messagesUnread
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property threadsTotal (base name: "threadsTotal")', function() {
      // uncomment below and update the code to test the property threadsTotal
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property threadsUnread (base name: "threadsUnread")', function() {
      // uncomment below and update the code to test the property threadsUnread
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new GmailApi.Label();
      //expect(instance).to.be();
    });

  });

}));
