/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessagePart.h
 *
 * A single MIME message part.
 */

#ifndef OAIMessagePart_H
#define OAIMessagePart_H

#include <QJsonObject>

#include "OAIMessagePartBody.h"
#include "OAIMessagePartHeader.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMessagePartBody;
class OAIMessagePartHeader;

class OAIMessagePart : public OAIObject {
public:
    OAIMessagePart();
    OAIMessagePart(QString json);
    ~OAIMessagePart() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMessagePartBody getBody() const;
    void setBody(const OAIMessagePartBody &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    QList<OAIMessagePartHeader> getHeaders() const;
    void setHeaders(const QList<OAIMessagePartHeader> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    QString getPartId() const;
    void setPartId(const QString &part_id);
    bool is_part_id_Set() const;
    bool is_part_id_Valid() const;

    QList<OAIMessagePart> getParts() const;
    void setParts(const QList<OAIMessagePart> &parts);
    bool is_parts_Set() const;
    bool is_parts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMessagePartBody m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    QList<OAIMessagePartHeader> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    QString m_part_id;
    bool m_part_id_isSet;
    bool m_part_id_isValid;

    QList<OAIMessagePart> m_parts;
    bool m_parts_isSet;
    bool m_parts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessagePart)

#endif // OAIMessagePart_H
