/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICseKeyPair.h
 *
 * A client-side encryption S/MIME key pair, which is comprised of a public key, its certificate chain, and metadata for its paired private key. Gmail uses the key pair to complete the following tasks: - Sign outgoing client-side encrypted messages. - Save and reopen drafts of client-side encrypted messages. - Save and reopen sent messages. - Decrypt incoming or archived S/MIME messages.
 */

#ifndef OAICseKeyPair_H
#define OAICseKeyPair_H

#include <QJsonObject>

#include "OAICsePrivateKeyMetadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICsePrivateKeyMetadata;

class OAICseKeyPair : public OAIObject {
public:
    OAICseKeyPair();
    OAICseKeyPair(QString json);
    ~OAICseKeyPair() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisableTime() const;
    void setDisableTime(const QString &disable_time);
    bool is_disable_time_Set() const;
    bool is_disable_time_Valid() const;

    QString getEnablementState() const;
    void setEnablementState(const QString &enablement_state);
    bool is_enablement_state_Set() const;
    bool is_enablement_state_Valid() const;

    QString getKeyPairId() const;
    void setKeyPairId(const QString &key_pair_id);
    bool is_key_pair_id_Set() const;
    bool is_key_pair_id_Valid() const;

    QString getPem() const;
    void setPem(const QString &pem);
    bool is_pem_Set() const;
    bool is_pem_Valid() const;

    QString getPkcs7() const;
    void setPkcs7(const QString &pkcs7);
    bool is_pkcs7_Set() const;
    bool is_pkcs7_Valid() const;

    QList<OAICsePrivateKeyMetadata> getPrivateKeyMetadata() const;
    void setPrivateKeyMetadata(const QList<OAICsePrivateKeyMetadata> &private_key_metadata);
    bool is_private_key_metadata_Set() const;
    bool is_private_key_metadata_Valid() const;

    QList<QString> getSubjectEmailAddresses() const;
    void setSubjectEmailAddresses(const QList<QString> &subject_email_addresses);
    bool is_subject_email_addresses_Set() const;
    bool is_subject_email_addresses_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_disable_time;
    bool m_disable_time_isSet;
    bool m_disable_time_isValid;

    QString m_enablement_state;
    bool m_enablement_state_isSet;
    bool m_enablement_state_isValid;

    QString m_key_pair_id;
    bool m_key_pair_id_isSet;
    bool m_key_pair_id_isValid;

    QString m_pem;
    bool m_pem_isSet;
    bool m_pem_isValid;

    QString m_pkcs7;
    bool m_pkcs7_isSet;
    bool m_pkcs7_isValid;

    QList<OAICsePrivateKeyMetadata> m_private_key_metadata;
    bool m_private_key_metadata_isSet;
    bool m_private_key_metadata_isValid;

    QList<QString> m_subject_email_addresses;
    bool m_subject_email_addresses_isSet;
    bool m_subject_email_addresses_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICseKeyPair)

#endif // OAICseKeyPair_H
