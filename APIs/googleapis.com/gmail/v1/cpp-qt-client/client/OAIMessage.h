/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessage.h
 *
 * An email message.
 */

#ifndef OAIMessage_H
#define OAIMessage_H

#include <QJsonObject>

#include "OAIMessagePart.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMessagePart;

class OAIMessage : public OAIObject {
public:
    OAIMessage();
    OAIMessage(QString json);
    ~OAIMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHistoryId() const;
    void setHistoryId(const QString &history_id);
    bool is_history_id_Set() const;
    bool is_history_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInternalDate() const;
    void setInternalDate(const QString &internal_date);
    bool is_internal_date_Set() const;
    bool is_internal_date_Valid() const;

    QList<QString> getLabelIds() const;
    void setLabelIds(const QList<QString> &label_ids);
    bool is_label_ids_Set() const;
    bool is_label_ids_Valid() const;

    OAIMessagePart getPayload() const;
    void setPayload(const OAIMessagePart &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    QByteArray getRaw() const;
    void setRaw(const QByteArray &raw);
    bool is_raw_Set() const;
    bool is_raw_Valid() const;

    qint32 getSizeEstimate() const;
    void setSizeEstimate(const qint32 &size_estimate);
    bool is_size_estimate_Set() const;
    bool is_size_estimate_Valid() const;

    QString getSnippet() const;
    void setSnippet(const QString &snippet);
    bool is_snippet_Set() const;
    bool is_snippet_Valid() const;

    QString getThreadId() const;
    void setThreadId(const QString &thread_id);
    bool is_thread_id_Set() const;
    bool is_thread_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_history_id;
    bool m_history_id_isSet;
    bool m_history_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_internal_date;
    bool m_internal_date_isSet;
    bool m_internal_date_isValid;

    QList<QString> m_label_ids;
    bool m_label_ids_isSet;
    bool m_label_ids_isValid;

    OAIMessagePart m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    QByteArray m_raw;
    bool m_raw_isSet;
    bool m_raw_isValid;

    qint32 m_size_estimate;
    bool m_size_estimate_isSet;
    bool m_size_estimate_isValid;

    QString m_snippet;
    bool m_snippet_isSet;
    bool m_snippet_isValid;

    QString m_thread_id;
    bool m_thread_id_isSet;
    bool m_thread_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessage)

#endif // OAIMessage_H
