/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKaclsKeyMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKaclsKeyMetadata::OAIKaclsKeyMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKaclsKeyMetadata::OAIKaclsKeyMetadata() {
    this->initializeModel();
}

OAIKaclsKeyMetadata::~OAIKaclsKeyMetadata() {}

void OAIKaclsKeyMetadata::initializeModel() {

    m_kacls_data_isSet = false;
    m_kacls_data_isValid = false;

    m_kacls_uri_isSet = false;
    m_kacls_uri_isValid = false;
}

void OAIKaclsKeyMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKaclsKeyMetadata::fromJsonObject(QJsonObject json) {

    m_kacls_data_isValid = ::OpenAPI::fromJsonValue(m_kacls_data, json[QString("kaclsData")]);
    m_kacls_data_isSet = !json[QString("kaclsData")].isNull() && m_kacls_data_isValid;

    m_kacls_uri_isValid = ::OpenAPI::fromJsonValue(m_kacls_uri, json[QString("kaclsUri")]);
    m_kacls_uri_isSet = !json[QString("kaclsUri")].isNull() && m_kacls_uri_isValid;
}

QString OAIKaclsKeyMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKaclsKeyMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_kacls_data_isSet) {
        obj.insert(QString("kaclsData"), ::OpenAPI::toJsonValue(m_kacls_data));
    }
    if (m_kacls_uri_isSet) {
        obj.insert(QString("kaclsUri"), ::OpenAPI::toJsonValue(m_kacls_uri));
    }
    return obj;
}

QString OAIKaclsKeyMetadata::getKaclsData() const {
    return m_kacls_data;
}
void OAIKaclsKeyMetadata::setKaclsData(const QString &kacls_data) {
    m_kacls_data = kacls_data;
    m_kacls_data_isSet = true;
}

bool OAIKaclsKeyMetadata::is_kacls_data_Set() const{
    return m_kacls_data_isSet;
}

bool OAIKaclsKeyMetadata::is_kacls_data_Valid() const{
    return m_kacls_data_isValid;
}

QString OAIKaclsKeyMetadata::getKaclsUri() const {
    return m_kacls_uri;
}
void OAIKaclsKeyMetadata::setKaclsUri(const QString &kacls_uri) {
    m_kacls_uri = kacls_uri;
    m_kacls_uri_isSet = true;
}

bool OAIKaclsKeyMetadata::is_kacls_uri_Set() const{
    return m_kacls_uri_isSet;
}

bool OAIKaclsKeyMetadata::is_kacls_uri_Valid() const{
    return m_kacls_uri_isValid;
}

bool OAIKaclsKeyMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kacls_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kacls_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKaclsKeyMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
