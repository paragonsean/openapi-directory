/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDelegatesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDelegatesResponse::OAIListDelegatesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDelegatesResponse::OAIListDelegatesResponse() {
    this->initializeModel();
}

OAIListDelegatesResponse::~OAIListDelegatesResponse() {}

void OAIListDelegatesResponse::initializeModel() {

    m_delegates_isSet = false;
    m_delegates_isValid = false;
}

void OAIListDelegatesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDelegatesResponse::fromJsonObject(QJsonObject json) {

    m_delegates_isValid = ::OpenAPI::fromJsonValue(m_delegates, json[QString("delegates")]);
    m_delegates_isSet = !json[QString("delegates")].isNull() && m_delegates_isValid;
}

QString OAIListDelegatesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDelegatesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_delegates.size() > 0) {
        obj.insert(QString("delegates"), ::OpenAPI::toJsonValue(m_delegates));
    }
    return obj;
}

QList<OAIDelegate> OAIListDelegatesResponse::getDelegates() const {
    return m_delegates;
}
void OAIListDelegatesResponse::setDelegates(const QList<OAIDelegate> &delegates) {
    m_delegates = delegates;
    m_delegates_isSet = true;
}

bool OAIListDelegatesResponse::is_delegates_Set() const{
    return m_delegates_isSet;
}

bool OAIListDelegatesResponse::is_delegates_Valid() const{
    return m_delegates_isValid;
}

bool OAIListDelegatesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delegates.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDelegatesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
