/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilterCriteria.h
 *
 * Message matching criteria.
 */

#ifndef OAIFilterCriteria_H
#define OAIFilterCriteria_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFilterCriteria : public OAIObject {
public:
    OAIFilterCriteria();
    OAIFilterCriteria(QString json);
    ~OAIFilterCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isExcludeChats() const;
    void setExcludeChats(const bool &exclude_chats);
    bool is_exclude_chats_Set() const;
    bool is_exclude_chats_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    bool isHasAttachment() const;
    void setHasAttachment(const bool &has_attachment);
    bool is_has_attachment_Set() const;
    bool is_has_attachment_Valid() const;

    QString getNegatedQuery() const;
    void setNegatedQuery(const QString &negated_query);
    bool is_negated_query_Set() const;
    bool is_negated_query_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSizeComparison() const;
    void setSizeComparison(const QString &size_comparison);
    bool is_size_comparison_Set() const;
    bool is_size_comparison_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_exclude_chats;
    bool m_exclude_chats_isSet;
    bool m_exclude_chats_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    bool m_has_attachment;
    bool m_has_attachment_isSet;
    bool m_has_attachment_isValid;

    QString m_negated_query;
    bool m_negated_query_isSet;
    bool m_negated_query_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_size_comparison;
    bool m_size_comparison_isSet;
    bool m_size_comparison_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilterCriteria)

#endif // OAIFilterCriteria_H
