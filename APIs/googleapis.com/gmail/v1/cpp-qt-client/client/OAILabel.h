/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabel.h
 *
 * Labels are used to categorize messages and threads within the user&#39;s mailbox. The maximum number of labels supported for a user&#39;s mailbox is 10,000.
 */

#ifndef OAILabel_H
#define OAILabel_H

#include <QJsonObject>

#include "OAILabelColor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabelColor;

class OAILabel : public OAIObject {
public:
    OAILabel();
    OAILabel(QString json);
    ~OAILabel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILabelColor getColor() const;
    void setColor(const OAILabelColor &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLabelListVisibility() const;
    void setLabelListVisibility(const QString &label_list_visibility);
    bool is_label_list_visibility_Set() const;
    bool is_label_list_visibility_Valid() const;

    QString getMessageListVisibility() const;
    void setMessageListVisibility(const QString &message_list_visibility);
    bool is_message_list_visibility_Set() const;
    bool is_message_list_visibility_Valid() const;

    qint32 getMessagesTotal() const;
    void setMessagesTotal(const qint32 &messages_total);
    bool is_messages_total_Set() const;
    bool is_messages_total_Valid() const;

    qint32 getMessagesUnread() const;
    void setMessagesUnread(const qint32 &messages_unread);
    bool is_messages_unread_Set() const;
    bool is_messages_unread_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getThreadsTotal() const;
    void setThreadsTotal(const qint32 &threads_total);
    bool is_threads_total_Set() const;
    bool is_threads_total_Valid() const;

    qint32 getThreadsUnread() const;
    void setThreadsUnread(const qint32 &threads_unread);
    bool is_threads_unread_Set() const;
    bool is_threads_unread_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILabelColor m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_label_list_visibility;
    bool m_label_list_visibility_isSet;
    bool m_label_list_visibility_isValid;

    QString m_message_list_visibility;
    bool m_message_list_visibility_isSet;
    bool m_message_list_visibility_isValid;

    qint32 m_messages_total;
    bool m_messages_total_isSet;
    bool m_messages_total_isValid;

    qint32 m_messages_unread;
    bool m_messages_unread_isSet;
    bool m_messages_unread_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_threads_total;
    bool m_threads_total_isSet;
    bool m_threads_total_isValid;

    qint32 m_threads_unread;
    bool m_threads_unread_isSet;
    bool m_threads_unread_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabel)

#endif // OAILabel_H
