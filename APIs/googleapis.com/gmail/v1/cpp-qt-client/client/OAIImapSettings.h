/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImapSettings.h
 *
 * IMAP settings for an account.
 */

#ifndef OAIImapSettings_H
#define OAIImapSettings_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImapSettings : public OAIObject {
public:
    OAIImapSettings();
    OAIImapSettings(QString json);
    ~OAIImapSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoExpunge() const;
    void setAutoExpunge(const bool &auto_expunge);
    bool is_auto_expunge_Set() const;
    bool is_auto_expunge_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getExpungeBehavior() const;
    void setExpungeBehavior(const QString &expunge_behavior);
    bool is_expunge_behavior_Set() const;
    bool is_expunge_behavior_Valid() const;

    qint32 getMaxFolderSize() const;
    void setMaxFolderSize(const qint32 &max_folder_size);
    bool is_max_folder_size_Set() const;
    bool is_max_folder_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_expunge;
    bool m_auto_expunge_isSet;
    bool m_auto_expunge_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_expunge_behavior;
    bool m_expunge_behavior_isSet;
    bool m_expunge_behavior_isValid;

    qint32 m_max_folder_size;
    bool m_max_folder_size_isSet;
    bool m_max_folder_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImapSettings)

#endif // OAIImapSettings_H
