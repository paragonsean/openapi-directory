/**
 * Gmail API
 * The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDelegate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDelegate::OAIDelegate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDelegate::OAIDelegate() {
    this->initializeModel();
}

OAIDelegate::~OAIDelegate() {}

void OAIDelegate::initializeModel() {

    m_delegate_email_isSet = false;
    m_delegate_email_isValid = false;

    m_verification_status_isSet = false;
    m_verification_status_isValid = false;
}

void OAIDelegate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDelegate::fromJsonObject(QJsonObject json) {

    m_delegate_email_isValid = ::OpenAPI::fromJsonValue(m_delegate_email, json[QString("delegateEmail")]);
    m_delegate_email_isSet = !json[QString("delegateEmail")].isNull() && m_delegate_email_isValid;

    m_verification_status_isValid = ::OpenAPI::fromJsonValue(m_verification_status, json[QString("verificationStatus")]);
    m_verification_status_isSet = !json[QString("verificationStatus")].isNull() && m_verification_status_isValid;
}

QString OAIDelegate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDelegate::asJsonObject() const {
    QJsonObject obj;
    if (m_delegate_email_isSet) {
        obj.insert(QString("delegateEmail"), ::OpenAPI::toJsonValue(m_delegate_email));
    }
    if (m_verification_status_isSet) {
        obj.insert(QString("verificationStatus"), ::OpenAPI::toJsonValue(m_verification_status));
    }
    return obj;
}

QString OAIDelegate::getDelegateEmail() const {
    return m_delegate_email;
}
void OAIDelegate::setDelegateEmail(const QString &delegate_email) {
    m_delegate_email = delegate_email;
    m_delegate_email_isSet = true;
}

bool OAIDelegate::is_delegate_email_Set() const{
    return m_delegate_email_isSet;
}

bool OAIDelegate::is_delegate_email_Valid() const{
    return m_delegate_email_isValid;
}

QString OAIDelegate::getVerificationStatus() const {
    return m_verification_status;
}
void OAIDelegate::setVerificationStatus(const QString &verification_status) {
    m_verification_status = verification_status;
    m_verification_status_isSet = true;
}

bool OAIDelegate::is_verification_status_Set() const{
    return m_verification_status_isSet;
}

bool OAIDelegate::is_verification_status_Valid() const{
    return m_verification_status_isValid;
}

bool OAIDelegate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delegate_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDelegate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
