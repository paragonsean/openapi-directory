/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LiveChatSuperChatDetails model module.
 * @module model/LiveChatSuperChatDetails
 * @version v3
 */
class LiveChatSuperChatDetails {
    /**
     * Constructs a new <code>LiveChatSuperChatDetails</code>.
     * @alias module:model/LiveChatSuperChatDetails
     */
    constructor() { 
        
        LiveChatSuperChatDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveChatSuperChatDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveChatSuperChatDetails} obj Optional instance to populate.
     * @return {module:model/LiveChatSuperChatDetails} The populated <code>LiveChatSuperChatDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveChatSuperChatDetails();

            if (data.hasOwnProperty('amountDisplayString')) {
                obj['amountDisplayString'] = ApiClient.convertToType(data['amountDisplayString'], 'String');
            }
            if (data.hasOwnProperty('amountMicros')) {
                obj['amountMicros'] = ApiClient.convertToType(data['amountMicros'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = ApiClient.convertToType(data['tier'], 'Number');
            }
            if (data.hasOwnProperty('userComment')) {
                obj['userComment'] = ApiClient.convertToType(data['userComment'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveChatSuperChatDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveChatSuperChatDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['amountDisplayString'] && !(typeof data['amountDisplayString'] === 'string' || data['amountDisplayString'] instanceof String)) {
            throw new Error("Expected the field `amountDisplayString` to be a primitive type in the JSON string but got " + data['amountDisplayString']);
        }
        // ensure the json data is a string
        if (data['amountMicros'] && !(typeof data['amountMicros'] === 'string' || data['amountMicros'] instanceof String)) {
            throw new Error("Expected the field `amountMicros` to be a primitive type in the JSON string but got " + data['amountMicros']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['userComment'] && !(typeof data['userComment'] === 'string' || data['userComment'] instanceof String)) {
            throw new Error("Expected the field `userComment` to be a primitive type in the JSON string but got " + data['userComment']);
        }

        return true;
    }


}



/**
 * A rendered string that displays the fund amount and currency to the user.
 * @member {String} amountDisplayString
 */
LiveChatSuperChatDetails.prototype['amountDisplayString'] = undefined;

/**
 * The amount purchased by the user, in micros (1,750,000 micros = 1.75).
 * @member {String} amountMicros
 */
LiveChatSuperChatDetails.prototype['amountMicros'] = undefined;

/**
 * The currency in which the purchase was made.
 * @member {String} currency
 */
LiveChatSuperChatDetails.prototype['currency'] = undefined;

/**
 * The tier in which the amount belongs. Lower amounts belong to lower tiers. The lowest tier is 1.
 * @member {Number} tier
 */
LiveChatSuperChatDetails.prototype['tier'] = undefined;

/**
 * The comment added by the user to this Super Chat event.
 * @member {String} userComment
 */
LiveChatSuperChatDetails.prototype['userComment'] = undefined;






export default LiveChatSuperChatDetails;

