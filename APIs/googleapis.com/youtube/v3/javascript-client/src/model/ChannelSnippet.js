/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelLocalization from './ChannelLocalization';
import ThumbnailDetails from './ThumbnailDetails';

/**
 * The ChannelSnippet model module.
 * @module model/ChannelSnippet
 * @version v3
 */
class ChannelSnippet {
    /**
     * Constructs a new <code>ChannelSnippet</code>.
     * Basic details about a channel, including title, description and thumbnails.
     * @alias module:model/ChannelSnippet
     */
    constructor() { 
        
        ChannelSnippet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelSnippet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelSnippet} obj Optional instance to populate.
     * @return {module:model/ChannelSnippet} The populated <code>ChannelSnippet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelSnippet();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('customUrl')) {
                obj['customUrl'] = ApiClient.convertToType(data['customUrl'], 'String');
            }
            if (data.hasOwnProperty('defaultLanguage')) {
                obj['defaultLanguage'] = ApiClient.convertToType(data['defaultLanguage'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('localized')) {
                obj['localized'] = ChannelLocalization.constructFromObject(data['localized']);
            }
            if (data.hasOwnProperty('publishedAt')) {
                obj['publishedAt'] = ApiClient.convertToType(data['publishedAt'], 'Date');
            }
            if (data.hasOwnProperty('thumbnails')) {
                obj['thumbnails'] = ThumbnailDetails.constructFromObject(data['thumbnails']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelSnippet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelSnippet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['customUrl'] && !(typeof data['customUrl'] === 'string' || data['customUrl'] instanceof String)) {
            throw new Error("Expected the field `customUrl` to be a primitive type in the JSON string but got " + data['customUrl']);
        }
        // ensure the json data is a string
        if (data['defaultLanguage'] && !(typeof data['defaultLanguage'] === 'string' || data['defaultLanguage'] instanceof String)) {
            throw new Error("Expected the field `defaultLanguage` to be a primitive type in the JSON string but got " + data['defaultLanguage']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `localized`
        if (data['localized']) { // data not null
          ChannelLocalization.validateJSON(data['localized']);
        }
        // validate the optional field `thumbnails`
        if (data['thumbnails']) { // data not null
          ThumbnailDetails.validateJSON(data['thumbnails']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * The country of the channel.
 * @member {String} country
 */
ChannelSnippet.prototype['country'] = undefined;

/**
 * The custom url of the channel.
 * @member {String} customUrl
 */
ChannelSnippet.prototype['customUrl'] = undefined;

/**
 * The language of the channel's default title and description.
 * @member {String} defaultLanguage
 */
ChannelSnippet.prototype['defaultLanguage'] = undefined;

/**
 * The description of the channel.
 * @member {String} description
 */
ChannelSnippet.prototype['description'] = undefined;

/**
 * @member {module:model/ChannelLocalization} localized
 */
ChannelSnippet.prototype['localized'] = undefined;

/**
 * The date and time that the channel was created.
 * @member {Date} publishedAt
 */
ChannelSnippet.prototype['publishedAt'] = undefined;

/**
 * @member {module:model/ThumbnailDetails} thumbnails
 */
ChannelSnippet.prototype['thumbnails'] = undefined;

/**
 * The channel's title.
 * @member {String} title
 */
ChannelSnippet.prototype['title'] = undefined;






export default ChannelSnippet;

