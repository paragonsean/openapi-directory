/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActivityContentDetails from './ActivityContentDetails';
import ActivitySnippet from './ActivitySnippet';

/**
 * The Activity model module.
 * @module model/Activity
 * @version v3
 */
class Activity {
    /**
     * Constructs a new <code>Activity</code>.
     * An *activity* resource contains information about an action that a particular channel, or user, has taken on YouTube.The actions reported in activity feeds include rating a video, sharing a video, marking a video as a favorite, commenting on a video, uploading a video, and so forth. Each activity resource identifies the type of action, the channel associated with the action, and the resource(s) associated with the action, such as the video that was rated or uploaded.
     * @alias module:model/Activity
     */
    constructor() { 
        
        Activity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'youtube#activity';
    }

    /**
     * Constructs a <code>Activity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Activity} obj Optional instance to populate.
     * @return {module:model/Activity} The populated <code>Activity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Activity();

            if (data.hasOwnProperty('contentDetails')) {
                obj['contentDetails'] = ActivityContentDetails.constructFromObject(data['contentDetails']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = ActivitySnippet.constructFromObject(data['snippet']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Activity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Activity</code>.
     */
    static validateJSON(data) {
        // validate the optional field `contentDetails`
        if (data['contentDetails']) { // data not null
          ActivityContentDetails.validateJSON(data['contentDetails']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `snippet`
        if (data['snippet']) { // data not null
          ActivitySnippet.validateJSON(data['snippet']);
        }

        return true;
    }


}



/**
 * @member {module:model/ActivityContentDetails} contentDetails
 */
Activity.prototype['contentDetails'] = undefined;

/**
 * Etag of this resource
 * @member {String} etag
 */
Activity.prototype['etag'] = undefined;

/**
 * The ID that YouTube uses to uniquely identify the activity.
 * @member {String} id
 */
Activity.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"youtube#activity\".
 * @member {String} kind
 * @default 'youtube#activity'
 */
Activity.prototype['kind'] = 'youtube#activity';

/**
 * @member {module:model/ActivitySnippet} snippet
 */
Activity.prototype['snippet'] = undefined;






export default Activity;

