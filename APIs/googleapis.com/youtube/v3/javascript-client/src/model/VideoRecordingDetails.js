/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GeoPoint from './GeoPoint';

/**
 * The VideoRecordingDetails model module.
 * @module model/VideoRecordingDetails
 * @version v3
 */
class VideoRecordingDetails {
    /**
     * Constructs a new <code>VideoRecordingDetails</code>.
     * Recording information associated with the video.
     * @alias module:model/VideoRecordingDetails
     */
    constructor() { 
        
        VideoRecordingDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoRecordingDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoRecordingDetails} obj Optional instance to populate.
     * @return {module:model/VideoRecordingDetails} The populated <code>VideoRecordingDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoRecordingDetails();

            if (data.hasOwnProperty('location')) {
                obj['location'] = GeoPoint.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('locationDescription')) {
                obj['locationDescription'] = ApiClient.convertToType(data['locationDescription'], 'String');
            }
            if (data.hasOwnProperty('recordingDate')) {
                obj['recordingDate'] = ApiClient.convertToType(data['recordingDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoRecordingDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoRecordingDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `location`
        if (data['location']) { // data not null
          GeoPoint.validateJSON(data['location']);
        }
        // ensure the json data is a string
        if (data['locationDescription'] && !(typeof data['locationDescription'] === 'string' || data['locationDescription'] instanceof String)) {
            throw new Error("Expected the field `locationDescription` to be a primitive type in the JSON string but got " + data['locationDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/GeoPoint} location
 */
VideoRecordingDetails.prototype['location'] = undefined;

/**
 * The text description of the location where the video was recorded.
 * @member {String} locationDescription
 */
VideoRecordingDetails.prototype['locationDescription'] = undefined;

/**
 * The date and time when the video was recorded.
 * @member {Date} recordingDate
 */
VideoRecordingDetails.prototype['recordingDate'] = undefined;






export default VideoRecordingDetails;

