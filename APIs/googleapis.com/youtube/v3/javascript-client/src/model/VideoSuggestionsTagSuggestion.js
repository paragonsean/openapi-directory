/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoSuggestionsTagSuggestion model module.
 * @module model/VideoSuggestionsTagSuggestion
 * @version v3
 */
class VideoSuggestionsTagSuggestion {
    /**
     * Constructs a new <code>VideoSuggestionsTagSuggestion</code>.
     * A single tag suggestion with it&#39;s relevance information.
     * @alias module:model/VideoSuggestionsTagSuggestion
     */
    constructor() { 
        
        VideoSuggestionsTagSuggestion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoSuggestionsTagSuggestion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoSuggestionsTagSuggestion} obj Optional instance to populate.
     * @return {module:model/VideoSuggestionsTagSuggestion} The populated <code>VideoSuggestionsTagSuggestion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoSuggestionsTagSuggestion();

            if (data.hasOwnProperty('categoryRestricts')) {
                obj['categoryRestricts'] = ApiClient.convertToType(data['categoryRestricts'], ['String']);
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoSuggestionsTagSuggestion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoSuggestionsTagSuggestion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['categoryRestricts'])) {
            throw new Error("Expected the field `categoryRestricts` to be an array in the JSON data but got " + data['categoryRestricts']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }

        return true;
    }


}



/**
 * A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.
 * @member {Array.<String>} categoryRestricts
 */
VideoSuggestionsTagSuggestion.prototype['categoryRestricts'] = undefined;

/**
 * The keyword tag suggested for the video.
 * @member {String} tag
 */
VideoSuggestionsTagSuggestion.prototype['tag'] = undefined;






export default VideoSuggestionsTagSuggestion;

