/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ThirdPartyLinkSnippet from './ThirdPartyLinkSnippet';
import ThirdPartyLinkStatus from './ThirdPartyLinkStatus';

/**
 * The ThirdPartyLink model module.
 * @module model/ThirdPartyLink
 * @version v3
 */
class ThirdPartyLink {
    /**
     * Constructs a new <code>ThirdPartyLink</code>.
     * A *third party account link* resource represents a link between a YouTube account or a channel and an account on a third-party service.
     * @alias module:model/ThirdPartyLink
     */
    constructor() { 
        
        ThirdPartyLink.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'youtube#thirdPartyLink';
    }

    /**
     * Constructs a <code>ThirdPartyLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ThirdPartyLink} obj Optional instance to populate.
     * @return {module:model/ThirdPartyLink} The populated <code>ThirdPartyLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThirdPartyLink();

            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('linkingToken')) {
                obj['linkingToken'] = ApiClient.convertToType(data['linkingToken'], 'String');
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = ThirdPartyLinkSnippet.constructFromObject(data['snippet']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ThirdPartyLinkStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ThirdPartyLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ThirdPartyLink</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['linkingToken'] && !(typeof data['linkingToken'] === 'string' || data['linkingToken'] instanceof String)) {
            throw new Error("Expected the field `linkingToken` to be a primitive type in the JSON string but got " + data['linkingToken']);
        }
        // validate the optional field `snippet`
        if (data['snippet']) { // data not null
          ThirdPartyLinkSnippet.validateJSON(data['snippet']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ThirdPartyLinkStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * Etag of this resource
 * @member {String} etag
 */
ThirdPartyLink.prototype['etag'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"youtube#thirdPartyLink\".
 * @member {String} kind
 * @default 'youtube#thirdPartyLink'
 */
ThirdPartyLink.prototype['kind'] = 'youtube#thirdPartyLink';

/**
 * The linking_token identifies a YouTube account and channel with which the third party account is linked.
 * @member {String} linkingToken
 */
ThirdPartyLink.prototype['linkingToken'] = undefined;

/**
 * @member {module:model/ThirdPartyLinkSnippet} snippet
 */
ThirdPartyLink.prototype['snippet'] = undefined;

/**
 * @member {module:model/ThirdPartyLinkStatus} status
 */
ThirdPartyLink.prototype['status'] = undefined;






export default ThirdPartyLink;

