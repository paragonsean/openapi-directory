/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceId from './ResourceId';

/**
 * The ActivityContentDetailsSocial model module.
 * @module model/ActivityContentDetailsSocial
 * @version v3
 */
class ActivityContentDetailsSocial {
    /**
     * Constructs a new <code>ActivityContentDetailsSocial</code>.
     * Details about a social network post.
     * @alias module:model/ActivityContentDetailsSocial
     */
    constructor() { 
        
        ActivityContentDetailsSocial.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityContentDetailsSocial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityContentDetailsSocial} obj Optional instance to populate.
     * @return {module:model/ActivityContentDetailsSocial} The populated <code>ActivityContentDetailsSocial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityContentDetailsSocial();

            if (data.hasOwnProperty('author')) {
                obj['author'] = ApiClient.convertToType(data['author'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('referenceUrl')) {
                obj['referenceUrl'] = ApiClient.convertToType(data['referenceUrl'], 'String');
            }
            if (data.hasOwnProperty('resourceId')) {
                obj['resourceId'] = ResourceId.constructFromObject(data['resourceId']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityContentDetailsSocial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityContentDetailsSocial</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['author'] && !(typeof data['author'] === 'string' || data['author'] instanceof String)) {
            throw new Error("Expected the field `author` to be a primitive type in the JSON string but got " + data['author']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['referenceUrl'] && !(typeof data['referenceUrl'] === 'string' || data['referenceUrl'] instanceof String)) {
            throw new Error("Expected the field `referenceUrl` to be a primitive type in the JSON string but got " + data['referenceUrl']);
        }
        // validate the optional field `resourceId`
        if (data['resourceId']) { // data not null
          ResourceId.validateJSON(data['resourceId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The author of the social network post.
 * @member {String} author
 */
ActivityContentDetailsSocial.prototype['author'] = undefined;

/**
 * An image of the post's author.
 * @member {String} imageUrl
 */
ActivityContentDetailsSocial.prototype['imageUrl'] = undefined;

/**
 * The URL of the social network post.
 * @member {String} referenceUrl
 */
ActivityContentDetailsSocial.prototype['referenceUrl'] = undefined;

/**
 * @member {module:model/ResourceId} resourceId
 */
ActivityContentDetailsSocial.prototype['resourceId'] = undefined;

/**
 * The name of the social network.
 * @member {module:model/ActivityContentDetailsSocial.TypeEnum} type
 */
ActivityContentDetailsSocial.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ActivityContentDetailsSocial['TypeEnum'] = {

    /**
     * value: "unspecified"
     * @const
     */
    "unspecified": "unspecified",

    /**
     * value: "googlePlus"
     * @const
     */
    "googlePlus": "googlePlus",

    /**
     * value: "facebook"
     * @const
     */
    "facebook": "facebook",

    /**
     * value: "twitter"
     * @const
     */
    "twitter": "twitter"
};



export default ActivityContentDetailsSocial;

