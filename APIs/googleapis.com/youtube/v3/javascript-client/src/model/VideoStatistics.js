/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoStatistics model module.
 * @module model/VideoStatistics
 * @version v3
 */
class VideoStatistics {
    /**
     * Constructs a new <code>VideoStatistics</code>.
     * Statistics about the video, such as the number of times the video was viewed or liked.
     * @alias module:model/VideoStatistics
     */
    constructor() { 
        
        VideoStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoStatistics} obj Optional instance to populate.
     * @return {module:model/VideoStatistics} The populated <code>VideoStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoStatistics();

            if (data.hasOwnProperty('commentCount')) {
                obj['commentCount'] = ApiClient.convertToType(data['commentCount'], 'String');
            }
            if (data.hasOwnProperty('dislikeCount')) {
                obj['dislikeCount'] = ApiClient.convertToType(data['dislikeCount'], 'String');
            }
            if (data.hasOwnProperty('favoriteCount')) {
                obj['favoriteCount'] = ApiClient.convertToType(data['favoriteCount'], 'String');
            }
            if (data.hasOwnProperty('likeCount')) {
                obj['likeCount'] = ApiClient.convertToType(data['likeCount'], 'String');
            }
            if (data.hasOwnProperty('viewCount')) {
                obj['viewCount'] = ApiClient.convertToType(data['viewCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoStatistics</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['commentCount'] && !(typeof data['commentCount'] === 'string' || data['commentCount'] instanceof String)) {
            throw new Error("Expected the field `commentCount` to be a primitive type in the JSON string but got " + data['commentCount']);
        }
        // ensure the json data is a string
        if (data['dislikeCount'] && !(typeof data['dislikeCount'] === 'string' || data['dislikeCount'] instanceof String)) {
            throw new Error("Expected the field `dislikeCount` to be a primitive type in the JSON string but got " + data['dislikeCount']);
        }
        // ensure the json data is a string
        if (data['favoriteCount'] && !(typeof data['favoriteCount'] === 'string' || data['favoriteCount'] instanceof String)) {
            throw new Error("Expected the field `favoriteCount` to be a primitive type in the JSON string but got " + data['favoriteCount']);
        }
        // ensure the json data is a string
        if (data['likeCount'] && !(typeof data['likeCount'] === 'string' || data['likeCount'] instanceof String)) {
            throw new Error("Expected the field `likeCount` to be a primitive type in the JSON string but got " + data['likeCount']);
        }
        // ensure the json data is a string
        if (data['viewCount'] && !(typeof data['viewCount'] === 'string' || data['viewCount'] instanceof String)) {
            throw new Error("Expected the field `viewCount` to be a primitive type in the JSON string but got " + data['viewCount']);
        }

        return true;
    }


}



/**
 * The number of comments for the video.
 * @member {String} commentCount
 */
VideoStatistics.prototype['commentCount'] = undefined;

/**
 * The number of users who have indicated that they disliked the video by giving it a negative rating.
 * @member {String} dislikeCount
 */
VideoStatistics.prototype['dislikeCount'] = undefined;

/**
 * The number of users who currently have the video marked as a favorite video.
 * @member {String} favoriteCount
 */
VideoStatistics.prototype['favoriteCount'] = undefined;

/**
 * The number of users who have indicated that they liked the video by giving it a positive rating.
 * @member {String} likeCount
 */
VideoStatistics.prototype['likeCount'] = undefined;

/**
 * The number of times the video has been viewed.
 * @member {String} viewCount
 */
VideoStatistics.prototype['viewCount'] = undefined;






export default VideoStatistics;

