/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LiveChatPollDetailsPollMetadata from './LiveChatPollDetailsPollMetadata';

/**
 * The LiveChatPollDetails model module.
 * @module model/LiveChatPollDetails
 * @version v3
 */
class LiveChatPollDetails {
    /**
     * Constructs a new <code>LiveChatPollDetails</code>.
     * @alias module:model/LiveChatPollDetails
     */
    constructor() { 
        
        LiveChatPollDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveChatPollDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveChatPollDetails} obj Optional instance to populate.
     * @return {module:model/LiveChatPollDetails} The populated <code>LiveChatPollDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveChatPollDetails();

            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = LiveChatPollDetailsPollMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveChatPollDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveChatPollDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          LiveChatPollDetailsPollMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/LiveChatPollDetailsPollMetadata} metadata
 */
LiveChatPollDetails.prototype['metadata'] = undefined;

/**
 * @member {module:model/LiveChatPollDetails.StatusEnum} status
 */
LiveChatPollDetails.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
LiveChatPollDetails['StatusEnum'] = {

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed"
};



export default LiveChatPollDetails;

