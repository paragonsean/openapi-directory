/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvideoPosition from './InvideoPosition';
import InvideoTiming from './InvideoTiming';

/**
 * The InvideoBranding model module.
 * @module model/InvideoBranding
 * @version v3
 */
class InvideoBranding {
    /**
     * Constructs a new <code>InvideoBranding</code>.
     * LINT.IfChange Describes an invideo branding.
     * @alias module:model/InvideoBranding
     */
    constructor() { 
        
        InvideoBranding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvideoBranding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvideoBranding} obj Optional instance to populate.
     * @return {module:model/InvideoBranding} The populated <code>InvideoBranding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvideoBranding();

            if (data.hasOwnProperty('imageBytes')) {
                obj['imageBytes'] = ApiClient.convertToType(data['imageBytes'], 'Blob');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = InvideoPosition.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('targetChannelId')) {
                obj['targetChannelId'] = ApiClient.convertToType(data['targetChannelId'], 'String');
            }
            if (data.hasOwnProperty('timing')) {
                obj['timing'] = InvideoTiming.constructFromObject(data['timing']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvideoBranding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvideoBranding</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // validate the optional field `position`
        if (data['position']) { // data not null
          InvideoPosition.validateJSON(data['position']);
        }
        // ensure the json data is a string
        if (data['targetChannelId'] && !(typeof data['targetChannelId'] === 'string' || data['targetChannelId'] instanceof String)) {
            throw new Error("Expected the field `targetChannelId` to be a primitive type in the JSON string but got " + data['targetChannelId']);
        }
        // validate the optional field `timing`
        if (data['timing']) { // data not null
          InvideoTiming.validateJSON(data['timing']);
        }

        return true;
    }


}



/**
 * The bytes the uploaded image. Only used in api to youtube communication.
 * @member {Blob} imageBytes
 */
InvideoBranding.prototype['imageBytes'] = undefined;

/**
 * The url of the uploaded image. Only used in apiary to api communication.
 * @member {String} imageUrl
 */
InvideoBranding.prototype['imageUrl'] = undefined;

/**
 * @member {module:model/InvideoPosition} position
 */
InvideoBranding.prototype['position'] = undefined;

/**
 * The channel to which this branding links. If not present it defaults to the current channel.
 * @member {String} targetChannelId
 */
InvideoBranding.prototype['targetChannelId'] = undefined;

/**
 * @member {module:model/InvideoTiming} timing
 */
InvideoBranding.prototype['timing'] = undefined;






export default InvideoBranding;

