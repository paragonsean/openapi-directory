/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AbuseType from './AbuseType';
import Entity from './Entity';
import RelatedEntity from './RelatedEntity';

/**
 * The AbuseReport model module.
 * @module model/AbuseReport
 * @version v3
 */
class AbuseReport {
    /**
     * Constructs a new <code>AbuseReport</code>.
     * @alias module:model/AbuseReport
     */
    constructor() { 
        
        AbuseReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AbuseReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AbuseReport} obj Optional instance to populate.
     * @return {module:model/AbuseReport} The populated <code>AbuseReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AbuseReport();

            if (data.hasOwnProperty('abuseTypes')) {
                obj['abuseTypes'] = ApiClient.convertToType(data['abuseTypes'], [AbuseType]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('relatedEntities')) {
                obj['relatedEntities'] = ApiClient.convertToType(data['relatedEntities'], [RelatedEntity]);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = Entity.constructFromObject(data['subject']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AbuseReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AbuseReport</code>.
     */
    static validateJSON(data) {
        if (data['abuseTypes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['abuseTypes'])) {
                throw new Error("Expected the field `abuseTypes` to be an array in the JSON data but got " + data['abuseTypes']);
            }
            // validate the optional field `abuseTypes` (array)
            for (const item of data['abuseTypes']) {
                AbuseType.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['relatedEntities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['relatedEntities'])) {
                throw new Error("Expected the field `relatedEntities` to be an array in the JSON data but got " + data['relatedEntities']);
            }
            // validate the optional field `relatedEntities` (array)
            for (const item of data['relatedEntities']) {
                RelatedEntity.validateJSON(item);
            };
        }
        // validate the optional field `subject`
        if (data['subject']) { // data not null
          Entity.validateJSON(data['subject']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AbuseType>} abuseTypes
 */
AbuseReport.prototype['abuseTypes'] = undefined;

/**
 * @member {String} description
 */
AbuseReport.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/RelatedEntity>} relatedEntities
 */
AbuseReport.prototype['relatedEntities'] = undefined;

/**
 * @member {module:model/Entity} subject
 */
AbuseReport.prototype['subject'] = undefined;






export default AbuseReport;

