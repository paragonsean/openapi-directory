/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VideoAgeGating from './VideoAgeGating';
import VideoContentDetails from './VideoContentDetails';
import VideoFileDetails from './VideoFileDetails';
import VideoLiveStreamingDetails from './VideoLiveStreamingDetails';
import VideoLocalization from './VideoLocalization';
import VideoMonetizationDetails from './VideoMonetizationDetails';
import VideoPlayer from './VideoPlayer';
import VideoProcessingDetails from './VideoProcessingDetails';
import VideoRecordingDetails from './VideoRecordingDetails';
import VideoSnippet from './VideoSnippet';
import VideoStatistics from './VideoStatistics';
import VideoStatus from './VideoStatus';
import VideoSuggestions from './VideoSuggestions';
import VideoTopicDetails from './VideoTopicDetails';

/**
 * The Video model module.
 * @module model/Video
 * @version v3
 */
class Video {
    /**
     * Constructs a new <code>Video</code>.
     * A *video* resource represents a YouTube video.
     * @alias module:model/Video
     */
    constructor() { 
        
        Video.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'youtube#video';
    }

    /**
     * Constructs a <code>Video</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Video} obj Optional instance to populate.
     * @return {module:model/Video} The populated <code>Video</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Video();

            if (data.hasOwnProperty('ageGating')) {
                obj['ageGating'] = VideoAgeGating.constructFromObject(data['ageGating']);
            }
            if (data.hasOwnProperty('contentDetails')) {
                obj['contentDetails'] = VideoContentDetails.constructFromObject(data['contentDetails']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('fileDetails')) {
                obj['fileDetails'] = VideoFileDetails.constructFromObject(data['fileDetails']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('liveStreamingDetails')) {
                obj['liveStreamingDetails'] = VideoLiveStreamingDetails.constructFromObject(data['liveStreamingDetails']);
            }
            if (data.hasOwnProperty('localizations')) {
                obj['localizations'] = ApiClient.convertToType(data['localizations'], {'String': VideoLocalization});
            }
            if (data.hasOwnProperty('monetizationDetails')) {
                obj['monetizationDetails'] = VideoMonetizationDetails.constructFromObject(data['monetizationDetails']);
            }
            if (data.hasOwnProperty('player')) {
                obj['player'] = VideoPlayer.constructFromObject(data['player']);
            }
            if (data.hasOwnProperty('processingDetails')) {
                obj['processingDetails'] = VideoProcessingDetails.constructFromObject(data['processingDetails']);
            }
            if (data.hasOwnProperty('projectDetails')) {
                obj['projectDetails'] = ApiClient.convertToType(data['projectDetails'], Object);
            }
            if (data.hasOwnProperty('recordingDetails')) {
                obj['recordingDetails'] = VideoRecordingDetails.constructFromObject(data['recordingDetails']);
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = VideoSnippet.constructFromObject(data['snippet']);
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = VideoStatistics.constructFromObject(data['statistics']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = VideoStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('suggestions')) {
                obj['suggestions'] = VideoSuggestions.constructFromObject(data['suggestions']);
            }
            if (data.hasOwnProperty('topicDetails')) {
                obj['topicDetails'] = VideoTopicDetails.constructFromObject(data['topicDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Video</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Video</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ageGating`
        if (data['ageGating']) { // data not null
          VideoAgeGating.validateJSON(data['ageGating']);
        }
        // validate the optional field `contentDetails`
        if (data['contentDetails']) { // data not null
          VideoContentDetails.validateJSON(data['contentDetails']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `fileDetails`
        if (data['fileDetails']) { // data not null
          VideoFileDetails.validateJSON(data['fileDetails']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `liveStreamingDetails`
        if (data['liveStreamingDetails']) { // data not null
          VideoLiveStreamingDetails.validateJSON(data['liveStreamingDetails']);
        }
        // validate the optional field `monetizationDetails`
        if (data['monetizationDetails']) { // data not null
          VideoMonetizationDetails.validateJSON(data['monetizationDetails']);
        }
        // validate the optional field `player`
        if (data['player']) { // data not null
          VideoPlayer.validateJSON(data['player']);
        }
        // validate the optional field `processingDetails`
        if (data['processingDetails']) { // data not null
          VideoProcessingDetails.validateJSON(data['processingDetails']);
        }
        // validate the optional field `recordingDetails`
        if (data['recordingDetails']) { // data not null
          VideoRecordingDetails.validateJSON(data['recordingDetails']);
        }
        // validate the optional field `snippet`
        if (data['snippet']) { // data not null
          VideoSnippet.validateJSON(data['snippet']);
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          VideoStatistics.validateJSON(data['statistics']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          VideoStatus.validateJSON(data['status']);
        }
        // validate the optional field `suggestions`
        if (data['suggestions']) { // data not null
          VideoSuggestions.validateJSON(data['suggestions']);
        }
        // validate the optional field `topicDetails`
        if (data['topicDetails']) { // data not null
          VideoTopicDetails.validateJSON(data['topicDetails']);
        }

        return true;
    }


}



/**
 * @member {module:model/VideoAgeGating} ageGating
 */
Video.prototype['ageGating'] = undefined;

/**
 * @member {module:model/VideoContentDetails} contentDetails
 */
Video.prototype['contentDetails'] = undefined;

/**
 * Etag of this resource.
 * @member {String} etag
 */
Video.prototype['etag'] = undefined;

/**
 * @member {module:model/VideoFileDetails} fileDetails
 */
Video.prototype['fileDetails'] = undefined;

/**
 * The ID that YouTube uses to uniquely identify the video.
 * @member {String} id
 */
Video.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"youtube#video\".
 * @member {String} kind
 * @default 'youtube#video'
 */
Video.prototype['kind'] = 'youtube#video';

/**
 * @member {module:model/VideoLiveStreamingDetails} liveStreamingDetails
 */
Video.prototype['liveStreamingDetails'] = undefined;

/**
 * The localizations object contains localized versions of the basic details about the video, such as its title and description.
 * @member {Object.<String, module:model/VideoLocalization>} localizations
 */
Video.prototype['localizations'] = undefined;

/**
 * @member {module:model/VideoMonetizationDetails} monetizationDetails
 */
Video.prototype['monetizationDetails'] = undefined;

/**
 * @member {module:model/VideoPlayer} player
 */
Video.prototype['player'] = undefined;

/**
 * @member {module:model/VideoProcessingDetails} processingDetails
 */
Video.prototype['processingDetails'] = undefined;

/**
 * DEPRECATED. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677
 * @member {Object} projectDetails
 */
Video.prototype['projectDetails'] = undefined;

/**
 * @member {module:model/VideoRecordingDetails} recordingDetails
 */
Video.prototype['recordingDetails'] = undefined;

/**
 * @member {module:model/VideoSnippet} snippet
 */
Video.prototype['snippet'] = undefined;

/**
 * @member {module:model/VideoStatistics} statistics
 */
Video.prototype['statistics'] = undefined;

/**
 * @member {module:model/VideoStatus} status
 */
Video.prototype['status'] = undefined;

/**
 * @member {module:model/VideoSuggestions} suggestions
 */
Video.prototype['suggestions'] = undefined;

/**
 * @member {module:model/VideoTopicDetails} topicDetails
 */
Video.prototype['topicDetails'] = undefined;






export default Video;

