/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvideoTiming model module.
 * @module model/InvideoTiming
 * @version v3
 */
class InvideoTiming {
    /**
     * Constructs a new <code>InvideoTiming</code>.
     * Describes a temporal position of a visual widget inside a video.
     * @alias module:model/InvideoTiming
     */
    constructor() { 
        
        InvideoTiming.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvideoTiming</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvideoTiming} obj Optional instance to populate.
     * @return {module:model/InvideoTiming} The populated <code>InvideoTiming</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvideoTiming();

            if (data.hasOwnProperty('durationMs')) {
                obj['durationMs'] = ApiClient.convertToType(data['durationMs'], 'String');
            }
            if (data.hasOwnProperty('offsetMs')) {
                obj['offsetMs'] = ApiClient.convertToType(data['offsetMs'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvideoTiming</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvideoTiming</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['durationMs'] && !(typeof data['durationMs'] === 'string' || data['durationMs'] instanceof String)) {
            throw new Error("Expected the field `durationMs` to be a primitive type in the JSON string but got " + data['durationMs']);
        }
        // ensure the json data is a string
        if (data['offsetMs'] && !(typeof data['offsetMs'] === 'string' || data['offsetMs'] instanceof String)) {
            throw new Error("Expected the field `offsetMs` to be a primitive type in the JSON string but got " + data['offsetMs']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Defines the duration in milliseconds for which the promotion should be displayed. If missing, the client should use the default.
 * @member {String} durationMs
 */
InvideoTiming.prototype['durationMs'] = undefined;

/**
 * Defines the time at which the promotion will appear. Depending on the value of type the value of the offsetMs field will represent a time offset from the start or from the end of the video, expressed in milliseconds.
 * @member {String} offsetMs
 */
InvideoTiming.prototype['offsetMs'] = undefined;

/**
 * Describes a timing type. If the value is offsetFromStart, then the offsetMs field represents an offset from the start of the video. If the value is offsetFromEnd, then the offsetMs field represents an offset from the end of the video.
 * @member {module:model/InvideoTiming.TypeEnum} type
 */
InvideoTiming.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
InvideoTiming['TypeEnum'] = {

    /**
     * value: "offsetFromStart"
     * @const
     */
    "offsetFromStart": "offsetFromStart",

    /**
     * value: "offsetFromEnd"
     * @const
     */
    "offsetFromEnd": "offsetFromEnd"
};



export default InvideoTiming;

