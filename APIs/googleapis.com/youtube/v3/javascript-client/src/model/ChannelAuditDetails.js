/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelAuditDetails model module.
 * @module model/ChannelAuditDetails
 * @version v3
 */
class ChannelAuditDetails {
    /**
     * Constructs a new <code>ChannelAuditDetails</code>.
     * The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.
     * @alias module:model/ChannelAuditDetails
     */
    constructor() { 
        
        ChannelAuditDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelAuditDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelAuditDetails} obj Optional instance to populate.
     * @return {module:model/ChannelAuditDetails} The populated <code>ChannelAuditDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelAuditDetails();

            if (data.hasOwnProperty('communityGuidelinesGoodStanding')) {
                obj['communityGuidelinesGoodStanding'] = ApiClient.convertToType(data['communityGuidelinesGoodStanding'], 'Boolean');
            }
            if (data.hasOwnProperty('contentIdClaimsGoodStanding')) {
                obj['contentIdClaimsGoodStanding'] = ApiClient.convertToType(data['contentIdClaimsGoodStanding'], 'Boolean');
            }
            if (data.hasOwnProperty('copyrightStrikesGoodStanding')) {
                obj['copyrightStrikesGoodStanding'] = ApiClient.convertToType(data['copyrightStrikesGoodStanding'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelAuditDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelAuditDetails</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Whether or not the channel respects the community guidelines.
 * @member {Boolean} communityGuidelinesGoodStanding
 */
ChannelAuditDetails.prototype['communityGuidelinesGoodStanding'] = undefined;

/**
 * Whether or not the channel has any unresolved claims.
 * @member {Boolean} contentIdClaimsGoodStanding
 */
ChannelAuditDetails.prototype['contentIdClaimsGoodStanding'] = undefined;

/**
 * Whether or not the channel has any copyright strikes.
 * @member {Boolean} copyrightStrikesGoodStanding
 */
ChannelAuditDetails.prototype['copyrightStrikesGoodStanding'] = undefined;






export default ChannelAuditDetails;

