/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelContentDetailsRelatedPlaylists model module.
 * @module model/ChannelContentDetailsRelatedPlaylists
 * @version v3
 */
class ChannelContentDetailsRelatedPlaylists {
    /**
     * Constructs a new <code>ChannelContentDetailsRelatedPlaylists</code>.
     * @alias module:model/ChannelContentDetailsRelatedPlaylists
     */
    constructor() { 
        
        ChannelContentDetailsRelatedPlaylists.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelContentDetailsRelatedPlaylists</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelContentDetailsRelatedPlaylists} obj Optional instance to populate.
     * @return {module:model/ChannelContentDetailsRelatedPlaylists} The populated <code>ChannelContentDetailsRelatedPlaylists</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelContentDetailsRelatedPlaylists();

            if (data.hasOwnProperty('favorites')) {
                obj['favorites'] = ApiClient.convertToType(data['favorites'], 'String');
            }
            if (data.hasOwnProperty('likes')) {
                obj['likes'] = ApiClient.convertToType(data['likes'], 'String');
            }
            if (data.hasOwnProperty('uploads')) {
                obj['uploads'] = ApiClient.convertToType(data['uploads'], 'String');
            }
            if (data.hasOwnProperty('watchHistory')) {
                obj['watchHistory'] = ApiClient.convertToType(data['watchHistory'], 'String');
            }
            if (data.hasOwnProperty('watchLater')) {
                obj['watchLater'] = ApiClient.convertToType(data['watchLater'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelContentDetailsRelatedPlaylists</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelContentDetailsRelatedPlaylists</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['favorites'] && !(typeof data['favorites'] === 'string' || data['favorites'] instanceof String)) {
            throw new Error("Expected the field `favorites` to be a primitive type in the JSON string but got " + data['favorites']);
        }
        // ensure the json data is a string
        if (data['likes'] && !(typeof data['likes'] === 'string' || data['likes'] instanceof String)) {
            throw new Error("Expected the field `likes` to be a primitive type in the JSON string but got " + data['likes']);
        }
        // ensure the json data is a string
        if (data['uploads'] && !(typeof data['uploads'] === 'string' || data['uploads'] instanceof String)) {
            throw new Error("Expected the field `uploads` to be a primitive type in the JSON string but got " + data['uploads']);
        }
        // ensure the json data is a string
        if (data['watchHistory'] && !(typeof data['watchHistory'] === 'string' || data['watchHistory'] instanceof String)) {
            throw new Error("Expected the field `watchHistory` to be a primitive type in the JSON string but got " + data['watchHistory']);
        }
        // ensure the json data is a string
        if (data['watchLater'] && !(typeof data['watchLater'] === 'string' || data['watchLater'] instanceof String)) {
            throw new Error("Expected the field `watchLater` to be a primitive type in the JSON string but got " + data['watchLater']);
        }

        return true;
    }


}



/**
 * The ID of the playlist that contains the channel\"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
 * @member {String} favorites
 */
ChannelContentDetailsRelatedPlaylists.prototype['favorites'] = undefined;

/**
 * The ID of the playlist that contains the channel\"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
 * @member {String} likes
 */
ChannelContentDetailsRelatedPlaylists.prototype['likes'] = undefined;

/**
 * The ID of the playlist that contains the channel\"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.
 * @member {String} uploads
 */
ChannelContentDetailsRelatedPlaylists.prototype['uploads'] = undefined;

/**
 * The ID of the playlist that contains the channel\"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
 * @member {String} watchHistory
 */
ChannelContentDetailsRelatedPlaylists.prototype['watchHistory'] = undefined;

/**
 * The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.
 * @member {String} watchLater
 */
ChannelContentDetailsRelatedPlaylists.prototype['watchLater'] = undefined;






export default ChannelContentDetailsRelatedPlaylists;

