/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The I18nLanguageSnippet model module.
 * @module model/I18nLanguageSnippet
 * @version v3
 */
class I18nLanguageSnippet {
    /**
     * Constructs a new <code>I18nLanguageSnippet</code>.
     * Basic details about an i18n language, such as language code and human-readable name.
     * @alias module:model/I18nLanguageSnippet
     */
    constructor() { 
        
        I18nLanguageSnippet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>I18nLanguageSnippet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/I18nLanguageSnippet} obj Optional instance to populate.
     * @return {module:model/I18nLanguageSnippet} The populated <code>I18nLanguageSnippet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new I18nLanguageSnippet();

            if (data.hasOwnProperty('hl')) {
                obj['hl'] = ApiClient.convertToType(data['hl'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>I18nLanguageSnippet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>I18nLanguageSnippet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hl'] && !(typeof data['hl'] === 'string' || data['hl'] instanceof String)) {
            throw new Error("Expected the field `hl` to be a primitive type in the JSON string but got " + data['hl']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * A short BCP-47 code that uniquely identifies a language.
 * @member {String} hl
 */
I18nLanguageSnippet.prototype['hl'] = undefined;

/**
 * The human-readable name of the language in the language itself.
 * @member {String} name
 */
I18nLanguageSnippet.prototype['name'] = undefined;






export default I18nLanguageSnippet;

