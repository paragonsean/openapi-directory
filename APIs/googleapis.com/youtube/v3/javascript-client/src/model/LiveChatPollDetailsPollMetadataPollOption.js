/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LiveChatPollDetailsPollMetadataPollOption model module.
 * @module model/LiveChatPollDetailsPollMetadataPollOption
 * @version v3
 */
class LiveChatPollDetailsPollMetadataPollOption {
    /**
     * Constructs a new <code>LiveChatPollDetailsPollMetadataPollOption</code>.
     * @alias module:model/LiveChatPollDetailsPollMetadataPollOption
     */
    constructor() { 
        
        LiveChatPollDetailsPollMetadataPollOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveChatPollDetailsPollMetadataPollOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveChatPollDetailsPollMetadataPollOption} obj Optional instance to populate.
     * @return {module:model/LiveChatPollDetailsPollMetadataPollOption} The populated <code>LiveChatPollDetailsPollMetadataPollOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveChatPollDetailsPollMetadataPollOption();

            if (data.hasOwnProperty('optionText')) {
                obj['optionText'] = ApiClient.convertToType(data['optionText'], 'String');
            }
            if (data.hasOwnProperty('tally')) {
                obj['tally'] = ApiClient.convertToType(data['tally'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveChatPollDetailsPollMetadataPollOption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveChatPollDetailsPollMetadataPollOption</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['optionText'] && !(typeof data['optionText'] === 'string' || data['optionText'] instanceof String)) {
            throw new Error("Expected the field `optionText` to be a primitive type in the JSON string but got " + data['optionText']);
        }
        // ensure the json data is a string
        if (data['tally'] && !(typeof data['tally'] === 'string' || data['tally'] instanceof String)) {
            throw new Error("Expected the field `tally` to be a primitive type in the JSON string but got " + data['tally']);
        }

        return true;
    }


}



/**
 * @member {String} optionText
 */
LiveChatPollDetailsPollMetadataPollOption.prototype['optionText'] = undefined;

/**
 * @member {String} tally
 */
LiveChatPollDetailsPollMetadataPollOption.prototype['tally'] = undefined;






export default LiveChatPollDetailsPollMetadataPollOption;

