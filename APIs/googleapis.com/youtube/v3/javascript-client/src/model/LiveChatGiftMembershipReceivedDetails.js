/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LiveChatGiftMembershipReceivedDetails model module.
 * @module model/LiveChatGiftMembershipReceivedDetails
 * @version v3
 */
class LiveChatGiftMembershipReceivedDetails {
    /**
     * Constructs a new <code>LiveChatGiftMembershipReceivedDetails</code>.
     * @alias module:model/LiveChatGiftMembershipReceivedDetails
     */
    constructor() { 
        
        LiveChatGiftMembershipReceivedDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveChatGiftMembershipReceivedDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveChatGiftMembershipReceivedDetails} obj Optional instance to populate.
     * @return {module:model/LiveChatGiftMembershipReceivedDetails} The populated <code>LiveChatGiftMembershipReceivedDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveChatGiftMembershipReceivedDetails();

            if (data.hasOwnProperty('associatedMembershipGiftingMessageId')) {
                obj['associatedMembershipGiftingMessageId'] = ApiClient.convertToType(data['associatedMembershipGiftingMessageId'], 'String');
            }
            if (data.hasOwnProperty('gifterChannelId')) {
                obj['gifterChannelId'] = ApiClient.convertToType(data['gifterChannelId'], 'String');
            }
            if (data.hasOwnProperty('memberLevelName')) {
                obj['memberLevelName'] = ApiClient.convertToType(data['memberLevelName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveChatGiftMembershipReceivedDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveChatGiftMembershipReceivedDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['associatedMembershipGiftingMessageId'] && !(typeof data['associatedMembershipGiftingMessageId'] === 'string' || data['associatedMembershipGiftingMessageId'] instanceof String)) {
            throw new Error("Expected the field `associatedMembershipGiftingMessageId` to be a primitive type in the JSON string but got " + data['associatedMembershipGiftingMessageId']);
        }
        // ensure the json data is a string
        if (data['gifterChannelId'] && !(typeof data['gifterChannelId'] === 'string' || data['gifterChannelId'] instanceof String)) {
            throw new Error("Expected the field `gifterChannelId` to be a primitive type in the JSON string but got " + data['gifterChannelId']);
        }
        // ensure the json data is a string
        if (data['memberLevelName'] && !(typeof data['memberLevelName'] === 'string' || data['memberLevelName'] instanceof String)) {
            throw new Error("Expected the field `memberLevelName` to be a primitive type in the JSON string but got " + data['memberLevelName']);
        }

        return true;
    }


}



/**
 * The ID of the membership gifting message that is related to this gift membership. This ID will always refer to a message whose type is 'membershipGiftingEvent'.
 * @member {String} associatedMembershipGiftingMessageId
 */
LiveChatGiftMembershipReceivedDetails.prototype['associatedMembershipGiftingMessageId'] = undefined;

/**
 * The ID of the user that made the membership gifting purchase. This matches the `snippet.authorChannelId` of the associated membership gifting message.
 * @member {String} gifterChannelId
 */
LiveChatGiftMembershipReceivedDetails.prototype['gifterChannelId'] = undefined;

/**
 * The name of the Level at which the viewer is a member. This matches the `snippet.membershipGiftingDetails.giftMembershipsLevelName` of the associated membership gifting message. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled.
 * @member {String} memberLevelName
 */
LiveChatGiftMembershipReceivedDetails.prototype['memberLevelName'] = undefined;






export default LiveChatGiftMembershipReceivedDetails;

