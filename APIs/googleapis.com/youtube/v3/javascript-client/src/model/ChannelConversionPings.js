/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelConversionPing from './ChannelConversionPing';

/**
 * The ChannelConversionPings model module.
 * @module model/ChannelConversionPings
 * @version v3
 */
class ChannelConversionPings {
    /**
     * Constructs a new <code>ChannelConversionPings</code>.
     * The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.
     * @alias module:model/ChannelConversionPings
     */
    constructor() { 
        
        ChannelConversionPings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelConversionPings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelConversionPings} obj Optional instance to populate.
     * @return {module:model/ChannelConversionPings} The populated <code>ChannelConversionPings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelConversionPings();

            if (data.hasOwnProperty('pings')) {
                obj['pings'] = ApiClient.convertToType(data['pings'], [ChannelConversionPing]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelConversionPings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelConversionPings</code>.
     */
    static validateJSON(data) {
        if (data['pings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pings'])) {
                throw new Error("Expected the field `pings` to be an array in the JSON data but got " + data['pings']);
            }
            // validate the optional field `pings` (array)
            for (const item of data['pings']) {
                ChannelConversionPing.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
 * @member {Array.<module:model/ChannelConversionPing>} pings
 */
ChannelConversionPings.prototype['pings'] = undefined;






export default ChannelConversionPings;

