/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlaylistItemContentDetails model module.
 * @module model/PlaylistItemContentDetails
 * @version v3
 */
class PlaylistItemContentDetails {
    /**
     * Constructs a new <code>PlaylistItemContentDetails</code>.
     * @alias module:model/PlaylistItemContentDetails
     */
    constructor() { 
        
        PlaylistItemContentDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlaylistItemContentDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlaylistItemContentDetails} obj Optional instance to populate.
     * @return {module:model/PlaylistItemContentDetails} The populated <code>PlaylistItemContentDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlaylistItemContentDetails();

            if (data.hasOwnProperty('endAt')) {
                obj['endAt'] = ApiClient.convertToType(data['endAt'], 'String');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('startAt')) {
                obj['startAt'] = ApiClient.convertToType(data['startAt'], 'String');
            }
            if (data.hasOwnProperty('videoId')) {
                obj['videoId'] = ApiClient.convertToType(data['videoId'], 'String');
            }
            if (data.hasOwnProperty('videoPublishedAt')) {
                obj['videoPublishedAt'] = ApiClient.convertToType(data['videoPublishedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlaylistItemContentDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlaylistItemContentDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endAt'] && !(typeof data['endAt'] === 'string' || data['endAt'] instanceof String)) {
            throw new Error("Expected the field `endAt` to be a primitive type in the JSON string but got " + data['endAt']);
        }
        // ensure the json data is a string
        if (data['note'] && !(typeof data['note'] === 'string' || data['note'] instanceof String)) {
            throw new Error("Expected the field `note` to be a primitive type in the JSON string but got " + data['note']);
        }
        // ensure the json data is a string
        if (data['startAt'] && !(typeof data['startAt'] === 'string' || data['startAt'] instanceof String)) {
            throw new Error("Expected the field `startAt` to be a primitive type in the JSON string but got " + data['startAt']);
        }
        // ensure the json data is a string
        if (data['videoId'] && !(typeof data['videoId'] === 'string' || data['videoId'] instanceof String)) {
            throw new Error("Expected the field `videoId` to be a primitive type in the JSON string but got " + data['videoId']);
        }

        return true;
    }


}



/**
 * The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.
 * @member {String} endAt
 */
PlaylistItemContentDetails.prototype['endAt'] = undefined;

/**
 * A user-generated note for this item.
 * @member {String} note
 */
PlaylistItemContentDetails.prototype['note'] = undefined;

/**
 * The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.
 * @member {String} startAt
 */
PlaylistItemContentDetails.prototype['startAt'] = undefined;

/**
 * The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.
 * @member {String} videoId
 */
PlaylistItemContentDetails.prototype['videoId'] = undefined;

/**
 * The date and time that the video was published to YouTube.
 * @member {Date} videoPublishedAt
 */
PlaylistItemContentDetails.prototype['videoPublishedAt'] = undefined;






export default PlaylistItemContentDetails;

