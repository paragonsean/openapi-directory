/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelAuditDetails from './ChannelAuditDetails';
import ChannelBrandingSettings from './ChannelBrandingSettings';
import ChannelContentDetails from './ChannelContentDetails';
import ChannelContentOwnerDetails from './ChannelContentOwnerDetails';
import ChannelConversionPings from './ChannelConversionPings';
import ChannelLocalization from './ChannelLocalization';
import ChannelSnippet from './ChannelSnippet';
import ChannelStatistics from './ChannelStatistics';
import ChannelStatus from './ChannelStatus';
import ChannelTopicDetails from './ChannelTopicDetails';

/**
 * The Channel model module.
 * @module model/Channel
 * @version v3
 */
class Channel {
    /**
     * Constructs a new <code>Channel</code>.
     * A *channel* resource contains information about a YouTube channel.
     * @alias module:model/Channel
     */
    constructor() { 
        
        Channel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'youtube#channel';
    }

    /**
     * Constructs a <code>Channel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Channel} obj Optional instance to populate.
     * @return {module:model/Channel} The populated <code>Channel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Channel();

            if (data.hasOwnProperty('auditDetails')) {
                obj['auditDetails'] = ChannelAuditDetails.constructFromObject(data['auditDetails']);
            }
            if (data.hasOwnProperty('brandingSettings')) {
                obj['brandingSettings'] = ChannelBrandingSettings.constructFromObject(data['brandingSettings']);
            }
            if (data.hasOwnProperty('contentDetails')) {
                obj['contentDetails'] = ChannelContentDetails.constructFromObject(data['contentDetails']);
            }
            if (data.hasOwnProperty('contentOwnerDetails')) {
                obj['contentOwnerDetails'] = ChannelContentOwnerDetails.constructFromObject(data['contentOwnerDetails']);
            }
            if (data.hasOwnProperty('conversionPings')) {
                obj['conversionPings'] = ChannelConversionPings.constructFromObject(data['conversionPings']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('localizations')) {
                obj['localizations'] = ApiClient.convertToType(data['localizations'], {'String': ChannelLocalization});
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = ChannelSnippet.constructFromObject(data['snippet']);
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = ChannelStatistics.constructFromObject(data['statistics']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ChannelStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('topicDetails')) {
                obj['topicDetails'] = ChannelTopicDetails.constructFromObject(data['topicDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Channel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Channel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `auditDetails`
        if (data['auditDetails']) { // data not null
          ChannelAuditDetails.validateJSON(data['auditDetails']);
        }
        // validate the optional field `brandingSettings`
        if (data['brandingSettings']) { // data not null
          ChannelBrandingSettings.validateJSON(data['brandingSettings']);
        }
        // validate the optional field `contentDetails`
        if (data['contentDetails']) { // data not null
          ChannelContentDetails.validateJSON(data['contentDetails']);
        }
        // validate the optional field `contentOwnerDetails`
        if (data['contentOwnerDetails']) { // data not null
          ChannelContentOwnerDetails.validateJSON(data['contentOwnerDetails']);
        }
        // validate the optional field `conversionPings`
        if (data['conversionPings']) { // data not null
          ChannelConversionPings.validateJSON(data['conversionPings']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `snippet`
        if (data['snippet']) { // data not null
          ChannelSnippet.validateJSON(data['snippet']);
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          ChannelStatistics.validateJSON(data['statistics']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ChannelStatus.validateJSON(data['status']);
        }
        // validate the optional field `topicDetails`
        if (data['topicDetails']) { // data not null
          ChannelTopicDetails.validateJSON(data['topicDetails']);
        }

        return true;
    }


}



/**
 * @member {module:model/ChannelAuditDetails} auditDetails
 */
Channel.prototype['auditDetails'] = undefined;

/**
 * @member {module:model/ChannelBrandingSettings} brandingSettings
 */
Channel.prototype['brandingSettings'] = undefined;

/**
 * @member {module:model/ChannelContentDetails} contentDetails
 */
Channel.prototype['contentDetails'] = undefined;

/**
 * @member {module:model/ChannelContentOwnerDetails} contentOwnerDetails
 */
Channel.prototype['contentOwnerDetails'] = undefined;

/**
 * @member {module:model/ChannelConversionPings} conversionPings
 */
Channel.prototype['conversionPings'] = undefined;

/**
 * Etag of this resource.
 * @member {String} etag
 */
Channel.prototype['etag'] = undefined;

/**
 * The ID that YouTube uses to uniquely identify the channel.
 * @member {String} id
 */
Channel.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"youtube#channel\".
 * @member {String} kind
 * @default 'youtube#channel'
 */
Channel.prototype['kind'] = 'youtube#channel';

/**
 * Localizations for different languages
 * @member {Object.<String, module:model/ChannelLocalization>} localizations
 */
Channel.prototype['localizations'] = undefined;

/**
 * @member {module:model/ChannelSnippet} snippet
 */
Channel.prototype['snippet'] = undefined;

/**
 * @member {module:model/ChannelStatistics} statistics
 */
Channel.prototype['statistics'] = undefined;

/**
 * @member {module:model/ChannelStatus} status
 */
Channel.prototype['status'] = undefined;

/**
 * @member {module:model/ChannelTopicDetails} topicDetails
 */
Channel.prototype['topicDetails'] = undefined;






export default Channel;

