/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelProfileDetails from './ChannelProfileDetails';

/**
 * The LiveChatBanSnippet model module.
 * @module model/LiveChatBanSnippet
 * @version v3
 */
class LiveChatBanSnippet {
    /**
     * Constructs a new <code>LiveChatBanSnippet</code>.
     * @alias module:model/LiveChatBanSnippet
     */
    constructor() { 
        
        LiveChatBanSnippet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveChatBanSnippet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveChatBanSnippet} obj Optional instance to populate.
     * @return {module:model/LiveChatBanSnippet} The populated <code>LiveChatBanSnippet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveChatBanSnippet();

            if (data.hasOwnProperty('banDurationSeconds')) {
                obj['banDurationSeconds'] = ApiClient.convertToType(data['banDurationSeconds'], 'String');
            }
            if (data.hasOwnProperty('bannedUserDetails')) {
                obj['bannedUserDetails'] = ChannelProfileDetails.constructFromObject(data['bannedUserDetails']);
            }
            if (data.hasOwnProperty('liveChatId')) {
                obj['liveChatId'] = ApiClient.convertToType(data['liveChatId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveChatBanSnippet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveChatBanSnippet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['banDurationSeconds'] && !(typeof data['banDurationSeconds'] === 'string' || data['banDurationSeconds'] instanceof String)) {
            throw new Error("Expected the field `banDurationSeconds` to be a primitive type in the JSON string but got " + data['banDurationSeconds']);
        }
        // validate the optional field `bannedUserDetails`
        if (data['bannedUserDetails']) { // data not null
          ChannelProfileDetails.validateJSON(data['bannedUserDetails']);
        }
        // ensure the json data is a string
        if (data['liveChatId'] && !(typeof data['liveChatId'] === 'string' || data['liveChatId'] instanceof String)) {
            throw new Error("Expected the field `liveChatId` to be a primitive type in the JSON string but got " + data['liveChatId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The duration of a ban, only filled if the ban has type TEMPORARY.
 * @member {String} banDurationSeconds
 */
LiveChatBanSnippet.prototype['banDurationSeconds'] = undefined;

/**
 * @member {module:model/ChannelProfileDetails} bannedUserDetails
 */
LiveChatBanSnippet.prototype['bannedUserDetails'] = undefined;

/**
 * The chat this ban is pertinent to.
 * @member {String} liveChatId
 */
LiveChatBanSnippet.prototype['liveChatId'] = undefined;

/**
 * The type of ban.
 * @member {module:model/LiveChatBanSnippet.TypeEnum} type
 */
LiveChatBanSnippet.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
LiveChatBanSnippet['TypeEnum'] = {

    /**
     * value: "liveChatBanTypeUnspecified"
     * @const
     */
    "liveChatBanTypeUnspecified": "liveChatBanTypeUnspecified",

    /**
     * value: "permanent"
     * @const
     */
    "permanent": "permanent",

    /**
     * value: "temporary"
     * @const
     */
    "temporary": "temporary"
};



export default LiveChatBanSnippet;

