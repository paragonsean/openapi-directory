/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelSectionContentDetails from './ChannelSectionContentDetails';
import ChannelSectionLocalization from './ChannelSectionLocalization';
import ChannelSectionSnippet from './ChannelSectionSnippet';
import ChannelSectionTargeting from './ChannelSectionTargeting';

/**
 * The ChannelSection model module.
 * @module model/ChannelSection
 * @version v3
 */
class ChannelSection {
    /**
     * Constructs a new <code>ChannelSection</code>.
     * @alias module:model/ChannelSection
     */
    constructor() { 
        
        ChannelSection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'youtube#channelSection';
    }

    /**
     * Constructs a <code>ChannelSection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelSection} obj Optional instance to populate.
     * @return {module:model/ChannelSection} The populated <code>ChannelSection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelSection();

            if (data.hasOwnProperty('contentDetails')) {
                obj['contentDetails'] = ChannelSectionContentDetails.constructFromObject(data['contentDetails']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('localizations')) {
                obj['localizations'] = ApiClient.convertToType(data['localizations'], {'String': ChannelSectionLocalization});
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = ChannelSectionSnippet.constructFromObject(data['snippet']);
            }
            if (data.hasOwnProperty('targeting')) {
                obj['targeting'] = ChannelSectionTargeting.constructFromObject(data['targeting']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelSection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelSection</code>.
     */
    static validateJSON(data) {
        // validate the optional field `contentDetails`
        if (data['contentDetails']) { // data not null
          ChannelSectionContentDetails.validateJSON(data['contentDetails']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `snippet`
        if (data['snippet']) { // data not null
          ChannelSectionSnippet.validateJSON(data['snippet']);
        }
        // validate the optional field `targeting`
        if (data['targeting']) { // data not null
          ChannelSectionTargeting.validateJSON(data['targeting']);
        }

        return true;
    }


}



/**
 * @member {module:model/ChannelSectionContentDetails} contentDetails
 */
ChannelSection.prototype['contentDetails'] = undefined;

/**
 * Etag of this resource.
 * @member {String} etag
 */
ChannelSection.prototype['etag'] = undefined;

/**
 * The ID that YouTube uses to uniquely identify the channel section.
 * @member {String} id
 */
ChannelSection.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"youtube#channelSection\".
 * @member {String} kind
 * @default 'youtube#channelSection'
 */
ChannelSection.prototype['kind'] = 'youtube#channelSection';

/**
 * Localizations for different languages
 * @member {Object.<String, module:model/ChannelSectionLocalization>} localizations
 */
ChannelSection.prototype['localizations'] = undefined;

/**
 * @member {module:model/ChannelSectionSnippet} snippet
 */
ChannelSection.prototype['snippet'] = undefined;

/**
 * @member {module:model/ChannelSectionTargeting} targeting
 */
ChannelSection.prototype['targeting'] = undefined;






export default ChannelSection;

