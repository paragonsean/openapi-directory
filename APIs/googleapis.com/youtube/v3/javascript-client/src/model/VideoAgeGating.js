/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoAgeGating model module.
 * @module model/VideoAgeGating
 * @version v3
 */
class VideoAgeGating {
    /**
     * Constructs a new <code>VideoAgeGating</code>.
     * @alias module:model/VideoAgeGating
     */
    constructor() { 
        
        VideoAgeGating.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoAgeGating</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoAgeGating} obj Optional instance to populate.
     * @return {module:model/VideoAgeGating} The populated <code>VideoAgeGating</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoAgeGating();

            if (data.hasOwnProperty('alcoholContent')) {
                obj['alcoholContent'] = ApiClient.convertToType(data['alcoholContent'], 'Boolean');
            }
            if (data.hasOwnProperty('restricted')) {
                obj['restricted'] = ApiClient.convertToType(data['restricted'], 'Boolean');
            }
            if (data.hasOwnProperty('videoGameRating')) {
                obj['videoGameRating'] = ApiClient.convertToType(data['videoGameRating'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoAgeGating</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoAgeGating</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['videoGameRating'] && !(typeof data['videoGameRating'] === 'string' || data['videoGameRating'] instanceof String)) {
            throw new Error("Expected the field `videoGameRating` to be a primitive type in the JSON string but got " + data['videoGameRating']);
        }

        return true;
    }


}



/**
 * Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content.
 * @member {Boolean} alcoholContent
 */
VideoAgeGating.prototype['alcoholContent'] = undefined;

/**
 * Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present.
 * @member {Boolean} restricted
 */
VideoAgeGating.prototype['restricted'] = undefined;

/**
 * Video game rating, if any.
 * @member {module:model/VideoAgeGating.VideoGameRatingEnum} videoGameRating
 */
VideoAgeGating.prototype['videoGameRating'] = undefined;





/**
 * Allowed values for the <code>videoGameRating</code> property.
 * @enum {String}
 * @readonly
 */
VideoAgeGating['VideoGameRatingEnum'] = {

    /**
     * value: "anyone"
     * @const
     */
    "anyone": "anyone",

    /**
     * value: "m15Plus"
     * @const
     */
    "m15Plus": "m15Plus",

    /**
     * value: "m16Plus"
     * @const
     */
    "m16Plus": "m16Plus",

    /**
     * value: "m17Plus"
     * @const
     */
    "m17Plus": "m17Plus"
};



export default VideoAgeGating;

