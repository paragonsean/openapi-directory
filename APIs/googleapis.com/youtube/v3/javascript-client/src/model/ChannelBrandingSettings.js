/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelSettings from './ChannelSettings';
import ImageSettings from './ImageSettings';
import PropertyValue from './PropertyValue';
import WatchSettings from './WatchSettings';

/**
 * The ChannelBrandingSettings model module.
 * @module model/ChannelBrandingSettings
 * @version v3
 */
class ChannelBrandingSettings {
    /**
     * Constructs a new <code>ChannelBrandingSettings</code>.
     * Branding properties of a YouTube channel.
     * @alias module:model/ChannelBrandingSettings
     */
    constructor() { 
        
        ChannelBrandingSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelBrandingSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelBrandingSettings} obj Optional instance to populate.
     * @return {module:model/ChannelBrandingSettings} The populated <code>ChannelBrandingSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelBrandingSettings();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ChannelSettings.constructFromObject(data['channel']);
            }
            if (data.hasOwnProperty('hints')) {
                obj['hints'] = ApiClient.convertToType(data['hints'], [PropertyValue]);
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ImageSettings.constructFromObject(data['image']);
            }
            if (data.hasOwnProperty('watch')) {
                obj['watch'] = WatchSettings.constructFromObject(data['watch']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelBrandingSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelBrandingSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `channel`
        if (data['channel']) { // data not null
          ChannelSettings.validateJSON(data['channel']);
        }
        if (data['hints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hints'])) {
                throw new Error("Expected the field `hints` to be an array in the JSON data but got " + data['hints']);
            }
            // validate the optional field `hints` (array)
            for (const item of data['hints']) {
                PropertyValue.validateJSON(item);
            };
        }
        // validate the optional field `image`
        if (data['image']) { // data not null
          ImageSettings.validateJSON(data['image']);
        }
        // validate the optional field `watch`
        if (data['watch']) { // data not null
          WatchSettings.validateJSON(data['watch']);
        }

        return true;
    }


}



/**
 * @member {module:model/ChannelSettings} channel
 */
ChannelBrandingSettings.prototype['channel'] = undefined;

/**
 * Additional experimental branding properties.
 * @member {Array.<module:model/PropertyValue>} hints
 */
ChannelBrandingSettings.prototype['hints'] = undefined;

/**
 * @member {module:model/ImageSettings} image
 */
ChannelBrandingSettings.prototype['image'] = undefined;

/**
 * @member {module:model/WatchSettings} watch
 */
ChannelBrandingSettings.prototype['watch'] = undefined;






export default ChannelBrandingSettings;

