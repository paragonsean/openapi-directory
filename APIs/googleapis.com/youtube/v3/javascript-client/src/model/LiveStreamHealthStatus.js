/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LiveStreamConfigurationIssue from './LiveStreamConfigurationIssue';

/**
 * The LiveStreamHealthStatus model module.
 * @module model/LiveStreamHealthStatus
 * @version v3
 */
class LiveStreamHealthStatus {
    /**
     * Constructs a new <code>LiveStreamHealthStatus</code>.
     * @alias module:model/LiveStreamHealthStatus
     */
    constructor() { 
        
        LiveStreamHealthStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveStreamHealthStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveStreamHealthStatus} obj Optional instance to populate.
     * @return {module:model/LiveStreamHealthStatus} The populated <code>LiveStreamHealthStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveStreamHealthStatus();

            if (data.hasOwnProperty('configurationIssues')) {
                obj['configurationIssues'] = ApiClient.convertToType(data['configurationIssues'], [LiveStreamConfigurationIssue]);
            }
            if (data.hasOwnProperty('lastUpdateTimeSeconds')) {
                obj['lastUpdateTimeSeconds'] = ApiClient.convertToType(data['lastUpdateTimeSeconds'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveStreamHealthStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveStreamHealthStatus</code>.
     */
    static validateJSON(data) {
        if (data['configurationIssues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['configurationIssues'])) {
                throw new Error("Expected the field `configurationIssues` to be an array in the JSON data but got " + data['configurationIssues']);
            }
            // validate the optional field `configurationIssues` (array)
            for (const item of data['configurationIssues']) {
                LiveStreamConfigurationIssue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['lastUpdateTimeSeconds'] && !(typeof data['lastUpdateTimeSeconds'] === 'string' || data['lastUpdateTimeSeconds'] instanceof String)) {
            throw new Error("Expected the field `lastUpdateTimeSeconds` to be a primitive type in the JSON string but got " + data['lastUpdateTimeSeconds']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The configurations issues on this stream
 * @member {Array.<module:model/LiveStreamConfigurationIssue>} configurationIssues
 */
LiveStreamHealthStatus.prototype['configurationIssues'] = undefined;

/**
 * The last time this status was updated (in seconds)
 * @member {String} lastUpdateTimeSeconds
 */
LiveStreamHealthStatus.prototype['lastUpdateTimeSeconds'] = undefined;

/**
 * The status code of this stream
 * @member {module:model/LiveStreamHealthStatus.StatusEnum} status
 */
LiveStreamHealthStatus.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
LiveStreamHealthStatus['StatusEnum'] = {

    /**
     * value: "good"
     * @const
     */
    "good": "good",

    /**
     * value: "ok"
     * @const
     */
    "ok": "ok",

    /**
     * value: "bad"
     * @const
     */
    "bad": "bad",

    /**
     * value: "noData"
     * @const
     */
    "noData": "noData",

    /**
     * value: "revoked"
     * @const
     */
    "revoked": "revoked"
};



export default LiveStreamHealthStatus;

