/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionContentDetails model module.
 * @module model/SubscriptionContentDetails
 * @version v3
 */
class SubscriptionContentDetails {
    /**
     * Constructs a new <code>SubscriptionContentDetails</code>.
     * Details about the content to witch a subscription refers.
     * @alias module:model/SubscriptionContentDetails
     */
    constructor() { 
        
        SubscriptionContentDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionContentDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionContentDetails} obj Optional instance to populate.
     * @return {module:model/SubscriptionContentDetails} The populated <code>SubscriptionContentDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionContentDetails();

            if (data.hasOwnProperty('activityType')) {
                obj['activityType'] = ApiClient.convertToType(data['activityType'], 'String');
            }
            if (data.hasOwnProperty('newItemCount')) {
                obj['newItemCount'] = ApiClient.convertToType(data['newItemCount'], 'Number');
            }
            if (data.hasOwnProperty('totalItemCount')) {
                obj['totalItemCount'] = ApiClient.convertToType(data['totalItemCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionContentDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionContentDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activityType'] && !(typeof data['activityType'] === 'string' || data['activityType'] instanceof String)) {
            throw new Error("Expected the field `activityType` to be a primitive type in the JSON string but got " + data['activityType']);
        }

        return true;
    }


}



/**
 * The type of activity this subscription is for (only uploads, everything).
 * @member {module:model/SubscriptionContentDetails.ActivityTypeEnum} activityType
 */
SubscriptionContentDetails.prototype['activityType'] = undefined;

/**
 * The number of new items in the subscription since its content was last read.
 * @member {Number} newItemCount
 */
SubscriptionContentDetails.prototype['newItemCount'] = undefined;

/**
 * The approximate number of items that the subscription points to.
 * @member {Number} totalItemCount
 */
SubscriptionContentDetails.prototype['totalItemCount'] = undefined;





/**
 * Allowed values for the <code>activityType</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionContentDetails['ActivityTypeEnum'] = {

    /**
     * value: "subscriptionActivityTypeUnspecified"
     * @const
     */
    "subscriptionActivityTypeUnspecified": "subscriptionActivityTypeUnspecified",

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "uploads"
     * @const
     */
    "uploads": "uploads"
};



export default SubscriptionContentDetails;

