/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LiveStreamHealthStatus from './LiveStreamHealthStatus';

/**
 * The LiveStreamStatus model module.
 * @module model/LiveStreamStatus
 * @version v3
 */
class LiveStreamStatus {
    /**
     * Constructs a new <code>LiveStreamStatus</code>.
     * Brief description of the live stream status.
     * @alias module:model/LiveStreamStatus
     */
    constructor() { 
        
        LiveStreamStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LiveStreamStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveStreamStatus} obj Optional instance to populate.
     * @return {module:model/LiveStreamStatus} The populated <code>LiveStreamStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveStreamStatus();

            if (data.hasOwnProperty('healthStatus')) {
                obj['healthStatus'] = LiveStreamHealthStatus.constructFromObject(data['healthStatus']);
            }
            if (data.hasOwnProperty('streamStatus')) {
                obj['streamStatus'] = ApiClient.convertToType(data['streamStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveStreamStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveStreamStatus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `healthStatus`
        if (data['healthStatus']) { // data not null
          LiveStreamHealthStatus.validateJSON(data['healthStatus']);
        }
        // ensure the json data is a string
        if (data['streamStatus'] && !(typeof data['streamStatus'] === 'string' || data['streamStatus'] instanceof String)) {
            throw new Error("Expected the field `streamStatus` to be a primitive type in the JSON string but got " + data['streamStatus']);
        }

        return true;
    }


}



/**
 * @member {module:model/LiveStreamHealthStatus} healthStatus
 */
LiveStreamStatus.prototype['healthStatus'] = undefined;

/**
 * @member {module:model/LiveStreamStatus.StreamStatusEnum} streamStatus
 */
LiveStreamStatus.prototype['streamStatus'] = undefined;





/**
 * Allowed values for the <code>streamStatus</code> property.
 * @enum {String}
 * @readonly
 */
LiveStreamStatus['StreamStatusEnum'] = {

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "ready"
     * @const
     */
    "ready": "ready",

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "error"
     * @const
     */
    "error": "error"
};



export default LiveStreamStatus;

