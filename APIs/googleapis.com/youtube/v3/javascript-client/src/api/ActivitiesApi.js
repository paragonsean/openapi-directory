/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActivityListResponse from '../model/ActivityListResponse';

/**
* Activities service.
* @module api/ActivitiesApi
* @version v3
*/
export default class ActivitiesApi {

    /**
    * Constructs a new ActivitiesApi. 
    * @alias module:api/ActivitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the youtubeActivitiesList operation.
     * @callback module:api/ActivitiesApi~youtubeActivitiesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivityListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of resources, possibly filtered.
     * @param {Array.<String>} part The *part* parameter specifies a comma-separated list of one or more activity resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set *part=snippet*, the API response will also contain all of those nested properties.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [channelId] 
     * @param {Boolean} [home] 
     * @param {Number} [maxResults] The *maxResults* parameter specifies the maximum number of items that should be returned in the result set.
     * @param {Boolean} [mine] 
     * @param {String} [pageToken] The *pageToken* parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.
     * @param {String} [publishedAfter] 
     * @param {String} [publishedBefore] 
     * @param {String} [regionCode] 
     * @param {module:api/ActivitiesApi~youtubeActivitiesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivityListResponse}
     */
    youtubeActivitiesList(part, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'part' is set
      if (part === undefined || part === null) {
        throw new Error("Missing the required parameter 'part' when calling youtubeActivitiesList");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'part': this.apiClient.buildCollectionParam(part, 'multi'),
        'channelId': opts['channelId'],
        'home': opts['home'],
        'maxResults': opts['maxResults'],
        'mine': opts['mine'],
        'pageToken': opts['pageToken'],
        'publishedAfter': opts['publishedAfter'],
        'publishedBefore': opts['publishedBefore'],
        'regionCode': opts['regionCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActivityListResponse;
      return this.apiClient.callApi(
        '/youtube/v3/activities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
