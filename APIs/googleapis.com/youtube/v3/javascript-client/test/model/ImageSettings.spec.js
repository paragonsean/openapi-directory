/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YouTubeDataApiV3);
  }
}(this, function(expect, YouTubeDataApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new YouTubeDataApiV3.ImageSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ImageSettings', function() {
    it('should create an instance of ImageSettings', function() {
      // uncomment below and update the code to test ImageSettings
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be.a(YouTubeDataApiV3.ImageSettings);
    });

    it('should have the property backgroundImageUrl (base name: "backgroundImageUrl")', function() {
      // uncomment below and update the code to test the property backgroundImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerExternalUrl (base name: "bannerExternalUrl")', function() {
      // uncomment below and update the code to test the property bannerExternalUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerImageUrl (base name: "bannerImageUrl")', function() {
      // uncomment below and update the code to test the property bannerImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerMobileExtraHdImageUrl (base name: "bannerMobileExtraHdImageUrl")', function() {
      // uncomment below and update the code to test the property bannerMobileExtraHdImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerMobileHdImageUrl (base name: "bannerMobileHdImageUrl")', function() {
      // uncomment below and update the code to test the property bannerMobileHdImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerMobileImageUrl (base name: "bannerMobileImageUrl")', function() {
      // uncomment below and update the code to test the property bannerMobileImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerMobileLowImageUrl (base name: "bannerMobileLowImageUrl")', function() {
      // uncomment below and update the code to test the property bannerMobileLowImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerMobileMediumHdImageUrl (base name: "bannerMobileMediumHdImageUrl")', function() {
      // uncomment below and update the code to test the property bannerMobileMediumHdImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTabletExtraHdImageUrl (base name: "bannerTabletExtraHdImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTabletExtraHdImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTabletHdImageUrl (base name: "bannerTabletHdImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTabletHdImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTabletImageUrl (base name: "bannerTabletImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTabletImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTabletLowImageUrl (base name: "bannerTabletLowImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTabletLowImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTvHighImageUrl (base name: "bannerTvHighImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTvHighImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTvImageUrl (base name: "bannerTvImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTvImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTvLowImageUrl (base name: "bannerTvLowImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTvLowImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property bannerTvMediumImageUrl (base name: "bannerTvMediumImageUrl")', function() {
      // uncomment below and update the code to test the property bannerTvMediumImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property largeBrandedBannerImageImapScript (base name: "largeBrandedBannerImageImapScript")', function() {
      // uncomment below and update the code to test the property largeBrandedBannerImageImapScript
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property largeBrandedBannerImageUrl (base name: "largeBrandedBannerImageUrl")', function() {
      // uncomment below and update the code to test the property largeBrandedBannerImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property smallBrandedBannerImageImapScript (base name: "smallBrandedBannerImageImapScript")', function() {
      // uncomment below and update the code to test the property smallBrandedBannerImageImapScript
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property smallBrandedBannerImageUrl (base name: "smallBrandedBannerImageUrl")', function() {
      // uncomment below and update the code to test the property smallBrandedBannerImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property trackingImageUrl (base name: "trackingImageUrl")', function() {
      // uncomment below and update the code to test the property trackingImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

    it('should have the property watchIconImageUrl (base name: "watchIconImageUrl")', function() {
      // uncomment below and update the code to test the property watchIconImageUrl
      //var instance = new YouTubeDataApiV3.ImageSettings();
      //expect(instance).to.be();
    });

  });

}));
