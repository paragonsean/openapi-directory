/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YouTubeDataApiV3);
  }
}(this, function(expect, YouTubeDataApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LiveBroadcastContentDetails', function() {
    it('should create an instance of LiveBroadcastContentDetails', function() {
      // uncomment below and update the code to test LiveBroadcastContentDetails
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be.a(YouTubeDataApiV3.LiveBroadcastContentDetails);
    });

    it('should have the property boundStreamId (base name: "boundStreamId")', function() {
      // uncomment below and update the code to test the property boundStreamId
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property boundStreamLastUpdateTimeMs (base name: "boundStreamLastUpdateTimeMs")', function() {
      // uncomment below and update the code to test the property boundStreamLastUpdateTimeMs
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property closedCaptionsType (base name: "closedCaptionsType")', function() {
      // uncomment below and update the code to test the property closedCaptionsType
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableAutoStart (base name: "enableAutoStart")', function() {
      // uncomment below and update the code to test the property enableAutoStart
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableAutoStop (base name: "enableAutoStop")', function() {
      // uncomment below and update the code to test the property enableAutoStop
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableClosedCaptions (base name: "enableClosedCaptions")', function() {
      // uncomment below and update the code to test the property enableClosedCaptions
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableContentEncryption (base name: "enableContentEncryption")', function() {
      // uncomment below and update the code to test the property enableContentEncryption
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableDvr (base name: "enableDvr")', function() {
      // uncomment below and update the code to test the property enableDvr
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableEmbed (base name: "enableEmbed")', function() {
      // uncomment below and update the code to test the property enableEmbed
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property enableLowLatency (base name: "enableLowLatency")', function() {
      // uncomment below and update the code to test the property enableLowLatency
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property latencyPreference (base name: "latencyPreference")', function() {
      // uncomment below and update the code to test the property latencyPreference
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property mesh (base name: "mesh")', function() {
      // uncomment below and update the code to test the property mesh
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property monitorStream (base name: "monitorStream")', function() {
      // uncomment below and update the code to test the property monitorStream
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property projection (base name: "projection")', function() {
      // uncomment below and update the code to test the property projection
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property recordFromStart (base name: "recordFromStart")', function() {
      // uncomment below and update the code to test the property recordFromStart
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property startWithSlate (base name: "startWithSlate")', function() {
      // uncomment below and update the code to test the property startWithSlate
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

    it('should have the property stereoLayout (base name: "stereoLayout")', function() {
      // uncomment below and update the code to test the property stereoLayout
      //var instance = new YouTubeDataApiV3.LiveBroadcastContentDetails();
      //expect(instance).to.be();
    });

  });

}));
