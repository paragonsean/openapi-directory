# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelContentDetailsRelatedPlaylists(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, favorites: str=None, likes: str=None, uploads: str=None, watch_history: str=None, watch_later: str=None):
        """ChannelContentDetailsRelatedPlaylists - a model defined in OpenAPI

        :param favorites: The favorites of this ChannelContentDetailsRelatedPlaylists.
        :param likes: The likes of this ChannelContentDetailsRelatedPlaylists.
        :param uploads: The uploads of this ChannelContentDetailsRelatedPlaylists.
        :param watch_history: The watch_history of this ChannelContentDetailsRelatedPlaylists.
        :param watch_later: The watch_later of this ChannelContentDetailsRelatedPlaylists.
        """
        self.openapi_types = {
            'favorites': str,
            'likes': str,
            'uploads': str,
            'watch_history': str,
            'watch_later': str
        }

        self.attribute_map = {
            'favorites': 'favorites',
            'likes': 'likes',
            'uploads': 'uploads',
            'watch_history': 'watchHistory',
            'watch_later': 'watchLater'
        }

        self._favorites = favorites
        self._likes = likes
        self._uploads = uploads
        self._watch_history = watch_history
        self._watch_later = watch_later

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelContentDetailsRelatedPlaylists':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelContentDetails_relatedPlaylists of this ChannelContentDetailsRelatedPlaylists.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def favorites(self):
        """Gets the favorites of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :return: The favorites of this ChannelContentDetailsRelatedPlaylists.
        :rtype: str
        """
        return self._favorites

    @favorites.setter
    def favorites(self, favorites):
        """Sets the favorites of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :param favorites: The favorites of this ChannelContentDetailsRelatedPlaylists.
        :type favorites: str
        """

        self._favorites = favorites

    @property
    def likes(self):
        """Gets the likes of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :return: The likes of this ChannelContentDetailsRelatedPlaylists.
        :rtype: str
        """
        return self._likes

    @likes.setter
    def likes(self, likes):
        """Sets the likes of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :param likes: The likes of this ChannelContentDetailsRelatedPlaylists.
        :type likes: str
        """

        self._likes = likes

    @property
    def uploads(self):
        """Gets the uploads of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.

        :return: The uploads of this ChannelContentDetailsRelatedPlaylists.
        :rtype: str
        """
        return self._uploads

    @uploads.setter
    def uploads(self, uploads):
        """Sets the uploads of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.

        :param uploads: The uploads of this ChannelContentDetailsRelatedPlaylists.
        :type uploads: str
        """

        self._uploads = uploads

    @property
    def watch_history(self):
        """Gets the watch_history of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :return: The watch_history of this ChannelContentDetailsRelatedPlaylists.
        :rtype: str
        """
        return self._watch_history

    @watch_history.setter
    def watch_history(self, watch_history):
        """Sets the watch_history of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :param watch_history: The watch_history of this ChannelContentDetailsRelatedPlaylists.
        :type watch_history: str
        """

        self._watch_history = watch_history

    @property
    def watch_later(self):
        """Gets the watch_later of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :return: The watch_later of this ChannelContentDetailsRelatedPlaylists.
        :rtype: str
        """
        return self._watch_later

    @watch_later.setter
    def watch_later(self, watch_later):
        """Sets the watch_later of this ChannelContentDetailsRelatedPlaylists.

        The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.

        :param watch_later: The watch_later of this ChannelContentDetailsRelatedPlaylists.
        :type watch_later: str
        """

        self._watch_later = watch_later
