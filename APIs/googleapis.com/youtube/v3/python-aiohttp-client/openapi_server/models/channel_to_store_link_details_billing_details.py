# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelToStoreLinkDetailsBillingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_status: str=None):
        """ChannelToStoreLinkDetailsBillingDetails - a model defined in OpenAPI

        :param billing_status: The billing_status of this ChannelToStoreLinkDetailsBillingDetails.
        """
        self.openapi_types = {
            'billing_status': str
        }

        self.attribute_map = {
            'billing_status': 'billingStatus'
        }

        self._billing_status = billing_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelToStoreLinkDetailsBillingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelToStoreLinkDetailsBillingDetails of this ChannelToStoreLinkDetailsBillingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_status(self):
        """Gets the billing_status of this ChannelToStoreLinkDetailsBillingDetails.

        The current billing profile status.

        :return: The billing_status of this ChannelToStoreLinkDetailsBillingDetails.
        :rtype: str
        """
        return self._billing_status

    @billing_status.setter
    def billing_status(self, billing_status):
        """Sets the billing_status of this ChannelToStoreLinkDetailsBillingDetails.

        The current billing profile status.

        :param billing_status: The billing_status of this ChannelToStoreLinkDetailsBillingDetails.
        :type billing_status: str
        """
        allowed_values = ["billingStatusUnspecified", "billingStatusPending", "billingStatusActive", "billingStatusInactive"]  # noqa: E501
        if billing_status not in allowed_values:
            raise ValueError(
                "Invalid value for `billing_status` ({0}), must be one of {1}"
                .format(billing_status, allowed_values)
            )

        self._billing_status = billing_status
