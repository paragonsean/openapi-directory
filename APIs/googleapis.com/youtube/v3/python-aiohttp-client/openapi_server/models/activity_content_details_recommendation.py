# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_id import ResourceId
from openapi_server import util


class ActivityContentDetailsRecommendation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reason: str=None, resource_id: ResourceId=None, seed_resource_id: ResourceId=None):
        """ActivityContentDetailsRecommendation - a model defined in OpenAPI

        :param reason: The reason of this ActivityContentDetailsRecommendation.
        :param resource_id: The resource_id of this ActivityContentDetailsRecommendation.
        :param seed_resource_id: The seed_resource_id of this ActivityContentDetailsRecommendation.
        """
        self.openapi_types = {
            'reason': str,
            'resource_id': ResourceId,
            'seed_resource_id': ResourceId
        }

        self.attribute_map = {
            'reason': 'reason',
            'resource_id': 'resourceId',
            'seed_resource_id': 'seedResourceId'
        }

        self._reason = reason
        self._resource_id = resource_id
        self._seed_resource_id = seed_resource_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityContentDetailsRecommendation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityContentDetailsRecommendation of this ActivityContentDetailsRecommendation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reason(self):
        """Gets the reason of this ActivityContentDetailsRecommendation.

        The reason that the resource is recommended to the user.

        :return: The reason of this ActivityContentDetailsRecommendation.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this ActivityContentDetailsRecommendation.

        The reason that the resource is recommended to the user.

        :param reason: The reason of this ActivityContentDetailsRecommendation.
        :type reason: str
        """
        allowed_values = ["reasonUnspecified", "videoFavorited", "videoLiked", "videoWatched"]  # noqa: E501
        if reason not in allowed_values:
            raise ValueError(
                "Invalid value for `reason` ({0}), must be one of {1}"
                .format(reason, allowed_values)
            )

        self._reason = reason

    @property
    def resource_id(self):
        """Gets the resource_id of this ActivityContentDetailsRecommendation.


        :return: The resource_id of this ActivityContentDetailsRecommendation.
        :rtype: ResourceId
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ActivityContentDetailsRecommendation.


        :param resource_id: The resource_id of this ActivityContentDetailsRecommendation.
        :type resource_id: ResourceId
        """

        self._resource_id = resource_id

    @property
    def seed_resource_id(self):
        """Gets the seed_resource_id of this ActivityContentDetailsRecommendation.


        :return: The seed_resource_id of this ActivityContentDetailsRecommendation.
        :rtype: ResourceId
        """
        return self._seed_resource_id

    @seed_resource_id.setter
    def seed_resource_id(self, seed_resource_id):
        """Sets the seed_resource_id of this ActivityContentDetailsRecommendation.


        :param seed_resource_id: The seed_resource_id of this ActivityContentDetailsRecommendation.
        :type seed_resource_id: ResourceId
        """

        self._seed_resource_id = seed_resource_id
