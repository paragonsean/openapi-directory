# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelTopicDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, topic_categories: List[str]=None, topic_ids: List[str]=None):
        """ChannelTopicDetails - a model defined in OpenAPI

        :param topic_categories: The topic_categories of this ChannelTopicDetails.
        :param topic_ids: The topic_ids of this ChannelTopicDetails.
        """
        self.openapi_types = {
            'topic_categories': List[str],
            'topic_ids': List[str]
        }

        self.attribute_map = {
            'topic_categories': 'topicCategories',
            'topic_ids': 'topicIds'
        }

        self._topic_categories = topic_categories
        self._topic_ids = topic_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelTopicDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelTopicDetails of this ChannelTopicDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def topic_categories(self):
        """Gets the topic_categories of this ChannelTopicDetails.

        A list of Wikipedia URLs that describe the channel's content.

        :return: The topic_categories of this ChannelTopicDetails.
        :rtype: List[str]
        """
        return self._topic_categories

    @topic_categories.setter
    def topic_categories(self, topic_categories):
        """Sets the topic_categories of this ChannelTopicDetails.

        A list of Wikipedia URLs that describe the channel's content.

        :param topic_categories: The topic_categories of this ChannelTopicDetails.
        :type topic_categories: List[str]
        """

        self._topic_categories = topic_categories

    @property
    def topic_ids(self):
        """Gets the topic_ids of this ChannelTopicDetails.

        A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.

        :return: The topic_ids of this ChannelTopicDetails.
        :rtype: List[str]
        """
        return self._topic_ids

    @topic_ids.setter
    def topic_ids(self, topic_ids):
        """Sets the topic_ids of this ChannelTopicDetails.

        A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.

        :param topic_ids: The topic_ids of this ChannelTopicDetails.
        :type topic_ids: List[str]
        """

        self._topic_ids = topic_ids
