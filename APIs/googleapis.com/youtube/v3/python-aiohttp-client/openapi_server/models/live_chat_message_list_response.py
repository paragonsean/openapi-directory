# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.live_chat_message import LiveChatMessage
from openapi_server.models.page_info import PageInfo
from openapi_server import util


class LiveChatMessageListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, event_id: str=None, items: List[LiveChatMessage]=None, kind: str='youtube#liveChatMessageListResponse', next_page_token: str=None, offline_at: datetime=None, page_info: PageInfo=None, polling_interval_millis: int=None, token_pagination: object=None, visitor_id: str=None):
        """LiveChatMessageListResponse - a model defined in OpenAPI

        :param etag: The etag of this LiveChatMessageListResponse.
        :param event_id: The event_id of this LiveChatMessageListResponse.
        :param items: The items of this LiveChatMessageListResponse.
        :param kind: The kind of this LiveChatMessageListResponse.
        :param next_page_token: The next_page_token of this LiveChatMessageListResponse.
        :param offline_at: The offline_at of this LiveChatMessageListResponse.
        :param page_info: The page_info of this LiveChatMessageListResponse.
        :param polling_interval_millis: The polling_interval_millis of this LiveChatMessageListResponse.
        :param token_pagination: The token_pagination of this LiveChatMessageListResponse.
        :param visitor_id: The visitor_id of this LiveChatMessageListResponse.
        """
        self.openapi_types = {
            'etag': str,
            'event_id': str,
            'items': List[LiveChatMessage],
            'kind': str,
            'next_page_token': str,
            'offline_at': datetime,
            'page_info': PageInfo,
            'polling_interval_millis': int,
            'token_pagination': object,
            'visitor_id': str
        }

        self.attribute_map = {
            'etag': 'etag',
            'event_id': 'eventId',
            'items': 'items',
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'offline_at': 'offlineAt',
            'page_info': 'pageInfo',
            'polling_interval_millis': 'pollingIntervalMillis',
            'token_pagination': 'tokenPagination',
            'visitor_id': 'visitorId'
        }

        self._etag = etag
        self._event_id = event_id
        self._items = items
        self._kind = kind
        self._next_page_token = next_page_token
        self._offline_at = offline_at
        self._page_info = page_info
        self._polling_interval_millis = polling_interval_millis
        self._token_pagination = token_pagination
        self._visitor_id = visitor_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveChatMessageListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveChatMessageListResponse of this LiveChatMessageListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this LiveChatMessageListResponse.

        Etag of this resource.

        :return: The etag of this LiveChatMessageListResponse.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this LiveChatMessageListResponse.

        Etag of this resource.

        :param etag: The etag of this LiveChatMessageListResponse.
        :type etag: str
        """

        self._etag = etag

    @property
    def event_id(self):
        """Gets the event_id of this LiveChatMessageListResponse.

        Serialized EventId of the request which produced this response.

        :return: The event_id of this LiveChatMessageListResponse.
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this LiveChatMessageListResponse.

        Serialized EventId of the request which produced this response.

        :param event_id: The event_id of this LiveChatMessageListResponse.
        :type event_id: str
        """

        self._event_id = event_id

    @property
    def items(self):
        """Gets the items of this LiveChatMessageListResponse.


        :return: The items of this LiveChatMessageListResponse.
        :rtype: List[LiveChatMessage]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this LiveChatMessageListResponse.


        :param items: The items of this LiveChatMessageListResponse.
        :type items: List[LiveChatMessage]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this LiveChatMessageListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"youtube#liveChatMessageListResponse\".

        :return: The kind of this LiveChatMessageListResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this LiveChatMessageListResponse.

        Identifies what kind of resource this is. Value: the fixed string \"youtube#liveChatMessageListResponse\".

        :param kind: The kind of this LiveChatMessageListResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this LiveChatMessageListResponse.


        :return: The next_page_token of this LiveChatMessageListResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this LiveChatMessageListResponse.


        :param next_page_token: The next_page_token of this LiveChatMessageListResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def offline_at(self):
        """Gets the offline_at of this LiveChatMessageListResponse.

        The date and time when the underlying stream went offline.

        :return: The offline_at of this LiveChatMessageListResponse.
        :rtype: datetime
        """
        return self._offline_at

    @offline_at.setter
    def offline_at(self, offline_at):
        """Sets the offline_at of this LiveChatMessageListResponse.

        The date and time when the underlying stream went offline.

        :param offline_at: The offline_at of this LiveChatMessageListResponse.
        :type offline_at: datetime
        """

        self._offline_at = offline_at

    @property
    def page_info(self):
        """Gets the page_info of this LiveChatMessageListResponse.


        :return: The page_info of this LiveChatMessageListResponse.
        :rtype: PageInfo
        """
        return self._page_info

    @page_info.setter
    def page_info(self, page_info):
        """Sets the page_info of this LiveChatMessageListResponse.


        :param page_info: The page_info of this LiveChatMessageListResponse.
        :type page_info: PageInfo
        """

        self._page_info = page_info

    @property
    def polling_interval_millis(self):
        """Gets the polling_interval_millis of this LiveChatMessageListResponse.

        The amount of time the client should wait before polling again.

        :return: The polling_interval_millis of this LiveChatMessageListResponse.
        :rtype: int
        """
        return self._polling_interval_millis

    @polling_interval_millis.setter
    def polling_interval_millis(self, polling_interval_millis):
        """Sets the polling_interval_millis of this LiveChatMessageListResponse.

        The amount of time the client should wait before polling again.

        :param polling_interval_millis: The polling_interval_millis of this LiveChatMessageListResponse.
        :type polling_interval_millis: int
        """

        self._polling_interval_millis = polling_interval_millis

    @property
    def token_pagination(self):
        """Gets the token_pagination of this LiveChatMessageListResponse.

        Stub token pagination template to suppress results.

        :return: The token_pagination of this LiveChatMessageListResponse.
        :rtype: object
        """
        return self._token_pagination

    @token_pagination.setter
    def token_pagination(self, token_pagination):
        """Sets the token_pagination of this LiveChatMessageListResponse.

        Stub token pagination template to suppress results.

        :param token_pagination: The token_pagination of this LiveChatMessageListResponse.
        :type token_pagination: object
        """

        self._token_pagination = token_pagination

    @property
    def visitor_id(self):
        """Gets the visitor_id of this LiveChatMessageListResponse.

        The visitorId identifies the visitor.

        :return: The visitor_id of this LiveChatMessageListResponse.
        :rtype: str
        """
        return self._visitor_id

    @visitor_id.setter
    def visitor_id(self, visitor_id):
        """Sets the visitor_id of this LiveChatMessageListResponse.

        The visitorId identifies the visitor.

        :param visitor_id: The visitor_id of this LiveChatMessageListResponse.
        :type visitor_id: str
        """

        self._visitor_id = visitor_id
