# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_localization import ChannelLocalization
from openapi_server.models.thumbnail_details import ThumbnailDetails
from openapi_server import util


class ChannelSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, custom_url: str=None, default_language: str=None, description: str=None, localized: ChannelLocalization=None, published_at: datetime=None, thumbnails: ThumbnailDetails=None, title: str=None):
        """ChannelSnippet - a model defined in OpenAPI

        :param country: The country of this ChannelSnippet.
        :param custom_url: The custom_url of this ChannelSnippet.
        :param default_language: The default_language of this ChannelSnippet.
        :param description: The description of this ChannelSnippet.
        :param localized: The localized of this ChannelSnippet.
        :param published_at: The published_at of this ChannelSnippet.
        :param thumbnails: The thumbnails of this ChannelSnippet.
        :param title: The title of this ChannelSnippet.
        """
        self.openapi_types = {
            'country': str,
            'custom_url': str,
            'default_language': str,
            'description': str,
            'localized': ChannelLocalization,
            'published_at': datetime,
            'thumbnails': ThumbnailDetails,
            'title': str
        }

        self.attribute_map = {
            'country': 'country',
            'custom_url': 'customUrl',
            'default_language': 'defaultLanguage',
            'description': 'description',
            'localized': 'localized',
            'published_at': 'publishedAt',
            'thumbnails': 'thumbnails',
            'title': 'title'
        }

        self._country = country
        self._custom_url = custom_url
        self._default_language = default_language
        self._description = description
        self._localized = localized
        self._published_at = published_at
        self._thumbnails = thumbnails
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelSnippet of this ChannelSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this ChannelSnippet.

        The country of the channel.

        :return: The country of this ChannelSnippet.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ChannelSnippet.

        The country of the channel.

        :param country: The country of this ChannelSnippet.
        :type country: str
        """

        self._country = country

    @property
    def custom_url(self):
        """Gets the custom_url of this ChannelSnippet.

        The custom url of the channel.

        :return: The custom_url of this ChannelSnippet.
        :rtype: str
        """
        return self._custom_url

    @custom_url.setter
    def custom_url(self, custom_url):
        """Sets the custom_url of this ChannelSnippet.

        The custom url of the channel.

        :param custom_url: The custom_url of this ChannelSnippet.
        :type custom_url: str
        """

        self._custom_url = custom_url

    @property
    def default_language(self):
        """Gets the default_language of this ChannelSnippet.

        The language of the channel's default title and description.

        :return: The default_language of this ChannelSnippet.
        :rtype: str
        """
        return self._default_language

    @default_language.setter
    def default_language(self, default_language):
        """Sets the default_language of this ChannelSnippet.

        The language of the channel's default title and description.

        :param default_language: The default_language of this ChannelSnippet.
        :type default_language: str
        """

        self._default_language = default_language

    @property
    def description(self):
        """Gets the description of this ChannelSnippet.

        The description of the channel.

        :return: The description of this ChannelSnippet.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChannelSnippet.

        The description of the channel.

        :param description: The description of this ChannelSnippet.
        :type description: str
        """

        self._description = description

    @property
    def localized(self):
        """Gets the localized of this ChannelSnippet.


        :return: The localized of this ChannelSnippet.
        :rtype: ChannelLocalization
        """
        return self._localized

    @localized.setter
    def localized(self, localized):
        """Sets the localized of this ChannelSnippet.


        :param localized: The localized of this ChannelSnippet.
        :type localized: ChannelLocalization
        """

        self._localized = localized

    @property
    def published_at(self):
        """Gets the published_at of this ChannelSnippet.

        The date and time that the channel was created.

        :return: The published_at of this ChannelSnippet.
        :rtype: datetime
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at):
        """Sets the published_at of this ChannelSnippet.

        The date and time that the channel was created.

        :param published_at: The published_at of this ChannelSnippet.
        :type published_at: datetime
        """

        self._published_at = published_at

    @property
    def thumbnails(self):
        """Gets the thumbnails of this ChannelSnippet.


        :return: The thumbnails of this ChannelSnippet.
        :rtype: ThumbnailDetails
        """
        return self._thumbnails

    @thumbnails.setter
    def thumbnails(self, thumbnails):
        """Sets the thumbnails of this ChannelSnippet.


        :param thumbnails: The thumbnails of this ChannelSnippet.
        :type thumbnails: ThumbnailDetails
        """

        self._thumbnails = thumbnails

    @property
    def title(self):
        """Gets the title of this ChannelSnippet.

        The channel's title.

        :return: The title of this ChannelSnippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ChannelSnippet.

        The channel's title.

        :param title: The title of this ChannelSnippet.
        :type title: str
        """

        self._title = title
