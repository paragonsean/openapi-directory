# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_id import ResourceId
from openapi_server.models.thumbnail_details import ThumbnailDetails
from openapi_server import util


class PlaylistItemSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_id: str=None, channel_title: str=None, description: str=None, playlist_id: str=None, position: int=None, published_at: datetime=None, resource_id: ResourceId=None, thumbnails: ThumbnailDetails=None, title: str=None, video_owner_channel_id: str=None, video_owner_channel_title: str=None):
        """PlaylistItemSnippet - a model defined in OpenAPI

        :param channel_id: The channel_id of this PlaylistItemSnippet.
        :param channel_title: The channel_title of this PlaylistItemSnippet.
        :param description: The description of this PlaylistItemSnippet.
        :param playlist_id: The playlist_id of this PlaylistItemSnippet.
        :param position: The position of this PlaylistItemSnippet.
        :param published_at: The published_at of this PlaylistItemSnippet.
        :param resource_id: The resource_id of this PlaylistItemSnippet.
        :param thumbnails: The thumbnails of this PlaylistItemSnippet.
        :param title: The title of this PlaylistItemSnippet.
        :param video_owner_channel_id: The video_owner_channel_id of this PlaylistItemSnippet.
        :param video_owner_channel_title: The video_owner_channel_title of this PlaylistItemSnippet.
        """
        self.openapi_types = {
            'channel_id': str,
            'channel_title': str,
            'description': str,
            'playlist_id': str,
            'position': int,
            'published_at': datetime,
            'resource_id': ResourceId,
            'thumbnails': ThumbnailDetails,
            'title': str,
            'video_owner_channel_id': str,
            'video_owner_channel_title': str
        }

        self.attribute_map = {
            'channel_id': 'channelId',
            'channel_title': 'channelTitle',
            'description': 'description',
            'playlist_id': 'playlistId',
            'position': 'position',
            'published_at': 'publishedAt',
            'resource_id': 'resourceId',
            'thumbnails': 'thumbnails',
            'title': 'title',
            'video_owner_channel_id': 'videoOwnerChannelId',
            'video_owner_channel_title': 'videoOwnerChannelTitle'
        }

        self._channel_id = channel_id
        self._channel_title = channel_title
        self._description = description
        self._playlist_id = playlist_id
        self._position = position
        self._published_at = published_at
        self._resource_id = resource_id
        self._thumbnails = thumbnails
        self._title = title
        self._video_owner_channel_id = video_owner_channel_id
        self._video_owner_channel_title = video_owner_channel_title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaylistItemSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaylistItemSnippet of this PlaylistItemSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_id(self):
        """Gets the channel_id of this PlaylistItemSnippet.

        The ID that YouTube uses to uniquely identify the user that added the item to the playlist.

        :return: The channel_id of this PlaylistItemSnippet.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this PlaylistItemSnippet.

        The ID that YouTube uses to uniquely identify the user that added the item to the playlist.

        :param channel_id: The channel_id of this PlaylistItemSnippet.
        :type channel_id: str
        """

        self._channel_id = channel_id

    @property
    def channel_title(self):
        """Gets the channel_title of this PlaylistItemSnippet.

        Channel title for the channel that the playlist item belongs to.

        :return: The channel_title of this PlaylistItemSnippet.
        :rtype: str
        """
        return self._channel_title

    @channel_title.setter
    def channel_title(self, channel_title):
        """Sets the channel_title of this PlaylistItemSnippet.

        Channel title for the channel that the playlist item belongs to.

        :param channel_title: The channel_title of this PlaylistItemSnippet.
        :type channel_title: str
        """

        self._channel_title = channel_title

    @property
    def description(self):
        """Gets the description of this PlaylistItemSnippet.

        The item's description.

        :return: The description of this PlaylistItemSnippet.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PlaylistItemSnippet.

        The item's description.

        :param description: The description of this PlaylistItemSnippet.
        :type description: str
        """

        self._description = description

    @property
    def playlist_id(self):
        """Gets the playlist_id of this PlaylistItemSnippet.

        The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in.

        :return: The playlist_id of this PlaylistItemSnippet.
        :rtype: str
        """
        return self._playlist_id

    @playlist_id.setter
    def playlist_id(self, playlist_id):
        """Sets the playlist_id of this PlaylistItemSnippet.

        The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in.

        :param playlist_id: The playlist_id of this PlaylistItemSnippet.
        :type playlist_id: str
        """

        self._playlist_id = playlist_id

    @property
    def position(self):
        """Gets the position of this PlaylistItemSnippet.

        The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.

        :return: The position of this PlaylistItemSnippet.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this PlaylistItemSnippet.

        The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.

        :param position: The position of this PlaylistItemSnippet.
        :type position: int
        """

        self._position = position

    @property
    def published_at(self):
        """Gets the published_at of this PlaylistItemSnippet.

        The date and time that the item was added to the playlist.

        :return: The published_at of this PlaylistItemSnippet.
        :rtype: datetime
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at):
        """Sets the published_at of this PlaylistItemSnippet.

        The date and time that the item was added to the playlist.

        :param published_at: The published_at of this PlaylistItemSnippet.
        :type published_at: datetime
        """

        self._published_at = published_at

    @property
    def resource_id(self):
        """Gets the resource_id of this PlaylistItemSnippet.


        :return: The resource_id of this PlaylistItemSnippet.
        :rtype: ResourceId
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this PlaylistItemSnippet.


        :param resource_id: The resource_id of this PlaylistItemSnippet.
        :type resource_id: ResourceId
        """

        self._resource_id = resource_id

    @property
    def thumbnails(self):
        """Gets the thumbnails of this PlaylistItemSnippet.


        :return: The thumbnails of this PlaylistItemSnippet.
        :rtype: ThumbnailDetails
        """
        return self._thumbnails

    @thumbnails.setter
    def thumbnails(self, thumbnails):
        """Sets the thumbnails of this PlaylistItemSnippet.


        :param thumbnails: The thumbnails of this PlaylistItemSnippet.
        :type thumbnails: ThumbnailDetails
        """

        self._thumbnails = thumbnails

    @property
    def title(self):
        """Gets the title of this PlaylistItemSnippet.

        The item's title.

        :return: The title of this PlaylistItemSnippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PlaylistItemSnippet.

        The item's title.

        :param title: The title of this PlaylistItemSnippet.
        :type title: str
        """

        self._title = title

    @property
    def video_owner_channel_id(self):
        """Gets the video_owner_channel_id of this PlaylistItemSnippet.

        Channel id for the channel this video belongs to.

        :return: The video_owner_channel_id of this PlaylistItemSnippet.
        :rtype: str
        """
        return self._video_owner_channel_id

    @video_owner_channel_id.setter
    def video_owner_channel_id(self, video_owner_channel_id):
        """Sets the video_owner_channel_id of this PlaylistItemSnippet.

        Channel id for the channel this video belongs to.

        :param video_owner_channel_id: The video_owner_channel_id of this PlaylistItemSnippet.
        :type video_owner_channel_id: str
        """

        self._video_owner_channel_id = video_owner_channel_id

    @property
    def video_owner_channel_title(self):
        """Gets the video_owner_channel_title of this PlaylistItemSnippet.

        Channel title for the channel this video belongs to.

        :return: The video_owner_channel_title of this PlaylistItemSnippet.
        :rtype: str
        """
        return self._video_owner_channel_title

    @video_owner_channel_title.setter
    def video_owner_channel_title(self, video_owner_channel_title):
        """Sets the video_owner_channel_title of this PlaylistItemSnippet.

        Channel title for the channel this video belongs to.

        :param video_owner_channel_title: The video_owner_channel_title of this PlaylistItemSnippet.
        :type video_owner_channel_title: str
        """

        self._video_owner_channel_title = video_owner_channel_title
