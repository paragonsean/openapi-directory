# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.live_chat_poll_details_poll_metadata_poll_option import LiveChatPollDetailsPollMetadataPollOption
from openapi_server import util


class LiveChatPollDetailsPollMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, options: List[LiveChatPollDetailsPollMetadataPollOption]=None, question_text: str=None):
        """LiveChatPollDetailsPollMetadata - a model defined in OpenAPI

        :param options: The options of this LiveChatPollDetailsPollMetadata.
        :param question_text: The question_text of this LiveChatPollDetailsPollMetadata.
        """
        self.openapi_types = {
            'options': List[LiveChatPollDetailsPollMetadataPollOption],
            'question_text': str
        }

        self.attribute_map = {
            'options': 'options',
            'question_text': 'questionText'
        }

        self._options = options
        self._question_text = question_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveChatPollDetailsPollMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveChatPollDetailsPollMetadata of this LiveChatPollDetailsPollMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def options(self):
        """Gets the options of this LiveChatPollDetailsPollMetadata.

        The options will be returned in the order that is displayed in 1P

        :return: The options of this LiveChatPollDetailsPollMetadata.
        :rtype: List[LiveChatPollDetailsPollMetadataPollOption]
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this LiveChatPollDetailsPollMetadata.

        The options will be returned in the order that is displayed in 1P

        :param options: The options of this LiveChatPollDetailsPollMetadata.
        :type options: List[LiveChatPollDetailsPollMetadataPollOption]
        """

        self._options = options

    @property
    def question_text(self):
        """Gets the question_text of this LiveChatPollDetailsPollMetadata.


        :return: The question_text of this LiveChatPollDetailsPollMetadata.
        :rtype: str
        """
        return self._question_text

    @question_text.setter
    def question_text(self, question_text):
        """Sets the question_text of this LiveChatPollDetailsPollMetadata.


        :param question_text: The question_text of this LiveChatPollDetailsPollMetadata.
        :type question_text: str
        """

        self._question_text = question_text
