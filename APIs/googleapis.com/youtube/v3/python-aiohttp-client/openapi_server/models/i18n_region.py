# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i18n_region_snippet import I18nRegionSnippet
from openapi_server import util


class I18nRegion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, id: str=None, kind: str='youtube#i18nRegion', snippet: I18nRegionSnippet=None):
        """I18nRegion - a model defined in OpenAPI

        :param etag: The etag of this I18nRegion.
        :param id: The id of this I18nRegion.
        :param kind: The kind of this I18nRegion.
        :param snippet: The snippet of this I18nRegion.
        """
        self.openapi_types = {
            'etag': str,
            'id': str,
            'kind': str,
            'snippet': I18nRegionSnippet
        }

        self.attribute_map = {
            'etag': 'etag',
            'id': 'id',
            'kind': 'kind',
            'snippet': 'snippet'
        }

        self._etag = etag
        self._id = id
        self._kind = kind
        self._snippet = snippet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'I18nRegion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The I18nRegion of this I18nRegion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this I18nRegion.

        Etag of this resource.

        :return: The etag of this I18nRegion.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this I18nRegion.

        Etag of this resource.

        :param etag: The etag of this I18nRegion.
        :type etag: str
        """

        self._etag = etag

    @property
    def id(self):
        """Gets the id of this I18nRegion.

        The ID that YouTube uses to uniquely identify the i18n region.

        :return: The id of this I18nRegion.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this I18nRegion.

        The ID that YouTube uses to uniquely identify the i18n region.

        :param id: The id of this I18nRegion.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this I18nRegion.

        Identifies what kind of resource this is. Value: the fixed string \"youtube#i18nRegion\".

        :return: The kind of this I18nRegion.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this I18nRegion.

        Identifies what kind of resource this is. Value: the fixed string \"youtube#i18nRegion\".

        :param kind: The kind of this I18nRegion.
        :type kind: str
        """

        self._kind = kind

    @property
    def snippet(self):
        """Gets the snippet of this I18nRegion.


        :return: The snippet of this I18nRegion.
        :rtype: I18nRegionSnippet
        """
        return self._snippet

    @snippet.setter
    def snippet(self, snippet):
        """Sets the snippet of this I18nRegion.


        :param snippet: The snippet of this I18nRegion.
        :type snippet: I18nRegionSnippet
        """

        self._snippet = snippet
