# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveStreamSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_id: str=None, description: str=None, is_default_stream: bool=None, published_at: datetime=None, title: str=None):
        """LiveStreamSnippet - a model defined in OpenAPI

        :param channel_id: The channel_id of this LiveStreamSnippet.
        :param description: The description of this LiveStreamSnippet.
        :param is_default_stream: The is_default_stream of this LiveStreamSnippet.
        :param published_at: The published_at of this LiveStreamSnippet.
        :param title: The title of this LiveStreamSnippet.
        """
        self.openapi_types = {
            'channel_id': str,
            'description': str,
            'is_default_stream': bool,
            'published_at': datetime,
            'title': str
        }

        self.attribute_map = {
            'channel_id': 'channelId',
            'description': 'description',
            'is_default_stream': 'isDefaultStream',
            'published_at': 'publishedAt',
            'title': 'title'
        }

        self._channel_id = channel_id
        self._description = description
        self._is_default_stream = is_default_stream
        self._published_at = published_at
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveStreamSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveStreamSnippet of this LiveStreamSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_id(self):
        """Gets the channel_id of this LiveStreamSnippet.

        The ID that YouTube uses to uniquely identify the channel that is transmitting the stream.

        :return: The channel_id of this LiveStreamSnippet.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this LiveStreamSnippet.

        The ID that YouTube uses to uniquely identify the channel that is transmitting the stream.

        :param channel_id: The channel_id of this LiveStreamSnippet.
        :type channel_id: str
        """

        self._channel_id = channel_id

    @property
    def description(self):
        """Gets the description of this LiveStreamSnippet.

        The stream's description. The value cannot be longer than 10000 characters.

        :return: The description of this LiveStreamSnippet.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LiveStreamSnippet.

        The stream's description. The value cannot be longer than 10000 characters.

        :param description: The description of this LiveStreamSnippet.
        :type description: str
        """

        self._description = description

    @property
    def is_default_stream(self):
        """Gets the is_default_stream of this LiveStreamSnippet.


        :return: The is_default_stream of this LiveStreamSnippet.
        :rtype: bool
        """
        return self._is_default_stream

    @is_default_stream.setter
    def is_default_stream(self, is_default_stream):
        """Sets the is_default_stream of this LiveStreamSnippet.


        :param is_default_stream: The is_default_stream of this LiveStreamSnippet.
        :type is_default_stream: bool
        """

        self._is_default_stream = is_default_stream

    @property
    def published_at(self):
        """Gets the published_at of this LiveStreamSnippet.

        The date and time that the stream was created.

        :return: The published_at of this LiveStreamSnippet.
        :rtype: datetime
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at):
        """Sets the published_at of this LiveStreamSnippet.

        The date and time that the stream was created.

        :param published_at: The published_at of this LiveStreamSnippet.
        :type published_at: datetime
        """

        self._published_at = published_at

    @property
    def title(self):
        """Gets the title of this LiveStreamSnippet.

        The stream's title. The value must be between 1 and 128 characters long.

        :return: The title of this LiveStreamSnippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this LiveStreamSnippet.

        The stream's title. The value must be between 1 and 128 characters long.

        :param title: The title of this LiveStreamSnippet.
        :type title: str
        """

        self._title = title
