# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoTopicDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, relevant_topic_ids: List[str]=None, topic_categories: List[str]=None, topic_ids: List[str]=None):
        """VideoTopicDetails - a model defined in OpenAPI

        :param relevant_topic_ids: The relevant_topic_ids of this VideoTopicDetails.
        :param topic_categories: The topic_categories of this VideoTopicDetails.
        :param topic_ids: The topic_ids of this VideoTopicDetails.
        """
        self.openapi_types = {
            'relevant_topic_ids': List[str],
            'topic_categories': List[str],
            'topic_ids': List[str]
        }

        self.attribute_map = {
            'relevant_topic_ids': 'relevantTopicIds',
            'topic_categories': 'topicCategories',
            'topic_ids': 'topicIds'
        }

        self._relevant_topic_ids = relevant_topic_ids
        self._topic_categories = topic_categories
        self._topic_ids = topic_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoTopicDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoTopicDetails of this VideoTopicDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def relevant_topic_ids(self):
        """Gets the relevant_topic_ids of this VideoTopicDetails.

        Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API.

        :return: The relevant_topic_ids of this VideoTopicDetails.
        :rtype: List[str]
        """
        return self._relevant_topic_ids

    @relevant_topic_ids.setter
    def relevant_topic_ids(self, relevant_topic_ids):
        """Sets the relevant_topic_ids of this VideoTopicDetails.

        Similar to topic_id, except that these topics are merely relevant to the video. These are topics that may be mentioned in, or appear in the video. You can retrieve information about each topic using Freebase Topic API.

        :param relevant_topic_ids: The relevant_topic_ids of this VideoTopicDetails.
        :type relevant_topic_ids: List[str]
        """

        self._relevant_topic_ids = relevant_topic_ids

    @property
    def topic_categories(self):
        """Gets the topic_categories of this VideoTopicDetails.

        A list of Wikipedia URLs that provide a high-level description of the video's content.

        :return: The topic_categories of this VideoTopicDetails.
        :rtype: List[str]
        """
        return self._topic_categories

    @topic_categories.setter
    def topic_categories(self, topic_categories):
        """Sets the topic_categories of this VideoTopicDetails.

        A list of Wikipedia URLs that provide a high-level description of the video's content.

        :param topic_categories: The topic_categories of this VideoTopicDetails.
        :type topic_categories: List[str]
        """

        self._topic_categories = topic_categories

    @property
    def topic_ids(self):
        """Gets the topic_ids of this VideoTopicDetails.

        A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the < a href=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API.

        :return: The topic_ids of this VideoTopicDetails.
        :rtype: List[str]
        """
        return self._topic_ids

    @topic_ids.setter
    def topic_ids(self, topic_ids):
        """Sets the topic_ids of this VideoTopicDetails.

        A list of Freebase topic IDs that are centrally associated with the video. These are topics that are centrally featured in the video, and it can be said that the video is mainly about each of these. You can retrieve information about each topic using the < a href=\"http://wiki.freebase.com/wiki/Topic_API\">Freebase Topic API.

        :param topic_ids: The topic_ids of this VideoTopicDetails.
        :type topic_ids: List[str]
        """

        self._topic_ids = topic_ids
