# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.memberships_duration import MembershipsDuration
from openapi_server.models.memberships_duration_at_level import MembershipsDurationAtLevel
from openapi_server import util


class MembershipsDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accessible_levels: List[str]=None, highest_accessible_level: str=None, highest_accessible_level_display_name: str=None, memberships_duration: MembershipsDuration=None, memberships_duration_at_levels: List[MembershipsDurationAtLevel]=None):
        """MembershipsDetails - a model defined in OpenAPI

        :param accessible_levels: The accessible_levels of this MembershipsDetails.
        :param highest_accessible_level: The highest_accessible_level of this MembershipsDetails.
        :param highest_accessible_level_display_name: The highest_accessible_level_display_name of this MembershipsDetails.
        :param memberships_duration: The memberships_duration of this MembershipsDetails.
        :param memberships_duration_at_levels: The memberships_duration_at_levels of this MembershipsDetails.
        """
        self.openapi_types = {
            'accessible_levels': List[str],
            'highest_accessible_level': str,
            'highest_accessible_level_display_name': str,
            'memberships_duration': MembershipsDuration,
            'memberships_duration_at_levels': List[MembershipsDurationAtLevel]
        }

        self.attribute_map = {
            'accessible_levels': 'accessibleLevels',
            'highest_accessible_level': 'highestAccessibleLevel',
            'highest_accessible_level_display_name': 'highestAccessibleLevelDisplayName',
            'memberships_duration': 'membershipsDuration',
            'memberships_duration_at_levels': 'membershipsDurationAtLevels'
        }

        self._accessible_levels = accessible_levels
        self._highest_accessible_level = highest_accessible_level
        self._highest_accessible_level_display_name = highest_accessible_level_display_name
        self._memberships_duration = memberships_duration
        self._memberships_duration_at_levels = memberships_duration_at_levels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MembershipsDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MembershipsDetails of this MembershipsDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accessible_levels(self):
        """Gets the accessible_levels of this MembershipsDetails.

        Ids of all levels that the user has access to. This includes the currently active level and all other levels that are included because of a higher purchase.

        :return: The accessible_levels of this MembershipsDetails.
        :rtype: List[str]
        """
        return self._accessible_levels

    @accessible_levels.setter
    def accessible_levels(self, accessible_levels):
        """Sets the accessible_levels of this MembershipsDetails.

        Ids of all levels that the user has access to. This includes the currently active level and all other levels that are included because of a higher purchase.

        :param accessible_levels: The accessible_levels of this MembershipsDetails.
        :type accessible_levels: List[str]
        """

        self._accessible_levels = accessible_levels

    @property
    def highest_accessible_level(self):
        """Gets the highest_accessible_level of this MembershipsDetails.

        Id of the highest level that the user has access to at the moment.

        :return: The highest_accessible_level of this MembershipsDetails.
        :rtype: str
        """
        return self._highest_accessible_level

    @highest_accessible_level.setter
    def highest_accessible_level(self, highest_accessible_level):
        """Sets the highest_accessible_level of this MembershipsDetails.

        Id of the highest level that the user has access to at the moment.

        :param highest_accessible_level: The highest_accessible_level of this MembershipsDetails.
        :type highest_accessible_level: str
        """

        self._highest_accessible_level = highest_accessible_level

    @property
    def highest_accessible_level_display_name(self):
        """Gets the highest_accessible_level_display_name of this MembershipsDetails.

        Display name for the highest level that the user has access to at the moment.

        :return: The highest_accessible_level_display_name of this MembershipsDetails.
        :rtype: str
        """
        return self._highest_accessible_level_display_name

    @highest_accessible_level_display_name.setter
    def highest_accessible_level_display_name(self, highest_accessible_level_display_name):
        """Sets the highest_accessible_level_display_name of this MembershipsDetails.

        Display name for the highest level that the user has access to at the moment.

        :param highest_accessible_level_display_name: The highest_accessible_level_display_name of this MembershipsDetails.
        :type highest_accessible_level_display_name: str
        """

        self._highest_accessible_level_display_name = highest_accessible_level_display_name

    @property
    def memberships_duration(self):
        """Gets the memberships_duration of this MembershipsDetails.


        :return: The memberships_duration of this MembershipsDetails.
        :rtype: MembershipsDuration
        """
        return self._memberships_duration

    @memberships_duration.setter
    def memberships_duration(self, memberships_duration):
        """Sets the memberships_duration of this MembershipsDetails.


        :param memberships_duration: The memberships_duration of this MembershipsDetails.
        :type memberships_duration: MembershipsDuration
        """

        self._memberships_duration = memberships_duration

    @property
    def memberships_duration_at_levels(self):
        """Gets the memberships_duration_at_levels of this MembershipsDetails.

        Data about memberships duration on particular pricing levels.

        :return: The memberships_duration_at_levels of this MembershipsDetails.
        :rtype: List[MembershipsDurationAtLevel]
        """
        return self._memberships_duration_at_levels

    @memberships_duration_at_levels.setter
    def memberships_duration_at_levels(self, memberships_duration_at_levels):
        """Sets the memberships_duration_at_levels of this MembershipsDetails.

        Data about memberships duration on particular pricing levels.

        :param memberships_duration_at_levels: The memberships_duration_at_levels of this MembershipsDetails.
        :type memberships_duration_at_levels: List[MembershipsDurationAtLevel]
        """

        self._memberships_duration_at_levels = memberships_duration_at_levels
