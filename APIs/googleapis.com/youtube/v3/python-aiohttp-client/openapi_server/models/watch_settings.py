# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WatchSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_color: str=None, featured_playlist_id: str=None, text_color: str=None):
        """WatchSettings - a model defined in OpenAPI

        :param background_color: The background_color of this WatchSettings.
        :param featured_playlist_id: The featured_playlist_id of this WatchSettings.
        :param text_color: The text_color of this WatchSettings.
        """
        self.openapi_types = {
            'background_color': str,
            'featured_playlist_id': str,
            'text_color': str
        }

        self.attribute_map = {
            'background_color': 'backgroundColor',
            'featured_playlist_id': 'featuredPlaylistId',
            'text_color': 'textColor'
        }

        self._background_color = background_color
        self._featured_playlist_id = featured_playlist_id
        self._text_color = text_color

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WatchSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WatchSettings of this WatchSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_color(self):
        """Gets the background_color of this WatchSettings.

        The text color for the video watch page's branded area.

        :return: The background_color of this WatchSettings.
        :rtype: str
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this WatchSettings.

        The text color for the video watch page's branded area.

        :param background_color: The background_color of this WatchSettings.
        :type background_color: str
        """

        self._background_color = background_color

    @property
    def featured_playlist_id(self):
        """Gets the featured_playlist_id of this WatchSettings.

        An ID that uniquely identifies a playlist that displays next to the video player.

        :return: The featured_playlist_id of this WatchSettings.
        :rtype: str
        """
        return self._featured_playlist_id

    @featured_playlist_id.setter
    def featured_playlist_id(self, featured_playlist_id):
        """Sets the featured_playlist_id of this WatchSettings.

        An ID that uniquely identifies a playlist that displays next to the video player.

        :param featured_playlist_id: The featured_playlist_id of this WatchSettings.
        :type featured_playlist_id: str
        """

        self._featured_playlist_id = featured_playlist_id

    @property
    def text_color(self):
        """Gets the text_color of this WatchSettings.

        The background color for the video watch page's branded area.

        :return: The text_color of this WatchSettings.
        :rtype: str
        """
        return self._text_color

    @text_color.setter
    def text_color(self, text_color):
        """Sets the text_color of this WatchSettings.

        The background color for the video watch page's branded area.

        :param text_color: The text_color of this WatchSettings.
        :type text_color: str
        """

        self._text_color = text_color
