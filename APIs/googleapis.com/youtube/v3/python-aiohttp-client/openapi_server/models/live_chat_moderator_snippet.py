# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_profile_details import ChannelProfileDetails
from openapi_server import util


class LiveChatModeratorSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, live_chat_id: str=None, moderator_details: ChannelProfileDetails=None):
        """LiveChatModeratorSnippet - a model defined in OpenAPI

        :param live_chat_id: The live_chat_id of this LiveChatModeratorSnippet.
        :param moderator_details: The moderator_details of this LiveChatModeratorSnippet.
        """
        self.openapi_types = {
            'live_chat_id': str,
            'moderator_details': ChannelProfileDetails
        }

        self.attribute_map = {
            'live_chat_id': 'liveChatId',
            'moderator_details': 'moderatorDetails'
        }

        self._live_chat_id = live_chat_id
        self._moderator_details = moderator_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveChatModeratorSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveChatModeratorSnippet of this LiveChatModeratorSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def live_chat_id(self):
        """Gets the live_chat_id of this LiveChatModeratorSnippet.

        The ID of the live chat this moderator can act on.

        :return: The live_chat_id of this LiveChatModeratorSnippet.
        :rtype: str
        """
        return self._live_chat_id

    @live_chat_id.setter
    def live_chat_id(self, live_chat_id):
        """Sets the live_chat_id of this LiveChatModeratorSnippet.

        The ID of the live chat this moderator can act on.

        :param live_chat_id: The live_chat_id of this LiveChatModeratorSnippet.
        :type live_chat_id: str
        """

        self._live_chat_id = live_chat_id

    @property
    def moderator_details(self):
        """Gets the moderator_details of this LiveChatModeratorSnippet.


        :return: The moderator_details of this LiveChatModeratorSnippet.
        :rtype: ChannelProfileDetails
        """
        return self._moderator_details

    @moderator_details.setter
    def moderator_details(self, moderator_details):
        """Sets the moderator_details of this LiveChatModeratorSnippet.


        :param moderator_details: The moderator_details of this LiveChatModeratorSnippet.
        :type moderator_details: ChannelProfileDetails
        """

        self._moderator_details = moderator_details
