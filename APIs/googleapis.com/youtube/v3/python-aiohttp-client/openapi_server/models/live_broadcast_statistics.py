# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveBroadcastStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, concurrent_viewers: str=None):
        """LiveBroadcastStatistics - a model defined in OpenAPI

        :param concurrent_viewers: The concurrent_viewers of this LiveBroadcastStatistics.
        """
        self.openapi_types = {
            'concurrent_viewers': str
        }

        self.attribute_map = {
            'concurrent_viewers': 'concurrentViewers'
        }

        self._concurrent_viewers = concurrent_viewers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveBroadcastStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveBroadcastStatistics of this LiveBroadcastStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def concurrent_viewers(self):
        """Gets the concurrent_viewers of this LiveBroadcastStatistics.

        The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.

        :return: The concurrent_viewers of this LiveBroadcastStatistics.
        :rtype: str
        """
        return self._concurrent_viewers

    @concurrent_viewers.setter
    def concurrent_viewers(self, concurrent_viewers):
        """Sets the concurrent_viewers of this LiveBroadcastStatistics.

        The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.

        :param concurrent_viewers: The concurrent_viewers of this LiveBroadcastStatistics.
        :type concurrent_viewers: str
        """

        self._concurrent_viewers = concurrent_viewers
