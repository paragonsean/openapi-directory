# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_id import ResourceId
from openapi_server import util


class ActivityContentDetailsSocial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, image_url: str=None, reference_url: str=None, resource_id: ResourceId=None, type: str=None):
        """ActivityContentDetailsSocial - a model defined in OpenAPI

        :param author: The author of this ActivityContentDetailsSocial.
        :param image_url: The image_url of this ActivityContentDetailsSocial.
        :param reference_url: The reference_url of this ActivityContentDetailsSocial.
        :param resource_id: The resource_id of this ActivityContentDetailsSocial.
        :param type: The type of this ActivityContentDetailsSocial.
        """
        self.openapi_types = {
            'author': str,
            'image_url': str,
            'reference_url': str,
            'resource_id': ResourceId,
            'type': str
        }

        self.attribute_map = {
            'author': 'author',
            'image_url': 'imageUrl',
            'reference_url': 'referenceUrl',
            'resource_id': 'resourceId',
            'type': 'type'
        }

        self._author = author
        self._image_url = image_url
        self._reference_url = reference_url
        self._resource_id = resource_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityContentDetailsSocial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityContentDetailsSocial of this ActivityContentDetailsSocial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this ActivityContentDetailsSocial.

        The author of the social network post.

        :return: The author of this ActivityContentDetailsSocial.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this ActivityContentDetailsSocial.

        The author of the social network post.

        :param author: The author of this ActivityContentDetailsSocial.
        :type author: str
        """

        self._author = author

    @property
    def image_url(self):
        """Gets the image_url of this ActivityContentDetailsSocial.

        An image of the post's author.

        :return: The image_url of this ActivityContentDetailsSocial.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ActivityContentDetailsSocial.

        An image of the post's author.

        :param image_url: The image_url of this ActivityContentDetailsSocial.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def reference_url(self):
        """Gets the reference_url of this ActivityContentDetailsSocial.

        The URL of the social network post.

        :return: The reference_url of this ActivityContentDetailsSocial.
        :rtype: str
        """
        return self._reference_url

    @reference_url.setter
    def reference_url(self, reference_url):
        """Sets the reference_url of this ActivityContentDetailsSocial.

        The URL of the social network post.

        :param reference_url: The reference_url of this ActivityContentDetailsSocial.
        :type reference_url: str
        """

        self._reference_url = reference_url

    @property
    def resource_id(self):
        """Gets the resource_id of this ActivityContentDetailsSocial.


        :return: The resource_id of this ActivityContentDetailsSocial.
        :rtype: ResourceId
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ActivityContentDetailsSocial.


        :param resource_id: The resource_id of this ActivityContentDetailsSocial.
        :type resource_id: ResourceId
        """

        self._resource_id = resource_id

    @property
    def type(self):
        """Gets the type of this ActivityContentDetailsSocial.

        The name of the social network.

        :return: The type of this ActivityContentDetailsSocial.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ActivityContentDetailsSocial.

        The name of the social network.

        :param type: The type of this ActivityContentDetailsSocial.
        :type type: str
        """
        allowed_values = ["unspecified", "googlePlus", "facebook", "twitter"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
