# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_profile_details import ChannelProfileDetails
from openapi_server import util


class LiveChatUserBannedMessageDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ban_duration_seconds: str=None, ban_type: str=None, banned_user_details: ChannelProfileDetails=None):
        """LiveChatUserBannedMessageDetails - a model defined in OpenAPI

        :param ban_duration_seconds: The ban_duration_seconds of this LiveChatUserBannedMessageDetails.
        :param ban_type: The ban_type of this LiveChatUserBannedMessageDetails.
        :param banned_user_details: The banned_user_details of this LiveChatUserBannedMessageDetails.
        """
        self.openapi_types = {
            'ban_duration_seconds': str,
            'ban_type': str,
            'banned_user_details': ChannelProfileDetails
        }

        self.attribute_map = {
            'ban_duration_seconds': 'banDurationSeconds',
            'ban_type': 'banType',
            'banned_user_details': 'bannedUserDetails'
        }

        self._ban_duration_seconds = ban_duration_seconds
        self._ban_type = ban_type
        self._banned_user_details = banned_user_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveChatUserBannedMessageDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveChatUserBannedMessageDetails of this LiveChatUserBannedMessageDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ban_duration_seconds(self):
        """Gets the ban_duration_seconds of this LiveChatUserBannedMessageDetails.

        The duration of the ban. This property is only present if the banType is temporary.

        :return: The ban_duration_seconds of this LiveChatUserBannedMessageDetails.
        :rtype: str
        """
        return self._ban_duration_seconds

    @ban_duration_seconds.setter
    def ban_duration_seconds(self, ban_duration_seconds):
        """Sets the ban_duration_seconds of this LiveChatUserBannedMessageDetails.

        The duration of the ban. This property is only present if the banType is temporary.

        :param ban_duration_seconds: The ban_duration_seconds of this LiveChatUserBannedMessageDetails.
        :type ban_duration_seconds: str
        """

        self._ban_duration_seconds = ban_duration_seconds

    @property
    def ban_type(self):
        """Gets the ban_type of this LiveChatUserBannedMessageDetails.

        The type of ban.

        :return: The ban_type of this LiveChatUserBannedMessageDetails.
        :rtype: str
        """
        return self._ban_type

    @ban_type.setter
    def ban_type(self, ban_type):
        """Sets the ban_type of this LiveChatUserBannedMessageDetails.

        The type of ban.

        :param ban_type: The ban_type of this LiveChatUserBannedMessageDetails.
        :type ban_type: str
        """
        allowed_values = ["permanent", "temporary"]  # noqa: E501
        if ban_type not in allowed_values:
            raise ValueError(
                "Invalid value for `ban_type` ({0}), must be one of {1}"
                .format(ban_type, allowed_values)
            )

        self._ban_type = ban_type

    @property
    def banned_user_details(self):
        """Gets the banned_user_details of this LiveChatUserBannedMessageDetails.


        :return: The banned_user_details of this LiveChatUserBannedMessageDetails.
        :rtype: ChannelProfileDetails
        """
        return self._banned_user_details

    @banned_user_details.setter
    def banned_user_details(self, banned_user_details):
        """Sets the banned_user_details of this LiveChatUserBannedMessageDetails.


        :param banned_user_details: The banned_user_details of this LiveChatUserBannedMessageDetails.
        :type banned_user_details: ChannelProfileDetails
        """

        self._banned_user_details = banned_user_details
