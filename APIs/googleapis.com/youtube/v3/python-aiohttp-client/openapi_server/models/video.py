# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video_age_gating import VideoAgeGating
from openapi_server.models.video_content_details import VideoContentDetails
from openapi_server.models.video_file_details import VideoFileDetails
from openapi_server.models.video_live_streaming_details import VideoLiveStreamingDetails
from openapi_server.models.video_localization import VideoLocalization
from openapi_server.models.video_monetization_details import VideoMonetizationDetails
from openapi_server.models.video_player import VideoPlayer
from openapi_server.models.video_processing_details import VideoProcessingDetails
from openapi_server.models.video_recording_details import VideoRecordingDetails
from openapi_server.models.video_snippet import VideoSnippet
from openapi_server.models.video_statistics import VideoStatistics
from openapi_server.models.video_status import VideoStatus
from openapi_server.models.video_suggestions import VideoSuggestions
from openapi_server.models.video_topic_details import VideoTopicDetails
from openapi_server import util


class Video(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, age_gating: VideoAgeGating=None, content_details: VideoContentDetails=None, etag: str=None, file_details: VideoFileDetails=None, id: str=None, kind: str='youtube#video', live_streaming_details: VideoLiveStreamingDetails=None, localizations: Dict[str, VideoLocalization]=None, monetization_details: VideoMonetizationDetails=None, player: VideoPlayer=None, processing_details: VideoProcessingDetails=None, project_details: object=None, recording_details: VideoRecordingDetails=None, snippet: VideoSnippet=None, statistics: VideoStatistics=None, status: VideoStatus=None, suggestions: VideoSuggestions=None, topic_details: VideoTopicDetails=None):
        """Video - a model defined in OpenAPI

        :param age_gating: The age_gating of this Video.
        :param content_details: The content_details of this Video.
        :param etag: The etag of this Video.
        :param file_details: The file_details of this Video.
        :param id: The id of this Video.
        :param kind: The kind of this Video.
        :param live_streaming_details: The live_streaming_details of this Video.
        :param localizations: The localizations of this Video.
        :param monetization_details: The monetization_details of this Video.
        :param player: The player of this Video.
        :param processing_details: The processing_details of this Video.
        :param project_details: The project_details of this Video.
        :param recording_details: The recording_details of this Video.
        :param snippet: The snippet of this Video.
        :param statistics: The statistics of this Video.
        :param status: The status of this Video.
        :param suggestions: The suggestions of this Video.
        :param topic_details: The topic_details of this Video.
        """
        self.openapi_types = {
            'age_gating': VideoAgeGating,
            'content_details': VideoContentDetails,
            'etag': str,
            'file_details': VideoFileDetails,
            'id': str,
            'kind': str,
            'live_streaming_details': VideoLiveStreamingDetails,
            'localizations': Dict[str, VideoLocalization],
            'monetization_details': VideoMonetizationDetails,
            'player': VideoPlayer,
            'processing_details': VideoProcessingDetails,
            'project_details': object,
            'recording_details': VideoRecordingDetails,
            'snippet': VideoSnippet,
            'statistics': VideoStatistics,
            'status': VideoStatus,
            'suggestions': VideoSuggestions,
            'topic_details': VideoTopicDetails
        }

        self.attribute_map = {
            'age_gating': 'ageGating',
            'content_details': 'contentDetails',
            'etag': 'etag',
            'file_details': 'fileDetails',
            'id': 'id',
            'kind': 'kind',
            'live_streaming_details': 'liveStreamingDetails',
            'localizations': 'localizations',
            'monetization_details': 'monetizationDetails',
            'player': 'player',
            'processing_details': 'processingDetails',
            'project_details': 'projectDetails',
            'recording_details': 'recordingDetails',
            'snippet': 'snippet',
            'statistics': 'statistics',
            'status': 'status',
            'suggestions': 'suggestions',
            'topic_details': 'topicDetails'
        }

        self._age_gating = age_gating
        self._content_details = content_details
        self._etag = etag
        self._file_details = file_details
        self._id = id
        self._kind = kind
        self._live_streaming_details = live_streaming_details
        self._localizations = localizations
        self._monetization_details = monetization_details
        self._player = player
        self._processing_details = processing_details
        self._project_details = project_details
        self._recording_details = recording_details
        self._snippet = snippet
        self._statistics = statistics
        self._status = status
        self._suggestions = suggestions
        self._topic_details = topic_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Video':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Video of this Video.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age_gating(self):
        """Gets the age_gating of this Video.


        :return: The age_gating of this Video.
        :rtype: VideoAgeGating
        """
        return self._age_gating

    @age_gating.setter
    def age_gating(self, age_gating):
        """Sets the age_gating of this Video.


        :param age_gating: The age_gating of this Video.
        :type age_gating: VideoAgeGating
        """

        self._age_gating = age_gating

    @property
    def content_details(self):
        """Gets the content_details of this Video.


        :return: The content_details of this Video.
        :rtype: VideoContentDetails
        """
        return self._content_details

    @content_details.setter
    def content_details(self, content_details):
        """Sets the content_details of this Video.


        :param content_details: The content_details of this Video.
        :type content_details: VideoContentDetails
        """

        self._content_details = content_details

    @property
    def etag(self):
        """Gets the etag of this Video.

        Etag of this resource.

        :return: The etag of this Video.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this Video.

        Etag of this resource.

        :param etag: The etag of this Video.
        :type etag: str
        """

        self._etag = etag

    @property
    def file_details(self):
        """Gets the file_details of this Video.


        :return: The file_details of this Video.
        :rtype: VideoFileDetails
        """
        return self._file_details

    @file_details.setter
    def file_details(self, file_details):
        """Sets the file_details of this Video.


        :param file_details: The file_details of this Video.
        :type file_details: VideoFileDetails
        """

        self._file_details = file_details

    @property
    def id(self):
        """Gets the id of this Video.

        The ID that YouTube uses to uniquely identify the video.

        :return: The id of this Video.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Video.

        The ID that YouTube uses to uniquely identify the video.

        :param id: The id of this Video.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Video.

        Identifies what kind of resource this is. Value: the fixed string \"youtube#video\".

        :return: The kind of this Video.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Video.

        Identifies what kind of resource this is. Value: the fixed string \"youtube#video\".

        :param kind: The kind of this Video.
        :type kind: str
        """

        self._kind = kind

    @property
    def live_streaming_details(self):
        """Gets the live_streaming_details of this Video.


        :return: The live_streaming_details of this Video.
        :rtype: VideoLiveStreamingDetails
        """
        return self._live_streaming_details

    @live_streaming_details.setter
    def live_streaming_details(self, live_streaming_details):
        """Sets the live_streaming_details of this Video.


        :param live_streaming_details: The live_streaming_details of this Video.
        :type live_streaming_details: VideoLiveStreamingDetails
        """

        self._live_streaming_details = live_streaming_details

    @property
    def localizations(self):
        """Gets the localizations of this Video.

        The localizations object contains localized versions of the basic details about the video, such as its title and description.

        :return: The localizations of this Video.
        :rtype: Dict[str, VideoLocalization]
        """
        return self._localizations

    @localizations.setter
    def localizations(self, localizations):
        """Sets the localizations of this Video.

        The localizations object contains localized versions of the basic details about the video, such as its title and description.

        :param localizations: The localizations of this Video.
        :type localizations: Dict[str, VideoLocalization]
        """

        self._localizations = localizations

    @property
    def monetization_details(self):
        """Gets the monetization_details of this Video.


        :return: The monetization_details of this Video.
        :rtype: VideoMonetizationDetails
        """
        return self._monetization_details

    @monetization_details.setter
    def monetization_details(self, monetization_details):
        """Sets the monetization_details of this Video.


        :param monetization_details: The monetization_details of this Video.
        :type monetization_details: VideoMonetizationDetails
        """

        self._monetization_details = monetization_details

    @property
    def player(self):
        """Gets the player of this Video.


        :return: The player of this Video.
        :rtype: VideoPlayer
        """
        return self._player

    @player.setter
    def player(self, player):
        """Sets the player of this Video.


        :param player: The player of this Video.
        :type player: VideoPlayer
        """

        self._player = player

    @property
    def processing_details(self):
        """Gets the processing_details of this Video.


        :return: The processing_details of this Video.
        :rtype: VideoProcessingDetails
        """
        return self._processing_details

    @processing_details.setter
    def processing_details(self, processing_details):
        """Sets the processing_details of this Video.


        :param processing_details: The processing_details of this Video.
        :type processing_details: VideoProcessingDetails
        """

        self._processing_details = processing_details

    @property
    def project_details(self):
        """Gets the project_details of this Video.

        DEPRECATED. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677

        :return: The project_details of this Video.
        :rtype: object
        """
        return self._project_details

    @project_details.setter
    def project_details(self, project_details):
        """Sets the project_details of this Video.

        DEPRECATED. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677

        :param project_details: The project_details of this Video.
        :type project_details: object
        """

        self._project_details = project_details

    @property
    def recording_details(self):
        """Gets the recording_details of this Video.


        :return: The recording_details of this Video.
        :rtype: VideoRecordingDetails
        """
        return self._recording_details

    @recording_details.setter
    def recording_details(self, recording_details):
        """Sets the recording_details of this Video.


        :param recording_details: The recording_details of this Video.
        :type recording_details: VideoRecordingDetails
        """

        self._recording_details = recording_details

    @property
    def snippet(self):
        """Gets the snippet of this Video.


        :return: The snippet of this Video.
        :rtype: VideoSnippet
        """
        return self._snippet

    @snippet.setter
    def snippet(self, snippet):
        """Sets the snippet of this Video.


        :param snippet: The snippet of this Video.
        :type snippet: VideoSnippet
        """

        self._snippet = snippet

    @property
    def statistics(self):
        """Gets the statistics of this Video.


        :return: The statistics of this Video.
        :rtype: VideoStatistics
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this Video.


        :param statistics: The statistics of this Video.
        :type statistics: VideoStatistics
        """

        self._statistics = statistics

    @property
    def status(self):
        """Gets the status of this Video.


        :return: The status of this Video.
        :rtype: VideoStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Video.


        :param status: The status of this Video.
        :type status: VideoStatus
        """

        self._status = status

    @property
    def suggestions(self):
        """Gets the suggestions of this Video.


        :return: The suggestions of this Video.
        :rtype: VideoSuggestions
        """
        return self._suggestions

    @suggestions.setter
    def suggestions(self, suggestions):
        """Sets the suggestions of this Video.


        :param suggestions: The suggestions of this Video.
        :type suggestions: VideoSuggestions
        """

        self._suggestions = suggestions

    @property
    def topic_details(self):
        """Gets the topic_details of this Video.


        :return: The topic_details of this Video.
        :rtype: VideoTopicDetails
        """
        return self._topic_details

    @topic_details.setter
    def topic_details(self, topic_details):
        """Sets the topic_details of this Video.


        :param topic_details: The topic_details of this Video.
        :type topic_details: VideoTopicDetails
        """

        self._topic_details = topic_details
