# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.thumbnail_details import ThumbnailDetails
from openapi_server import util


class SubscriptionSubscriberSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_id: str=None, description: str=None, thumbnails: ThumbnailDetails=None, title: str=None):
        """SubscriptionSubscriberSnippet - a model defined in OpenAPI

        :param channel_id: The channel_id of this SubscriptionSubscriberSnippet.
        :param description: The description of this SubscriptionSubscriberSnippet.
        :param thumbnails: The thumbnails of this SubscriptionSubscriberSnippet.
        :param title: The title of this SubscriptionSubscriberSnippet.
        """
        self.openapi_types = {
            'channel_id': str,
            'description': str,
            'thumbnails': ThumbnailDetails,
            'title': str
        }

        self.attribute_map = {
            'channel_id': 'channelId',
            'description': 'description',
            'thumbnails': 'thumbnails',
            'title': 'title'
        }

        self._channel_id = channel_id
        self._description = description
        self._thumbnails = thumbnails
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionSubscriberSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionSubscriberSnippet of this SubscriptionSubscriberSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_id(self):
        """Gets the channel_id of this SubscriptionSubscriberSnippet.

        The channel ID of the subscriber.

        :return: The channel_id of this SubscriptionSubscriberSnippet.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this SubscriptionSubscriberSnippet.

        The channel ID of the subscriber.

        :param channel_id: The channel_id of this SubscriptionSubscriberSnippet.
        :type channel_id: str
        """

        self._channel_id = channel_id

    @property
    def description(self):
        """Gets the description of this SubscriptionSubscriberSnippet.

        The description of the subscriber.

        :return: The description of this SubscriptionSubscriberSnippet.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SubscriptionSubscriberSnippet.

        The description of the subscriber.

        :param description: The description of this SubscriptionSubscriberSnippet.
        :type description: str
        """

        self._description = description

    @property
    def thumbnails(self):
        """Gets the thumbnails of this SubscriptionSubscriberSnippet.


        :return: The thumbnails of this SubscriptionSubscriberSnippet.
        :rtype: ThumbnailDetails
        """
        return self._thumbnails

    @thumbnails.setter
    def thumbnails(self, thumbnails):
        """Sets the thumbnails of this SubscriptionSubscriberSnippet.


        :param thumbnails: The thumbnails of this SubscriptionSubscriberSnippet.
        :type thumbnails: ThumbnailDetails
        """

        self._thumbnails = thumbnails

    @property
    def title(self):
        """Gets the title of this SubscriptionSubscriberSnippet.

        The title of the subscriber.

        :return: The title of this SubscriptionSubscriberSnippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SubscriptionSubscriberSnippet.

        The title of the subscriber.

        :param title: The title of this SubscriptionSubscriberSnippet.
        :type title: str
        """

        self._title = title
