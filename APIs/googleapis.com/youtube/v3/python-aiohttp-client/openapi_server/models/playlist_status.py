# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlaylistStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, privacy_status: str=None):
        """PlaylistStatus - a model defined in OpenAPI

        :param privacy_status: The privacy_status of this PlaylistStatus.
        """
        self.openapi_types = {
            'privacy_status': str
        }

        self.attribute_map = {
            'privacy_status': 'privacyStatus'
        }

        self._privacy_status = privacy_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaylistStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaylistStatus of this PlaylistStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def privacy_status(self):
        """Gets the privacy_status of this PlaylistStatus.

        The playlist's privacy status.

        :return: The privacy_status of this PlaylistStatus.
        :rtype: str
        """
        return self._privacy_status

    @privacy_status.setter
    def privacy_status(self, privacy_status):
        """Sets the privacy_status of this PlaylistStatus.

        The playlist's privacy status.

        :param privacy_status: The privacy_status of this PlaylistStatus.
        :type privacy_status: str
        """
        allowed_values = ["public", "unlisted", "private"]  # noqa: E501
        if privacy_status not in allowed_values:
            raise ValueError(
                "Invalid value for `privacy_status` ({0}), must be one of {1}"
                .format(privacy_status, allowed_values)
            )

        self._privacy_status = privacy_status
