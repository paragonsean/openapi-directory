# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_profile_details import ChannelProfileDetails
from openapi_server.models.memberships_details import MembershipsDetails
from openapi_server import util


class MemberSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creator_channel_id: str=None, member_details: ChannelProfileDetails=None, memberships_details: MembershipsDetails=None):
        """MemberSnippet - a model defined in OpenAPI

        :param creator_channel_id: The creator_channel_id of this MemberSnippet.
        :param member_details: The member_details of this MemberSnippet.
        :param memberships_details: The memberships_details of this MemberSnippet.
        """
        self.openapi_types = {
            'creator_channel_id': str,
            'member_details': ChannelProfileDetails,
            'memberships_details': MembershipsDetails
        }

        self.attribute_map = {
            'creator_channel_id': 'creatorChannelId',
            'member_details': 'memberDetails',
            'memberships_details': 'membershipsDetails'
        }

        self._creator_channel_id = creator_channel_id
        self._member_details = member_details
        self._memberships_details = memberships_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberSnippet of this MemberSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creator_channel_id(self):
        """Gets the creator_channel_id of this MemberSnippet.

        The id of the channel that's offering memberships.

        :return: The creator_channel_id of this MemberSnippet.
        :rtype: str
        """
        return self._creator_channel_id

    @creator_channel_id.setter
    def creator_channel_id(self, creator_channel_id):
        """Sets the creator_channel_id of this MemberSnippet.

        The id of the channel that's offering memberships.

        :param creator_channel_id: The creator_channel_id of this MemberSnippet.
        :type creator_channel_id: str
        """

        self._creator_channel_id = creator_channel_id

    @property
    def member_details(self):
        """Gets the member_details of this MemberSnippet.


        :return: The member_details of this MemberSnippet.
        :rtype: ChannelProfileDetails
        """
        return self._member_details

    @member_details.setter
    def member_details(self, member_details):
        """Sets the member_details of this MemberSnippet.


        :param member_details: The member_details of this MemberSnippet.
        :type member_details: ChannelProfileDetails
        """

        self._member_details = member_details

    @property
    def memberships_details(self):
        """Gets the memberships_details of this MemberSnippet.


        :return: The memberships_details of this MemberSnippet.
        :rtype: MembershipsDetails
        """
        return self._memberships_details

    @memberships_details.setter
    def memberships_details(self, memberships_details):
        """Sets the memberships_details of this MemberSnippet.


        :param memberships_details: The memberships_details of this MemberSnippet.
        :type memberships_details: MembershipsDetails
        """

        self._memberships_details = memberships_details
