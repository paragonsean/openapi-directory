# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.thumbnail_details import ThumbnailDetails
from openapi_server import util


class LiveBroadcastSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_end_time: datetime=None, actual_start_time: datetime=None, channel_id: str=None, description: str=None, is_default_broadcast: bool=None, live_chat_id: str=None, published_at: datetime=None, scheduled_end_time: datetime=None, scheduled_start_time: datetime=None, thumbnails: ThumbnailDetails=None, title: str=None):
        """LiveBroadcastSnippet - a model defined in OpenAPI

        :param actual_end_time: The actual_end_time of this LiveBroadcastSnippet.
        :param actual_start_time: The actual_start_time of this LiveBroadcastSnippet.
        :param channel_id: The channel_id of this LiveBroadcastSnippet.
        :param description: The description of this LiveBroadcastSnippet.
        :param is_default_broadcast: The is_default_broadcast of this LiveBroadcastSnippet.
        :param live_chat_id: The live_chat_id of this LiveBroadcastSnippet.
        :param published_at: The published_at of this LiveBroadcastSnippet.
        :param scheduled_end_time: The scheduled_end_time of this LiveBroadcastSnippet.
        :param scheduled_start_time: The scheduled_start_time of this LiveBroadcastSnippet.
        :param thumbnails: The thumbnails of this LiveBroadcastSnippet.
        :param title: The title of this LiveBroadcastSnippet.
        """
        self.openapi_types = {
            'actual_end_time': datetime,
            'actual_start_time': datetime,
            'channel_id': str,
            'description': str,
            'is_default_broadcast': bool,
            'live_chat_id': str,
            'published_at': datetime,
            'scheduled_end_time': datetime,
            'scheduled_start_time': datetime,
            'thumbnails': ThumbnailDetails,
            'title': str
        }

        self.attribute_map = {
            'actual_end_time': 'actualEndTime',
            'actual_start_time': 'actualStartTime',
            'channel_id': 'channelId',
            'description': 'description',
            'is_default_broadcast': 'isDefaultBroadcast',
            'live_chat_id': 'liveChatId',
            'published_at': 'publishedAt',
            'scheduled_end_time': 'scheduledEndTime',
            'scheduled_start_time': 'scheduledStartTime',
            'thumbnails': 'thumbnails',
            'title': 'title'
        }

        self._actual_end_time = actual_end_time
        self._actual_start_time = actual_start_time
        self._channel_id = channel_id
        self._description = description
        self._is_default_broadcast = is_default_broadcast
        self._live_chat_id = live_chat_id
        self._published_at = published_at
        self._scheduled_end_time = scheduled_end_time
        self._scheduled_start_time = scheduled_start_time
        self._thumbnails = thumbnails
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveBroadcastSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveBroadcastSnippet of this LiveBroadcastSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_end_time(self):
        """Gets the actual_end_time of this LiveBroadcastSnippet.

        The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete.

        :return: The actual_end_time of this LiveBroadcastSnippet.
        :rtype: datetime
        """
        return self._actual_end_time

    @actual_end_time.setter
    def actual_end_time(self, actual_end_time):
        """Sets the actual_end_time of this LiveBroadcastSnippet.

        The date and time that the broadcast actually ended. This information is only available once the broadcast's state is complete.

        :param actual_end_time: The actual_end_time of this LiveBroadcastSnippet.
        :type actual_end_time: datetime
        """

        self._actual_end_time = actual_end_time

    @property
    def actual_start_time(self):
        """Gets the actual_start_time of this LiveBroadcastSnippet.

        The date and time that the broadcast actually started. This information is only available once the broadcast's state is live.

        :return: The actual_start_time of this LiveBroadcastSnippet.
        :rtype: datetime
        """
        return self._actual_start_time

    @actual_start_time.setter
    def actual_start_time(self, actual_start_time):
        """Sets the actual_start_time of this LiveBroadcastSnippet.

        The date and time that the broadcast actually started. This information is only available once the broadcast's state is live.

        :param actual_start_time: The actual_start_time of this LiveBroadcastSnippet.
        :type actual_start_time: datetime
        """

        self._actual_start_time = actual_start_time

    @property
    def channel_id(self):
        """Gets the channel_id of this LiveBroadcastSnippet.

        The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast.

        :return: The channel_id of this LiveBroadcastSnippet.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this LiveBroadcastSnippet.

        The ID that YouTube uses to uniquely identify the channel that is publishing the broadcast.

        :param channel_id: The channel_id of this LiveBroadcastSnippet.
        :type channel_id: str
        """

        self._channel_id = channel_id

    @property
    def description(self):
        """Gets the description of this LiveBroadcastSnippet.

        The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource.

        :return: The description of this LiveBroadcastSnippet.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LiveBroadcastSnippet.

        The broadcast's description. As with the title, you can set this field by modifying the broadcast resource or by setting the description field of the corresponding video resource.

        :param description: The description of this LiveBroadcastSnippet.
        :type description: str
        """

        self._description = description

    @property
    def is_default_broadcast(self):
        """Gets the is_default_broadcast of this LiveBroadcastSnippet.

        Indicates whether this broadcast is the default broadcast. Internal only.

        :return: The is_default_broadcast of this LiveBroadcastSnippet.
        :rtype: bool
        """
        return self._is_default_broadcast

    @is_default_broadcast.setter
    def is_default_broadcast(self, is_default_broadcast):
        """Sets the is_default_broadcast of this LiveBroadcastSnippet.

        Indicates whether this broadcast is the default broadcast. Internal only.

        :param is_default_broadcast: The is_default_broadcast of this LiveBroadcastSnippet.
        :type is_default_broadcast: bool
        """

        self._is_default_broadcast = is_default_broadcast

    @property
    def live_chat_id(self):
        """Gets the live_chat_id of this LiveBroadcastSnippet.

        The id of the live chat for this broadcast.

        :return: The live_chat_id of this LiveBroadcastSnippet.
        :rtype: str
        """
        return self._live_chat_id

    @live_chat_id.setter
    def live_chat_id(self, live_chat_id):
        """Sets the live_chat_id of this LiveBroadcastSnippet.

        The id of the live chat for this broadcast.

        :param live_chat_id: The live_chat_id of this LiveBroadcastSnippet.
        :type live_chat_id: str
        """

        self._live_chat_id = live_chat_id

    @property
    def published_at(self):
        """Gets the published_at of this LiveBroadcastSnippet.

        The date and time that the broadcast was added to YouTube's live broadcast schedule.

        :return: The published_at of this LiveBroadcastSnippet.
        :rtype: datetime
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at):
        """Sets the published_at of this LiveBroadcastSnippet.

        The date and time that the broadcast was added to YouTube's live broadcast schedule.

        :param published_at: The published_at of this LiveBroadcastSnippet.
        :type published_at: datetime
        """

        self._published_at = published_at

    @property
    def scheduled_end_time(self):
        """Gets the scheduled_end_time of this LiveBroadcastSnippet.

        The date and time that the broadcast is scheduled to end.

        :return: The scheduled_end_time of this LiveBroadcastSnippet.
        :rtype: datetime
        """
        return self._scheduled_end_time

    @scheduled_end_time.setter
    def scheduled_end_time(self, scheduled_end_time):
        """Sets the scheduled_end_time of this LiveBroadcastSnippet.

        The date and time that the broadcast is scheduled to end.

        :param scheduled_end_time: The scheduled_end_time of this LiveBroadcastSnippet.
        :type scheduled_end_time: datetime
        """

        self._scheduled_end_time = scheduled_end_time

    @property
    def scheduled_start_time(self):
        """Gets the scheduled_start_time of this LiveBroadcastSnippet.

        The date and time that the broadcast is scheduled to start.

        :return: The scheduled_start_time of this LiveBroadcastSnippet.
        :rtype: datetime
        """
        return self._scheduled_start_time

    @scheduled_start_time.setter
    def scheduled_start_time(self, scheduled_start_time):
        """Sets the scheduled_start_time of this LiveBroadcastSnippet.

        The date and time that the broadcast is scheduled to start.

        :param scheduled_start_time: The scheduled_start_time of this LiveBroadcastSnippet.
        :type scheduled_start_time: datetime
        """

        self._scheduled_start_time = scheduled_start_time

    @property
    def thumbnails(self):
        """Gets the thumbnails of this LiveBroadcastSnippet.


        :return: The thumbnails of this LiveBroadcastSnippet.
        :rtype: ThumbnailDetails
        """
        return self._thumbnails

    @thumbnails.setter
    def thumbnails(self, thumbnails):
        """Sets the thumbnails of this LiveBroadcastSnippet.


        :param thumbnails: The thumbnails of this LiveBroadcastSnippet.
        :type thumbnails: ThumbnailDetails
        """

        self._thumbnails = thumbnails

    @property
    def title(self):
        """Gets the title of this LiveBroadcastSnippet.

        The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource.

        :return: The title of this LiveBroadcastSnippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this LiveBroadcastSnippet.

        The broadcast's title. Note that the broadcast represents exactly one YouTube video. You can set this field by modifying the broadcast resource or by setting the title field of the corresponding video resource.

        :param title: The title of this LiveBroadcastSnippet.
        :type title: str
        """

        self._title = title
