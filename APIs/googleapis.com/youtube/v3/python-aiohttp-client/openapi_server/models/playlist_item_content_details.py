# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlaylistItemContentDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_at: str=None, note: str=None, start_at: str=None, video_id: str=None, video_published_at: datetime=None):
        """PlaylistItemContentDetails - a model defined in OpenAPI

        :param end_at: The end_at of this PlaylistItemContentDetails.
        :param note: The note of this PlaylistItemContentDetails.
        :param start_at: The start_at of this PlaylistItemContentDetails.
        :param video_id: The video_id of this PlaylistItemContentDetails.
        :param video_published_at: The video_published_at of this PlaylistItemContentDetails.
        """
        self.openapi_types = {
            'end_at': str,
            'note': str,
            'start_at': str,
            'video_id': str,
            'video_published_at': datetime
        }

        self.attribute_map = {
            'end_at': 'endAt',
            'note': 'note',
            'start_at': 'startAt',
            'video_id': 'videoId',
            'video_published_at': 'videoPublishedAt'
        }

        self._end_at = end_at
        self._note = note
        self._start_at = start_at
        self._video_id = video_id
        self._video_published_at = video_published_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaylistItemContentDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaylistItemContentDetails of this PlaylistItemContentDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_at(self):
        """Gets the end_at of this PlaylistItemContentDetails.

        The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.

        :return: The end_at of this PlaylistItemContentDetails.
        :rtype: str
        """
        return self._end_at

    @end_at.setter
    def end_at(self, end_at):
        """Sets the end_at of this PlaylistItemContentDetails.

        The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.

        :param end_at: The end_at of this PlaylistItemContentDetails.
        :type end_at: str
        """

        self._end_at = end_at

    @property
    def note(self):
        """Gets the note of this PlaylistItemContentDetails.

        A user-generated note for this item.

        :return: The note of this PlaylistItemContentDetails.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this PlaylistItemContentDetails.

        A user-generated note for this item.

        :param note: The note of this PlaylistItemContentDetails.
        :type note: str
        """

        self._note = note

    @property
    def start_at(self):
        """Gets the start_at of this PlaylistItemContentDetails.

        The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.

        :return: The start_at of this PlaylistItemContentDetails.
        :rtype: str
        """
        return self._start_at

    @start_at.setter
    def start_at(self, start_at):
        """Sets the start_at of this PlaylistItemContentDetails.

        The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.

        :param start_at: The start_at of this PlaylistItemContentDetails.
        :type start_at: str
        """

        self._start_at = start_at

    @property
    def video_id(self):
        """Gets the video_id of this PlaylistItemContentDetails.

        The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.

        :return: The video_id of this PlaylistItemContentDetails.
        :rtype: str
        """
        return self._video_id

    @video_id.setter
    def video_id(self, video_id):
        """Sets the video_id of this PlaylistItemContentDetails.

        The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.

        :param video_id: The video_id of this PlaylistItemContentDetails.
        :type video_id: str
        """

        self._video_id = video_id

    @property
    def video_published_at(self):
        """Gets the video_published_at of this PlaylistItemContentDetails.

        The date and time that the video was published to YouTube.

        :return: The video_published_at of this PlaylistItemContentDetails.
        :rtype: datetime
        """
        return self._video_published_at

    @video_published_at.setter
    def video_published_at(self, video_published_at):
        """Sets the video_published_at of this PlaylistItemContentDetails.

        The date and time that the video was published to YouTube.

        :param video_published_at: The video_published_at of this PlaylistItemContentDetails.
        :type video_published_at: datetime
        """

        self._video_published_at = video_published_at
