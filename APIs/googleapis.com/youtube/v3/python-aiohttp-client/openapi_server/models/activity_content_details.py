# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activity_content_details_bulletin import ActivityContentDetailsBulletin
from openapi_server.models.activity_content_details_channel_item import ActivityContentDetailsChannelItem
from openapi_server.models.activity_content_details_comment import ActivityContentDetailsComment
from openapi_server.models.activity_content_details_favorite import ActivityContentDetailsFavorite
from openapi_server.models.activity_content_details_like import ActivityContentDetailsLike
from openapi_server.models.activity_content_details_playlist_item import ActivityContentDetailsPlaylistItem
from openapi_server.models.activity_content_details_promoted_item import ActivityContentDetailsPromotedItem
from openapi_server.models.activity_content_details_recommendation import ActivityContentDetailsRecommendation
from openapi_server.models.activity_content_details_social import ActivityContentDetailsSocial
from openapi_server.models.activity_content_details_subscription import ActivityContentDetailsSubscription
from openapi_server.models.activity_content_details_upload import ActivityContentDetailsUpload
from openapi_server import util


class ActivityContentDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bulletin: ActivityContentDetailsBulletin=None, channel_item: ActivityContentDetailsChannelItem=None, comment: ActivityContentDetailsComment=None, favorite: ActivityContentDetailsFavorite=None, like: ActivityContentDetailsLike=None, playlist_item: ActivityContentDetailsPlaylistItem=None, promoted_item: ActivityContentDetailsPromotedItem=None, recommendation: ActivityContentDetailsRecommendation=None, social: ActivityContentDetailsSocial=None, subscription: ActivityContentDetailsSubscription=None, upload: ActivityContentDetailsUpload=None):
        """ActivityContentDetails - a model defined in OpenAPI

        :param bulletin: The bulletin of this ActivityContentDetails.
        :param channel_item: The channel_item of this ActivityContentDetails.
        :param comment: The comment of this ActivityContentDetails.
        :param favorite: The favorite of this ActivityContentDetails.
        :param like: The like of this ActivityContentDetails.
        :param playlist_item: The playlist_item of this ActivityContentDetails.
        :param promoted_item: The promoted_item of this ActivityContentDetails.
        :param recommendation: The recommendation of this ActivityContentDetails.
        :param social: The social of this ActivityContentDetails.
        :param subscription: The subscription of this ActivityContentDetails.
        :param upload: The upload of this ActivityContentDetails.
        """
        self.openapi_types = {
            'bulletin': ActivityContentDetailsBulletin,
            'channel_item': ActivityContentDetailsChannelItem,
            'comment': ActivityContentDetailsComment,
            'favorite': ActivityContentDetailsFavorite,
            'like': ActivityContentDetailsLike,
            'playlist_item': ActivityContentDetailsPlaylistItem,
            'promoted_item': ActivityContentDetailsPromotedItem,
            'recommendation': ActivityContentDetailsRecommendation,
            'social': ActivityContentDetailsSocial,
            'subscription': ActivityContentDetailsSubscription,
            'upload': ActivityContentDetailsUpload
        }

        self.attribute_map = {
            'bulletin': 'bulletin',
            'channel_item': 'channelItem',
            'comment': 'comment',
            'favorite': 'favorite',
            'like': 'like',
            'playlist_item': 'playlistItem',
            'promoted_item': 'promotedItem',
            'recommendation': 'recommendation',
            'social': 'social',
            'subscription': 'subscription',
            'upload': 'upload'
        }

        self._bulletin = bulletin
        self._channel_item = channel_item
        self._comment = comment
        self._favorite = favorite
        self._like = like
        self._playlist_item = playlist_item
        self._promoted_item = promoted_item
        self._recommendation = recommendation
        self._social = social
        self._subscription = subscription
        self._upload = upload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityContentDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityContentDetails of this ActivityContentDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bulletin(self):
        """Gets the bulletin of this ActivityContentDetails.


        :return: The bulletin of this ActivityContentDetails.
        :rtype: ActivityContentDetailsBulletin
        """
        return self._bulletin

    @bulletin.setter
    def bulletin(self, bulletin):
        """Sets the bulletin of this ActivityContentDetails.


        :param bulletin: The bulletin of this ActivityContentDetails.
        :type bulletin: ActivityContentDetailsBulletin
        """

        self._bulletin = bulletin

    @property
    def channel_item(self):
        """Gets the channel_item of this ActivityContentDetails.


        :return: The channel_item of this ActivityContentDetails.
        :rtype: ActivityContentDetailsChannelItem
        """
        return self._channel_item

    @channel_item.setter
    def channel_item(self, channel_item):
        """Sets the channel_item of this ActivityContentDetails.


        :param channel_item: The channel_item of this ActivityContentDetails.
        :type channel_item: ActivityContentDetailsChannelItem
        """

        self._channel_item = channel_item

    @property
    def comment(self):
        """Gets the comment of this ActivityContentDetails.


        :return: The comment of this ActivityContentDetails.
        :rtype: ActivityContentDetailsComment
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this ActivityContentDetails.


        :param comment: The comment of this ActivityContentDetails.
        :type comment: ActivityContentDetailsComment
        """

        self._comment = comment

    @property
    def favorite(self):
        """Gets the favorite of this ActivityContentDetails.


        :return: The favorite of this ActivityContentDetails.
        :rtype: ActivityContentDetailsFavorite
        """
        return self._favorite

    @favorite.setter
    def favorite(self, favorite):
        """Sets the favorite of this ActivityContentDetails.


        :param favorite: The favorite of this ActivityContentDetails.
        :type favorite: ActivityContentDetailsFavorite
        """

        self._favorite = favorite

    @property
    def like(self):
        """Gets the like of this ActivityContentDetails.


        :return: The like of this ActivityContentDetails.
        :rtype: ActivityContentDetailsLike
        """
        return self._like

    @like.setter
    def like(self, like):
        """Sets the like of this ActivityContentDetails.


        :param like: The like of this ActivityContentDetails.
        :type like: ActivityContentDetailsLike
        """

        self._like = like

    @property
    def playlist_item(self):
        """Gets the playlist_item of this ActivityContentDetails.


        :return: The playlist_item of this ActivityContentDetails.
        :rtype: ActivityContentDetailsPlaylistItem
        """
        return self._playlist_item

    @playlist_item.setter
    def playlist_item(self, playlist_item):
        """Sets the playlist_item of this ActivityContentDetails.


        :param playlist_item: The playlist_item of this ActivityContentDetails.
        :type playlist_item: ActivityContentDetailsPlaylistItem
        """

        self._playlist_item = playlist_item

    @property
    def promoted_item(self):
        """Gets the promoted_item of this ActivityContentDetails.


        :return: The promoted_item of this ActivityContentDetails.
        :rtype: ActivityContentDetailsPromotedItem
        """
        return self._promoted_item

    @promoted_item.setter
    def promoted_item(self, promoted_item):
        """Sets the promoted_item of this ActivityContentDetails.


        :param promoted_item: The promoted_item of this ActivityContentDetails.
        :type promoted_item: ActivityContentDetailsPromotedItem
        """

        self._promoted_item = promoted_item

    @property
    def recommendation(self):
        """Gets the recommendation of this ActivityContentDetails.


        :return: The recommendation of this ActivityContentDetails.
        :rtype: ActivityContentDetailsRecommendation
        """
        return self._recommendation

    @recommendation.setter
    def recommendation(self, recommendation):
        """Sets the recommendation of this ActivityContentDetails.


        :param recommendation: The recommendation of this ActivityContentDetails.
        :type recommendation: ActivityContentDetailsRecommendation
        """

        self._recommendation = recommendation

    @property
    def social(self):
        """Gets the social of this ActivityContentDetails.


        :return: The social of this ActivityContentDetails.
        :rtype: ActivityContentDetailsSocial
        """
        return self._social

    @social.setter
    def social(self, social):
        """Sets the social of this ActivityContentDetails.


        :param social: The social of this ActivityContentDetails.
        :type social: ActivityContentDetailsSocial
        """

        self._social = social

    @property
    def subscription(self):
        """Gets the subscription of this ActivityContentDetails.


        :return: The subscription of this ActivityContentDetails.
        :rtype: ActivityContentDetailsSubscription
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this ActivityContentDetails.


        :param subscription: The subscription of this ActivityContentDetails.
        :type subscription: ActivityContentDetailsSubscription
        """

        self._subscription = subscription

    @property
    def upload(self):
        """Gets the upload of this ActivityContentDetails.


        :return: The upload of this ActivityContentDetails.
        :rtype: ActivityContentDetailsUpload
        """
        return self._upload

    @upload.setter
    def upload(self, upload):
        """Sets the upload of this ActivityContentDetails.


        :param upload: The upload of this ActivityContentDetails.
        :type upload: ActivityContentDetailsUpload
        """

        self._upload = upload
