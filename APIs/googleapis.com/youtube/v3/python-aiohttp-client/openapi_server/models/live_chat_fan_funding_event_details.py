# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveChatFanFundingEventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_display_string: str=None, amount_micros: str=None, currency: str=None, user_comment: str=None):
        """LiveChatFanFundingEventDetails - a model defined in OpenAPI

        :param amount_display_string: The amount_display_string of this LiveChatFanFundingEventDetails.
        :param amount_micros: The amount_micros of this LiveChatFanFundingEventDetails.
        :param currency: The currency of this LiveChatFanFundingEventDetails.
        :param user_comment: The user_comment of this LiveChatFanFundingEventDetails.
        """
        self.openapi_types = {
            'amount_display_string': str,
            'amount_micros': str,
            'currency': str,
            'user_comment': str
        }

        self.attribute_map = {
            'amount_display_string': 'amountDisplayString',
            'amount_micros': 'amountMicros',
            'currency': 'currency',
            'user_comment': 'userComment'
        }

        self._amount_display_string = amount_display_string
        self._amount_micros = amount_micros
        self._currency = currency
        self._user_comment = user_comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveChatFanFundingEventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveChatFanFundingEventDetails of this LiveChatFanFundingEventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_display_string(self):
        """Gets the amount_display_string of this LiveChatFanFundingEventDetails.

        A rendered string that displays the fund amount and currency to the user.

        :return: The amount_display_string of this LiveChatFanFundingEventDetails.
        :rtype: str
        """
        return self._amount_display_string

    @amount_display_string.setter
    def amount_display_string(self, amount_display_string):
        """Sets the amount_display_string of this LiveChatFanFundingEventDetails.

        A rendered string that displays the fund amount and currency to the user.

        :param amount_display_string: The amount_display_string of this LiveChatFanFundingEventDetails.
        :type amount_display_string: str
        """

        self._amount_display_string = amount_display_string

    @property
    def amount_micros(self):
        """Gets the amount_micros of this LiveChatFanFundingEventDetails.

        The amount of the fund.

        :return: The amount_micros of this LiveChatFanFundingEventDetails.
        :rtype: str
        """
        return self._amount_micros

    @amount_micros.setter
    def amount_micros(self, amount_micros):
        """Sets the amount_micros of this LiveChatFanFundingEventDetails.

        The amount of the fund.

        :param amount_micros: The amount_micros of this LiveChatFanFundingEventDetails.
        :type amount_micros: str
        """

        self._amount_micros = amount_micros

    @property
    def currency(self):
        """Gets the currency of this LiveChatFanFundingEventDetails.

        The currency in which the fund was made.

        :return: The currency of this LiveChatFanFundingEventDetails.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this LiveChatFanFundingEventDetails.

        The currency in which the fund was made.

        :param currency: The currency of this LiveChatFanFundingEventDetails.
        :type currency: str
        """

        self._currency = currency

    @property
    def user_comment(self):
        """Gets the user_comment of this LiveChatFanFundingEventDetails.

        The comment added by the user to this fan funding event.

        :return: The user_comment of this LiveChatFanFundingEventDetails.
        :rtype: str
        """
        return self._user_comment

    @user_comment.setter
    def user_comment(self, user_comment):
        """Sets the user_comment of this LiveChatFanFundingEventDetails.

        The comment added by the user to this fan funding event.

        :param user_comment: The user_comment of this LiveChatFanFundingEventDetails.
        :type user_comment: str
        """

        self._user_comment = user_comment
