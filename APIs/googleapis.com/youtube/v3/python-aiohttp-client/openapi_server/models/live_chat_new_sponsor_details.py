# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveChatNewSponsorDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_upgrade: bool=None, member_level_name: str=None):
        """LiveChatNewSponsorDetails - a model defined in OpenAPI

        :param is_upgrade: The is_upgrade of this LiveChatNewSponsorDetails.
        :param member_level_name: The member_level_name of this LiveChatNewSponsorDetails.
        """
        self.openapi_types = {
            'is_upgrade': bool,
            'member_level_name': str
        }

        self.attribute_map = {
            'is_upgrade': 'isUpgrade',
            'member_level_name': 'memberLevelName'
        }

        self._is_upgrade = is_upgrade
        self._member_level_name = member_level_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveChatNewSponsorDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveChatNewSponsorDetails of this LiveChatNewSponsorDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_upgrade(self):
        """Gets the is_upgrade of this LiveChatNewSponsorDetails.

        If the viewer just had upgraded from a lower level. For viewers that were not members at the time of purchase, this field is false.

        :return: The is_upgrade of this LiveChatNewSponsorDetails.
        :rtype: bool
        """
        return self._is_upgrade

    @is_upgrade.setter
    def is_upgrade(self, is_upgrade):
        """Sets the is_upgrade of this LiveChatNewSponsorDetails.

        If the viewer just had upgraded from a lower level. For viewers that were not members at the time of purchase, this field is false.

        :param is_upgrade: The is_upgrade of this LiveChatNewSponsorDetails.
        :type is_upgrade: bool
        """

        self._is_upgrade = is_upgrade

    @property
    def member_level_name(self):
        """Gets the member_level_name of this LiveChatNewSponsorDetails.

        The name of the Level that the viewer just had joined. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled.

        :return: The member_level_name of this LiveChatNewSponsorDetails.
        :rtype: str
        """
        return self._member_level_name

    @member_level_name.setter
    def member_level_name(self, member_level_name):
        """Sets the member_level_name of this LiveChatNewSponsorDetails.

        The name of the Level that the viewer just had joined. The Level names are defined by the YouTube channel offering the Membership. In some situations this field isn't filled.

        :param member_level_name: The member_level_name of this LiveChatNewSponsorDetails.
        :type member_level_name: str
        """

        self._member_level_name = member_level_name
