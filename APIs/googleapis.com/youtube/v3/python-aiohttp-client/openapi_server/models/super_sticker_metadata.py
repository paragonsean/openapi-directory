# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SuperStickerMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt_text: str=None, alt_text_language: str=None, sticker_id: str=None):
        """SuperStickerMetadata - a model defined in OpenAPI

        :param alt_text: The alt_text of this SuperStickerMetadata.
        :param alt_text_language: The alt_text_language of this SuperStickerMetadata.
        :param sticker_id: The sticker_id of this SuperStickerMetadata.
        """
        self.openapi_types = {
            'alt_text': str,
            'alt_text_language': str,
            'sticker_id': str
        }

        self.attribute_map = {
            'alt_text': 'altText',
            'alt_text_language': 'altTextLanguage',
            'sticker_id': 'stickerId'
        }

        self._alt_text = alt_text
        self._alt_text_language = alt_text_language
        self._sticker_id = sticker_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuperStickerMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuperStickerMetadata of this SuperStickerMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt_text(self):
        """Gets the alt_text of this SuperStickerMetadata.

        Internationalized alt text that describes the sticker image and any animation associated with it.

        :return: The alt_text of this SuperStickerMetadata.
        :rtype: str
        """
        return self._alt_text

    @alt_text.setter
    def alt_text(self, alt_text):
        """Sets the alt_text of this SuperStickerMetadata.

        Internationalized alt text that describes the sticker image and any animation associated with it.

        :param alt_text: The alt_text of this SuperStickerMetadata.
        :type alt_text: str
        """

        self._alt_text = alt_text

    @property
    def alt_text_language(self):
        """Gets the alt_text_language of this SuperStickerMetadata.

        Specifies the localization language in which the alt text is returned.

        :return: The alt_text_language of this SuperStickerMetadata.
        :rtype: str
        """
        return self._alt_text_language

    @alt_text_language.setter
    def alt_text_language(self, alt_text_language):
        """Sets the alt_text_language of this SuperStickerMetadata.

        Specifies the localization language in which the alt text is returned.

        :param alt_text_language: The alt_text_language of this SuperStickerMetadata.
        :type alt_text_language: str
        """

        self._alt_text_language = alt_text_language

    @property
    def sticker_id(self):
        """Gets the sticker_id of this SuperStickerMetadata.

        Unique identifier of the Super Sticker. This is a shorter form of the alt_text that includes pack name and a recognizable characteristic of the sticker.

        :return: The sticker_id of this SuperStickerMetadata.
        :rtype: str
        """
        return self._sticker_id

    @sticker_id.setter
    def sticker_id(self, sticker_id):
        """Sets the sticker_id of this SuperStickerMetadata.

        Unique identifier of the Super Sticker. This is a shorter form of the alt_text that includes pack name and a recognizable characteristic of the sticker.

        :param sticker_id: The sticker_id of this SuperStickerMetadata.
        :type sticker_id: str
        """

        self._sticker_id = sticker_id
