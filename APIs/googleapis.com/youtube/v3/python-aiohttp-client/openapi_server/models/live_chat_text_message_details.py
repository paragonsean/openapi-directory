# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveChatTextMessageDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_text: str=None):
        """LiveChatTextMessageDetails - a model defined in OpenAPI

        :param message_text: The message_text of this LiveChatTextMessageDetails.
        """
        self.openapi_types = {
            'message_text': str
        }

        self.attribute_map = {
            'message_text': 'messageText'
        }

        self._message_text = message_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveChatTextMessageDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveChatTextMessageDetails of this LiveChatTextMessageDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_text(self):
        """Gets the message_text of this LiveChatTextMessageDetails.

        The user's message.

        :return: The message_text of this LiveChatTextMessageDetails.
        :rtype: str
        """
        return self._message_text

    @message_text.setter
    def message_text(self, message_text):
        """Sets the message_text of this LiveChatTextMessageDetails.

        The user's message.

        :param message_text: The message_text of this LiveChatTextMessageDetails.
        :type message_text: str
        """

        self._message_text = message_text
