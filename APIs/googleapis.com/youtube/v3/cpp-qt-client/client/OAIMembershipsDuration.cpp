/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMembershipsDuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMembershipsDuration::OAIMembershipsDuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMembershipsDuration::OAIMembershipsDuration() {
    this->initializeModel();
}

OAIMembershipsDuration::~OAIMembershipsDuration() {}

void OAIMembershipsDuration::initializeModel() {

    m_member_since_isSet = false;
    m_member_since_isValid = false;

    m_member_total_duration_months_isSet = false;
    m_member_total_duration_months_isValid = false;
}

void OAIMembershipsDuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMembershipsDuration::fromJsonObject(QJsonObject json) {

    m_member_since_isValid = ::OpenAPI::fromJsonValue(m_member_since, json[QString("memberSince")]);
    m_member_since_isSet = !json[QString("memberSince")].isNull() && m_member_since_isValid;

    m_member_total_duration_months_isValid = ::OpenAPI::fromJsonValue(m_member_total_duration_months, json[QString("memberTotalDurationMonths")]);
    m_member_total_duration_months_isSet = !json[QString("memberTotalDurationMonths")].isNull() && m_member_total_duration_months_isValid;
}

QString OAIMembershipsDuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMembershipsDuration::asJsonObject() const {
    QJsonObject obj;
    if (m_member_since_isSet) {
        obj.insert(QString("memberSince"), ::OpenAPI::toJsonValue(m_member_since));
    }
    if (m_member_total_duration_months_isSet) {
        obj.insert(QString("memberTotalDurationMonths"), ::OpenAPI::toJsonValue(m_member_total_duration_months));
    }
    return obj;
}

QString OAIMembershipsDuration::getMemberSince() const {
    return m_member_since;
}
void OAIMembershipsDuration::setMemberSince(const QString &member_since) {
    m_member_since = member_since;
    m_member_since_isSet = true;
}

bool OAIMembershipsDuration::is_member_since_Set() const{
    return m_member_since_isSet;
}

bool OAIMembershipsDuration::is_member_since_Valid() const{
    return m_member_since_isValid;
}

qint32 OAIMembershipsDuration::getMemberTotalDurationMonths() const {
    return m_member_total_duration_months;
}
void OAIMembershipsDuration::setMemberTotalDurationMonths(const qint32 &member_total_duration_months) {
    m_member_total_duration_months = member_total_duration_months;
    m_member_total_duration_months_isSet = true;
}

bool OAIMembershipsDuration::is_member_total_duration_months_Set() const{
    return m_member_total_duration_months_isSet;
}

bool OAIMembershipsDuration::is_member_total_duration_months_Valid() const{
    return m_member_total_duration_months_isValid;
}

bool OAIMembershipsDuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_since_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_total_duration_months_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMembershipsDuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
