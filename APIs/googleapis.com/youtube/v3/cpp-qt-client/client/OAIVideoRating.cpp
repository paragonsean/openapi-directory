/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideoRating.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideoRating::OAIVideoRating(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideoRating::OAIVideoRating() {
    this->initializeModel();
}

OAIVideoRating::~OAIVideoRating() {}

void OAIVideoRating::initializeModel() {

    m_rating_isSet = false;
    m_rating_isValid = false;

    m_video_id_isSet = false;
    m_video_id_isValid = false;
}

void OAIVideoRating::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideoRating::fromJsonObject(QJsonObject json) {

    m_rating_isValid = ::OpenAPI::fromJsonValue(m_rating, json[QString("rating")]);
    m_rating_isSet = !json[QString("rating")].isNull() && m_rating_isValid;

    m_video_id_isValid = ::OpenAPI::fromJsonValue(m_video_id, json[QString("videoId")]);
    m_video_id_isSet = !json[QString("videoId")].isNull() && m_video_id_isValid;
}

QString OAIVideoRating::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideoRating::asJsonObject() const {
    QJsonObject obj;
    if (m_rating_isSet) {
        obj.insert(QString("rating"), ::OpenAPI::toJsonValue(m_rating));
    }
    if (m_video_id_isSet) {
        obj.insert(QString("videoId"), ::OpenAPI::toJsonValue(m_video_id));
    }
    return obj;
}

QString OAIVideoRating::getRating() const {
    return m_rating;
}
void OAIVideoRating::setRating(const QString &rating) {
    m_rating = rating;
    m_rating_isSet = true;
}

bool OAIVideoRating::is_rating_Set() const{
    return m_rating_isSet;
}

bool OAIVideoRating::is_rating_Valid() const{
    return m_rating_isValid;
}

QString OAIVideoRating::getVideoId() const {
    return m_video_id;
}
void OAIVideoRating::setVideoId(const QString &video_id) {
    m_video_id = video_id;
    m_video_id_isSet = true;
}

bool OAIVideoRating::is_video_id_Set() const{
    return m_video_id_isSet;
}

bool OAIVideoRating::is_video_id_Valid() const{
    return m_video_id_isValid;
}

bool OAIVideoRating::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideoRating::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
