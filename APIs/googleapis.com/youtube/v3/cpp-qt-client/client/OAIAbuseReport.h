/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAbuseReport.h
 *
 * 
 */

#ifndef OAIAbuseReport_H
#define OAIAbuseReport_H

#include <QJsonObject>

#include "OAIAbuseType.h"
#include "OAIEntity.h"
#include "OAIRelatedEntity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAbuseType;
class OAIRelatedEntity;
class OAIEntity;

class OAIAbuseReport : public OAIObject {
public:
    OAIAbuseReport();
    OAIAbuseReport(QString json);
    ~OAIAbuseReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAbuseType> getAbuseTypes() const;
    void setAbuseTypes(const QList<OAIAbuseType> &abuse_types);
    bool is_abuse_types_Set() const;
    bool is_abuse_types_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIRelatedEntity> getRelatedEntities() const;
    void setRelatedEntities(const QList<OAIRelatedEntity> &related_entities);
    bool is_related_entities_Set() const;
    bool is_related_entities_Valid() const;

    OAIEntity getSubject() const;
    void setSubject(const OAIEntity &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAbuseType> m_abuse_types;
    bool m_abuse_types_isSet;
    bool m_abuse_types_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIRelatedEntity> m_related_entities;
    bool m_related_entities_isSet;
    bool m_related_entities_isValid;

    OAIEntity m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAbuseReport)

#endif // OAIAbuseReport_H
