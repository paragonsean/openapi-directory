/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInvideoBranding.h
 *
 * LINT.IfChange Describes an invideo branding.
 */

#ifndef OAIInvideoBranding_H
#define OAIInvideoBranding_H

#include <QJsonObject>

#include "OAIInvideoPosition.h"
#include "OAIInvideoTiming.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInvideoPosition;
class OAIInvideoTiming;

class OAIInvideoBranding : public OAIObject {
public:
    OAIInvideoBranding();
    OAIInvideoBranding(QString json);
    ~OAIInvideoBranding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getImageBytes() const;
    void setImageBytes(const QByteArray &image_bytes);
    bool is_image_bytes_Set() const;
    bool is_image_bytes_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    OAIInvideoPosition getPosition() const;
    void setPosition(const OAIInvideoPosition &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QString getTargetChannelId() const;
    void setTargetChannelId(const QString &target_channel_id);
    bool is_target_channel_id_Set() const;
    bool is_target_channel_id_Valid() const;

    OAIInvideoTiming getTiming() const;
    void setTiming(const OAIInvideoTiming &timing);
    bool is_timing_Set() const;
    bool is_timing_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_image_bytes;
    bool m_image_bytes_isSet;
    bool m_image_bytes_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    OAIInvideoPosition m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QString m_target_channel_id;
    bool m_target_channel_id_isSet;
    bool m_target_channel_id_isValid;

    OAIInvideoTiming m_timing;
    bool m_timing_isSet;
    bool m_timing_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInvideoBranding)

#endif // OAIInvideoBranding_H
