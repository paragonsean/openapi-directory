/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILiveChatMemberMilestoneChatDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILiveChatMemberMilestoneChatDetails::OAILiveChatMemberMilestoneChatDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILiveChatMemberMilestoneChatDetails::OAILiveChatMemberMilestoneChatDetails() {
    this->initializeModel();
}

OAILiveChatMemberMilestoneChatDetails::~OAILiveChatMemberMilestoneChatDetails() {}

void OAILiveChatMemberMilestoneChatDetails::initializeModel() {

    m_member_level_name_isSet = false;
    m_member_level_name_isValid = false;

    m_member_month_isSet = false;
    m_member_month_isValid = false;

    m_user_comment_isSet = false;
    m_user_comment_isValid = false;
}

void OAILiveChatMemberMilestoneChatDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILiveChatMemberMilestoneChatDetails::fromJsonObject(QJsonObject json) {

    m_member_level_name_isValid = ::OpenAPI::fromJsonValue(m_member_level_name, json[QString("memberLevelName")]);
    m_member_level_name_isSet = !json[QString("memberLevelName")].isNull() && m_member_level_name_isValid;

    m_member_month_isValid = ::OpenAPI::fromJsonValue(m_member_month, json[QString("memberMonth")]);
    m_member_month_isSet = !json[QString("memberMonth")].isNull() && m_member_month_isValid;

    m_user_comment_isValid = ::OpenAPI::fromJsonValue(m_user_comment, json[QString("userComment")]);
    m_user_comment_isSet = !json[QString("userComment")].isNull() && m_user_comment_isValid;
}

QString OAILiveChatMemberMilestoneChatDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILiveChatMemberMilestoneChatDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_member_level_name_isSet) {
        obj.insert(QString("memberLevelName"), ::OpenAPI::toJsonValue(m_member_level_name));
    }
    if (m_member_month_isSet) {
        obj.insert(QString("memberMonth"), ::OpenAPI::toJsonValue(m_member_month));
    }
    if (m_user_comment_isSet) {
        obj.insert(QString("userComment"), ::OpenAPI::toJsonValue(m_user_comment));
    }
    return obj;
}

QString OAILiveChatMemberMilestoneChatDetails::getMemberLevelName() const {
    return m_member_level_name;
}
void OAILiveChatMemberMilestoneChatDetails::setMemberLevelName(const QString &member_level_name) {
    m_member_level_name = member_level_name;
    m_member_level_name_isSet = true;
}

bool OAILiveChatMemberMilestoneChatDetails::is_member_level_name_Set() const{
    return m_member_level_name_isSet;
}

bool OAILiveChatMemberMilestoneChatDetails::is_member_level_name_Valid() const{
    return m_member_level_name_isValid;
}

qint32 OAILiveChatMemberMilestoneChatDetails::getMemberMonth() const {
    return m_member_month;
}
void OAILiveChatMemberMilestoneChatDetails::setMemberMonth(const qint32 &member_month) {
    m_member_month = member_month;
    m_member_month_isSet = true;
}

bool OAILiveChatMemberMilestoneChatDetails::is_member_month_Set() const{
    return m_member_month_isSet;
}

bool OAILiveChatMemberMilestoneChatDetails::is_member_month_Valid() const{
    return m_member_month_isValid;
}

QString OAILiveChatMemberMilestoneChatDetails::getUserComment() const {
    return m_user_comment;
}
void OAILiveChatMemberMilestoneChatDetails::setUserComment(const QString &user_comment) {
    m_user_comment = user_comment;
    m_user_comment_isSet = true;
}

bool OAILiveChatMemberMilestoneChatDetails::is_user_comment_Set() const{
    return m_user_comment_isSet;
}

bool OAILiveChatMemberMilestoneChatDetails::is_user_comment_Valid() const{
    return m_user_comment_isValid;
}

bool OAILiveChatMemberMilestoneChatDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_level_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_comment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILiveChatMemberMilestoneChatDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
