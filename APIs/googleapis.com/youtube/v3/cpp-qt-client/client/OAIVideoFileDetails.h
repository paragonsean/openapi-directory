/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoFileDetails.h
 *
 * Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.
 */

#ifndef OAIVideoFileDetails_H
#define OAIVideoFileDetails_H

#include <QJsonObject>

#include "OAIVideoFileDetailsAudioStream.h"
#include "OAIVideoFileDetailsVideoStream.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVideoFileDetailsAudioStream;
class OAIVideoFileDetailsVideoStream;

class OAIVideoFileDetails : public OAIObject {
public:
    OAIVideoFileDetails();
    OAIVideoFileDetails(QString json);
    ~OAIVideoFileDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIVideoFileDetailsAudioStream> getAudioStreams() const;
    void setAudioStreams(const QList<OAIVideoFileDetailsAudioStream> &audio_streams);
    bool is_audio_streams_Set() const;
    bool is_audio_streams_Valid() const;

    QString getBitrateBps() const;
    void setBitrateBps(const QString &bitrate_bps);
    bool is_bitrate_bps_Set() const;
    bool is_bitrate_bps_Valid() const;

    QString getContainer() const;
    void setContainer(const QString &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDurationMs() const;
    void setDurationMs(const QString &duration_ms);
    bool is_duration_ms_Set() const;
    bool is_duration_ms_Valid() const;

    QString getFileName() const;
    void setFileName(const QString &file_name);
    bool is_file_name_Set() const;
    bool is_file_name_Valid() const;

    QString getFileSize() const;
    void setFileSize(const QString &file_size);
    bool is_file_size_Set() const;
    bool is_file_size_Valid() const;

    QString getFileType() const;
    void setFileType(const QString &file_type);
    bool is_file_type_Set() const;
    bool is_file_type_Valid() const;

    QList<OAIVideoFileDetailsVideoStream> getVideoStreams() const;
    void setVideoStreams(const QList<OAIVideoFileDetailsVideoStream> &video_streams);
    bool is_video_streams_Set() const;
    bool is_video_streams_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIVideoFileDetailsAudioStream> m_audio_streams;
    bool m_audio_streams_isSet;
    bool m_audio_streams_isValid;

    QString m_bitrate_bps;
    bool m_bitrate_bps_isSet;
    bool m_bitrate_bps_isValid;

    QString m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_duration_ms;
    bool m_duration_ms_isSet;
    bool m_duration_ms_isValid;

    QString m_file_name;
    bool m_file_name_isSet;
    bool m_file_name_isValid;

    QString m_file_size;
    bool m_file_size_isSet;
    bool m_file_size_isValid;

    QString m_file_type;
    bool m_file_type_isSet;
    bool m_file_type_isValid;

    QList<OAIVideoFileDetailsVideoStream> m_video_streams;
    bool m_video_streams_isSet;
    bool m_video_streams_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoFileDetails)

#endif // OAIVideoFileDetails_H
