/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoStatistics.h
 *
 * Statistics about the video, such as the number of times the video was viewed or liked.
 */

#ifndef OAIVideoStatistics_H
#define OAIVideoStatistics_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVideoStatistics : public OAIObject {
public:
    OAIVideoStatistics();
    OAIVideoStatistics(QString json);
    ~OAIVideoStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCommentCount() const;
    void setCommentCount(const QString &comment_count);
    bool is_comment_count_Set() const;
    bool is_comment_count_Valid() const;

    QString getDislikeCount() const;
    void setDislikeCount(const QString &dislike_count);
    bool is_dislike_count_Set() const;
    bool is_dislike_count_Valid() const;

    Q_DECL_DEPRECATED QString getFavoriteCount() const;
    Q_DECL_DEPRECATED void setFavoriteCount(const QString &favorite_count);
    Q_DECL_DEPRECATED bool is_favorite_count_Set() const;
    Q_DECL_DEPRECATED bool is_favorite_count_Valid() const;

    QString getLikeCount() const;
    void setLikeCount(const QString &like_count);
    bool is_like_count_Set() const;
    bool is_like_count_Valid() const;

    QString getViewCount() const;
    void setViewCount(const QString &view_count);
    bool is_view_count_Set() const;
    bool is_view_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comment_count;
    bool m_comment_count_isSet;
    bool m_comment_count_isValid;

    QString m_dislike_count;
    bool m_dislike_count_isSet;
    bool m_dislike_count_isValid;

    QString m_favorite_count;
    bool m_favorite_count_isSet;
    bool m_favorite_count_isValid;

    QString m_like_count;
    bool m_like_count_isSet;
    bool m_like_count_isValid;

    QString m_view_count;
    bool m_view_count_isSet;
    bool m_view_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoStatistics)

#endif // OAIVideoStatistics_H
