/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelToStoreLinkDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelToStoreLinkDetails::OAIChannelToStoreLinkDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelToStoreLinkDetails::OAIChannelToStoreLinkDetails() {
    this->initializeModel();
}

OAIChannelToStoreLinkDetails::~OAIChannelToStoreLinkDetails() {}

void OAIChannelToStoreLinkDetails::initializeModel() {

    m_billing_details_isSet = false;
    m_billing_details_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_store_name_isSet = false;
    m_store_name_isValid = false;

    m_store_url_isSet = false;
    m_store_url_isValid = false;
}

void OAIChannelToStoreLinkDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelToStoreLinkDetails::fromJsonObject(QJsonObject json) {

    m_billing_details_isValid = ::OpenAPI::fromJsonValue(m_billing_details, json[QString("billingDetails")]);
    m_billing_details_isSet = !json[QString("billingDetails")].isNull() && m_billing_details_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_store_name_isValid = ::OpenAPI::fromJsonValue(m_store_name, json[QString("storeName")]);
    m_store_name_isSet = !json[QString("storeName")].isNull() && m_store_name_isValid;

    m_store_url_isValid = ::OpenAPI::fromJsonValue(m_store_url, json[QString("storeUrl")]);
    m_store_url_isSet = !json[QString("storeUrl")].isNull() && m_store_url_isValid;
}

QString OAIChannelToStoreLinkDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelToStoreLinkDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_details.isSet()) {
        obj.insert(QString("billingDetails"), ::OpenAPI::toJsonValue(m_billing_details));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_store_name_isSet) {
        obj.insert(QString("storeName"), ::OpenAPI::toJsonValue(m_store_name));
    }
    if (m_store_url_isSet) {
        obj.insert(QString("storeUrl"), ::OpenAPI::toJsonValue(m_store_url));
    }
    return obj;
}

OAIChannelToStoreLinkDetailsBillingDetails OAIChannelToStoreLinkDetails::getBillingDetails() const {
    return m_billing_details;
}
void OAIChannelToStoreLinkDetails::setBillingDetails(const OAIChannelToStoreLinkDetailsBillingDetails &billing_details) {
    m_billing_details = billing_details;
    m_billing_details_isSet = true;
}

bool OAIChannelToStoreLinkDetails::is_billing_details_Set() const{
    return m_billing_details_isSet;
}

bool OAIChannelToStoreLinkDetails::is_billing_details_Valid() const{
    return m_billing_details_isValid;
}

QString OAIChannelToStoreLinkDetails::getMerchantId() const {
    return m_merchant_id;
}
void OAIChannelToStoreLinkDetails::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIChannelToStoreLinkDetails::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIChannelToStoreLinkDetails::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAIChannelToStoreLinkDetails::getStoreName() const {
    return m_store_name;
}
void OAIChannelToStoreLinkDetails::setStoreName(const QString &store_name) {
    m_store_name = store_name;
    m_store_name_isSet = true;
}

bool OAIChannelToStoreLinkDetails::is_store_name_Set() const{
    return m_store_name_isSet;
}

bool OAIChannelToStoreLinkDetails::is_store_name_Valid() const{
    return m_store_name_isValid;
}

QString OAIChannelToStoreLinkDetails::getStoreUrl() const {
    return m_store_url;
}
void OAIChannelToStoreLinkDetails::setStoreUrl(const QString &store_url) {
    m_store_url = store_url;
    m_store_url_isSet = true;
}

bool OAIChannelToStoreLinkDetails::is_store_url_Set() const{
    return m_store_url_isSet;
}

bool OAIChannelToStoreLinkDetails::is_store_url_Valid() const{
    return m_store_url_isValid;
}

bool OAIChannelToStoreLinkDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelToStoreLinkDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
