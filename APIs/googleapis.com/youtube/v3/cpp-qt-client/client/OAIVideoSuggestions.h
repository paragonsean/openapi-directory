/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoSuggestions.h
 *
 * Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.
 */

#ifndef OAIVideoSuggestions_H
#define OAIVideoSuggestions_H

#include <QJsonObject>

#include "OAIVideoSuggestionsTagSuggestion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVideoSuggestionsTagSuggestion;

class OAIVideoSuggestions : public OAIObject {
public:
    OAIVideoSuggestions();
    OAIVideoSuggestions(QString json);
    ~OAIVideoSuggestions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getEditorSuggestions() const;
    void setEditorSuggestions(const QList<QString> &editor_suggestions);
    bool is_editor_suggestions_Set() const;
    bool is_editor_suggestions_Valid() const;

    QList<QString> getProcessingErrors() const;
    void setProcessingErrors(const QList<QString> &processing_errors);
    bool is_processing_errors_Set() const;
    bool is_processing_errors_Valid() const;

    QList<QString> getProcessingHints() const;
    void setProcessingHints(const QList<QString> &processing_hints);
    bool is_processing_hints_Set() const;
    bool is_processing_hints_Valid() const;

    QList<QString> getProcessingWarnings() const;
    void setProcessingWarnings(const QList<QString> &processing_warnings);
    bool is_processing_warnings_Set() const;
    bool is_processing_warnings_Valid() const;

    QList<OAIVideoSuggestionsTagSuggestion> getTagSuggestions() const;
    void setTagSuggestions(const QList<OAIVideoSuggestionsTagSuggestion> &tag_suggestions);
    bool is_tag_suggestions_Set() const;
    bool is_tag_suggestions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_editor_suggestions;
    bool m_editor_suggestions_isSet;
    bool m_editor_suggestions_isValid;

    QList<QString> m_processing_errors;
    bool m_processing_errors_isSet;
    bool m_processing_errors_isValid;

    QList<QString> m_processing_hints;
    bool m_processing_hints_isSet;
    bool m_processing_hints_isValid;

    QList<QString> m_processing_warnings;
    bool m_processing_warnings_isSet;
    bool m_processing_warnings_isValid;

    QList<OAIVideoSuggestionsTagSuggestion> m_tag_suggestions;
    bool m_tag_suggestions_isSet;
    bool m_tag_suggestions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoSuggestions)

#endif // OAIVideoSuggestions_H
