/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelContentDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelContentDetails::OAIChannelContentDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelContentDetails::OAIChannelContentDetails() {
    this->initializeModel();
}

OAIChannelContentDetails::~OAIChannelContentDetails() {}

void OAIChannelContentDetails::initializeModel() {

    m_related_playlists_isSet = false;
    m_related_playlists_isValid = false;
}

void OAIChannelContentDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelContentDetails::fromJsonObject(QJsonObject json) {

    m_related_playlists_isValid = ::OpenAPI::fromJsonValue(m_related_playlists, json[QString("relatedPlaylists")]);
    m_related_playlists_isSet = !json[QString("relatedPlaylists")].isNull() && m_related_playlists_isValid;
}

QString OAIChannelContentDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelContentDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_related_playlists.isSet()) {
        obj.insert(QString("relatedPlaylists"), ::OpenAPI::toJsonValue(m_related_playlists));
    }
    return obj;
}

OAIChannelContentDetails_relatedPlaylists OAIChannelContentDetails::getRelatedPlaylists() const {
    return m_related_playlists;
}
void OAIChannelContentDetails::setRelatedPlaylists(const OAIChannelContentDetails_relatedPlaylists &related_playlists) {
    m_related_playlists = related_playlists;
    m_related_playlists_isSet = true;
}

bool OAIChannelContentDetails::is_related_playlists_Set() const{
    return m_related_playlists_isSet;
}

bool OAIChannelContentDetails::is_related_playlists_Valid() const{
    return m_related_playlists_isValid;
}

bool OAIChannelContentDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_related_playlists.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelContentDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
