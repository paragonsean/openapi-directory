/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription.h
 *
 * A *subscription* resource contains information about a YouTube user subscription. A subscription notifies a user when new videos are added to a channel or when another user takes one of several actions on YouTube, such as uploading a video, rating a video, or commenting on a video.
 */

#ifndef OAISubscription_H
#define OAISubscription_H

#include <QJsonObject>

#include "OAISubscriptionContentDetails.h"
#include "OAISubscriptionSnippet.h"
#include "OAISubscriptionSubscriberSnippet.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubscriptionContentDetails;
class OAISubscriptionSnippet;
class OAISubscriptionSubscriberSnippet;

class OAISubscription : public OAIObject {
public:
    OAISubscription();
    OAISubscription(QString json);
    ~OAISubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISubscriptionContentDetails getContentDetails() const;
    void setContentDetails(const OAISubscriptionContentDetails &content_details);
    bool is_content_details_Set() const;
    bool is_content_details_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAISubscriptionSnippet getSnippet() const;
    void setSnippet(const OAISubscriptionSnippet &snippet);
    bool is_snippet_Set() const;
    bool is_snippet_Valid() const;

    OAISubscriptionSubscriberSnippet getSubscriberSnippet() const;
    void setSubscriberSnippet(const OAISubscriptionSubscriberSnippet &subscriber_snippet);
    bool is_subscriber_snippet_Set() const;
    bool is_subscriber_snippet_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISubscriptionContentDetails m_content_details;
    bool m_content_details_isSet;
    bool m_content_details_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAISubscriptionSnippet m_snippet;
    bool m_snippet_isSet;
    bool m_snippet_isValid;

    OAISubscriptionSubscriberSnippet m_subscriber_snippet;
    bool m_subscriber_snippet_isSet;
    bool m_subscriber_snippet_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscription)

#endif // OAISubscription_H
