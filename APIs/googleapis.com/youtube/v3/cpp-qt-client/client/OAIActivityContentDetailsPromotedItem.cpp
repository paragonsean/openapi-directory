/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivityContentDetailsPromotedItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivityContentDetailsPromotedItem::OAIActivityContentDetailsPromotedItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivityContentDetailsPromotedItem::OAIActivityContentDetailsPromotedItem() {
    this->initializeModel();
}

OAIActivityContentDetailsPromotedItem::~OAIActivityContentDetailsPromotedItem() {}

void OAIActivityContentDetailsPromotedItem::initializeModel() {

    m_ad_tag_isSet = false;
    m_ad_tag_isValid = false;

    m_click_tracking_url_isSet = false;
    m_click_tracking_url_isValid = false;

    m_creative_view_url_isSet = false;
    m_creative_view_url_isValid = false;

    m_cta_type_isSet = false;
    m_cta_type_isValid = false;

    m_custom_cta_button_text_isSet = false;
    m_custom_cta_button_text_isValid = false;

    m_description_text_isSet = false;
    m_description_text_isValid = false;

    m_destination_url_isSet = false;
    m_destination_url_isValid = false;

    m_forecasting_url_isSet = false;
    m_forecasting_url_isValid = false;

    m_impression_url_isSet = false;
    m_impression_url_isValid = false;

    m_video_id_isSet = false;
    m_video_id_isValid = false;
}

void OAIActivityContentDetailsPromotedItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivityContentDetailsPromotedItem::fromJsonObject(QJsonObject json) {

    m_ad_tag_isValid = ::OpenAPI::fromJsonValue(m_ad_tag, json[QString("adTag")]);
    m_ad_tag_isSet = !json[QString("adTag")].isNull() && m_ad_tag_isValid;

    m_click_tracking_url_isValid = ::OpenAPI::fromJsonValue(m_click_tracking_url, json[QString("clickTrackingUrl")]);
    m_click_tracking_url_isSet = !json[QString("clickTrackingUrl")].isNull() && m_click_tracking_url_isValid;

    m_creative_view_url_isValid = ::OpenAPI::fromJsonValue(m_creative_view_url, json[QString("creativeViewUrl")]);
    m_creative_view_url_isSet = !json[QString("creativeViewUrl")].isNull() && m_creative_view_url_isValid;

    m_cta_type_isValid = ::OpenAPI::fromJsonValue(m_cta_type, json[QString("ctaType")]);
    m_cta_type_isSet = !json[QString("ctaType")].isNull() && m_cta_type_isValid;

    m_custom_cta_button_text_isValid = ::OpenAPI::fromJsonValue(m_custom_cta_button_text, json[QString("customCtaButtonText")]);
    m_custom_cta_button_text_isSet = !json[QString("customCtaButtonText")].isNull() && m_custom_cta_button_text_isValid;

    m_description_text_isValid = ::OpenAPI::fromJsonValue(m_description_text, json[QString("descriptionText")]);
    m_description_text_isSet = !json[QString("descriptionText")].isNull() && m_description_text_isValid;

    m_destination_url_isValid = ::OpenAPI::fromJsonValue(m_destination_url, json[QString("destinationUrl")]);
    m_destination_url_isSet = !json[QString("destinationUrl")].isNull() && m_destination_url_isValid;

    m_forecasting_url_isValid = ::OpenAPI::fromJsonValue(m_forecasting_url, json[QString("forecastingUrl")]);
    m_forecasting_url_isSet = !json[QString("forecastingUrl")].isNull() && m_forecasting_url_isValid;

    m_impression_url_isValid = ::OpenAPI::fromJsonValue(m_impression_url, json[QString("impressionUrl")]);
    m_impression_url_isSet = !json[QString("impressionUrl")].isNull() && m_impression_url_isValid;

    m_video_id_isValid = ::OpenAPI::fromJsonValue(m_video_id, json[QString("videoId")]);
    m_video_id_isSet = !json[QString("videoId")].isNull() && m_video_id_isValid;
}

QString OAIActivityContentDetailsPromotedItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivityContentDetailsPromotedItem::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_tag_isSet) {
        obj.insert(QString("adTag"), ::OpenAPI::toJsonValue(m_ad_tag));
    }
    if (m_click_tracking_url_isSet) {
        obj.insert(QString("clickTrackingUrl"), ::OpenAPI::toJsonValue(m_click_tracking_url));
    }
    if (m_creative_view_url_isSet) {
        obj.insert(QString("creativeViewUrl"), ::OpenAPI::toJsonValue(m_creative_view_url));
    }
    if (m_cta_type_isSet) {
        obj.insert(QString("ctaType"), ::OpenAPI::toJsonValue(m_cta_type));
    }
    if (m_custom_cta_button_text_isSet) {
        obj.insert(QString("customCtaButtonText"), ::OpenAPI::toJsonValue(m_custom_cta_button_text));
    }
    if (m_description_text_isSet) {
        obj.insert(QString("descriptionText"), ::OpenAPI::toJsonValue(m_description_text));
    }
    if (m_destination_url_isSet) {
        obj.insert(QString("destinationUrl"), ::OpenAPI::toJsonValue(m_destination_url));
    }
    if (m_forecasting_url.size() > 0) {
        obj.insert(QString("forecastingUrl"), ::OpenAPI::toJsonValue(m_forecasting_url));
    }
    if (m_impression_url.size() > 0) {
        obj.insert(QString("impressionUrl"), ::OpenAPI::toJsonValue(m_impression_url));
    }
    if (m_video_id_isSet) {
        obj.insert(QString("videoId"), ::OpenAPI::toJsonValue(m_video_id));
    }
    return obj;
}

QString OAIActivityContentDetailsPromotedItem::getAdTag() const {
    return m_ad_tag;
}
void OAIActivityContentDetailsPromotedItem::setAdTag(const QString &ad_tag) {
    m_ad_tag = ad_tag;
    m_ad_tag_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_ad_tag_Set() const{
    return m_ad_tag_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_ad_tag_Valid() const{
    return m_ad_tag_isValid;
}

QString OAIActivityContentDetailsPromotedItem::getClickTrackingUrl() const {
    return m_click_tracking_url;
}
void OAIActivityContentDetailsPromotedItem::setClickTrackingUrl(const QString &click_tracking_url) {
    m_click_tracking_url = click_tracking_url;
    m_click_tracking_url_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_click_tracking_url_Set() const{
    return m_click_tracking_url_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_click_tracking_url_Valid() const{
    return m_click_tracking_url_isValid;
}

QString OAIActivityContentDetailsPromotedItem::getCreativeViewUrl() const {
    return m_creative_view_url;
}
void OAIActivityContentDetailsPromotedItem::setCreativeViewUrl(const QString &creative_view_url) {
    m_creative_view_url = creative_view_url;
    m_creative_view_url_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_creative_view_url_Set() const{
    return m_creative_view_url_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_creative_view_url_Valid() const{
    return m_creative_view_url_isValid;
}

QString OAIActivityContentDetailsPromotedItem::getCtaType() const {
    return m_cta_type;
}
void OAIActivityContentDetailsPromotedItem::setCtaType(const QString &cta_type) {
    m_cta_type = cta_type;
    m_cta_type_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_cta_type_Set() const{
    return m_cta_type_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_cta_type_Valid() const{
    return m_cta_type_isValid;
}

QString OAIActivityContentDetailsPromotedItem::getCustomCtaButtonText() const {
    return m_custom_cta_button_text;
}
void OAIActivityContentDetailsPromotedItem::setCustomCtaButtonText(const QString &custom_cta_button_text) {
    m_custom_cta_button_text = custom_cta_button_text;
    m_custom_cta_button_text_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_custom_cta_button_text_Set() const{
    return m_custom_cta_button_text_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_custom_cta_button_text_Valid() const{
    return m_custom_cta_button_text_isValid;
}

QString OAIActivityContentDetailsPromotedItem::getDescriptionText() const {
    return m_description_text;
}
void OAIActivityContentDetailsPromotedItem::setDescriptionText(const QString &description_text) {
    m_description_text = description_text;
    m_description_text_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_description_text_Set() const{
    return m_description_text_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_description_text_Valid() const{
    return m_description_text_isValid;
}

QString OAIActivityContentDetailsPromotedItem::getDestinationUrl() const {
    return m_destination_url;
}
void OAIActivityContentDetailsPromotedItem::setDestinationUrl(const QString &destination_url) {
    m_destination_url = destination_url;
    m_destination_url_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_destination_url_Set() const{
    return m_destination_url_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_destination_url_Valid() const{
    return m_destination_url_isValid;
}

QList<QString> OAIActivityContentDetailsPromotedItem::getForecastingUrl() const {
    return m_forecasting_url;
}
void OAIActivityContentDetailsPromotedItem::setForecastingUrl(const QList<QString> &forecasting_url) {
    m_forecasting_url = forecasting_url;
    m_forecasting_url_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_forecasting_url_Set() const{
    return m_forecasting_url_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_forecasting_url_Valid() const{
    return m_forecasting_url_isValid;
}

QList<QString> OAIActivityContentDetailsPromotedItem::getImpressionUrl() const {
    return m_impression_url;
}
void OAIActivityContentDetailsPromotedItem::setImpressionUrl(const QList<QString> &impression_url) {
    m_impression_url = impression_url;
    m_impression_url_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_impression_url_Set() const{
    return m_impression_url_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_impression_url_Valid() const{
    return m_impression_url_isValid;
}

QString OAIActivityContentDetailsPromotedItem::getVideoId() const {
    return m_video_id;
}
void OAIActivityContentDetailsPromotedItem::setVideoId(const QString &video_id) {
    m_video_id = video_id;
    m_video_id_isSet = true;
}

bool OAIActivityContentDetailsPromotedItem::is_video_id_Set() const{
    return m_video_id_isSet;
}

bool OAIActivityContentDetailsPromotedItem::is_video_id_Valid() const{
    return m_video_id_isValid;
}

bool OAIActivityContentDetailsPromotedItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_click_tracking_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creative_view_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cta_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_cta_button_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forecasting_url.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_impression_url.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivityContentDetailsPromotedItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
