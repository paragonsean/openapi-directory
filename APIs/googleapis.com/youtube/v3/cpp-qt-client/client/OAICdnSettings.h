/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICdnSettings.h
 *
 * Brief description of the live stream cdn settings.
 */

#ifndef OAICdnSettings_H
#define OAICdnSettings_H

#include <QJsonObject>

#include "OAIIngestionInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIngestionInfo;

class OAICdnSettings : public OAIObject {
public:
    OAICdnSettings();
    OAICdnSettings(QString json);
    ~OAICdnSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QString getFormat() const;
    Q_DECL_DEPRECATED void setFormat(const QString &format);
    Q_DECL_DEPRECATED bool is_format_Set() const;
    Q_DECL_DEPRECATED bool is_format_Valid() const;

    QString getFrameRate() const;
    void setFrameRate(const QString &frame_rate);
    bool is_frame_rate_Set() const;
    bool is_frame_rate_Valid() const;

    OAIIngestionInfo getIngestionInfo() const;
    void setIngestionInfo(const OAIIngestionInfo &ingestion_info);
    bool is_ingestion_info_Set() const;
    bool is_ingestion_info_Valid() const;

    QString getIngestionType() const;
    void setIngestionType(const QString &ingestion_type);
    bool is_ingestion_type_Set() const;
    bool is_ingestion_type_Valid() const;

    QString getResolution() const;
    void setResolution(const QString &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_frame_rate;
    bool m_frame_rate_isSet;
    bool m_frame_rate_isValid;

    OAIIngestionInfo m_ingestion_info;
    bool m_ingestion_info_isSet;
    bool m_ingestion_info_isValid;

    QString m_ingestion_type;
    bool m_ingestion_type_isSet;
    bool m_ingestion_type_isValid;

    QString m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICdnSettings)

#endif // OAICdnSettings_H
