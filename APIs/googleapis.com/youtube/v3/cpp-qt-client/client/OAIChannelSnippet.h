/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelSnippet.h
 *
 * Basic details about a channel, including title, description and thumbnails.
 */

#ifndef OAIChannelSnippet_H
#define OAIChannelSnippet_H

#include <QJsonObject>

#include "OAIChannelLocalization.h"
#include "OAIThumbnailDetails.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChannelLocalization;
class OAIThumbnailDetails;

class OAIChannelSnippet : public OAIObject {
public:
    OAIChannelSnippet();
    OAIChannelSnippet(QString json);
    ~OAIChannelSnippet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCustomUrl() const;
    void setCustomUrl(const QString &custom_url);
    bool is_custom_url_Set() const;
    bool is_custom_url_Valid() const;

    QString getDefaultLanguage() const;
    void setDefaultLanguage(const QString &default_language);
    bool is_default_language_Set() const;
    bool is_default_language_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIChannelLocalization getLocalized() const;
    void setLocalized(const OAIChannelLocalization &localized);
    bool is_localized_Set() const;
    bool is_localized_Valid() const;

    QDateTime getPublishedAt() const;
    void setPublishedAt(const QDateTime &published_at);
    bool is_published_at_Set() const;
    bool is_published_at_Valid() const;

    OAIThumbnailDetails getThumbnails() const;
    void setThumbnails(const OAIThumbnailDetails &thumbnails);
    bool is_thumbnails_Set() const;
    bool is_thumbnails_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_custom_url;
    bool m_custom_url_isSet;
    bool m_custom_url_isValid;

    QString m_default_language;
    bool m_default_language_isSet;
    bool m_default_language_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIChannelLocalization m_localized;
    bool m_localized_isSet;
    bool m_localized_isValid;

    QDateTime m_published_at;
    bool m_published_at_isSet;
    bool m_published_at_isValid;

    OAIThumbnailDetails m_thumbnails;
    bool m_thumbnails_isSet;
    bool m_thumbnails_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelSnippet)

#endif // OAIChannelSnippet_H
