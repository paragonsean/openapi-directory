/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiveBroadcastSnippet.h
 *
 * Basic broadcast information.
 */

#ifndef OAILiveBroadcastSnippet_H
#define OAILiveBroadcastSnippet_H

#include <QJsonObject>

#include "OAIThumbnailDetails.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIThumbnailDetails;

class OAILiveBroadcastSnippet : public OAIObject {
public:
    OAILiveBroadcastSnippet();
    OAILiveBroadcastSnippet(QString json);
    ~OAILiveBroadcastSnippet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getActualEndTime() const;
    void setActualEndTime(const QDateTime &actual_end_time);
    bool is_actual_end_time_Set() const;
    bool is_actual_end_time_Valid() const;

    QDateTime getActualStartTime() const;
    void setActualStartTime(const QDateTime &actual_start_time);
    bool is_actual_start_time_Set() const;
    bool is_actual_start_time_Valid() const;

    QString getChannelId() const;
    void setChannelId(const QString &channel_id);
    bool is_channel_id_Set() const;
    bool is_channel_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isIsDefaultBroadcast() const;
    void setIsDefaultBroadcast(const bool &is_default_broadcast);
    bool is_is_default_broadcast_Set() const;
    bool is_is_default_broadcast_Valid() const;

    QString getLiveChatId() const;
    void setLiveChatId(const QString &live_chat_id);
    bool is_live_chat_id_Set() const;
    bool is_live_chat_id_Valid() const;

    QDateTime getPublishedAt() const;
    void setPublishedAt(const QDateTime &published_at);
    bool is_published_at_Set() const;
    bool is_published_at_Valid() const;

    QDateTime getScheduledEndTime() const;
    void setScheduledEndTime(const QDateTime &scheduled_end_time);
    bool is_scheduled_end_time_Set() const;
    bool is_scheduled_end_time_Valid() const;

    QDateTime getScheduledStartTime() const;
    void setScheduledStartTime(const QDateTime &scheduled_start_time);
    bool is_scheduled_start_time_Set() const;
    bool is_scheduled_start_time_Valid() const;

    OAIThumbnailDetails getThumbnails() const;
    void setThumbnails(const OAIThumbnailDetails &thumbnails);
    bool is_thumbnails_Set() const;
    bool is_thumbnails_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_actual_end_time;
    bool m_actual_end_time_isSet;
    bool m_actual_end_time_isValid;

    QDateTime m_actual_start_time;
    bool m_actual_start_time_isSet;
    bool m_actual_start_time_isValid;

    QString m_channel_id;
    bool m_channel_id_isSet;
    bool m_channel_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_is_default_broadcast;
    bool m_is_default_broadcast_isSet;
    bool m_is_default_broadcast_isValid;

    QString m_live_chat_id;
    bool m_live_chat_id_isSet;
    bool m_live_chat_id_isValid;

    QDateTime m_published_at;
    bool m_published_at_isSet;
    bool m_published_at_isValid;

    QDateTime m_scheduled_end_time;
    bool m_scheduled_end_time_isSet;
    bool m_scheduled_end_time_isValid;

    QDateTime m_scheduled_start_time;
    bool m_scheduled_start_time_isSet;
    bool m_scheduled_start_time_isValid;

    OAIThumbnailDetails m_thumbnails;
    bool m_thumbnails_isSet;
    bool m_thumbnails_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiveBroadcastSnippet)

#endif // OAILiveBroadcastSnippet_H
