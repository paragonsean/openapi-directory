/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoContentDetails.h
 *
 * Details about the content of a YouTube Video.
 */

#ifndef OAIVideoContentDetails_H
#define OAIVideoContentDetails_H

#include <QJsonObject>

#include "OAIAccessPolicy.h"
#include "OAIContentRating.h"
#include "OAIVideoContentDetailsRegionRestriction.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContentRating;
class OAIAccessPolicy;
class OAIVideoContentDetailsRegionRestriction;

class OAIVideoContentDetails : public OAIObject {
public:
    OAIVideoContentDetails();
    OAIVideoContentDetails(QString json);
    ~OAIVideoContentDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    OAIContentRating getContentRating() const;
    void setContentRating(const OAIContentRating &content_rating);
    bool is_content_rating_Set() const;
    bool is_content_rating_Valid() const;

    OAIAccessPolicy getCountryRestriction() const;
    void setCountryRestriction(const OAIAccessPolicy &country_restriction);
    bool is_country_restriction_Set() const;
    bool is_country_restriction_Valid() const;

    QString getDefinition() const;
    void setDefinition(const QString &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    QString getDimension() const;
    void setDimension(const QString &dimension);
    bool is_dimension_Set() const;
    bool is_dimension_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    bool isHasCustomThumbnail() const;
    void setHasCustomThumbnail(const bool &has_custom_thumbnail);
    bool is_has_custom_thumbnail_Set() const;
    bool is_has_custom_thumbnail_Valid() const;

    bool isLicensedContent() const;
    void setLicensedContent(const bool &licensed_content);
    bool is_licensed_content_Set() const;
    bool is_licensed_content_Valid() const;

    QString getProjection() const;
    void setProjection(const QString &projection);
    bool is_projection_Set() const;
    bool is_projection_Valid() const;

    OAIVideoContentDetailsRegionRestriction getRegionRestriction() const;
    void setRegionRestriction(const OAIVideoContentDetailsRegionRestriction &region_restriction);
    bool is_region_restriction_Set() const;
    bool is_region_restriction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    OAIContentRating m_content_rating;
    bool m_content_rating_isSet;
    bool m_content_rating_isValid;

    OAIAccessPolicy m_country_restriction;
    bool m_country_restriction_isSet;
    bool m_country_restriction_isValid;

    QString m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    QString m_dimension;
    bool m_dimension_isSet;
    bool m_dimension_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    bool m_has_custom_thumbnail;
    bool m_has_custom_thumbnail_isSet;
    bool m_has_custom_thumbnail_isValid;

    bool m_licensed_content;
    bool m_licensed_content_isSet;
    bool m_licensed_content_isValid;

    QString m_projection;
    bool m_projection_isSet;
    bool m_projection_isValid;

    OAIVideoContentDetailsRegionRestriction m_region_restriction;
    bool m_region_restriction_isSet;
    bool m_region_restriction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoContentDetails)

#endif // OAIVideoContentDetails_H
