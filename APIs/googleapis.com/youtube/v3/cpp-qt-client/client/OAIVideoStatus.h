/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoStatus.h
 *
 * Basic details about a video category, such as its localized title. Next Id: 18
 */

#ifndef OAIVideoStatus_H
#define OAIVideoStatus_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVideoStatus : public OAIObject {
public:
    OAIVideoStatus();
    OAIVideoStatus(QString json);
    ~OAIVideoStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEmbeddable() const;
    void setEmbeddable(const bool &embeddable);
    bool is_embeddable_Set() const;
    bool is_embeddable_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    bool isMadeForKids() const;
    void setMadeForKids(const bool &made_for_kids);
    bool is_made_for_kids_Set() const;
    bool is_made_for_kids_Valid() const;

    QString getPrivacyStatus() const;
    void setPrivacyStatus(const QString &privacy_status);
    bool is_privacy_status_Set() const;
    bool is_privacy_status_Valid() const;

    bool isPublicStatsViewable() const;
    void setPublicStatsViewable(const bool &public_stats_viewable);
    bool is_public_stats_viewable_Set() const;
    bool is_public_stats_viewable_Valid() const;

    QDateTime getPublishAt() const;
    void setPublishAt(const QDateTime &publish_at);
    bool is_publish_at_Set() const;
    bool is_publish_at_Valid() const;

    QString getRejectionReason() const;
    void setRejectionReason(const QString &rejection_reason);
    bool is_rejection_reason_Set() const;
    bool is_rejection_reason_Valid() const;

    bool isSelfDeclaredMadeForKids() const;
    void setSelfDeclaredMadeForKids(const bool &self_declared_made_for_kids);
    bool is_self_declared_made_for_kids_Set() const;
    bool is_self_declared_made_for_kids_Valid() const;

    QString getUploadStatus() const;
    void setUploadStatus(const QString &upload_status);
    bool is_upload_status_Set() const;
    bool is_upload_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_embeddable;
    bool m_embeddable_isSet;
    bool m_embeddable_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    bool m_made_for_kids;
    bool m_made_for_kids_isSet;
    bool m_made_for_kids_isValid;

    QString m_privacy_status;
    bool m_privacy_status_isSet;
    bool m_privacy_status_isValid;

    bool m_public_stats_viewable;
    bool m_public_stats_viewable_isSet;
    bool m_public_stats_viewable_isValid;

    QDateTime m_publish_at;
    bool m_publish_at_isSet;
    bool m_publish_at_isValid;

    QString m_rejection_reason;
    bool m_rejection_reason_isSet;
    bool m_rejection_reason_isValid;

    bool m_self_declared_made_for_kids;
    bool m_self_declared_made_for_kids_isSet;
    bool m_self_declared_made_for_kids_isValid;

    QString m_upload_status;
    bool m_upload_status_isSet;
    bool m_upload_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoStatus)

#endif // OAIVideoStatus_H
