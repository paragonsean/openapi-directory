/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommentThreadSnippet.h
 *
 * Basic details about a comment thread.
 */

#ifndef OAICommentThreadSnippet_H
#define OAICommentThreadSnippet_H

#include <QJsonObject>

#include "OAIComment.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComment;

class OAICommentThreadSnippet : public OAIObject {
public:
    OAICommentThreadSnippet();
    OAICommentThreadSnippet(QString json);
    ~OAICommentThreadSnippet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanReply() const;
    void setCanReply(const bool &can_reply);
    bool is_can_reply_Set() const;
    bool is_can_reply_Valid() const;

    QString getChannelId() const;
    void setChannelId(const QString &channel_id);
    bool is_channel_id_Set() const;
    bool is_channel_id_Valid() const;

    bool isIsPublic() const;
    void setIsPublic(const bool &is_public);
    bool is_is_public_Set() const;
    bool is_is_public_Valid() const;

    OAIComment getTopLevelComment() const;
    void setTopLevelComment(const OAIComment &top_level_comment);
    bool is_top_level_comment_Set() const;
    bool is_top_level_comment_Valid() const;

    qint32 getTotalReplyCount() const;
    void setTotalReplyCount(const qint32 &total_reply_count);
    bool is_total_reply_count_Set() const;
    bool is_total_reply_count_Valid() const;

    QString getVideoId() const;
    void setVideoId(const QString &video_id);
    bool is_video_id_Set() const;
    bool is_video_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_reply;
    bool m_can_reply_isSet;
    bool m_can_reply_isValid;

    QString m_channel_id;
    bool m_channel_id_isSet;
    bool m_channel_id_isValid;

    bool m_is_public;
    bool m_is_public_isSet;
    bool m_is_public_isValid;

    OAIComment m_top_level_comment;
    bool m_top_level_comment_isSet;
    bool m_top_level_comment_isValid;

    qint32 m_total_reply_count;
    bool m_total_reply_count_isSet;
    bool m_total_reply_count_isValid;

    QString m_video_id;
    bool m_video_id_isSet;
    bool m_video_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommentThreadSnippet)

#endif // OAICommentThreadSnippet_H
