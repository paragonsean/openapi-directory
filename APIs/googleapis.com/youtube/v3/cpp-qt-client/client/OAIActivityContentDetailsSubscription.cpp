/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivityContentDetailsSubscription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivityContentDetailsSubscription::OAIActivityContentDetailsSubscription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivityContentDetailsSubscription::OAIActivityContentDetailsSubscription() {
    this->initializeModel();
}

OAIActivityContentDetailsSubscription::~OAIActivityContentDetailsSubscription() {}

void OAIActivityContentDetailsSubscription::initializeModel() {

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;
}

void OAIActivityContentDetailsSubscription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivityContentDetailsSubscription::fromJsonObject(QJsonObject json) {

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceId")]);
    m_resource_id_isSet = !json[QString("resourceId")].isNull() && m_resource_id_isValid;
}

QString OAIActivityContentDetailsSubscription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivityContentDetailsSubscription::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_id.isSet()) {
        obj.insert(QString("resourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    return obj;
}

OAIResourceId OAIActivityContentDetailsSubscription::getResourceId() const {
    return m_resource_id;
}
void OAIActivityContentDetailsSubscription::setResourceId(const OAIResourceId &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAIActivityContentDetailsSubscription::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAIActivityContentDetailsSubscription::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

bool OAIActivityContentDetailsSubscription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivityContentDetailsSubscription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
