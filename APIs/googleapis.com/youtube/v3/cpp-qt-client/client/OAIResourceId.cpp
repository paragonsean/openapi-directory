/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceId::OAIResourceId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceId::OAIResourceId() {
    this->initializeModel();
}

OAIResourceId::~OAIResourceId() {}

void OAIResourceId::initializeModel() {

    m_channel_id_isSet = false;
    m_channel_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_playlist_id_isSet = false;
    m_playlist_id_isValid = false;

    m_video_id_isSet = false;
    m_video_id_isValid = false;
}

void OAIResourceId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceId::fromJsonObject(QJsonObject json) {

    m_channel_id_isValid = ::OpenAPI::fromJsonValue(m_channel_id, json[QString("channelId")]);
    m_channel_id_isSet = !json[QString("channelId")].isNull() && m_channel_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_playlist_id_isValid = ::OpenAPI::fromJsonValue(m_playlist_id, json[QString("playlistId")]);
    m_playlist_id_isSet = !json[QString("playlistId")].isNull() && m_playlist_id_isValid;

    m_video_id_isValid = ::OpenAPI::fromJsonValue(m_video_id, json[QString("videoId")]);
    m_video_id_isSet = !json[QString("videoId")].isNull() && m_video_id_isValid;
}

QString OAIResourceId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceId::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_id_isSet) {
        obj.insert(QString("channelId"), ::OpenAPI::toJsonValue(m_channel_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_playlist_id_isSet) {
        obj.insert(QString("playlistId"), ::OpenAPI::toJsonValue(m_playlist_id));
    }
    if (m_video_id_isSet) {
        obj.insert(QString("videoId"), ::OpenAPI::toJsonValue(m_video_id));
    }
    return obj;
}

QString OAIResourceId::getChannelId() const {
    return m_channel_id;
}
void OAIResourceId::setChannelId(const QString &channel_id) {
    m_channel_id = channel_id;
    m_channel_id_isSet = true;
}

bool OAIResourceId::is_channel_id_Set() const{
    return m_channel_id_isSet;
}

bool OAIResourceId::is_channel_id_Valid() const{
    return m_channel_id_isValid;
}

QString OAIResourceId::getKind() const {
    return m_kind;
}
void OAIResourceId::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIResourceId::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIResourceId::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIResourceId::getPlaylistId() const {
    return m_playlist_id;
}
void OAIResourceId::setPlaylistId(const QString &playlist_id) {
    m_playlist_id = playlist_id;
    m_playlist_id_isSet = true;
}

bool OAIResourceId::is_playlist_id_Set() const{
    return m_playlist_id_isSet;
}

bool OAIResourceId::is_playlist_id_Valid() const{
    return m_playlist_id_isValid;
}

QString OAIResourceId::getVideoId() const {
    return m_video_id;
}
void OAIResourceId::setVideoId(const QString &video_id) {
    m_video_id = video_id;
    m_video_id_isSet = true;
}

bool OAIResourceId::is_video_id_Set() const{
    return m_video_id_isSet;
}

bool OAIResourceId::is_video_id_Valid() const{
    return m_video_id_isValid;
}

bool OAIResourceId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_playlist_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
