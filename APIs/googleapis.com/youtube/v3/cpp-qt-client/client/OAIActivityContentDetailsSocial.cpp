/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivityContentDetailsSocial.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivityContentDetailsSocial::OAIActivityContentDetailsSocial(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivityContentDetailsSocial::OAIActivityContentDetailsSocial() {
    this->initializeModel();
}

OAIActivityContentDetailsSocial::~OAIActivityContentDetailsSocial() {}

void OAIActivityContentDetailsSocial::initializeModel() {

    m_author_isSet = false;
    m_author_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_reference_url_isSet = false;
    m_reference_url_isValid = false;

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIActivityContentDetailsSocial::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivityContentDetailsSocial::fromJsonObject(QJsonObject json) {

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("imageUrl")]);
    m_image_url_isSet = !json[QString("imageUrl")].isNull() && m_image_url_isValid;

    m_reference_url_isValid = ::OpenAPI::fromJsonValue(m_reference_url, json[QString("referenceUrl")]);
    m_reference_url_isSet = !json[QString("referenceUrl")].isNull() && m_reference_url_isValid;

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("resourceId")]);
    m_resource_id_isSet = !json[QString("resourceId")].isNull() && m_resource_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIActivityContentDetailsSocial::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivityContentDetailsSocial::asJsonObject() const {
    QJsonObject obj;
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("imageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_reference_url_isSet) {
        obj.insert(QString("referenceUrl"), ::OpenAPI::toJsonValue(m_reference_url));
    }
    if (m_resource_id.isSet()) {
        obj.insert(QString("resourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIActivityContentDetailsSocial::getAuthor() const {
    return m_author;
}
void OAIActivityContentDetailsSocial::setAuthor(const QString &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIActivityContentDetailsSocial::is_author_Set() const{
    return m_author_isSet;
}

bool OAIActivityContentDetailsSocial::is_author_Valid() const{
    return m_author_isValid;
}

QString OAIActivityContentDetailsSocial::getImageUrl() const {
    return m_image_url;
}
void OAIActivityContentDetailsSocial::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIActivityContentDetailsSocial::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIActivityContentDetailsSocial::is_image_url_Valid() const{
    return m_image_url_isValid;
}

QString OAIActivityContentDetailsSocial::getReferenceUrl() const {
    return m_reference_url;
}
void OAIActivityContentDetailsSocial::setReferenceUrl(const QString &reference_url) {
    m_reference_url = reference_url;
    m_reference_url_isSet = true;
}

bool OAIActivityContentDetailsSocial::is_reference_url_Set() const{
    return m_reference_url_isSet;
}

bool OAIActivityContentDetailsSocial::is_reference_url_Valid() const{
    return m_reference_url_isValid;
}

OAIResourceId OAIActivityContentDetailsSocial::getResourceId() const {
    return m_resource_id;
}
void OAIActivityContentDetailsSocial::setResourceId(const OAIResourceId &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAIActivityContentDetailsSocial::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAIActivityContentDetailsSocial::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

QString OAIActivityContentDetailsSocial::getType() const {
    return m_type;
}
void OAIActivityContentDetailsSocial::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIActivityContentDetailsSocial::is_type_Set() const{
    return m_type_isSet;
}

bool OAIActivityContentDetailsSocial::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIActivityContentDetailsSocial::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivityContentDetailsSocial::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
