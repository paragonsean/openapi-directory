/**
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImageSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImageSettings::OAIImageSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImageSettings::OAIImageSettings() {
    this->initializeModel();
}

OAIImageSettings::~OAIImageSettings() {}

void OAIImageSettings::initializeModel() {

    m_background_image_url_isSet = false;
    m_background_image_url_isValid = false;

    m_banner_external_url_isSet = false;
    m_banner_external_url_isValid = false;

    m_banner_image_url_isSet = false;
    m_banner_image_url_isValid = false;

    m_banner_mobile_extra_hd_image_url_isSet = false;
    m_banner_mobile_extra_hd_image_url_isValid = false;

    m_banner_mobile_hd_image_url_isSet = false;
    m_banner_mobile_hd_image_url_isValid = false;

    m_banner_mobile_image_url_isSet = false;
    m_banner_mobile_image_url_isValid = false;

    m_banner_mobile_low_image_url_isSet = false;
    m_banner_mobile_low_image_url_isValid = false;

    m_banner_mobile_medium_hd_image_url_isSet = false;
    m_banner_mobile_medium_hd_image_url_isValid = false;

    m_banner_tablet_extra_hd_image_url_isSet = false;
    m_banner_tablet_extra_hd_image_url_isValid = false;

    m_banner_tablet_hd_image_url_isSet = false;
    m_banner_tablet_hd_image_url_isValid = false;

    m_banner_tablet_image_url_isSet = false;
    m_banner_tablet_image_url_isValid = false;

    m_banner_tablet_low_image_url_isSet = false;
    m_banner_tablet_low_image_url_isValid = false;

    m_banner_tv_high_image_url_isSet = false;
    m_banner_tv_high_image_url_isValid = false;

    m_banner_tv_image_url_isSet = false;
    m_banner_tv_image_url_isValid = false;

    m_banner_tv_low_image_url_isSet = false;
    m_banner_tv_low_image_url_isValid = false;

    m_banner_tv_medium_image_url_isSet = false;
    m_banner_tv_medium_image_url_isValid = false;

    m_large_branded_banner_image_imap_script_isSet = false;
    m_large_branded_banner_image_imap_script_isValid = false;

    m_large_branded_banner_image_url_isSet = false;
    m_large_branded_banner_image_url_isValid = false;

    m_small_branded_banner_image_imap_script_isSet = false;
    m_small_branded_banner_image_imap_script_isValid = false;

    m_small_branded_banner_image_url_isSet = false;
    m_small_branded_banner_image_url_isValid = false;

    m_tracking_image_url_isSet = false;
    m_tracking_image_url_isValid = false;

    m_watch_icon_image_url_isSet = false;
    m_watch_icon_image_url_isValid = false;
}

void OAIImageSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImageSettings::fromJsonObject(QJsonObject json) {

    m_background_image_url_isValid = ::OpenAPI::fromJsonValue(m_background_image_url, json[QString("backgroundImageUrl")]);
    m_background_image_url_isSet = !json[QString("backgroundImageUrl")].isNull() && m_background_image_url_isValid;

    m_banner_external_url_isValid = ::OpenAPI::fromJsonValue(m_banner_external_url, json[QString("bannerExternalUrl")]);
    m_banner_external_url_isSet = !json[QString("bannerExternalUrl")].isNull() && m_banner_external_url_isValid;

    m_banner_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_image_url, json[QString("bannerImageUrl")]);
    m_banner_image_url_isSet = !json[QString("bannerImageUrl")].isNull() && m_banner_image_url_isValid;

    m_banner_mobile_extra_hd_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_mobile_extra_hd_image_url, json[QString("bannerMobileExtraHdImageUrl")]);
    m_banner_mobile_extra_hd_image_url_isSet = !json[QString("bannerMobileExtraHdImageUrl")].isNull() && m_banner_mobile_extra_hd_image_url_isValid;

    m_banner_mobile_hd_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_mobile_hd_image_url, json[QString("bannerMobileHdImageUrl")]);
    m_banner_mobile_hd_image_url_isSet = !json[QString("bannerMobileHdImageUrl")].isNull() && m_banner_mobile_hd_image_url_isValid;

    m_banner_mobile_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_mobile_image_url, json[QString("bannerMobileImageUrl")]);
    m_banner_mobile_image_url_isSet = !json[QString("bannerMobileImageUrl")].isNull() && m_banner_mobile_image_url_isValid;

    m_banner_mobile_low_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_mobile_low_image_url, json[QString("bannerMobileLowImageUrl")]);
    m_banner_mobile_low_image_url_isSet = !json[QString("bannerMobileLowImageUrl")].isNull() && m_banner_mobile_low_image_url_isValid;

    m_banner_mobile_medium_hd_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_mobile_medium_hd_image_url, json[QString("bannerMobileMediumHdImageUrl")]);
    m_banner_mobile_medium_hd_image_url_isSet = !json[QString("bannerMobileMediumHdImageUrl")].isNull() && m_banner_mobile_medium_hd_image_url_isValid;

    m_banner_tablet_extra_hd_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tablet_extra_hd_image_url, json[QString("bannerTabletExtraHdImageUrl")]);
    m_banner_tablet_extra_hd_image_url_isSet = !json[QString("bannerTabletExtraHdImageUrl")].isNull() && m_banner_tablet_extra_hd_image_url_isValid;

    m_banner_tablet_hd_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tablet_hd_image_url, json[QString("bannerTabletHdImageUrl")]);
    m_banner_tablet_hd_image_url_isSet = !json[QString("bannerTabletHdImageUrl")].isNull() && m_banner_tablet_hd_image_url_isValid;

    m_banner_tablet_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tablet_image_url, json[QString("bannerTabletImageUrl")]);
    m_banner_tablet_image_url_isSet = !json[QString("bannerTabletImageUrl")].isNull() && m_banner_tablet_image_url_isValid;

    m_banner_tablet_low_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tablet_low_image_url, json[QString("bannerTabletLowImageUrl")]);
    m_banner_tablet_low_image_url_isSet = !json[QString("bannerTabletLowImageUrl")].isNull() && m_banner_tablet_low_image_url_isValid;

    m_banner_tv_high_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tv_high_image_url, json[QString("bannerTvHighImageUrl")]);
    m_banner_tv_high_image_url_isSet = !json[QString("bannerTvHighImageUrl")].isNull() && m_banner_tv_high_image_url_isValid;

    m_banner_tv_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tv_image_url, json[QString("bannerTvImageUrl")]);
    m_banner_tv_image_url_isSet = !json[QString("bannerTvImageUrl")].isNull() && m_banner_tv_image_url_isValid;

    m_banner_tv_low_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tv_low_image_url, json[QString("bannerTvLowImageUrl")]);
    m_banner_tv_low_image_url_isSet = !json[QString("bannerTvLowImageUrl")].isNull() && m_banner_tv_low_image_url_isValid;

    m_banner_tv_medium_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_tv_medium_image_url, json[QString("bannerTvMediumImageUrl")]);
    m_banner_tv_medium_image_url_isSet = !json[QString("bannerTvMediumImageUrl")].isNull() && m_banner_tv_medium_image_url_isValid;

    m_large_branded_banner_image_imap_script_isValid = ::OpenAPI::fromJsonValue(m_large_branded_banner_image_imap_script, json[QString("largeBrandedBannerImageImapScript")]);
    m_large_branded_banner_image_imap_script_isSet = !json[QString("largeBrandedBannerImageImapScript")].isNull() && m_large_branded_banner_image_imap_script_isValid;

    m_large_branded_banner_image_url_isValid = ::OpenAPI::fromJsonValue(m_large_branded_banner_image_url, json[QString("largeBrandedBannerImageUrl")]);
    m_large_branded_banner_image_url_isSet = !json[QString("largeBrandedBannerImageUrl")].isNull() && m_large_branded_banner_image_url_isValid;

    m_small_branded_banner_image_imap_script_isValid = ::OpenAPI::fromJsonValue(m_small_branded_banner_image_imap_script, json[QString("smallBrandedBannerImageImapScript")]);
    m_small_branded_banner_image_imap_script_isSet = !json[QString("smallBrandedBannerImageImapScript")].isNull() && m_small_branded_banner_image_imap_script_isValid;

    m_small_branded_banner_image_url_isValid = ::OpenAPI::fromJsonValue(m_small_branded_banner_image_url, json[QString("smallBrandedBannerImageUrl")]);
    m_small_branded_banner_image_url_isSet = !json[QString("smallBrandedBannerImageUrl")].isNull() && m_small_branded_banner_image_url_isValid;

    m_tracking_image_url_isValid = ::OpenAPI::fromJsonValue(m_tracking_image_url, json[QString("trackingImageUrl")]);
    m_tracking_image_url_isSet = !json[QString("trackingImageUrl")].isNull() && m_tracking_image_url_isValid;

    m_watch_icon_image_url_isValid = ::OpenAPI::fromJsonValue(m_watch_icon_image_url, json[QString("watchIconImageUrl")]);
    m_watch_icon_image_url_isSet = !json[QString("watchIconImageUrl")].isNull() && m_watch_icon_image_url_isValid;
}

QString OAIImageSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImageSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_background_image_url.isSet()) {
        obj.insert(QString("backgroundImageUrl"), ::OpenAPI::toJsonValue(m_background_image_url));
    }
    if (m_banner_external_url_isSet) {
        obj.insert(QString("bannerExternalUrl"), ::OpenAPI::toJsonValue(m_banner_external_url));
    }
    if (m_banner_image_url_isSet) {
        obj.insert(QString("bannerImageUrl"), ::OpenAPI::toJsonValue(m_banner_image_url));
    }
    if (m_banner_mobile_extra_hd_image_url_isSet) {
        obj.insert(QString("bannerMobileExtraHdImageUrl"), ::OpenAPI::toJsonValue(m_banner_mobile_extra_hd_image_url));
    }
    if (m_banner_mobile_hd_image_url_isSet) {
        obj.insert(QString("bannerMobileHdImageUrl"), ::OpenAPI::toJsonValue(m_banner_mobile_hd_image_url));
    }
    if (m_banner_mobile_image_url_isSet) {
        obj.insert(QString("bannerMobileImageUrl"), ::OpenAPI::toJsonValue(m_banner_mobile_image_url));
    }
    if (m_banner_mobile_low_image_url_isSet) {
        obj.insert(QString("bannerMobileLowImageUrl"), ::OpenAPI::toJsonValue(m_banner_mobile_low_image_url));
    }
    if (m_banner_mobile_medium_hd_image_url_isSet) {
        obj.insert(QString("bannerMobileMediumHdImageUrl"), ::OpenAPI::toJsonValue(m_banner_mobile_medium_hd_image_url));
    }
    if (m_banner_tablet_extra_hd_image_url_isSet) {
        obj.insert(QString("bannerTabletExtraHdImageUrl"), ::OpenAPI::toJsonValue(m_banner_tablet_extra_hd_image_url));
    }
    if (m_banner_tablet_hd_image_url_isSet) {
        obj.insert(QString("bannerTabletHdImageUrl"), ::OpenAPI::toJsonValue(m_banner_tablet_hd_image_url));
    }
    if (m_banner_tablet_image_url_isSet) {
        obj.insert(QString("bannerTabletImageUrl"), ::OpenAPI::toJsonValue(m_banner_tablet_image_url));
    }
    if (m_banner_tablet_low_image_url_isSet) {
        obj.insert(QString("bannerTabletLowImageUrl"), ::OpenAPI::toJsonValue(m_banner_tablet_low_image_url));
    }
    if (m_banner_tv_high_image_url_isSet) {
        obj.insert(QString("bannerTvHighImageUrl"), ::OpenAPI::toJsonValue(m_banner_tv_high_image_url));
    }
    if (m_banner_tv_image_url_isSet) {
        obj.insert(QString("bannerTvImageUrl"), ::OpenAPI::toJsonValue(m_banner_tv_image_url));
    }
    if (m_banner_tv_low_image_url_isSet) {
        obj.insert(QString("bannerTvLowImageUrl"), ::OpenAPI::toJsonValue(m_banner_tv_low_image_url));
    }
    if (m_banner_tv_medium_image_url_isSet) {
        obj.insert(QString("bannerTvMediumImageUrl"), ::OpenAPI::toJsonValue(m_banner_tv_medium_image_url));
    }
    if (m_large_branded_banner_image_imap_script.isSet()) {
        obj.insert(QString("largeBrandedBannerImageImapScript"), ::OpenAPI::toJsonValue(m_large_branded_banner_image_imap_script));
    }
    if (m_large_branded_banner_image_url.isSet()) {
        obj.insert(QString("largeBrandedBannerImageUrl"), ::OpenAPI::toJsonValue(m_large_branded_banner_image_url));
    }
    if (m_small_branded_banner_image_imap_script.isSet()) {
        obj.insert(QString("smallBrandedBannerImageImapScript"), ::OpenAPI::toJsonValue(m_small_branded_banner_image_imap_script));
    }
    if (m_small_branded_banner_image_url.isSet()) {
        obj.insert(QString("smallBrandedBannerImageUrl"), ::OpenAPI::toJsonValue(m_small_branded_banner_image_url));
    }
    if (m_tracking_image_url_isSet) {
        obj.insert(QString("trackingImageUrl"), ::OpenAPI::toJsonValue(m_tracking_image_url));
    }
    if (m_watch_icon_image_url_isSet) {
        obj.insert(QString("watchIconImageUrl"), ::OpenAPI::toJsonValue(m_watch_icon_image_url));
    }
    return obj;
}

OAILocalizedProperty OAIImageSettings::getBackgroundImageUrl() const {
    return m_background_image_url;
}
void OAIImageSettings::setBackgroundImageUrl(const OAILocalizedProperty &background_image_url) {
    m_background_image_url = background_image_url;
    m_background_image_url_isSet = true;
}

bool OAIImageSettings::is_background_image_url_Set() const{
    return m_background_image_url_isSet;
}

bool OAIImageSettings::is_background_image_url_Valid() const{
    return m_background_image_url_isValid;
}

QString OAIImageSettings::getBannerExternalUrl() const {
    return m_banner_external_url;
}
void OAIImageSettings::setBannerExternalUrl(const QString &banner_external_url) {
    m_banner_external_url = banner_external_url;
    m_banner_external_url_isSet = true;
}

bool OAIImageSettings::is_banner_external_url_Set() const{
    return m_banner_external_url_isSet;
}

bool OAIImageSettings::is_banner_external_url_Valid() const{
    return m_banner_external_url_isValid;
}

QString OAIImageSettings::getBannerImageUrl() const {
    return m_banner_image_url;
}
void OAIImageSettings::setBannerImageUrl(const QString &banner_image_url) {
    m_banner_image_url = banner_image_url;
    m_banner_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_image_url_Set() const{
    return m_banner_image_url_isSet;
}

bool OAIImageSettings::is_banner_image_url_Valid() const{
    return m_banner_image_url_isValid;
}

QString OAIImageSettings::getBannerMobileExtraHdImageUrl() const {
    return m_banner_mobile_extra_hd_image_url;
}
void OAIImageSettings::setBannerMobileExtraHdImageUrl(const QString &banner_mobile_extra_hd_image_url) {
    m_banner_mobile_extra_hd_image_url = banner_mobile_extra_hd_image_url;
    m_banner_mobile_extra_hd_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_mobile_extra_hd_image_url_Set() const{
    return m_banner_mobile_extra_hd_image_url_isSet;
}

bool OAIImageSettings::is_banner_mobile_extra_hd_image_url_Valid() const{
    return m_banner_mobile_extra_hd_image_url_isValid;
}

QString OAIImageSettings::getBannerMobileHdImageUrl() const {
    return m_banner_mobile_hd_image_url;
}
void OAIImageSettings::setBannerMobileHdImageUrl(const QString &banner_mobile_hd_image_url) {
    m_banner_mobile_hd_image_url = banner_mobile_hd_image_url;
    m_banner_mobile_hd_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_mobile_hd_image_url_Set() const{
    return m_banner_mobile_hd_image_url_isSet;
}

bool OAIImageSettings::is_banner_mobile_hd_image_url_Valid() const{
    return m_banner_mobile_hd_image_url_isValid;
}

QString OAIImageSettings::getBannerMobileImageUrl() const {
    return m_banner_mobile_image_url;
}
void OAIImageSettings::setBannerMobileImageUrl(const QString &banner_mobile_image_url) {
    m_banner_mobile_image_url = banner_mobile_image_url;
    m_banner_mobile_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_mobile_image_url_Set() const{
    return m_banner_mobile_image_url_isSet;
}

bool OAIImageSettings::is_banner_mobile_image_url_Valid() const{
    return m_banner_mobile_image_url_isValid;
}

QString OAIImageSettings::getBannerMobileLowImageUrl() const {
    return m_banner_mobile_low_image_url;
}
void OAIImageSettings::setBannerMobileLowImageUrl(const QString &banner_mobile_low_image_url) {
    m_banner_mobile_low_image_url = banner_mobile_low_image_url;
    m_banner_mobile_low_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_mobile_low_image_url_Set() const{
    return m_banner_mobile_low_image_url_isSet;
}

bool OAIImageSettings::is_banner_mobile_low_image_url_Valid() const{
    return m_banner_mobile_low_image_url_isValid;
}

QString OAIImageSettings::getBannerMobileMediumHdImageUrl() const {
    return m_banner_mobile_medium_hd_image_url;
}
void OAIImageSettings::setBannerMobileMediumHdImageUrl(const QString &banner_mobile_medium_hd_image_url) {
    m_banner_mobile_medium_hd_image_url = banner_mobile_medium_hd_image_url;
    m_banner_mobile_medium_hd_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_mobile_medium_hd_image_url_Set() const{
    return m_banner_mobile_medium_hd_image_url_isSet;
}

bool OAIImageSettings::is_banner_mobile_medium_hd_image_url_Valid() const{
    return m_banner_mobile_medium_hd_image_url_isValid;
}

QString OAIImageSettings::getBannerTabletExtraHdImageUrl() const {
    return m_banner_tablet_extra_hd_image_url;
}
void OAIImageSettings::setBannerTabletExtraHdImageUrl(const QString &banner_tablet_extra_hd_image_url) {
    m_banner_tablet_extra_hd_image_url = banner_tablet_extra_hd_image_url;
    m_banner_tablet_extra_hd_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tablet_extra_hd_image_url_Set() const{
    return m_banner_tablet_extra_hd_image_url_isSet;
}

bool OAIImageSettings::is_banner_tablet_extra_hd_image_url_Valid() const{
    return m_banner_tablet_extra_hd_image_url_isValid;
}

QString OAIImageSettings::getBannerTabletHdImageUrl() const {
    return m_banner_tablet_hd_image_url;
}
void OAIImageSettings::setBannerTabletHdImageUrl(const QString &banner_tablet_hd_image_url) {
    m_banner_tablet_hd_image_url = banner_tablet_hd_image_url;
    m_banner_tablet_hd_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tablet_hd_image_url_Set() const{
    return m_banner_tablet_hd_image_url_isSet;
}

bool OAIImageSettings::is_banner_tablet_hd_image_url_Valid() const{
    return m_banner_tablet_hd_image_url_isValid;
}

QString OAIImageSettings::getBannerTabletImageUrl() const {
    return m_banner_tablet_image_url;
}
void OAIImageSettings::setBannerTabletImageUrl(const QString &banner_tablet_image_url) {
    m_banner_tablet_image_url = banner_tablet_image_url;
    m_banner_tablet_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tablet_image_url_Set() const{
    return m_banner_tablet_image_url_isSet;
}

bool OAIImageSettings::is_banner_tablet_image_url_Valid() const{
    return m_banner_tablet_image_url_isValid;
}

QString OAIImageSettings::getBannerTabletLowImageUrl() const {
    return m_banner_tablet_low_image_url;
}
void OAIImageSettings::setBannerTabletLowImageUrl(const QString &banner_tablet_low_image_url) {
    m_banner_tablet_low_image_url = banner_tablet_low_image_url;
    m_banner_tablet_low_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tablet_low_image_url_Set() const{
    return m_banner_tablet_low_image_url_isSet;
}

bool OAIImageSettings::is_banner_tablet_low_image_url_Valid() const{
    return m_banner_tablet_low_image_url_isValid;
}

QString OAIImageSettings::getBannerTvHighImageUrl() const {
    return m_banner_tv_high_image_url;
}
void OAIImageSettings::setBannerTvHighImageUrl(const QString &banner_tv_high_image_url) {
    m_banner_tv_high_image_url = banner_tv_high_image_url;
    m_banner_tv_high_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tv_high_image_url_Set() const{
    return m_banner_tv_high_image_url_isSet;
}

bool OAIImageSettings::is_banner_tv_high_image_url_Valid() const{
    return m_banner_tv_high_image_url_isValid;
}

QString OAIImageSettings::getBannerTvImageUrl() const {
    return m_banner_tv_image_url;
}
void OAIImageSettings::setBannerTvImageUrl(const QString &banner_tv_image_url) {
    m_banner_tv_image_url = banner_tv_image_url;
    m_banner_tv_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tv_image_url_Set() const{
    return m_banner_tv_image_url_isSet;
}

bool OAIImageSettings::is_banner_tv_image_url_Valid() const{
    return m_banner_tv_image_url_isValid;
}

QString OAIImageSettings::getBannerTvLowImageUrl() const {
    return m_banner_tv_low_image_url;
}
void OAIImageSettings::setBannerTvLowImageUrl(const QString &banner_tv_low_image_url) {
    m_banner_tv_low_image_url = banner_tv_low_image_url;
    m_banner_tv_low_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tv_low_image_url_Set() const{
    return m_banner_tv_low_image_url_isSet;
}

bool OAIImageSettings::is_banner_tv_low_image_url_Valid() const{
    return m_banner_tv_low_image_url_isValid;
}

QString OAIImageSettings::getBannerTvMediumImageUrl() const {
    return m_banner_tv_medium_image_url;
}
void OAIImageSettings::setBannerTvMediumImageUrl(const QString &banner_tv_medium_image_url) {
    m_banner_tv_medium_image_url = banner_tv_medium_image_url;
    m_banner_tv_medium_image_url_isSet = true;
}

bool OAIImageSettings::is_banner_tv_medium_image_url_Set() const{
    return m_banner_tv_medium_image_url_isSet;
}

bool OAIImageSettings::is_banner_tv_medium_image_url_Valid() const{
    return m_banner_tv_medium_image_url_isValid;
}

OAILocalizedProperty OAIImageSettings::getLargeBrandedBannerImageImapScript() const {
    return m_large_branded_banner_image_imap_script;
}
void OAIImageSettings::setLargeBrandedBannerImageImapScript(const OAILocalizedProperty &large_branded_banner_image_imap_script) {
    m_large_branded_banner_image_imap_script = large_branded_banner_image_imap_script;
    m_large_branded_banner_image_imap_script_isSet = true;
}

bool OAIImageSettings::is_large_branded_banner_image_imap_script_Set() const{
    return m_large_branded_banner_image_imap_script_isSet;
}

bool OAIImageSettings::is_large_branded_banner_image_imap_script_Valid() const{
    return m_large_branded_banner_image_imap_script_isValid;
}

OAILocalizedProperty OAIImageSettings::getLargeBrandedBannerImageUrl() const {
    return m_large_branded_banner_image_url;
}
void OAIImageSettings::setLargeBrandedBannerImageUrl(const OAILocalizedProperty &large_branded_banner_image_url) {
    m_large_branded_banner_image_url = large_branded_banner_image_url;
    m_large_branded_banner_image_url_isSet = true;
}

bool OAIImageSettings::is_large_branded_banner_image_url_Set() const{
    return m_large_branded_banner_image_url_isSet;
}

bool OAIImageSettings::is_large_branded_banner_image_url_Valid() const{
    return m_large_branded_banner_image_url_isValid;
}

OAILocalizedProperty OAIImageSettings::getSmallBrandedBannerImageImapScript() const {
    return m_small_branded_banner_image_imap_script;
}
void OAIImageSettings::setSmallBrandedBannerImageImapScript(const OAILocalizedProperty &small_branded_banner_image_imap_script) {
    m_small_branded_banner_image_imap_script = small_branded_banner_image_imap_script;
    m_small_branded_banner_image_imap_script_isSet = true;
}

bool OAIImageSettings::is_small_branded_banner_image_imap_script_Set() const{
    return m_small_branded_banner_image_imap_script_isSet;
}

bool OAIImageSettings::is_small_branded_banner_image_imap_script_Valid() const{
    return m_small_branded_banner_image_imap_script_isValid;
}

OAILocalizedProperty OAIImageSettings::getSmallBrandedBannerImageUrl() const {
    return m_small_branded_banner_image_url;
}
void OAIImageSettings::setSmallBrandedBannerImageUrl(const OAILocalizedProperty &small_branded_banner_image_url) {
    m_small_branded_banner_image_url = small_branded_banner_image_url;
    m_small_branded_banner_image_url_isSet = true;
}

bool OAIImageSettings::is_small_branded_banner_image_url_Set() const{
    return m_small_branded_banner_image_url_isSet;
}

bool OAIImageSettings::is_small_branded_banner_image_url_Valid() const{
    return m_small_branded_banner_image_url_isValid;
}

QString OAIImageSettings::getTrackingImageUrl() const {
    return m_tracking_image_url;
}
void OAIImageSettings::setTrackingImageUrl(const QString &tracking_image_url) {
    m_tracking_image_url = tracking_image_url;
    m_tracking_image_url_isSet = true;
}

bool OAIImageSettings::is_tracking_image_url_Set() const{
    return m_tracking_image_url_isSet;
}

bool OAIImageSettings::is_tracking_image_url_Valid() const{
    return m_tracking_image_url_isValid;
}

QString OAIImageSettings::getWatchIconImageUrl() const {
    return m_watch_icon_image_url;
}
void OAIImageSettings::setWatchIconImageUrl(const QString &watch_icon_image_url) {
    m_watch_icon_image_url = watch_icon_image_url;
    m_watch_icon_image_url_isSet = true;
}

bool OAIImageSettings::is_watch_icon_image_url_Set() const{
    return m_watch_icon_image_url_isSet;
}

bool OAIImageSettings::is_watch_icon_image_url_Valid() const{
    return m_watch_icon_image_url_isValid;
}

bool OAIImageSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_background_image_url.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_external_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_mobile_extra_hd_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_mobile_hd_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_mobile_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_mobile_low_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_mobile_medium_hd_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tablet_extra_hd_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tablet_hd_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tablet_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tablet_low_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tv_high_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tv_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tv_low_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_banner_tv_medium_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_large_branded_banner_image_imap_script.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_large_branded_banner_image_url.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_small_branded_banner_image_imap_script.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_small_branded_banner_image_url.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_watch_icon_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImageSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
